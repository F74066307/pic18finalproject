

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 18 22:20:29 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4520 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  0008FC                     __pidataCOMRAM:
    69                           	opt callstack 0
    70                           
    71                           ;initializer for _mq135_ro
    72                           ;setting_hardaware/adc.c: 16: double mq135_ro = 2000.0;
    73  0008FC  0000               	dw	0
    74  0008FE  44FA               	dw	17658
    75                           
    76                           	psect	smallconst
    77  000600                     __psmallconst:
    78                           	opt callstack 0
    79  000600  00                 	db	0
    80  000601  0000               	dw	0
    81  000603  0000               	dw	0
    82  000605  CFDC               	dw	53212
    83  000607  35D1               	dw	13777
    84  000609                     __end_of_dp_l:
    85                           	opt callstack 0
    86  000609  0000               	dw	0
    87  00060B  0000               	dw	0
    88  00060D  C000               	dw	49152
    89  00060F  3F15               	dw	16149
    90  000611                     __end_of_dp_h:
    91                           	opt callstack 0
    92  000611  4260               	dw	16992
    93  000613  0DA2               	dw	3490
    94  000615                     __end_ofsqrtf@tiny:
    95                           	opt callstack 0
    96  000615  A570               	dw	42352
    97  000617  36EC               	dw	14060
    98  000619                     __end_of_ivln2_l:
    99                           	opt callstack 0
   100  000619  AA3B               	dw	43579
   101  00061B  3FB8               	dw	16312
   102  00061D                     __end_of_ivln2:
   103                           	opt callstack 0
   104  00061D  384F               	dw	14415
   105  00061F  3F76               	dw	16246
   106  000621                     __end_of_cp:
   107                           	opt callstack 0
   108  000621  AA3C               	dw	43580
   109  000623  3338               	dw	13112
   110  000625                     __end_of_ovt:
   111                           	opt callstack 0
   112  000625  BE8C               	dw	48780
   113  000627  35BF               	dw	13759
   114  000629                     __end_of_lg2_l:
   115                           	opt callstack 0
   116  000629  7200               	dw	29184
   117  00062B  3F31               	dw	16177
   118  00062D                     __end_of_lg2_h:
   119                           	opt callstack 0
   120  00062D  7218               	dw	29208
   121  00062F  3F31               	dw	16177
   122  000631                     __end_of_lg2:
   123                           	opt callstack 0
   124  000631  BB4C               	dw	47948
   125  000633  3331               	dw	13105
   126  000635                     __end_of_P5:
   127                           	opt callstack 0
   128  000635  EA0E               	dw	59918
   129  000637  B5DD               	dw	46557
   130  000639                     __end_of_P4:
   131                           	opt callstack 0
   132  000639  B355               	dw	45909
   133  00063B  388A               	dw	14474
   134  00063D                     __end_of_P3:
   135                           	opt callstack 0
   136  00063D  0B61               	dw	2913
   137  00063F  BB36               	dw	47926
   138  000641                     __end_of_P2:
   139                           	opt callstack 0
   140  000641  AAAB               	dw	43691
   141  000643  3E2A               	dw	15914
   142  000645                     __end_of_P1:
   143                           	opt callstack 0
   144  000645  F142               	dw	61762
   145  000647  3E53               	dw	15955
   146  000649                     __end_of_L6:
   147                           	opt callstack 0
   148  000649  3255               	dw	12885
   149  00064B  3E6C               	dw	15980
   150  00064D                     __end_of_L5:
   151                           	opt callstack 0
   152  00064D  A305               	dw	41733
   153  00064F  3E8B               	dw	16011
   154  000651                     __end_of_L4:
   155                           	opt callstack 0
   156  000651  AAAB               	dw	43691
   157  000653  3EAA               	dw	16042
   158  000655                     __end_of_L3:
   159                           	opt callstack 0
   160  000655  6DB7               	dw	28087
   161  000657  3EDB               	dw	16091
   162  000659                     __end_of_L2:
   163                           	opt callstack 0
   164  000659  999A               	dw	39322
   165  00065B  3F19               	dw	16153
   166  00065D                     __end_of_L1:
   167                           	opt callstack 0
   168  00065D  4260               	dw	16992
   169  00065F  0DA2               	dw	3490
   170  000661                     __end_of_tiny:
   171                           	opt callstack 0
   172  000661  F2CA               	dw	62154
   173  000663  7149               	dw	29001
   174  000665                     __end_of_huge:
   175                           	opt callstack 0
   176  000665  0000               	dw	0
   177  000667  4B80               	dw	19328
   178  000669                     __end_of_two24:
   179                           	opt callstack 0
   180  000669  0000               	dw	0
   181  00066B  3F80               	dw	16256
   182  00066D  0000               	dw	0
   183  00066F  3FC0               	dw	16320
   184  000671                     __end_of_bp:
   185                           	opt callstack 0
   186  000671  AA00               	dw	43520
   187  000673  3FB8               	dw	16312
   188  000675                     __end_of_ivln2_h:
   189                           	opt callstack 0
   190  000675  23C6               	dw	9158
   191  000677  B8F6               	dw	47350
   192  000679                     __end_of_cp_l:
   193                           	opt callstack 0
   194  000679  4000               	dw	16384
   195  00067B  3F76               	dw	16246
   196  00067D                     __end_of_cp_h:
   197                           	opt callstack 0
   198  0000                     _ADRES	set	4035
   199  0000                     _TMR1	set	4046
   200  0000                     _PORTD	set	3971
   201  0000                     _TRISA	set	3986
   202  0000                     _TRISD	set	3989
   203  0000                     _TRISC	set	3988
   204  0000                     _ADCON0bits	set	4034
   205  0000                     _ADCON2	set	4032
   206  0000                     _ADCON1	set	4033
   207  0000                     _INTCONbits	set	4082
   208  0000                     _RCONbits	set	4048
   209  0000                     _RCSTAbits	set	4011
   210  0000                     _RCREG	set	4014
   211  0000                     _TXREG	set	4013
   212  0000                     _TXSTAbits	set	4012
   213  0000                     _IPR1bits	set	3999
   214  0000                     _PIE1bits	set	3997
   215  0000                     _PIR1bits	set	3998
   216  0000                     _T1CONbits	set	4045
   217  0000                     _RC3	set	31763
   218  0000                     _RC2	set	31762
   219  0000                     _CREN	set	32092
   220  0000                     _RCIF	set	31989
   221  0000                     _IRCF0	set	32412
   222  0000                     _IRCF1	set	32413
   223  0000                     _IRCF2	set	32414
   224  00067D                     STR_1:
   225  00067D  6D                 	db	109	;'m'
   226  00067E  6F                 	db	111	;'o'
   227  00067F  6E                 	db	110	;'n'
   228  000680  69                 	db	105	;'i'
   229  000681  74                 	db	116	;'t'
   230  000682  6F                 	db	111	;'o'
   231  000683  72                 	db	114	;'r'
   232  000684  00                 	db	0
   233  000685                     STR_2:
   234  000685  73                 	db	115	;'s'
   235  000686  74                 	db	116	;'t'
   236  000687  61                 	db	97	;'a'
   237  000688  72                 	db	114	;'r'
   238  000689  74                 	db	116	;'t'
   239  00068A  00                 	db	0
   240  0000                     
   241                           ; #config settings
   242  00068B  00                 	db	0	; dummy byte at the end
   243  0000                     
   244                           	psect	cinit
   245  0007DA                     __pcinit:
   246                           	opt callstack 0
   247  0007DA                     start_initialization:
   248                           	opt callstack 0
   249  0007DA                     __initialization:
   250                           	opt callstack 0
   251                           
   252                           ; Initialize objects allocated to COMRAM (4 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254  0007DA  0EFC               	movlw	low __pidataCOMRAM
   255  0007DC  6EF6               	movwf	tblptrl,c
   256  0007DE  0E08               	movlw	high __pidataCOMRAM
   257  0007E0  6EF7               	movwf	tblptrh,c
   258  0007E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259  0007E4  6EF8               	movwf	tblptru,c
   260  0007E6  EE00  F034         	lfsr	0,__pdataCOMRAM
   261  0007EA  EE10 F004          	lfsr	1,4
   262  0007EE                     copy_data0:
   263  0007EE  0009               	tblrd		*+
   264  0007F0  CFF5 FFEE          	movff	tablat,postinc0
   265  0007F4  50E5               	movf	postdec1,w,c
   266  0007F6  50E1               	movf	fsr1l,w,c
   267  0007F8  E1FA               	bnz	copy_data0
   268                           
   269                           ; Clear objects allocated to COMRAM (35 bytes)
   270  0007FA  EE00  F001         	lfsr	0,__pbssCOMRAM
   271  0007FE  0E23               	movlw	35
   272  000800                     clear_0:
   273  000800  6AEE               	clrf	postinc0,c
   274  000802  06E8               	decf	wreg,f,c
   275  000804  E1FD               	bnz	clear_0
   276  000806                     end_of_initialization:
   277                           	opt callstack 0
   278  000806                     __end_of__initialization:
   279                           	opt callstack 0
   280  000806  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   281  000808  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   282  00080A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   283  00080C  6EF8               	movwf	tblptru,c
   284  00080E  0E06               	movlw	high __Lsmallconst
   285  000810  6EF7               	movwf	tblptrh,c
   286  000812  0100               	movlb	0
   287  000814  EF78  F004         	goto	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMRAM
   290  000001                     __pbssCOMRAM:
   291                           	opt callstack 0
   292  000001                     _r:
   293                           	opt callstack 0
   294  000001                     	ds	15
   295  000010                     	ds	4
   296  000014                     _errno:
   297                           	opt callstack 0
   298  000014                     	ds	2
   299  000016                     _count:
   300                           	opt callstack 0
   301  000016                     	ds	2
   302  000018                     _lenStr:
   303                           	opt callstack 0
   304  000018                     	ds	2
   305  00001A                     _mystring:
   306                           	opt callstack 0
   307  00001A                     	ds	10
   308                           
   309                           	psect	dataCOMRAM
   310  000034                     __pdataCOMRAM:
   311                           	opt callstack 0
   312  000034                     _mq135_ro:
   313                           	opt callstack 0
   314  000034                     	ds	4
   315                           
   316                           	psect	cstackCOMRAM
   317  000024                     __pcstackCOMRAM:
   318                           	opt callstack 0
   319  000024                     ?___awmod:
   320                           	opt callstack 0
   321  000024                     UART_Write@data:
   322                           	opt callstack 0
   323  000024                     ___awmod@dividend:
   324                           	opt callstack 0
   325                           
   326                           ; 2 bytes @ 0x0
   327  000024                     	ds	2
   328  000026                     ___awmod@divisor:
   329                           	opt callstack 0
   330                           
   331                           ; 2 bytes @ 0x2
   332  000026                     	ds	2
   333  000028                     ___awmod@counter:
   334                           	opt callstack 0
   335                           
   336                           ; 1 bytes @ 0x4
   337  000028                     	ds	1
   338  000029                     ___awmod@sign:
   339                           	opt callstack 0
   340                           
   341                           ; 1 bytes @ 0x5
   342  000029                     	ds	1
   343  00002A                     ??_Lo_ISR:
   344                           
   345                           ; 1 bytes @ 0x6
   346  00002A                     	ds	5
   347  00002F                     Cmd@Value:
   348                           	opt callstack 0
   349  00002F                     Data@Value:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0xB
   353  00002F                     	ds	2
   354  000031                     Send2Lcd@Lcd:
   355                           	opt callstack 0
   356                           
   357                           ; 2 bytes @ 0xD
   358  000031                     	ds	2
   359  000033                     Send2Lcd@Adr:
   360                           	opt callstack 0
   361                           
   362                           ; 1 bytes @ 0xF
   363  000033                     	ds	1
   364  000034                     
   365                           ; 1 bytes @ 0x10
   366 ;;
   367 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   368 ;;
   369 ;; *************** function _main *****************
   370 ;; Defined at:
   371 ;;		line 10 in file "main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   385 ;;      Params:         0       0       0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0       0       0
   387 ;;      Temps:          0       0       0       0       0       0       0
   388 ;;      Totals:         0       0       0       0       0       0       0
   389 ;;Total ram usage:        0 bytes
   390 ;; Hardware stack levels required when called:    8
   391 ;; This function calls:
   392 ;;		_SYSTEM_Initialize
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text0
   399  0008F0                     __ptext0:
   400                           	opt callstack 0
   401  0008F0                     _main:
   402                           	opt callstack 23
   403                           
   404                           ;main.c: 12:     SYSTEM_Initialize() ;
   405                           
   406                           ;incstack = 0
   407  0008F0  EC37  F004         	call	_SYSTEM_Initialize	;wreg free
   408  0008F4                     l177:
   409  0008F4  D7FF               	goto	l177
   410  0008F6                     __end_of_main:
   411                           	opt callstack 0
   412                           
   413 ;; *************** function _SYSTEM_Initialize *****************
   414 ;; Defined at:
   415 ;;		line 71 in file "setting_hardaware/setting.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   429 ;;      Params:         0       0       0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0       0       0
   432 ;;      Totals:         0       0       0       0       0       0       0
   433 ;;Total ram usage:        0 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; Hardware stack levels required when called:    7
   436 ;; This function calls:
   437 ;;		_ADC_Initialize
   438 ;;		_LCD_init
   439 ;;		_OSCILLATOR_Initialize
   440 ;;		_PIN_MANAGER_Initialize
   441 ;;		_TMR1_Initialize
   442 ;;		_UART_Initialize
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           	psect	text1
   449  00086E                     __ptext1:
   450                           	opt callstack 0
   451  00086E                     _SYSTEM_Initialize:
   452                           	opt callstack 23
   453                           
   454                           ;setting_hardaware/setting.c: 73:     PIN_MANAGER_Initialize();
   455                           
   456                           ;incstack = 0
   457  00086E  EC67  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   458                           
   459                           ;setting_hardaware/setting.c: 74:     OSCILLATOR_Initialize();
   460  000872  EC74  F004         	call	_OSCILLATOR_Initialize	;wreg free
   461                           
   462                           ;setting_hardaware/setting.c: 75:     UART_Initialize();
   463  000876  EC80  F004         	call	_UART_Initialize	;wreg free
   464                           
   465                           ;setting_hardaware/setting.c: 76:     ADC_Initialize();
   466  00087A  EC5E  F004         	call	_ADC_Initialize	;wreg free
   467                           
   468                           ;setting_hardaware/setting.c: 77:     LCD_init();
   469  00087E  EC46  F003         	call	_LCD_init	;wreg free
   470                           
   471                           ;setting_hardaware/setting.c: 78:     TMR1_Initialize();
   472  000882  EC29  F004         	call	_TMR1_Initialize	;wreg free
   473  000886  0012               	return		;funcret
   474  000888                     __end_of_SYSTEM_Initialize:
   475                           	opt callstack 0
   476                           
   477 ;; *************** function _UART_Initialize *****************
   478 ;; Defined at:
   479 ;;		line 7 in file "setting_hardaware/uart.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		None
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   493 ;;      Params:         0       0       0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    4
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_SYSTEM_Initialize
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text2
   508  000900                     __ptext2:
   509                           	opt callstack 0
   510  000900                     _UART_Initialize:
   511                           	opt callstack 25
   512                           
   513                           ;incstack = 0
   514  000900  0012               	return		;funcret
   515  000902                     __end_of_UART_Initialize:
   516                           	opt callstack 0
   517                           
   518 ;; *************** function _TMR1_Initialize *****************
   519 ;; Defined at:
   520 ;;		line 60 in file "setting_hardaware/setting.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   534 ;;      Params:         0       0       0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0       0       0
   537 ;;      Totals:         0       0       0       0       0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    4
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_SYSTEM_Initialize
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text3
   549  000852                     __ptext3:
   550                           	opt callstack 0
   551  000852                     _TMR1_Initialize:
   552                           	opt callstack 25
   553                           
   554                           ;setting_hardaware/setting.c: 61:     T1CONbits.RD16=1;
   555                           
   556                           ;incstack = 0
   557  000852  8ECD               	bsf	205,7,c	;volatile
   558                           
   559                           ;setting_hardaware/setting.c: 62:     T1CONbits.T1CKPS=2;
   560  000854  50CD               	movf	205,w,c	;volatile
   561  000856  0BCF               	andlw	-49
   562  000858  0920               	iorlw	32
   563  00085A  6ECD               	movwf	205,c	;volatile
   564                           
   565                           ;setting_hardaware/setting.c: 63:     T1CONbits.TMR1ON=1;
   566  00085C  80CD               	bsf	205,0,c	;volatile
   567                           
   568                           ;setting_hardaware/setting.c: 64:     PIR1bits.TMR1IF=0;
   569  00085E  909E               	bcf	158,0,c	;volatile
   570                           
   571                           ;setting_hardaware/setting.c: 65:     PIE1bits.TMR1IE=1;
   572  000860  809D               	bsf	157,0,c	;volatile
   573                           
   574                           ;setting_hardaware/setting.c: 66:     IPR1bits.TMR1IP=1;
   575  000862  809F               	bsf	159,0,c	;volatile
   576                           
   577                           ;setting_hardaware/setting.c: 67:     TMR1=65535-(1000000/4)/4;
   578  000864  0E0B               	movlw	11
   579  000866  6ECF               	movwf	207,c	;volatile
   580  000868  0EDB               	movlw	219
   581  00086A  6ECE               	movwf	206,c	;volatile
   582  00086C  0012               	return		;funcret
   583  00086E                     __end_of_TMR1_Initialize:
   584                           	opt callstack 0
   585                           
   586 ;; *************** function _PIN_MANAGER_Initialize *****************
   587 ;; Defined at:
   588 ;;		line 12 in file "setting_hardaware/pin_manager.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   602 ;;      Params:         0       0       0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0       0       0
   605 ;;      Totals:         0       0       0       0       0       0       0
   606 ;;Total ram usage:        0 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    4
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_SYSTEM_Initialize
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text4
   617  0008CE                     __ptext4:
   618                           	opt callstack 0
   619  0008CE                     _PIN_MANAGER_Initialize:
   620                           	opt callstack 25
   621                           
   622                           ;setting_hardaware/pin_manager.c: 14:     TRISC=0X00;
   623                           
   624                           ;incstack = 0
   625  0008CE  0E00               	movlw	0
   626  0008D0  6E94               	movwf	148,c	;volatile
   627                           
   628                           ;setting_hardaware/pin_manager.c: 15:     TRISD=0X00;
   629  0008D2  0E00               	movlw	0
   630  0008D4  6E95               	movwf	149,c	;volatile
   631                           
   632                           ;setting_hardaware/pin_manager.c: 20:     TRISA = 0x03;
   633  0008D6  0E03               	movlw	3
   634  0008D8  6E92               	movwf	146,c	;volatile
   635  0008DA  0012               	return		;funcret
   636  0008DC                     __end_of_PIN_MANAGER_Initialize:
   637                           	opt callstack 0
   638                           
   639 ;; *************** function _OSCILLATOR_Initialize *****************
   640 ;; Defined at:
   641 ;;		line 81 in file "setting_hardaware/setting.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		None
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   655 ;;      Params:         0       0       0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    4
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_SYSTEM_Initialize
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text5
   670  0008E8                     __ptext5:
   671                           	opt callstack 0
   672  0008E8                     _OSCILLATOR_Initialize:
   673                           	opt callstack 25
   674                           
   675                           ;setting_hardaware/setting.c: 83:     IRCF2 = 1;
   676                           
   677                           ;incstack = 0
   678  0008E8  8CD3               	bsf	4051,6,c	;volatile
   679                           
   680                           ;setting_hardaware/setting.c: 84:     IRCF1 = 0;
   681  0008EA  9AD3               	bcf	4051,5,c	;volatile
   682                           
   683                           ;setting_hardaware/setting.c: 85:     IRCF0 = 0;
   684  0008EC  98D3               	bcf	4051,4,c	;volatile
   685  0008EE  0012               	return		;funcret
   686  0008F0                     __end_of_OSCILLATOR_Initialize:
   687                           	opt callstack 0
   688                           
   689 ;; *************** function _LCD_init *****************
   690 ;; Defined at:
   691 ;;		line 49 in file "setting_hardaware/LCD.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   705 ;;      Params:         0       0       0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0
   708 ;;      Totals:         0       0       0       0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    6
   712 ;; This function calls:
   713 ;;		_Cmd
   714 ;;		_Send2Lcd
   715 ;; This function is called by:
   716 ;;		_SYSTEM_Initialize
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text6
   721  00068C                     __ptext6:
   722                           	opt callstack 0
   723  00068C                     _LCD_init:
   724                           	opt callstack 23
   725                           
   726                           ;setting_hardaware/LCD.c: 50:     _delay((unsigned long)((40)*(1000000/4000000.0)));
   727                           
   728                           ;incstack = 0
   729  00068C  0E03               	movlw	3
   730  00068E                     u287:
   731  00068E  2EE8               	decfsz	wreg,f,c
   732  000690  D7FE               	bra	u287
   733  000692  F000               	nop	
   734                           
   735                           ;setting_hardaware/LCD.c: 51:      Cmd(0X30);
   736  000694  0E00               	movlw	0
   737  000696  6E30               	movwf	(Cmd@Value+1)^0,c
   738  000698  0E30               	movlw	48
   739  00069A  6E2F               	movwf	Cmd@Value^0,c
   740  00069C  EC51  F004         	call	_Cmd	;wreg free
   741                           
   742                           ;setting_hardaware/LCD.c: 52:     _delay((unsigned long)((40)*(1000000/4000000.0)));
   743  0006A0  0E03               	movlw	3
   744  0006A2                     u297:
   745  0006A2  2EE8               	decfsz	wreg,f,c
   746  0006A4  D7FE               	bra	u297
   747  0006A6  F000               	nop	
   748                           
   749                           ;setting_hardaware/LCD.c: 53:      Cmd(0X30);
   750  0006A8  0E00               	movlw	0
   751  0006AA  6E30               	movwf	(Cmd@Value+1)^0,c
   752  0006AC  0E30               	movlw	48
   753  0006AE  6E2F               	movwf	Cmd@Value^0,c
   754  0006B0  EC51  F004         	call	_Cmd	;wreg free
   755                           
   756                           ;setting_hardaware/LCD.c: 54:     _delay((unsigned long)((40)*(1000000/4000000.0)));
   757  0006B4  0E03               	movlw	3
   758  0006B6                     u307:
   759  0006B6  2EE8               	decfsz	wreg,f,c
   760  0006B8  D7FE               	bra	u307
   761  0006BA  F000               	nop	
   762                           
   763                           ;setting_hardaware/LCD.c: 55:     Cmd(0X30);
   764  0006BC  0E00               	movlw	0
   765  0006BE  6E30               	movwf	(Cmd@Value+1)^0,c
   766  0006C0  0E30               	movlw	48
   767  0006C2  6E2F               	movwf	Cmd@Value^0,c
   768  0006C4  EC51  F004         	call	_Cmd	;wreg free
   769                           
   770                           ;setting_hardaware/LCD.c: 56:     _delay((unsigned long)((40)*(1000000/4000000.0)));
   771  0006C8  0E03               	movlw	3
   772  0006CA                     u317:
   773  0006CA  2EE8               	decfsz	wreg,f,c
   774  0006CC  D7FE               	bra	u317
   775  0006CE  F000               	nop	
   776                           
   777                           ;setting_hardaware/LCD.c: 57:     Cmd(0X38);
   778  0006D0  0E00               	movlw	0
   779  0006D2  6E30               	movwf	(Cmd@Value+1)^0,c
   780  0006D4  0E38               	movlw	56
   781  0006D6  6E2F               	movwf	Cmd@Value^0,c
   782  0006D8  EC51  F004         	call	_Cmd	;wreg free
   783                           
   784                           ;setting_hardaware/LCD.c: 58:     Cmd(0X06);
   785  0006DC  0E00               	movlw	0
   786  0006DE  6E30               	movwf	(Cmd@Value+1)^0,c
   787  0006E0  0E06               	movlw	6
   788  0006E2  6E2F               	movwf	Cmd@Value^0,c
   789  0006E4  EC51  F004         	call	_Cmd	;wreg free
   790                           
   791                           ;setting_hardaware/LCD.c: 59:     Cmd(0X0C);
   792  0006E8  0E00               	movlw	0
   793  0006EA  6E30               	movwf	(Cmd@Value+1)^0,c
   794  0006EC  0E0C               	movlw	12
   795  0006EE  6E2F               	movwf	Cmd@Value^0,c
   796  0006F0  EC51  F004         	call	_Cmd	;wreg free
   797                           
   798                           ;setting_hardaware/LCD.c: 60:     Cmd(0X01);
   799  0006F4  0E00               	movlw	0
   800  0006F6  6E30               	movwf	(Cmd@Value+1)^0,c
   801  0006F8  0E01               	movlw	1
   802  0006FA  6E2F               	movwf	Cmd@Value^0,c
   803  0006FC  EC51  F004         	call	_Cmd	;wreg free
   804                           
   805                           ;setting_hardaware/LCD.c: 61:     _delay((unsigned long)((2000)*(1000000/4000000.0)));
   806  000700  0EA6               	movlw	166
   807  000702                     u327:
   808  000702  2EE8               	decfsz	wreg,f,c
   809  000704  D7FE               	bra	u327
   810  000706  D000               	nop2	
   811                           
   812                           ;setting_hardaware/LCD.c: 62:     Send2Lcd(0x84,"monitor");
   813  000708  0E7D               	movlw	low STR_1
   814  00070A  6E31               	movwf	Send2Lcd@Lcd^0,c
   815  00070C  0E06               	movlw	high STR_1
   816  00070E  6E32               	movwf	(Send2Lcd@Lcd+1)^0,c
   817  000710  0E84               	movlw	132
   818  000712  EC0C  F004         	call	_Send2Lcd
   819                           
   820                           ;setting_hardaware/LCD.c: 63:     Send2Lcd(0xc5,"start");
   821  000716  0E85               	movlw	low STR_2
   822  000718  6E31               	movwf	Send2Lcd@Lcd^0,c
   823  00071A  0E06               	movlw	high STR_2
   824  00071C  6E32               	movwf	(Send2Lcd@Lcd+1)^0,c
   825  00071E  0EC5               	movlw	197
   826  000720  EC0C  F004         	call	_Send2Lcd
   827  000724  0012               	return		;funcret
   828  000726                     __end_of_LCD_init:
   829                           	opt callstack 0
   830                           
   831 ;; *************** function _Send2Lcd *****************
   832 ;; Defined at:
   833 ;;		line 39 in file "setting_hardaware/LCD.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  Adr             1    wreg     const unsigned char 
   836 ;;  Lcd             2   13[COMRAM] PTR const unsigned char 
   837 ;;		 -> STR_2(6), STR_1(8), 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  Adr             1   15[COMRAM] const unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   849 ;;      Params:         2       0       0       0       0       0       0
   850 ;;      Locals:         1       0       0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0
   852 ;;      Totals:         3       0       0       0       0       0       0
   853 ;;Total ram usage:        3 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:    5
   856 ;; This function calls:
   857 ;;		_Cmd
   858 ;;		_Data
   859 ;; This function is called by:
   860 ;;		_LCD_init
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text7
   865  000818                     __ptext7:
   866                           	opt callstack 0
   867  000818                     _Send2Lcd:
   868                           	opt callstack 23
   869                           
   870                           ;incstack = 0
   871                           ;Send2Lcd@Adr stored from wreg
   872  000818  6E33               	movwf	Send2Lcd@Adr^0,c
   873                           
   874                           ;setting_hardaware/LCD.c: 39: void Send2Lcd(const char Adr, const char *Lcd);setting_har
      +                          daware/LCD.c: 40: {;setting_hardaware/LCD.c: 41:  Cmd(Adr);
   875  00081A  C033  F02F         	movff	Send2Lcd@Adr,Cmd@Value
   876  00081E  6A30               	clrf	(Cmd@Value+1)^0,c
   877  000820  EC51  F004         	call	_Cmd	;wreg free
   878                           
   879                           ;setting_hardaware/LCD.c: 42:  while(*Lcd!='\0')
   880  000824  D00C               	goto	l1296
   881  000826                     l1292:
   882                           
   883                           ;setting_hardaware/LCD.c: 43:  {;setting_hardaware/LCD.c: 44:   Data(*Lcd);
   884  000826  C031  FFF6         	movff	Send2Lcd@Lcd,tblptrl
   885  00082A  C032  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
   886  00082E                     	if	0	;tblptru may be non-zero
   887  00082E                     	endif
   888  00082E                     	if	0	;tblptru may be non-zero
   889  00082E                     	endif
   890  00082E  0008               	tblrd		*
   891  000830  50F5               	movf	tablat,w,c
   892  000832  6E2F               	movwf	Data@Value^0,c
   893  000834  6A30               	clrf	(Data@Value+1)^0,c
   894  000836  EC44  F004         	call	_Data	;wreg free
   895                           
   896                           ;setting_hardaware/LCD.c: 45:   Lcd++;
   897  00083A  4A31               	infsnz	Send2Lcd@Lcd^0,f,c
   898  00083C  2A32               	incf	(Send2Lcd@Lcd+1)^0,f,c
   899  00083E                     l1296:
   900                           
   901                           ;setting_hardaware/LCD.c: 42:  while(*Lcd!='\0')
   902  00083E  C031  FFF6         	movff	Send2Lcd@Lcd,tblptrl
   903  000842  C032  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
   904  000846                     	if	0	;tblptru may be non-zero
   905  000846                     	endif
   906  000846                     	if	0	;tblptru may be non-zero
   907  000846                     	endif
   908  000846  0008               	tblrd		*
   909  000848  50F5               	movf	tablat,w,c
   910  00084A  0900               	iorlw	0
   911  00084C  B4D8               	btfsc	status,2,c
   912  00084E  0012               	return	
   913  000850  D7EA               	goto	l1292
   914  000852                     __end_of_Send2Lcd:
   915                           	opt callstack 0
   916                           
   917 ;; *************** function _Data *****************
   918 ;; Defined at:
   919 ;;		line 27 in file "setting_hardaware/LCD.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  Value           2   11[COMRAM] int 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		None
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   933 ;;      Params:         2       0       0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0
   936 ;;      Totals:         2       0       0       0       0       0       0
   937 ;;Total ram usage:        2 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    4
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_Send2Lcd
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text8
   948  000888                     __ptext8:
   949                           	opt callstack 0
   950  000888                     _Data:
   951                           	opt callstack 23
   952                           
   953                           ;setting_hardaware/LCD.c: 27: void Data(int Value);setting_hardaware/LCD.c: 28: {;settin
      +                          g_hardaware/LCD.c: 29:  PORTD = Value;
   954                           
   955                           ;incstack = 0
   956  000888  C02F  FF83         	movff	Data@Value,3971	;volatile
   957                           
   958                           ;setting_hardaware/LCD.c: 30:  RC2 = 1;
   959  00088C  8482               	bsf	3970,2,c	;volatile
   960                           
   961                           ;setting_hardaware/LCD.c: 32:  RC3 = 0;
   962  00088E  9682               	bcf	3970,3,c	;volatile
   963                           
   964                           ;setting_hardaware/LCD.c: 33:  _delay((unsigned long)((25)*(1000000/4000000.0)));
   965  000890  D000               	nop2		;2 cycle nop
   966  000892  D000               	nop2		;2 cycle nop
   967  000894  D000               	nop2		;2 cycle nop
   968                           
   969                           ;setting_hardaware/LCD.c: 34:  RC3 = 1;
   970  000896  8682               	bsf	3970,3,c	;volatile
   971                           
   972                           ;setting_hardaware/LCD.c: 35:  _delay((unsigned long)((25)*(1000000/4000000.0)));
   973  000898  D000               	nop2		;2 cycle nop
   974  00089A  D000               	nop2		;2 cycle nop
   975  00089C  D000               	nop2		;2 cycle nop
   976                           
   977                           ;setting_hardaware/LCD.c: 36:  RC3 = 0;
   978  00089E  9682               	bcf	3970,3,c	;volatile
   979  0008A0  0012               	return		;funcret
   980  0008A2                     __end_of_Data:
   981                           	opt callstack 0
   982                           
   983 ;; *************** function _Cmd *****************
   984 ;; Defined at:
   985 ;;		line 15 in file "setting_hardaware/LCD.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  Value           2   11[COMRAM] int 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		None
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   999 ;;      Params:         2       0       0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0
  1002 ;;      Totals:         2       0       0       0       0       0       0
  1003 ;;Total ram usage:        2 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    4
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_Send2Lcd
  1010 ;;		_LCD_init
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text9
  1015  0008A2                     __ptext9:
  1016                           	opt callstack 0
  1017  0008A2                     _Cmd:
  1018                           	opt callstack 23
  1019                           
  1020                           ;setting_hardaware/LCD.c: 15: void Cmd(int Value);setting_hardaware/LCD.c: 16: {;setting
      +                          _hardaware/LCD.c: 17:  PORTD = Value;
  1021                           
  1022                           ;incstack = 0
  1023  0008A2  C02F  FF83         	movff	Cmd@Value,3971	;volatile
  1024                           
  1025                           ;setting_hardaware/LCD.c: 18:  RC2 = 0;
  1026  0008A6  9482               	bcf	3970,2,c	;volatile
  1027                           
  1028                           ;setting_hardaware/LCD.c: 20:  RC3 = 0;
  1029  0008A8  9682               	bcf	3970,3,c	;volatile
  1030                           
  1031                           ;setting_hardaware/LCD.c: 21:  _delay((unsigned long)((25)*(1000000/4000000.0)));
  1032  0008AA  D000               	nop2		;2 cycle nop
  1033  0008AC  D000               	nop2		;2 cycle nop
  1034  0008AE  D000               	nop2		;2 cycle nop
  1035                           
  1036                           ;setting_hardaware/LCD.c: 22:  RC3 = 1;
  1037  0008B0  8682               	bsf	3970,3,c	;volatile
  1038                           
  1039                           ;setting_hardaware/LCD.c: 23:  _delay((unsigned long)((25)*(1000000/4000000.0)));
  1040  0008B2  D000               	nop2		;2 cycle nop
  1041  0008B4  D000               	nop2		;2 cycle nop
  1042  0008B6  D000               	nop2		;2 cycle nop
  1043                           
  1044                           ;setting_hardaware/LCD.c: 24:  RC3 = 0;
  1045  0008B8  9682               	bcf	3970,3,c	;volatile
  1046  0008BA  0012               	return		;funcret
  1047  0008BC                     __end_of_Cmd:
  1048                           	opt callstack 0
  1049                           
  1050 ;; *************** function _ADC_Initialize *****************
  1051 ;; Defined at:
  1052 ;;		line 18 in file "setting_hardaware/adc.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1066 ;;      Params:         0       0       0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0
  1069 ;;      Totals:         0       0       0       0       0       0       0
  1070 ;;Total ram usage:        0 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    4
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_SYSTEM_Initialize
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text10
  1081  0008BC                     __ptext10:
  1082                           	opt callstack 0
  1083  0008BC                     _ADC_Initialize:
  1084                           	opt callstack 25
  1085                           
  1086                           ;setting_hardaware/adc.c: 21:     ADCON1 = 0x0D;
  1087                           
  1088                           ;incstack = 0
  1089  0008BC  0E0D               	movlw	13
  1090  0008BE  6EC1               	movwf	193,c	;volatile
  1091                           
  1092                           ;setting_hardaware/adc.c: 22:     ADCON2=0x94;
  1093  0008C0  0E94               	movlw	148
  1094  0008C2  6EC0               	movwf	192,c	;volatile
  1095                           
  1096                           ;setting_hardaware/adc.c: 23:     ADRES=0;
  1097  0008C4  0E00               	movlw	0
  1098  0008C6  6EC4               	movwf	196,c	;volatile
  1099  0008C8  0E00               	movlw	0
  1100  0008CA  6EC3               	movwf	195,c	;volatile
  1101  0008CC  0012               	return		;funcret
  1102  0008CE                     __end_of_ADC_Initialize:
  1103                           	opt callstack 0
  1104                           
  1105 ;; *************** function _Lo_ISR *****************
  1106 ;; Defined at:
  1107 ;;		line 53 in file "setting_hardaware/uart.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1121 ;;      Params:         0       0       0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0
  1123 ;;      Temps:          5       0       0       0       0       0       0
  1124 ;;      Totals:         5       0       0       0       0       0       0
  1125 ;;Total ram usage:        5 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    3
  1128 ;; This function calls:
  1129 ;;		_MyusartRead
  1130 ;; This function is called by:
  1131 ;;		Interrupt level 1
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	intcodelo
  1136  000018                     __pintcodelo:
  1137                           	opt callstack 0
  1138  000018                     _Lo_ISR:
  1139                           	opt callstack 23
  1140                           
  1141                           ;incstack = 0
  1142  000018  8038               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1143  00001A  CFD8 F02A          	movff	status,??_Lo_ISR
  1144  00001E  CFE8 F02B          	movff	wreg,??_Lo_ISR+1
  1145  000022  CFE0 F02C          	movff	bsr,??_Lo_ISR+2
  1146  000026  CFD9 F02D          	movff	fsr2l,??_Lo_ISR+3
  1147  00002A  CFDA F02E          	movff	fsr2h,??_Lo_ISR+4
  1148                           
  1149                           ;setting_hardaware/uart.c: 55:     if(RCIF)
  1150  00002E  AA9E               	btfss	3998,5,c	;volatile
  1151  000030  D007               	goto	i1l1384
  1152                           
  1153                           ;setting_hardaware/uart.c: 56:     {;setting_hardaware/uart.c: 57:         if(RCSTAbits.
      +                          OERR)
  1154  000032  A2AB               	btfss	171,1,c	;volatile
  1155  000034  D003               	goto	i1l1382
  1156                           
  1157                           ;setting_hardaware/uart.c: 58:         {;setting_hardaware/uart.c: 59:             CREN 
      +                          = 0;
  1158  000036  98AB               	bcf	4011,4,c	;volatile
  1159                           
  1160                           ;setting_hardaware/uart.c: 60:             __nop();
  1161  000038  F000               	nop	
  1162                           
  1163                           ;setting_hardaware/uart.c: 61:             CREN = 1;
  1164  00003A  88AB               	bsf	4011,4,c	;volatile
  1165  00003C                     i1l1382:
  1166                           
  1167                           ;setting_hardaware/uart.c: 64:         MyusartRead();
  1168  00003C  ECCB  F003         	call	_MyusartRead	;wreg free
  1169  000040                     i1l1384:
  1170                           
  1171                           ;setting_hardaware/uart.c: 66:     if(PIR1bits.TMR1IF){
  1172  000040  A09E               	btfss	158,0,c	;volatile
  1173  000042  D007               	goto	i1l99
  1174                           
  1175                           ;setting_hardaware/uart.c: 67:         count++;
  1176  000044  4A16               	infsnz	_count^0,f,c
  1177  000046  2A17               	incf	(_count+1)^0,f,c
  1178                           
  1179                           ;setting_hardaware/uart.c: 68:         TMR1 = 62410;
  1180  000048  0EF3               	movlw	243
  1181  00004A  6ECF               	movwf	207,c	;volatile
  1182  00004C  0ECA               	movlw	202
  1183  00004E  6ECE               	movwf	206,c	;volatile
  1184                           
  1185                           ;setting_hardaware/uart.c: 69:         PIR1bits.TMR1IF=0;
  1186  000050  909E               	bcf	158,0,c	;volatile
  1187  000052                     i1l99:
  1188  000052  C02E  FFDA         	movff	??_Lo_ISR+4,fsr2h
  1189  000056  C02D  FFD9         	movff	??_Lo_ISR+3,fsr2l
  1190  00005A  C02C  FFE0         	movff	??_Lo_ISR+2,bsr
  1191  00005E  C02B  FFE8         	movff	??_Lo_ISR+1,wreg
  1192  000062  C02A  FFD8         	movff	??_Lo_ISR,status
  1193  000066  9038               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1194  000068  0010               	retfie	
  1195  00006A                     __end_of_Lo_ISR:
  1196                           	opt callstack 0
  1197                           
  1198 ;; *************** function _MyusartRead *****************
  1199 ;; Defined at:
  1200 ;;		line 32 in file "setting_hardaware/uart.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1214 ;;      Params:         0       0       0       0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0
  1217 ;;      Totals:         0       0       0       0       0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    2
  1221 ;; This function calls:
  1222 ;;		_UART_Write
  1223 ;;		___awmod
  1224 ;; This function is called by:
  1225 ;;		_Lo_ISR
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text12
  1230  000796                     __ptext12:
  1231                           	opt callstack 0
  1232  000796                     _MyusartRead:
  1233                           	opt callstack 23
  1234                           
  1235                           ;setting_hardaware/uart.c: 34:     mystring[lenStr] = RCREG;
  1236                           
  1237                           ;incstack = 0
  1238  000796  0E1A               	movlw	low _mystring
  1239  000798  2418               	addwf	_lenStr^0,w,c
  1240  00079A  6ED9               	movwf	fsr2l,c
  1241  00079C  0E00               	movlw	high _mystring
  1242  00079E  2019               	addwfc	(_lenStr+1)^0,w,c
  1243  0007A0  6EDA               	movwf	fsr2h,c
  1244  0007A2  CFAE FFDF          	movff	4014,indf2	;volatile
  1245                           
  1246                           ;setting_hardaware/uart.c: 35:     UART_Write(mystring[lenStr]);
  1247  0007A6  0E1A               	movlw	low _mystring
  1248  0007A8  2418               	addwf	_lenStr^0,w,c
  1249  0007AA  6ED9               	movwf	fsr2l,c
  1250  0007AC  0E00               	movlw	high _mystring
  1251  0007AE  2019               	addwfc	(_lenStr+1)^0,w,c
  1252  0007B0  6EDA               	movwf	fsr2h,c
  1253  0007B2  50DF               	movf	indf2,w,c
  1254  0007B4  EC6E  F004         	call	_UART_Write
  1255                           
  1256                           ;setting_hardaware/uart.c: 36:     lenStr++;
  1257  0007B8  4A18               	infsnz	_lenStr^0,f,c
  1258  0007BA  2A19               	incf	(_lenStr+1)^0,f,c
  1259                           
  1260                           ;setting_hardaware/uart.c: 37:     lenStr %= 10;
  1261  0007BC  C018  F024         	movff	_lenStr,___awmod@dividend
  1262  0007C0  C019  F025         	movff	_lenStr+1,___awmod@dividend+1
  1263  0007C4  0E00               	movlw	0
  1264  0007C6  6E27               	movwf	(___awmod@divisor+1)^0,c
  1265  0007C8  0E0A               	movlw	10
  1266  0007CA  6E26               	movwf	___awmod@divisor^0,c
  1267  0007CC  EC93  F003         	call	___awmod	;wreg free
  1268  0007D0  C024  F018         	movff	?___awmod,_lenStr
  1269  0007D4  C025  F019         	movff	?___awmod+1,_lenStr+1
  1270  0007D8  0012               	return		;funcret
  1271  0007DA                     __end_of_MyusartRead:
  1272                           	opt callstack 0
  1273                           
  1274 ;; *************** function ___awmod *****************
  1275 ;; Defined at:
  1276 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  dividend        2    0[COMRAM] int 
  1279 ;;  divisor         2    2[COMRAM] int 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  sign            1    5[COMRAM] unsigned char 
  1282 ;;  counter         1    4[COMRAM] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2    0[COMRAM] int 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1292 ;;      Params:         4       0       0       0       0       0       0
  1293 ;;      Locals:         2       0       0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0
  1295 ;;      Totals:         6       0       0       0       0       0       0
  1296 ;;Total ram usage:        6 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    1
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_MyusartRead
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text13
  1307  000726                     __ptext13:
  1308                           	opt callstack 0
  1309  000726                     ___awmod:
  1310                           	opt callstack 23
  1311                           
  1312                           ;incstack = 0
  1313  000726  0E00               	movlw	0
  1314  000728  6E29               	movwf	___awmod@sign^0,c
  1315  00072A  AE25               	btfss	(___awmod@dividend+1)^0,7,c
  1316  00072C  D006               	goto	i1l1328
  1317  00072E  6C24               	negf	___awmod@dividend^0,c
  1318  000730  1E25               	comf	(___awmod@dividend+1)^0,f,c
  1319  000732  B0D8               	btfsc	status,0,c
  1320  000734  2A25               	incf	(___awmod@dividend+1)^0,f,c
  1321  000736  0E01               	movlw	1
  1322  000738  6E29               	movwf	___awmod@sign^0,c
  1323  00073A                     i1l1328:
  1324  00073A  AE27               	btfss	(___awmod@divisor+1)^0,7,c
  1325  00073C  D004               	goto	i1l1332
  1326  00073E  6C26               	negf	___awmod@divisor^0,c
  1327  000740  1E27               	comf	(___awmod@divisor+1)^0,f,c
  1328  000742  B0D8               	btfsc	status,0,c
  1329  000744  2A27               	incf	(___awmod@divisor+1)^0,f,c
  1330  000746                     i1l1332:
  1331  000746  5026               	movf	___awmod@divisor^0,w,c
  1332  000748  1027               	iorwf	(___awmod@divisor+1)^0,w,c
  1333  00074A  B4D8               	btfsc	status,2,c
  1334  00074C  D018               	goto	i1l1348
  1335  00074E  0E01               	movlw	1
  1336  000750  6E28               	movwf	___awmod@counter^0,c
  1337  000752  D004               	goto	i1l1338
  1338  000754                     i1l1336:
  1339  000754  90D8               	bcf	status,0,c
  1340  000756  3626               	rlcf	___awmod@divisor^0,f,c
  1341  000758  3627               	rlcf	(___awmod@divisor+1)^0,f,c
  1342  00075A  2A28               	incf	___awmod@counter^0,f,c
  1343  00075C                     i1l1338:
  1344  00075C  AE27               	btfss	(___awmod@divisor+1)^0,7,c
  1345  00075E  D7FA               	goto	i1l1336
  1346  000760                     i1u22_20:
  1347  000760  5026               	movf	___awmod@divisor^0,w,c
  1348  000762  5C24               	subwf	___awmod@dividend^0,w,c
  1349  000764  5027               	movf	(___awmod@divisor+1)^0,w,c
  1350  000766  5825               	subwfb	(___awmod@dividend+1)^0,w,c
  1351  000768  A0D8               	btfss	status,0,c
  1352  00076A  D004               	goto	i1l1344
  1353  00076C  5026               	movf	___awmod@divisor^0,w,c
  1354  00076E  5E24               	subwf	___awmod@dividend^0,f,c
  1355  000770  5027               	movf	(___awmod@divisor+1)^0,w,c
  1356  000772  5A25               	subwfb	(___awmod@dividend+1)^0,f,c
  1357  000774                     i1l1344:
  1358  000774  90D8               	bcf	status,0,c
  1359  000776  3227               	rrcf	(___awmod@divisor+1)^0,f,c
  1360  000778  3226               	rrcf	___awmod@divisor^0,f,c
  1361  00077A  2E28               	decfsz	___awmod@counter^0,f,c
  1362  00077C  D7F1               	goto	i1u22_20
  1363  00077E                     i1l1348:
  1364  00077E  5029               	movf	___awmod@sign^0,w,c
  1365  000780  B4D8               	btfsc	status,2,c
  1366  000782  D004               	goto	i1l1352
  1367  000784  6C24               	negf	___awmod@dividend^0,c
  1368  000786  1E25               	comf	(___awmod@dividend+1)^0,f,c
  1369  000788  B0D8               	btfsc	status,0,c
  1370  00078A  2A25               	incf	(___awmod@dividend+1)^0,f,c
  1371  00078C                     i1l1352:
  1372  00078C  C024  F024         	movff	___awmod@dividend,?___awmod
  1373  000790  C025  F025         	movff	___awmod@dividend+1,?___awmod+1
  1374  000794  0012               	return		;funcret
  1375  000796                     __end_of___awmod:
  1376                           	opt callstack 0
  1377                           
  1378 ;; *************** function _UART_Write *****************
  1379 ;; Defined at:
  1380 ;;		line 11 in file "setting_hardaware/uart.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  data            1    wreg     unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  data            1    0[COMRAM] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1394 ;;      Params:         0       0       0       0       0       0       0
  1395 ;;      Locals:         1       0       0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0
  1397 ;;      Totals:         1       0       0       0       0       0       0
  1398 ;;Total ram usage:        1 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    1
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_MyusartRead
  1405 ;;		_UART_Write_Text
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text14
  1410  0008DC                     __ptext14:
  1411                           	opt callstack 0
  1412  0008DC                     _UART_Write:
  1413                           	opt callstack 23
  1414                           
  1415                           ;incstack = 0
  1416                           ;UART_Write@data stored from wreg
  1417  0008DC  6E24               	movwf	UART_Write@data^0,c
  1418  0008DE                     
  1419                           ;setting_hardaware/uart.c: 11: void UART_Write(unsigned char data);setting_hardaware/uar
      +                          t.c: 12: {;setting_hardaware/uart.c: 13:     while(!TXSTAbits.TRMT);
  1420  0008DE  A2AC               	btfss	172,1,c	;volatile
  1421  0008E0  D7FE               	goto	i1l1144
  1422                           
  1423                           ;setting_hardaware/uart.c: 14:     TXREG = data;
  1424  0008E2  C024  FFAD         	movff	UART_Write@data,4013	;volatile
  1425  0008E6  0012               	return		;funcret
  1426  0008E8                     __end_of_UART_Write:
  1427                           	opt callstack 0
  1428                           
  1429 ;; *************** function _Hi_ISR *****************
  1430 ;; Defined at:
  1431 ;;		line 19 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		None
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1445 ;;      Params:         0       0       0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0
  1448 ;;      Totals:         0       0       0       0       0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		Interrupt level 2
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	intcode
  1459  000008                     __pintcode:
  1460                           	opt callstack 0
  1461  000008                     _Hi_ISR:
  1462                           	opt callstack 23
  1463                           
  1464                           ;incstack = 0
  1465  000008  8238               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1466  00000A  ED7B  F004         	call	int_func,f	;refresh shadow registers
  1467                           
  1468                           	psect	intcode_body
  1469  0008F6                     __pintcode_body:
  1470                           	opt callstack 23
  1471  0008F6                     int_func:
  1472                           	opt callstack 23
  1473  0008F6  0006               	pop		; remove dummy address from shadow register refresh
  1474  0008F8  9238               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1475  0008FA  0011               	retfie		f
  1476  0008FC                     __end_of_Hi_ISR:
  1477                           	opt callstack 0
  1478                           
  1479                           	psect	rparam
  1480  0000                     
  1481                           	psect	temp
  1482  000038                     btemp:
  1483                           	opt callstack 0
  1484  000038                     	ds	1
  1485  0000                     int$flags	set	btemp
  1486  0000                     wtemp8	set	btemp+1
  1487  0000                     ttemp5	set	btemp+1
  1488  0000                     ttemp6	set	btemp+4
  1489  0000                     ttemp7	set	btemp+8
  1490                           tosu	equ	0xFFF
  1491                           tosh	equ	0xFFE
  1492                           tosl	equ	0xFFD
  1493                           stkptr	equ	0xFFC
  1494                           pclatu	equ	0xFFB
  1495                           pclath	equ	0xFFA
  1496                           pcl	equ	0xFF9
  1497                           tblptru	equ	0xFF8
  1498                           tblptrh	equ	0xFF7
  1499                           tblptrl	equ	0xFF6
  1500                           tablat	equ	0xFF5
  1501                           prodh	equ	0xFF4
  1502                           prodl	equ	0xFF3
  1503                           indf0	equ	0xFEF
  1504                           postinc0	equ	0xFEE
  1505                           postdec0	equ	0xFED
  1506                           preinc0	equ	0xFEC
  1507                           plusw0	equ	0xFEB
  1508                           fsr0h	equ	0xFEA
  1509                           fsr0l	equ	0xFE9
  1510                           wreg	equ	0xFE8
  1511                           indf1	equ	0xFE7
  1512                           postinc1	equ	0xFE6
  1513                           postdec1	equ	0xFE5
  1514                           preinc1	equ	0xFE4
  1515                           plusw1	equ	0xFE3
  1516                           fsr1h	equ	0xFE2
  1517                           fsr1l	equ	0xFE1
  1518                           bsr	equ	0xFE0
  1519                           indf2	equ	0xFDF
  1520                           postinc2	equ	0xFDE
  1521                           postdec2	equ	0xFDD
  1522                           preinc2	equ	0xFDC
  1523                           plusw2	equ	0xFDB
  1524                           fsr2h	equ	0xFDA
  1525                           fsr2l	equ	0xFD9
  1526                           status	equ	0xFD8


Data Sizes:
    Strings     14
    Constant    124
    Data        4
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     16      55
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Send2Lcd@Lcd	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[6]), STR_1(CODE[8]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _LCD_init->_Send2Lcd
    _Send2Lcd->_Cmd
    _Send2Lcd->_Data

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1577
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1577
                     _ADC_Initialize
                           _LCD_init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             0     0      0    1577
                                _Cmd
                           _Send2Lcd
 ---------------------------------------------------------------------------------
 (3) _Send2Lcd                                             3     1      2     947
                                             13 COMRAM     3     1      2
                                _Cmd
                               _Data
 ---------------------------------------------------------------------------------
 (4) _Data                                                 2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Cmd                                                  2     0      2     630
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Lo_ISR                                               5     5      0     463
                                              6 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (6) _MyusartRead                                          0     0      0     463
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _LCD_init
       _Cmd
       _Send2Lcd
         _Cmd
         _Data
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _UART_Initialize

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     10      37       1       43.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      15        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 18 22:20:29 2019

                              _r 0001                               _L1 0659  
                             _L2 0655                               _L3 0651  
                             _L4 064D                               _L5 0649  
                             _L6 0645                               _P1 0641  
                             _P2 063D                               _P3 0639  
                             _P4 0635                               _P5 0631  
                             _bp 0669                               _cp 061D  
                             bsr 000FE0                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l177 08F4                     __CFG_CPB$OFF 000000  
                            _RC2 007C12                              _RC3 007C13  
                            u307 06B6                              u317 06CA  
                            u327 0702                     __CFG_CPD$OFF 000000  
                            u287 068E                              u297 06A2  
                            _Cmd 08A2                              _lg2 062D  
                            _ovt 0621                     ___awmod@sign 0029  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   __CFG_LVP$OFF 000000                             ?_Cmd 002F  
                   __CFG_WDT$OFF 000000                             l1292 0826  
                           l1296 083E                             STR_1 067D  
                           STR_2 0685                             _CREN 007D5C  
                           _RCIF 007CF5                             i1l99 0052  
                           _TMR1 000FCE                     __CFG_WDTPS$1 000000  
                           _Data 0888                             _cp_h 0679  
                           _cp_l 0675                             _dp_h 0609  
                           _dp_l 0601                             _main 08F0  
                           _huge 0661                             _tiny 065D  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0038                             start 006A  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                          ??_Cmd 0031                 ?_UART_Initialize 0024  
                          ?_Data 002F   __size_of_OSCILLATOR_Initialize 0008  
               __end_of_LCD_init 0726    __end_of_OSCILLATOR_Initialize 08F0  
                          ?_main 0024                            _ADRES 000FC3  
                __end_of___awmod 0796                            _IRCF0 007E9C  
                          _IRCF1 007E9D                            _IRCF2 007E9E  
                          _RCREG 000FAE                            _PORTD 000F83  
                          _TRISA 000F92                            _TRISC 000F94  
                          _TRISD 000F95                            _TXREG 000FAD  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                    ?_UART_Write 0024                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                          _lg2_h 0629                            _lg2_l 0625  
                 __CFG_EBTRB$OFF 000000                            _count 0016  
                          _errno 0014                            _ivln2 0619  
                __end_of_ivln2_h 0675                  __end_of_ivln2_l 0619  
                          _two24 0665          __end_of_TMR1_Initialize 086E  
                          tablat 000FF5                            ttemp5 0039  
                          ttemp6 003C                            ttemp7 0040  
                          status 000FD8                            wtemp8 0039  
                 __CFG_PBADEN$ON 000000                     __end_of_Data 08A2  
                __initialization 07DA                     __end_of_cp_h 067D  
                   __end_of_cp_l 0679                     __end_of_dp_h 0611  
                   __end_of_dp_l 0609                     __end_of_main 08F6  
                   __end_of_huge 0665                     __end_of_tiny 0661  
                         ??_Data 0031                 __end_of_Send2Lcd 0852  
                         ??_main 0034                    __activetblptr 000001  
                    Send2Lcd@Adr 0033                      Send2Lcd@Lcd 0031  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         i1l1144 08DE                           i1l1332 0746  
                         i1l1352 078C                           i1l1344 0774  
                         i1l1336 0754                           i1l1328 073A  
                         i1l1338 075C                           i1l1348 077E  
                         i1l1382 003C                           i1l1384 0040  
                         _Hi_ISR 0008                           _Lo_ISR 0018  
                 __CFG_XINST$OFF 000000              __size_of_UART_Write 000C  
                 __CFG_STVREN$ON 000000                        ??___awmod 0028  
                         _lenStr 0018                           clear_0 0800  
                ___awmod@divisor 0026                  ___awmod@counter 0028  
                   __pdataCOMRAM 0034                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                 ?_TMR1_Initialize 0024  
              _SYSTEM_Initialize 086E                       __accesstop 0080  
        __end_of__initialization 0806                        ?_LCD_init 0024  
             ?_SYSTEM_Initialize 0024                    ___rparam_used 000001  
                 __pcstackCOMRAM 0024                    __end_of_lg2_h 062D  
                  __end_of_lg2_l 0629              ??_SYSTEM_Initialize 0034  
                  __end_of_ivln2 061D                    __end_of_two24 0669  
                     __end_of_L1 065D                       __end_of_L2 0659  
                     __end_of_L3 0655                       __end_of_L4 0651  
                     __end_of_L5 064D                       __end_of_L6 0649  
                     __end_of_P1 0645                       __end_of_P2 0641  
                     __end_of_P3 063D                       __end_of_P4 0639  
                     __end_of_P5 0635                       __end_of_bp 0671  
                     __end_of_cp 0621                    ??_MyusartRead 002A  
      __end_of_SYSTEM_Initialize 0888                        ?_Send2Lcd 0031  
                     ??_LCD_init 0034                          ?_Hi_ISR 0024  
                        ?_Lo_ISR 0024          __size_of_ADC_Initialize 0012  
                   ??_UART_Write 0024                          i1u22_20 0760  
            __end_of_MyusartRead 07DA                       ??_Send2Lcd 0033  
                __size_of_Hi_ISR 08F4                  __size_of_Lo_ISR 0052  
                        __Hparam 0000                          __Lparam 0000  
                        ___awmod 0726               __end_of_UART_Write 08E8  
                   __psmallconst 0600                          __pcinit 07DA  
                        __ramtop 0600                        Data@Value 002F  
                        __ptext0 08F0                          __ptext1 086E  
                        __ptext2 0900                          __ptext3 0852  
                        __ptext4 08CE                          __ptext5 08E8  
                        __ptext6 068C                          __ptext7 0818  
                        __ptext8 0888                          __ptext9 08A2  
                      _T1CONbits 000FCD                     __size_of_Cmd 001A  
          _OSCILLATOR_Initialize 08E8                          _ivln2_h 0671  
                        _ivln2_l 0615                 ___awmod@dividend 0024  
       ??_PIN_MANAGER_Initialize 002F         __size_of_UART_Initialize 0002  
     __size_of_SYSTEM_Initialize 001A                   __pintcode_body 08F6  
           end_of_initialization 0806                          int_func 08F6  
                      _RCSTAbits 000FAB                          postdec1 000FE5  
                        postinc0 000FEE                   UART_Write@data 0024  
                    _MyusartRead 0796                        _TXSTAbits 000FAC  
                 __end_of_Hi_ISR 08FC                __size_of_LCD_init 009A  
                 __end_of_Lo_ISR 006A                    __pidataCOMRAM 08FC  
                 _ADC_Initialize 08BC           ?_OSCILLATOR_Initialize 0024  
            start_initialization 07DA                      __end_of_Cmd 08BC  
__size_of_PIN_MANAGER_Initialize 000E                      __end_of_lg2 0631  
                    __end_of_ovt 0625                ??_UART_Initialize 002F  
               __CFG_OSC$INTIO67 000000                         ??_Hi_ISR 0024  
                       ??_Lo_ISR 002A                __size_of_Send2Lcd 003A  
       __size_of_TMR1_Initialize 001C           __end_of_ADC_Initialize 08CE  
               __CFG_LPT1OSC$OFF 000000                      __pbssCOMRAM 0001  
              __end_ofsqrtf@tiny 0615           _PIN_MANAGER_Initialize 08CE  
              __CFG_CCP2MX$PORTC 000000                        __pintcode 0008  
                       ?___awmod 0024                  ?_ADC_Initialize 0024  
                    __pintcodelo 0018                        fabsf@F463 0010  
                    __smallconst 0600                         Cmd@Value 002F  
                       _LCD_init 068C                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                         _PIR1bits 000F9E  
                       _RCONbits 000FD0                ??_TMR1_Initialize 002F  
                     _ADCON0bits 000FC2                     ?_MyusartRead 0024  
                      copy_data0 07EE                         _Send2Lcd 0818  
                       __Hrparam 0000                         __Lrparam 0000  
                   __Lsmallconst 0600               __CFG_BOREN$SBORDIS 000000  
        ??_OSCILLATOR_Initialize 002F                 __size_of___awmod 0070  
                       _mq135_ro 0034                  _UART_Initialize 0900  
                       __ptext10 08BC                         __ptext12 0796  
                       __ptext13 0726                         __ptext14 08DC  
                  __size_of_Data 001A                    __size_of_main 0006  
                       int$flags 0038                         _mystring 001A  
                     _INTCONbits 000FF2                         intlevel1 0000  
                       intlevel2 0000                        sqrtf@tiny 0611  
        ?_PIN_MANAGER_Initialize 0024                 ??_ADC_Initialize 002F  
        __end_of_UART_Initialize 0902                       _UART_Write 08DC  
           __size_of_MyusartRead 0044   __end_of_PIN_MANAGER_Initialize 08DC  
                _TMR1_Initialize 0852  
