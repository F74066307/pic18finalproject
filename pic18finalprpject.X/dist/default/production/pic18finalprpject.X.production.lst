

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 15 15:30:19 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           ; Version 2.10
    75                           ; Generated 31/07/2019 GMT
    76                           ; 
    77                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4520 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataBANK0
   110  005D9A                     __pidataBANK0:
   111                           	opt callstack 0
   112                           
   113                           ;initializer for _mq135_ro
   114                           ;setting_hardaware/adc.c: 16: double mq135_ro = 2000.0;
   115  005D9A  0000               	dw	0
   116  005D9C  44FA               	dw	17658
   117                           
   118                           	psect	smallconst
   119  000600                     __psmallconst:
   120                           	opt callstack 0
   121  000600  00                 	db	0
   122  000601                     _dp_l:
   123                           	opt callstack 0
   124  000601  0000               	dw	0
   125  000603  0000               	dw	0
   126  000605  CFDC               	dw	53212
   127  000607  35D1               	dw	13777
   128  000609                     __end_of_dp_l:
   129                           	opt callstack 0
   130  000609                     _dp_h:
   131                           	opt callstack 0
   132  000609  0000               	dw	0
   133  00060B  0000               	dw	0
   134  00060D  C000               	dw	49152
   135  00060F  3F15               	dw	16149
   136  000611                     __end_of_dp_h:
   137                           	opt callstack 0
   138  000611  4260               	dw	16992
   139  000613  0DA2               	dw	3490
   140  000615                     __end_ofsqrtf@tiny:
   141                           	opt callstack 0
   142  000615  A570               	dw	42352
   143  000617  36EC               	dw	14060
   144  000619                     __end_of_ivln2_l:
   145                           	opt callstack 0
   146  000619  AA3B               	dw	43579
   147  00061B  3FB8               	dw	16312
   148  00061D                     __end_of_ivln2:
   149                           	opt callstack 0
   150  00061D  384F               	dw	14415
   151  00061F  3F76               	dw	16246
   152  000621                     __end_of_cp:
   153                           	opt callstack 0
   154  000621  AA3C               	dw	43580
   155  000623  3338               	dw	13112
   156  000625                     __end_of_ovt:
   157                           	opt callstack 0
   158  000625  BE8C               	dw	48780
   159  000627  35BF               	dw	13759
   160  000629                     __end_of_lg2_l:
   161                           	opt callstack 0
   162  000629  7200               	dw	29184
   163  00062B  3F31               	dw	16177
   164  00062D                     __end_of_lg2_h:
   165                           	opt callstack 0
   166  00062D  7218               	dw	29208
   167  00062F  3F31               	dw	16177
   168  000631                     __end_of_lg2:
   169                           	opt callstack 0
   170  000631  BB4C               	dw	47948
   171  000633  3331               	dw	13105
   172  000635                     __end_of_P5:
   173                           	opt callstack 0
   174  000635  EA0E               	dw	59918
   175  000637  B5DD               	dw	46557
   176  000639                     __end_of_P4:
   177                           	opt callstack 0
   178  000639  B355               	dw	45909
   179  00063B  388A               	dw	14474
   180  00063D                     __end_of_P3:
   181                           	opt callstack 0
   182  00063D  0B61               	dw	2913
   183  00063F  BB36               	dw	47926
   184  000641                     __end_of_P2:
   185                           	opt callstack 0
   186  000641  AAAB               	dw	43691
   187  000643  3E2A               	dw	15914
   188  000645                     __end_of_P1:
   189                           	opt callstack 0
   190  000645  F142               	dw	61762
   191  000647  3E53               	dw	15955
   192  000649                     __end_of_L6:
   193                           	opt callstack 0
   194  000649  3255               	dw	12885
   195  00064B  3E6C               	dw	15980
   196  00064D                     __end_of_L5:
   197                           	opt callstack 0
   198  00064D  A305               	dw	41733
   199  00064F  3E8B               	dw	16011
   200  000651                     __end_of_L4:
   201                           	opt callstack 0
   202  000651  AAAB               	dw	43691
   203  000653  3EAA               	dw	16042
   204  000655                     __end_of_L3:
   205                           	opt callstack 0
   206  000655  6DB7               	dw	28087
   207  000657  3EDB               	dw	16091
   208  000659                     __end_of_L2:
   209                           	opt callstack 0
   210  000659  999A               	dw	39322
   211  00065B  3F19               	dw	16153
   212  00065D                     __end_of_L1:
   213                           	opt callstack 0
   214  00065D  4260               	dw	16992
   215  00065F  0DA2               	dw	3490
   216  000661                     __end_of_tiny:
   217                           	opt callstack 0
   218  000661  F2CA               	dw	62154
   219  000663  7149               	dw	29001
   220  000665                     __end_of_huge:
   221                           	opt callstack 0
   222  000665  0000               	dw	0
   223  000667  4B80               	dw	19328
   224  000669                     __end_of_two24:
   225                           	opt callstack 0
   226  000669                     _bp:
   227                           	opt callstack 0
   228  000669  0000               	dw	0
   229  00066B  3F80               	dw	16256
   230  00066D  0000               	dw	0
   231  00066F  3FC0               	dw	16320
   232  000671                     __end_of_bp:
   233                           	opt callstack 0
   234  000671  AA00               	dw	43520
   235  000673  3FB8               	dw	16312
   236  000675                     __end_of_ivln2_h:
   237                           	opt callstack 0
   238  000675  23C6               	dw	9158
   239  000677  B8F6               	dw	47350
   240  000679                     __end_of_cp_l:
   241                           	opt callstack 0
   242  000679  4000               	dw	16384
   243  00067B  3F76               	dw	16246
   244  00067D                     __end_of_cp_h:
   245                           	opt callstack 0
   246  0000                     _TMR3	set	4018
   247  0000                     _ADRES	set	4035
   248  0000                     _TMR1	set	4046
   249  0000                     _PORTD	set	3971
   250  0000                     _TRISD	set	3989
   251  0000                     _TRISC	set	3988
   252  0000                     _ADCON0bits	set	4034
   253  0000                     _ADCON2	set	4032
   254  0000                     _ADCON1	set	4033
   255  0000                     _TRISA	set	3986
   256  0000                     _INTCONbits	set	4082
   257  0000                     _RCONbits	set	4048
   258  0000                     _PIR1bits	set	3998
   259  0000                     _RCSTAbits	set	4011
   260  0000                     _RCREG	set	4014
   261  0000                     _TXREG	set	4013
   262  0000                     _TXSTAbits	set	4012
   263  0000                     _RC1	set	31761
   264  0000                     _RC0	set	31760
   265  0000                     _RC2	set	31762
   266  0000                     _CREN	set	32092
   267  0000                     _RCIF	set	31989
   268  0000                     _IRCF0	set	32412
   269  0000                     _IRCF1	set	32413
   270  0000                     _IRCF2	set	32414
   271  00067D                     STR_3:
   272  00067D  6D                 	db	109	;'m'
   273  00067E  6F                 	db	111	;'o'
   274  00067F  6E                 	db	110	;'n'
   275  000680  69                 	db	105	;'i'
   276  000681  74                 	db	116	;'t'
   277  000682  6F                 	db	111	;'o'
   278  000683  72                 	db	114	;'r'
   279  000684  00                 	db	0
   280  000685                     STR_4:
   281  000685  73                 	db	115	;'s'
   282  000686  74                 	db	116	;'t'
   283  000687  61                 	db	97	;'a'
   284  000688  72                 	db	114	;'r'
   285  000689  74                 	db	116	;'t'
   286  00068A  00                 	db	0
   287  00068B                     STR_2:
   288  00068B  25                 	db	37
   289  00068C  2E                 	db	46
   290  00068D  31                 	db	49	;'1'
   291  00068E  66                 	db	102	;'f'
   292  00068F  00                 	db	0
   293  000690                     STR_1:
   294  000690  25                 	db	37
   295  000691  2E                 	db	46
   296  000692  32                 	db	50	;'2'
   297  000693  66                 	db	102	;'f'
   298  000694  00                 	db	0
   299  000695                     STR_5:
   300  000695  49                 	db	73	;'I'
   301  000696  4E                 	db	78	;'N'
   302  000697  46                 	db	70	;'F'
   303  000698  00                 	db	0
   304  000699                     STR_9:
   305  000699  4E                 	db	78	;'N'
   306  00069A  41                 	db	65	;'A'
   307  00069B  4E                 	db	78	;'N'
   308  00069C  00                 	db	0
   309  00069D                     STR_6:
   310  00069D  69                 	db	105	;'i'
   311  00069E  6E                 	db	110	;'n'
   312  00069F  66                 	db	102	;'f'
   313  0006A0  00                 	db	0
   314  0006A1                     STR_10:
   315  0006A1  6E                 	db	110	;'n'
   316  0006A2  61                 	db	97	;'a'
   317  0006A3  6E                 	db	110	;'n'
   318  0006A4  00                 	db	0
   319  0006A5                     STR_13:
   320  0006A5  6C                 	db	108	;'l'
   321  0006A6  66                 	db	102	;'f'
   322  0006A7  00                 	db	0
   323  0000                     
   324                           ; #config settings
   325  0006A8  00                 	db	0	; dummy byte at the end
   326  0000                     
   327                           	psect	cinit
   328  00589E                     __pcinit:
   329                           	opt callstack 0
   330  00589E                     start_initialization:
   331                           	opt callstack 0
   332  00589E                     __initialization:
   333                           	opt callstack 0
   334                           
   335                           ; Initialize objects allocated to BANK0 (4 bytes)
   336                           ; load TBLPTR registers with __pidataBANK0
   337  00589E  0E9A               	movlw	low __pidataBANK0
   338  0058A0  6EF6               	movwf	tblptrl,c
   339  0058A2  0E5D               	movlw	high __pidataBANK0
   340  0058A4  6EF7               	movwf	tblptrh,c
   341  0058A6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   342  0058A8  6EF8               	movwf	tblptru,c
   343  0058AA  EE00  F0FB         	lfsr	0,__pdataBANK0
   344  0058AE  EE10 F004          	lfsr	1,4
   345  0058B2                     copy_data0:
   346  0058B2  0009               	tblrd		*+
   347  0058B4  CFF5 FFEE          	movff	tablat,postinc0
   348  0058B8  50E5               	movf	postdec1,w,c
   349  0058BA  50E1               	movf	fsr1l,w,c
   350  0058BC  E1FA               	bnz	copy_data0
   351                           
   352                           ; Clear objects allocated to BANK2 (80 bytes)
   353  0058BE  EE02  F000         	lfsr	0,__pbssBANK2
   354  0058C2  0E50               	movlw	80
   355  0058C4                     clear_0:
   356  0058C4  6AEE               	clrf	postinc0,c
   357  0058C6  06E8               	decf	wreg,f,c
   358  0058C8  E1FD               	bnz	clear_0
   359                           
   360                           ; Clear objects allocated to BANK1 (25 bytes)
   361  0058CA  EE01  F0C6         	lfsr	0,__pbssBANK1
   362  0058CE  0E19               	movlw	25
   363  0058D0                     clear_1:
   364  0058D0  6AEE               	clrf	postinc0,c
   365  0058D2  06E8               	decf	wreg,f,c
   366  0058D4  E1FD               	bnz	clear_1
   367                           
   368                           ; Clear objects allocated to BANK0 (14 bytes)
   369  0058D6  EE00  F0ED         	lfsr	0,__pbssBANK0
   370  0058DA  0E0E               	movlw	14
   371  0058DC                     clear_2:
   372  0058DC  6AEE               	clrf	postinc0,c
   373  0058DE  06E8               	decf	wreg,f,c
   374  0058E0  E1FD               	bnz	clear_2
   375                           
   376                           ; Clear objects allocated to COMRAM (12 bytes)
   377  0058E2  EE00  F067         	lfsr	0,__pbssCOMRAM
   378  0058E6  0E0C               	movlw	12
   379  0058E8                     clear_3:
   380  0058E8  6AEE               	clrf	postinc0,c
   381  0058EA  06E8               	decf	wreg,f,c
   382  0058EC  E1FD               	bnz	clear_3
   383  0058EE                     end_of_initialization:
   384                           	opt callstack 0
   385  0058EE                     __end_of__initialization:
   386                           	opt callstack 0
   387  0058EE  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   388  0058F0  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   389  0058F2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   390  0058F4  6EF8               	movwf	tblptru,c
   391  0058F6  0100               	movlb	0
   392  0058F8  EF13  F02A         	goto	_main	;jump to C main() function
   393                           
   394                           	psect	bssCOMRAM
   395  000067                     __pbssCOMRAM:
   396                           	opt callstack 0
   397  000067                     _errno:
   398                           	opt callstack 0
   399  000067                     	ds	2
   400  000069                     _width:
   401                           	opt callstack 0
   402  000069                     	ds	2
   403  00006B                     _prec:
   404                           	opt callstack 0
   405  00006B                     	ds	2
   406  00006D                     _flags:
   407                           	opt callstack 0
   408  00006D                     	ds	2
   409  00006F                     _count:
   410                           	opt callstack 0
   411  00006F                     	ds	2
   412  000071                     _lenStr:
   413                           	opt callstack 0
   414  000071                     	ds	2
   415                           
   416                           	psect	bssBANK0
   417  0000ED                     __pbssBANK0:
   418                           	opt callstack 0
   419  0000ED                     fabsf@F463:
   420                           	opt callstack 0
   421  0000ED                     	ds	4
   422  0000F1                     floorf@F524:
   423                           	opt callstack 0
   424  0000F1                     	ds	4
   425  0000F5                     ___fpclassifyf@F463:
   426                           	opt callstack 0
   427  0000F5                     	ds	4
   428  0000F9                     _nout:
   429                           	opt callstack 0
   430  0000F9                     	ds	2
   431                           
   432                           	psect	dataBANK0
   433  0000FB                     __pdataBANK0:
   434                           	opt callstack 0
   435  0000FB                     _mq135_ro:
   436                           	opt callstack 0
   437  0000FB                     	ds	4
   438                           
   439                           	psect	bssBANK1
   440  0001C6                     __pbssBANK1:
   441                           	opt callstack 0
   442  0001C6                     _r:
   443                           	opt callstack 0
   444  0001C6                     	ds	15
   445  0001D5                     _mystring:
   446                           	opt callstack 0
   447  0001D5                     	ds	10
   448                           
   449                           	psect	bssBANK2
   450  000200                     __pbssBANK2:
   451                           	opt callstack 0
   452  000200                     _dbuf:
   453                           	opt callstack 0
   454  000200                     	ds	80
   455                           
   456                           	psect	cstackBANK1
   457  000100                     __pcstackBANK1:
   458                           	opt callstack 0
   459  000100                     _powf$1659:
   460                           	opt callstack 0
   461                           
   462                           ; 4 bytes @ 0x0
   463  000100                     	ds	4
   464  000104                     _powf$1660:
   465                           	opt callstack 0
   466                           
   467                           ; 4 bytes @ 0x4
   468  000104                     	ds	4
   469  000108                     _powf$1664:
   470                           	opt callstack 0
   471                           
   472                           ; 4 bytes @ 0x8
   473  000108                     	ds	4
   474  00010C                     _powf$1665:
   475                           	opt callstack 0
   476                           
   477                           ; 4 bytes @ 0xC
   478  00010C                     	ds	4
   479  000110                     _powf$1666:
   480                           	opt callstack 0
   481                           
   482                           ; 4 bytes @ 0x10
   483  000110                     	ds	4
   484  000114                     _powf$1667:
   485                           	opt callstack 0
   486                           
   487                           ; 4 bytes @ 0x14
   488  000114                     	ds	4
   489  000118                     _powf$1668:
   490                           	opt callstack 0
   491                           
   492                           ; 4 bytes @ 0x18
   493  000118                     	ds	4
   494  00011C                     powf@t2:
   495                           	opt callstack 0
   496                           
   497                           ; 4 bytes @ 0x1C
   498  00011C                     	ds	4
   499  000120                     powf@z_h:
   500                           	opt callstack 0
   501                           
   502                           ; 4 bytes @ 0x20
   503  000120                     	ds	4
   504  000124                     powf@z_l:
   505                           	opt callstack 0
   506                           
   507                           ; 4 bytes @ 0x24
   508  000124                     	ds	4
   509  000128                     powf@y1:
   510                           	opt callstack 0
   511                           
   512                           ; 4 bytes @ 0x28
   513  000128                     	ds	4
   514  00012C                     powf@i:
   515                           	opt callstack 0
   516                           
   517                           ; 4 bytes @ 0x2C
   518  00012C                     	ds	4
   519  000130                     powf@s_l:
   520                           	opt callstack 0
   521                           
   522                           ; 4 bytes @ 0x30
   523  000130                     	ds	4
   524  000134                     powf@t_l:
   525                           	opt callstack 0
   526                           
   527                           ; 4 bytes @ 0x34
   528  000134                     	ds	4
   529  000138                     _powf$1658:
   530                           	opt callstack 0
   531                           
   532                           ; 4 bytes @ 0x38
   533  000138                     	ds	4
   534  00013C                     _powf$1662:
   535                           	opt callstack 0
   536                           
   537                           ; 4 bytes @ 0x3C
   538  00013C                     	ds	4
   539  000140                     _powf$1663:
   540                           	opt callstack 0
   541                           
   542                           ; 4 bytes @ 0x40
   543  000140                     	ds	4
   544  000144                     powf@w:
   545                           	opt callstack 0
   546                           
   547                           ; 4 bytes @ 0x44
   548  000144                     	ds	4
   549  000148                     _powf$1656:
   550                           	opt callstack 0
   551                           
   552                           ; 4 bytes @ 0x48
   553  000148                     	ds	4
   554  00014C                     powf@r:
   555                           	opt callstack 0
   556                           
   557                           ; 4 bytes @ 0x4C
   558  00014C                     	ds	4
   559  000150                     powf@yisint:
   560                           	opt callstack 0
   561                           
   562                           ; 4 bytes @ 0x50
   563  000150                     	ds	4
   564  000154                     _powf$1655:
   565                           	opt callstack 0
   566                           
   567                           ; 4 bytes @ 0x54
   568  000154                     	ds	4
   569  000158                     _powf$1661:
   570                           	opt callstack 0
   571                           
   572                           ; 4 bytes @ 0x58
   573  000158                     	ds	4
   574  00015C                     powf@s:
   575                           	opt callstack 0
   576                           
   577                           ; 4 bytes @ 0x5C
   578  00015C                     	ds	4
   579  000160                     powf@hx:
   580                           	opt callstack 0
   581                           
   582                           ; 4 bytes @ 0x60
   583  000160                     	ds	4
   584  000164                     powf@p_l:
   585                           	opt callstack 0
   586                           
   587                           ; 4 bytes @ 0x64
   588  000164                     	ds	4
   589  000168                     powf@t_h:
   590                           	opt callstack 0
   591                           
   592                           ; 4 bytes @ 0x68
   593  000168                     	ds	4
   594  00016C                     powf@s_h:
   595                           	opt callstack 0
   596                           
   597                           ; 4 bytes @ 0x6C
   598  00016C                     	ds	4
   599  000170                     powf@ax:
   600                           	opt callstack 0
   601                           
   602                           ; 4 bytes @ 0x70
   603  000170                     	ds	4
   604  000174                     powf@u:
   605                           	opt callstack 0
   606                           
   607                           ; 4 bytes @ 0x74
   608  000174                     	ds	4
   609  000178                     powf@v:
   610                           	opt callstack 0
   611                           
   612                           ; 4 bytes @ 0x78
   613  000178                     	ds	4
   614  00017C                     powf@hy:
   615                           	opt callstack 0
   616                           
   617                           ; 4 bytes @ 0x7C
   618  00017C                     	ds	4
   619  000180                     powf@n:
   620                           	opt callstack 0
   621                           
   622                           ; 4 bytes @ 0x80
   623  000180                     	ds	4
   624  000184                     powf@t1:
   625                           	opt callstack 0
   626                           
   627                           ; 4 bytes @ 0x84
   628  000184                     	ds	4
   629  000188                     powf@sn:
   630                           	opt callstack 0
   631                           
   632                           ; 4 bytes @ 0x88
   633  000188                     	ds	4
   634  00018C                     powf@s2:
   635                           	opt callstack 0
   636                           
   637                           ; 4 bytes @ 0x8C
   638  00018C                     	ds	4
   639  000190                     powf@iy:
   640                           	opt callstack 0
   641                           
   642                           ; 4 bytes @ 0x90
   643  000190                     	ds	4
   644  000194                     powf@is:
   645                           	opt callstack 0
   646                           
   647                           ; 4 bytes @ 0x94
   648  000194                     	ds	4
   649  000198                     _powf$1657:
   650                           	opt callstack 0
   651                           
   652                           ; 4 bytes @ 0x98
   653  000198                     	ds	4
   654  00019C                     powf@p_h:
   655                           	opt callstack 0
   656                           
   657                           ; 4 bytes @ 0x9C
   658  00019C                     	ds	4
   659  0001A0                     powf@k:
   660                           	opt callstack 0
   661                           
   662                           ; 4 bytes @ 0xA0
   663  0001A0                     	ds	4
   664  0001A4                     _powf$1654:
   665                           	opt callstack 0
   666                           
   667                           ; 4 bytes @ 0xA4
   668  0001A4                     	ds	4
   669  0001A8                     powf@ix:
   670                           	opt callstack 0
   671                           
   672                           ; 4 bytes @ 0xA8
   673  0001A8                     	ds	4
   674  0001AC                     powf@j:
   675                           	opt callstack 0
   676                           
   677                           ; 4 bytes @ 0xAC
   678  0001AC                     	ds	4
   679  0001B0                     powf@t:
   680                           	opt callstack 0
   681                           
   682                           ; 4 bytes @ 0xB0
   683  0001B0                     	ds	4
   684  0001B4                     powf@z:
   685                           	opt callstack 0
   686                           
   687                           ; 4 bytes @ 0xB4
   688  0001B4                     	ds	4
   689  0001B8                     powf@__xc8_float_word:
   690                           	opt callstack 0
   691                           
   692                           ; 4 bytes @ 0xB8
   693  0001B8                     	ds	6
   694  0001BE                     sprintf@ap:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0xBE
   698  0001BE                     	ds	2
   699  0001C0                     sprintf@f:
   700                           	opt callstack 0
   701                           
   702                           ; 6 bytes @ 0xC0
   703  0001C0                     	ds	6
   704                           
   705                           	psect	cstackBANK0
   706  000080                     __pcstackBANK0:
   707                           	opt callstack 0
   708  000080                     floorf@m:
   709                           	opt callstack 0
   710                           
   711                           ; 4 bytes @ 0x0
   712  000080                     	ds	4
   713  000084                     floorf@e:
   714                           	opt callstack 0
   715  000084                     sqrtf@s:
   716                           	opt callstack 0
   717                           
   718                           ; 4 bytes @ 0x4
   719  000084                     	ds	2
   720  000086                     floorf@u:
   721                           	opt callstack 0
   722                           
   723                           ; 4 bytes @ 0x6
   724  000086                     	ds	2
   725  000088                     sqrtf@i:
   726                           	opt callstack 0
   727                           
   728                           ; 4 bytes @ 0x8
   729  000088                     	ds	2
   730  00008A                     ??_efgtoa:
   731                           
   732                           ; 1 bytes @ 0xA
   733  00008A                     	ds	2
   734  00008C                     sqrtf@__xc8_float_word:
   735                           	opt callstack 0
   736                           
   737                           ; 4 bytes @ 0xC
   738  00008C                     	ds	3
   739  00008F                     efgtoa@ou:
   740                           	opt callstack 0
   741                           
   742                           ; 4 bytes @ 0xF
   743  00008F                     	ds	1
   744  000090                     sqrtf@q:
   745                           	opt callstack 0
   746                           
   747                           ; 4 bytes @ 0x10
   748  000090                     	ds	3
   749  000093                     _efgtoa$650:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x13
   753  000093                     	ds	1
   754  000094                     sqrtf@t:
   755                           	opt callstack 0
   756                           
   757                           ; 4 bytes @ 0x14
   758  000094                     	ds	1
   759  000095                     _efgtoa$651:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x15
   763  000095                     	ds	2
   764  000097                     _efgtoa$656:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0x17
   768  000097                     	ds	1
   769  000098                     sqrtf@z:
   770                           	opt callstack 0
   771                           
   772                           ; 4 bytes @ 0x18
   773  000098                     	ds	1
   774  000099                     _efgtoa$660:
   775                           	opt callstack 0
   776                           
   777                           ; 2 bytes @ 0x19
   778  000099                     	ds	2
   779  00009B                     _efgtoa$661:
   780                           	opt callstack 0
   781                           
   782                           ; 2 bytes @ 0x1B
   783  00009B                     	ds	1
   784  00009C                     sqrtf@m:
   785                           	opt callstack 0
   786                           
   787                           ; 4 bytes @ 0x1C
   788  00009C                     	ds	1
   789  00009D                     _efgtoa$662:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x1D
   793  00009D                     	ds	2
   794  00009F                     efgtoa@t:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x1F
   798  00009F                     	ds	1
   799  0000A0                     sqrtf@r:
   800                           	opt callstack 0
   801                           
   802                           ; 4 bytes @ 0x20
   803  0000A0                     	ds	1
   804  0000A1                     efgtoa@pp:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x21
   808  0000A1                     	ds	2
   809  0000A3                     efgtoa@m:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0x23
   813  0000A3                     	ds	1
   814  0000A4                     sqrtf@ix:
   815                           	opt callstack 0
   816                           
   817                           ; 4 bytes @ 0x24
   818  0000A4                     	ds	1
   819  0000A5                     efgtoa@ne:
   820                           	opt callstack 0
   821                           
   822                           ; 2 bytes @ 0x25
   823  0000A5                     	ds	2
   824  0000A7                     efgtoa@d:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x27
   828  0000A7                     	ds	1
   829  0000A8                     ?_mq135_getppm:
   830                           	opt callstack 0
   831  0000A8                     mq135_getppm@resvalue:
   832                           	opt callstack 0
   833                           
   834                           ; 4 bytes @ 0x28
   835  0000A8                     	ds	1
   836  0000A9                     efgtoa@sign:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x29
   840  0000A9                     	ds	2
   841  0000AB                     efgtoa@p:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x2B
   845  0000AB                     	ds	1
   846  0000AC                     mq135_getppm@ro:
   847                           	opt callstack 0
   848                           
   849                           ; 4 bytes @ 0x2C
   850  0000AC                     	ds	1
   851  0000AD                     efgtoa@nmode:
   852                           	opt callstack 0
   853                           
   854                           ; 1 bytes @ 0x2D
   855  0000AD                     	ds	1
   856  0000AE                     efgtoa@w:
   857                           	opt callstack 0
   858                           
   859                           ; 2 bytes @ 0x2E
   860  0000AE                     	ds	2
   861  0000B0                     efgtoa@mode:
   862                           	opt callstack 0
   863  0000B0                     _mq135_getppm$1652:
   864                           	opt callstack 0
   865                           
   866                           ; 4 bytes @ 0x30
   867  0000B0                     	ds	1
   868  0000B1                     efgtoa@h:
   869                           	opt callstack 0
   870                           
   871                           ; 4 bytes @ 0x31
   872  0000B1                     	ds	3
   873  0000B4                     _mq135_getppm$1653:
   874                           	opt callstack 0
   875                           
   876                           ; 4 bytes @ 0x34
   877  0000B4                     	ds	1
   878  0000B5                     efgtoa@l:
   879                           	opt callstack 0
   880                           
   881                           ; 4 bytes @ 0x35
   882  0000B5                     	ds	3
   883  0000B8                     mq135_getppm@ret:
   884                           	opt callstack 0
   885                           
   886                           ; 4 bytes @ 0x38
   887  0000B8                     	ds	1
   888  0000B9                     efgtoa@i:
   889                           	opt callstack 0
   890                           
   891                           ; 2 bytes @ 0x39
   892  0000B9                     	ds	2
   893  0000BB                     efgtoa@g:
   894                           	opt callstack 0
   895                           
   896                           ; 4 bytes @ 0x3B
   897  0000BB                     	ds	1
   898  0000BC                     mq135_getppm@validinterval:
   899                           	opt callstack 0
   900                           
   901                           ; 4 bytes @ 0x3C
   902  0000BC                     	ds	3
   903  0000BF                     efgtoa@e:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x3F
   907  0000BF                     	ds	1
   908  0000C0                     ?_ADC_Read:
   909                           	opt callstack 0
   910  0000C0                     ADC_Read@channel:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0x40
   914  0000C0                     	ds	1
   915  0000C1                     efgtoa@n:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x41
   919  0000C1                     	ds	2
   920  0000C3                     efgtoa@u:
   921                           	opt callstack 0
   922                           
   923                           ; 4 bytes @ 0x43
   924  0000C3                     	ds	1
   925  0000C4                     ??_ADC_Read:
   926                           
   927                           ; 1 bytes @ 0x44
   928  0000C4                     	ds	2
   929  0000C6                     ADC_Read@val:
   930                           	opt callstack 0
   931                           
   932                           ; 2 bytes @ 0x46
   933  0000C6                     	ds	1
   934  0000C7                     ?_vfpfcnvrt:
   935                           	opt callstack 0
   936  0000C7                     vfpfcnvrt@fp:
   937                           	opt callstack 0
   938                           
   939                           ; 2 bytes @ 0x47
   940  0000C7                     	ds	1
   941  0000C8                     ADC_Read@result:
   942                           	opt callstack 0
   943                           
   944                           ; 4 bytes @ 0x48
   945  0000C8                     	ds	1
   946  0000C9                     vfpfcnvrt@fmt:
   947                           	opt callstack 0
   948                           
   949                           ; 2 bytes @ 0x49
   950  0000C9                     	ds	2
   951  0000CB                     vfpfcnvrt@ap:
   952                           	opt callstack 0
   953                           
   954                           ; 2 bytes @ 0x4B
   955  0000CB                     	ds	1
   956  0000CC                     ADC_Read@digital:
   957                           	opt callstack 0
   958                           
   959                           ; 2 bytes @ 0x4C
   960  0000CC                     	ds	1
   961  0000CD                     ??_vfpfcnvrt:
   962                           
   963                           ; 1 bytes @ 0x4D
   964  0000CD                     	ds	4
   965  0000D1                     _vfpfcnvrt$676:
   966                           	opt callstack 0
   967                           
   968                           ; 2 bytes @ 0x51
   969  0000D1                     	ds	2
   970  0000D3                     _vfpfcnvrt$680:
   971                           	opt callstack 0
   972                           
   973                           ; 2 bytes @ 0x53
   974  0000D3                     	ds	2
   975  0000D5                     vfpfcnvrt@f:
   976                           	opt callstack 0
   977                           
   978                           ; 4 bytes @ 0x55
   979  0000D5                     	ds	4
   980  0000D9                     vfpfcnvrt@ct:
   981                           	opt callstack 0
   982                           
   983                           ; 3 bytes @ 0x59
   984  0000D9                     	ds	3
   985  0000DC                     vfpfcnvrt@c:
   986                           	opt callstack 0
   987                           
   988                           ; 1 bytes @ 0x5C
   989  0000DC                     	ds	1
   990  0000DD                     ?_vfprintf:
   991                           	opt callstack 0
   992  0000DD                     vfprintf@fp:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0x5D
   996  0000DD                     	ds	2
   997  0000DF                     vfprintf@fmt:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0x5F
  1001  0000DF                     	ds	2
  1002  0000E1                     vfprintf@ap:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x61
  1006  0000E1                     	ds	2
  1007  0000E3                     vfprintf@cfmt:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x63
  1011  0000E3                     	ds	2
  1012  0000E5                     ?_sprintf:
  1013                           	opt callstack 0
  1014  0000E5                     sprintf@s:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x65
  1018  0000E5                     	ds	2
  1019  0000E7                     sprintf@fmt:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x67
  1023  0000E7                     	ds	6
  1024                           
  1025                           	psect	cstackCOMRAM
  1026  000001                     __pcstackCOMRAM:
  1027                           	opt callstack 0
  1028  000001                     ?i1___awmod:
  1029                           	opt callstack 0
  1030  000001                     UART_Write@data:
  1031                           	opt callstack 0
  1032  000001                     i1___awmod@dividend:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x0
  1036  000001                     	ds	2
  1037  000003                     i1___awmod@divisor:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x2
  1041  000003                     	ds	2
  1042  000005                     i1___awmod@counter:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x4
  1046  000005                     	ds	1
  1047  000006                     i1___awmod@sign:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x5
  1051  000006                     	ds	1
  1052  000007                     ??_Lo_ISR:
  1053                           
  1054                           ; 1 bytes @ 0x6
  1055  000007                     	ds	5
  1056  00000C                     ?_strlen:
  1057                           	opt callstack 0
  1058  00000C                     ?___fpclassifyf:
  1059                           	opt callstack 0
  1060  00000C                     ?_isupper:
  1061                           	opt callstack 0
  1062  00000C                     ?_isdigit:
  1063                           	opt callstack 0
  1064  00000C                     ?_strncmp:
  1065                           	opt callstack 0
  1066  00000C                     ?_isspace:
  1067                           	opt callstack 0
  1068  00000C                     ?___wmul:
  1069                           	opt callstack 0
  1070  00000C                     ?___awdiv:
  1071                           	opt callstack 0
  1072  00000C                     ?___awmod:
  1073                           	opt callstack 0
  1074  00000C                     ?___fladd:
  1075                           	opt callstack 0
  1076  00000C                     ?_fabsf:
  1077                           	opt callstack 0
  1078  00000C                     ?_nanf:
  1079                           	opt callstack 0
  1080  00000C                     ?___flneg:
  1081                           	opt callstack 0
  1082  00000C                     ?___xxtofl:
  1083                           	opt callstack 0
  1084  00000C                     Cmd@Value:
  1085                           	opt callstack 0
  1086  00000C                     Data@Value:
  1087                           	opt callstack 0
  1088  00000C                     ___wmul@multiplier:
  1089                           	opt callstack 0
  1090  00000C                     ___awdiv@dividend:
  1091                           	opt callstack 0
  1092  00000C                     ___awmod@dividend:
  1093                           	opt callstack 0
  1094  00000C                     isdigit@c:
  1095                           	opt callstack 0
  1096  00000C                     isspace@c:
  1097                           	opt callstack 0
  1098  00000C                     isupper@c:
  1099                           	opt callstack 0
  1100  00000C                     memset@dest:
  1101                           	opt callstack 0
  1102  00000C                     fputc@c:
  1103                           	opt callstack 0
  1104  00000C                     strcpy@dest:
  1105                           	opt callstack 0
  1106  00000C                     strlen@s:
  1107                           	opt callstack 0
  1108  00000C                     strncmp@_l:
  1109                           	opt callstack 0
  1110  00000C                     nanf@s:
  1111                           	opt callstack 0
  1112  00000C                     ___fleq@ff1:
  1113                           	opt callstack 0
  1114  00000C                     ___flneg@f1:
  1115                           	opt callstack 0
  1116  00000C                     ___fladd@b:
  1117                           	opt callstack 0
  1118  00000C                     ___xxtofl@val:
  1119                           	opt callstack 0
  1120  00000C                     ___fpclassifyf@x:
  1121                           	opt callstack 0
  1122  00000C                     fabsf@x:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 4 bytes @ 0xB
  1126  00000C                     	ds	2
  1127  00000E                     ??_isupper:
  1128  00000E                     ??_isdigit:
  1129  00000E                     ??_isspace:
  1130  00000E                     Send2Lcd@Lcd:
  1131                           	opt callstack 0
  1132  00000E                     ___wmul@multiplicand:
  1133                           	opt callstack 0
  1134  00000E                     ___awdiv@divisor:
  1135                           	opt callstack 0
  1136  00000E                     ___awmod@divisor:
  1137                           	opt callstack 0
  1138  00000E                     memset@c:
  1139                           	opt callstack 0
  1140  00000E                     fputc@fp:
  1141                           	opt callstack 0
  1142  00000E                     strcpy@src:
  1143                           	opt callstack 0
  1144  00000E                     strlen@a:
  1145                           	opt callstack 0
  1146  00000E                     strncmp@_r:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0xD
  1150  00000E                     	ds	2
  1151  000010                     ??_fputc:
  1152  000010                     ??___fpclassifyf:
  1153  000010                     ??_strcpy:
  1154  000010                     ??___xxtofl:
  1155  000010                     Send2Lcd@Adr:
  1156                           	opt callstack 0
  1157  000010                     ___awdiv@counter:
  1158                           	opt callstack 0
  1159  000010                     ___awmod@counter:
  1160                           	opt callstack 0
  1161  000010                     ___wmul@product:
  1162                           	opt callstack 0
  1163  000010                     memset@n:
  1164                           	opt callstack 0
  1165  000010                     strncmp@n:
  1166                           	opt callstack 0
  1167  000010                     ___fleq@ff2:
  1168                           	opt callstack 0
  1169  000010                     ___fladd@a:
  1170                           	opt callstack 0
  1171  000010                     fabsf@u:
  1172                           	opt callstack 0
  1173  000010                     nanf@u:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 4 bytes @ 0xF
  1177  000010                     	ds	1
  1178  000011                     ___awdiv@sign:
  1179                           	opt callstack 0
  1180  000011                     ___awmod@sign:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x10
  1184  000011                     	ds	1
  1185  000012                     ??_memset:
  1186  000012                     ??_strncmp:
  1187  000012                     ?_tolower:
  1188                           	opt callstack 0
  1189  000012                     _isspace$1182:
  1190                           	opt callstack 0
  1191  000012                     ___awdiv@quotient:
  1192                           	opt callstack 0
  1193  000012                     strcpy@s:
  1194                           	opt callstack 0
  1195  000012                     tolower@c:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x11
  1199  000012                     	ds	1
  1200  000013                     ?_atoi:
  1201                           	opt callstack 0
  1202  000013                     atoi@s:
  1203                           	opt callstack 0
  1204  000013                     strncmp@l:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x12
  1208  000013                     	ds	1
  1209  000014                     ??_tolower:
  1210  000014                     ??___fladd:
  1211  000014                     ??___fleq:
  1212  000014                     ___xxtofl@sign:
  1213                           	opt callstack 0
  1214  000014                     ___fpclassifyf@e:
  1215                           	opt callstack 0
  1216  000014                     memset@k:
  1217                           	opt callstack 0
  1218  000014                     strcpy@d:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x13
  1222  000014                     	ds	1
  1223  000015                     ??_atoi:
  1224  000015                     ___xxtofl@exp:
  1225                           	opt callstack 0
  1226  000015                     fputs@s:
  1227                           	opt callstack 0
  1228  000015                     strncmp@r:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x14
  1232  000015                     	ds	1
  1233  000016                     memset@s:
  1234                           	opt callstack 0
  1235  000016                     ___xxtofl@arg:
  1236                           	opt callstack 0
  1237  000016                     ___fpclassifyf@u:
  1238                           	opt callstack 0
  1239                           
  1240                           ; 4 bytes @ 0x15
  1241  000016                     	ds	1
  1242  000017                     fputs@fp:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x16
  1246  000017                     	ds	1
  1247  000018                     ___fladd@signs:
  1248                           	opt callstack 0
  1249  000018                     _tolower$1393:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x17
  1253  000018                     	ds	1
  1254  000019                     ___fladd@aexp:
  1255                           	opt callstack 0
  1256  000019                     fputs@c:
  1257                           	opt callstack 0
  1258  000019                     atoi@neg:
  1259                           	opt callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x18
  1262  000019                     	ds	1
  1263  00001A                     ___fladd@bexp:
  1264                           	opt callstack 0
  1265  00001A                     fputs@i:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x19
  1269  00001A                     	ds	1
  1270  00001B                     ___fladd@grs:
  1271                           	opt callstack 0
  1272  00001B                     _atoi$1151:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x1A
  1276  00001B                     	ds	1
  1277  00001C                     ?_pad:
  1278                           	opt callstack 0
  1279  00001C                     ?___flmul:
  1280                           	opt callstack 0
  1281  00001C                     pad@fp:
  1282                           	opt callstack 0
  1283  00001C                     ___flmul@b:
  1284                           	opt callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x1B
  1287  00001C                     	ds	1
  1288  00001D                     _atoi$1153:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x1C
  1292  00001D                     	ds	1
  1293  00001E                     pad@buf:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x1D
  1297  00001E                     	ds	1
  1298  00001F                     _atoi$1152:
  1299                           	opt callstack 0
  1300                           
  1301                           ; 1 bytes @ 0x1E
  1302  00001F                     	ds	1
  1303  000020                     pad@p:
  1304                           	opt callstack 0
  1305  000020                     atoi@n:
  1306                           	opt callstack 0
  1307  000020                     ___flmul@a:
  1308                           	opt callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x1F
  1311  000020                     	ds	2
  1312  000022                     ??_pad:
  1313                           
  1314                           ; 1 bytes @ 0x21
  1315  000022                     	ds	1
  1316  000023                     pad@i:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x22
  1320  000023                     	ds	1
  1321  000024                     ??___flmul:
  1322                           
  1323                           ; 1 bytes @ 0x23
  1324  000024                     	ds	1
  1325  000025                     pad@w:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x24
  1329  000025                     	ds	3
  1330  000028                     ___flmul@sign:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 1 bytes @ 0x27
  1334  000028                     	ds	1
  1335  000029                     ___flmul@aexp:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 1 bytes @ 0x28
  1339  000029                     	ds	1
  1340  00002A                     ___flmul@grs:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 4 bytes @ 0x29
  1344  00002A                     	ds	4
  1345  00002E                     ___flmul@bexp:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 1 bytes @ 0x2D
  1349  00002E                     	ds	1
  1350  00002F                     ___flmul@prod:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 4 bytes @ 0x2E
  1354  00002F                     	ds	4
  1355  000033                     ___flmul@temp:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x32
  1359  000033                     	ds	2
  1360  000035                     ?___flsub:
  1361                           	opt callstack 0
  1362  000035                     ?_scalbnf:
  1363                           	opt callstack 0
  1364  000035                     ___flsub@b:
  1365                           	opt callstack 0
  1366  000035                     scalbnf@x:
  1367                           	opt callstack 0
  1368                           
  1369                           ; 4 bytes @ 0x34
  1370  000035                     	ds	4
  1371  000039                     scalbnf@n:
  1372                           	opt callstack 0
  1373  000039                     ___flsub@a:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x38
  1377  000039                     	ds	2
  1378  00003B                     ??_scalbnf:
  1379                           
  1380                           ; 1 bytes @ 0x3A
  1381  00003B                     	ds	2
  1382  00003D                     ?___fldiv:
  1383                           	opt callstack 0
  1384  00003D                     ___flge@ff1:
  1385                           	opt callstack 0
  1386  00003D                     ___fldiv@b:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 4 bytes @ 0x3C
  1390  00003D                     	ds	2
  1391  00003F                     scalbnf@u:
  1392                           	opt callstack 0
  1393                           
  1394                           ; 4 bytes @ 0x3E
  1395  00003F                     	ds	2
  1396  000041                     ___flge@ff2:
  1397                           	opt callstack 0
  1398  000041                     ___fldiv@a:
  1399                           	opt callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x40
  1402  000041                     	ds	2
  1403  000043                     scalbnf@y:
  1404                           	opt callstack 0
  1405                           
  1406                           ; 4 bytes @ 0x42
  1407  000043                     	ds	2
  1408  000045                     ??___fldiv:
  1409  000045                     ??___flge:
  1410                           
  1411                           ; 1 bytes @ 0x44
  1412  000045                     	ds	4
  1413  000049                     ?_sqrtf:
  1414                           	opt callstack 0
  1415  000049                     ___fldiv@rem:
  1416                           	opt callstack 0
  1417  000049                     sqrtf@x:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 4 bytes @ 0x48
  1421  000049                     	ds	4
  1422  00004D                     ??_sqrtf:
  1423  00004D                     ___fldiv@sign:
  1424                           	opt callstack 0
  1425                           
  1426                           ; 1 bytes @ 0x4C
  1427  00004D                     	ds	1
  1428  00004E                     ___fldiv@new_exp:
  1429                           	opt callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x4D
  1432  00004E                     	ds	2
  1433  000050                     ___fldiv@grs:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 4 bytes @ 0x4F
  1437  000050                     	ds	4
  1438  000054                     ___fldiv@bexp:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 1 bytes @ 0x53
  1442  000054                     	ds	1
  1443  000055                     ___fldiv@aexp:
  1444                           	opt callstack 0
  1445                           
  1446                           ; 1 bytes @ 0x54
  1447  000055                     	ds	1
  1448  000056                     ?_powf:
  1449                           	opt callstack 0
  1450  000056                     ?_floorf:
  1451                           	opt callstack 0
  1452  000056                     ?___fltol:
  1453                           	opt callstack 0
  1454  000056                     ___fltol@f1:
  1455                           	opt callstack 0
  1456  000056                     floorf@x:
  1457                           	opt callstack 0
  1458  000056                     powf@x:
  1459                           	opt callstack 0
  1460                           
  1461                           ; 4 bytes @ 0x55
  1462  000056                     	ds	4
  1463  00005A                     ??_floorf:
  1464  00005A                     ??___fltol:
  1465  00005A                     powf@y:
  1466                           	opt callstack 0
  1467                           
  1468                           ; 4 bytes @ 0x59
  1469  00005A                     	ds	4
  1470  00005E                     ??_powf:
  1471  00005E                     ___fltol@sign1:
  1472                           	opt callstack 0
  1473                           
  1474                           ; 1 bytes @ 0x5D
  1475  00005E                     	ds	1
  1476  00005F                     ___fltol@exp1:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x5E
  1480  00005F                     	ds	1
  1481  000060                     ?_efgtoa:
  1482                           	opt callstack 0
  1483  000060                     efgtoa@fp:
  1484                           	opt callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x5F
  1487  000060                     	ds	2
  1488  000062                     efgtoa@f:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 4 bytes @ 0x61
  1492  000062                     	ds	4
  1493  000066                     efgtoa@c:
  1494                           	opt callstack 0
  1495                           
  1496                           ; 1 bytes @ 0x65
  1497  000066                     	ds	1
  1498  000067                     
  1499                           ; 1 bytes @ 0x66
  1500 ;;
  1501 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1502 ;;
  1503 ;; *************** function _main *****************
  1504 ;; Defined at:
  1505 ;;		line 8 in file "main.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1519 ;;      Params:         0       0       0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0
  1522 ;;      Totals:         0       0       0       0       0       0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels required when called:   12
  1525 ;; This function calls:
  1526 ;;		_ADC_Read
  1527 ;;		_SYSTEM_Initialize
  1528 ;;		_memset
  1529 ;;		_sprintf
  1530 ;; This function is called by:
  1531 ;;		Startup code after reset
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text0
  1536  005426                     __ptext0:
  1537                           	opt callstack 0
  1538  005426                     _main:
  1539                           	opt callstack 19
  1540                           
  1541                           ;main.c: 10:     SYSTEM_Initialize() ;
  1542                           
  1543                           ;incstack = 0
  1544  005426  EC89  F02E         	call	_SYSTEM_Initialize	;wreg free
  1545  00542A                     l7549:
  1546                           
  1547                           ;main.c: 12:         memset(r,'\0',sizeof(r));
  1548  00542A  0EC6               	movlw	low _r
  1549  00542C  6E0C               	movwf	memset@dest^0,c
  1550  00542E  0E01               	movlw	high _r
  1551  005430  6E0D               	movwf	(memset@dest+1)^0,c
  1552  005432  0E00               	movlw	0
  1553  005434  6E0F               	movwf	(memset@c+1)^0,c
  1554  005436  0E00               	movlw	0
  1555  005438  6E0E               	movwf	memset@c^0,c
  1556  00543A  0E00               	movlw	0
  1557  00543C  6E11               	movwf	(memset@n+1)^0,c
  1558  00543E  0E0F               	movlw	15
  1559  005440  6E10               	movwf	memset@n^0,c
  1560  005442  EC4F  F028         	call	_memset	;wreg free
  1561                           
  1562                           ;main.c: 13:         sprintf(r,"%.2f",ADC_Read(0));
  1563  005446  0EC6               	movlw	low _r
  1564  005448  0100               	movlb	0	; () banked
  1565  00544A  6FE5               	movwf	sprintf@s& (0+255),b
  1566  00544C  0E01               	movlw	high _r
  1567  00544E  6FE6               	movwf	(sprintf@s+1)& (0+255),b
  1568  005450  0E90               	movlw	low STR_1
  1569  005452  6FE7               	movwf	sprintf@fmt& (0+255),b
  1570  005454  0E06               	movlw	high STR_1
  1571  005456  6FE8               	movwf	(sprintf@fmt+1)& (0+255),b
  1572  005458  0E00               	movlw	0
  1573  00545A  6FC1               	movwf	(ADC_Read@channel+1)& (0+255),b
  1574  00545C  0E00               	movlw	0
  1575  00545E  6FC0               	movwf	ADC_Read@channel& (0+255),b
  1576  005460  EC46  F026         	call	_ADC_Read	;wreg free
  1577  005464  C0C0  F0E9         	movff	?_ADC_Read,?_sprintf+4
  1578  005468  C0C1  F0EA         	movff	?_ADC_Read+1,?_sprintf+5
  1579  00546C  C0C2  F0EB         	movff	?_ADC_Read+2,?_sprintf+6
  1580  005470  C0C3  F0EC         	movff	?_ADC_Read+3,?_sprintf+7
  1581  005474  EC7E  F02C         	call	_sprintf	;wreg free
  1582                           
  1583                           ;main.c: 14:         _delay((unsigned long)((200)*(4000000/4000000.0)));
  1584  005478  0E42               	movlw	66
  1585  00547A                     u9827:
  1586  00547A  2EE8               	decfsz	wreg,f,c
  1587  00547C  D7FE               	bra	u9827
  1588  00547E  D000               	nop2	
  1589                           
  1590                           ;main.c: 16:         memset(r,'\0',sizeof(r));
  1591  005480  0EC6               	movlw	low _r
  1592  005482  6E0C               	movwf	memset@dest^0,c
  1593  005484  0E01               	movlw	high _r
  1594  005486  6E0D               	movwf	(memset@dest+1)^0,c
  1595  005488  0E00               	movlw	0
  1596  00548A  6E0F               	movwf	(memset@c+1)^0,c
  1597  00548C  0E00               	movlw	0
  1598  00548E  6E0E               	movwf	memset@c^0,c
  1599  005490  0E00               	movlw	0
  1600  005492  6E11               	movwf	(memset@n+1)^0,c
  1601  005494  0E0F               	movlw	15
  1602  005496  6E10               	movwf	memset@n^0,c
  1603  005498  EC4F  F028         	call	_memset	;wreg free
  1604                           
  1605                           ;main.c: 17:         sprintf(r,"%.1f",ADC_Read(1));
  1606  00549C  0EC6               	movlw	low _r
  1607  00549E  0100               	movlb	0	; () banked
  1608  0054A0  6FE5               	movwf	sprintf@s& (0+255),b
  1609  0054A2  0E01               	movlw	high _r
  1610  0054A4  6FE6               	movwf	(sprintf@s+1)& (0+255),b
  1611  0054A6  0E8B               	movlw	low STR_2
  1612  0054A8  6FE7               	movwf	sprintf@fmt& (0+255),b
  1613  0054AA  0E06               	movlw	high STR_2
  1614  0054AC  6FE8               	movwf	(sprintf@fmt+1)& (0+255),b
  1615  0054AE  0E00               	movlw	0
  1616  0054B0  6FC1               	movwf	(ADC_Read@channel+1)& (0+255),b
  1617  0054B2  0E01               	movlw	1
  1618  0054B4  6FC0               	movwf	ADC_Read@channel& (0+255),b
  1619  0054B6  EC46  F026         	call	_ADC_Read	;wreg free
  1620  0054BA  C0C0  F0E9         	movff	?_ADC_Read,?_sprintf+4
  1621  0054BE  C0C1  F0EA         	movff	?_ADC_Read+1,?_sprintf+5
  1622  0054C2  C0C2  F0EB         	movff	?_ADC_Read+2,?_sprintf+6
  1623  0054C6  C0C3  F0EC         	movff	?_ADC_Read+3,?_sprintf+7
  1624  0054CA  EC7E  F02C         	call	_sprintf	;wreg free
  1625                           
  1626                           ;main.c: 18:         _delay((unsigned long)((200)*(4000000/4000000.0)));
  1627  0054CE  0E42               	movlw	66
  1628  0054D0                     u9837:
  1629  0054D0  2EE8               	decfsz	wreg,f,c
  1630  0054D2  D7FE               	bra	u9837
  1631  0054D4  D000               	nop2	
  1632  0054D6  D7A9               	goto	l7549
  1633  0054D8                     __end_of_main:
  1634                           	opt callstack 0
  1635                           
  1636 ;; *************** function _sprintf *****************
  1637 ;; Defined at:
  1638 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  s               2  101[BANK0 ] PTR unsigned char 
  1641 ;;		 -> r(15), 
  1642 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  1643 ;;		 -> STR_2(5), STR_1(5), 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  f               6  192[BANK1 ] struct _IO_FILE
  1646 ;;  ap              2  190[BANK1 ] PTR void [1]
  1647 ;;		 -> ?_sprintf(2), 
  1648 ;;  ret             2    0        int 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  2  101[BANK0 ] int 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1658 ;;      Params:         0       8       0       0       0       0       0
  1659 ;;      Locals:         0       0      10       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0
  1661 ;;      Totals:         0       8      10       0       0       0       0
  1662 ;;Total ram usage:       18 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:   11
  1665 ;; This function calls:
  1666 ;;		_vfprintf
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text1
  1673  0058FC                     __ptext1:
  1674                           	opt callstack 0
  1675  0058FC                     _sprintf:
  1676                           	opt callstack 19
  1677                           
  1678                           ;incstack = 0
  1679  0058FC  0EE9               	movlw	low (?_sprintf+4)
  1680  0058FE  0101               	movlb	1	; () banked
  1681  005900  6FBE               	movwf	sprintf@ap& (0+255),b
  1682  005902  0E00               	movlw	high (?_sprintf+4)
  1683  005904  6FBF               	movwf	(sprintf@ap+1)& (0+255),b
  1684  005906  C0E5  F1C0         	movff	sprintf@s,sprintf@f
  1685  00590A  C0E6  F1C1         	movff	sprintf@s+1,sprintf@f+1
  1686                           
  1687                           ; BSR set to: 1
  1688  00590E  0E00               	movlw	0
  1689  005910  6FC3               	movwf	(sprintf@f+3)& (0+255),b
  1690  005912  0E00               	movlw	0
  1691  005914  6FC2               	movwf	(sprintf@f+2)& (0+255),b
  1692                           
  1693                           ; BSR set to: 1
  1694  005916  0E00               	movlw	0
  1695  005918  6FC5               	movwf	(sprintf@f+5)& (0+255),b
  1696  00591A  0E00               	movlw	0
  1697  00591C  6FC4               	movwf	(sprintf@f+4)& (0+255),b
  1698                           
  1699                           ; BSR set to: 1
  1700  00591E  0EC0               	movlw	low sprintf@f
  1701  005920  0100               	movlb	0	; () banked
  1702  005922  6FDD               	movwf	vfprintf@fp& (0+255),b
  1703  005924  0E01               	movlw	high sprintf@f
  1704  005926  6FDE               	movwf	(vfprintf@fp+1)& (0+255),b
  1705  005928  C0E7  F0DF         	movff	sprintf@fmt,vfprintf@fmt
  1706  00592C  C0E8  F0E0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1707  005930  0EBE               	movlw	low sprintf@ap
  1708  005932  6FE1               	movwf	vfprintf@ap& (0+255),b
  1709  005934  0E01               	movlw	high sprintf@ap
  1710  005936  6FE2               	movwf	(vfprintf@ap+1)& (0+255),b
  1711  005938  ECD8  F02C         	call	_vfprintf	;wreg free
  1712  00593C  0101               	movlb	1	; () banked
  1713  00593E  51C2               	movf	(sprintf@f+2)& (0+255),w,b
  1714  005940  0100               	movlb	0	; () banked
  1715  005942  25E5               	addwf	sprintf@s& (0+255),w,b
  1716  005944  6ED9               	movwf	fsr2l,c
  1717  005946  0101               	movlb	1	; () banked
  1718  005948  51C3               	movf	(sprintf@f+3)& (0+255),w,b
  1719  00594A  0100               	movlb	0	; () banked
  1720  00594C  21E6               	addwfc	(sprintf@s+1)& (0+255),w,b
  1721  00594E  6EDA               	movwf	fsr2h,c
  1722  005950  0E00               	movlw	0
  1723  005952  6EDF               	movwf	indf2,c
  1724                           
  1725                           ; BSR set to: 0
  1726  005954  0012               	return		;funcret
  1727  005956                     __end_of_sprintf:
  1728                           	opt callstack 0
  1729                           
  1730 ;; *************** function _vfprintf *****************
  1731 ;; Defined at:
  1732 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  fp              2   93[BANK0 ] PTR struct _IO_FILE
  1735 ;;		 -> sprintf@f(6), 
  1736 ;;  fmt             2   95[BANK0 ] PTR const unsigned char 
  1737 ;;		 -> STR_2(5), STR_1(5), 
  1738 ;;  ap              2   97[BANK0 ] PTR PTR void 
  1739 ;;		 -> sprintf@ap(2), 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  cfmt            2   99[BANK0 ] PTR unsigned char 
  1742 ;;		 -> STR_2(5), STR_1(5), 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2   93[BANK0 ] int 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1752 ;;      Params:         0       6       0       0       0       0       0
  1753 ;;      Locals:         0       2       0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0
  1755 ;;      Totals:         0       8       0       0       0       0       0
  1756 ;;Total ram usage:        8 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:   10
  1759 ;; This function calls:
  1760 ;;		_vfpfcnvrt
  1761 ;; This function is called by:
  1762 ;;		_sprintf
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text2
  1767  0059B0                     __ptext2:
  1768                           	opt callstack 0
  1769  0059B0                     _vfprintf:
  1770                           	opt callstack 19
  1771                           
  1772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;incstack = 0
  1776  0059B0  C0DF  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  1777  0059B4  C0E0  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1778                           
  1779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1780  0059B8  0E00               	movlw	0
  1781  0059BA  0100               	movlb	0	; () banked
  1782  0059BC  6FFA               	movwf	(_nout+1)& (0+255),b
  1783  0059BE  0E00               	movlw	0
  1784  0059C0  6FF9               	movwf	_nout& (0+255),b
  1785                           
  1786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1787  0059C2  D013               	goto	l7511
  1788  0059C4                     l7509:
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1792  0059C4  C0DD  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  1793  0059C8  C0DE  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1794  0059CC  0EE3               	movlw	low vfprintf@cfmt
  1795  0059CE  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  1796  0059D0  0E00               	movlw	high vfprintf@cfmt
  1797  0059D2  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1798  0059D4  C0E1  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  1799  0059D8  C0E2  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1800  0059DC  EC5D  F01D         	call	_vfpfcnvrt	;wreg free
  1801  0059E0  0100               	movlb	0	; () banked
  1802  0059E2  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  1803  0059E4  27F9               	addwf	_nout& (0+255),f,b
  1804  0059E6  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1805  0059E8  23FA               	addwfc	(_nout+1)& (0+255),f,b
  1806  0059EA                     l7511:
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1810  0059EA  C0E3  FFF6         	movff	vfprintf@cfmt,tblptrl
  1811  0059EE  C0E4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1812  0059F2                     	if	0	;tblptru may be non-zero
  1813  0059F2                     	endif
  1814  0059F2                     	if	0	;tblptru may be non-zero
  1815  0059F2                     	endif
  1816  0059F2  0008               	tblrd		*
  1817  0059F4  50F5               	movf	tablat,w,c
  1818  0059F6  0900               	iorlw	0
  1819  0059F8  A4D8               	btfss	status,2,c
  1820  0059FA  D7E4               	goto	l7509
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1824  0059FC  C0F9  F0DD         	movff	_nout,?_vfprintf
  1825  005A00  C0FA  F0DE         	movff	_nout+1,?_vfprintf+1
  1826                           
  1827                           ; BSR set to: 0
  1828  005A04  0012               	return		;funcret
  1829  005A06                     __end_of_vfprintf:
  1830                           	opt callstack 0
  1831                           
  1832 ;; *************** function _vfpfcnvrt *****************
  1833 ;; Defined at:
  1834 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  1837 ;;		 -> sprintf@f(6), 
  1838 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  1839 ;;		 -> vfprintf@cfmt(2), 
  1840 ;;  ap              2   75[BANK0 ] PTR PTR void 
  1841 ;;		 -> sprintf@ap(2), 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  llu             8    0        unsigned long long 
  1844 ;;  ll              8    0        long long 
  1845 ;;  f               4   85[BANK0 ] long long 
  1846 ;;  ct              3   89[BANK0 ] unsigned char [3]
  1847 ;;  vp              3    0        PTR void 
  1848 ;;  cp              3    0        PTR unsigned char 
  1849 ;;  i               2    0        int 
  1850 ;;  done            2    0        int 
  1851 ;;  c               1   92[BANK0 ] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2   71[BANK0 ] int 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1861 ;;      Params:         0       6       0       0       0       0       0
  1862 ;;      Locals:         0      12       0       0       0       0       0
  1863 ;;      Temps:          0       4       0       0       0       0       0
  1864 ;;      Totals:         0      22       0       0       0       0       0
  1865 ;;Total ram usage:       22 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    9
  1868 ;; This function calls:
  1869 ;;		_atoi
  1870 ;;		_efgtoa
  1871 ;;		_fputc
  1872 ;;		_isdigit
  1873 ;;		_isupper
  1874 ;;		_strncmp
  1875 ;;		_tolower
  1876 ;; This function is called by:
  1877 ;;		_vfprintf
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text3
  1882  003ABA                     __ptext3:
  1883                           	opt callstack 0
  1884  003ABA                     _vfpfcnvrt:
  1885                           	opt callstack 19
  1886                           
  1887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;incstack = 0
  1891  003ABA  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1892  003ABE  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1893  003AC2  CFDE FFF6          	movff	postinc2,tblptrl
  1894  003AC6  CFDD FFF7          	movff	postdec2,tblptrh
  1895  003ACA                     	if	0	;tblptru may be non-zero
  1896  003ACA                     	endif
  1897  003ACA                     	if	0	;tblptru may be non-zero
  1898  003ACA                     	endif
  1899  003ACA  0008               	tblrd		*
  1900  003ACC  50F5               	movf	tablat,w,c
  1901  003ACE  0A25               	xorlw	37
  1902  003AD0  A4D8               	btfss	status,2,c
  1903  003AD2  D1B1               	goto	l7479
  1904                           
  1905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1906  003AD4  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1907  003AD8  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1908  003ADC  2ADE               	incf	postinc2,f,c
  1909  003ADE  0E00               	movlw	0
  1910  003AE0  22DD               	addwfc	postdec2,f,c
  1911                           
  1912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1913  003AE2  0E00               	movlw	0
  1914  003AE4  6E6A               	movwf	(_width+1)^0,c
  1915  003AE6  0E00               	movlw	0
  1916  003AE8  6E69               	movwf	_width^0,c
  1917  003AEA  C069  F06D         	movff	_width,_flags
  1918  003AEE  C06A  F06E         	movff	_width+1,_flags+1
  1919                           
  1920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1921  003AF2  686B               	setf	_prec^0,c
  1922  003AF4  686C               	setf	(_prec+1)^0,c
  1923                           
  1924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1925  003AF6  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1926  003AFA  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1927  003AFE  CFDE FFF6          	movff	postinc2,tblptrl
  1928  003B02  CFDD FFF7          	movff	postdec2,tblptrh
  1929  003B06                     	if	0	;tblptru may be non-zero
  1930  003B06                     	endif
  1931  003B06                     	if	0	;tblptru may be non-zero
  1932  003B06                     	endif
  1933  003B06  0008               	tblrd		*
  1934  003B08  50F5               	movf	tablat,w,c
  1935  003B0A  0A2E               	xorlw	46
  1936  003B0C  A4D8               	btfss	status,2,c
  1937  003B0E  D06E               	goto	u9680
  1938                           
  1939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1940  003B10  0E00               	movlw	0
  1941  003B12  6E6C               	movwf	(_prec+1)^0,c
  1942  003B14  0E00               	movlw	0
  1943  003B16  6E6B               	movwf	_prec^0,c
  1944                           
  1945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1946  003B18  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1947  003B1C  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1948  003B20  2ADE               	incf	postinc2,f,c
  1949  003B22  0E00               	movlw	0
  1950  003B24  22DD               	addwfc	postdec2,f,c
  1951                           
  1952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1953  003B26  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1954  003B2A  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1955  003B2E  CFDE FFF6          	movff	postinc2,tblptrl
  1956  003B32  CFDD FFF7          	movff	postdec2,tblptrh
  1957  003B36                     	if	0	;tblptru may be non-zero
  1958  003B36                     	endif
  1959  003B36                     	if	0	;tblptru may be non-zero
  1960  003B36                     	endif
  1961  003B36  0008               	tblrd		*
  1962  003B38  50F5               	movf	tablat,w,c
  1963  003B3A  0A2A               	xorlw	42
  1964  003B3C  A4D8               	btfss	status,2,c
  1965  003B3E  D01C               	goto	l7415
  1966                           
  1967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1968  003B40  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1969  003B44  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1970  003B48  2ADE               	incf	postinc2,f,c
  1971  003B4A  0E00               	movlw	0
  1972  003B4C  22DD               	addwfc	postdec2,f,c
  1973                           
  1974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1975  003B4E  C0CB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1976  003B52  C0CC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1977  003B56  CFDF F0CD          	movff	indf2,??_vfpfcnvrt
  1978  003B5A  0E02               	movlw	2
  1979  003B5C  26DE               	addwf	postinc2,f,c
  1980  003B5E  CFDF F0CE          	movff	indf2,??_vfpfcnvrt+1
  1981  003B62  0E00               	movlw	0
  1982  003B64  22DD               	addwfc	postdec2,f,c
  1983  003B66  C0CD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1984  003B6A  C0CE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1985  003B6E  CFDE F06B          	movff	postinc2,_prec
  1986  003B72  CFDD F06C          	movff	postdec2,_prec+1
  1987                           
  1988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1989  003B76  D03A               	goto	u9680
  1990  003B78                     l7415:
  1991                           
  1992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1993  003B78  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1994  003B7C  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1995  003B80  CFDE F013          	movff	postinc2,atoi@s
  1996  003B84  CFDD F014          	movff	postdec2,atoi@s+1
  1997  003B88  EC0F  F027         	call	_atoi	;wreg free
  1998  003B8C  C013  F06B         	movff	?_atoi,_prec
  1999  003B90  C014  F06C         	movff	?_atoi+1,_prec+1
  2000                           
  2001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2002  003B94  D007               	goto	l7419
  2003  003B96                     l7417:
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2007  003B96  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2008  003B9A  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2009  003B9E  2ADE               	incf	postinc2,f,c
  2010  003BA0  0E00               	movlw	0
  2011  003BA2  22DD               	addwfc	postdec2,f,c
  2012  003BA4                     l7419:
  2013  003BA4  0ED0               	movlw	208
  2014  003BA6  0100               	movlb	0	; () banked
  2015  003BA8  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  2016  003BAA  0EFF               	movlw	255
  2017  003BAC  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2018  003BAE  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2019  003BB2  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2020  003BB6  CFDE FFF6          	movff	postinc2,tblptrl
  2021  003BBA  CFDD FFF7          	movff	postdec2,tblptrh
  2022  003BBE                     	if	0	;tblptru may be non-zero
  2023  003BBE                     	endif
  2024  003BBE                     	if	0	;tblptru may be non-zero
  2025  003BBE                     	endif
  2026  003BBE  0008               	tblrd		*
  2027  003BC0  50F5               	movf	tablat,w,c
  2028  003BC2  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2029  003BC4  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2030  003BC6  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  2031  003BC8  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2032  003BCA  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2033  003BCC  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2034  003BCE  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2035  003BD0  E106               	bnz	u9660
  2036  003BD2  0E0A               	movlw	10
  2037  003BD4  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2038  003BD6  B0D8               	btfsc	status,0,c
  2039  003BD8  D002               	goto	u9660
  2040  003BDA  0E01               	movlw	1
  2041  003BDC  D001               	goto	u9670
  2042  003BDE                     u9660:
  2043  003BDE  0E00               	movlw	0
  2044  003BE0                     u9670:
  2045  003BE0  6FD1               	movwf	_vfpfcnvrt$676& (0+255),b
  2046  003BE2  6BD2               	clrf	(_vfpfcnvrt$676+1)& (0+255),b
  2047                           
  2048                           ; BSR set to: 0
  2049  003BE4  51D1               	movf	_vfpfcnvrt$676& (0+255),w,b
  2050  003BE6  11D2               	iorwf	(_vfpfcnvrt$676+1)& (0+255),w,b
  2051  003BE8  A4D8               	btfss	status,2,c
  2052  003BEA  D7D5               	goto	l7417
  2053  003BEC                     u9680:
  2054                           
  2055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2056  003BEC  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2057  003BF0  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2058  003BF4  CFDE FFF6          	movff	postinc2,tblptrl
  2059  003BF8  CFDD FFF7          	movff	postdec2,tblptrh
  2060  003BFC                     	if	0	;tblptru may be non-zero
  2061  003BFC                     	endif
  2062  003BFC                     	if	0	;tblptru may be non-zero
  2063  003BFC                     	endif
  2064  003BFC  0008               	tblrd		*
  2065  003BFE  50F5               	movf	tablat,w,c
  2066  003C00  6E12               	movwf	tolower@c^0,c
  2067  003C02  6A13               	clrf	(tolower@c+1)^0,c
  2068  003C04  EC2C  F02D         	call	_tolower	;wreg free
  2069  003C08  5012               	movf	?_tolower^0,w,c
  2070  003C0A  0100               	movlb	0	; () banked
  2071  003C0C  6FD9               	movwf	vfpfcnvrt@ct& (0+255),b
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2075  003C0E  51D9               	movf	vfpfcnvrt@ct& (0+255),w,b
  2076  003C10  B4D8               	btfsc	status,2,c
  2077  003C12  D035               	goto	l7435
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2081  003C14  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2082  003C18  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2083  003C1C  CFDE F0CD          	movff	postinc2,??_vfpfcnvrt
  2084  003C20  CFDD F0CE          	movff	postdec2,??_vfpfcnvrt+1
  2085  003C24  0E01               	movlw	1
  2086  003C26  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  2087  003C28  0E00               	movlw	0
  2088  003C2A  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2089  003C2C  C0CD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2090  003C30  C0CE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2091  003C34                     	if	0	;tblptru may be non-zero
  2092  003C34                     	endif
  2093  003C34                     	if	0	;tblptru may be non-zero
  2094  003C34                     	endif
  2095  003C34  0008               	tblrd		*
  2096  003C36  50F5               	movf	tablat,w,c
  2097  003C38  6E12               	movwf	tolower@c^0,c
  2098  003C3A  6A13               	clrf	(tolower@c+1)^0,c
  2099  003C3C  EC2C  F02D         	call	_tolower	;wreg free
  2100  003C40  5012               	movf	?_tolower^0,w,c
  2101  003C42  0100               	movlb	0	; () banked
  2102  003C44  6FDA               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2106  003C46  51DA               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2107  003C48  B4D8               	btfsc	status,2,c
  2108  003C4A  D019               	goto	l7435
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2112  003C4C  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2113  003C50  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2114  003C54  CFDE F0CD          	movff	postinc2,??_vfpfcnvrt
  2115  003C58  CFDD F0CE          	movff	postdec2,??_vfpfcnvrt+1
  2116  003C5C  0E02               	movlw	2
  2117  003C5E  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  2118  003C60  0E00               	movlw	0
  2119  003C62  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2120  003C64  C0CD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2121  003C68  C0CE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2122  003C6C                     	if	0	;tblptru may be non-zero
  2123  003C6C                     	endif
  2124  003C6C                     	if	0	;tblptru may be non-zero
  2125  003C6C                     	endif
  2126  003C6C  0008               	tblrd		*
  2127  003C6E  50F5               	movf	tablat,w,c
  2128  003C70  6E12               	movwf	tolower@c^0,c
  2129  003C72  6A13               	clrf	(tolower@c+1)^0,c
  2130  003C74  EC2C  F02D         	call	_tolower	;wreg free
  2131  003C78  5012               	movf	?_tolower^0,w,c
  2132  003C7A  0100               	movlb	0	; () banked
  2133  003C7C  6FDB               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2134  003C7E                     l7435:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2138  003C7E  0E66               	movlw	102
  2139  003C80  19D9               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2140  003C82  A4D8               	btfss	status,2,c
  2141  003C84  D03F               	goto	l7447
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2145  003C86  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2146  003C8A  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2147  003C8E  CFDE FFF6          	movff	postinc2,tblptrl
  2148  003C92  CFDD FFF7          	movff	postdec2,tblptrh
  2149  003C96                     	if	0	;tblptru may be non-zero
  2150  003C96                     	endif
  2151  003C96                     	if	0	;tblptru may be non-zero
  2152  003C96                     	endif
  2153  003C96  0008               	tblrd		*
  2154  003C98  CFF5 F0DC          	movff	tablat,vfpfcnvrt@c
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2158  003C9C  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2159  003CA0  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2160  003CA4  2ADE               	incf	postinc2,f,c
  2161  003CA6  0E00               	movlw	0
  2162  003CA8  22DD               	addwfc	postdec2,f,c
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2166  003CAA  C0CB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2167  003CAE  C0CC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2168  003CB2  CFDF F0CD          	movff	indf2,??_vfpfcnvrt
  2169  003CB6  0E04               	movlw	4
  2170  003CB8  26DE               	addwf	postinc2,f,c
  2171  003CBA  CFDF F0CE          	movff	indf2,??_vfpfcnvrt+1
  2172  003CBE  0E00               	movlw	0
  2173  003CC0  22DD               	addwfc	postdec2,f,c
  2174  003CC2  C0CD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2175  003CC6  C0CE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2176  003CCA  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f
  2177  003CCE  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+1
  2178  003CD2  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+2
  2179  003CD6  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+3
  2180  003CDA                     l7443:
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2184  003CDA  C0C7  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2185  003CDE  C0C8  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2186  003CE2  C0D5  F062         	movff	vfpfcnvrt@f,efgtoa@f
  2187  003CE6  C0D6  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2188  003CEA  C0D7  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2189  003CEE  C0D8  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2190  003CF2  C0DC  F066         	movff	vfpfcnvrt@c,efgtoa@c
  2191  003CF6  EC86  F016         	call	_efgtoa	;wreg free
  2192  003CFA  C060  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  2193  003CFE  C061  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2194  003D02  0012               	return	
  2195  003D04                     l7447:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2199  003D04  0ED9               	movlw	low vfpfcnvrt@ct
  2200  003D06  6E0C               	movwf	strncmp@_l^0,c
  2201  003D08  0E00               	movlw	high vfpfcnvrt@ct
  2202  003D0A  6E0D               	movwf	(strncmp@_l+1)^0,c
  2203  003D0C  0EA5               	movlw	low STR_13
  2204  003D0E  6E0E               	movwf	strncmp@_r^0,c
  2205  003D10  0E06               	movlw	high STR_13
  2206  003D12  6E0F               	movwf	(strncmp@_r+1)^0,c
  2207  003D14  0E00               	movlw	0
  2208  003D16  6E11               	movwf	(strncmp@n+1)^0,c
  2209  003D18  0E02               	movlw	2
  2210  003D1A  6E10               	movwf	strncmp@n^0,c
  2211  003D1C  EC6C  F02A         	call	_strncmp	;wreg free
  2212  003D20  500C               	movf	?_strncmp^0,w,c
  2213  003D22  100D               	iorwf	(?_strncmp+1)^0,w,c
  2214  003D24  A4D8               	btfss	status,2,c
  2215  003D26  D056               	goto	l7463
  2216                           
  2217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2218  003D28  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2219  003D2C  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2220  003D30  CFDE F0CD          	movff	postinc2,??_vfpfcnvrt
  2221  003D34  CFDD F0CE          	movff	postdec2,??_vfpfcnvrt+1
  2222  003D38  0E01               	movlw	1
  2223  003D3A  0100               	movlb	0	; () banked
  2224  003D3C  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  2225  003D3E  0E00               	movlw	0
  2226  003D40  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2227  003D42  C0CD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2228  003D46  C0CE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2229  003D4A                     	if	0	;tblptru may be non-zero
  2230  003D4A                     	endif
  2231  003D4A                     	if	0	;tblptru may be non-zero
  2232  003D4A                     	endif
  2233  003D4A  0008               	tblrd		*
  2234  003D4C  CFF5 F0DC          	movff	tablat,vfpfcnvrt@c
  2235  003D50  0EBF               	movlw	191
  2236  003D52  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  2237  003D54  0EFF               	movlw	255
  2238  003D56  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2239  003D58  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2240  003D5C  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2241  003D60  CFDE FFF6          	movff	postinc2,tblptrl
  2242  003D64  CFDD FFF7          	movff	postdec2,tblptrh
  2243  003D68                     	if	0	;tblptru may be non-zero
  2244  003D68                     	endif
  2245  003D68                     	if	0	;tblptru may be non-zero
  2246  003D68                     	endif
  2247  003D68  0008               	tblrd		*
  2248  003D6A  50F5               	movf	tablat,w,c
  2249  003D6C  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2250  003D6E  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2251  003D70  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  2252  003D72  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2253  003D74  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2254  003D76  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2255  003D78  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2256  003D7A  E106               	bnz	u9730
  2257  003D7C  0E1A               	movlw	26
  2258  003D7E  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2259  003D80  B0D8               	btfsc	status,0,c
  2260  003D82  D002               	goto	u9730
  2261  003D84  0E01               	movlw	1
  2262  003D86  D001               	goto	u9740
  2263  003D88                     u9730:
  2264  003D88  0E00               	movlw	0
  2265  003D8A                     u9740:
  2266  003D8A  6FD3               	movwf	_vfpfcnvrt$680& (0+255),b
  2267  003D8C  6BD4               	clrf	(_vfpfcnvrt$680+1)& (0+255),b
  2268                           
  2269                           ; BSR set to: 0
  2270  003D8E  51D3               	movf	_vfpfcnvrt$680& (0+255),w,b
  2271  003D90  11D4               	iorwf	(_vfpfcnvrt$680+1)& (0+255),w,b
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2275                           
  2276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2280  003D92  C0CB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2281  003D96  C0CC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2282  003D9A  CFDF F0CD          	movff	indf2,??_vfpfcnvrt
  2283  003D9E  0E04               	movlw	4
  2284  003DA0  26DE               	addwf	postinc2,f,c
  2285  003DA2  CFDF F0CE          	movff	indf2,??_vfpfcnvrt+1
  2286  003DA6  0E00               	movlw	0
  2287  003DA8  22DD               	addwfc	postdec2,f,c
  2288  003DAA  C0CD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2289  003DAE  C0CE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2290  003DB2  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f
  2291  003DB6  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+1
  2292  003DBA  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+2
  2293  003DBE  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+3
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2297                           
  2298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2299  003DC2  0E02               	movlw	2
  2300  003DC4  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2301  003DC8  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2302  003DCC  26DE               	addwf	postinc2,f,c
  2303  003DCE  0E00               	movlw	0
  2304  003DD0  22DD               	addwfc	postdec2,f,c
  2305  003DD2  D783               	goto	l7443
  2306  003DD4                     l7463:
  2307                           
  2308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2309  003DD4  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2310  003DD8  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2311  003DDC  CFDE FFF6          	movff	postinc2,tblptrl
  2312  003DE0  CFDD FFF7          	movff	postdec2,tblptrh
  2313  003DE4                     	if	0	;tblptru may be non-zero
  2314  003DE4                     	endif
  2315  003DE4                     	if	0	;tblptru may be non-zero
  2316  003DE4                     	endif
  2317  003DE4  0008               	tblrd		*
  2318  003DE6  50F5               	movf	tablat,w,c
  2319  003DE8  0A25               	xorlw	37
  2320  003DEA  A4D8               	btfss	status,2,c
  2321  003DEC  D017               	goto	l7473
  2322                           
  2323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2324  003DEE  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2325  003DF2  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2326  003DF6  2ADE               	incf	postinc2,f,c
  2327  003DF8  0E00               	movlw	0
  2328  003DFA  22DD               	addwfc	postdec2,f,c
  2329                           
  2330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2331  003DFC  0E00               	movlw	0
  2332  003DFE  6E0D               	movwf	(fputc@c+1)^0,c
  2333  003E00  0E25               	movlw	37
  2334  003E02  6E0C               	movwf	fputc@c^0,c
  2335  003E04  C0C7  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  2336  003E08  C0C8  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2337  003E0C  ECBD  F02A         	call	_fputc	;wreg free
  2338  003E10                     l7469:
  2339                           
  2340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2341  003E10  0E00               	movlw	0
  2342  003E12  0100               	movlb	0	; () banked
  2343  003E14  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2344  003E16  0E01               	movlw	1
  2345  003E18  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  2346  003E1A  0012               	return	
  2347  003E1C                     l7473:
  2348                           
  2349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2350  003E1C  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2351  003E20  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2352  003E24  2ADE               	incf	postinc2,f,c
  2353  003E26  0E00               	movlw	0
  2354  003E28  22DD               	addwfc	postdec2,f,c
  2355                           
  2356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2357  003E2A  0E00               	movlw	0
  2358  003E2C  0100               	movlb	0	; () banked
  2359  003E2E  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2360  003E30  0E00               	movlw	0
  2361  003E32  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  2362  003E34  0012               	return	
  2363  003E36                     l7479:
  2364                           
  2365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2366  003E36  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2367  003E3A  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2368  003E3E  CFDE FFF6          	movff	postinc2,tblptrl
  2369  003E42  CFDD FFF7          	movff	postdec2,tblptrh
  2370  003E46                     	if	0	;tblptru may be non-zero
  2371  003E46                     	endif
  2372  003E46                     	if	0	;tblptru may be non-zero
  2373  003E46                     	endif
  2374  003E46  0008               	tblrd		*
  2375  003E48  50F5               	movf	tablat,w,c
  2376  003E4A  6E0C               	movwf	fputc@c^0,c
  2377  003E4C  6A0D               	clrf	(fputc@c+1)^0,c
  2378  003E4E  C0C7  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  2379  003E52  C0C8  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2380  003E56  ECBD  F02A         	call	_fputc	;wreg free
  2381                           
  2382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2383  003E5A  C0C9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2384  003E5E  C0CA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2385  003E62  2ADE               	incf	postinc2,f,c
  2386  003E64  0E00               	movlw	0
  2387  003E66  22DD               	addwfc	postdec2,f,c
  2388  003E68  D7D3               	goto	l7469
  2389  003E6A                     __end_of_vfpfcnvrt:
  2390                           	opt callstack 0
  2391                           
  2392 ;; *************** function _strncmp *****************
  2393 ;; Defined at:
  2394 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  _l              2   11[COMRAM] PTR const unsigned char 
  2397 ;;		 -> vfpfcnvrt@ct(3), 
  2398 ;;  _r              2   13[COMRAM] PTR const unsigned char 
  2399 ;;		 -> STR_15(3), 
  2400 ;;  n               2   15[COMRAM] unsigned int 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  r               2   20[COMRAM] PTR const unsigned char 
  2403 ;;		 -> STR_15(3), 
  2404 ;;  l               2   18[COMRAM] PTR const unsigned char 
  2405 ;;		 -> vfpfcnvrt@ct(3), 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  2   11[COMRAM] int 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2415 ;;      Params:         6       0       0       0       0       0       0
  2416 ;;      Locals:         4       0       0       0       0       0       0
  2417 ;;      Temps:          1       0       0       0       0       0       0
  2418 ;;      Totals:        11       0       0       0       0       0       0
  2419 ;;Total ram usage:       11 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    4
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_vfpfcnvrt
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text4
  2430  0054D8                     __ptext4:
  2431                           	opt callstack 0
  2432  0054D8                     _strncmp:
  2433                           	opt callstack 23
  2434                           
  2435                           ;incstack = 0
  2436  0054D8  C00C  F013         	movff	strncmp@_l,strncmp@l
  2437  0054DC  C00D  F014         	movff	strncmp@_l+1,strncmp@l+1
  2438  0054E0  C00E  F015         	movff	strncmp@_r,strncmp@r
  2439  0054E4  C00F  F016         	movff	strncmp@_r+1,strncmp@r+1
  2440  0054E8  0610               	decf	strncmp@n^0,f,c
  2441  0054EA  A0D8               	btfss	status,0,c
  2442  0054EC  0611               	decf	(strncmp@n+1)^0,f,c
  2443  0054EE  2810               	incf	strncmp@n^0,w,c
  2444  0054F0  E10F               	bnz	l6819
  2445  0054F2  2811               	incf	(strncmp@n+1)^0,w,c
  2446  0054F4  A4D8               	btfss	status,2,c
  2447  0054F6  D00C               	goto	l6819
  2448  0054F8  0E00               	movlw	0
  2449  0054FA  6E0D               	movwf	(?_strncmp+1)^0,c
  2450  0054FC  0E00               	movlw	0
  2451  0054FE  6E0C               	movwf	?_strncmp^0,c
  2452  005500  0012               	return	
  2453  005502                     l6817:
  2454  005502  4A13               	infsnz	strncmp@l^0,f,c
  2455  005504  2A14               	incf	(strncmp@l+1)^0,f,c
  2456  005506  4A15               	infsnz	strncmp@r^0,f,c
  2457  005508  2A16               	incf	(strncmp@r+1)^0,f,c
  2458  00550A  0610               	decf	strncmp@n^0,f,c
  2459  00550C  A0D8               	btfss	status,0,c
  2460  00550E  0611               	decf	(strncmp@n+1)^0,f,c
  2461  005510                     l6819:
  2462  005510  C013  FFD9         	movff	strncmp@l,fsr2l
  2463  005514  C014  FFDA         	movff	strncmp@l+1,fsr2h
  2464  005518  50DF               	movf	indf2,w,c
  2465  00551A  B4D8               	btfsc	status,2,c
  2466  00551C  D01C               	goto	u8840
  2467  00551E  C015  FFF6         	movff	strncmp@r,tblptrl
  2468  005522  C016  FFF7         	movff	strncmp@r+1,tblptrh
  2469  005526                     	if	0	;tblptru may be non-zero
  2470  005526                     	endif
  2471  005526                     	if	0	;tblptru may be non-zero
  2472  005526                     	endif
  2473  005526  0008               	tblrd		*
  2474  005528  50F5               	movf	tablat,w,c
  2475  00552A  0900               	iorlw	0
  2476  00552C  B4D8               	btfsc	status,2,c
  2477  00552E  D013               	goto	u8840
  2478  005530  5010               	movf	strncmp@n^0,w,c
  2479  005532  1011               	iorwf	(strncmp@n+1)^0,w,c
  2480  005534  B4D8               	btfsc	status,2,c
  2481  005536  D00F               	goto	u8840
  2482  005538  C013  FFD9         	movff	strncmp@l,fsr2l
  2483  00553C  C014  FFDA         	movff	strncmp@l+1,fsr2h
  2484  005540  50DF               	movf	indf2,w,c
  2485  005542  6E12               	movwf	??_strncmp^0,c
  2486  005544  C015  FFF6         	movff	strncmp@r,tblptrl
  2487  005548  C016  FFF7         	movff	strncmp@r+1,tblptrh
  2488  00554C                     	if	0	;tblptru may be non-zero
  2489  00554C                     	endif
  2490  00554C                     	if	0	;tblptru may be non-zero
  2491  00554C                     	endif
  2492  00554C  0008               	tblrd		*
  2493  00554E  50F5               	movf	tablat,w,c
  2494  005550  1812               	xorwf	??_strncmp^0,w,c
  2495  005552  B4D8               	btfsc	status,2,c
  2496  005554  D7D6               	goto	l6817
  2497  005556                     u8840:
  2498  005556  C013  FFD9         	movff	strncmp@l,fsr2l
  2499  00555A  C014  FFDA         	movff	strncmp@l+1,fsr2h
  2500  00555E  50DF               	movf	indf2,w,c
  2501  005560  6E12               	movwf	??_strncmp^0,c
  2502  005562  C015  FFF6         	movff	strncmp@r,tblptrl
  2503  005566  C016  FFF7         	movff	strncmp@r+1,tblptrh
  2504  00556A                     	if	0	;tblptru may be non-zero
  2505  00556A                     	endif
  2506  00556A                     	if	0	;tblptru may be non-zero
  2507  00556A                     	endif
  2508  00556A  0008               	tblrd		*
  2509  00556C  50F5               	movf	tablat,w,c
  2510  00556E  5C12               	subwf	??_strncmp^0,w,c
  2511  005570  6E0C               	movwf	?_strncmp^0,c
  2512  005572  6A0D               	clrf	(?_strncmp+1)^0,c
  2513  005574  A0D8               	btfss	status,0,c
  2514  005576  060D               	decf	(?_strncmp+1)^0,f,c
  2515  005578  0012               	return		;funcret
  2516  00557A                     __end_of_strncmp:
  2517                           	opt callstack 0
  2518                           
  2519 ;; *************** function _efgtoa *****************
  2520 ;; Defined at:
  2521 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  fp              2   95[COMRAM] PTR struct _IO_FILE
  2524 ;;		 -> sprintf@f(6), 
  2525 ;;  f               4   97[COMRAM] PTR struct _IO_FILE
  2526 ;;  c               1  101[COMRAM] unsigned char 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  u               4   67[BANK0 ] unsigned char 
  2529 ;;  g               4   59[BANK0 ] unsigned char 
  2530 ;;  l               4   53[BANK0 ] unsigned char 
  2531 ;;  h               4   49[BANK0 ] unsigned char 
  2532 ;;  ou              4   15[BANK0 ] unsigned char 
  2533 ;;  n               2   65[BANK0 ] int 
  2534 ;;  e               2   63[BANK0 ] int 
  2535 ;;  i               2   57[BANK0 ] int 
  2536 ;;  w               2   46[BANK0 ] int 
  2537 ;;  p               2   43[BANK0 ] int 
  2538 ;;  sign            2   41[BANK0 ] int 
  2539 ;;  d               2   39[BANK0 ] int 
  2540 ;;  ne              2   37[BANK0 ] int 
  2541 ;;  m               2   35[BANK0 ] int 
  2542 ;;  pp              2   33[BANK0 ] int 
  2543 ;;  t               2   31[BANK0 ] int 
  2544 ;;  mode            1   48[BANK0 ] unsigned char 
  2545 ;;  nmode           1   45[BANK0 ] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  2   95[COMRAM] int 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2555 ;;      Params:         7       0       0       0       0       0       0
  2556 ;;      Locals:         0      56       0       0       0       0       0
  2557 ;;      Temps:          0       5       0       0       0       0       0
  2558 ;;      Totals:         7      61       0       0       0       0       0
  2559 ;;Total ram usage:       68 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    8
  2562 ;; This function calls:
  2563 ;;		___awdiv
  2564 ;;		___awmod
  2565 ;;		___fladd
  2566 ;;		___fldiv
  2567 ;;		___fleq
  2568 ;;		___flge
  2569 ;;		___flmul
  2570 ;;		___flneg
  2571 ;;		___flsub
  2572 ;;		___fltol
  2573 ;;		___fpclassifyf
  2574 ;;		_floorf
  2575 ;;		_isupper
  2576 ;;		_pad
  2577 ;;		_strcpy
  2578 ;;		_tolower
  2579 ;; This function is called by:
  2580 ;;		_vfpfcnvrt
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text5
  2585  002D0C                     __ptext5:
  2586                           	opt callstack 0
  2587  002D0C                     _efgtoa:
  2588                           	opt callstack 19
  2589                           
  2590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2591                           
  2592                           ;incstack = 0
  2593  002D0C  0E00               	movlw	0
  2594  002D0E  0100               	movlb	0	; () banked
  2595  002D10  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  2596  002D12  0E00               	movlw	0
  2597  002D14  6FA9               	movwf	efgtoa@sign& (0+255),b
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2601  002D16  C062  F0BB         	movff	efgtoa@f,efgtoa@g
  2602  002D1A  C063  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  2603  002D1E  C064  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  2604  002D22  C065  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2608  002D26  AFBE               	btfss	(efgtoa@g+3)& (0+255),7,b
  2609  002D28  D016               	goto	l6481
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2613  002D2A  0E00               	movlw	0
  2614  002D2C  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  2615  002D2E  0E01               	movlw	1
  2616  002D30  6FA9               	movwf	efgtoa@sign& (0+255),b
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2620  002D32  C0BB  F00C         	movff	efgtoa@g,___flneg@f1
  2621  002D36  C0BC  F00D         	movff	efgtoa@g+1,___flneg@f1+1
  2622  002D3A  C0BD  F00E         	movff	efgtoa@g+2,___flneg@f1+2
  2623  002D3E  C0BE  F00F         	movff	efgtoa@g+3,___flneg@f1+3
  2624  002D42  EC39  F02E         	call	___flneg	;wreg free
  2625  002D46  C00C  F0BB         	movff	?___flneg,efgtoa@g
  2626  002D4A  C00D  F0BC         	movff	?___flneg+1,efgtoa@g+1
  2627  002D4E  C00E  F0BD         	movff	?___flneg+2,efgtoa@g+2
  2628  002D52  C00F  F0BE         	movff	?___flneg+3,efgtoa@g+3
  2629  002D56                     l6481:
  2630                           
  2631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2632  002D56  0E00               	movlw	0
  2633  002D58  0100               	movlb	0	; () banked
  2634  002D5A  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  2635  002D5C  0E00               	movlw	0
  2636  002D5E  6FC1               	movwf	efgtoa@n& (0+255),b
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2640  002D60  C069  F0AE         	movff	_width,efgtoa@w
  2641  002D64  C06A  F0AF         	movff	_width+1,efgtoa@w+1
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2645  002D68  51A9               	movf	efgtoa@sign& (0+255),w,b
  2646  002D6A  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2647  002D6C  A4D8               	btfss	status,2,c
  2648  002D6E  D002               	goto	u8230
  2649                           
  2650                           ; BSR set to: 0
  2651  002D70  A46D               	btfss	_flags^0,2,c
  2652  002D72  D013               	goto	l6501
  2653  002D74                     u8230:
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2657  002D74  51A9               	movf	efgtoa@sign& (0+255),w,b
  2658  002D76  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2659  002D78  A4D8               	btfss	status,2,c
  2660  002D7A  D004               	goto	l6493
  2661                           
  2662                           ; BSR set to: 0
  2663  002D7C  0E00               	movlw	0
  2664  002D7E  6F94               	movwf	(_efgtoa$650+1)& (0+255),b
  2665  002D80  0E2B               	movlw	43
  2666  002D82  D003               	goto	L1
  2667  002D84                     l6493:
  2668                           
  2669                           ; BSR set to: 0
  2670  002D84  0E00               	movlw	0
  2671  002D86  6F94               	movwf	(_efgtoa$650+1)& (0+255),b
  2672  002D88  0E2D               	movlw	45
  2673  002D8A                     L1:
  2674  002D8A  6F93               	movwf	_efgtoa$650& (0+255),b
  2675                           
  2676                           ; BSR set to: 0
  2677  002D8C  C093  F200         	movff	_efgtoa$650,_dbuf
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2681  002D90  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  2682  002D92  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2686  002D94  07AE               	decf	efgtoa@w& (0+255),f,b
  2687  002D96  A0D8               	btfss	status,0,c
  2688  002D98  07AF               	decf	(efgtoa@w+1)& (0+255),f,b
  2689  002D9A                     l6501:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2693  002D9A  C0BB  F00C         	movff	efgtoa@g,___fpclassifyf@x
  2694  002D9E  C0BC  F00D         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2695  002DA2  C0BD  F00E         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2696  002DA6  C0BE  F00F         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2697  002DAA  EC50  F029         	call	___fpclassifyf	;wreg free
  2698  002DAE  040C               	decf	?___fpclassifyf^0,w,c
  2699  002DB0  100D               	iorwf	(?___fpclassifyf+1)^0,w,c
  2700  002DB2  A4D8               	btfss	status,2,c
  2701  002DB4  D04C               	goto	l6519
  2702  002DB6  0EBF               	movlw	191
  2703  002DB8  0100               	movlb	0	; () banked
  2704  002DBA  6F8A               	movwf	??_efgtoa& (0+255),b
  2705  002DBC  0EFF               	movlw	255
  2706  002DBE  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  2707  002DC0  5066               	movf	efgtoa@c^0,w,c
  2708  002DC2  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  2709  002DC4  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  2710  002DC6  518A               	movf	??_efgtoa& (0+255),w,b
  2711  002DC8  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  2712  002DCA  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  2713  002DCC  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2714  002DCE  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  2715  002DD0  E106               	bnz	u8260
  2716  002DD2  0E1A               	movlw	26
  2717  002DD4  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  2718  002DD6  B0D8               	btfsc	status,0,c
  2719  002DD8  D002               	goto	u8260
  2720  002DDA  0E01               	movlw	1
  2721  002DDC  D001               	goto	u8270
  2722  002DDE                     u8260:
  2723  002DDE  0E00               	movlw	0
  2724  002DE0                     u8270:
  2725  002DE0  6F95               	movwf	_efgtoa$651& (0+255),b
  2726  002DE2  6B96               	clrf	(_efgtoa$651+1)& (0+255),b
  2727                           
  2728                           ; BSR set to: 0
  2729  002DE4  5195               	movf	_efgtoa$651& (0+255),w,b
  2730  002DE6  1196               	iorwf	(_efgtoa$651+1)& (0+255),w,b
  2731  002DE8  B4D8               	btfsc	status,2,c
  2732  002DEA  D00D               	goto	l6511
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2736  002DEC  0E00               	movlw	low _dbuf
  2737  002DEE  25C1               	addwf	efgtoa@n& (0+255),w,b
  2738  002DF0  6E0C               	movwf	strcpy@dest^0,c
  2739  002DF2  0E02               	movlw	high _dbuf
  2740  002DF4  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2741  002DF6  6E0D               	movwf	(strcpy@dest+1)^0,c
  2742  002DF8  0E95               	movlw	low STR_5
  2743  002DFA  6E0E               	movwf	strcpy@src^0,c
  2744  002DFC  0E06               	movlw	high STR_5
  2745  002DFE  6E0F               	movwf	(strcpy@src+1)^0,c
  2746  002E00  EC03  F02D         	call	_strcpy	;wreg free
  2747                           
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2749  002E04  D00C               	goto	l6513
  2750  002E06                     l6511:
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2754  002E06  0E00               	movlw	low _dbuf
  2755  002E08  25C1               	addwf	efgtoa@n& (0+255),w,b
  2756  002E0A  6E0C               	movwf	strcpy@dest^0,c
  2757  002E0C  0E02               	movlw	high _dbuf
  2758  002E0E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2759  002E10  6E0D               	movwf	(strcpy@dest+1)^0,c
  2760  002E12  0E9D               	movlw	low STR_6
  2761  002E14  6E0E               	movwf	strcpy@src^0,c
  2762  002E16  0E06               	movlw	high STR_6
  2763  002E18  6E0F               	movwf	(strcpy@src+1)^0,c
  2764  002E1A  EC03  F02D         	call	_strcpy	;wreg free
  2765  002E1E                     l6513:
  2766                           
  2767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2768  002E1E  0100               	movlb	0	; () banked
  2769  002E20  0EFD               	movlw	253
  2770  002E22  27AE               	addwf	efgtoa@w& (0+255),f,b
  2771  002E24  0EFF               	movlw	255
  2772  002E26  23AF               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2773  002E28                     l6515:
  2774                           
  2775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2776  002E28  C060  F01C         	movff	efgtoa@fp,pad@fp
  2777  002E2C  C061  F01D         	movff	efgtoa@fp+1,pad@fp+1
  2778  002E30  0E00               	movlw	low _dbuf
  2779  002E32  6E1E               	movwf	pad@buf^0,c
  2780  002E34  0E02               	movlw	high _dbuf
  2781  002E36  6E1F               	movwf	(pad@buf+1)^0,c
  2782  002E38  C0AE  F020         	movff	efgtoa@w,pad@p
  2783  002E3C  C0AF  F021         	movff	efgtoa@w+1,pad@p+1
  2784  002E40  EC0D  F02B         	call	_pad	;wreg free
  2785  002E44  C01C  F060         	movff	?_pad,?_efgtoa
  2786  002E48  C01D  F061         	movff	?_pad+1,?_efgtoa+1
  2787  002E4C  0012               	return	
  2788  002E4E                     l6519:
  2789                           
  2790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2791  002E4E  C0BB  F00C         	movff	efgtoa@g,___fpclassifyf@x
  2792  002E52  C0BC  F00D         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2793  002E56  C0BD  F00E         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2794  002E5A  C0BE  F00F         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2795  002E5E  EC50  F029         	call	___fpclassifyf	;wreg free
  2796  002E62  500C               	movf	?___fpclassifyf^0,w,c
  2797  002E64  100D               	iorwf	(?___fpclassifyf+1)^0,w,c
  2798  002E66  A4D8               	btfss	status,2,c
  2799  002E68  D035               	goto	l6537
  2800  002E6A  0EBF               	movlw	191
  2801  002E6C  0100               	movlb	0	; () banked
  2802  002E6E  6F8A               	movwf	??_efgtoa& (0+255),b
  2803  002E70  0EFF               	movlw	255
  2804  002E72  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  2805  002E74  5066               	movf	efgtoa@c^0,w,c
  2806  002E76  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  2807  002E78  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  2808  002E7A  518A               	movf	??_efgtoa& (0+255),w,b
  2809  002E7C  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  2810  002E7E  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  2811  002E80  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2812  002E82  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  2813  002E84  E106               	bnz	u8300
  2814  002E86  0E1A               	movlw	26
  2815  002E88  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  2816  002E8A  B0D8               	btfsc	status,0,c
  2817  002E8C  D002               	goto	u8300
  2818  002E8E  0E01               	movlw	1
  2819  002E90  D001               	goto	u8310
  2820  002E92                     u8300:
  2821  002E92  0E00               	movlw	0
  2822  002E94                     u8310:
  2823  002E94  6F97               	movwf	_efgtoa$656& (0+255),b
  2824  002E96  6B98               	clrf	(_efgtoa$656+1)& (0+255),b
  2825                           
  2826                           ; BSR set to: 0
  2827  002E98  5197               	movf	_efgtoa$656& (0+255),w,b
  2828  002E9A  1198               	iorwf	(_efgtoa$656+1)& (0+255),w,b
  2829  002E9C  B4D8               	btfsc	status,2,c
  2830  002E9E  D00D               	goto	l6529
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2834  002EA0  0E00               	movlw	low _dbuf
  2835  002EA2  25C1               	addwf	efgtoa@n& (0+255),w,b
  2836  002EA4  6E0C               	movwf	strcpy@dest^0,c
  2837  002EA6  0E02               	movlw	high _dbuf
  2838  002EA8  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2839  002EAA  6E0D               	movwf	(strcpy@dest+1)^0,c
  2840  002EAC  0E99               	movlw	low STR_9
  2841  002EAE  6E0E               	movwf	strcpy@src^0,c
  2842  002EB0  0E06               	movlw	high STR_9
  2843  002EB2  6E0F               	movwf	(strcpy@src+1)^0,c
  2844  002EB4  EC03  F02D         	call	_strcpy	;wreg free
  2845                           
  2846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2847  002EB8  D7B2               	goto	l6513
  2848  002EBA                     l6529:
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2852  002EBA  0E00               	movlw	low _dbuf
  2853  002EBC  25C1               	addwf	efgtoa@n& (0+255),w,b
  2854  002EBE  6E0C               	movwf	strcpy@dest^0,c
  2855  002EC0  0E02               	movlw	high _dbuf
  2856  002EC2  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2857  002EC4  6E0D               	movwf	(strcpy@dest+1)^0,c
  2858  002EC6  0EA1               	movlw	low STR_10
  2859  002EC8  6E0E               	movwf	strcpy@src^0,c
  2860  002ECA  0E06               	movlw	high STR_10
  2861  002ECC  6E0F               	movwf	(strcpy@src+1)^0,c
  2862  002ECE  EC03  F02D         	call	_strcpy	;wreg free
  2863  002ED2  D7A5               	goto	l6513
  2864  002ED4                     l6537:
  2865                           
  2866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2867  002ED4  0E00               	movlw	0
  2868  002ED6  0100               	movlb	0	; () banked
  2869  002ED8  6FC3               	movwf	efgtoa@u& (0+255),b
  2870  002EDA  0E00               	movlw	0
  2871  002EDC  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  2872  002EDE  0E80               	movlw	128
  2873  002EE0  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  2874  002EE2  0E3F               	movlw	63
  2875  002EE4  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  2876                           
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2878  002EE6  0E00               	movlw	0
  2879  002EE8  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  2880  002EEA  0E00               	movlw	0
  2881  002EEC  6FBF               	movwf	efgtoa@e& (0+255),b
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2885  002EEE  C0BB  F00C         	movff	efgtoa@g,___fleq@ff1
  2886  002EF2  C0BC  F00D         	movff	efgtoa@g+1,___fleq@ff1+1
  2887  002EF6  C0BD  F00E         	movff	efgtoa@g+2,___fleq@ff1+2
  2888  002EFA  C0BE  F00F         	movff	efgtoa@g+3,___fleq@ff1+3
  2889  002EFE  0E00               	movlw	0
  2890  002F00  6E10               	movwf	___fleq@ff2^0,c
  2891  002F02  0E00               	movlw	0
  2892  002F04  6E11               	movwf	(___fleq@ff2+1)^0,c
  2893  002F06  0E00               	movlw	0
  2894  002F08  6E12               	movwf	(___fleq@ff2+2)^0,c
  2895  002F0A  0E00               	movlw	0
  2896  002F0C  6E13               	movwf	(___fleq@ff2+3)^0,c
  2897  002F0E  EC58  F02B         	call	___fleq	;wreg free
  2898  002F12  A0D8               	btfss	status,0,c
  2899  002F14  D01E               	goto	l6547
  2900  002F16  D076               	goto	u8350
  2901  002F18                     l6543:
  2902                           
  2903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2904  002F18  C0C3  F01C         	movff	efgtoa@u,___flmul@b
  2905  002F1C  C0C4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  2906  002F20  C0C5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  2907  002F24  C0C6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  2908  002F28  0E00               	movlw	0
  2909  002F2A  6E20               	movwf	___flmul@a^0,c
  2910  002F2C  0E00               	movlw	0
  2911  002F2E  6E21               	movwf	(___flmul@a+1)^0,c
  2912  002F30  0E20               	movlw	32
  2913  002F32  6E22               	movwf	(___flmul@a+2)^0,c
  2914  002F34  0E41               	movlw	65
  2915  002F36  6E23               	movwf	(___flmul@a+3)^0,c
  2916  002F38  EC35  F01F         	call	___flmul	;wreg free
  2917  002F3C  C01C  F0C3         	movff	?___flmul,efgtoa@u
  2918  002F40  C01D  F0C4         	movff	?___flmul+1,efgtoa@u+1
  2919  002F44  C01E  F0C5         	movff	?___flmul+2,efgtoa@u+2
  2920  002F48  C01F  F0C6         	movff	?___flmul+3,efgtoa@u+3
  2921                           
  2922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2923  002F4C  0100               	movlb	0	; () banked
  2924  002F4E  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  2925  002F50  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  2926  002F52                     l6547:
  2927                           
  2928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2929  002F52  C0BB  F03D         	movff	efgtoa@g,___flge@ff1
  2930  002F56  C0BC  F03E         	movff	efgtoa@g+1,___flge@ff1+1
  2931  002F5A  C0BD  F03F         	movff	efgtoa@g+2,___flge@ff1+2
  2932  002F5E  C0BE  F040         	movff	efgtoa@g+3,___flge@ff1+3
  2933  002F62  0E00               	movlw	0
  2934  002F64  6E20               	movwf	___flmul@a^0,c
  2935  002F66  0E00               	movlw	0
  2936  002F68  6E21               	movwf	(___flmul@a+1)^0,c
  2937  002F6A  0E20               	movlw	32
  2938  002F6C  6E22               	movwf	(___flmul@a+2)^0,c
  2939  002F6E  0E41               	movlw	65
  2940  002F70  6E23               	movwf	(___flmul@a+3)^0,c
  2941  002F72  C0C3  F01C         	movff	efgtoa@u,___flmul@b
  2942  002F76  C0C4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  2943  002F7A  C0C5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  2944  002F7E  C0C6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  2945  002F82  EC35  F01F         	call	___flmul	;wreg free
  2946  002F86  C01C  F041         	movff	?___flmul,___flge@ff2
  2947  002F8A  C01D  F042         	movff	?___flmul+1,___flge@ff2+1
  2948  002F8E  C01E  F043         	movff	?___flmul+2,___flge@ff2+2
  2949  002F92  C01F  F044         	movff	?___flmul+3,___flge@ff2+3
  2950  002F96  ECE8  F028         	call	___flge	;wreg free
  2951  002F9A  A0D8               	btfss	status,0,c
  2952  002F9C  D01F               	goto	l6553
  2953  002F9E  D7BC               	goto	l6543
  2954  002FA0                     l6549:
  2955                           
  2956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2957  002FA0  C0C3  F03D         	movff	efgtoa@u,___fldiv@b
  2958  002FA4  C0C4  F03E         	movff	efgtoa@u+1,___fldiv@b+1
  2959  002FA8  C0C5  F03F         	movff	efgtoa@u+2,___fldiv@b+2
  2960  002FAC  C0C6  F040         	movff	efgtoa@u+3,___fldiv@b+3
  2961  002FB0  0E00               	movlw	0
  2962  002FB2  6E41               	movwf	___fldiv@a^0,c
  2963  002FB4  0E00               	movlw	0
  2964  002FB6  6E42               	movwf	(___fldiv@a+1)^0,c
  2965  002FB8  0E20               	movlw	32
  2966  002FBA  6E43               	movwf	(___fldiv@a+2)^0,c
  2967  002FBC  0E41               	movlw	65
  2968  002FBE  6E44               	movwf	(___fldiv@a+3)^0,c
  2969  002FC0  EC64  F022         	call	___fldiv	;wreg free
  2970  002FC4  C03D  F0C3         	movff	?___fldiv,efgtoa@u
  2971  002FC8  C03E  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  2972  002FCC  C03F  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  2973  002FD0  C040  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  2974                           
  2975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  2976  002FD4  0100               	movlb	0	; () banked
  2977  002FD6  07BF               	decf	efgtoa@e& (0+255),f,b
  2978  002FD8  A0D8               	btfss	status,0,c
  2979  002FDA  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  2980  002FDC                     l6553:
  2981                           
  2982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  2983  002FDC  C0BB  F03D         	movff	efgtoa@g,___flge@ff1
  2984  002FE0  C0BC  F03E         	movff	efgtoa@g+1,___flge@ff1+1
  2985  002FE4  C0BD  F03F         	movff	efgtoa@g+2,___flge@ff1+2
  2986  002FE8  C0BE  F040         	movff	efgtoa@g+3,___flge@ff1+3
  2987  002FEC  C0C3  F041         	movff	efgtoa@u,___flge@ff2
  2988  002FF0  C0C4  F042         	movff	efgtoa@u+1,___flge@ff2+1
  2989  002FF4  C0C5  F043         	movff	efgtoa@u+2,___flge@ff2+2
  2990  002FF8  C0C6  F044         	movff	efgtoa@u+3,___flge@ff2+3
  2991  002FFC  ECE8  F028         	call	___flge	;wreg free
  2992  003000  A0D8               	btfss	status,0,c
  2993  003002  D7CE               	goto	l6549
  2994  003004                     u8350:
  2995                           
  2996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  2997  003004  C066  F012         	movff	efgtoa@c,tolower@c
  2998  003008  6A13               	clrf	(tolower@c+1)^0,c
  2999  00300A  EC2C  F02D         	call	_tolower	;wreg free
  3000  00300E  5012               	movf	?_tolower^0,w,c
  3001  003010  0100               	movlb	0	; () banked
  3002  003012  6FB0               	movwf	efgtoa@mode& (0+255),b
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3006  003014  C0B0  F0AD         	movff	efgtoa@mode,efgtoa@nmode
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3010  003018  0E67               	movlw	103
  3011  00301A  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  3012  00301C  A4D8               	btfss	status,2,c
  3013  00301E  D019               	goto	l6569
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3017  003020  506B               	movf	_prec^0,w,c
  3018  003022  106C               	iorwf	(_prec+1)^0,w,c
  3019  003024  A4D8               	btfss	status,2,c
  3020  003026  D004               	goto	l6565
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3024  003028  0E00               	movlw	0
  3025  00302A  6E6C               	movwf	(_prec+1)^0,c
  3026  00302C  0E01               	movlw	1
  3027  00302E  6E6B               	movwf	_prec^0,c
  3028  003030                     l6565:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3032  003030  BE6C               	btfsc	(_prec+1)^0,7,c
  3033  003032  D005               	goto	u8380
  3034  003034  506C               	movf	(_prec+1)^0,w,c
  3035  003036  E108               	bnz	l275
  3036  003038  046B               	decf	_prec^0,w,c
  3037  00303A  B0D8               	btfsc	status,0,c
  3038  00303C  D005               	goto	l275
  3039  00303E                     u8380:
  3040                           
  3041                           ; BSR set to: 0
  3042  00303E  0E00               	movlw	0
  3043  003040  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  3044  003042  0E06               	movlw	6
  3045  003044  6FAB               	movwf	efgtoa@p& (0+255),b
  3046  003046  D008               	goto	l6575
  3047  003048                     l275:
  3048                           
  3049                           ; BSR set to: 0
  3050  003048  C06B  F0AB         	movff	_prec,efgtoa@p
  3051  00304C  C06C  F0AC         	movff	_prec+1,efgtoa@p+1
  3052  003050  D003               	goto	l6575
  3053  003052                     l6569:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3057  003052  AE6C               	btfss	(_prec+1)^0,7,c
  3058  003054  D7F9               	goto	l275
  3059  003056  D7F3               	goto	u8380
  3060  003058                     l6575:
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3064  003058  0E67               	movlw	103
  3065  00305A  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  3066  00305C  A4D8               	btfss	status,2,c
  3067  00305E  D022               	goto	l6585
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3071  003060  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  3072  003062  D006               	goto	u8410
  3073  003064  0EFC               	movlw	252
  3074  003066  5DBF               	subwf	efgtoa@e& (0+255),w,b
  3075  003068  0EFF               	movlw	255
  3076  00306A  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3077  00306C  A0D8               	btfss	status,0,c
  3078  00306E  D018               	goto	l6583
  3079  003070                     u8410:
  3080                           
  3081                           ; BSR set to: 0
  3082  003070  0EFF               	movlw	255
  3083  003072  6F8A               	movwf	??_efgtoa& (0+255),b
  3084  003074  0EFF               	movlw	255
  3085  003076  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  3086  003078  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  3087  00307C  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  3088  003080  518A               	movf	??_efgtoa& (0+255),w,b
  3089  003082  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  3090  003084  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  3091  003086  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3092  003088  51BF               	movf	efgtoa@e& (0+255),w,b
  3093  00308A  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  3094  00308C  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  3095  00308E  0A80               	xorlw	128
  3096  003090  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  3097  003092  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  3098  003094  0A80               	xorlw	128
  3099  003096  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3100  003098  A0D8               	btfss	status,0,c
  3101  00309A  D002               	goto	l6583
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3105  00309C  0E66               	movlw	102
  3106  00309E  D001               	goto	L2
  3107  0030A0                     l6583:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3111  0030A0  0E65               	movlw	101
  3112  0030A2                     L2:
  3113  0030A2  6FAD               	movwf	efgtoa@nmode& (0+255),b
  3114  0030A4                     l6585:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3118  0030A4  C0AB  F0A3         	movff	efgtoa@p,efgtoa@m
  3119  0030A8  C0AC  F0A4         	movff	efgtoa@p+1,efgtoa@m+1
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3123  0030AC  0E67               	movlw	103
  3124  0030AE  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  3125  0030B0  A4D8               	btfss	status,2,c
  3126  0030B2  D005               	goto	u8450
  3127                           
  3128                           ; BSR set to: 0
  3129  0030B4  0E66               	movlw	102
  3130  0030B6  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3131  0030B8  B4D8               	btfsc	status,2,c
  3132                           
  3133                           ; BSR set to: 0
  3134  0030BA  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  3135  0030BC  D002               	goto	l6595
  3136  0030BE                     u8450:
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3140  0030BE  4BA3               	infsnz	efgtoa@m& (0+255),f,b
  3141  0030C0  2BA4               	incf	(efgtoa@m+1)& (0+255),f,b
  3142  0030C2                     l6595:
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3146  0030C2  0E66               	movlw	102
  3147  0030C4  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3148  0030C6  A4D8               	btfss	status,2,c
  3149  0030C8  D016               	goto	l6605
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3153  0030CA  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  3154  0030CC  D00C               	goto	l6601
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3158  0030CE  0E00               	movlw	0
  3159  0030D0  6FC3               	movwf	efgtoa@u& (0+255),b
  3160  0030D2  0E00               	movlw	0
  3161  0030D4  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  3162  0030D6  0E80               	movlw	128
  3163  0030D8  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  3164  0030DA  0E3F               	movlw	63
  3165  0030DC  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  3166                           
  3167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3168  0030DE  0E00               	movlw	0
  3169  0030E0  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  3170  0030E2  0E00               	movlw	0
  3171  0030E4  6FBF               	movwf	efgtoa@e& (0+255),b
  3172  0030E6                     l6601:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3176  0030E6  0E67               	movlw	103
  3177  0030E8  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  3178  0030EA  B4D8               	btfsc	status,2,c
  3179  0030EC  D004               	goto	l6605
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3183  0030EE  51BF               	movf	efgtoa@e& (0+255),w,b
  3184  0030F0  27A3               	addwf	efgtoa@m& (0+255),f,b
  3185  0030F2  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  3186  0030F4  23A4               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3187  0030F6                     l6605:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3191  0030F6  0E00               	movlw	0
  3192  0030F8  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  3193  0030FA  0E00               	movlw	0
  3194  0030FC  6FB9               	movwf	efgtoa@i& (0+255),b
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3198  0030FE  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  3199  003102  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  3200  003106  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  3201  00310A  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3205  00310E  C0C3  F08F         	movff	efgtoa@u,efgtoa@ou
  3206  003112  C0C4  F090         	movff	efgtoa@u+1,efgtoa@ou+1
  3207  003116  C0C5  F091         	movff	efgtoa@u+2,efgtoa@ou+2
  3208  00311A  C0C6  F092         	movff	efgtoa@u+3,efgtoa@ou+3
  3209                           
  3210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3211  00311E  D07B               	goto	l6619
  3212  003120                     l6611:
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3216  003120  C0B1  F03D         	movff	efgtoa@h,___fldiv@b
  3217  003124  C0B2  F03E         	movff	efgtoa@h+1,___fldiv@b+1
  3218  003128  C0B3  F03F         	movff	efgtoa@h+2,___fldiv@b+2
  3219  00312C  C0B4  F040         	movff	efgtoa@h+3,___fldiv@b+3
  3220  003130  C0C3  F041         	movff	efgtoa@u,___fldiv@a
  3221  003134  C0C4  F042         	movff	efgtoa@u+1,___fldiv@a+1
  3222  003138  C0C5  F043         	movff	efgtoa@u+2,___fldiv@a+2
  3223  00313C  C0C6  F044         	movff	efgtoa@u+3,___fldiv@a+3
  3224  003140  EC64  F022         	call	___fldiv	;wreg free
  3225  003144  C03D  F056         	movff	?___fldiv,floorf@x
  3226  003148  C03E  F057         	movff	?___fldiv+1,floorf@x+1
  3227  00314C  C03F  F058         	movff	?___fldiv+2,floorf@x+2
  3228  003150  C040  F059         	movff	?___fldiv+3,floorf@x+3
  3229  003154  EC9B  F024         	call	_floorf	;wreg free
  3230  003158  C056  F0B5         	movff	?_floorf,efgtoa@l
  3231  00315C  C057  F0B6         	movff	?_floorf+1,efgtoa@l+1
  3232  003160  C058  F0B7         	movff	?_floorf+2,efgtoa@l+2
  3233  003164  C059  F0B8         	movff	?_floorf+3,efgtoa@l+3
  3234                           
  3235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3236  003168  C0B5  F056         	movff	efgtoa@l,___fltol@f1
  3237  00316C  C0B6  F057         	movff	efgtoa@l+1,___fltol@f1+1
  3238  003170  C0B7  F058         	movff	efgtoa@l+2,___fltol@f1+2
  3239  003174  C0B8  F059         	movff	efgtoa@l+3,___fltol@f1+3
  3240  003178  ECB6  F029         	call	___fltol	;wreg free
  3241  00317C  C056  F0A7         	movff	?___fltol,efgtoa@d
  3242  003180  C057  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3243                           
  3244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3245  003184  C0B1  F035         	movff	efgtoa@h,___flsub@b
  3246  003188  C0B2  F036         	movff	efgtoa@h+1,___flsub@b+1
  3247  00318C  C0B3  F037         	movff	efgtoa@h+2,___flsub@b+2
  3248  003190  C0B4  F038         	movff	efgtoa@h+3,___flsub@b+3
  3249  003194  C0C3  F020         	movff	efgtoa@u,___flmul@a
  3250  003198  C0C4  F021         	movff	efgtoa@u+1,___flmul@a+1
  3251  00319C  C0C5  F022         	movff	efgtoa@u+2,___flmul@a+2
  3252  0031A0  C0C6  F023         	movff	efgtoa@u+3,___flmul@a+3
  3253  0031A4  C0B5  F01C         	movff	efgtoa@l,___flmul@b
  3254  0031A8  C0B6  F01D         	movff	efgtoa@l+1,___flmul@b+1
  3255  0031AC  C0B7  F01E         	movff	efgtoa@l+2,___flmul@b+2
  3256  0031B0  C0B8  F01F         	movff	efgtoa@l+3,___flmul@b+3
  3257  0031B4  EC35  F01F         	call	___flmul	;wreg free
  3258  0031B8  C01C  F039         	movff	?___flmul,___flsub@a
  3259  0031BC  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
  3260  0031C0  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
  3261  0031C4  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
  3262  0031C8  EC52  F02D         	call	___flsub	;wreg free
  3263  0031CC  C035  F0B1         	movff	?___flsub,efgtoa@h
  3264  0031D0  C036  F0B2         	movff	?___flsub+1,efgtoa@h+1
  3265  0031D4  C037  F0B3         	movff	?___flsub+2,efgtoa@h+2
  3266  0031D8  C038  F0B4         	movff	?___flsub+3,efgtoa@h+3
  3267                           
  3268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3269  0031DC  C0C3  F03D         	movff	efgtoa@u,___fldiv@b
  3270  0031E0  C0C4  F03E         	movff	efgtoa@u+1,___fldiv@b+1
  3271  0031E4  C0C5  F03F         	movff	efgtoa@u+2,___fldiv@b+2
  3272  0031E8  C0C6  F040         	movff	efgtoa@u+3,___fldiv@b+3
  3273  0031EC  0E00               	movlw	0
  3274  0031EE  6E41               	movwf	___fldiv@a^0,c
  3275  0031F0  0E00               	movlw	0
  3276  0031F2  6E42               	movwf	(___fldiv@a+1)^0,c
  3277  0031F4  0E20               	movlw	32
  3278  0031F6  6E43               	movwf	(___fldiv@a+2)^0,c
  3279  0031F8  0E41               	movlw	65
  3280  0031FA  6E44               	movwf	(___fldiv@a+3)^0,c
  3281  0031FC  EC64  F022         	call	___fldiv	;wreg free
  3282  003200  C03D  F0C3         	movff	?___fldiv,efgtoa@u
  3283  003204  C03E  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  3284  003208  C03F  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  3285  00320C  C040  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  3286                           
  3287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3288  003210  0100               	movlb	0	; () banked
  3289  003212  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  3290  003214  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  3291  003216                     l6619:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3295  003216  51A3               	movf	efgtoa@m& (0+255),w,b
  3296  003218  5DB9               	subwf	efgtoa@i& (0+255),w,b
  3297  00321A  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  3298  00321C  0A80               	xorlw	128
  3299  00321E  6F8A               	movwf	??_efgtoa& (0+255),b
  3300  003220  51A4               	movf	(efgtoa@m+1)& (0+255),w,b
  3301  003222  0A80               	xorlw	128
  3302  003224  598A               	subwfb	??_efgtoa& (0+255),w,b
  3303  003226  A0D8               	btfss	status,0,c
  3304  003228  D77B               	goto	l6611
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3308  00322A  C0C3  F01C         	movff	efgtoa@u,___flmul@b
  3309  00322E  C0C4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  3310  003232  C0C5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  3311  003236  C0C6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  3312  00323A  0E00               	movlw	0
  3313  00323C  6E20               	movwf	___flmul@a^0,c
  3314  00323E  0E00               	movlw	0
  3315  003240  6E21               	movwf	(___flmul@a+1)^0,c
  3316  003242  0EA0               	movlw	160
  3317  003244  6E22               	movwf	(___flmul@a+2)^0,c
  3318  003246  0E40               	movlw	64
  3319  003248  6E23               	movwf	(___flmul@a+3)^0,c
  3320  00324A  EC35  F01F         	call	___flmul	;wreg free
  3321  00324E  C01C  F0B5         	movff	?___flmul,efgtoa@l
  3322  003252  C01D  F0B6         	movff	?___flmul+1,efgtoa@l+1
  3323  003256  C01E  F0B7         	movff	?___flmul+2,efgtoa@l+2
  3324  00325A  C01F  F0B8         	movff	?___flmul+3,efgtoa@l+3
  3325                           
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3327  00325E  C0B1  F03D         	movff	efgtoa@h,___flge@ff1
  3328  003262  C0B2  F03E         	movff	efgtoa@h+1,___flge@ff1+1
  3329  003266  C0B3  F03F         	movff	efgtoa@h+2,___flge@ff1+2
  3330  00326A  C0B4  F040         	movff	efgtoa@h+3,___flge@ff1+3
  3331  00326E  C0B5  F041         	movff	efgtoa@l,___flge@ff2
  3332  003272  C0B6  F042         	movff	efgtoa@l+1,___flge@ff2+1
  3333  003276  C0B7  F043         	movff	efgtoa@l+2,___flge@ff2+2
  3334  00327A  C0B8  F044         	movff	efgtoa@l+3,___flge@ff2+3
  3335  00327E  ECE8  F028         	call	___flge	;wreg free
  3336  003282  B0D8               	btfsc	status,0,c
  3337  003284  D003               	goto	l6627
  3338                           
  3339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3340  003286  0E00               	movlw	0
  3341  003288  0100               	movlb	0	; () banked
  3342  00328A  D018               	goto	L3
  3343  00328C                     l6627:
  3344                           
  3345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3346  00328C  C0B1  F00C         	movff	efgtoa@h,___fleq@ff1
  3347  003290  C0B2  F00D         	movff	efgtoa@h+1,___fleq@ff1+1
  3348  003294  C0B3  F00E         	movff	efgtoa@h+2,___fleq@ff1+2
  3349  003298  C0B4  F00F         	movff	efgtoa@h+3,___fleq@ff1+3
  3350  00329C  C0B5  F010         	movff	efgtoa@l,___fleq@ff2
  3351  0032A0  C0B6  F011         	movff	efgtoa@l+1,___fleq@ff2+1
  3352  0032A4  C0B7  F012         	movff	efgtoa@l+2,___fleq@ff2+2
  3353  0032A8  C0B8  F013         	movff	efgtoa@l+3,___fleq@ff2+3
  3354  0032AC  EC58  F02B         	call	___fleq	;wreg free
  3355  0032B0  A0D8               	btfss	status,0,c
  3356  0032B2  D00B               	goto	l6633
  3357  0032B4  0100               	movlb	0	; () banked
  3358  0032B6  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  3359  0032B8  D008               	goto	l6633
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3363  0032BA  0E00               	movlw	0
  3364  0032BC                     L3:
  3365  0032BC  6FB5               	movwf	efgtoa@l& (0+255),b
  3366  0032BE  0E00               	movlw	0
  3367  0032C0  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  3368  0032C2  0E00               	movlw	0
  3369  0032C4  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  3370  0032C6  0E00               	movlw	0
  3371  0032C8  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  3372  0032CA                     l6633:
  3373                           
  3374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3375  0032CA  C0BB  F00C         	movff	efgtoa@g,___fladd@b
  3376  0032CE  C0BC  F00D         	movff	efgtoa@g+1,___fladd@b+1
  3377  0032D2  C0BD  F00E         	movff	efgtoa@g+2,___fladd@b+2
  3378  0032D6  C0BE  F00F         	movff	efgtoa@g+3,___fladd@b+3
  3379  0032DA  C0B5  F010         	movff	efgtoa@l,___fladd@a
  3380  0032DE  C0B6  F011         	movff	efgtoa@l+1,___fladd@a+1
  3381  0032E2  C0B7  F012         	movff	efgtoa@l+2,___fladd@a+2
  3382  0032E6  C0B8  F013         	movff	efgtoa@l+3,___fladd@a+3
  3383  0032EA  ECDE  F020         	call	___fladd	;wreg free
  3384  0032EE  C00C  F0B1         	movff	?___fladd,efgtoa@h
  3385  0032F2  C00D  F0B2         	movff	?___fladd+1,efgtoa@h+1
  3386  0032F6  C00E  F0B3         	movff	?___fladd+2,efgtoa@h+2
  3387  0032FA  C00F  F0B4         	movff	?___fladd+3,efgtoa@h+3
  3388                           
  3389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3390  0032FE  C08F  F0C3         	movff	efgtoa@ou,efgtoa@u
  3391  003302  C090  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  3392  003306  C091  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  3393  00330A  C092  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  3394                           
  3395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3396  00330E  0E65               	movlw	101
  3397  003310  0100               	movlb	0	; () banked
  3398  003312  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3399  003314  B4D8               	btfsc	status,2,c
  3400  003316  D005               	goto	l6641
  3401                           
  3402                           ; BSR set to: 0
  3403  003318  C0BF  F0A5         	movff	efgtoa@e,efgtoa@ne
  3404  00331C  C0C0  F0A6         	movff	efgtoa@e+1,efgtoa@ne+1
  3405  003320  D004               	goto	l301
  3406  003322                     l6641:
  3407                           
  3408                           ; BSR set to: 0
  3409  003322  0E00               	movlw	0
  3410  003324  6FA6               	movwf	(efgtoa@ne+1)& (0+255),b
  3411  003326  0E00               	movlw	0
  3412  003328  6FA5               	movwf	efgtoa@ne& (0+255),b
  3413  00332A                     l301:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3417  00332A  0E00               	movlw	0
  3418  00332C  6FA2               	movwf	(efgtoa@pp+1)& (0+255),b
  3419  00332E  0E00               	movlw	0
  3420  003330  6FA1               	movwf	efgtoa@pp& (0+255),b
  3421                           
  3422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3423  003332  0E00               	movlw	0
  3424  003334  6FA0               	movwf	(efgtoa@t+1)& (0+255),b
  3425  003336  0E00               	movlw	0
  3426  003338  6F9F               	movwf	efgtoa@t& (0+255),b
  3427                           
  3428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3429  00333A  0E00               	movlw	0
  3430  00333C  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  3431  00333E  0E00               	movlw	0
  3432  003340  6FB9               	movwf	efgtoa@i& (0+255),b
  3433                           
  3434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3435  003342  D0C7               	goto	l6691
  3436  003344                     l6643:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3440  003344  C0B1  F03D         	movff	efgtoa@h,___fldiv@b
  3441  003348  C0B2  F03E         	movff	efgtoa@h+1,___fldiv@b+1
  3442  00334C  C0B3  F03F         	movff	efgtoa@h+2,___fldiv@b+2
  3443  003350  C0B4  F040         	movff	efgtoa@h+3,___fldiv@b+3
  3444  003354  C0C3  F041         	movff	efgtoa@u,___fldiv@a
  3445  003358  C0C4  F042         	movff	efgtoa@u+1,___fldiv@a+1
  3446  00335C  C0C5  F043         	movff	efgtoa@u+2,___fldiv@a+2
  3447  003360  C0C6  F044         	movff	efgtoa@u+3,___fldiv@a+3
  3448  003364  EC64  F022         	call	___fldiv	;wreg free
  3449  003368  C03D  F056         	movff	?___fldiv,floorf@x
  3450  00336C  C03E  F057         	movff	?___fldiv+1,floorf@x+1
  3451  003370  C03F  F058         	movff	?___fldiv+2,floorf@x+2
  3452  003374  C040  F059         	movff	?___fldiv+3,floorf@x+3
  3453  003378  EC9B  F024         	call	_floorf	;wreg free
  3454  00337C  C056  F0B5         	movff	?_floorf,efgtoa@l
  3455  003380  C057  F0B6         	movff	?_floorf+1,efgtoa@l+1
  3456  003384  C058  F0B7         	movff	?_floorf+2,efgtoa@l+2
  3457  003388  C059  F0B8         	movff	?_floorf+3,efgtoa@l+3
  3458                           
  3459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3460  00338C  C0B5  F056         	movff	efgtoa@l,___fltol@f1
  3461  003390  C0B6  F057         	movff	efgtoa@l+1,___fltol@f1+1
  3462  003394  C0B7  F058         	movff	efgtoa@l+2,___fltol@f1+2
  3463  003398  C0B8  F059         	movff	efgtoa@l+3,___fltol@f1+3
  3464  00339C  ECB6  F029         	call	___fltol	;wreg free
  3465  0033A0  C056  F0A7         	movff	?___fltol,efgtoa@d
  3466  0033A4  C057  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3467                           
  3468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3469  0033A8  B86D               	btfsc	_flags^0,4,c
  3470  0033AA  D00D               	goto	l6655
  3471  0033AC  0100               	movlb	0	; () banked
  3472  0033AE  51A7               	movf	efgtoa@d& (0+255),w,b
  3473  0033B0  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3474  0033B2  A4D8               	btfss	status,2,c
  3475  0033B4  D008               	goto	l6655
  3476                           
  3477                           ; BSR set to: 0
  3478  0033B6  0E67               	movlw	103
  3479  0033B8  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  3480  0033BA  B4D8               	btfsc	status,2,c
  3481                           
  3482                           ; BSR set to: 0
  3483  0033BC  AFA6               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3484  0033BE  D003               	goto	l6655
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3488  0033C0  4B9F               	infsnz	efgtoa@t& (0+255),f,b
  3489  0033C2  2BA0               	incf	(efgtoa@t+1)& (0+255),f,b
  3490                           
  3491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3492  0033C4  D03A               	goto	l6683
  3493  0033C6                     l6655:
  3494                           
  3495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3496  0033C6  0100               	movlb	0	; () banked
  3497  0033C8  51A1               	movf	efgtoa@pp& (0+255),w,b
  3498  0033CA  11A2               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3499  0033CC  B4D8               	btfsc	status,2,c
  3500                           
  3501                           ; BSR set to: 0
  3502  0033CE  AFA6               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3503  0033D0  D022               	goto	l6675
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3507  0033D2  0E00               	movlw	low _dbuf
  3508  0033D4  25C1               	addwf	efgtoa@n& (0+255),w,b
  3509  0033D6  6ED9               	movwf	fsr2l,c
  3510  0033D8  0E02               	movlw	high _dbuf
  3511  0033DA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3512  0033DC  6EDA               	movwf	fsr2h,c
  3513  0033DE  0E2E               	movlw	46
  3514  0033E0  6EDF               	movwf	indf2,c
  3515                           
  3516                           ; BSR set to: 0
  3517  0033E2  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  3518  0033E4  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3522  0033E6  07AE               	decf	efgtoa@w& (0+255),f,b
  3523  0033E8  A0D8               	btfss	status,0,c
  3524  0033EA  07AF               	decf	(efgtoa@w+1)& (0+255),f,b
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3528  0033EC  0E00               	movlw	0
  3529  0033EE  6FA2               	movwf	(efgtoa@pp+1)& (0+255),b
  3530  0033F0  0E01               	movlw	1
  3531  0033F2  6FA1               	movwf	efgtoa@pp& (0+255),b
  3532  0033F4  D010               	goto	l6675
  3533  0033F6                     l6667:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3537  0033F6  0E00               	movlw	low _dbuf
  3538  0033F8  25C1               	addwf	efgtoa@n& (0+255),w,b
  3539  0033FA  6ED9               	movwf	fsr2l,c
  3540  0033FC  0E02               	movlw	high _dbuf
  3541  0033FE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3542  003400  6EDA               	movwf	fsr2h,c
  3543  003402  0E30               	movlw	48
  3544  003404  6EDF               	movwf	indf2,c
  3545                           
  3546                           ; BSR set to: 0
  3547  003406  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  3548  003408  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3552  00340A  07AE               	decf	efgtoa@w& (0+255),f,b
  3553  00340C  A0D8               	btfss	status,0,c
  3554  00340E  07AF               	decf	(efgtoa@w+1)& (0+255),f,b
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3558  003410  079F               	decf	efgtoa@t& (0+255),f,b
  3559  003412  A0D8               	btfss	status,0,c
  3560  003414  07A0               	decf	(efgtoa@t+1)& (0+255),f,b
  3561  003416                     l6675:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3565  003416  519F               	movf	efgtoa@t& (0+255),w,b
  3566  003418  11A0               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3567  00341A  A4D8               	btfss	status,2,c
  3568  00341C  D7EC               	goto	l6667
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3572  00341E  0E00               	movlw	low _dbuf
  3573  003420  25C1               	addwf	efgtoa@n& (0+255),w,b
  3574  003422  6ED9               	movwf	fsr2l,c
  3575  003424  0E02               	movlw	high _dbuf
  3576  003426  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3577  003428  6EDA               	movwf	fsr2h,c
  3578  00342A  51A7               	movf	efgtoa@d& (0+255),w,b
  3579  00342C  0F30               	addlw	48
  3580  00342E  6EDF               	movwf	indf2,c
  3581                           
  3582                           ; BSR set to: 0
  3583  003430  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  3584  003432  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3588  003434  07AE               	decf	efgtoa@w& (0+255),f,b
  3589  003436  A0D8               	btfss	status,0,c
  3590  003438  07AF               	decf	(efgtoa@w+1)& (0+255),f,b
  3591  00343A                     l6683:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3595  00343A  C0B1  F035         	movff	efgtoa@h,___flsub@b
  3596  00343E  C0B2  F036         	movff	efgtoa@h+1,___flsub@b+1
  3597  003442  C0B3  F037         	movff	efgtoa@h+2,___flsub@b+2
  3598  003446  C0B4  F038         	movff	efgtoa@h+3,___flsub@b+3
  3599  00344A  C0C3  F020         	movff	efgtoa@u,___flmul@a
  3600  00344E  C0C4  F021         	movff	efgtoa@u+1,___flmul@a+1
  3601  003452  C0C5  F022         	movff	efgtoa@u+2,___flmul@a+2
  3602  003456  C0C6  F023         	movff	efgtoa@u+3,___flmul@a+3
  3603  00345A  C0B5  F01C         	movff	efgtoa@l,___flmul@b
  3604  00345E  C0B6  F01D         	movff	efgtoa@l+1,___flmul@b+1
  3605  003462  C0B7  F01E         	movff	efgtoa@l+2,___flmul@b+2
  3606  003466  C0B8  F01F         	movff	efgtoa@l+3,___flmul@b+3
  3607  00346A  EC35  F01F         	call	___flmul	;wreg free
  3608  00346E  C01C  F039         	movff	?___flmul,___flsub@a
  3609  003472  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
  3610  003476  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
  3611  00347A  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
  3612  00347E  EC52  F02D         	call	___flsub	;wreg free
  3613  003482  C035  F0B1         	movff	?___flsub,efgtoa@h
  3614  003486  C036  F0B2         	movff	?___flsub+1,efgtoa@h+1
  3615  00348A  C037  F0B3         	movff	?___flsub+2,efgtoa@h+2
  3616  00348E  C038  F0B4         	movff	?___flsub+3,efgtoa@h+3
  3617                           
  3618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3619  003492  C0C3  F03D         	movff	efgtoa@u,___fldiv@b
  3620  003496  C0C4  F03E         	movff	efgtoa@u+1,___fldiv@b+1
  3621  00349A  C0C5  F03F         	movff	efgtoa@u+2,___fldiv@b+2
  3622  00349E  C0C6  F040         	movff	efgtoa@u+3,___fldiv@b+3
  3623  0034A2  0E00               	movlw	0
  3624  0034A4  6E41               	movwf	___fldiv@a^0,c
  3625  0034A6  0E00               	movlw	0
  3626  0034A8  6E42               	movwf	(___fldiv@a+1)^0,c
  3627  0034AA  0E20               	movlw	32
  3628  0034AC  6E43               	movwf	(___fldiv@a+2)^0,c
  3629  0034AE  0E41               	movlw	65
  3630  0034B0  6E44               	movwf	(___fldiv@a+3)^0,c
  3631  0034B2  EC64  F022         	call	___fldiv	;wreg free
  3632  0034B6  C03D  F0C3         	movff	?___fldiv,efgtoa@u
  3633  0034BA  C03E  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  3634  0034BE  C03F  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  3635  0034C2  C040  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  3636                           
  3637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3638  0034C6  0100               	movlb	0	; () banked
  3639  0034C8  07A5               	decf	efgtoa@ne& (0+255),f,b
  3640  0034CA  A0D8               	btfss	status,0,c
  3641  0034CC  07A6               	decf	(efgtoa@ne+1)& (0+255),f,b
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3645  0034CE  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  3646  0034D0  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  3647  0034D2                     l6691:
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3651  0034D2  51A3               	movf	efgtoa@m& (0+255),w,b
  3652  0034D4  5DB9               	subwf	efgtoa@i& (0+255),w,b
  3653  0034D6  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  3654  0034D8  0A80               	xorlw	128
  3655  0034DA  6F8A               	movwf	??_efgtoa& (0+255),b
  3656  0034DC  51A4               	movf	(efgtoa@m+1)& (0+255),w,b
  3657  0034DE  0A80               	xorlw	128
  3658  0034E0  598A               	subwfb	??_efgtoa& (0+255),w,b
  3659  0034E2  B0D8               	btfsc	status,0,c
  3660  0034E4  D008               	goto	u8620
  3661                           
  3662                           ; BSR set to: 0
  3663  0034E6  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3664  0034E8  D72D               	goto	l6643
  3665  0034EA  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  3666  0034EC  E104               	bnz	u8620
  3667  0034EE  0E4B               	movlw	75
  3668  0034F0  5DC1               	subwf	efgtoa@n& (0+255),w,b
  3669  0034F2  A0D8               	btfss	status,0,c
  3670  0034F4  D727               	goto	l6643
  3671  0034F6                     u8620:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3675  0034F6  51A1               	movf	efgtoa@pp& (0+255),w,b
  3676  0034F8  11A2               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3677  0034FA  B4D8               	btfsc	status,2,c
  3678                           
  3679                           ; BSR set to: 0
  3680  0034FC  A86D               	btfss	_flags^0,4,c
  3681  0034FE  D00A               	goto	l6703
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3685  003500  0E00               	movlw	low _dbuf
  3686  003502  25C1               	addwf	efgtoa@n& (0+255),w,b
  3687  003504  6ED9               	movwf	fsr2l,c
  3688  003506  0E02               	movlw	high _dbuf
  3689  003508  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3690  00350A  6EDA               	movwf	fsr2h,c
  3691  00350C  0E2E               	movlw	46
  3692  00350E  6EDF               	movwf	indf2,c
  3693                           
  3694                           ; BSR set to: 0
  3695  003510  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  3696  003512  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  3697  003514                     l6703:
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3701  003514  0E00               	movlw	low _dbuf
  3702  003516  25C1               	addwf	efgtoa@n& (0+255),w,b
  3703  003518  6ED9               	movwf	fsr2l,c
  3704  00351A  0E02               	movlw	high _dbuf
  3705  00351C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3706  00351E  6EDA               	movwf	fsr2h,c
  3707  003520  0E00               	movlw	0
  3708  003522  6EDF               	movwf	indf2,c
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3712  003524  0E65               	movlw	101
  3713  003526  19AD               	xorwf	efgtoa@nmode& (0+255),w,b
  3714  003528  A4D8               	btfss	status,2,c
  3715  00352A  D47E               	goto	l6515
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3719  00352C  0E00               	movlw	0
  3720  00352E  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  3721  003530  0E4F               	movlw	79
  3722  003532  6FB9               	movwf	efgtoa@i& (0+255),b
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3726  003534  0E00               	movlw	low _dbuf
  3727  003536  25B9               	addwf	efgtoa@i& (0+255),w,b
  3728  003538  6ED9               	movwf	fsr2l,c
  3729  00353A  0E02               	movlw	high _dbuf
  3730  00353C  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3731  00353E  6EDA               	movwf	fsr2h,c
  3732  003540  0E00               	movlw	0
  3733  003542  6EDF               	movwf	indf2,c
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3737  003544  0E00               	movlw	0
  3738  003546  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  3739  003548  0E00               	movlw	0
  3740  00354A  6FA9               	movwf	efgtoa@sign& (0+255),b
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3744  00354C  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  3745  00354E  D008               	goto	l6719
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3749  003550  0E00               	movlw	0
  3750  003552  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  3751  003554  0E01               	movlw	1
  3752  003556  6FA9               	movwf	efgtoa@sign& (0+255),b
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3756  003558  6DBF               	negf	efgtoa@e& (0+255),b
  3757  00355A  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  3758  00355C  B0D8               	btfsc	status,0,c
  3759  00355E  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  3760  003560                     l6719:
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3764  003560  0E00               	movlw	0
  3765  003562  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  3766  003564  0E02               	movlw	2
  3767  003566  6FAB               	movwf	efgtoa@p& (0+255),b
  3768                           
  3769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3770  003568  D02B               	goto	l6731
  3771  00356A                     l6721:
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3775  00356A  07B9               	decf	efgtoa@i& (0+255),f,b
  3776  00356C  A0D8               	btfss	status,0,c
  3777  00356E  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3781  003570  0E00               	movlw	low _dbuf
  3782  003572  25B9               	addwf	efgtoa@i& (0+255),w,b
  3783  003574  6ED9               	movwf	fsr2l,c
  3784  003576  0E02               	movlw	high _dbuf
  3785  003578  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3786  00357A  6EDA               	movwf	fsr2h,c
  3787  00357C  C0BF  F00C         	movff	efgtoa@e,___awmod@dividend
  3788  003580  C0C0  F00D         	movff	efgtoa@e+1,___awmod@dividend+1
  3789  003584  0E00               	movlw	0
  3790  003586  6E0F               	movwf	(___awmod@divisor+1)^0,c
  3791  003588  0E0A               	movlw	10
  3792  00358A  6E0E               	movwf	___awmod@divisor^0,c
  3793  00358C  ECDF  F02B         	call	___awmod	;wreg free
  3794  003590  500C               	movf	?___awmod^0,w,c
  3795  003592  0F30               	addlw	48
  3796  003594  6EDF               	movwf	indf2,c
  3797                           
  3798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3799  003596  C0BF  F00C         	movff	efgtoa@e,___awdiv@dividend
  3800  00359A  C0C0  F00D         	movff	efgtoa@e+1,___awdiv@dividend+1
  3801  00359E  0E00               	movlw	0
  3802  0035A0  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  3803  0035A2  0E0A               	movlw	10
  3804  0035A4  6E0E               	movwf	___awdiv@divisor^0,c
  3805  0035A6  EC9D  F02B         	call	___awdiv	;wreg free
  3806  0035AA  C00C  F0BF         	movff	?___awdiv,efgtoa@e
  3807  0035AE  C00D  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  3808                           
  3809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3810  0035B2  0100               	movlb	0	; () banked
  3811  0035B4  07AB               	decf	efgtoa@p& (0+255),f,b
  3812  0035B6  A0D8               	btfss	status,0,c
  3813  0035B8  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3817  0035BA  07AE               	decf	efgtoa@w& (0+255),f,b
  3818  0035BC  A0D8               	btfss	status,0,c
  3819  0035BE  07AF               	decf	(efgtoa@w+1)& (0+255),f,b
  3820  0035C0                     l6731:
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3824  0035C0  51BF               	movf	efgtoa@e& (0+255),w,b
  3825  0035C2  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3826  0035C4  A4D8               	btfss	status,2,c
  3827  0035C6  D7D1               	goto	l6721
  3828                           
  3829                           ; BSR set to: 0
  3830  0035C8  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3831  0035CA  D005               	goto	u8680
  3832  0035CC  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  3833  0035CE  E1CD               	bnz	l6721
  3834  0035D0  05AB               	decf	efgtoa@p& (0+255),w,b
  3835  0035D2  B0D8               	btfsc	status,0,c
  3836  0035D4  D7CA               	goto	l6721
  3837  0035D6                     u8680:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3841  0035D6  07B9               	decf	efgtoa@i& (0+255),f,b
  3842  0035D8  A0D8               	btfss	status,0,c
  3843  0035DA  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3847  0035DC  51A9               	movf	efgtoa@sign& (0+255),w,b
  3848  0035DE  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3849  0035E0  A4D8               	btfss	status,2,c
  3850  0035E2  D004               	goto	l6741
  3851                           
  3852                           ; BSR set to: 0
  3853  0035E4  0E00               	movlw	0
  3854  0035E6  6F9A               	movwf	(_efgtoa$660+1)& (0+255),b
  3855  0035E8  0E2B               	movlw	43
  3856  0035EA  D003               	goto	L4
  3857  0035EC                     l6741:
  3858                           
  3859                           ; BSR set to: 0
  3860  0035EC  0E00               	movlw	0
  3861  0035EE  6F9A               	movwf	(_efgtoa$660+1)& (0+255),b
  3862  0035F0  0E2D               	movlw	45
  3863  0035F2                     L4:
  3864  0035F2  6F99               	movwf	_efgtoa$660& (0+255),b
  3865                           
  3866                           ; BSR set to: 0
  3867  0035F4  0E00               	movlw	low _dbuf
  3868  0035F6  25B9               	addwf	efgtoa@i& (0+255),w,b
  3869  0035F8  6ED9               	movwf	fsr2l,c
  3870  0035FA  0E02               	movlw	high _dbuf
  3871  0035FC  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3872  0035FE  6EDA               	movwf	fsr2h,c
  3873  003600  C099  FFDF         	movff	_efgtoa$660,indf2
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  3877  003604  07AE               	decf	efgtoa@w& (0+255),f,b
  3878  003606  A0D8               	btfss	status,0,c
  3879  003608  07AF               	decf	(efgtoa@w+1)& (0+255),f,b
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3883  00360A  07B9               	decf	efgtoa@i& (0+255),f,b
  3884  00360C  A0D8               	btfss	status,0,c
  3885  00360E  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  3886                           
  3887                           ; BSR set to: 0
  3888  003610  0EBF               	movlw	191
  3889  003612  6F8A               	movwf	??_efgtoa& (0+255),b
  3890  003614  0EFF               	movlw	255
  3891  003616  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  3892  003618  5066               	movf	efgtoa@c^0,w,c
  3893  00361A  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  3894  00361C  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  3895  00361E  518A               	movf	??_efgtoa& (0+255),w,b
  3896  003620  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  3897  003622  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  3898  003624  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3899  003626  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  3900  003628  E106               	bnz	u8700
  3901  00362A  0E1A               	movlw	26
  3902  00362C  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  3903  00362E  B0D8               	btfsc	status,0,c
  3904  003630  D002               	goto	u8700
  3905  003632  0E01               	movlw	1
  3906  003634  D001               	goto	u8710
  3907  003636                     u8700:
  3908  003636  0E00               	movlw	0
  3909  003638                     u8710:
  3910  003638  6F9D               	movwf	_efgtoa$662& (0+255),b
  3911  00363A  6B9E               	clrf	(_efgtoa$662+1)& (0+255),b
  3912                           
  3913                           ; BSR set to: 0
  3914  00363C  519D               	movf	_efgtoa$662& (0+255),w,b
  3915  00363E  119E               	iorwf	(_efgtoa$662+1)& (0+255),w,b
  3916  003640  A4D8               	btfss	status,2,c
  3917  003642  D004               	goto	l6757
  3918                           
  3919                           ; BSR set to: 0
  3920  003644  0E00               	movlw	0
  3921  003646  6F9C               	movwf	(_efgtoa$661+1)& (0+255),b
  3922  003648  0E65               	movlw	101
  3923  00364A  D003               	goto	L5
  3924  00364C                     l6757:
  3925                           
  3926                           ; BSR set to: 0
  3927  00364C  0E00               	movlw	0
  3928  00364E  6F9C               	movwf	(_efgtoa$661+1)& (0+255),b
  3929  003650  0E45               	movlw	69
  3930  003652                     L5:
  3931  003652  6F9B               	movwf	_efgtoa$661& (0+255),b
  3932                           
  3933                           ; BSR set to: 0
  3934  003654  0E00               	movlw	low _dbuf
  3935  003656  25B9               	addwf	efgtoa@i& (0+255),w,b
  3936  003658  6ED9               	movwf	fsr2l,c
  3937  00365A  0E02               	movlw	high _dbuf
  3938  00365C  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3939  00365E  6EDA               	movwf	fsr2h,c
  3940  003660  C09B  FFDF         	movff	_efgtoa$661,indf2
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  3944  003664  07AE               	decf	efgtoa@w& (0+255),f,b
  3945  003666  A0D8               	btfss	status,0,c
  3946  003668  07AF               	decf	(efgtoa@w+1)& (0+255),f,b
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  3950  00366A  0E00               	movlw	low _dbuf
  3951  00366C  25C1               	addwf	efgtoa@n& (0+255),w,b
  3952  00366E  6E0C               	movwf	strcpy@dest^0,c
  3953  003670  0E02               	movlw	high _dbuf
  3954  003672  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3955  003674  6E0D               	movwf	(strcpy@dest+1)^0,c
  3956  003676  0E00               	movlw	low _dbuf
  3957  003678  25B9               	addwf	efgtoa@i& (0+255),w,b
  3958  00367A  6E0E               	movwf	strcpy@src^0,c
  3959  00367C  0E02               	movlw	high _dbuf
  3960  00367E  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3961  003680  6E0F               	movwf	(strcpy@src+1)^0,c
  3962  003682  EC03  F02D         	call	_strcpy	;wreg free
  3963  003686  EF14  F017         	goto	l6515
  3964  00368A                     __end_of_efgtoa:
  3965                           	opt callstack 0
  3966                           
  3967 ;; *************** function _tolower *****************
  3968 ;; Defined at:
  3969 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  c               2   17[COMRAM] int 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;		None
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  2   17[COMRAM] int 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3983 ;;      Params:         2       0       0       0       0       0       0
  3984 ;;      Locals:         2       0       0       0       0       0       0
  3985 ;;      Temps:          4       0       0       0       0       0       0
  3986 ;;      Totals:         8       0       0       0       0       0       0
  3987 ;;Total ram usage:        8 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    5
  3990 ;; This function calls:
  3991 ;;		_isupper
  3992 ;; This function is called by:
  3993 ;;		_efgtoa
  3994 ;;		_vfpfcnvrt
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text6
  3999  005A58                     __ptext6:
  4000                           	opt callstack 0
  4001  005A58                     _tolower:
  4002                           	opt callstack 22
  4003                           
  4004                           ;incstack = 0
  4005  005A58  0EBF               	movlw	191
  4006  005A5A  6E14               	movwf	??_tolower^0,c
  4007  005A5C  0EFF               	movlw	255
  4008  005A5E  6E15               	movwf	(??_tolower+1)^0,c
  4009  005A60  C012  F016         	movff	tolower@c,??_tolower+2
  4010  005A64  C013  F017         	movff	tolower@c+1,??_tolower+3
  4011  005A68  5014               	movf	??_tolower^0,w,c
  4012  005A6A  2616               	addwf	(??_tolower+2)^0,f,c
  4013  005A6C  5015               	movf	(??_tolower+1)^0,w,c
  4014  005A6E  2217               	addwfc	(??_tolower+3)^0,f,c
  4015  005A70  5017               	movf	(??_tolower+3)^0,w,c
  4016  005A72  E106               	bnz	u7340
  4017  005A74  0E1A               	movlw	26
  4018  005A76  5C16               	subwf	(??_tolower+2)^0,w,c
  4019  005A78  B0D8               	btfsc	status,0,c
  4020  005A7A  D002               	goto	u7340
  4021  005A7C  0E01               	movlw	1
  4022  005A7E  D001               	goto	u7350
  4023  005A80                     u7340:
  4024  005A80  0E00               	movlw	0
  4025  005A82                     u7350:
  4026  005A82  6E18               	movwf	_tolower$1393^0,c
  4027  005A84  6A19               	clrf	(_tolower$1393+1)^0,c
  4028  005A86  5018               	movf	_tolower$1393^0,w,c
  4029  005A88  1019               	iorwf	(_tolower$1393+1)^0,w,c
  4030  005A8A  B4D8               	btfsc	status,2,c
  4031  005A8C  D006               	goto	l1397
  4032  005A8E  0E20               	movlw	32
  4033  005A90  1012               	iorwf	tolower@c^0,w,c
  4034  005A92  6E12               	movwf	?_tolower^0,c
  4035  005A94  5013               	movf	(tolower@c+1)^0,w,c
  4036  005A96  6E13               	movwf	(?_tolower+1)^0,c
  4037  005A98  0012               	return	
  4038  005A9A                     l1397:
  4039  005A9A  C012  F012         	movff	tolower@c,?_tolower
  4040  005A9E  C013  F013         	movff	tolower@c+1,?_tolower+1
  4041  005AA2  0012               	return		;funcret
  4042  005AA4                     __end_of_tolower:
  4043                           	opt callstack 0
  4044                           
  4045 ;; *************** function _isupper *****************
  4046 ;; Defined at:
  4047 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  c               2   11[COMRAM] int 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;		None
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  2   11[COMRAM] int 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4061 ;;      Params:         2       0       0       0       0       0       0
  4062 ;;      Locals:         0       0       0       0       0       0       0
  4063 ;;      Temps:          4       0       0       0       0       0       0
  4064 ;;      Totals:         6       0       0       0       0       0       0
  4065 ;;Total ram usage:        6 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:    4
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_efgtoa
  4072 ;;		_vfpfcnvrt
  4073 ;;		_tolower
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text7
  4078  005C12                     __ptext7:
  4079                           	opt callstack 0
  4080  005C12                     _isupper:
  4081                           	opt callstack 22
  4082                           
  4083                           ;incstack = 0
  4084  005C12  0EBF               	movlw	191
  4085  005C14  6E0E               	movwf	??_isupper^0,c
  4086  005C16  0EFF               	movlw	255
  4087  005C18  6E0F               	movwf	(??_isupper+1)^0,c
  4088  005C1A  C00C  F010         	movff	isupper@c,??_isupper+2
  4089  005C1E  C00D  F011         	movff	isupper@c+1,??_isupper+3
  4090  005C22  500E               	movf	??_isupper^0,w,c
  4091  005C24  2610               	addwf	(??_isupper+2)^0,f,c
  4092  005C26  500F               	movf	(??_isupper+1)^0,w,c
  4093  005C28  2211               	addwfc	(??_isupper+3)^0,f,c
  4094  005C2A  5011               	movf	(??_isupper+3)^0,w,c
  4095  005C2C  E106               	bnz	u6800
  4096  005C2E  0E1A               	movlw	26
  4097  005C30  5C10               	subwf	(??_isupper+2)^0,w,c
  4098  005C32  B0D8               	btfsc	status,0,c
  4099  005C34  D002               	goto	u6800
  4100  005C36  0E01               	movlw	1
  4101  005C38  D001               	goto	u6810
  4102  005C3A                     u6800:
  4103  005C3A  0E00               	movlw	0
  4104  005C3C                     u6810:
  4105  005C3C  6E0C               	movwf	?_isupper^0,c
  4106  005C3E  6A0D               	clrf	(?_isupper+1)^0,c
  4107  005C40  0012               	return		;funcret
  4108  005C42                     __end_of_isupper:
  4109                           	opt callstack 0
  4110                           
  4111 ;; *************** function _strcpy *****************
  4112 ;; Defined at:
  4113 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  dest            2   11[COMRAM] PTR unsigned char 
  4116 ;;		 -> dbuf(80), 
  4117 ;;  src             2   13[COMRAM] PTR const unsigned char 
  4118 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4119 ;;		 -> dbuf(80), 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  d               2   19[COMRAM] PTR unsigned char 
  4122 ;;		 -> dbuf(80), 
  4123 ;;  s               2   17[COMRAM] PTR const unsigned char 
  4124 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4125 ;;		 -> dbuf(80), 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  2   11[COMRAM] PTR unsigned char 
  4128 ;; Registers used:
  4129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4135 ;;      Params:         4       0       0       0       0       0       0
  4136 ;;      Locals:         4       0       0       0       0       0       0
  4137 ;;      Temps:          2       0       0       0       0       0       0
  4138 ;;      Totals:        10       0       0       0       0       0       0
  4139 ;;Total ram usage:       10 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    4
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_efgtoa
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text8
  4150  005A06                     __ptext8:
  4151                           	opt callstack 0
  4152  005A06                     _strcpy:
  4153                           	opt callstack 22
  4154                           
  4155                           ;incstack = 0
  4156  005A06  C00E  F012         	movff	strcpy@src,strcpy@s
  4157  005A0A  C00F  F013         	movff	strcpy@src+1,strcpy@s+1
  4158  005A0E  C00C  F014         	movff	strcpy@dest,strcpy@d
  4159  005A12  C00D  F015         	movff	strcpy@dest+1,strcpy@d+1
  4160  005A16                     l5965:
  4161  005A16  5012               	movf	strcpy@s^0,w,c
  4162  005A18  6E10               	movwf	??_strcpy^0,c
  4163  005A1A  5013               	movf	(strcpy@s+1)^0,w,c
  4164  005A1C  6E11               	movwf	(??_strcpy+1)^0,c
  4165  005A1E  4A12               	infsnz	strcpy@s^0,f,c
  4166  005A20  2A13               	incf	(strcpy@s+1)^0,f,c
  4167  005A22  C010  FFF6         	movff	??_strcpy,tblptrl
  4168  005A26  C011  FFF7         	movff	??_strcpy+1,tblptrh
  4169  005A2A  6AF8               	clrf	tblptru,c
  4170  005A2C  C014  FFD9         	movff	strcpy@d,fsr2l
  4171  005A30  C015  FFDA         	movff	strcpy@d+1,fsr2h
  4172  005A34  4A14               	infsnz	strcpy@d^0,f,c
  4173  005A36  2A15               	incf	(strcpy@d+1)^0,f,c
  4174  005A38  0E05               	movlw	(high __ramtop+-1)
  4175  005A3A  64F7               	cpfsgt	tblptrh,c
  4176  005A3C  D003               	bra	u7327
  4177  005A3E  0008               	tblrd		*
  4178  005A40  50F5               	movf	tablat,w,c
  4179  005A42  D005               	bra	u7320
  4180  005A44                     u7327:
  4181  005A44  CFF6 FFE1          	movff	tblptrl,fsr1l
  4182  005A48  CFF7 FFE2          	movff	tblptrh,fsr1h
  4183  005A4C  50E7               	movf	indf1,w,c
  4184  005A4E                     u7320:
  4185  005A4E  6EDF               	movwf	indf2,c
  4186  005A50  50DF               	movf	indf2,w,c
  4187  005A52  B4D8               	btfsc	status,2,c
  4188  005A54  0012               	return	
  4189  005A56  D7DF               	goto	l5965
  4190  005A58                     __end_of_strcpy:
  4191                           	opt callstack 0
  4192                           
  4193 ;; *************** function _pad *****************
  4194 ;; Defined at:
  4195 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4198 ;;		 -> sprintf@f(6), 
  4199 ;;  buf             2   29[COMRAM] PTR unsigned char 
  4200 ;;		 -> dbuf(80), 
  4201 ;;  p               2   31[COMRAM] int 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  w               2   36[COMRAM] int 
  4204 ;;  i               2   34[COMRAM] int 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  2   27[COMRAM] int 
  4207 ;; Registers used:
  4208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4214 ;;      Params:         6       0       0       0       0       0       0
  4215 ;;      Locals:         4       0       0       0       0       0       0
  4216 ;;      Temps:          1       0       0       0       0       0       0
  4217 ;;      Totals:        11       0       0       0       0       0       0
  4218 ;;Total ram usage:       11 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    7
  4221 ;; This function calls:
  4222 ;;		_fputc
  4223 ;;		_fputs
  4224 ;;		_strlen
  4225 ;; This function is called by:
  4226 ;;		_efgtoa
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text9
  4231  00561A                     __ptext9:
  4232                           	opt callstack 0
  4233  00561A                     _pad:
  4234                           	opt callstack 19
  4235                           
  4236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4237                           
  4238                           ;incstack = 0
  4239  00561A  A06D               	btfss	_flags^0,0,c
  4240  00561C  D00A               	goto	l5923
  4241                           
  4242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4243  00561E  C01E  F015         	movff	pad@buf,fputs@s
  4244  005622  C01F  F016         	movff	pad@buf+1,fputs@s+1
  4245  005626  C01C  F017         	movff	pad@fp,fputs@fp
  4246  00562A  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  4247  00562E  ECD3  F02D         	call	_fputs	;wreg free
  4248  005632                     l5923:
  4249                           
  4250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4251  005632  BE21               	btfsc	(pad@p+1)^0,7,c
  4252  005634  D005               	goto	l5927
  4253  005636  C020  F025         	movff	pad@p,pad@w
  4254  00563A  C021  F026         	movff	pad@p+1,pad@w+1
  4255  00563E  D004               	goto	l234
  4256  005640                     l5927:
  4257  005640  0E00               	movlw	0
  4258  005642  6E26               	movwf	(pad@w+1)^0,c
  4259  005644  0E00               	movlw	0
  4260  005646  6E25               	movwf	pad@w^0,c
  4261  005648                     l234:
  4262                           
  4263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4264  005648  0E00               	movlw	0
  4265  00564A  6E24               	movwf	(pad@i+1)^0,c
  4266  00564C  0E00               	movlw	0
  4267  00564E  6E23               	movwf	pad@i^0,c
  4268                           
  4269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4270  005650  D00C               	goto	l5933
  4271  005652                     l5929:
  4272                           
  4273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4274  005652  0E00               	movlw	0
  4275  005654  6E0D               	movwf	(fputc@c+1)^0,c
  4276  005656  0E20               	movlw	32
  4277  005658  6E0C               	movwf	fputc@c^0,c
  4278  00565A  C01C  F00E         	movff	pad@fp,fputc@fp
  4279  00565E  C01D  F00F         	movff	pad@fp+1,fputc@fp+1
  4280  005662  ECBD  F02A         	call	_fputc	;wreg free
  4281                           
  4282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4283  005666  4A23               	infsnz	pad@i^0,f,c
  4284  005668  2A24               	incf	(pad@i+1)^0,f,c
  4285  00566A                     l5933:
  4286                           
  4287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4288  00566A  5025               	movf	pad@w^0,w,c
  4289  00566C  5C23               	subwf	pad@i^0,w,c
  4290  00566E  5024               	movf	(pad@i+1)^0,w,c
  4291  005670  0A80               	xorlw	128
  4292  005672  6E22               	movwf	??_pad^0,c
  4293  005674  5026               	movf	(pad@w+1)^0,w,c
  4294  005676  0A80               	xorlw	128
  4295  005678  5822               	subwfb	??_pad^0,w,c
  4296  00567A  A0D8               	btfss	status,0,c
  4297  00567C  D7EA               	goto	l5929
  4298                           
  4299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4300  00567E  B06D               	btfsc	_flags^0,0,c
  4301  005680  D00A               	goto	l5937
  4302                           
  4303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4304  005682  C01E  F015         	movff	pad@buf,fputs@s
  4305  005686  C01F  F016         	movff	pad@buf+1,fputs@s+1
  4306  00568A  C01C  F017         	movff	pad@fp,fputs@fp
  4307  00568E  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  4308  005692  ECD3  F02D         	call	_fputs	;wreg free
  4309  005696                     l5937:
  4310                           
  4311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4312  005696  C01E  F00C         	movff	pad@buf,strlen@s
  4313  00569A  C01F  F00D         	movff	pad@buf+1,strlen@s+1
  4314  00569E  EC50  F02E         	call	_strlen	;wreg free
  4315  0056A2  5025               	movf	pad@w^0,w,c
  4316  0056A4  240C               	addwf	?_strlen^0,w,c
  4317  0056A6  6E1C               	movwf	?_pad^0,c
  4318  0056A8  5026               	movf	(pad@w+1)^0,w,c
  4319  0056AA  200D               	addwfc	(?_strlen+1)^0,w,c
  4320  0056AC  6E1D               	movwf	(?_pad+1)^0,c
  4321  0056AE  0012               	return		;funcret
  4322  0056B0                     __end_of_pad:
  4323                           	opt callstack 0
  4324                           
  4325 ;; *************** function _strlen *****************
  4326 ;; Defined at:
  4327 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4330 ;;		 -> dbuf(80), 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  a               2   13[COMRAM] PTR const unsigned char 
  4333 ;;		 -> dbuf(80), 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  2   11[COMRAM] unsigned int 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4343 ;;      Params:         2       0       0       0       0       0       0
  4344 ;;      Locals:         2       0       0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0
  4346 ;;      Totals:         4       0       0       0       0       0       0
  4347 ;;Total ram usage:        4 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:    4
  4350 ;; This function calls:
  4351 ;;		Nothing
  4352 ;; This function is called by:
  4353 ;;		_pad
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text10
  4358  005CA0                     __ptext10:
  4359                           	opt callstack 0
  4360  005CA0                     _strlen:
  4361                           	opt callstack 21
  4362                           
  4363                           ;incstack = 0
  4364  005CA0  C00C  F00E         	movff	strlen@s,strlen@a
  4365  005CA4  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  4366  005CA8  D002               	goto	l5707
  4367  005CAA                     l5705:
  4368  005CAA  4A0C               	infsnz	strlen@s^0,f,c
  4369  005CAC  2A0D               	incf	(strlen@s+1)^0,f,c
  4370  005CAE                     l5707:
  4371  005CAE  C00C  FFD9         	movff	strlen@s,fsr2l
  4372  005CB2  C00D  FFDA         	movff	strlen@s+1,fsr2h
  4373  005CB6  50DF               	movf	indf2,w,c
  4374  005CB8  A4D8               	btfss	status,2,c
  4375  005CBA  D7F7               	goto	l5705
  4376  005CBC  500E               	movf	strlen@a^0,w,c
  4377  005CBE  5C0C               	subwf	strlen@s^0,w,c
  4378  005CC0  6E0C               	movwf	?_strlen^0,c
  4379  005CC2  500F               	movf	(strlen@a+1)^0,w,c
  4380  005CC4  580D               	subwfb	(strlen@s+1)^0,w,c
  4381  005CC6  6E0D               	movwf	(?_strlen+1)^0,c
  4382  005CC8  0012               	return		;funcret
  4383  005CCA                     __end_of_strlen:
  4384                           	opt callstack 0
  4385                           
  4386 ;; *************** function _fputs *****************
  4387 ;; Defined at:
  4388 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  s               2   20[COMRAM] PTR const unsigned char 
  4391 ;;		 -> dbuf(80), 
  4392 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4393 ;;		 -> sprintf@f(6), 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  i               2   25[COMRAM] int 
  4396 ;;  c               1   24[COMRAM] unsigned char 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  2   20[COMRAM] int 
  4399 ;; Registers used:
  4400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4406 ;;      Params:         4       0       0       0       0       0       0
  4407 ;;      Locals:         3       0       0       0       0       0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0
  4409 ;;      Totals:         7       0       0       0       0       0       0
  4410 ;;Total ram usage:        7 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    6
  4413 ;; This function calls:
  4414 ;;		_fputc
  4415 ;; This function is called by:
  4416 ;;		_pad
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text11
  4421  005BA6                     __ptext11:
  4422                           	opt callstack 0
  4423  005BA6                     _fputs:
  4424                           	opt callstack 19
  4425                           
  4426                           ;incstack = 0
  4427  005BA6  0E00               	movlw	0
  4428  005BA8  6E1B               	movwf	(fputs@i+1)^0,c
  4429  005BAA  0E00               	movlw	0
  4430  005BAC  6E1A               	movwf	fputs@i^0,c
  4431  005BAE  D00B               	goto	l5701
  4432  005BB0                     l5697:
  4433  005BB0  C019  F00C         	movff	fputs@c,fputc@c
  4434  005BB4  6A0D               	clrf	(fputc@c+1)^0,c
  4435  005BB6  C017  F00E         	movff	fputs@fp,fputc@fp
  4436  005BBA  C018  F00F         	movff	fputs@fp+1,fputc@fp+1
  4437  005BBE  ECBD  F02A         	call	_fputc	;wreg free
  4438  005BC2  4A1A               	infsnz	fputs@i^0,f,c
  4439  005BC4  2A1B               	incf	(fputs@i+1)^0,f,c
  4440  005BC6                     l5701:
  4441  005BC6  501A               	movf	fputs@i^0,w,c
  4442  005BC8  2415               	addwf	fputs@s^0,w,c
  4443  005BCA  6ED9               	movwf	fsr2l,c
  4444  005BCC  501B               	movf	(fputs@i+1)^0,w,c
  4445  005BCE  2016               	addwfc	(fputs@s+1)^0,w,c
  4446  005BD0  6EDA               	movwf	fsr2h,c
  4447  005BD2  50DF               	movf	indf2,w,c
  4448  005BD4  6E19               	movwf	fputs@c^0,c
  4449  005BD6  5019               	movf	fputs@c^0,w,c
  4450  005BD8  B4D8               	btfsc	status,2,c
  4451  005BDA  0012               	return	
  4452  005BDC  D7E9               	goto	l5697
  4453  005BDE                     __end_of_fputs:
  4454                           	opt callstack 0
  4455                           
  4456 ;; *************** function _fputc *****************
  4457 ;; Defined at:
  4458 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  c               2   11[COMRAM] int 
  4461 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  4462 ;;		 -> sprintf@f(6), 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  2   11[COMRAM] int 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4474 ;;      Params:         4       0       0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0
  4476 ;;      Temps:          5       0       0       0       0       0       0
  4477 ;;      Totals:         9       0       0       0       0       0       0
  4478 ;;Total ram usage:        9 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    5
  4481 ;; This function calls:
  4482 ;;		_putch
  4483 ;; This function is called by:
  4484 ;;		_pad
  4485 ;;		_vfpfcnvrt
  4486 ;;		_fputs
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text12
  4491  00557A                     __ptext12:
  4492                           	opt callstack 0
  4493  00557A                     _fputc:
  4494                           	opt callstack 22
  4495                           
  4496                           ;incstack = 0
  4497  00557A  500E               	movf	fputc@fp^0,w,c
  4498  00557C  100F               	iorwf	(fputc@fp+1)^0,w,c
  4499  00557E  B4D8               	btfsc	status,2,c
  4500  005580  D004               	goto	u6750
  4501  005582  500E               	movf	fputc@fp^0,w,c
  4502  005584  100F               	iorwf	(fputc@fp+1)^0,w,c
  4503  005586  A4D8               	btfss	status,2,c
  4504  005588  D004               	goto	l5687
  4505  00558A                     u6750:
  4506  00558A  500C               	movf	fputc@c^0,w,c
  4507  00558C  ECCF  F02E         	call	_putch
  4508  005590  0012               	return	
  4509  005592                     l5687:
  4510  005592  EE20 F004          	lfsr	2,4
  4511  005596  500E               	movf	fputc@fp^0,w,c
  4512  005598  26D9               	addwf	fsr2l,f,c
  4513  00559A  500F               	movf	(fputc@fp+1)^0,w,c
  4514  00559C  22DA               	addwfc	fsr2h,f,c
  4515  00559E  50DE               	movf	postinc2,w,c
  4516  0055A0  10DE               	iorwf	postinc2,w,c
  4517  0055A2  B4D8               	btfsc	status,2,c
  4518  0055A4  D016               	goto	u6770
  4519  0055A6  EE20 F004          	lfsr	2,4
  4520  0055AA  500E               	movf	fputc@fp^0,w,c
  4521  0055AC  26D9               	addwf	fsr2l,f,c
  4522  0055AE  500F               	movf	(fputc@fp+1)^0,w,c
  4523  0055B0  22DA               	addwfc	fsr2h,f,c
  4524  0055B2  EE10 F002          	lfsr	1,2
  4525  0055B6  500E               	movf	fputc@fp^0,w,c
  4526  0055B8  26E1               	addwf	fsr1l,f,c
  4527  0055BA  500F               	movf	(fputc@fp+1)^0,w,c
  4528  0055BC  22E2               	addwfc	fsr1h,f,c
  4529  0055BE  50DE               	movf	postinc2,w,c
  4530  0055C0  5CE6               	subwf	postinc1,w,c
  4531  0055C2  50E6               	movf	postinc1,w,c
  4532  0055C4  0A80               	xorlw	128
  4533  0055C6  6E14               	movwf	(??_fputc+4)^0,c
  4534  0055C8  50DE               	movf	postinc2,w,c
  4535  0055CA  0A80               	xorlw	128
  4536  0055CC  5814               	subwfb	(??_fputc+4)^0,w,c
  4537  0055CE  B0D8               	btfsc	status,0,c
  4538  0055D0  0012               	return	
  4539  0055D2                     u6770:
  4540  0055D2  EE20 F002          	lfsr	2,2
  4541  0055D6  500E               	movf	fputc@fp^0,w,c
  4542  0055D8  26D9               	addwf	fsr2l,f,c
  4543  0055DA  500F               	movf	(fputc@fp+1)^0,w,c
  4544  0055DC  22DA               	addwfc	fsr2h,f,c
  4545  0055DE  CFDE F010          	movff	postinc2,??_fputc
  4546  0055E2  CFDD F011          	movff	postdec2,??_fputc+1
  4547  0055E6  C00E  FFD9         	movff	fputc@fp,fsr2l
  4548  0055EA  C00F  FFDA         	movff	fputc@fp+1,fsr2h
  4549  0055EE  CFDE F012          	movff	postinc2,??_fputc+2
  4550  0055F2  CFDD F013          	movff	postdec2,??_fputc+3
  4551  0055F6  5010               	movf	??_fputc^0,w,c
  4552  0055F8  2412               	addwf	(??_fputc+2)^0,w,c
  4553  0055FA  6ED9               	movwf	fsr2l,c
  4554  0055FC  5011               	movf	(??_fputc+1)^0,w,c
  4555  0055FE  2013               	addwfc	(??_fputc+3)^0,w,c
  4556  005600  6EDA               	movwf	fsr2h,c
  4557  005602  C00C  FFDF         	movff	fputc@c,indf2
  4558  005606  EE20 F002          	lfsr	2,2
  4559  00560A  500E               	movf	fputc@fp^0,w,c
  4560  00560C  26D9               	addwf	fsr2l,f,c
  4561  00560E  500F               	movf	(fputc@fp+1)^0,w,c
  4562  005610  22DA               	addwfc	fsr2h,f,c
  4563  005612  2ADE               	incf	postinc2,f,c
  4564  005614  0E00               	movlw	0
  4565  005616  22DD               	addwfc	postdec2,f,c
  4566  005618  0012               	return		;funcret
  4567  00561A                     __end_of_fputc:
  4568                           	opt callstack 0
  4569                           
  4570 ;; *************** function _putch *****************
  4571 ;; Defined at:
  4572 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  c               1    wreg     unsigned char 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  c               1    0[COMRAM] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		wreg
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4586 ;;      Params:         0       0       0       0       0       0       0
  4587 ;;      Locals:         0       0       0       0       0       0       0
  4588 ;;      Temps:          0       0       0       0       0       0       0
  4589 ;;      Totals:         0       0       0       0       0       0       0
  4590 ;;Total ram usage:        0 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    4
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_fputc
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text13
  4601  005D9E                     __ptext13:
  4602                           	opt callstack 0
  4603  005D9E                     _putch:
  4604                           	opt callstack 22
  4605                           
  4606                           ;incstack = 0
  4607  005D9E  0012               	return		;funcret
  4608  005DA0                     __end_of_putch:
  4609                           	opt callstack 0
  4610                           
  4611 ;; *************** function _floorf *****************
  4612 ;; Defined at:
  4613 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  x               4   85[COMRAM] float 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  u               4    6[BANK0 ] struct .
  4618 ;;  m               4    0[BANK0 ] unsigned long 
  4619 ;;  e               2    4[BANK0 ] int 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  4   85[COMRAM] float 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4629 ;;      Params:         4       0       0       0       0       0       0
  4630 ;;      Locals:         0      10       0       0       0       0       0
  4631 ;;      Temps:          6       0       0       0       0       0       0
  4632 ;;      Totals:        10      10       0       0       0       0       0
  4633 ;;Total ram usage:       20 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    4
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_efgtoa
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text14
  4644  004936                     __ptext14:
  4645                           	opt callstack 0
  4646  004936                     _floorf:
  4647                           	opt callstack 22
  4648                           
  4649                           ;incstack = 0
  4650  004936  C0F1  F086         	movff	floorf@F524,floorf@u
  4651  00493A  C0F2  F087         	movff	floorf@F524+1,floorf@u+1
  4652  00493E  C0F3  F088         	movff	floorf@F524+2,floorf@u+2
  4653  004942  C0F4  F089         	movff	floorf@F524+3,floorf@u+3
  4654  004946  C056  F086         	movff	floorf@x,floorf@u
  4655  00494A  C057  F087         	movff	floorf@x+1,floorf@u+1
  4656  00494E  C058  F088         	movff	floorf@x+2,floorf@u+2
  4657  004952  C059  F089         	movff	floorf@x+3,floorf@u+3
  4658  004956  0E81               	movlw	129
  4659  004958  6E5A               	movwf	??_floorf^0,c
  4660  00495A  0EFF               	movlw	255
  4661  00495C  6E5B               	movwf	(??_floorf+1)^0,c
  4662  00495E  C086  F05C         	movff	floorf@u,??_floorf+2
  4663  004962  C087  F05D         	movff	floorf@u+1,??_floorf+3
  4664  004966  C088  F05E         	movff	floorf@u+2,??_floorf+4
  4665  00496A  C089  F05F         	movff	floorf@u+3,??_floorf+5
  4666  00496E  0E18               	movlw	24
  4667  004970  D005               	goto	u7370
  4668  004972                     u7375:
  4669  004972  90D8               	bcf	status,0,c
  4670  004974  325F               	rrcf	(??_floorf+5)^0,f,c
  4671  004976  325E               	rrcf	(??_floorf+4)^0,f,c
  4672  004978  325D               	rrcf	(??_floorf+3)^0,f,c
  4673  00497A  325C               	rrcf	(??_floorf+2)^0,f,c
  4674  00497C                     u7370:
  4675  00497C  2EE8               	decfsz	wreg,f,c
  4676  00497E  D7F9               	goto	u7375
  4677  004980  505C               	movf	(??_floorf+2)^0,w,c
  4678  004982  245A               	addwf	??_floorf^0,w,c
  4679  004984  0100               	movlb	0	; () banked
  4680  004986  6F84               	movwf	floorf@e& (0+255),b
  4681  004988  0E00               	movlw	0
  4682  00498A  205B               	addwfc	(??_floorf+1)^0,w,c
  4683  00498C  6F85               	movwf	(floorf@e+1)& (0+255),b
  4684  00498E  BF85               	btfsc	(floorf@e+1)& (0+255),7,b
  4685  004990  D00F               	goto	l5983
  4686  004992  5185               	movf	(floorf@e+1)& (0+255),w,b
  4687  004994  E104               	bnz	u7380
  4688  004996  0E17               	movlw	23
  4689  004998  5D84               	subwf	floorf@e& (0+255),w,b
  4690  00499A  A0D8               	btfss	status,0,c
  4691  00499C  D009               	goto	l5983
  4692  00499E                     u7380:
  4693                           
  4694                           ; BSR set to: 0
  4695  00499E  C056  F056         	movff	floorf@x,?_floorf
  4696  0049A2  C057  F057         	movff	floorf@x+1,?_floorf+1
  4697  0049A6  C058  F058         	movff	floorf@x+2,?_floorf+2
  4698  0049AA  C059  F059         	movff	floorf@x+3,?_floorf+3
  4699  0049AE  0012               	return	
  4700  0049B0                     l5983:
  4701                           
  4702                           ; BSR set to: 0
  4703  0049B0  BF85               	btfsc	(floorf@e+1)& (0+255),7,b
  4704  0049B2  D05F               	goto	l5993
  4705                           
  4706                           ; BSR set to: 0
  4707  0049B4  C084  F05A         	movff	floorf@e,??_floorf
  4708  0049B8  0EFF               	movlw	255
  4709  0049BA  6E5B               	movwf	(??_floorf+1)^0,c
  4710  0049BC  0EFF               	movlw	255
  4711  0049BE  6E5C               	movwf	(??_floorf+2)^0,c
  4712  0049C0  0E7F               	movlw	127
  4713  0049C2  6E5D               	movwf	(??_floorf+3)^0,c
  4714  0049C4  0E00               	movlw	0
  4715  0049C6  6E5E               	movwf	(??_floorf+4)^0,c
  4716  0049C8                     u7405:
  4717  0049C8  665A               	tstfsz	??_floorf^0,c
  4718  0049CA  D001               	goto	u7406
  4719  0049CC  D007               	goto	u7407
  4720  0049CE                     u7406:
  4721  0049CE  345E               	rlcf	(??_floorf+4)^0,w,c
  4722  0049D0  325E               	rrcf	(??_floorf+4)^0,f,c
  4723  0049D2  325D               	rrcf	(??_floorf+3)^0,f,c
  4724  0049D4  325C               	rrcf	(??_floorf+2)^0,f,c
  4725  0049D6  325B               	rrcf	(??_floorf+1)^0,f,c
  4726  0049D8  2E5A               	decfsz	??_floorf^0,f,c
  4727  0049DA  D7F6               	goto	u7405
  4728  0049DC                     u7407:
  4729  0049DC  C05B  F080         	movff	??_floorf+1,floorf@m
  4730  0049E0  C05C  F081         	movff	??_floorf+2,floorf@m+1
  4731  0049E4  C05D  F082         	movff	??_floorf+3,floorf@m+2
  4732  0049E8  C05E  F083         	movff	??_floorf+4,floorf@m+3
  4733  0049EC  0100               	movlb	0	; () banked
  4734  0049EE  5180               	movf	floorf@m& (0+255),w,b
  4735  0049F0  1586               	andwf	floorf@u& (0+255),w,b
  4736  0049F2  6E5A               	movwf	??_floorf^0,c
  4737  0049F4  5181               	movf	(floorf@m+1)& (0+255),w,b
  4738  0049F6  1587               	andwf	(floorf@u+1)& (0+255),w,b
  4739  0049F8  6E5B               	movwf	(??_floorf+1)^0,c
  4740  0049FA  5182               	movf	(floorf@m+2)& (0+255),w,b
  4741  0049FC  1588               	andwf	(floorf@u+2)& (0+255),w,b
  4742  0049FE  6E5C               	movwf	(??_floorf+2)^0,c
  4743  004A00  5183               	movf	(floorf@m+3)& (0+255),w,b
  4744  004A02  1589               	andwf	(floorf@u+3)& (0+255),w,b
  4745  004A04  6E5D               	movwf	(??_floorf+3)^0,c
  4746  004A06  505A               	movf	??_floorf^0,w,c
  4747  004A08  105B               	iorwf	(??_floorf+1)^0,w,c
  4748  004A0A  105C               	iorwf	(??_floorf+2)^0,w,c
  4749  004A0C  105D               	iorwf	(??_floorf+3)^0,w,c
  4750  004A0E  B4D8               	btfsc	status,2,c
  4751  004A10  D7C6               	goto	u7380
  4752                           
  4753                           ; BSR set to: 0
  4754  004A12  C086  F05A         	movff	floorf@u,??_floorf
  4755  004A16  C087  F05B         	movff	floorf@u+1,??_floorf+1
  4756  004A1A  C088  F05C         	movff	floorf@u+2,??_floorf+2
  4757  004A1E  C089  F05D         	movff	floorf@u+3,??_floorf+3
  4758  004A22  0E20               	movlw	32
  4759  004A24  D005               	goto	u7420
  4760  004A26                     u7425:
  4761  004A26  90D8               	bcf	status,0,c
  4762  004A28  325D               	rrcf	(??_floorf+3)^0,f,c
  4763  004A2A  325C               	rrcf	(??_floorf+2)^0,f,c
  4764  004A2C  325B               	rrcf	(??_floorf+1)^0,f,c
  4765  004A2E  325A               	rrcf	??_floorf^0,f,c
  4766  004A30                     u7420:
  4767  004A30  2EE8               	decfsz	wreg,f,c
  4768  004A32  D7F9               	goto	u7425
  4769  004A34  505A               	movf	??_floorf^0,w,c
  4770  004A36  105B               	iorwf	(??_floorf+1)^0,w,c
  4771  004A38  105C               	iorwf	(??_floorf+2)^0,w,c
  4772  004A3A  105D               	iorwf	(??_floorf+3)^0,w,c
  4773  004A3C  B4D8               	btfsc	status,2,c
  4774  004A3E  D008               	goto	l1086
  4775                           
  4776                           ; BSR set to: 0
  4777  004A40  5180               	movf	floorf@m& (0+255),w,b
  4778  004A42  2786               	addwf	floorf@u& (0+255),f,b
  4779  004A44  5181               	movf	(floorf@m+1)& (0+255),w,b
  4780  004A46  2387               	addwfc	(floorf@u+1)& (0+255),f,b
  4781  004A48  5182               	movf	(floorf@m+2)& (0+255),w,b
  4782  004A4A  2388               	addwfc	(floorf@u+2)& (0+255),f,b
  4783  004A4C  5183               	movf	(floorf@m+3)& (0+255),w,b
  4784  004A4E  2389               	addwfc	(floorf@u+3)& (0+255),f,b
  4785  004A50                     l1086:
  4786                           
  4787                           ; BSR set to: 0
  4788  004A50  1D80               	comf	floorf@m& (0+255),w,b
  4789  004A52  6E5A               	movwf	??_floorf^0,c
  4790  004A54  1D81               	comf	(floorf@m+1)& (0+255),w,b
  4791  004A56  6E5B               	movwf	(??_floorf+1)^0,c
  4792  004A58  1D82               	comf	(floorf@m+2)& (0+255),w,b
  4793  004A5A  6E5C               	movwf	(??_floorf+2)^0,c
  4794  004A5C  1D83               	comf	(floorf@m+3)& (0+255),w,b
  4795  004A5E  6E5D               	movwf	(??_floorf+3)^0,c
  4796  004A60  505A               	movf	??_floorf^0,w,c
  4797  004A62  1786               	andwf	floorf@u& (0+255),f,b
  4798  004A64  505B               	movf	(??_floorf+1)^0,w,c
  4799  004A66  1787               	andwf	(floorf@u+1)& (0+255),f,b
  4800  004A68  505C               	movf	(??_floorf+2)^0,w,c
  4801  004A6A  1788               	andwf	(floorf@u+2)& (0+255),f,b
  4802  004A6C  505D               	movf	(??_floorf+3)^0,w,c
  4803  004A6E  1789               	andwf	(floorf@u+3)& (0+255),f,b
  4804  004A70  D036               	goto	l6001
  4805  004A72                     l5993:
  4806                           
  4807                           ; BSR set to: 0
  4808  004A72  C086  F05A         	movff	floorf@u,??_floorf
  4809  004A76  C087  F05B         	movff	floorf@u+1,??_floorf+1
  4810  004A7A  C088  F05C         	movff	floorf@u+2,??_floorf+2
  4811  004A7E  C089  F05D         	movff	floorf@u+3,??_floorf+3
  4812  004A82  0E20               	movlw	32
  4813  004A84  D005               	goto	u7440
  4814  004A86                     u7445:
  4815  004A86  90D8               	bcf	status,0,c
  4816  004A88  325D               	rrcf	(??_floorf+3)^0,f,c
  4817  004A8A  325C               	rrcf	(??_floorf+2)^0,f,c
  4818  004A8C  325B               	rrcf	(??_floorf+1)^0,f,c
  4819  004A8E  325A               	rrcf	??_floorf^0,f,c
  4820  004A90                     u7440:
  4821  004A90  2EE8               	decfsz	wreg,f,c
  4822  004A92  D7F9               	goto	u7445
  4823  004A94  505A               	movf	??_floorf^0,w,c
  4824  004A96  105B               	iorwf	(??_floorf+1)^0,w,c
  4825  004A98  105C               	iorwf	(??_floorf+2)^0,w,c
  4826  004A9A  105D               	iorwf	(??_floorf+3)^0,w,c
  4827  004A9C  A4D8               	btfss	status,2,c
  4828  004A9E  D008               	goto	l5997
  4829                           
  4830                           ; BSR set to: 0
  4831  004AA0  0E00               	movlw	0
  4832  004AA2  6F86               	movwf	floorf@u& (0+255),b
  4833  004AA4  0E00               	movlw	0
  4834  004AA6  6F87               	movwf	(floorf@u+1)& (0+255),b
  4835  004AA8  0E00               	movlw	0
  4836  004AAA  6F88               	movwf	(floorf@u+2)& (0+255),b
  4837  004AAC  0E00               	movlw	0
  4838  004AAE  D016               	goto	L6
  4839  004AB0                     l5997:
  4840                           
  4841                           ; BSR set to: 0
  4842  004AB0  90D8               	bcf	status,0,c
  4843  004AB2  3586               	rlcf	floorf@u& (0+255),w,b
  4844  004AB4  6E5A               	movwf	??_floorf^0,c
  4845  004AB6  3587               	rlcf	(floorf@u+1)& (0+255),w,b
  4846  004AB8  6E5B               	movwf	(??_floorf+1)^0,c
  4847  004ABA  3588               	rlcf	(floorf@u+2)& (0+255),w,b
  4848  004ABC  6E5C               	movwf	(??_floorf+2)^0,c
  4849  004ABE  3589               	rlcf	(floorf@u+3)& (0+255),w,b
  4850  004AC0  6E5D               	movwf	(??_floorf+3)^0,c
  4851  004AC2  505A               	movf	??_floorf^0,w,c
  4852  004AC4  105B               	iorwf	(??_floorf+1)^0,w,c
  4853  004AC6  105C               	iorwf	(??_floorf+2)^0,w,c
  4854  004AC8  105D               	iorwf	(??_floorf+3)^0,w,c
  4855  004ACA  B4D8               	btfsc	status,2,c
  4856  004ACC  D008               	goto	l6001
  4857                           
  4858                           ; BSR set to: 0
  4859  004ACE  0E00               	movlw	0
  4860  004AD0  6F86               	movwf	floorf@u& (0+255),b
  4861  004AD2  0E00               	movlw	0
  4862  004AD4  6F87               	movwf	(floorf@u+1)& (0+255),b
  4863  004AD6  0E80               	movlw	128
  4864  004AD8  6F88               	movwf	(floorf@u+2)& (0+255),b
  4865  004ADA  0EBF               	movlw	191
  4866  004ADC                     L6:
  4867  004ADC  6F89               	movwf	(floorf@u+3)& (0+255),b
  4868  004ADE                     l6001:
  4869                           
  4870                           ; BSR set to: 0
  4871  004ADE  C086  F056         	movff	floorf@u,?_floorf
  4872  004AE2  C087  F057         	movff	floorf@u+1,?_floorf+1
  4873  004AE6  C088  F058         	movff	floorf@u+2,?_floorf+2
  4874  004AEA  C089  F059         	movff	floorf@u+3,?_floorf+3
  4875                           
  4876                           ; BSR set to: 0
  4877  004AEE  0012               	return		;funcret
  4878  004AF0                     __end_of_floorf:
  4879                           	opt callstack 0
  4880                           
  4881 ;; *************** function ___fpclassifyf *****************
  4882 ;; Defined at:
  4883 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  x               4   11[COMRAM] float 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;  u               4   21[COMRAM] struct .
  4888 ;;  e               2   19[COMRAM] int 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  2   11[COMRAM] int 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4898 ;;      Params:         4       0       0       0       0       0       0
  4899 ;;      Locals:         6       0       0       0       0       0       0
  4900 ;;      Temps:          4       0       0       0       0       0       0
  4901 ;;      Totals:        14       0       0       0       0       0       0
  4902 ;;Total ram usage:       14 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    4
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_efgtoa
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text15
  4913  0052A0                     __ptext15:
  4914                           	opt callstack 0
  4915  0052A0                     ___fpclassifyf:
  4916                           	opt callstack 22
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;incstack = 0
  4920  0052A0  C0F5  F016         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4921  0052A4  C0F6  F017         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4922  0052A8  C0F7  F018         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4923  0052AC  C0F8  F019         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4924  0052B0  C00C  F016         	movff	___fpclassifyf@x,___fpclassifyf@u
  4925  0052B4  C00D  F017         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4926  0052B8  C00E  F018         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4927  0052BC  C00F  F019         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4928  0052C0  C016  F010         	movff	___fpclassifyf@u,??___fpclassifyf
  4929  0052C4  C017  F011         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4930  0052C8  C018  F012         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4931  0052CC  C019  F013         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4932  0052D0  0E18               	movlw	24
  4933  0052D2  D005               	goto	u7250
  4934  0052D4                     u7255:
  4935  0052D4  90D8               	bcf	status,0,c
  4936  0052D6  3213               	rrcf	(??___fpclassifyf+3)^0,f,c
  4937  0052D8  3212               	rrcf	(??___fpclassifyf+2)^0,f,c
  4938  0052DA  3211               	rrcf	(??___fpclassifyf+1)^0,f,c
  4939  0052DC  3210               	rrcf	??___fpclassifyf^0,f,c
  4940  0052DE                     u7250:
  4941  0052DE  2EE8               	decfsz	wreg,f,c
  4942  0052E0  D7F9               	goto	u7255
  4943  0052E2  5010               	movf	??___fpclassifyf^0,w,c
  4944  0052E4  6E14               	movwf	___fpclassifyf@e^0,c
  4945  0052E6  6A15               	clrf	(___fpclassifyf@e+1)^0,c
  4946  0052E8  5014               	movf	___fpclassifyf@e^0,w,c
  4947  0052EA  1015               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4948  0052EC  A4D8               	btfss	status,2,c
  4949  0052EE  D019               	goto	l5953
  4950  0052F0  90D8               	bcf	status,0,c
  4951  0052F2  3416               	rlcf	___fpclassifyf@u^0,w,c
  4952  0052F4  6E10               	movwf	??___fpclassifyf^0,c
  4953  0052F6  3417               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4954  0052F8  6E11               	movwf	(??___fpclassifyf+1)^0,c
  4955  0052FA  3418               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4956  0052FC  6E12               	movwf	(??___fpclassifyf+2)^0,c
  4957  0052FE  3419               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4958  005300  6E13               	movwf	(??___fpclassifyf+3)^0,c
  4959  005302  5010               	movf	??___fpclassifyf^0,w,c
  4960  005304  1011               	iorwf	(??___fpclassifyf+1)^0,w,c
  4961  005306  1012               	iorwf	(??___fpclassifyf+2)^0,w,c
  4962  005308  1013               	iorwf	(??___fpclassifyf+3)^0,w,c
  4963  00530A  A4D8               	btfss	status,2,c
  4964  00530C  D005               	goto	l5949
  4965  00530E  0E00               	movlw	0
  4966  005310  6E0D               	movwf	(?___fpclassifyf+1)^0,c
  4967  005312  0E02               	movlw	2
  4968  005314  6E0C               	movwf	?___fpclassifyf^0,c
  4969  005316  0012               	return	
  4970  005318                     l5949:
  4971  005318  0E00               	movlw	0
  4972  00531A  6E0D               	movwf	(?___fpclassifyf+1)^0,c
  4973  00531C  0E03               	movlw	3
  4974  00531E  6E0C               	movwf	?___fpclassifyf^0,c
  4975  005320  0012               	return	
  4976  005322                     l5953:
  4977  005322  2814               	incf	___fpclassifyf@e^0,w,c
  4978  005324  1015               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4979  005326  A4D8               	btfss	status,2,c
  4980  005328  D01C               	goto	l5959
  4981  00532A  C016  F010         	movff	___fpclassifyf@u,??___fpclassifyf
  4982  00532E  C017  F011         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4983  005332  C018  F012         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4984  005336  C019  F013         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4985  00533A  0E09               	movlw	9
  4986  00533C                     u7295:
  4987  00533C  90D8               	bcf	status,0,c
  4988  00533E  3610               	rlcf	??___fpclassifyf^0,f,c
  4989  005340  3611               	rlcf	(??___fpclassifyf+1)^0,f,c
  4990  005342  3612               	rlcf	(??___fpclassifyf+2)^0,f,c
  4991  005344  3613               	rlcf	(??___fpclassifyf+3)^0,f,c
  4992  005346  2EE8               	decfsz	wreg,f,c
  4993  005348  D7F9               	goto	u7295
  4994  00534A  5010               	movf	??___fpclassifyf^0,w,c
  4995  00534C  1011               	iorwf	(??___fpclassifyf+1)^0,w,c
  4996  00534E  1012               	iorwf	(??___fpclassifyf+2)^0,w,c
  4997  005350  1013               	iorwf	(??___fpclassifyf+3)^0,w,c
  4998  005352  A4D8               	btfss	status,2,c
  4999  005354  D002               	goto	u7300
  5000  005356  0E01               	movlw	1
  5001  005358  D001               	goto	u7310
  5002  00535A                     u7300:
  5003  00535A  0E00               	movlw	0
  5004  00535C                     u7310:
  5005  00535C  6E0C               	movwf	?___fpclassifyf^0,c
  5006  00535E  6A0D               	clrf	(?___fpclassifyf+1)^0,c
  5007  005360  0012               	return	
  5008  005362                     l5959:
  5009  005362  0E00               	movlw	0
  5010  005364  6E0D               	movwf	(?___fpclassifyf+1)^0,c
  5011  005366  0E04               	movlw	4
  5012  005368  6E0C               	movwf	?___fpclassifyf^0,c
  5013  00536A  0012               	return		;funcret
  5014  00536C                     __end_of___fpclassifyf:
  5015                           	opt callstack 0
  5016                           
  5017 ;; *************** function ___fleq *****************
  5018 ;; Defined at:
  5019 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  ff1             4   11[COMRAM] int 
  5022 ;;  ff2             4   15[COMRAM] int 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;		None               void
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5034 ;;      Params:         8       0       0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0
  5036 ;;      Temps:          4       0       0       0       0       0       0
  5037 ;;      Totals:        12       0       0       0       0       0       0
  5038 ;;Total ram usage:       12 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    4
  5041 ;; This function calls:
  5042 ;;		Nothing
  5043 ;; This function is called by:
  5044 ;;		_efgtoa
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text16
  5049  0056B0                     __ptext16:
  5050                           	opt callstack 0
  5051  0056B0                     ___fleq:
  5052                           	opt callstack 22
  5053                           
  5054                           ;incstack = 0
  5055  0056B0  0E00               	movlw	0
  5056  0056B2  140C               	andwf	___fleq@ff1^0,w,c
  5057  0056B4  6E14               	movwf	??___fleq^0,c
  5058  0056B6  0E00               	movlw	0
  5059  0056B8  140D               	andwf	(___fleq@ff1+1)^0,w,c
  5060  0056BA  6E15               	movwf	(??___fleq+1)^0,c
  5061  0056BC  0E80               	movlw	128
  5062  0056BE  140E               	andwf	(___fleq@ff1+2)^0,w,c
  5063  0056C0  6E16               	movwf	(??___fleq+2)^0,c
  5064  0056C2  0E7F               	movlw	127
  5065  0056C4  140F               	andwf	(___fleq@ff1+3)^0,w,c
  5066  0056C6  6E17               	movwf	(??___fleq+3)^0,c
  5067  0056C8  5014               	movf	??___fleq^0,w,c
  5068  0056CA  1015               	iorwf	(??___fleq+1)^0,w,c
  5069  0056CC  1016               	iorwf	(??___fleq+2)^0,w,c
  5070  0056CE  1017               	iorwf	(??___fleq+3)^0,w,c
  5071  0056D0  A4D8               	btfss	status,2,c
  5072  0056D2  D008               	goto	l6373
  5073  0056D4  0E00               	movlw	0
  5074  0056D6  6E0C               	movwf	___fleq@ff1^0,c
  5075  0056D8  0E00               	movlw	0
  5076  0056DA  6E0D               	movwf	(___fleq@ff1+1)^0,c
  5077  0056DC  0E00               	movlw	0
  5078  0056DE  6E0E               	movwf	(___fleq@ff1+2)^0,c
  5079  0056E0  0E00               	movlw	0
  5080  0056E2  6E0F               	movwf	(___fleq@ff1+3)^0,c
  5081  0056E4                     l6373:
  5082  0056E4  0E00               	movlw	0
  5083  0056E6  1410               	andwf	___fleq@ff2^0,w,c
  5084  0056E8  6E14               	movwf	??___fleq^0,c
  5085  0056EA  0E00               	movlw	0
  5086  0056EC  1411               	andwf	(___fleq@ff2+1)^0,w,c
  5087  0056EE  6E15               	movwf	(??___fleq+1)^0,c
  5088  0056F0  0E80               	movlw	128
  5089  0056F2  1412               	andwf	(___fleq@ff2+2)^0,w,c
  5090  0056F4  6E16               	movwf	(??___fleq+2)^0,c
  5091  0056F6  0E7F               	movlw	127
  5092  0056F8  1413               	andwf	(___fleq@ff2+3)^0,w,c
  5093  0056FA  6E17               	movwf	(??___fleq+3)^0,c
  5094  0056FC  5014               	movf	??___fleq^0,w,c
  5095  0056FE  1015               	iorwf	(??___fleq+1)^0,w,c
  5096  005700  1016               	iorwf	(??___fleq+2)^0,w,c
  5097  005702  1017               	iorwf	(??___fleq+3)^0,w,c
  5098  005704  A4D8               	btfss	status,2,c
  5099  005706  D008               	goto	l6377
  5100  005708  0E00               	movlw	0
  5101  00570A  6E10               	movwf	___fleq@ff2^0,c
  5102  00570C  0E00               	movlw	0
  5103  00570E  6E11               	movwf	(___fleq@ff2+1)^0,c
  5104  005710  0E00               	movlw	0
  5105  005712  6E12               	movwf	(___fleq@ff2+2)^0,c
  5106  005714  0E00               	movlw	0
  5107  005716  6E13               	movwf	(___fleq@ff2+3)^0,c
  5108  005718                     l6377:
  5109  005718  5010               	movf	___fleq@ff2^0,w,c
  5110  00571A  180C               	xorwf	___fleq@ff1^0,w,c
  5111  00571C  E10A               	bnz	u8050
  5112  00571E  5011               	movf	(___fleq@ff2+1)^0,w,c
  5113  005720  180D               	xorwf	(___fleq@ff1+1)^0,w,c
  5114  005722  E107               	bnz	u8050
  5115  005724  5012               	movf	(___fleq@ff2+2)^0,w,c
  5116  005726  180E               	xorwf	(___fleq@ff1+2)^0,w,c
  5117  005728  E104               	bnz	u8050
  5118  00572A  5013               	movf	(___fleq@ff2+3)^0,w,c
  5119  00572C  180F               	xorwf	(___fleq@ff1+3)^0,w,c
  5120  00572E  B4D8               	btfsc	status,2,c
  5121  005730  D002               	goto	l6381
  5122  005732                     u8050:
  5123  005732  90D8               	bcf	status,0,c
  5124  005734  0012               	return	
  5125  005736                     l6381:
  5126  005736  80D8               	bsf	status,0,c
  5127  005738  0012               	return		;funcret
  5128  00573A                     __end_of___fleq:
  5129                           	opt callstack 0
  5130                           
  5131 ;; *************** function ___awmod *****************
  5132 ;; Defined at:
  5133 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  dividend        2   11[COMRAM] int 
  5136 ;;  divisor         2   13[COMRAM] int 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  sign            1   16[COMRAM] unsigned char 
  5139 ;;  counter         1   15[COMRAM] unsigned char 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  2   11[COMRAM] int 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2, status,0
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5149 ;;      Params:         4       0       0       0       0       0       0
  5150 ;;      Locals:         2       0       0       0       0       0       0
  5151 ;;      Temps:          0       0       0       0       0       0       0
  5152 ;;      Totals:         6       0       0       0       0       0       0
  5153 ;;Total ram usage:        6 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; Hardware stack levels required when called:    4
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_efgtoa
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text17
  5164  0057BE                     __ptext17:
  5165                           	opt callstack 0
  5166  0057BE                     ___awmod:
  5167                           	opt callstack 22
  5168                           
  5169                           ;incstack = 0
  5170  0057BE  0E00               	movlw	0
  5171  0057C0  6E11               	movwf	___awmod@sign^0,c
  5172  0057C2  AE0D               	btfss	(___awmod@dividend+1)^0,7,c
  5173  0057C4  D006               	goto	l6341
  5174  0057C6  6C0C               	negf	___awmod@dividend^0,c
  5175  0057C8  1E0D               	comf	(___awmod@dividend+1)^0,f,c
  5176  0057CA  B0D8               	btfsc	status,0,c
  5177  0057CC  2A0D               	incf	(___awmod@dividend+1)^0,f,c
  5178  0057CE  0E01               	movlw	1
  5179  0057D0  6E11               	movwf	___awmod@sign^0,c
  5180  0057D2                     l6341:
  5181  0057D2  AE0F               	btfss	(___awmod@divisor+1)^0,7,c
  5182  0057D4  D004               	goto	l6345
  5183  0057D6  6C0E               	negf	___awmod@divisor^0,c
  5184  0057D8  1E0F               	comf	(___awmod@divisor+1)^0,f,c
  5185  0057DA  B0D8               	btfsc	status,0,c
  5186  0057DC  2A0F               	incf	(___awmod@divisor+1)^0,f,c
  5187  0057DE                     l6345:
  5188  0057DE  500E               	movf	___awmod@divisor^0,w,c
  5189  0057E0  100F               	iorwf	(___awmod@divisor+1)^0,w,c
  5190  0057E2  B4D8               	btfsc	status,2,c
  5191  0057E4  D018               	goto	l6361
  5192  0057E6  0E01               	movlw	1
  5193  0057E8  6E10               	movwf	___awmod@counter^0,c
  5194  0057EA  D004               	goto	l6351
  5195  0057EC                     l6349:
  5196  0057EC  90D8               	bcf	status,0,c
  5197  0057EE  360E               	rlcf	___awmod@divisor^0,f,c
  5198  0057F0  360F               	rlcf	(___awmod@divisor+1)^0,f,c
  5199  0057F2  2A10               	incf	___awmod@counter^0,f,c
  5200  0057F4                     l6351:
  5201  0057F4  AE0F               	btfss	(___awmod@divisor+1)^0,7,c
  5202  0057F6  D7FA               	goto	l6349
  5203  0057F8                     u8000:
  5204  0057F8  500E               	movf	___awmod@divisor^0,w,c
  5205  0057FA  5C0C               	subwf	___awmod@dividend^0,w,c
  5206  0057FC  500F               	movf	(___awmod@divisor+1)^0,w,c
  5207  0057FE  580D               	subwfb	(___awmod@dividend+1)^0,w,c
  5208  005800  A0D8               	btfss	status,0,c
  5209  005802  D004               	goto	l6357
  5210  005804  500E               	movf	___awmod@divisor^0,w,c
  5211  005806  5E0C               	subwf	___awmod@dividend^0,f,c
  5212  005808  500F               	movf	(___awmod@divisor+1)^0,w,c
  5213  00580A  5A0D               	subwfb	(___awmod@dividend+1)^0,f,c
  5214  00580C                     l6357:
  5215  00580C  90D8               	bcf	status,0,c
  5216  00580E  320F               	rrcf	(___awmod@divisor+1)^0,f,c
  5217  005810  320E               	rrcf	___awmod@divisor^0,f,c
  5218  005812  2E10               	decfsz	___awmod@counter^0,f,c
  5219  005814  D7F1               	goto	u8000
  5220  005816                     l6361:
  5221  005816  5011               	movf	___awmod@sign^0,w,c
  5222  005818  B4D8               	btfsc	status,2,c
  5223  00581A  D004               	goto	l6365
  5224  00581C  6C0C               	negf	___awmod@dividend^0,c
  5225  00581E  1E0D               	comf	(___awmod@dividend+1)^0,f,c
  5226  005820  B0D8               	btfsc	status,0,c
  5227  005822  2A0D               	incf	(___awmod@dividend+1)^0,f,c
  5228  005824                     l6365:
  5229  005824  C00C  F00C         	movff	___awmod@dividend,?___awmod
  5230  005828  C00D  F00D         	movff	___awmod@dividend+1,?___awmod+1
  5231  00582C  0012               	return		;funcret
  5232  00582E                     __end_of___awmod:
  5233                           	opt callstack 0
  5234                           
  5235 ;; *************** function ___awdiv *****************
  5236 ;; Defined at:
  5237 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  dividend        2   11[COMRAM] int 
  5240 ;;  divisor         2   13[COMRAM] int 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  quotient        2   17[COMRAM] int 
  5243 ;;  sign            1   16[COMRAM] unsigned char 
  5244 ;;  counter         1   15[COMRAM] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  2   11[COMRAM] int 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5254 ;;      Params:         4       0       0       0       0       0       0
  5255 ;;      Locals:         4       0       0       0       0       0       0
  5256 ;;      Temps:          0       0       0       0       0       0       0
  5257 ;;      Totals:         8       0       0       0       0       0       0
  5258 ;;Total ram usage:        8 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:    4
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_efgtoa
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text18
  5269  00573A                     __ptext18:
  5270                           	opt callstack 0
  5271  00573A                     ___awdiv:
  5272                           	opt callstack 22
  5273                           
  5274                           ;incstack = 0
  5275  00573A  0E00               	movlw	0
  5276  00573C  6E11               	movwf	___awdiv@sign^0,c
  5277  00573E  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  5278  005740  D006               	goto	l6297
  5279  005742  6C0E               	negf	___awdiv@divisor^0,c
  5280  005744  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  5281  005746  B0D8               	btfsc	status,0,c
  5282  005748  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  5283  00574A  0E01               	movlw	1
  5284  00574C  6E11               	movwf	___awdiv@sign^0,c
  5285  00574E                     l6297:
  5286  00574E  AE0D               	btfss	(___awdiv@dividend+1)^0,7,c
  5287  005750  D006               	goto	l6303
  5288  005752  6C0C               	negf	___awdiv@dividend^0,c
  5289  005754  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  5290  005756  B0D8               	btfsc	status,0,c
  5291  005758  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  5292  00575A  0E01               	movlw	1
  5293  00575C  1A11               	xorwf	___awdiv@sign^0,f,c
  5294  00575E                     l6303:
  5295  00575E  0E00               	movlw	0
  5296  005760  6E13               	movwf	(___awdiv@quotient+1)^0,c
  5297  005762  0E00               	movlw	0
  5298  005764  6E12               	movwf	___awdiv@quotient^0,c
  5299  005766  500E               	movf	___awdiv@divisor^0,w,c
  5300  005768  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  5301  00576A  B4D8               	btfsc	status,2,c
  5302  00576C  D01C               	goto	l6325
  5303  00576E  0E01               	movlw	1
  5304  005770  6E10               	movwf	___awdiv@counter^0,c
  5305  005772  D004               	goto	l6311
  5306  005774                     l6309:
  5307  005774  90D8               	bcf	status,0,c
  5308  005776  360E               	rlcf	___awdiv@divisor^0,f,c
  5309  005778  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  5310  00577A  2A10               	incf	___awdiv@counter^0,f,c
  5311  00577C                     l6311:
  5312  00577C  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  5313  00577E  D7FA               	goto	l6309
  5314  005780                     u7940:
  5315  005780  90D8               	bcf	status,0,c
  5316  005782  3612               	rlcf	___awdiv@quotient^0,f,c
  5317  005784  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  5318  005786  500E               	movf	___awdiv@divisor^0,w,c
  5319  005788  5C0C               	subwf	___awdiv@dividend^0,w,c
  5320  00578A  500F               	movf	(___awdiv@divisor+1)^0,w,c
  5321  00578C  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  5322  00578E  A0D8               	btfss	status,0,c
  5323  005790  D005               	goto	l6321
  5324  005792  500E               	movf	___awdiv@divisor^0,w,c
  5325  005794  5E0C               	subwf	___awdiv@dividend^0,f,c
  5326  005796  500F               	movf	(___awdiv@divisor+1)^0,w,c
  5327  005798  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  5328  00579A  8012               	bsf	___awdiv@quotient^0,0,c
  5329  00579C                     l6321:
  5330  00579C  90D8               	bcf	status,0,c
  5331  00579E  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  5332  0057A0  320E               	rrcf	___awdiv@divisor^0,f,c
  5333  0057A2  2E10               	decfsz	___awdiv@counter^0,f,c
  5334  0057A4  D7ED               	goto	u7940
  5335  0057A6                     l6325:
  5336  0057A6  5011               	movf	___awdiv@sign^0,w,c
  5337  0057A8  B4D8               	btfsc	status,2,c
  5338  0057AA  D004               	goto	l6329
  5339  0057AC  6C12               	negf	___awdiv@quotient^0,c
  5340  0057AE  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  5341  0057B0  B0D8               	btfsc	status,0,c
  5342  0057B2  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  5343  0057B4                     l6329:
  5344  0057B4  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  5345  0057B8  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  5346  0057BC  0012               	return		;funcret
  5347  0057BE                     __end_of___awdiv:
  5348                           	opt callstack 0
  5349                           
  5350 ;; *************** function _atoi *****************
  5351 ;; Defined at:
  5352 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  s               2   18[COMRAM] PTR const unsigned char 
  5355 ;;		 -> STR_2(5), STR_1(5), 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  n               2   31[COMRAM] int 
  5358 ;;  neg             2   24[COMRAM] int 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  2   18[COMRAM] int 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5368 ;;      Params:         2       0       0       0       0       0       0
  5369 ;;      Locals:         9       0       0       0       0       0       0
  5370 ;;      Temps:          4       0       0       0       0       0       0
  5371 ;;      Totals:        15       0       0       0       0       0       0
  5372 ;;Total ram usage:       15 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    5
  5375 ;; This function calls:
  5376 ;;		___wmul
  5377 ;;		_isdigit
  5378 ;;		_isspace
  5379 ;; This function is called by:
  5380 ;;		_vfpfcnvrt
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text19
  5385  004E1E                     __ptext19:
  5386                           	opt callstack 0
  5387  004E1E                     _atoi:
  5388                           	opt callstack 22
  5389                           
  5390                           ;incstack = 0
  5391  004E1E  0E00               	movlw	0
  5392  004E20  6E21               	movwf	(atoi@n+1)^0,c
  5393  004E22  0E00               	movlw	0
  5394  004E24  6E20               	movwf	atoi@n^0,c
  5395  004E26  0E00               	movlw	0
  5396  004E28  6E1A               	movwf	(atoi@neg+1)^0,c
  5397  004E2A  0E00               	movlw	0
  5398  004E2C  6E19               	movwf	atoi@neg^0,c
  5399  004E2E  D002               	goto	l6773
  5400  004E30                     l6771:
  5401  004E30  4A13               	infsnz	atoi@s^0,f,c
  5402  004E32  2A14               	incf	(atoi@s+1)^0,f,c
  5403  004E34                     l6773:
  5404  004E34  0E01               	movlw	1
  5405  004E36  6E1F               	movwf	_atoi$1152^0,c
  5406  004E38  C013  FFF6         	movff	atoi@s,tblptrl
  5407  004E3C  C014  FFF7         	movff	atoi@s+1,tblptrh
  5408  004E40                     	if	0	;tblptru may be non-zero
  5409  004E40                     	endif
  5410  004E40                     	if	0	;tblptru may be non-zero
  5411  004E40                     	endif
  5412  004E40  0008               	tblrd		*
  5413  004E42  50F5               	movf	tablat,w,c
  5414  004E44  0A20               	xorlw	32
  5415  004E46  B4D8               	btfsc	status,2,c
  5416  004E48  D018               	goto	l6781
  5417  004E4A  0EF7               	movlw	247
  5418  004E4C  6E15               	movwf	??_atoi^0,c
  5419  004E4E  0EFF               	movlw	255
  5420  004E50  6E16               	movwf	(??_atoi+1)^0,c
  5421  004E52  C013  FFF6         	movff	atoi@s,tblptrl
  5422  004E56  C014  FFF7         	movff	atoi@s+1,tblptrh
  5423  004E5A                     	if	0	;tblptru may be non-zero
  5424  004E5A                     	endif
  5425  004E5A                     	if	0	;tblptru may be non-zero
  5426  004E5A                     	endif
  5427  004E5A  0008               	tblrd		*
  5428  004E5C  50F5               	movf	tablat,w,c
  5429  004E5E  6E17               	movwf	(??_atoi+2)^0,c
  5430  004E60  6A18               	clrf	(??_atoi+3)^0,c
  5431  004E62  5015               	movf	??_atoi^0,w,c
  5432  004E64  2617               	addwf	(??_atoi+2)^0,f,c
  5433  004E66  5016               	movf	(??_atoi+1)^0,w,c
  5434  004E68  2218               	addwfc	(??_atoi+3)^0,f,c
  5435  004E6A  5018               	movf	(??_atoi+3)^0,w,c
  5436  004E6C  E104               	bnz	u8740
  5437  004E6E  0E05               	movlw	5
  5438  004E70  5C17               	subwf	(??_atoi+2)^0,w,c
  5439  004E72  A0D8               	btfss	status,0,c
  5440  004E74  D002               	goto	l6781
  5441  004E76                     u8740:
  5442  004E76  0E00               	movlw	0
  5443  004E78  6E1F               	movwf	_atoi$1152^0,c
  5444  004E7A                     l6781:
  5445  004E7A  C01F  F01B         	movff	_atoi$1152,_atoi$1151
  5446  004E7E  6A1C               	clrf	(_atoi$1151+1)^0,c
  5447  004E80  501B               	movf	_atoi$1151^0,w,c
  5448  004E82  101C               	iorwf	(_atoi$1151+1)^0,w,c
  5449  004E84  B4D8               	btfsc	status,2,c
  5450  004E86  D008               	goto	l6791
  5451  004E88  D7D3               	goto	l6771
  5452  004E8A                     l6787:
  5453  004E8A  0E00               	movlw	0
  5454  004E8C  6E1A               	movwf	(atoi@neg+1)^0,c
  5455  004E8E  0E01               	movlw	1
  5456  004E90  6E19               	movwf	atoi@neg^0,c
  5457  004E92                     l6789:
  5458  004E92  4A13               	infsnz	atoi@s^0,f,c
  5459  004E94  2A14               	incf	(atoi@s+1)^0,f,c
  5460  004E96  D02E               	goto	l6797
  5461  004E98                     l6791:
  5462  004E98  C013  FFF6         	movff	atoi@s,tblptrl
  5463  004E9C  C014  FFF7         	movff	atoi@s+1,tblptrh
  5464  004EA0                     	if	0	;tblptru may be non-zero
  5465  004EA0                     	endif
  5466  004EA0                     	if	0	;tblptru may be non-zero
  5467  004EA0                     	endif
  5468  004EA0  0008               	tblrd		*
  5469  004EA2  50F5               	movf	tablat,w,c
  5470  004EA4  6E15               	movwf	??_atoi^0,c
  5471  004EA6  6A16               	clrf	(??_atoi+1)^0,c
  5472                           
  5473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5474                           ; Switch size 1, requested type "simple"
  5475                           ; Number of cases is 1, Range of values is 0 to 0
  5476                           ; switch strategies available:
  5477                           ; Name         Instructions Cycles
  5478                           ; simple_byte            4     3 (average)
  5479                           ;	Chosen strategy is simple_byte
  5480  004EA8  5016               	movf	(??_atoi+1)^0,w,c
  5481  004EAA  0A00               	xorlw	0	; case 0
  5482  004EAC  A4D8               	btfss	status,2,c
  5483  004EAE  D022               	goto	l6797
  5484                           
  5485                           ; Switch size 1, requested type "simple"
  5486                           ; Number of cases is 2, Range of values is 43 to 45
  5487                           ; switch strategies available:
  5488                           ; Name         Instructions Cycles
  5489                           ; simple_byte            7     4 (average)
  5490                           ;	Chosen strategy is simple_byte
  5491  004EB0  5015               	movf	??_atoi^0,w,c
  5492  004EB2  0A2B               	xorlw	43	; case 43
  5493  004EB4  B4D8               	btfsc	status,2,c
  5494  004EB6  D7ED               	goto	l6789
  5495  004EB8  0A06               	xorlw	6	; case 45
  5496  004EBA  B4D8               	btfsc	status,2,c
  5497  004EBC  D7E6               	goto	l6787
  5498  004EBE  D01A               	goto	l6797
  5499  004EC0                     l6793:
  5500  004EC0  C020  F00C         	movff	atoi@n,___wmul@multiplier
  5501  004EC4  C021  F00D         	movff	atoi@n+1,___wmul@multiplier+1
  5502  004EC8  0E00               	movlw	0
  5503  004ECA  6E0F               	movwf	(___wmul@multiplicand+1)^0,c
  5504  004ECC  0E0A               	movlw	10
  5505  004ECE  6E0E               	movwf	___wmul@multiplicand^0,c
  5506  004ED0  EC65  F02E         	call	___wmul	;wreg free
  5507  004ED4  C013  FFF6         	movff	atoi@s,tblptrl
  5508  004ED8  C014  FFF7         	movff	atoi@s+1,tblptrh
  5509  004EDC                     	if	0	;tblptru may be non-zero
  5510  004EDC                     	endif
  5511  004EDC                     	if	0	;tblptru may be non-zero
  5512  004EDC                     	endif
  5513  004EDC  0008               	tblrd		*
  5514  004EDE  50F5               	movf	tablat,w,c
  5515  004EE0  5E0C               	subwf	?___wmul^0,f,c
  5516  004EE2  0E00               	movlw	0
  5517  004EE4  5A0D               	subwfb	(?___wmul+1)^0,f,c
  5518  004EE6  0E30               	movlw	48
  5519  004EE8  240C               	addwf	?___wmul^0,w,c
  5520  004EEA  6E20               	movwf	atoi@n^0,c
  5521  004EEC  0E00               	movlw	0
  5522  004EEE  200D               	addwfc	(?___wmul+1)^0,w,c
  5523  004EF0  6E21               	movwf	(atoi@n+1)^0,c
  5524  004EF2  D7CF               	goto	l6789
  5525  004EF4                     l6797:
  5526  004EF4  0ED0               	movlw	208
  5527  004EF6  6E15               	movwf	??_atoi^0,c
  5528  004EF8  0EFF               	movlw	255
  5529  004EFA  6E16               	movwf	(??_atoi+1)^0,c
  5530  004EFC  C013  FFF6         	movff	atoi@s,tblptrl
  5531  004F00  C014  FFF7         	movff	atoi@s+1,tblptrh
  5532  004F04                     	if	0	;tblptru may be non-zero
  5533  004F04                     	endif
  5534  004F04                     	if	0	;tblptru may be non-zero
  5535  004F04                     	endif
  5536  004F04  0008               	tblrd		*
  5537  004F06  50F5               	movf	tablat,w,c
  5538  004F08  6E17               	movwf	(??_atoi+2)^0,c
  5539  004F0A  6A18               	clrf	(??_atoi+3)^0,c
  5540  004F0C  5015               	movf	??_atoi^0,w,c
  5541  004F0E  2617               	addwf	(??_atoi+2)^0,f,c
  5542  004F10  5016               	movf	(??_atoi+1)^0,w,c
  5543  004F12  2218               	addwfc	(??_atoi+3)^0,f,c
  5544  004F14  5018               	movf	(??_atoi+3)^0,w,c
  5545  004F16  E106               	bnz	u8760
  5546  004F18  0E0A               	movlw	10
  5547  004F1A  5C17               	subwf	(??_atoi+2)^0,w,c
  5548  004F1C  B0D8               	btfsc	status,0,c
  5549  004F1E  D002               	goto	u8760
  5550  004F20  0E01               	movlw	1
  5551  004F22  D001               	goto	u8770
  5552  004F24                     u8760:
  5553  004F24  0E00               	movlw	0
  5554  004F26                     u8770:
  5555  004F26  6E1D               	movwf	_atoi$1153^0,c
  5556  004F28  6A1E               	clrf	(_atoi$1153+1)^0,c
  5557  004F2A  501D               	movf	_atoi$1153^0,w,c
  5558  004F2C  101E               	iorwf	(_atoi$1153+1)^0,w,c
  5559  004F2E  A4D8               	btfss	status,2,c
  5560  004F30  D7C7               	goto	l6793
  5561  004F32  5019               	movf	atoi@neg^0,w,c
  5562  004F34  101A               	iorwf	(atoi@neg+1)^0,w,c
  5563  004F36  A4D8               	btfss	status,2,c
  5564  004F38  D00D               	goto	l1074
  5565  004F3A  C020  F015         	movff	atoi@n,??_atoi
  5566  004F3E  C021  F016         	movff	atoi@n+1,??_atoi+1
  5567  004F42  1E15               	comf	??_atoi^0,f,c
  5568  004F44  1E16               	comf	(??_atoi+1)^0,f,c
  5569  004F46  4A15               	infsnz	??_atoi^0,f,c
  5570  004F48  2A16               	incf	(??_atoi+1)^0,f,c
  5571  004F4A  C015  F013         	movff	??_atoi,?_atoi
  5572  004F4E  C016  F014         	movff	??_atoi+1,?_atoi+1
  5573  004F52  0012               	return	
  5574  004F54                     l1074:
  5575  004F54  C020  F013         	movff	atoi@n,?_atoi
  5576  004F58  C021  F014         	movff	atoi@n+1,?_atoi+1
  5577  004F5C  0012               	return		;funcret
  5578  004F5E                     __end_of_atoi:
  5579                           	opt callstack 0
  5580                           
  5581 ;; *************** function _isspace *****************
  5582 ;; Defined at:
  5583 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  c               2   11[COMRAM] int 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  2   11[COMRAM] int 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5597 ;;      Params:         2       0       0       0       0       0       0
  5598 ;;      Locals:         1       0       0       0       0       0       0
  5599 ;;      Temps:          4       0       0       0       0       0       0
  5600 ;;      Totals:         7       0       0       0       0       0       0
  5601 ;;Total ram usage:        7 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    4
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_atoi
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text20
  5612  005B2E                     __ptext20:
  5613                           	opt callstack 0
  5614  005B2E                     _isspace:
  5615                           	opt callstack 22
  5616                           
  5617                           ;incstack = 0
  5618  005B2E  0E01               	movlw	1
  5619  005B30  6E12               	movwf	_isspace$1182^0,c
  5620  005B32  0E20               	movlw	32
  5621  005B34  180C               	xorwf	isspace@c^0,w,c
  5622  005B36  100D               	iorwf	(isspace@c+1)^0,w,c
  5623  005B38  B4D8               	btfsc	status,2,c
  5624  005B3A  D014               	goto	l6467
  5625  005B3C  0EF7               	movlw	247
  5626  005B3E  6E0E               	movwf	??_isspace^0,c
  5627  005B40  0EFF               	movlw	255
  5628  005B42  6E0F               	movwf	(??_isspace+1)^0,c
  5629  005B44  C00C  F010         	movff	isspace@c,??_isspace+2
  5630  005B48  C00D  F011         	movff	isspace@c+1,??_isspace+3
  5631  005B4C  500E               	movf	??_isspace^0,w,c
  5632  005B4E  2610               	addwf	(??_isspace+2)^0,f,c
  5633  005B50  500F               	movf	(??_isspace+1)^0,w,c
  5634  005B52  2211               	addwfc	(??_isspace+3)^0,f,c
  5635  005B54  5011               	movf	(??_isspace+3)^0,w,c
  5636  005B56  E104               	bnz	u8200
  5637  005B58  0E05               	movlw	5
  5638  005B5A  5C10               	subwf	(??_isspace+2)^0,w,c
  5639  005B5C  A0D8               	btfss	status,0,c
  5640  005B5E  D002               	goto	l6467
  5641  005B60                     u8200:
  5642  005B60  0E00               	movlw	0
  5643  005B62  6E12               	movwf	_isspace$1182^0,c
  5644  005B64                     l6467:
  5645  005B64  C012  F00C         	movff	_isspace$1182,?_isspace
  5646  005B68  6A0D               	clrf	(?_isspace+1)^0,c
  5647  005B6A  0012               	return		;funcret
  5648  005B6C                     __end_of_isspace:
  5649                           	opt callstack 0
  5650                           
  5651 ;; *************** function _isdigit *****************
  5652 ;; Defined at:
  5653 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  c               2   11[COMRAM] int 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  2   11[COMRAM] int 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2, status,0
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5667 ;;      Params:         2       0       0       0       0       0       0
  5668 ;;      Locals:         0       0       0       0       0       0       0
  5669 ;;      Temps:          4       0       0       0       0       0       0
  5670 ;;      Totals:         6       0       0       0       0       0       0
  5671 ;;Total ram usage:        6 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    4
  5674 ;; This function calls:
  5675 ;;		Nothing
  5676 ;; This function is called by:
  5677 ;;		_vfpfcnvrt
  5678 ;;		_atoi
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text21
  5683  005C42                     __ptext21:
  5684                           	opt callstack 0
  5685  005C42                     _isdigit:
  5686                           	opt callstack 23
  5687                           
  5688                           ;incstack = 0
  5689  005C42  0ED0               	movlw	208
  5690  005C44  6E0E               	movwf	??_isdigit^0,c
  5691  005C46  0EFF               	movlw	255
  5692  005C48  6E0F               	movwf	(??_isdigit+1)^0,c
  5693  005C4A  C00C  F010         	movff	isdigit@c,??_isdigit+2
  5694  005C4E  C00D  F011         	movff	isdigit@c+1,??_isdigit+3
  5695  005C52  500E               	movf	??_isdigit^0,w,c
  5696  005C54  2610               	addwf	(??_isdigit+2)^0,f,c
  5697  005C56  500F               	movf	(??_isdigit+1)^0,w,c
  5698  005C58  2211               	addwfc	(??_isdigit+3)^0,f,c
  5699  005C5A  5011               	movf	(??_isdigit+3)^0,w,c
  5700  005C5C  E106               	bnz	u7470
  5701  005C5E  0E0A               	movlw	10
  5702  005C60  5C10               	subwf	(??_isdigit+2)^0,w,c
  5703  005C62  B0D8               	btfsc	status,0,c
  5704  005C64  D002               	goto	u7470
  5705  005C66  0E01               	movlw	1
  5706  005C68  D001               	goto	u7480
  5707  005C6A                     u7470:
  5708  005C6A  0E00               	movlw	0
  5709  005C6C                     u7480:
  5710  005C6C  6E0C               	movwf	?_isdigit^0,c
  5711  005C6E  6A0D               	clrf	(?_isdigit+1)^0,c
  5712  005C70  0012               	return		;funcret
  5713  005C72                     __end_of_isdigit:
  5714                           	opt callstack 0
  5715                           
  5716 ;; *************** function ___wmul *****************
  5717 ;; Defined at:
  5718 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  multiplier      2   11[COMRAM] unsigned int 
  5721 ;;  multiplicand    2   13[COMRAM] unsigned int 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  product         2   15[COMRAM] unsigned int 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  2   11[COMRAM] unsigned int 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0, prodl, prodh
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5733 ;;      Params:         4       0       0       0       0       0       0
  5734 ;;      Locals:         2       0       0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0
  5736 ;;      Totals:         6       0       0       0       0       0       0
  5737 ;;Total ram usage:        6 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    4
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_atoi
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text22
  5748  005CCA                     __ptext22:
  5749                           	opt callstack 0
  5750  005CCA                     ___wmul:
  5751                           	opt callstack 22
  5752                           
  5753                           ;incstack = 0
  5754  005CCA  500C               	movf	___wmul@multiplier^0,w,c
  5755  005CCC  020E               	mulwf	___wmul@multiplicand^0,c
  5756  005CCE  CFF3 F010          	movff	prodl,___wmul@product
  5757  005CD2  CFF4 F011          	movff	prodh,___wmul@product+1
  5758  005CD6  500C               	movf	___wmul@multiplier^0,w,c
  5759  005CD8  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  5760  005CDA  50F3               	movf	243,w,c
  5761  005CDC  2611               	addwf	(___wmul@product+1)^0,f,c
  5762  005CDE  500D               	movf	(___wmul@multiplier+1)^0,w,c
  5763  005CE0  020E               	mulwf	___wmul@multiplicand^0,c
  5764  005CE2  50F3               	movf	243,w,c
  5765  005CE4  2611               	addwf	(___wmul@product+1)^0,f,c
  5766  005CE6  C010  F00C         	movff	___wmul@product,?___wmul
  5767  005CEA  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  5768  005CEE  0012               	return		;funcret
  5769  005CF0                     __end_of___wmul:
  5770                           	opt callstack 0
  5771                           
  5772 ;; *************** function _memset *****************
  5773 ;; Defined at:
  5774 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  dest            2   11[COMRAM] PTR void 
  5777 ;;		 -> r(15), 
  5778 ;;  c               2   13[COMRAM] int 
  5779 ;;  n               2   15[COMRAM] unsigned int 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  s               2   21[COMRAM] PTR unsigned char 
  5782 ;;		 -> r(15), 
  5783 ;;  k               2   19[COMRAM] unsigned int 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  2   11[COMRAM] PTR void 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5793 ;;      Params:         6       0       0       0       0       0       0
  5794 ;;      Locals:         4       0       0       0       0       0       0
  5795 ;;      Temps:          2       0       0       0       0       0       0
  5796 ;;      Totals:        12       0       0       0       0       0       0
  5797 ;;Total ram usage:       12 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    4
  5800 ;; This function calls:
  5801 ;;		Nothing
  5802 ;; This function is called by:
  5803 ;;		_main
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text23
  5808  00509E                     __ptext23:
  5809                           	opt callstack 0
  5810  00509E                     _memset:
  5811                           	opt callstack 26
  5812                           
  5813                           ;incstack = 0
  5814  00509E  C00C  F016         	movff	memset@dest,memset@s
  5815  0050A2  C00D  F017         	movff	memset@dest+1,memset@s+1
  5816  0050A6  5010               	movf	memset@n^0,w,c
  5817  0050A8  1011               	iorwf	(memset@n+1)^0,w,c
  5818  0050AA  B4D8               	btfsc	status,2,c
  5819  0050AC  0012               	return	
  5820  0050AE  C016  FFD9         	movff	memset@s,fsr2l
  5821  0050B2  C017  FFDA         	movff	memset@s+1,fsr2h
  5822  0050B6  C00E  FFDF         	movff	memset@c,indf2
  5823  0050BA  5010               	movf	memset@n^0,w,c
  5824  0050BC  2416               	addwf	memset@s^0,w,c
  5825  0050BE  6E12               	movwf	??_memset^0,c
  5826  0050C0  5011               	movf	(memset@n+1)^0,w,c
  5827  0050C2  2017               	addwfc	(memset@s+1)^0,w,c
  5828  0050C4  6E13               	movwf	(??_memset+1)^0,c
  5829  0050C6  0EFF               	movlw	255
  5830  0050C8  2412               	addwf	??_memset^0,w,c
  5831  0050CA  6ED9               	movwf	fsr2l,c
  5832  0050CC  0EFF               	movlw	255
  5833  0050CE  2013               	addwfc	(??_memset+1)^0,w,c
  5834  0050D0  6EDA               	movwf	fsr2h,c
  5835  0050D2  C00E  FFDF         	movff	memset@c,indf2
  5836  0050D6  5011               	movf	(memset@n+1)^0,w,c
  5837  0050D8  E104               	bnz	l5573
  5838  0050DA  0E03               	movlw	3
  5839  0050DC  5C10               	subwf	memset@n^0,w,c
  5840  0050DE  A0D8               	btfss	status,0,c
  5841  0050E0  0012               	return	
  5842  0050E2                     l5573:
  5843  0050E2  EE20 F001          	lfsr	2,1
  5844  0050E6  5016               	movf	memset@s^0,w,c
  5845  0050E8  26D9               	addwf	fsr2l,f,c
  5846  0050EA  5017               	movf	(memset@s+1)^0,w,c
  5847  0050EC  22DA               	addwfc	fsr2h,f,c
  5848  0050EE  C00E  FFDF         	movff	memset@c,indf2
  5849  0050F2  EE20 F002          	lfsr	2,2
  5850  0050F6  5016               	movf	memset@s^0,w,c
  5851  0050F8  26D9               	addwf	fsr2l,f,c
  5852  0050FA  5017               	movf	(memset@s+1)^0,w,c
  5853  0050FC  22DA               	addwfc	fsr2h,f,c
  5854  0050FE  C00E  FFDF         	movff	memset@c,indf2
  5855  005102  5010               	movf	memset@n^0,w,c
  5856  005104  2416               	addwf	memset@s^0,w,c
  5857  005106  6E12               	movwf	??_memset^0,c
  5858  005108  5011               	movf	(memset@n+1)^0,w,c
  5859  00510A  2017               	addwfc	(memset@s+1)^0,w,c
  5860  00510C  6E13               	movwf	(??_memset+1)^0,c
  5861  00510E  0EFE               	movlw	254
  5862  005110  2412               	addwf	??_memset^0,w,c
  5863  005112  6ED9               	movwf	fsr2l,c
  5864  005114  0EFF               	movlw	255
  5865  005116  2013               	addwfc	(??_memset+1)^0,w,c
  5866  005118  6EDA               	movwf	fsr2h,c
  5867  00511A  C00E  FFDF         	movff	memset@c,indf2
  5868  00511E  5010               	movf	memset@n^0,w,c
  5869  005120  2416               	addwf	memset@s^0,w,c
  5870  005122  6E12               	movwf	??_memset^0,c
  5871  005124  5011               	movf	(memset@n+1)^0,w,c
  5872  005126  2017               	addwfc	(memset@s+1)^0,w,c
  5873  005128  6E13               	movwf	(??_memset+1)^0,c
  5874  00512A  0EFD               	movlw	253
  5875  00512C  2412               	addwf	??_memset^0,w,c
  5876  00512E  6ED9               	movwf	fsr2l,c
  5877  005130  0EFF               	movlw	255
  5878  005132  2013               	addwfc	(??_memset+1)^0,w,c
  5879  005134  6EDA               	movwf	fsr2h,c
  5880  005136  C00E  FFDF         	movff	memset@c,indf2
  5881  00513A  5011               	movf	(memset@n+1)^0,w,c
  5882  00513C  E104               	bnz	l5579
  5883  00513E  0E07               	movlw	7
  5884  005140  5C10               	subwf	memset@n^0,w,c
  5885  005142  A0D8               	btfss	status,0,c
  5886  005144  0012               	return	
  5887  005146                     l5579:
  5888  005146  EE20 F003          	lfsr	2,3
  5889  00514A  5016               	movf	memset@s^0,w,c
  5890  00514C  26D9               	addwf	fsr2l,f,c
  5891  00514E  5017               	movf	(memset@s+1)^0,w,c
  5892  005150  22DA               	addwfc	fsr2h,f,c
  5893  005152  C00E  FFDF         	movff	memset@c,indf2
  5894  005156  5010               	movf	memset@n^0,w,c
  5895  005158  2416               	addwf	memset@s^0,w,c
  5896  00515A  6E12               	movwf	??_memset^0,c
  5897  00515C  5011               	movf	(memset@n+1)^0,w,c
  5898  00515E  2017               	addwfc	(memset@s+1)^0,w,c
  5899  005160  6E13               	movwf	(??_memset+1)^0,c
  5900  005162  0EFC               	movlw	252
  5901  005164  2412               	addwf	??_memset^0,w,c
  5902  005166  6ED9               	movwf	fsr2l,c
  5903  005168  0EFF               	movlw	255
  5904  00516A  2013               	addwfc	(??_memset+1)^0,w,c
  5905  00516C  6EDA               	movwf	fsr2h,c
  5906  00516E  C00E  FFDF         	movff	memset@c,indf2
  5907  005172  5011               	movf	(memset@n+1)^0,w,c
  5908  005174  E104               	bnz	l5585
  5909  005176  0E09               	movlw	9
  5910  005178  5C10               	subwf	memset@n^0,w,c
  5911  00517A  A0D8               	btfss	status,0,c
  5912  00517C  0012               	return	
  5913  00517E                     l5585:
  5914  00517E  C016  F012         	movff	memset@s,??_memset
  5915  005182  C017  F013         	movff	memset@s+1,??_memset+1
  5916  005186  1E12               	comf	??_memset^0,f,c
  5917  005188  1E13               	comf	(??_memset+1)^0,f,c
  5918  00518A  4A12               	infsnz	??_memset^0,f,c
  5919  00518C  2A13               	incf	(??_memset+1)^0,f,c
  5920  00518E  0E03               	movlw	3
  5921  005190  1412               	andwf	??_memset^0,w,c
  5922  005192  6E14               	movwf	memset@k^0,c
  5923  005194  6A15               	clrf	(memset@k+1)^0,c
  5924  005196  5014               	movf	memset@k^0,w,c
  5925  005198  2616               	addwf	memset@s^0,f,c
  5926  00519A  5015               	movf	(memset@k+1)^0,w,c
  5927  00519C  2217               	addwfc	(memset@s+1)^0,f,c
  5928  00519E  5014               	movf	memset@k^0,w,c
  5929  0051A0  5E10               	subwf	memset@n^0,f,c
  5930  0051A2  5015               	movf	(memset@k+1)^0,w,c
  5931  0051A4  5A11               	subwfb	(memset@n+1)^0,f,c
  5932  0051A6  0EFC               	movlw	252
  5933  0051A8  1610               	andwf	memset@n^0,f,c
  5934  0051AA  0EFF               	movlw	255
  5935  0051AC  1611               	andwf	(memset@n+1)^0,f,c
  5936  0051AE  D00B               	goto	l5593
  5937  0051B0                     l5587:
  5938  0051B0  C016  FFD9         	movff	memset@s,fsr2l
  5939  0051B4  C017  FFDA         	movff	memset@s+1,fsr2h
  5940  0051B8  C00E  FFDF         	movff	memset@c,indf2
  5941  0051BC  0610               	decf	memset@n^0,f,c
  5942  0051BE  A0D8               	btfss	status,0,c
  5943  0051C0  0611               	decf	(memset@n+1)^0,f,c
  5944  0051C2  4A16               	infsnz	memset@s^0,f,c
  5945  0051C4  2A17               	incf	(memset@s+1)^0,f,c
  5946  0051C6                     l5593:
  5947  0051C6  5010               	movf	memset@n^0,w,c
  5948  0051C8  1011               	iorwf	(memset@n+1)^0,w,c
  5949  0051CA  B4D8               	btfsc	status,2,c
  5950  0051CC  0012               	return	
  5951  0051CE  D7F0               	goto	l5587
  5952  0051D0                     __end_of_memset:
  5953                           	opt callstack 0
  5954                           
  5955 ;; *************** function _SYSTEM_Initialize *****************
  5956 ;; Defined at:
  5957 ;;		line 67 in file "setting_hardaware/setting.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;		None
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      void 
  5964 ;; Registers used:
  5965 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5971 ;;      Params:         0       0       0       0       0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0
  5974 ;;      Totals:         0       0       0       0       0       0       0
  5975 ;;Total ram usage:        0 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:    7
  5978 ;; This function calls:
  5979 ;;		_ADC_Initialize
  5980 ;;		_LCD_init
  5981 ;;		_OSCILLATOR_Initialize
  5982 ;;		_PIN_MANAGER_Initialize
  5983 ;;		_UART_Initialize
  5984 ;; This function is called by:
  5985 ;;		_main
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text24
  5990  005D12                     __ptext24:
  5991                           	opt callstack 0
  5992  005D12                     _SYSTEM_Initialize:
  5993                           	opt callstack 23
  5994                           
  5995                           ;setting_hardaware/setting.c: 69:     PIN_MANAGER_Initialize();
  5996                           
  5997                           ;incstack = 0
  5998  005D12  ECC4  F02E         	call	_PIN_MANAGER_Initialize	;wreg free
  5999                           
  6000                           ;setting_hardaware/setting.c: 70:     OSCILLATOR_Initialize();
  6001  005D16  ECC9  F02E         	call	_OSCILLATOR_Initialize	;wreg free
  6002                           
  6003                           ;setting_hardaware/setting.c: 71:     LCD_init();
  6004  005D1A  ECAB  F02C         	call	_LCD_init	;wreg free
  6005                           
  6006                           ;setting_hardaware/setting.c: 72:     UART_Initialize();
  6007  005D1E  ECD0  F02E         	call	_UART_Initialize	;wreg free
  6008                           
  6009                           ;setting_hardaware/setting.c: 73:     ADC_Initialize();
  6010  005D22  EC94  F02E         	call	_ADC_Initialize	;wreg free
  6011  005D26  0012               	return		;funcret
  6012  005D28                     __end_of_SYSTEM_Initialize:
  6013                           	opt callstack 0
  6014                           
  6015 ;; *************** function _UART_Initialize *****************
  6016 ;; Defined at:
  6017 ;;		line 7 in file "setting_hardaware/uart.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;		None
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;		None
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      void 
  6024 ;; Registers used:
  6025 ;;		None
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6031 ;;      Params:         0       0       0       0       0       0       0
  6032 ;;      Locals:         0       0       0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0
  6034 ;;      Totals:         0       0       0       0       0       0       0
  6035 ;;Total ram usage:        0 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:    4
  6038 ;; This function calls:
  6039 ;;		Nothing
  6040 ;; This function is called by:
  6041 ;;		_SYSTEM_Initialize
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text25
  6046  005DA0                     __ptext25:
  6047                           	opt callstack 0
  6048  005DA0                     _UART_Initialize:
  6049                           	opt callstack 25
  6050                           
  6051                           ;incstack = 0
  6052  005DA0  0012               	return		;funcret
  6053  005DA2                     __end_of_UART_Initialize:
  6054                           	opt callstack 0
  6055                           
  6056 ;; *************** function _PIN_MANAGER_Initialize *****************
  6057 ;; Defined at:
  6058 ;;		line 12 in file "setting_hardaware/pin_manager.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;		None
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;		None
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      void 
  6065 ;; Registers used:
  6066 ;;		wreg, status,2
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6072 ;;      Params:         0       0       0       0       0       0       0
  6073 ;;      Locals:         0       0       0       0       0       0       0
  6074 ;;      Temps:          0       0       0       0       0       0       0
  6075 ;;      Totals:         0       0       0       0       0       0       0
  6076 ;;Total ram usage:        0 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    4
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_SYSTEM_Initialize
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text26
  6087  005D88                     __ptext26:
  6088                           	opt callstack 0
  6089  005D88                     _PIN_MANAGER_Initialize:
  6090                           	opt callstack 25
  6091                           
  6092                           ;setting_hardaware/pin_manager.c: 14:     TRISC=0X00;
  6093                           
  6094                           ;incstack = 0
  6095  005D88  0E00               	movlw	0
  6096  005D8A  6E94               	movwf	148,c	;volatile
  6097                           
  6098                           ;setting_hardaware/pin_manager.c: 15:     TRISD=0X00;
  6099  005D8C  0E00               	movlw	0
  6100  005D8E  6E95               	movwf	149,c	;volatile
  6101  005D90  0012               	return		;funcret
  6102  005D92                     __end_of_PIN_MANAGER_Initialize:
  6103                           	opt callstack 0
  6104                           
  6105 ;; *************** function _OSCILLATOR_Initialize *****************
  6106 ;; Defined at:
  6107 ;;		line 76 in file "setting_hardaware/setting.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;		None
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;		None
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		None
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6121 ;;      Params:         0       0       0       0       0       0       0
  6122 ;;      Locals:         0       0       0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0
  6124 ;;      Totals:         0       0       0       0       0       0       0
  6125 ;;Total ram usage:        0 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    4
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_SYSTEM_Initialize
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text27
  6136  005D92                     __ptext27:
  6137                           	opt callstack 0
  6138  005D92                     _OSCILLATOR_Initialize:
  6139                           	opt callstack 25
  6140                           
  6141                           ;setting_hardaware/setting.c: 78:     IRCF2 = 1;
  6142                           
  6143                           ;incstack = 0
  6144  005D92  8CD3               	bsf	4051,6,c	;volatile
  6145                           
  6146                           ;setting_hardaware/setting.c: 79:     IRCF1 = 1;
  6147  005D94  8AD3               	bsf	4051,5,c	;volatile
  6148                           
  6149                           ;setting_hardaware/setting.c: 80:     IRCF0 = 0;
  6150  005D96  98D3               	bcf	4051,4,c	;volatile
  6151  005D98  0012               	return		;funcret
  6152  005D9A                     __end_of_OSCILLATOR_Initialize:
  6153                           	opt callstack 0
  6154                           
  6155 ;; *************** function _LCD_init *****************
  6156 ;; Defined at:
  6157 ;;		line 43 in file "setting_hardaware/LCD.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;		None
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;		None
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6171 ;;      Params:         0       0       0       0       0       0       0
  6172 ;;      Locals:         0       0       0       0       0       0       0
  6173 ;;      Temps:          0       0       0       0       0       0       0
  6174 ;;      Totals:         0       0       0       0       0       0       0
  6175 ;;Total ram usage:        0 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; Hardware stack levels required when called:    6
  6178 ;; This function calls:
  6179 ;;		_Cmd
  6180 ;;		_Send2Lcd
  6181 ;; This function is called by:
  6182 ;;		_SYSTEM_Initialize
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text28
  6187  005956                     __ptext28:
  6188                           	opt callstack 0
  6189  005956                     _LCD_init:
  6190                           	opt callstack 23
  6191                           
  6192                           ;setting_hardaware/LCD.c: 44:     Cmd(0X30);
  6193                           
  6194                           ;incstack = 0
  6195  005956  0E00               	movlw	0
  6196  005958  6E0D               	movwf	(Cmd@Value+1)^0,c
  6197  00595A  0E30               	movlw	48
  6198  00595C  6E0C               	movwf	Cmd@Value^0,c
  6199  00595E  ECB4  F02E         	call	_Cmd	;wreg free
  6200                           
  6201                           ;setting_hardaware/LCD.c: 45:     Cmd(0X38);
  6202  005962  0E00               	movlw	0
  6203  005964  6E0D               	movwf	(Cmd@Value+1)^0,c
  6204  005966  0E38               	movlw	56
  6205  005968  6E0C               	movwf	Cmd@Value^0,c
  6206  00596A  ECB4  F02E         	call	_Cmd	;wreg free
  6207                           
  6208                           ;setting_hardaware/LCD.c: 46:     Cmd(0X06);
  6209  00596E  0E00               	movlw	0
  6210  005970  6E0D               	movwf	(Cmd@Value+1)^0,c
  6211  005972  0E06               	movlw	6
  6212  005974  6E0C               	movwf	Cmd@Value^0,c
  6213  005976  ECB4  F02E         	call	_Cmd	;wreg free
  6214                           
  6215                           ;setting_hardaware/LCD.c: 47:     Cmd(0X0C);
  6216  00597A  0E00               	movlw	0
  6217  00597C  6E0D               	movwf	(Cmd@Value+1)^0,c
  6218  00597E  0E0C               	movlw	12
  6219  005980  6E0C               	movwf	Cmd@Value^0,c
  6220  005982  ECB4  F02E         	call	_Cmd	;wreg free
  6221                           
  6222                           ;setting_hardaware/LCD.c: 48:     Cmd(0X01);
  6223  005986  0E00               	movlw	0
  6224  005988  6E0D               	movwf	(Cmd@Value+1)^0,c
  6225  00598A  0E01               	movlw	1
  6226  00598C  6E0C               	movwf	Cmd@Value^0,c
  6227  00598E  ECB4  F02E         	call	_Cmd	;wreg free
  6228                           
  6229                           ;setting_hardaware/LCD.c: 50:     Send2Lcd(0x84,"monitor");
  6230  005992  0E7D               	movlw	low STR_3
  6231  005994  6E0E               	movwf	Send2Lcd@Lcd^0,c
  6232  005996  0E06               	movlw	high STR_3
  6233  005998  6E0F               	movwf	(Send2Lcd@Lcd+1)^0,c
  6234  00599A  0E84               	movlw	132
  6235  00599C  ECB6  F02D         	call	_Send2Lcd
  6236                           
  6237                           ;setting_hardaware/LCD.c: 51:     Send2Lcd(0xc5,"start");
  6238  0059A0  0E85               	movlw	low STR_4
  6239  0059A2  6E0E               	movwf	Send2Lcd@Lcd^0,c
  6240  0059A4  0E06               	movlw	high STR_4
  6241  0059A6  6E0F               	movwf	(Send2Lcd@Lcd+1)^0,c
  6242  0059A8  0EC5               	movlw	197
  6243  0059AA  ECB6  F02D         	call	_Send2Lcd
  6244  0059AE  0012               	return		;funcret
  6245  0059B0                     __end_of_LCD_init:
  6246                           	opt callstack 0
  6247                           
  6248 ;; *************** function _Send2Lcd *****************
  6249 ;; Defined at:
  6250 ;;		line 33 in file "setting_hardaware/LCD.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  Adr             1    wreg     const unsigned char 
  6253 ;;  Lcd             2   13[COMRAM] PTR const unsigned char 
  6254 ;;		 -> STR_4(6), STR_3(8), 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;  Adr             1   15[COMRAM] const unsigned char 
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  1    wreg      void 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6266 ;;      Params:         2       0       0       0       0       0       0
  6267 ;;      Locals:         1       0       0       0       0       0       0
  6268 ;;      Temps:          0       0       0       0       0       0       0
  6269 ;;      Totals:         3       0       0       0       0       0       0
  6270 ;;Total ram usage:        3 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; Hardware stack levels required when called:    5
  6273 ;; This function calls:
  6274 ;;		_Cmd
  6275 ;;		_Data
  6276 ;; This function is called by:
  6277 ;;		_LCD_init
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text29
  6282  005B6C                     __ptext29:
  6283                           	opt callstack 0
  6284  005B6C                     _Send2Lcd:
  6285                           	opt callstack 23
  6286                           
  6287                           ;incstack = 0
  6288                           ;Send2Lcd@Adr stored from wreg
  6289  005B6C  6E10               	movwf	Send2Lcd@Adr^0,c
  6290                           
  6291                           ;setting_hardaware/LCD.c: 33: void Send2Lcd(const char Adr, const char *Lcd);setting_har
      +                          daware/LCD.c: 34: {;setting_hardaware/LCD.c: 35:  Cmd(Adr);
  6292  005B6E  C010  F00C         	movff	Send2Lcd@Adr,Cmd@Value
  6293  005B72  6A0D               	clrf	(Cmd@Value+1)^0,c
  6294  005B74  ECB4  F02E         	call	_Cmd	;wreg free
  6295                           
  6296                           ;setting_hardaware/LCD.c: 36:  while(*Lcd!='\0')
  6297  005B78  D00C               	goto	l5351
  6298  005B7A                     l5347:
  6299                           
  6300                           ;setting_hardaware/LCD.c: 37:  {;setting_hardaware/LCD.c: 38:   Data(*Lcd);
  6301  005B7A  C00E  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  6302  005B7E  C00F  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  6303  005B82                     	if	0	;tblptru may be non-zero
  6304  005B82                     	endif
  6305  005B82                     	if	0	;tblptru may be non-zero
  6306  005B82                     	endif
  6307  005B82  0008               	tblrd		*
  6308  005B84  50F5               	movf	tablat,w,c
  6309  005B86  6E0C               	movwf	Data@Value^0,c
  6310  005B88  6A0D               	clrf	(Data@Value+1)^0,c
  6311  005B8A  ECAA  F02E         	call	_Data	;wreg free
  6312                           
  6313                           ;setting_hardaware/LCD.c: 39:   Lcd++;
  6314  005B8E  4A0E               	infsnz	Send2Lcd@Lcd^0,f,c
  6315  005B90  2A0F               	incf	(Send2Lcd@Lcd+1)^0,f,c
  6316  005B92                     l5351:
  6317                           
  6318                           ;setting_hardaware/LCD.c: 36:  while(*Lcd!='\0')
  6319  005B92  C00E  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  6320  005B96  C00F  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  6321  005B9A                     	if	0	;tblptru may be non-zero
  6322  005B9A                     	endif
  6323  005B9A                     	if	0	;tblptru may be non-zero
  6324  005B9A                     	endif
  6325  005B9A  0008               	tblrd		*
  6326  005B9C  50F5               	movf	tablat,w,c
  6327  005B9E  0900               	iorlw	0
  6328  005BA0  B4D8               	btfsc	status,2,c
  6329  005BA2  0012               	return	
  6330  005BA4  D7EA               	goto	l5347
  6331  005BA6                     __end_of_Send2Lcd:
  6332                           	opt callstack 0
  6333                           
  6334 ;; *************** function _Data *****************
  6335 ;; Defined at:
  6336 ;;		line 24 in file "setting_hardaware/LCD.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  Value           2   11[COMRAM] int 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6350 ;;      Params:         2       0       0       0       0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0
  6353 ;;      Totals:         2       0       0       0       0       0       0
  6354 ;;Total ram usage:        2 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    4
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_Send2Lcd
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text30
  6365  005D54                     __ptext30:
  6366                           	opt callstack 0
  6367  005D54                     _Data:
  6368                           	opt callstack 23
  6369                           
  6370                           ;setting_hardaware/LCD.c: 24: void Data(int Value);setting_hardaware/LCD.c: 25: {;settin
      +                          g_hardaware/LCD.c: 26:  PORTD = Value;
  6371                           
  6372                           ;incstack = 0
  6373  005D54  C00C  FF83         	movff	Data@Value,3971	;volatile
  6374                           
  6375                           ;setting_hardaware/LCD.c: 27:  RC0 = 1;
  6376  005D58  8082               	bsf	3970,0,c	;volatile
  6377                           
  6378                           ;setting_hardaware/LCD.c: 28:  RC1 = 1;
  6379  005D5A  8282               	bsf	3970,1,c	;volatile
  6380                           
  6381                           ;setting_hardaware/LCD.c: 29:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  6382  005D5C  0E08               	movlw	8
  6383  005D5E                     u9847:
  6384  005D5E  2EE8               	decfsz	wreg,f,c
  6385  005D60  D7FE               	bra	u9847
  6386  005D62  F000               	nop	
  6387                           
  6388                           ;setting_hardaware/LCD.c: 30:  RC1 = 0;
  6389  005D64  9282               	bcf	3970,1,c	;volatile
  6390  005D66  0012               	return		;funcret
  6391  005D68                     __end_of_Data:
  6392                           	opt callstack 0
  6393                           
  6394 ;; *************** function _Cmd *****************
  6395 ;; Defined at:
  6396 ;;		line 15 in file "setting_hardaware/LCD.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  Value           2   11[COMRAM] int 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      void 
  6403 ;; Registers used:
  6404 ;;		wreg
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6410 ;;      Params:         2       0       0       0       0       0       0
  6411 ;;      Locals:         0       0       0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0
  6413 ;;      Totals:         2       0       0       0       0       0       0
  6414 ;;Total ram usage:        2 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    4
  6417 ;; This function calls:
  6418 ;;		Nothing
  6419 ;; This function is called by:
  6420 ;;		_Send2Lcd
  6421 ;;		_LCD_init
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text31
  6426  005D68                     __ptext31:
  6427                           	opt callstack 0
  6428  005D68                     _Cmd:
  6429                           	opt callstack 23
  6430                           
  6431                           ;setting_hardaware/LCD.c: 15: void Cmd(int Value);setting_hardaware/LCD.c: 16: {;setting
      +                          _hardaware/LCD.c: 17:  PORTD = Value;
  6432                           
  6433                           ;incstack = 0
  6434  005D68  C00C  FF83         	movff	Cmd@Value,3971	;volatile
  6435                           
  6436                           ;setting_hardaware/LCD.c: 18:  RC0 = 0;
  6437  005D6C  9082               	bcf	3970,0,c	;volatile
  6438                           
  6439                           ;setting_hardaware/LCD.c: 19:  RC1 = 1;
  6440  005D6E  8282               	bsf	3970,1,c	;volatile
  6441                           
  6442                           ;setting_hardaware/LCD.c: 20:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  6443  005D70  0E08               	movlw	8
  6444  005D72                     u9857:
  6445  005D72  2EE8               	decfsz	wreg,f,c
  6446  005D74  D7FE               	bra	u9857
  6447  005D76  F000               	nop	
  6448                           
  6449                           ;setting_hardaware/LCD.c: 21:  RC1 = 0;
  6450  005D78  9282               	bcf	3970,1,c	;volatile
  6451  005D7A  0012               	return		;funcret
  6452  005D7C                     __end_of_Cmd:
  6453                           	opt callstack 0
  6454                           
  6455 ;; *************** function _ADC_Initialize *****************
  6456 ;; Defined at:
  6457 ;;		line 18 in file "setting_hardaware/adc.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;		None
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      void 
  6464 ;; Registers used:
  6465 ;;		wreg, status,2
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6471 ;;      Params:         0       0       0       0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0
  6474 ;;      Totals:         0       0       0       0       0       0       0
  6475 ;;Total ram usage:        0 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    4
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_SYSTEM_Initialize
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text32
  6486  005D28                     __ptext32:
  6487                           	opt callstack 0
  6488  005D28                     _ADC_Initialize:
  6489                           	opt callstack 25
  6490                           
  6491                           ;setting_hardaware/adc.c: 19:     TRISA = 0x03;
  6492                           
  6493                           ;incstack = 0
  6494  005D28  0E03               	movlw	3
  6495  005D2A  6E92               	movwf	146,c	;volatile
  6496                           
  6497                           ;setting_hardaware/adc.c: 21:     ADCON1 = 0x0D;
  6498  005D2C  0E0D               	movlw	13
  6499  005D2E  6EC1               	movwf	193,c	;volatile
  6500                           
  6501                           ;setting_hardaware/adc.c: 22:     ADCON2=0x94;
  6502  005D30  0E94               	movlw	148
  6503  005D32  6EC0               	movwf	192,c	;volatile
  6504                           
  6505                           ;setting_hardaware/adc.c: 23:     ADRES=0;
  6506  005D34  0E00               	movlw	0
  6507  005D36  6EC4               	movwf	196,c	;volatile
  6508  005D38  0E00               	movlw	0
  6509  005D3A  6EC3               	movwf	195,c	;volatile
  6510  005D3C  0012               	return		;funcret
  6511  005D3E                     __end_of_ADC_Initialize:
  6512                           	opt callstack 0
  6513                           
  6514 ;; *************** function _ADC_Read *****************
  6515 ;; Defined at:
  6516 ;;		line 35 in file "setting_hardaware/adc.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;  channel         2   64[BANK0 ] int 
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;  val             2   70[BANK0 ] int 
  6521 ;;  result          4   72[BANK0 ] int 
  6522 ;;  digital         2   76[BANK0 ] int 
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  4   64[BANK0 ] int 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6532 ;;      Params:         0       4       0       0       0       0       0
  6533 ;;      Locals:         0       8       0       0       0       0       0
  6534 ;;      Temps:          0       2       0       0       0       0       0
  6535 ;;      Totals:         0      14       0       0       0       0       0
  6536 ;;Total ram usage:       14 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; Hardware stack levels required when called:    8
  6539 ;; This function calls:
  6540 ;;		___fldiv
  6541 ;;		___flmul
  6542 ;;		___fltol
  6543 ;;		___xxtofl
  6544 ;;		_mq135_getppm
  6545 ;; This function is called by:
  6546 ;;		_main
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           	psect	text33
  6551  004C8C                     __ptext33:
  6552                           	opt callstack 0
  6553  004C8C                     _ADC_Read:
  6554                           	opt callstack 22
  6555                           
  6556                           ;setting_hardaware/adc.c: 41:     ADCON0bits.CHS = channel ;
  6557                           
  6558                           ;incstack = 0
  6559  004C8C  C0C0  F0C4         	movff	ADC_Read@channel,??_ADC_Read
  6560  004C90  0100               	movlb	0	; () banked
  6561  004C92  47C4               	rlncf	??_ADC_Read& (0+255),f,b
  6562  004C94  47C4               	rlncf	??_ADC_Read& (0+255),f,b
  6563  004C96  50C2               	movf	194,w,c	;volatile
  6564  004C98  19C4               	xorwf	??_ADC_Read& (0+255),w,b
  6565  004C9A  0BC3               	andlw	-61
  6566  004C9C  19C4               	xorwf	??_ADC_Read& (0+255),w,b
  6567  004C9E  6EC2               	movwf	194,c	;volatile
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;setting_hardaware/adc.c: 42:     ADCON0bits.ADON = 1;
  6571  004CA0  80C2               	bsf	194,0,c	;volatile
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;setting_hardaware/adc.c: 43:     ADCON0bits.GO = 1;
  6575  004CA2  82C2               	bsf	194,1,c	;volatile
  6576  004CA4                     l126:
  6577  004CA4  B2C2               	btfsc	194,1,c	;volatile
  6578  004CA6  D7FE               	goto	l126
  6579                           
  6580                           ;setting_hardaware/adc.c: 46:     digital = ADRES;
  6581  004CA8  CFC3 F0CC          	movff	4035,ADC_Read@digital	;volatile
  6582  004CAC  CFC4 F0CD          	movff	4036,ADC_Read@digital+1	;volatile
  6583                           
  6584                           ;setting_hardaware/adc.c: 47:     if(channel==1){
  6585  004CB0  0100               	movlb	0	; () banked
  6586  004CB2  05C0               	decf	ADC_Read@channel& (0+255),w,b
  6587  004CB4  11C1               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  6588  004CB6  A4D8               	btfss	status,2,c
  6589  004CB8  D070               	goto	l7527
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;setting_hardaware/adc.c: 49:         int val = (2000.0 * (1023 - digital) / digital);
  6593  004CBA  C0CC  F00C         	movff	ADC_Read@digital,___xxtofl@val
  6594  004CBE  C0CD  F00D         	movff	ADC_Read@digital+1,___xxtofl@val+1
  6595  004CC2  0E00               	movlw	0
  6596  004CC4  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  6597  004CC6  0EFF               	movlw	-1
  6598  004CC8  6E0E               	movwf	(___xxtofl@val+2)^0,c
  6599  004CCA  6E0F               	movwf	(___xxtofl@val+3)^0,c
  6600  004CCC  0E01               	movlw	1
  6601  004CCE  ECAF  F027         	call	___xxtofl
  6602  004CD2  C00C  F041         	movff	?___xxtofl,___fldiv@a
  6603  004CD6  C00D  F042         	movff	?___xxtofl+1,___fldiv@a+1
  6604  004CDA  C00E  F043         	movff	?___xxtofl+2,___fldiv@a+2
  6605  004CDE  C00F  F044         	movff	?___xxtofl+3,___fldiv@a+3
  6606  004CE2  0E00               	movlw	0
  6607  004CE4  6E20               	movwf	___flmul@a^0,c
  6608  004CE6  0E00               	movlw	0
  6609  004CE8  6E21               	movwf	(___flmul@a+1)^0,c
  6610  004CEA  0EFA               	movlw	250
  6611  004CEC  6E22               	movwf	(___flmul@a+2)^0,c
  6612  004CEE  0E44               	movlw	68
  6613  004CF0  6E23               	movwf	(___flmul@a+3)^0,c
  6614  004CF2  0EFF               	movlw	255
  6615  004CF4  0100               	movlb	0	; () banked
  6616  004CF6  6FC4               	movwf	??_ADC_Read& (0+255),b
  6617  004CF8  0E03               	movlw	3
  6618  004CFA  6FC5               	movwf	(??_ADC_Read+1)& (0+255),b
  6619  004CFC  51CC               	movf	ADC_Read@digital& (0+255),w,b
  6620  004CFE  5FC4               	subwf	??_ADC_Read& (0+255),f,b
  6621  004D00  51CD               	movf	(ADC_Read@digital+1)& (0+255),w,b
  6622  004D02  5BC5               	subwfb	(??_ADC_Read+1)& (0+255),f,b
  6623  004D04  C0C4  F00C         	movff	??_ADC_Read,___xxtofl@val
  6624  004D08  C0C5  F00D         	movff	??_ADC_Read+1,___xxtofl@val+1
  6625  004D0C  0E00               	movlw	0
  6626  004D0E  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  6627  004D10  0EFF               	movlw	-1
  6628  004D12  6E0E               	movwf	(___xxtofl@val+2)^0,c
  6629  004D14  6E0F               	movwf	(___xxtofl@val+3)^0,c
  6630  004D16  0E01               	movlw	1
  6631  004D18  ECAF  F027         	call	___xxtofl
  6632  004D1C  C00C  F01C         	movff	?___xxtofl,___flmul@b
  6633  004D20  C00D  F01D         	movff	?___xxtofl+1,___flmul@b+1
  6634  004D24  C00E  F01E         	movff	?___xxtofl+2,___flmul@b+2
  6635  004D28  C00F  F01F         	movff	?___xxtofl+3,___flmul@b+3
  6636  004D2C  EC35  F01F         	call	___flmul	;wreg free
  6637  004D30  C01C  F03D         	movff	?___flmul,___fldiv@b
  6638  004D34  C01D  F03E         	movff	?___flmul+1,___fldiv@b+1
  6639  004D38  C01E  F03F         	movff	?___flmul+2,___fldiv@b+2
  6640  004D3C  C01F  F040         	movff	?___flmul+3,___fldiv@b+3
  6641  004D40  EC64  F022         	call	___fldiv	;wreg free
  6642  004D44  C03D  F056         	movff	?___fldiv,___fltol@f1
  6643  004D48  C03E  F057         	movff	?___fldiv+1,___fltol@f1+1
  6644  004D4C  C03F  F058         	movff	?___fldiv+2,___fltol@f1+2
  6645  004D50  C040  F059         	movff	?___fldiv+3,___fltol@f1+3
  6646  004D54  ECB6  F029         	call	___fltol	;wreg free
  6647  004D58  C056  F0C6         	movff	?___fltol,ADC_Read@val
  6648  004D5C  C057  F0C7         	movff	?___fltol+1,ADC_Read@val+1
  6649                           
  6650                           ;setting_hardaware/adc.c: 50:         result=mq135_getppm(val, 68550);
  6651  004D60  C0C6  F0A8         	movff	ADC_Read@val,mq135_getppm@resvalue
  6652  004D64  C0C7  F0A9         	movff	ADC_Read@val+1,mq135_getppm@resvalue+1
  6653  004D68  0100               	movlb	0	; () banked
  6654  004D6A  0E00               	movlw	0
  6655  004D6C  BFA9               	btfsc	(mq135_getppm@resvalue+1)& (0+255),7,b
  6656  004D6E  0EFF               	movlw	-1
  6657  004D70  6FAA               	movwf	(mq135_getppm@resvalue+2)& (0+255),b
  6658  004D72  6FAB               	movwf	(mq135_getppm@resvalue+3)& (0+255),b
  6659  004D74  0EC6               	movlw	198
  6660  004D76  6FAC               	movwf	mq135_getppm@ro& (0+255),b
  6661  004D78  0E0B               	movlw	11
  6662  004D7A  6FAD               	movwf	(mq135_getppm@ro+1)& (0+255),b
  6663  004D7C  0E01               	movlw	1
  6664  004D7E  6FAE               	movwf	(mq135_getppm@ro+2)& (0+255),b
  6665  004D80  0E00               	movlw	0
  6666  004D82  6FAF               	movwf	(mq135_getppm@ro+3)& (0+255),b
  6667  004D84  EC78  F025         	call	_mq135_getppm	;wreg free
  6668  004D88  C0A8  F0C8         	movff	?_mq135_getppm,ADC_Read@result
  6669  004D8C  C0A9  F0C9         	movff	?_mq135_getppm+1,ADC_Read@result+1
  6670  004D90  C0AA  F0CA         	movff	?_mq135_getppm+2,ADC_Read@result+2
  6671  004D94  C0AB  F0CB         	movff	?_mq135_getppm+3,ADC_Read@result+3
  6672                           
  6673                           ;setting_hardaware/adc.c: 51:     }
  6674  004D98  D038               	goto	l7529
  6675  004D9A                     l7527:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;setting_hardaware/adc.c: 54:         result=digital*4.88/10;
  6679  004D9A  0EF6               	movlw	246
  6680  004D9C  6E20               	movwf	___flmul@a^0,c
  6681  004D9E  0E28               	movlw	40
  6682  004DA0  6E21               	movwf	(___flmul@a+1)^0,c
  6683  004DA2  0E9C               	movlw	156
  6684  004DA4  6E22               	movwf	(___flmul@a+2)^0,c
  6685  004DA6  0E40               	movlw	64
  6686  004DA8  6E23               	movwf	(___flmul@a+3)^0,c
  6687  004DAA  C0CC  F00C         	movff	ADC_Read@digital,___xxtofl@val
  6688  004DAE  C0CD  F00D         	movff	ADC_Read@digital+1,___xxtofl@val+1
  6689  004DB2  0E00               	movlw	0
  6690  004DB4  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  6691  004DB6  0EFF               	movlw	-1
  6692  004DB8  6E0E               	movwf	(___xxtofl@val+2)^0,c
  6693  004DBA  6E0F               	movwf	(___xxtofl@val+3)^0,c
  6694  004DBC  0E01               	movlw	1
  6695  004DBE  ECAF  F027         	call	___xxtofl
  6696  004DC2  C00C  F01C         	movff	?___xxtofl,___flmul@b
  6697  004DC6  C00D  F01D         	movff	?___xxtofl+1,___flmul@b+1
  6698  004DCA  C00E  F01E         	movff	?___xxtofl+2,___flmul@b+2
  6699  004DCE  C00F  F01F         	movff	?___xxtofl+3,___flmul@b+3
  6700  004DD2  EC35  F01F         	call	___flmul	;wreg free
  6701  004DD6  C01C  F03D         	movff	?___flmul,___fldiv@b
  6702  004DDA  C01D  F03E         	movff	?___flmul+1,___fldiv@b+1
  6703  004DDE  C01E  F03F         	movff	?___flmul+2,___fldiv@b+2
  6704  004DE2  C01F  F040         	movff	?___flmul+3,___fldiv@b+3
  6705  004DE6  0E00               	movlw	0
  6706  004DE8  6E41               	movwf	___fldiv@a^0,c
  6707  004DEA  0E00               	movlw	0
  6708  004DEC  6E42               	movwf	(___fldiv@a+1)^0,c
  6709  004DEE  0E20               	movlw	32
  6710  004DF0  6E43               	movwf	(___fldiv@a+2)^0,c
  6711  004DF2  0E41               	movlw	65
  6712  004DF4  6E44               	movwf	(___fldiv@a+3)^0,c
  6713  004DF6  EC64  F022         	call	___fldiv	;wreg free
  6714  004DFA  C03D  F0C8         	movff	?___fldiv,ADC_Read@result
  6715  004DFE  C03E  F0C9         	movff	?___fldiv+1,ADC_Read@result+1
  6716  004E02  C03F  F0CA         	movff	?___fldiv+2,ADC_Read@result+2
  6717  004E06  C040  F0CB         	movff	?___fldiv+3,ADC_Read@result+3
  6718  004E0A                     l7529:
  6719                           
  6720                           ;setting_hardaware/adc.c: 56:     ADCON0bits.ADON = 0;
  6721  004E0A  90C2               	bcf	194,0,c	;volatile
  6722                           
  6723                           ;setting_hardaware/adc.c: 57:     return result;
  6724  004E0C  C0C8  F0C0         	movff	ADC_Read@result,?_ADC_Read
  6725  004E10  C0C9  F0C1         	movff	ADC_Read@result+1,?_ADC_Read+1
  6726  004E14  C0CA  F0C2         	movff	ADC_Read@result+2,?_ADC_Read+2
  6727  004E18  C0CB  F0C3         	movff	ADC_Read@result+3,?_ADC_Read+3
  6728  004E1C  0012               	return		;funcret
  6729  004E1E                     __end_of_ADC_Read:
  6730                           	opt callstack 0
  6731                           
  6732 ;; *************** function _mq135_getppm *****************
  6733 ;; Defined at:
  6734 ;;		line 26 in file "setting_hardaware/adc.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  resvalue        4   40[BANK0 ] long 
  6737 ;;  ro              4   44[BANK0 ] long 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  validinterva    4   60[BANK0 ] long 
  6740 ;;  ret             4   56[BANK0 ] long 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  4   40[BANK0 ] long 
  6743 ;; Registers used:
  6744 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6750 ;;      Params:         0       8       0       0       0       0       0
  6751 ;;      Locals:         0      16       0       0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0
  6753 ;;      Totals:         0      24       0       0       0       0       0
  6754 ;;Total ram usage:       24 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:    7
  6757 ;; This function calls:
  6758 ;;		___fldiv
  6759 ;;		___flge
  6760 ;;		___flmul
  6761 ;;		___xxtofl
  6762 ;;		_powf
  6763 ;; This function is called by:
  6764 ;;		_ADC_Read
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text34
  6769  004AF0                     __ptext34:
  6770                           	opt callstack 0
  6771  004AF0                     _mq135_getppm:
  6772                           	opt callstack 22
  6773                           
  6774                           ;setting_hardaware/adc.c: 27:   double ret = 0;
  6775                           
  6776                           ;incstack = 0
  6777  004AF0  0E00               	movlw	0
  6778  004AF2  0100               	movlb	0	; () banked
  6779  004AF4  6FB8               	movwf	mq135_getppm@ret& (0+255),b
  6780  004AF6  0E00               	movlw	0
  6781  004AF8  6FB9               	movwf	(mq135_getppm@ret+1)& (0+255),b
  6782  004AFA  0E00               	movlw	0
  6783  004AFC  6FBA               	movwf	(mq135_getppm@ret+2)& (0+255),b
  6784  004AFE  0E00               	movlw	0
  6785  004B00  6FBB               	movwf	(mq135_getppm@ret+3)& (0+255),b
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;setting_hardaware/adc.c: 28:   double validinterval = resvalue / (double)ro;
  6789  004B02  C0A8  F00C         	movff	mq135_getppm@resvalue,___xxtofl@val
  6790  004B06  C0A9  F00D         	movff	mq135_getppm@resvalue+1,___xxtofl@val+1
  6791  004B0A  C0AA  F00E         	movff	mq135_getppm@resvalue+2,___xxtofl@val+2
  6792  004B0E  C0AB  F00F         	movff	mq135_getppm@resvalue+3,___xxtofl@val+3
  6793  004B12  0E01               	movlw	1
  6794  004B14  ECAF  F027         	call	___xxtofl
  6795  004B18  C00C  F03D         	movff	?___xxtofl,___fldiv@b
  6796  004B1C  C00D  F03E         	movff	?___xxtofl+1,___fldiv@b+1
  6797  004B20  C00E  F03F         	movff	?___xxtofl+2,___fldiv@b+2
  6798  004B24  C00F  F040         	movff	?___xxtofl+3,___fldiv@b+3
  6799  004B28  C0AC  F00C         	movff	mq135_getppm@ro,___xxtofl@val
  6800  004B2C  C0AD  F00D         	movff	mq135_getppm@ro+1,___xxtofl@val+1
  6801  004B30  C0AE  F00E         	movff	mq135_getppm@ro+2,___xxtofl@val+2
  6802  004B34  C0AF  F00F         	movff	mq135_getppm@ro+3,___xxtofl@val+3
  6803  004B38  0E01               	movlw	1
  6804  004B3A  ECAF  F027         	call	___xxtofl
  6805  004B3E  C00C  F041         	movff	?___xxtofl,___fldiv@a
  6806  004B42  C00D  F042         	movff	?___xxtofl+1,___fldiv@a+1
  6807  004B46  C00E  F043         	movff	?___xxtofl+2,___fldiv@a+2
  6808  004B4A  C00F  F044         	movff	?___xxtofl+3,___fldiv@a+3
  6809  004B4E  EC64  F022         	call	___fldiv	;wreg free
  6810  004B52  C03D  F0BC         	movff	?___fldiv,mq135_getppm@validinterval
  6811  004B56  C03E  F0BD         	movff	?___fldiv+1,mq135_getppm@validinterval+1
  6812  004B5A  C03F  F0BE         	movff	?___fldiv+2,mq135_getppm@validinterval+2
  6813  004B5E  C040  F0BF         	movff	?___fldiv+3,mq135_getppm@validinterval+3
  6814                           
  6815                           ;setting_hardaware/adc.c: 29:   if (validinterval < 2.428 && validinterval > 0.358) {
  6816  004B62  C0BC  F03D         	movff	mq135_getppm@validinterval,___flge@ff1
  6817  004B66  C0BD  F03E         	movff	mq135_getppm@validinterval+1,___flge@ff1+1
  6818  004B6A  C0BE  F03F         	movff	mq135_getppm@validinterval+2,___flge@ff1+2
  6819  004B6E  C0BF  F040         	movff	mq135_getppm@validinterval+3,___flge@ff1+3
  6820  004B72  0E5A               	movlw	90
  6821  004B74  6E41               	movwf	___flge@ff2^0,c
  6822  004B76  0E64               	movlw	100
  6823  004B78  6E42               	movwf	(___flge@ff2+1)^0,c
  6824  004B7A  0E1B               	movlw	27
  6825  004B7C  6E43               	movwf	(___flge@ff2+2)^0,c
  6826  004B7E  0E40               	movlw	64
  6827  004B80  6E44               	movwf	(___flge@ff2+3)^0,c
  6828  004B82  ECE8  F028         	call	___flge	;wreg free
  6829  004B86  B0D8               	btfsc	status,0,c
  6830  004B88  D078               	goto	l7501
  6831  004B8A  0EC7               	movlw	199
  6832  004B8C  6E3D               	movwf	___flge@ff1^0,c
  6833  004B8E  0E4B               	movlw	75
  6834  004B90  6E3E               	movwf	(___flge@ff1+1)^0,c
  6835  004B92  0EB7               	movlw	183
  6836  004B94  6E3F               	movwf	(___flge@ff1+2)^0,c
  6837  004B96  0E3E               	movlw	62
  6838  004B98  6E40               	movwf	(___flge@ff1+3)^0,c
  6839  004B9A  C0BC  F041         	movff	mq135_getppm@validinterval,___flge@ff2
  6840  004B9E  C0BD  F042         	movff	mq135_getppm@validinterval+1,___flge@ff2+1
  6841  004BA2  C0BE  F043         	movff	mq135_getppm@validinterval+2,___flge@ff2+2
  6842  004BA6  C0BF  F044         	movff	mq135_getppm@validinterval+3,___flge@ff2+3
  6843  004BAA  ECE8  F028         	call	___flge	;wreg free
  6844  004BAE  B0D8               	btfsc	status,0,c
  6845  004BB0  D064               	goto	l7501
  6846                           
  6847                           ;setting_hardaware/adc.c: 30:     ret = (double)116.6020682 * powf(((double)resvalue / r
      +                          o),-2.769034857);
  6848  004BB2  C0AC  F00C         	movff	mq135_getppm@ro,___xxtofl@val
  6849  004BB6  C0AD  F00D         	movff	mq135_getppm@ro+1,___xxtofl@val+1
  6850  004BBA  C0AE  F00E         	movff	mq135_getppm@ro+2,___xxtofl@val+2
  6851  004BBE  C0AF  F00F         	movff	mq135_getppm@ro+3,___xxtofl@val+3
  6852  004BC2  0E01               	movlw	1
  6853  004BC4  ECAF  F027         	call	___xxtofl
  6854  004BC8  C00C  F041         	movff	?___xxtofl,___fldiv@a
  6855  004BCC  C00D  F042         	movff	?___xxtofl+1,___fldiv@a+1
  6856  004BD0  C00E  F043         	movff	?___xxtofl+2,___fldiv@a+2
  6857  004BD4  C00F  F044         	movff	?___xxtofl+3,___fldiv@a+3
  6858  004BD8  C0A8  F00C         	movff	mq135_getppm@resvalue,___xxtofl@val
  6859  004BDC  C0A9  F00D         	movff	mq135_getppm@resvalue+1,___xxtofl@val+1
  6860  004BE0  C0AA  F00E         	movff	mq135_getppm@resvalue+2,___xxtofl@val+2
  6861  004BE4  C0AB  F00F         	movff	mq135_getppm@resvalue+3,___xxtofl@val+3
  6862  004BE8  0E01               	movlw	1
  6863  004BEA  ECAF  F027         	call	___xxtofl
  6864  004BEE  C00C  F03D         	movff	?___xxtofl,___fldiv@b
  6865  004BF2  C00D  F03E         	movff	?___xxtofl+1,___fldiv@b+1
  6866  004BF6  C00E  F03F         	movff	?___xxtofl+2,___fldiv@b+2
  6867  004BFA  C00F  F040         	movff	?___xxtofl+3,___fldiv@b+3
  6868  004BFE  EC64  F022         	call	___fldiv	;wreg free
  6869  004C02  C03D  F0B0         	movff	?___fldiv,_mq135_getppm$1652
  6870  004C06  C03E  F0B1         	movff	?___fldiv+1,_mq135_getppm$1652+1
  6871  004C0A  C03F  F0B2         	movff	?___fldiv+2,_mq135_getppm$1652+2
  6872  004C0E  C040  F0B3         	movff	?___fldiv+3,_mq135_getppm$1652+3
  6873                           
  6874                           ;setting_hardaware/adc.c: 30:     ret = (double)116.6020682 * powf(((double)resvalue / r
      +                          o),-2.769034857);
  6875  004C12  0EDE               	movlw	222
  6876  004C14  6E5A               	movwf	powf@y^0,c
  6877  004C16  0E37               	movlw	55
  6878  004C18  6E5B               	movwf	(powf@y+1)^0,c
  6879  004C1A  0E31               	movlw	49
  6880  004C1C  6E5C               	movwf	(powf@y+2)^0,c
  6881  004C1E  0EC0               	movlw	192
  6882  004C20  6E5D               	movwf	(powf@y+3)^0,c
  6883  004C22  C0B0  F056         	movff	_mq135_getppm$1652,powf@x
  6884  004C26  C0B1  F057         	movff	_mq135_getppm$1652+1,powf@x+1
  6885  004C2A  C0B2  F058         	movff	_mq135_getppm$1652+2,powf@x+2
  6886  004C2E  C0B3  F059         	movff	_mq135_getppm$1652+3,powf@x+3
  6887  004C32  EC55  F003         	call	_powf	;wreg free
  6888  004C36  C056  F0B4         	movff	?_powf,_mq135_getppm$1653
  6889  004C3A  C057  F0B5         	movff	?_powf+1,_mq135_getppm$1653+1
  6890  004C3E  C058  F0B6         	movff	?_powf+2,_mq135_getppm$1653+2
  6891  004C42  C059  F0B7         	movff	?_powf+3,_mq135_getppm$1653+3
  6892                           
  6893                           ;setting_hardaware/adc.c: 30:     ret = (double)116.6020682 * powf(((double)resvalue / r
      +                          o),-2.769034857);
  6894  004C46  C0B4  F01C         	movff	_mq135_getppm$1653,___flmul@b
  6895  004C4A  C0B5  F01D         	movff	_mq135_getppm$1653+1,___flmul@b+1
  6896  004C4E  C0B6  F01E         	movff	_mq135_getppm$1653+2,___flmul@b+2
  6897  004C52  C0B7  F01F         	movff	_mq135_getppm$1653+3,___flmul@b+3
  6898  004C56  0E42               	movlw	66
  6899  004C58  6E20               	movwf	___flmul@a^0,c
  6900  004C5A  0E34               	movlw	52
  6901  004C5C  6E21               	movwf	(___flmul@a+1)^0,c
  6902  004C5E  0EE9               	movlw	233
  6903  004C60  6E22               	movwf	(___flmul@a+2)^0,c
  6904  004C62  0E42               	movlw	66
  6905  004C64  6E23               	movwf	(___flmul@a+3)^0,c
  6906  004C66  EC35  F01F         	call	___flmul	;wreg free
  6907  004C6A  C01C  F0B8         	movff	?___flmul,mq135_getppm@ret
  6908  004C6E  C01D  F0B9         	movff	?___flmul+1,mq135_getppm@ret+1
  6909  004C72  C01E  F0BA         	movff	?___flmul+2,mq135_getppm@ret+2
  6910  004C76  C01F  F0BB         	movff	?___flmul+3,mq135_getppm@ret+3
  6911  004C7A                     l7501:
  6912                           
  6913                           ;setting_hardaware/adc.c: 32:   return ret;
  6914  004C7A  C0B8  F0A8         	movff	mq135_getppm@ret,?_mq135_getppm
  6915  004C7E  C0B9  F0A9         	movff	mq135_getppm@ret+1,?_mq135_getppm+1
  6916  004C82  C0BA  F0AA         	movff	mq135_getppm@ret+2,?_mq135_getppm+2
  6917  004C86  C0BB  F0AB         	movff	mq135_getppm@ret+3,?_mq135_getppm+3
  6918  004C8A  0012               	return		;funcret
  6919  004C8C                     __end_of_mq135_getppm:
  6920                           	opt callstack 0
  6921                           
  6922 ;; *************** function _powf *****************
  6923 ;; Defined at:
  6924 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\powf.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  x               4   85[COMRAM] float 
  6927 ;;  y               4   89[COMRAM] float 
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;  s2              4  140[BANK1 ] float 
  6930 ;;  s_h             4  108[BANK1 ] float 
  6931 ;;  t_h             4  104[BANK1 ] float 
  6932 ;;  t_l             4   52[BANK1 ] float 
  6933 ;;  s_l             4   48[BANK1 ] float 
  6934 ;;  __xc8_float_    4  184[BANK1 ] struct .
  6935 ;;  z               4  180[BANK1 ] float 
  6936 ;;  t               4  176[BANK1 ] float 
  6937 ;;  j               4  172[BANK1 ] long 
  6938 ;;  ix              4  168[BANK1 ] long 
  6939 ;;  k               4  160[BANK1 ] long 
  6940 ;;  p_h             4  156[BANK1 ] float 
  6941 ;;  is              4  148[BANK1 ] long 
  6942 ;;  iy              4  144[BANK1 ] long 
  6943 ;;  sn              4  136[BANK1 ] float 
  6944 ;;  t1              4  132[BANK1 ] float 
  6945 ;;  n               4  128[BANK1 ] long 
  6946 ;;  hy              4  124[BANK1 ] long 
  6947 ;;  v               4  120[BANK1 ] float 
  6948 ;;  u               4  116[BANK1 ] float 
  6949 ;;  ax              4  112[BANK1 ] float 
  6950 ;;  p_l             4  100[BANK1 ] float 
  6951 ;;  hx              4   96[BANK1 ] long 
  6952 ;;  s               4   92[BANK1 ] float 
  6953 ;;  yisint          4   80[BANK1 ] long 
  6954 ;;  r               4   76[BANK1 ] float 
  6955 ;;  w               4   68[BANK1 ] float 
  6956 ;;  i               4   44[BANK1 ] long 
  6957 ;;  y1              4   40[BANK1 ] float 
  6958 ;;  z_l             4   36[BANK1 ] float 
  6959 ;;  z_h             4   32[BANK1 ] float 
  6960 ;;  t2              4   28[BANK1 ] float 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  4   85[COMRAM] float 
  6963 ;; Registers used:
  6964 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6970 ;;      Params:         8       0       0       0       0       0       0
  6971 ;;      Locals:         0       0     188       0       0       0       0
  6972 ;;      Temps:          9       0       0       0       0       0       0
  6973 ;;      Totals:        17       0     188       0       0       0       0
  6974 ;;Total ram usage:      205 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:    6
  6977 ;; This function calls:
  6978 ;;		___fladd
  6979 ;;		___fldiv
  6980 ;;		___flge
  6981 ;;		___flmul
  6982 ;;		___flneg
  6983 ;;		___flsub
  6984 ;;		___xxtofl
  6985 ;;		_fabsf
  6986 ;;		_scalbnf
  6987 ;;		_sqrtf
  6988 ;; This function is called by:
  6989 ;;		_mq135_getppm
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text35
  6994  0006AA                     __ptext35:
  6995                           	opt callstack 0
  6996  0006AA                     _powf:
  6997                           	opt callstack 22
  6998                           
  6999                           ;incstack = 0
  7000  0006AA  C056  F1B8         	movff	powf@x,powf@__xc8_float_word
  7001  0006AE  C057  F1B9         	movff	powf@x+1,powf@__xc8_float_word+1
  7002  0006B2  C058  F1BA         	movff	powf@x+2,powf@__xc8_float_word+2
  7003  0006B6  C059  F1BB         	movff	powf@x+3,powf@__xc8_float_word+3
  7004  0006BA  C1B8  F160         	movff	powf@__xc8_float_word,powf@hx
  7005  0006BE  C1B9  F161         	movff	powf@__xc8_float_word+1,powf@hx+1
  7006  0006C2  C1BA  F162         	movff	powf@__xc8_float_word+2,powf@hx+2
  7007  0006C6  C1BB  F163         	movff	powf@__xc8_float_word+3,powf@hx+3
  7008  0006CA  C05A  F1B8         	movff	powf@y,powf@__xc8_float_word
  7009  0006CE  C05B  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  7010  0006D2  C05C  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  7011  0006D6  C05D  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  7012  0006DA  C1B8  F17C         	movff	powf@__xc8_float_word,powf@hy
  7013  0006DE  C1B9  F17D         	movff	powf@__xc8_float_word+1,powf@hy+1
  7014  0006E2  C1BA  F17E         	movff	powf@__xc8_float_word+2,powf@hy+2
  7015  0006E6  C1BB  F17F         	movff	powf@__xc8_float_word+3,powf@hy+3
  7016  0006EA  0EFF               	movlw	255
  7017  0006EC  0101               	movlb	1	; () banked
  7018  0006EE  1560               	andwf	powf@hx& (0+255),w,b
  7019  0006F0  6FA8               	movwf	powf@ix& (0+255),b
  7020  0006F2  0EFF               	movlw	255
  7021  0006F4  1561               	andwf	(powf@hx+1)& (0+255),w,b
  7022  0006F6  6FA9               	movwf	(powf@ix+1)& (0+255),b
  7023  0006F8  0EFF               	movlw	255
  7024  0006FA  1562               	andwf	(powf@hx+2)& (0+255),w,b
  7025  0006FC  6FAA               	movwf	(powf@ix+2)& (0+255),b
  7026  0006FE  0E7F               	movlw	127
  7027  000700  1563               	andwf	(powf@hx+3)& (0+255),w,b
  7028  000702  6FAB               	movwf	(powf@ix+3)& (0+255),b
  7029  000704  0EFF               	movlw	255
  7030  000706  157C               	andwf	powf@hy& (0+255),w,b
  7031  000708  6F90               	movwf	powf@iy& (0+255),b
  7032  00070A  0EFF               	movlw	255
  7033  00070C  157D               	andwf	(powf@hy+1)& (0+255),w,b
  7034  00070E  6F91               	movwf	(powf@iy+1)& (0+255),b
  7035  000710  0EFF               	movlw	255
  7036  000712  157E               	andwf	(powf@hy+2)& (0+255),w,b
  7037  000714  6F92               	movwf	(powf@iy+2)& (0+255),b
  7038  000716  0E7F               	movlw	127
  7039  000718  157F               	andwf	(powf@hy+3)& (0+255),w,b
  7040  00071A  6F93               	movwf	(powf@iy+3)& (0+255),b
  7041  00071C  5190               	movf	powf@iy& (0+255),w,b
  7042  00071E  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  7043  000720  1192               	iorwf	(powf@iy+2)& (0+255),w,b
  7044  000722  1193               	iorwf	(powf@iy+3)& (0+255),w,b
  7045  000724  A4D8               	btfss	status,2,c
  7046  000726  D009               	goto	l6955
  7047                           
  7048                           ; BSR set to: 1
  7049  000728  0E00               	movlw	0
  7050  00072A  6E56               	movwf	?_powf^0,c
  7051  00072C  0E00               	movlw	0
  7052  00072E  6E57               	movwf	(?_powf+1)^0,c
  7053  000730  0E80               	movlw	128
  7054  000732  6E58               	movwf	(?_powf+2)^0,c
  7055  000734  0E3F               	movlw	63
  7056  000736  6E59               	movwf	(?_powf+3)^0,c
  7057  000738  0012               	return	
  7058  00073A                     l6955:
  7059                           
  7060                           ; BSR set to: 1
  7061  00073A  0E80               	movlw	128
  7062  00073C  1962               	xorwf	(powf@hx+2)& (0+255),w,b
  7063  00073E  E10F               	bnz	l6961
  7064  000740  0E3F               	movlw	63
  7065  000742  1963               	xorwf	(powf@hx+3)& (0+255),w,b
  7066  000744  1160               	iorwf	powf@hx& (0+255),w,b
  7067  000746  1161               	iorwf	(powf@hx+1)& (0+255),w,b
  7068  000748  A4D8               	btfss	status,2,c
  7069  00074A  D009               	goto	l6961
  7070                           
  7071                           ; BSR set to: 1
  7072  00074C  0E00               	movlw	0
  7073  00074E  6E56               	movwf	?_powf^0,c
  7074  000750  0E00               	movlw	0
  7075  000752  6E57               	movwf	(?_powf+1)^0,c
  7076  000754  0E80               	movlw	128
  7077  000756  6E58               	movwf	(?_powf+2)^0,c
  7078  000758  0E3F               	movlw	63
  7079  00075A  6E59               	movwf	(?_powf+3)^0,c
  7080  00075C  0012               	return	
  7081  00075E                     l6961:
  7082                           
  7083                           ; BSR set to: 1
  7084  00075E  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  7085  000760  D009               	goto	u9080
  7086  000762  05A8               	decf	powf@ix& (0+255),w,b
  7087  000764  0E00               	movlw	0
  7088  000766  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  7089  000768  0E80               	movlw	128
  7090  00076A  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  7091  00076C  0E7F               	movlw	127
  7092  00076E  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  7093  000770  B0D8               	btfsc	status,0,c
  7094  000772  D00B               	goto	u9090
  7095  000774                     u9080:
  7096                           
  7097                           ; BSR set to: 1
  7098  000774  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  7099  000776  D024               	goto	l6969
  7100  000778  0590               	decf	powf@iy& (0+255),w,b
  7101  00077A  0E00               	movlw	0
  7102  00077C  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  7103  00077E  0E80               	movlw	128
  7104  000780  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  7105  000782  0E7F               	movlw	127
  7106  000784  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  7107  000786  A0D8               	btfss	status,0,c
  7108  000788  D01B               	goto	l6969
  7109  00078A                     u9090:
  7110                           
  7111                           ; BSR set to: 1
  7112  00078A  C056  F00C         	movff	powf@x,___fladd@b
  7113  00078E  C057  F00D         	movff	powf@x+1,___fladd@b+1
  7114  000792  C058  F00E         	movff	powf@x+2,___fladd@b+2
  7115  000796  C059  F00F         	movff	powf@x+3,___fladd@b+3
  7116  00079A  C05A  F010         	movff	powf@y,___fladd@a
  7117  00079E  C05B  F011         	movff	powf@y+1,___fladd@a+1
  7118  0007A2  C05C  F012         	movff	powf@y+2,___fladd@a+2
  7119  0007A6  C05D  F013         	movff	powf@y+3,___fladd@a+3
  7120  0007AA  ECDE  F020         	call	___fladd	;wreg free
  7121  0007AE  C00C  F056         	movff	?___fladd,?_powf
  7122  0007B2  C00D  F057         	movff	?___fladd+1,?_powf+1
  7123  0007B6  C00E  F058         	movff	?___fladd+2,?_powf+2
  7124  0007BA  C00F  F059         	movff	?___fladd+3,?_powf+3
  7125  0007BE  0012               	return	
  7126  0007C0                     l6969:
  7127                           
  7128                           ; BSR set to: 1
  7129  0007C0  0E00               	movlw	0
  7130  0007C2  6F50               	movwf	powf@yisint& (0+255),b
  7131  0007C4  0E00               	movlw	0
  7132  0007C6  6F51               	movwf	(powf@yisint+1)& (0+255),b
  7133  0007C8  0E00               	movlw	0
  7134  0007CA  6F52               	movwf	(powf@yisint+2)& (0+255),b
  7135  0007CC  0E00               	movlw	0
  7136  0007CE  6F53               	movwf	(powf@yisint+3)& (0+255),b
  7137                           
  7138                           ; BSR set to: 1
  7139  0007D0  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  7140  0007D2  D090               	goto	l1220
  7141                           
  7142                           ; BSR set to: 1
  7143  0007D4  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  7144  0007D6  D00E               	goto	l6977
  7145  0007D8  0E80               	movlw	128
  7146  0007DA  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  7147  0007DC  0E4B               	movlw	75
  7148  0007DE  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  7149  0007E0  A0D8               	btfss	status,0,c
  7150  0007E2  D008               	goto	l6977
  7151                           
  7152                           ; BSR set to: 1
  7153  0007E4  0E02               	movlw	2
  7154  0007E6  6F50               	movwf	powf@yisint& (0+255),b
  7155  0007E8  0E00               	movlw	0
  7156  0007EA  6F51               	movwf	(powf@yisint+1)& (0+255),b
  7157  0007EC  0E00               	movlw	0
  7158  0007EE  6F52               	movwf	(powf@yisint+2)& (0+255),b
  7159  0007F0  0E00               	movlw	0
  7160  0007F2  D07F               	goto	L7
  7161  0007F4                     l6977:
  7162                           
  7163                           ; BSR set to: 1
  7164  0007F4  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  7165  0007F6  D07E               	goto	l1220
  7166  0007F8  0E80               	movlw	128
  7167  0007FA  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  7168  0007FC  0E3F               	movlw	63
  7169  0007FE  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  7170  000800  A0D8               	btfss	status,0,c
  7171  000802  D078               	goto	l1220
  7172                           
  7173                           ; BSR set to: 1
  7174  000804  0E17               	movlw	23
  7175  000806  6E5E               	movwf	??_powf^0,c
  7176  000808  C190  F05F         	movff	powf@iy,??_powf+1
  7177  00080C  C191  F060         	movff	powf@iy+1,??_powf+2
  7178  000810  C192  F061         	movff	powf@iy+2,??_powf+3
  7179  000814  C193  F062         	movff	powf@iy+3,??_powf+4
  7180  000818                     u9135:
  7181  000818  665E               	tstfsz	??_powf^0,c
  7182  00081A  D001               	goto	u9136
  7183  00081C  D007               	goto	u9137
  7184  00081E                     u9136:
  7185  00081E  3462               	rlcf	(??_powf+4)^0,w,c
  7186  000820  3262               	rrcf	(??_powf+4)^0,f,c
  7187  000822  3261               	rrcf	(??_powf+3)^0,f,c
  7188  000824  3260               	rrcf	(??_powf+2)^0,f,c
  7189  000826  325F               	rrcf	(??_powf+1)^0,f,c
  7190  000828  2E5E               	decfsz	??_powf^0,f,c
  7191  00082A  D7F6               	goto	u9135
  7192  00082C                     u9137:
  7193  00082C  0E81               	movlw	129
  7194  00082E  245F               	addwf	(??_powf+1)^0,w,c
  7195  000830  0101               	movlb	1	; () banked
  7196  000832  6FA0               	movwf	powf@k& (0+255),b
  7197  000834  0EFF               	movlw	255
  7198  000836  2060               	addwfc	(??_powf+2)^0,w,c
  7199  000838  6FA1               	movwf	(powf@k+1)& (0+255),b
  7200  00083A  0EFF               	movlw	255
  7201  00083C  2061               	addwfc	(??_powf+3)^0,w,c
  7202  00083E  6FA2               	movwf	(powf@k+2)& (0+255),b
  7203  000840  0EFF               	movlw	255
  7204  000842  2062               	addwfc	(??_powf+4)^0,w,c
  7205  000844  6FA3               	movwf	(powf@k+3)& (0+255),b
  7206  000846  51A0               	movf	powf@k& (0+255),w,b
  7207  000848  0817               	sublw	23
  7208  00084A  6E5E               	movwf	??_powf^0,c
  7209  00084C  C190  F05F         	movff	powf@iy,??_powf+1
  7210  000850  C191  F060         	movff	powf@iy+1,??_powf+2
  7211  000854  C192  F061         	movff	powf@iy+2,??_powf+3
  7212  000858  C193  F062         	movff	powf@iy+3,??_powf+4
  7213  00085C                     u9145:
  7214  00085C  665E               	tstfsz	??_powf^0,c
  7215  00085E  D001               	goto	u9146
  7216  000860  D007               	goto	u9147
  7217  000862                     u9146:
  7218  000862  3462               	rlcf	(??_powf+4)^0,w,c
  7219  000864  3262               	rrcf	(??_powf+4)^0,f,c
  7220  000866  3261               	rrcf	(??_powf+3)^0,f,c
  7221  000868  3260               	rrcf	(??_powf+2)^0,f,c
  7222  00086A  325F               	rrcf	(??_powf+1)^0,f,c
  7223  00086C  2E5E               	decfsz	??_powf^0,f,c
  7224  00086E  D7F6               	goto	u9145
  7225  000870                     u9147:
  7226  000870  C05F  F1AC         	movff	??_powf+1,powf@j
  7227  000874  C060  F1AD         	movff	??_powf+2,powf@j+1
  7228  000878  C061  F1AE         	movff	??_powf+3,powf@j+2
  7229  00087C  C062  F1AF         	movff	??_powf+4,powf@j+3
  7230  000880  0101               	movlb	1	; () banked
  7231  000882  51A0               	movf	powf@k& (0+255),w,b
  7232  000884  0817               	sublw	23
  7233  000886  6E5E               	movwf	??_powf^0,c
  7234  000888  C1AC  F05F         	movff	powf@j,??_powf+1
  7235  00088C  C1AD  F060         	movff	powf@j+1,??_powf+2
  7236  000890  C1AE  F061         	movff	powf@j+2,??_powf+3
  7237  000894  C1AF  F062         	movff	powf@j+3,??_powf+4
  7238  000898  2A5E               	incf	??_powf^0,f,c
  7239  00089A  D005               	goto	u9150
  7240  00089C                     u9155:
  7241  00089C  90D8               	bcf	status,0,c
  7242  00089E  365F               	rlcf	(??_powf+1)^0,f,c
  7243  0008A0  3660               	rlcf	(??_powf+2)^0,f,c
  7244  0008A2  3661               	rlcf	(??_powf+3)^0,f,c
  7245  0008A4  3662               	rlcf	(??_powf+4)^0,f,c
  7246  0008A6                     u9150:
  7247  0008A6  2E5E               	decfsz	??_powf^0,f,c
  7248  0008A8  D7F9               	goto	u9155
  7249  0008AA  5190               	movf	powf@iy& (0+255),w,b
  7250  0008AC  185F               	xorwf	(??_powf+1)^0,w,c
  7251  0008AE  E122               	bnz	l1220
  7252  0008B0  5191               	movf	(powf@iy+1)& (0+255),w,b
  7253  0008B2  1860               	xorwf	(??_powf+2)^0,w,c
  7254  0008B4  E11F               	bnz	l1220
  7255  0008B6  5192               	movf	(powf@iy+2)& (0+255),w,b
  7256  0008B8  1861               	xorwf	(??_powf+3)^0,w,c
  7257  0008BA  E11C               	bnz	l1220
  7258  0008BC  5193               	movf	(powf@iy+3)& (0+255),w,b
  7259  0008BE  1862               	xorwf	(??_powf+4)^0,w,c
  7260  0008C0  A4D8               	btfss	status,2,c
  7261  0008C2  D018               	goto	l1220
  7262                           
  7263                           ; BSR set to: 1
  7264  0008C4  0E01               	movlw	1
  7265  0008C6  15AC               	andwf	powf@j& (0+255),w,b
  7266  0008C8  6E5E               	movwf	??_powf^0,c
  7267  0008CA  0E00               	movlw	0
  7268  0008CC  15AD               	andwf	(powf@j+1)& (0+255),w,b
  7269  0008CE  6E5F               	movwf	(??_powf+1)^0,c
  7270  0008D0  0E00               	movlw	0
  7271  0008D2  15AE               	andwf	(powf@j+2)& (0+255),w,b
  7272  0008D4  6E60               	movwf	(??_powf+2)^0,c
  7273  0008D6  0E00               	movlw	0
  7274  0008D8  15AF               	andwf	(powf@j+3)& (0+255),w,b
  7275  0008DA  6E61               	movwf	(??_powf+3)^0,c
  7276  0008DC  505E               	movf	??_powf^0,w,c
  7277  0008DE  0802               	sublw	2
  7278  0008E0  6F50               	movwf	powf@yisint& (0+255),b
  7279  0008E2  0E00               	movlw	0
  7280  0008E4  545F               	subfwb	(??_powf+1)^0,w,c
  7281  0008E6  6F51               	movwf	(powf@yisint+1)& (0+255),b
  7282  0008E8  0E00               	movlw	0
  7283  0008EA  5460               	subfwb	(??_powf+2)^0,w,c
  7284  0008EC  6F52               	movwf	(powf@yisint+2)& (0+255),b
  7285  0008EE  0E00               	movlw	0
  7286  0008F0  5461               	subfwb	(??_powf+3)^0,w,c
  7287  0008F2                     L7:
  7288  0008F2  6F53               	movwf	(powf@yisint+3)& (0+255),b
  7289  0008F4                     l1220:
  7290                           
  7291                           ; BSR set to: 1
  7292  0008F4  0E80               	movlw	128
  7293  0008F6  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  7294  0008F8  E155               	bnz	l7007
  7295  0008FA  0E7F               	movlw	127
  7296  0008FC  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  7297  0008FE  1190               	iorwf	powf@iy& (0+255),w,b
  7298  000900  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  7299  000902  A4D8               	btfss	status,2,c
  7300  000904  D04F               	goto	l7007
  7301                           
  7302                           ; BSR set to: 1
  7303  000906  0E80               	movlw	128
  7304  000908  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  7305  00090A  E10F               	bnz	l6991
  7306  00090C  0E3F               	movlw	63
  7307  00090E  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  7308  000910  11A8               	iorwf	powf@ix& (0+255),w,b
  7309  000912  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  7310  000914  A4D8               	btfss	status,2,c
  7311  000916  D009               	goto	l6991
  7312                           
  7313                           ; BSR set to: 1
  7314  000918  0E00               	movlw	0
  7315  00091A  6E56               	movwf	?_powf^0,c
  7316  00091C  0E00               	movlw	0
  7317  00091E  6E57               	movwf	(?_powf+1)^0,c
  7318  000920  0E80               	movlw	128
  7319  000922  6E58               	movwf	(?_powf+2)^0,c
  7320  000924  0E3F               	movlw	63
  7321  000926  6E59               	movwf	(?_powf+3)^0,c
  7322  000928  0012               	return	
  7323  00092A                     l6991:
  7324                           
  7325                           ; BSR set to: 1
  7326  00092A  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  7327  00092C  D01D               	goto	l6999
  7328  00092E  05A8               	decf	powf@ix& (0+255),w,b
  7329  000930  0E00               	movlw	0
  7330  000932  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  7331  000934  0E80               	movlw	128
  7332  000936  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  7333  000938  0E3F               	movlw	63
  7334  00093A  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  7335  00093C  A0D8               	btfss	status,0,c
  7336  00093E  D014               	goto	l6999
  7337                           
  7338                           ; BSR set to: 1
  7339  000940  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  7340  000942  D009               	goto	l1230
  7341                           
  7342                           ; BSR set to: 1
  7343  000944  0E00               	movlw	0
  7344  000946  6E56               	movwf	?_powf^0,c
  7345  000948  0E00               	movlw	0
  7346  00094A  6E57               	movwf	(?_powf+1)^0,c
  7347  00094C  0E00               	movlw	0
  7348  00094E  6E58               	movwf	(?_powf+2)^0,c
  7349  000950  0E00               	movlw	0
  7350  000952  6E59               	movwf	(?_powf+3)^0,c
  7351  000954  0012               	return	
  7352  000956                     l1230:
  7353                           
  7354                           ; BSR set to: 1
  7355  000956  C05A  F056         	movff	powf@y,?_powf
  7356  00095A  C05B  F057         	movff	powf@y+1,?_powf+1
  7357  00095E  C05C  F058         	movff	powf@y+2,?_powf+2
  7358  000962  C05D  F059         	movff	powf@y+3,?_powf+3
  7359  000966  0012               	return	
  7360  000968                     l6999:
  7361                           
  7362                           ; BSR set to: 1
  7363  000968  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  7364  00096A  D013               	goto	l7003
  7365                           
  7366                           ; BSR set to: 1
  7367  00096C  C05A  F00C         	movff	powf@y,___flneg@f1
  7368  000970  C05B  F00D         	movff	powf@y+1,___flneg@f1+1
  7369  000974  C05C  F00E         	movff	powf@y+2,___flneg@f1+2
  7370  000978  C05D  F00F         	movff	powf@y+3,___flneg@f1+3
  7371  00097C  EC39  F02E         	call	___flneg	;wreg free
  7372  000980  C00C  F056         	movff	?___flneg,?_powf
  7373  000984  C00D  F057         	movff	?___flneg+1,?_powf+1
  7374  000988  C00E  F058         	movff	?___flneg+2,?_powf+2
  7375  00098C  C00F  F059         	movff	?___flneg+3,?_powf+3
  7376  000990  0012               	return	
  7377  000992                     l7003:
  7378                           
  7379                           ; BSR set to: 1
  7380  000992  0E00               	movlw	0
  7381  000994  6E56               	movwf	?_powf^0,c
  7382  000996  0E00               	movlw	0
  7383  000998  6E57               	movwf	(?_powf+1)^0,c
  7384  00099A  0E00               	movlw	0
  7385  00099C  6E58               	movwf	(?_powf+2)^0,c
  7386  00099E  0E00               	movlw	0
  7387  0009A0  6E59               	movwf	(?_powf+3)^0,c
  7388  0009A2  0012               	return	
  7389  0009A4                     l7007:
  7390                           
  7391                           ; BSR set to: 1
  7392  0009A4  0E80               	movlw	128
  7393  0009A6  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  7394  0009A8  E12C               	bnz	l7013
  7395  0009AA  0E3F               	movlw	63
  7396  0009AC  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  7397  0009AE  1190               	iorwf	powf@iy& (0+255),w,b
  7398  0009B0  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  7399  0009B2  A4D8               	btfss	status,2,c
  7400  0009B4  D026               	goto	l7013
  7401                           
  7402                           ; BSR set to: 1
  7403  0009B6  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  7404  0009B8  D01B               	goto	l1240
  7405                           
  7406                           ; BSR set to: 1
  7407  0009BA  0E00               	movlw	0
  7408  0009BC  6E3D               	movwf	___fldiv@b^0,c
  7409  0009BE  0E00               	movlw	0
  7410  0009C0  6E3E               	movwf	(___fldiv@b+1)^0,c
  7411  0009C2  0E80               	movlw	128
  7412  0009C4  6E3F               	movwf	(___fldiv@b+2)^0,c
  7413  0009C6  0E3F               	movlw	63
  7414  0009C8  6E40               	movwf	(___fldiv@b+3)^0,c
  7415  0009CA  C056  F041         	movff	powf@x,___fldiv@a
  7416  0009CE  C057  F042         	movff	powf@x+1,___fldiv@a+1
  7417  0009D2  C058  F043         	movff	powf@x+2,___fldiv@a+2
  7418  0009D6  C059  F044         	movff	powf@x+3,___fldiv@a+3
  7419  0009DA  EC64  F022         	call	___fldiv	;wreg free
  7420  0009DE  C03D  F056         	movff	?___fldiv,?_powf
  7421  0009E2  C03E  F057         	movff	?___fldiv+1,?_powf+1
  7422  0009E6  C03F  F058         	movff	?___fldiv+2,?_powf+2
  7423  0009EA  C040  F059         	movff	?___fldiv+3,?_powf+3
  7424  0009EE  0012               	return	
  7425  0009F0                     l1240:
  7426                           
  7427                           ; BSR set to: 1
  7428  0009F0  C056  F056         	movff	powf@x,?_powf
  7429  0009F4  C057  F057         	movff	powf@x+1,?_powf+1
  7430  0009F8  C058  F058         	movff	powf@x+2,?_powf+2
  7431  0009FC  C059  F059         	movff	powf@x+3,?_powf+3
  7432  000A00  0012               	return	
  7433  000A02                     l7013:
  7434                           
  7435                           ; BSR set to: 1
  7436  000A02  0E40               	movlw	64
  7437  000A04  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  7438  000A06  117C               	iorwf	powf@hy& (0+255),w,b
  7439  000A08  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  7440  000A0A  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  7441  000A0C  A4D8               	btfss	status,2,c
  7442  000A0E  D01B               	goto	l7019
  7443                           
  7444                           ; BSR set to: 1
  7445  000A10  C056  F01C         	movff	powf@x,___flmul@b
  7446  000A14  C057  F01D         	movff	powf@x+1,___flmul@b+1
  7447  000A18  C058  F01E         	movff	powf@x+2,___flmul@b+2
  7448  000A1C  C059  F01F         	movff	powf@x+3,___flmul@b+3
  7449  000A20  C056  F020         	movff	powf@x,___flmul@a
  7450  000A24  C057  F021         	movff	powf@x+1,___flmul@a+1
  7451  000A28  C058  F022         	movff	powf@x+2,___flmul@a+2
  7452  000A2C  C059  F023         	movff	powf@x+3,___flmul@a+3
  7453  000A30  EC35  F01F         	call	___flmul	;wreg free
  7454  000A34  C01C  F056         	movff	?___flmul,?_powf
  7455  000A38  C01D  F057         	movff	?___flmul+1,?_powf+1
  7456  000A3C  C01E  F058         	movff	?___flmul+2,?_powf+2
  7457  000A40  C01F  F059         	movff	?___flmul+3,?_powf+3
  7458  000A44  0012               	return	
  7459  000A46                     l7019:
  7460                           
  7461                           ; BSR set to: 1
  7462  000A46  0E3F               	movlw	63
  7463  000A48  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  7464  000A4A  117C               	iorwf	powf@hy& (0+255),w,b
  7465  000A4C  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  7466  000A4E  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  7467  000A50  B4D8               	btfsc	status,2,c
  7468                           
  7469                           ; BSR set to: 1
  7470  000A52  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  7471  000A54  D013               	goto	l7027
  7472                           
  7473                           ; BSR set to: 1
  7474  000A56  C056  F049         	movff	powf@x,sqrtf@x
  7475  000A5A  C057  F04A         	movff	powf@x+1,sqrtf@x+1
  7476  000A5E  C058  F04B         	movff	powf@x+2,sqrtf@x+2
  7477  000A62  C059  F04C         	movff	powf@x+3,sqrtf@x+3
  7478  000A66  EC45  F01B         	call	_sqrtf	;wreg free
  7479  000A6A  C049  F056         	movff	?_sqrtf,?_powf
  7480  000A6E  C04A  F057         	movff	?_sqrtf+1,?_powf+1
  7481  000A72  C04B  F058         	movff	?_sqrtf+2,?_powf+2
  7482  000A76  C04C  F059         	movff	?_sqrtf+3,?_powf+3
  7483  000A7A  0012               	return	
  7484  000A7C                     l7027:
  7485                           
  7486                           ; BSR set to: 1
  7487  000A7C  C056  F00C         	movff	powf@x,fabsf@x
  7488  000A80  C057  F00D         	movff	powf@x+1,fabsf@x+1
  7489  000A84  C058  F00E         	movff	powf@x+2,fabsf@x+2
  7490  000A88  C059  F00F         	movff	powf@x+3,fabsf@x+3
  7491  000A8C  ECEF  F02D         	call	_fabsf	;wreg free
  7492  000A90  C00C  F170         	movff	?_fabsf,powf@ax
  7493  000A94  C00D  F171         	movff	?_fabsf+1,powf@ax+1
  7494  000A98  C00E  F172         	movff	?_fabsf+2,powf@ax+2
  7495  000A9C  C00F  F173         	movff	?_fabsf+3,powf@ax+3
  7496  000AA0  0E80               	movlw	128
  7497  000AA2  0101               	movlb	1	; () banked
  7498  000AA4  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  7499  000AA6  E106               	bnz	u9270
  7500  000AA8  0E7F               	movlw	127
  7501  000AAA  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  7502  000AAC  11A8               	iorwf	powf@ix& (0+255),w,b
  7503  000AAE  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  7504  000AB0  B4D8               	btfsc	status,2,c
  7505  000AB2  D00F               	goto	u9290
  7506  000AB4                     u9270:
  7507                           
  7508                           ; BSR set to: 1
  7509  000AB4  51A8               	movf	powf@ix& (0+255),w,b
  7510  000AB6  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  7511  000AB8  11AA               	iorwf	(powf@ix+2)& (0+255),w,b
  7512  000ABA  11AB               	iorwf	(powf@ix+3)& (0+255),w,b
  7513  000ABC  B4D8               	btfsc	status,2,c
  7514  000ABE  D009               	goto	u9290
  7515                           
  7516                           ; BSR set to: 1
  7517  000AC0  0E80               	movlw	128
  7518  000AC2  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  7519  000AC4  E105               	bnz	u9291
  7520  000AC6  0E3F               	movlw	63
  7521  000AC8  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  7522  000ACA  11A8               	iorwf	powf@ix& (0+255),w,b
  7523  000ACC  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  7524  000ACE  A4D8               	btfss	status,2,c
  7525  000AD0                     u9291:
  7526  000AD0  D0A5               	goto	l7053
  7527  000AD2                     u9290:
  7528                           
  7529                           ; BSR set to: 1
  7530  000AD2  C170  F1B4         	movff	powf@ax,powf@z
  7531  000AD6  C171  F1B5         	movff	powf@ax+1,powf@z+1
  7532  000ADA  C172  F1B6         	movff	powf@ax+2,powf@z+2
  7533  000ADE  C173  F1B7         	movff	powf@ax+3,powf@z+3
  7534                           
  7535                           ; BSR set to: 1
  7536  000AE2  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  7537  000AE4  D01A               	goto	l7039
  7538                           
  7539                           ; BSR set to: 1
  7540  000AE6  0E00               	movlw	0
  7541  000AE8  6E3D               	movwf	___fldiv@b^0,c
  7542  000AEA  0E00               	movlw	0
  7543  000AEC  6E3E               	movwf	(___fldiv@b+1)^0,c
  7544  000AEE  0E80               	movlw	128
  7545  000AF0  6E3F               	movwf	(___fldiv@b+2)^0,c
  7546  000AF2  0E3F               	movlw	63
  7547  000AF4  6E40               	movwf	(___fldiv@b+3)^0,c
  7548  000AF6  C1B4  F041         	movff	powf@z,___fldiv@a
  7549  000AFA  C1B5  F042         	movff	powf@z+1,___fldiv@a+1
  7550  000AFE  C1B6  F043         	movff	powf@z+2,___fldiv@a+2
  7551  000B02  C1B7  F044         	movff	powf@z+3,___fldiv@a+3
  7552  000B06  EC64  F022         	call	___fldiv	;wreg free
  7553  000B0A  C03D  F1B4         	movff	?___fldiv,powf@z
  7554  000B0E  C03E  F1B5         	movff	?___fldiv+1,powf@z+1
  7555  000B12  C03F  F1B6         	movff	?___fldiv+2,powf@z+2
  7556  000B16  C040  F1B7         	movff	?___fldiv+3,powf@z+3
  7557  000B1A                     l7039:
  7558  000B1A  0101               	movlb	1	; () banked
  7559  000B1C  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  7560  000B1E  D075               	goto	l7049
  7561                           
  7562                           ; BSR set to: 1
  7563  000B20  0E00               	movlw	0
  7564  000B22  25A8               	addwf	powf@ix& (0+255),w,b
  7565  000B24  6E5E               	movwf	??_powf^0,c
  7566  000B26  0E00               	movlw	0
  7567  000B28  21A9               	addwfc	(powf@ix+1)& (0+255),w,b
  7568  000B2A  6E5F               	movwf	(??_powf+1)^0,c
  7569  000B2C  0E80               	movlw	128
  7570  000B2E  21AA               	addwfc	(powf@ix+2)& (0+255),w,b
  7571  000B30  6E60               	movwf	(??_powf+2)^0,c
  7572  000B32  0EC0               	movlw	192
  7573  000B34  21AB               	addwfc	(powf@ix+3)& (0+255),w,b
  7574  000B36  6E61               	movwf	(??_powf+3)^0,c
  7575  000B38  5150               	movf	powf@yisint& (0+255),w,b
  7576  000B3A  105E               	iorwf	??_powf^0,w,c
  7577  000B3C  6E62               	movwf	(??_powf+4)^0,c
  7578  000B3E  5151               	movf	(powf@yisint+1)& (0+255),w,b
  7579  000B40  105F               	iorwf	(??_powf+1)^0,w,c
  7580  000B42  6E63               	movwf	(??_powf+5)^0,c
  7581  000B44  5152               	movf	(powf@yisint+2)& (0+255),w,b
  7582  000B46  1060               	iorwf	(??_powf+2)^0,w,c
  7583  000B48  6E64               	movwf	(??_powf+6)^0,c
  7584  000B4A  5153               	movf	(powf@yisint+3)& (0+255),w,b
  7585  000B4C  1061               	iorwf	(??_powf+3)^0,w,c
  7586  000B4E  6E65               	movwf	(??_powf+7)^0,c
  7587  000B50  5062               	movf	(??_powf+4)^0,w,c
  7588  000B52  1063               	iorwf	(??_powf+5)^0,w,c
  7589  000B54  1064               	iorwf	(??_powf+6)^0,w,c
  7590  000B56  1065               	iorwf	(??_powf+7)^0,w,c
  7591  000B58  A4D8               	btfss	status,2,c
  7592  000B5A  D03F               	goto	l7045
  7593                           
  7594                           ; BSR set to: 1
  7595  000B5C  C1B4  F039         	movff	powf@z,___flsub@a
  7596  000B60  C1B5  F03A         	movff	powf@z+1,___flsub@a+1
  7597  000B64  C1B6  F03B         	movff	powf@z+2,___flsub@a+2
  7598  000B68  C1B7  F03C         	movff	powf@z+3,___flsub@a+3
  7599  000B6C  C1B4  F035         	movff	powf@z,___flsub@b
  7600  000B70  C1B5  F036         	movff	powf@z+1,___flsub@b+1
  7601  000B74  C1B6  F037         	movff	powf@z+2,___flsub@b+2
  7602  000B78  C1B7  F038         	movff	powf@z+3,___flsub@b+3
  7603  000B7C  EC52  F02D         	call	___flsub	;wreg free
  7604  000B80  C035  F03D         	movff	?___flsub,___fldiv@b
  7605  000B84  C036  F03E         	movff	?___flsub+1,___fldiv@b+1
  7606  000B88  C037  F03F         	movff	?___flsub+2,___fldiv@b+2
  7607  000B8C  C038  F040         	movff	?___flsub+3,___fldiv@b+3
  7608  000B90  C1B4  F039         	movff	powf@z,___flsub@a
  7609  000B94  C1B5  F03A         	movff	powf@z+1,___flsub@a+1
  7610  000B98  C1B6  F03B         	movff	powf@z+2,___flsub@a+2
  7611  000B9C  C1B7  F03C         	movff	powf@z+3,___flsub@a+3
  7612  000BA0  C1B4  F035         	movff	powf@z,___flsub@b
  7613  000BA4  C1B5  F036         	movff	powf@z+1,___flsub@b+1
  7614  000BA8  C1B6  F037         	movff	powf@z+2,___flsub@b+2
  7615  000BAC  C1B7  F038         	movff	powf@z+3,___flsub@b+3
  7616  000BB0  EC52  F02D         	call	___flsub	;wreg free
  7617  000BB4  C035  F041         	movff	?___flsub,___fldiv@a
  7618  000BB8  C036  F042         	movff	?___flsub+1,___fldiv@a+1
  7619  000BBC  C037  F043         	movff	?___flsub+2,___fldiv@a+2
  7620  000BC0  C038  F044         	movff	?___flsub+3,___fldiv@a+3
  7621  000BC4  EC64  F022         	call	___fldiv	;wreg free
  7622  000BC8  C03D  F1B4         	movff	?___fldiv,powf@z
  7623  000BCC  C03E  F1B5         	movff	?___fldiv+1,powf@z+1
  7624  000BD0  C03F  F1B6         	movff	?___fldiv+2,powf@z+2
  7625  000BD4  C040  F1B7         	movff	?___fldiv+3,powf@z+3
  7626  000BD8  D018               	goto	l7049
  7627  000BDA                     l7045:
  7628                           
  7629                           ; BSR set to: 1
  7630  000BDA  0550               	decf	powf@yisint& (0+255),w,b
  7631  000BDC  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  7632  000BDE  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  7633  000BE0  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  7634  000BE2  A4D8               	btfss	status,2,c
  7635  000BE4  D012               	goto	l7049
  7636                           
  7637                           ; BSR set to: 1
  7638  000BE6  C1B4  F00C         	movff	powf@z,___flneg@f1
  7639  000BEA  C1B5  F00D         	movff	powf@z+1,___flneg@f1+1
  7640  000BEE  C1B6  F00E         	movff	powf@z+2,___flneg@f1+2
  7641  000BF2  C1B7  F00F         	movff	powf@z+3,___flneg@f1+3
  7642  000BF6  EC39  F02E         	call	___flneg	;wreg free
  7643  000BFA  C00C  F1B4         	movff	?___flneg,powf@z
  7644  000BFE  C00D  F1B5         	movff	?___flneg+1,powf@z+1
  7645  000C02  C00E  F1B6         	movff	?___flneg+2,powf@z+2
  7646  000C06  C00F  F1B7         	movff	?___flneg+3,powf@z+3
  7647  000C0A                     l7049:
  7648  000C0A  C1B4  F056         	movff	powf@z,?_powf
  7649  000C0E  C1B5  F057         	movff	powf@z+1,?_powf+1
  7650  000C12  C1B6  F058         	movff	powf@z+2,?_powf+2
  7651  000C16  C1B7  F059         	movff	powf@z+3,?_powf+3
  7652  000C1A  0012               	return	
  7653  000C1C                     l7053:
  7654                           
  7655                           ; BSR set to: 1
  7656  000C1C  0E00               	movlw	0
  7657  000C1E  6F88               	movwf	powf@sn& (0+255),b
  7658  000C20  0E00               	movlw	0
  7659  000C22  6F89               	movwf	(powf@sn+1)& (0+255),b
  7660  000C24  0E80               	movlw	128
  7661  000C26  6F8A               	movwf	(powf@sn+2)& (0+255),b
  7662  000C28  0E3F               	movlw	63
  7663  000C2A  6F8B               	movwf	(powf@sn+3)& (0+255),b
  7664                           
  7665                           ; BSR set to: 1
  7666  000C2C  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  7667  000C2E  D053               	goto	l7067
  7668                           
  7669                           ; BSR set to: 1
  7670  000C30  5150               	movf	powf@yisint& (0+255),w,b
  7671  000C32  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  7672  000C34  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  7673  000C36  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  7674  000C38  A4D8               	btfss	status,2,c
  7675  000C3A  D03F               	goto	l7063
  7676                           
  7677                           ; BSR set to: 1
  7678  000C3C  C056  F039         	movff	powf@x,___flsub@a
  7679  000C40  C057  F03A         	movff	powf@x+1,___flsub@a+1
  7680  000C44  C058  F03B         	movff	powf@x+2,___flsub@a+2
  7681  000C48  C059  F03C         	movff	powf@x+3,___flsub@a+3
  7682  000C4C  C056  F035         	movff	powf@x,___flsub@b
  7683  000C50  C057  F036         	movff	powf@x+1,___flsub@b+1
  7684  000C54  C058  F037         	movff	powf@x+2,___flsub@b+2
  7685  000C58  C059  F038         	movff	powf@x+3,___flsub@b+3
  7686  000C5C  EC52  F02D         	call	___flsub	;wreg free
  7687  000C60  C035  F03D         	movff	?___flsub,___fldiv@b
  7688  000C64  C036  F03E         	movff	?___flsub+1,___fldiv@b+1
  7689  000C68  C037  F03F         	movff	?___flsub+2,___fldiv@b+2
  7690  000C6C  C038  F040         	movff	?___flsub+3,___fldiv@b+3
  7691  000C70  C056  F039         	movff	powf@x,___flsub@a
  7692  000C74  C057  F03A         	movff	powf@x+1,___flsub@a+1
  7693  000C78  C058  F03B         	movff	powf@x+2,___flsub@a+2
  7694  000C7C  C059  F03C         	movff	powf@x+3,___flsub@a+3
  7695  000C80  C056  F035         	movff	powf@x,___flsub@b
  7696  000C84  C057  F036         	movff	powf@x+1,___flsub@b+1
  7697  000C88  C058  F037         	movff	powf@x+2,___flsub@b+2
  7698  000C8C  C059  F038         	movff	powf@x+3,___flsub@b+3
  7699  000C90  EC52  F02D         	call	___flsub	;wreg free
  7700  000C94  C035  F041         	movff	?___flsub,___fldiv@a
  7701  000C98  C036  F042         	movff	?___flsub+1,___fldiv@a+1
  7702  000C9C  C037  F043         	movff	?___flsub+2,___fldiv@a+2
  7703  000CA0  C038  F044         	movff	?___flsub+3,___fldiv@a+3
  7704  000CA4  EC64  F022         	call	___fldiv	;wreg free
  7705  000CA8  C03D  F056         	movff	?___fldiv,?_powf
  7706  000CAC  C03E  F057         	movff	?___fldiv+1,?_powf+1
  7707  000CB0  C03F  F058         	movff	?___fldiv+2,?_powf+2
  7708  000CB4  C040  F059         	movff	?___fldiv+3,?_powf+3
  7709  000CB8  0012               	return	
  7710  000CBA                     l7063:
  7711                           
  7712                           ; BSR set to: 1
  7713  000CBA  0550               	decf	powf@yisint& (0+255),w,b
  7714  000CBC  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  7715  000CBE  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  7716  000CC0  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  7717  000CC2  A4D8               	btfss	status,2,c
  7718  000CC4  D008               	goto	l7067
  7719                           
  7720                           ; BSR set to: 1
  7721  000CC6  0E00               	movlw	0
  7722  000CC8  6F88               	movwf	powf@sn& (0+255),b
  7723  000CCA  0E00               	movlw	0
  7724  000CCC  6F89               	movwf	(powf@sn+1)& (0+255),b
  7725  000CCE  0E80               	movlw	128
  7726  000CD0  6F8A               	movwf	(powf@sn+2)& (0+255),b
  7727  000CD2  0EBF               	movlw	191
  7728  000CD4  6F8B               	movwf	(powf@sn+3)& (0+255),b
  7729  000CD6                     l7067:
  7730                           
  7731                           ; BSR set to: 1
  7732  000CD6  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  7733  000CD8  D26B               	goto	l7115
  7734  000CDA  0590               	decf	powf@iy& (0+255),w,b
  7735  000CDC  0E00               	movlw	0
  7736  000CDE  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  7737  000CE0  0E00               	movlw	0
  7738  000CE2  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  7739  000CE4  0E4D               	movlw	77
  7740  000CE6  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  7741  000CE8  A0D8               	btfss	status,0,c
  7742  000CEA  D262               	goto	l7115
  7743                           
  7744                           ; BSR set to: 1
  7745  000CEC  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  7746  000CEE  D00A               	goto	u9380
  7747  000CF0  0EF8               	movlw	248
  7748  000CF2  5DA8               	subwf	powf@ix& (0+255),w,b
  7749  000CF4  0EFF               	movlw	255
  7750  000CF6  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  7751  000CF8  0E7F               	movlw	127
  7752  000CFA  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  7753  000CFC  0E3F               	movlw	63
  7754  000CFE  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  7755  000D00  B0D8               	btfsc	status,0,c
  7756  000D02  D06C               	goto	l7079
  7757  000D04                     u9380:
  7758                           
  7759                           ; BSR set to: 1
  7760  000D04  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  7761  000D06  D035               	goto	l7075
  7762                           
  7763                           ; BSR set to: 1
  7764  000D08  0E60               	movlw	96
  7765  000D0A  6E20               	movwf	___flmul@a^0,c
  7766  000D0C  0E42               	movlw	66
  7767  000D0E  6E21               	movwf	(___flmul@a+1)^0,c
  7768  000D10  0EA2               	movlw	162
  7769  000D12  6E22               	movwf	(___flmul@a+2)^0,c
  7770  000D14  0E0D               	movlw	13
  7771  000D16  6E23               	movwf	(___flmul@a+3)^0,c
  7772  000D18  C188  F01C         	movff	powf@sn,___flmul@b
  7773  000D1C  C189  F01D         	movff	powf@sn+1,___flmul@b+1
  7774  000D20  C18A  F01E         	movff	powf@sn+2,___flmul@b+2
  7775  000D24  C18B  F01F         	movff	powf@sn+3,___flmul@b+3
  7776  000D28  EC35  F01F         	call	___flmul	;wreg free
  7777  000D2C  C01C  F1A4         	movff	?___flmul,_powf$1654
  7778  000D30  C01D  F1A5         	movff	?___flmul+1,_powf$1654+1
  7779  000D34  C01E  F1A6         	movff	?___flmul+2,_powf$1654+2
  7780  000D38  C01F  F1A7         	movff	?___flmul+3,_powf$1654+3
  7781  000D3C  C1A4  F01C         	movff	_powf$1654,___flmul@b
  7782  000D40  C1A5  F01D         	movff	_powf$1654+1,___flmul@b+1
  7783  000D44  C1A6  F01E         	movff	_powf$1654+2,___flmul@b+2
  7784  000D48  C1A7  F01F         	movff	_powf$1654+3,___flmul@b+3
  7785  000D4C  0E60               	movlw	96
  7786  000D4E  6E20               	movwf	___flmul@a^0,c
  7787  000D50  0E42               	movlw	66
  7788  000D52  6E21               	movwf	(___flmul@a+1)^0,c
  7789  000D54  0EA2               	movlw	162
  7790  000D56  6E22               	movwf	(___flmul@a+2)^0,c
  7791  000D58  0E0D               	movlw	13
  7792  000D5A  6E23               	movwf	(___flmul@a+3)^0,c
  7793  000D5C  EC35  F01F         	call	___flmul	;wreg free
  7794  000D60  C01C  F056         	movff	?___flmul,?_powf
  7795  000D64  C01D  F057         	movff	?___flmul+1,?_powf+1
  7796  000D68  C01E  F058         	movff	?___flmul+2,?_powf+2
  7797  000D6C  C01F  F059         	movff	?___flmul+3,?_powf+3
  7798  000D70  0012               	return	
  7799  000D72                     l7075:
  7800                           
  7801                           ; BSR set to: 1
  7802  000D72  0ECA               	movlw	202
  7803  000D74  6E20               	movwf	___flmul@a^0,c
  7804  000D76  0EF2               	movlw	242
  7805  000D78  6E21               	movwf	(___flmul@a+1)^0,c
  7806  000D7A  0E49               	movlw	73
  7807  000D7C  6E22               	movwf	(___flmul@a+2)^0,c
  7808  000D7E  0E71               	movlw	113
  7809  000D80  6E23               	movwf	(___flmul@a+3)^0,c
  7810  000D82  C188  F01C         	movff	powf@sn,___flmul@b
  7811  000D86  C189  F01D         	movff	powf@sn+1,___flmul@b+1
  7812  000D8A  C18A  F01E         	movff	powf@sn+2,___flmul@b+2
  7813  000D8E  C18B  F01F         	movff	powf@sn+3,___flmul@b+3
  7814  000D92  EC35  F01F         	call	___flmul	;wreg free
  7815  000D96  C01C  F1A4         	movff	?___flmul,_powf$1654
  7816  000D9A  C01D  F1A5         	movff	?___flmul+1,_powf$1654+1
  7817  000D9E  C01E  F1A6         	movff	?___flmul+2,_powf$1654+2
  7818  000DA2  C01F  F1A7         	movff	?___flmul+3,_powf$1654+3
  7819  000DA6  C1A4  F01C         	movff	_powf$1654,___flmul@b
  7820  000DAA  C1A5  F01D         	movff	_powf$1654+1,___flmul@b+1
  7821  000DAE  C1A6  F01E         	movff	_powf$1654+2,___flmul@b+2
  7822  000DB2  C1A7  F01F         	movff	_powf$1654+3,___flmul@b+3
  7823  000DB6  0ECA               	movlw	202
  7824  000DB8  6E20               	movwf	___flmul@a^0,c
  7825  000DBA  0EF2               	movlw	242
  7826  000DBC  6E21               	movwf	(___flmul@a+1)^0,c
  7827  000DBE  0E49               	movlw	73
  7828  000DC0  6E22               	movwf	(___flmul@a+2)^0,c
  7829  000DC2  0E71               	movlw	113
  7830  000DC4  6E23               	movwf	(___flmul@a+3)^0,c
  7831  000DC6  EC35  F01F         	call	___flmul	;wreg free
  7832  000DCA  C01C  F056         	movff	?___flmul,?_powf
  7833  000DCE  C01D  F057         	movff	?___flmul+1,?_powf+1
  7834  000DD2  C01E  F058         	movff	?___flmul+2,?_powf+2
  7835  000DD6  C01F  F059         	movff	?___flmul+3,?_powf+3
  7836  000DDA  0012               	return	
  7837  000DDC                     l7079:
  7838                           
  7839                           ; BSR set to: 1
  7840  000DDC  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  7841  000DDE  D07D               	goto	l7089
  7842  000DE0  0E08               	movlw	8
  7843  000DE2  5DA8               	subwf	powf@ix& (0+255),w,b
  7844  000DE4  0E00               	movlw	0
  7845  000DE6  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  7846  000DE8  0E80               	movlw	128
  7847  000DEA  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  7848  000DEC  0E3F               	movlw	63
  7849  000DEE  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  7850  000DF0  A0D8               	btfss	status,0,c
  7851  000DF2  D073               	goto	l7089
  7852                           
  7853                           ; BSR set to: 1
  7854  000DF4  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  7855  000DF6  D007               	goto	u9410
  7856  000DF8  517F               	movf	(powf@hy+3)& (0+255),w,b
  7857  000DFA  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  7858  000DFC  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  7859  000DFE  E138               	bnz	l7085
  7860  000E00  057C               	decf	powf@hy& (0+255),w,b
  7861  000E02  B0D8               	btfsc	status,0,c
  7862  000E04  D035               	goto	l7085
  7863  000E06                     u9410:
  7864                           
  7865                           ; BSR set to: 1
  7866  000E06  0E60               	movlw	96
  7867  000E08  6E20               	movwf	___flmul@a^0,c
  7868  000E0A  0E42               	movlw	66
  7869  000E0C  6E21               	movwf	(___flmul@a+1)^0,c
  7870  000E0E  0EA2               	movlw	162
  7871  000E10  6E22               	movwf	(___flmul@a+2)^0,c
  7872  000E12  0E0D               	movlw	13
  7873  000E14  6E23               	movwf	(___flmul@a+3)^0,c
  7874  000E16  C188  F01C         	movff	powf@sn,___flmul@b
  7875  000E1A  C189  F01D         	movff	powf@sn+1,___flmul@b+1
  7876  000E1E  C18A  F01E         	movff	powf@sn+2,___flmul@b+2
  7877  000E22  C18B  F01F         	movff	powf@sn+3,___flmul@b+3
  7878  000E26  EC35  F01F         	call	___flmul	;wreg free
  7879  000E2A  C01C  F1A4         	movff	?___flmul,_powf$1654
  7880  000E2E  C01D  F1A5         	movff	?___flmul+1,_powf$1654+1
  7881  000E32  C01E  F1A6         	movff	?___flmul+2,_powf$1654+2
  7882  000E36  C01F  F1A7         	movff	?___flmul+3,_powf$1654+3
  7883  000E3A  C1A4  F01C         	movff	_powf$1654,___flmul@b
  7884  000E3E  C1A5  F01D         	movff	_powf$1654+1,___flmul@b+1
  7885  000E42  C1A6  F01E         	movff	_powf$1654+2,___flmul@b+2
  7886  000E46  C1A7  F01F         	movff	_powf$1654+3,___flmul@b+3
  7887  000E4A  0E60               	movlw	96
  7888  000E4C  6E20               	movwf	___flmul@a^0,c
  7889  000E4E  0E42               	movlw	66
  7890  000E50  6E21               	movwf	(___flmul@a+1)^0,c
  7891  000E52  0EA2               	movlw	162
  7892  000E54  6E22               	movwf	(___flmul@a+2)^0,c
  7893  000E56  0E0D               	movlw	13
  7894  000E58  6E23               	movwf	(___flmul@a+3)^0,c
  7895  000E5A  EC35  F01F         	call	___flmul	;wreg free
  7896  000E5E  C01C  F056         	movff	?___flmul,?_powf
  7897  000E62  C01D  F057         	movff	?___flmul+1,?_powf+1
  7898  000E66  C01E  F058         	movff	?___flmul+2,?_powf+2
  7899  000E6A  C01F  F059         	movff	?___flmul+3,?_powf+3
  7900  000E6E  0012               	return	
  7901  000E70                     l7085:
  7902                           
  7903                           ; BSR set to: 1
  7904  000E70  0ECA               	movlw	202
  7905  000E72  6E20               	movwf	___flmul@a^0,c
  7906  000E74  0EF2               	movlw	242
  7907  000E76  6E21               	movwf	(___flmul@a+1)^0,c
  7908  000E78  0E49               	movlw	73
  7909  000E7A  6E22               	movwf	(___flmul@a+2)^0,c
  7910  000E7C  0E71               	movlw	113
  7911  000E7E  6E23               	movwf	(___flmul@a+3)^0,c
  7912  000E80  C188  F01C         	movff	powf@sn,___flmul@b
  7913  000E84  C189  F01D         	movff	powf@sn+1,___flmul@b+1
  7914  000E88  C18A  F01E         	movff	powf@sn+2,___flmul@b+2
  7915  000E8C  C18B  F01F         	movff	powf@sn+3,___flmul@b+3
  7916  000E90  EC35  F01F         	call	___flmul	;wreg free
  7917  000E94  C01C  F1A4         	movff	?___flmul,_powf$1654
  7918  000E98  C01D  F1A5         	movff	?___flmul+1,_powf$1654+1
  7919  000E9C  C01E  F1A6         	movff	?___flmul+2,_powf$1654+2
  7920  000EA0  C01F  F1A7         	movff	?___flmul+3,_powf$1654+3
  7921  000EA4  C1A4  F01C         	movff	_powf$1654,___flmul@b
  7922  000EA8  C1A5  F01D         	movff	_powf$1654+1,___flmul@b+1
  7923  000EAC  C1A6  F01E         	movff	_powf$1654+2,___flmul@b+2
  7924  000EB0  C1A7  F01F         	movff	_powf$1654+3,___flmul@b+3
  7925  000EB4  0ECA               	movlw	202
  7926  000EB6  6E20               	movwf	___flmul@a^0,c
  7927  000EB8  0EF2               	movlw	242
  7928  000EBA  6E21               	movwf	(___flmul@a+1)^0,c
  7929  000EBC  0E49               	movlw	73
  7930  000EBE  6E22               	movwf	(___flmul@a+2)^0,c
  7931  000EC0  0E71               	movlw	113
  7932  000EC2  6E23               	movwf	(___flmul@a+3)^0,c
  7933  000EC4  EC35  F01F         	call	___flmul	;wreg free
  7934  000EC8  C01C  F056         	movff	?___flmul,?_powf
  7935  000ECC  C01D  F057         	movff	?___flmul+1,?_powf+1
  7936  000ED0  C01E  F058         	movff	?___flmul+2,?_powf+2
  7937  000ED4  C01F  F059         	movff	?___flmul+3,?_powf+3
  7938  000ED8  0012               	return	
  7939  000EDA                     l7089:
  7940                           
  7941                           ; BSR set to: 1
  7942  000EDA  C170  F00C         	movff	powf@ax,___fladd@b
  7943  000EDE  C171  F00D         	movff	powf@ax+1,___fladd@b+1
  7944  000EE2  C172  F00E         	movff	powf@ax+2,___fladd@b+2
  7945  000EE6  C173  F00F         	movff	powf@ax+3,___fladd@b+3
  7946  000EEA  0E00               	movlw	0
  7947  000EEC  6E10               	movwf	___fladd@a^0,c
  7948  000EEE  0E00               	movlw	0
  7949  000EF0  6E11               	movwf	(___fladd@a+1)^0,c
  7950  000EF2  0E80               	movlw	128
  7951  000EF4  6E12               	movwf	(___fladd@a+2)^0,c
  7952  000EF6  0EBF               	movlw	191
  7953  000EF8  6E13               	movwf	(___fladd@a+3)^0,c
  7954  000EFA  ECDE  F020         	call	___fladd	;wreg free
  7955  000EFE  C00C  F1B0         	movff	?___fladd,powf@t
  7956  000F02  C00D  F1B1         	movff	?___fladd+1,powf@t+1
  7957  000F06  C00E  F1B2         	movff	?___fladd+2,powf@t+2
  7958  000F0A  C00F  F1B3         	movff	?___fladd+3,powf@t+3
  7959  000F0E  0E00               	movlw	0
  7960  000F10  6E20               	movwf	___flmul@a^0,c
  7961  000F12  0E00               	movlw	0
  7962  000F14  6E21               	movwf	(___flmul@a+1)^0,c
  7963  000F16  0E80               	movlw	128
  7964  000F18  6E22               	movwf	(___flmul@a+2)^0,c
  7965  000F1A  0E3E               	movlw	62
  7966  000F1C  6E23               	movwf	(___flmul@a+3)^0,c
  7967  000F1E  C1B0  F01C         	movff	powf@t,___flmul@b
  7968  000F22  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  7969  000F26  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  7970  000F2A  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  7971  000F2E  EC35  F01F         	call	___flmul	;wreg free
  7972  000F32  C01C  F039         	movff	?___flmul,___flsub@a
  7973  000F36  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
  7974  000F3A  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
  7975  000F3E  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
  7976  000F42  0EAB               	movlw	171
  7977  000F44  6E35               	movwf	___flsub@b^0,c
  7978  000F46  0EAA               	movlw	170
  7979  000F48  6E36               	movwf	(___flsub@b+1)^0,c
  7980  000F4A  0EAA               	movlw	170
  7981  000F4C  6E37               	movwf	(___flsub@b+2)^0,c
  7982  000F4E  0E3E               	movlw	62
  7983  000F50  6E38               	movwf	(___flsub@b+3)^0,c
  7984  000F52  EC52  F02D         	call	___flsub	;wreg free
  7985  000F56  C035  F1A4         	movff	?___flsub,_powf$1654
  7986  000F5A  C036  F1A5         	movff	?___flsub+1,_powf$1654+1
  7987  000F5E  C037  F1A6         	movff	?___flsub+2,_powf$1654+2
  7988  000F62  C038  F1A7         	movff	?___flsub+3,_powf$1654+3
  7989  000F66  C1B0  F020         	movff	powf@t,___flmul@a
  7990  000F6A  C1B1  F021         	movff	powf@t+1,___flmul@a+1
  7991  000F6E  C1B2  F022         	movff	powf@t+2,___flmul@a+2
  7992  000F72  C1B3  F023         	movff	powf@t+3,___flmul@a+3
  7993  000F76  C1B0  F01C         	movff	powf@t,___flmul@b
  7994  000F7A  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  7995  000F7E  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  7996  000F82  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  7997  000F86  EC35  F01F         	call	___flmul	;wreg free
  7998  000F8A  C01C  F154         	movff	?___flmul,_powf$1655
  7999  000F8E  C01D  F155         	movff	?___flmul+1,_powf$1655+1
  8000  000F92  C01E  F156         	movff	?___flmul+2,_powf$1655+2
  8001  000F96  C01F  F157         	movff	?___flmul+3,_powf$1655+3
  8002  000F9A  C1B0  F020         	movff	powf@t,___flmul@a
  8003  000F9E  C1B1  F021         	movff	powf@t+1,___flmul@a+1
  8004  000FA2  C1B2  F022         	movff	powf@t+2,___flmul@a+2
  8005  000FA6  C1B3  F023         	movff	powf@t+3,___flmul@a+3
  8006  000FAA  C1A4  F01C         	movff	_powf$1654,___flmul@b
  8007  000FAE  C1A5  F01D         	movff	_powf$1654+1,___flmul@b+1
  8008  000FB2  C1A6  F01E         	movff	_powf$1654+2,___flmul@b+2
  8009  000FB6  C1A7  F01F         	movff	_powf$1654+3,___flmul@b+3
  8010  000FBA  EC35  F01F         	call	___flmul	;wreg free
  8011  000FBE  C01C  F039         	movff	?___flmul,___flsub@a
  8012  000FC2  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
  8013  000FC6  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
  8014  000FCA  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
  8015  000FCE  0E00               	movlw	0
  8016  000FD0  6E35               	movwf	___flsub@b^0,c
  8017  000FD2  0E00               	movlw	0
  8018  000FD4  6E36               	movwf	(___flsub@b+1)^0,c
  8019  000FD6  0E00               	movlw	0
  8020  000FD8  6E37               	movwf	(___flsub@b+2)^0,c
  8021  000FDA  0E3F               	movlw	63
  8022  000FDC  6E38               	movwf	(___flsub@b+3)^0,c
  8023  000FDE  EC52  F02D         	call	___flsub	;wreg free
  8024  000FE2  C035  F148         	movff	?___flsub,_powf$1656
  8025  000FE6  C036  F149         	movff	?___flsub+1,_powf$1656+1
  8026  000FEA  C037  F14A         	movff	?___flsub+2,_powf$1656+2
  8027  000FEE  C038  F14B         	movff	?___flsub+3,_powf$1656+3
  8028  000FF2  C154  F01C         	movff	_powf$1655,___flmul@b
  8029  000FF6  C155  F01D         	movff	_powf$1655+1,___flmul@b+1
  8030  000FFA  C156  F01E         	movff	_powf$1655+2,___flmul@b+2
  8031  000FFE  C157  F01F         	movff	_powf$1655+3,___flmul@b+3
  8032  001002  C148  F020         	movff	_powf$1656,___flmul@a
  8033  001006  C149  F021         	movff	_powf$1656+1,___flmul@a+1
  8034  00100A  C14A  F022         	movff	_powf$1656+2,___flmul@a+2
  8035  00100E  C14B  F023         	movff	_powf$1656+3,___flmul@a+3
  8036  001012  EC35  F01F         	call	___flmul	;wreg free
  8037  001016  C01C  F144         	movff	?___flmul,powf@w
  8038  00101A  C01D  F145         	movff	?___flmul+1,powf@w+1
  8039  00101E  C01E  F146         	movff	?___flmul+2,powf@w+2
  8040  001022  C01F  F147         	movff	?___flmul+3,powf@w+3
  8041  001026  C1B0  F01C         	movff	powf@t,___flmul@b
  8042  00102A  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  8043  00102E  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  8044  001032  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  8045  001036  0E00               	movlw	0
  8046  001038  6E20               	movwf	___flmul@a^0,c
  8047  00103A  0EAA               	movlw	170
  8048  00103C  6E21               	movwf	(___flmul@a+1)^0,c
  8049  00103E  0EB8               	movlw	184
  8050  001040  6E22               	movwf	(___flmul@a+2)^0,c
  8051  001042  0E3F               	movlw	63
  8052  001044  6E23               	movwf	(___flmul@a+3)^0,c
  8053  001046  EC35  F01F         	call	___flmul	;wreg free
  8054  00104A  C01C  F174         	movff	?___flmul,powf@u
  8055  00104E  C01D  F175         	movff	?___flmul+1,powf@u+1
  8056  001052  C01E  F176         	movff	?___flmul+2,powf@u+2
  8057  001056  C01F  F177         	movff	?___flmul+3,powf@u+3
  8058  00105A  0E70               	movlw	112
  8059  00105C  6E20               	movwf	___flmul@a^0,c
  8060  00105E  0EA5               	movlw	165
  8061  001060  6E21               	movwf	(___flmul@a+1)^0,c
  8062  001062  0EEC               	movlw	236
  8063  001064  6E22               	movwf	(___flmul@a+2)^0,c
  8064  001066  0E36               	movlw	54
  8065  001068  6E23               	movwf	(___flmul@a+3)^0,c
  8066  00106A  C1B0  F01C         	movff	powf@t,___flmul@b
  8067  00106E  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
  8068  001072  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
  8069  001076  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
  8070  00107A  EC35  F01F         	call	___flmul	;wreg free
  8071  00107E  C01C  F035         	movff	?___flmul,___flsub@b
  8072  001082  C01D  F036         	movff	?___flmul+1,___flsub@b+1
  8073  001086  C01E  F037         	movff	?___flmul+2,___flsub@b+2
  8074  00108A  C01F  F038         	movff	?___flmul+3,___flsub@b+3
  8075  00108E  0E3B               	movlw	59
  8076  001090  6E20               	movwf	___flmul@a^0,c
  8077  001092  0EAA               	movlw	170
  8078  001094  6E21               	movwf	(___flmul@a+1)^0,c
  8079  001096  0EB8               	movlw	184
  8080  001098  6E22               	movwf	(___flmul@a+2)^0,c
  8081  00109A  0E3F               	movlw	63
  8082  00109C  6E23               	movwf	(___flmul@a+3)^0,c
  8083  00109E  C144  F01C         	movff	powf@w,___flmul@b
  8084  0010A2  C145  F01D         	movff	powf@w+1,___flmul@b+1
  8085  0010A6  C146  F01E         	movff	powf@w+2,___flmul@b+2
  8086  0010AA  C147  F01F         	movff	powf@w+3,___flmul@b+3
  8087  0010AE  EC35  F01F         	call	___flmul	;wreg free
  8088  0010B2  C01C  F039         	movff	?___flmul,___flsub@a
  8089  0010B6  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
  8090  0010BA  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
  8091  0010BE  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
  8092  0010C2  EC52  F02D         	call	___flsub	;wreg free
  8093  0010C6  C035  F178         	movff	?___flsub,powf@v
  8094  0010CA  C036  F179         	movff	?___flsub+1,powf@v+1
  8095  0010CE  C037  F17A         	movff	?___flsub+2,powf@v+2
  8096  0010D2  C038  F17B         	movff	?___flsub+3,powf@v+3
  8097  0010D6  C174  F00C         	movff	powf@u,___fladd@b
  8098  0010DA  C175  F00D         	movff	powf@u+1,___fladd@b+1
  8099  0010DE  C176  F00E         	movff	powf@u+2,___fladd@b+2
  8100  0010E2  C177  F00F         	movff	powf@u+3,___fladd@b+3
  8101  0010E6  C178  F010         	movff	powf@v,___fladd@a
  8102  0010EA  C179  F011         	movff	powf@v+1,___fladd@a+1
  8103  0010EE  C17A  F012         	movff	powf@v+2,___fladd@a+2
  8104  0010F2  C17B  F013         	movff	powf@v+3,___fladd@a+3
  8105  0010F6  ECDE  F020         	call	___fladd	;wreg free
  8106  0010FA  C00C  F184         	movff	?___fladd,powf@t1
  8107  0010FE  C00D  F185         	movff	?___fladd+1,powf@t1+1
  8108  001102  C00E  F186         	movff	?___fladd+2,powf@t1+2
  8109  001106  C00F  F187         	movff	?___fladd+3,powf@t1+3
  8110  00110A  C184  F1B8         	movff	powf@t1,powf@__xc8_float_word
  8111  00110E  C185  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
  8112  001112  C186  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
  8113  001116  C187  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
  8114  00111A  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  8115  00111E  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  8116  001122  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  8117  001126  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  8118  00112A  0E00               	movlw	0
  8119  00112C  0101               	movlb	1	; () banked
  8120  00112E  1594               	andwf	powf@is& (0+255),w,b
  8121  001130  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  8122  001132  0EF0               	movlw	240
  8123  001134  1595               	andwf	(powf@is+1)& (0+255),w,b
  8124  001136  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  8125  001138  0EFF               	movlw	255
  8126  00113A  1596               	andwf	(powf@is+2)& (0+255),w,b
  8127  00113C  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  8128  00113E  0EFF               	movlw	255
  8129  001140  1597               	andwf	(powf@is+3)& (0+255),w,b
  8130  001142  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  8131                           
  8132                           ; BSR set to: 1
  8133  001144  C1B8  F184         	movff	powf@__xc8_float_word,powf@t1
  8134  001148  C1B9  F185         	movff	powf@__xc8_float_word+1,powf@t1+1
  8135  00114C  C1BA  F186         	movff	powf@__xc8_float_word+2,powf@t1+2
  8136  001150  C1BB  F187         	movff	powf@__xc8_float_word+3,powf@t1+3
  8137                           
  8138                           ; BSR set to: 1
  8139  001154  C174  F039         	movff	powf@u,___flsub@a
  8140  001158  C175  F03A         	movff	powf@u+1,___flsub@a+1
  8141  00115C  C176  F03B         	movff	powf@u+2,___flsub@a+2
  8142  001160  C177  F03C         	movff	powf@u+3,___flsub@a+3
  8143  001164  C184  F035         	movff	powf@t1,___flsub@b
  8144  001168  C185  F036         	movff	powf@t1+1,___flsub@b+1
  8145  00116C  C186  F037         	movff	powf@t1+2,___flsub@b+2
  8146  001170  C187  F038         	movff	powf@t1+3,___flsub@b+3
  8147  001174  EC52  F02D         	call	___flsub	;wreg free
  8148  001178  C035  F198         	movff	?___flsub,_powf$1657
  8149  00117C  C036  F199         	movff	?___flsub+1,_powf$1657+1
  8150  001180  C037  F19A         	movff	?___flsub+2,_powf$1657+2
  8151  001184  C038  F19B         	movff	?___flsub+3,_powf$1657+3
  8152  001188  C178  F035         	movff	powf@v,___flsub@b
  8153  00118C  C179  F036         	movff	powf@v+1,___flsub@b+1
  8154  001190  C17A  F037         	movff	powf@v+2,___flsub@b+2
  8155  001194  C17B  F038         	movff	powf@v+3,___flsub@b+3
  8156  001198  C198  F039         	movff	_powf$1657,___flsub@a
  8157  00119C  C199  F03A         	movff	_powf$1657+1,___flsub@a+1
  8158  0011A0  C19A  F03B         	movff	_powf$1657+2,___flsub@a+2
  8159  0011A4  C19B  F03C         	movff	_powf$1657+3,___flsub@a+3
  8160  0011A8  EC52  F02D         	call	___flsub	;wreg free
  8161  0011AC  EFF9  F00F         	goto	L8
  8162  0011B0                     l7115:
  8163                           
  8164                           ; BSR set to: 1
  8165  0011B0  0E00               	movlw	0
  8166  0011B2  6F80               	movwf	powf@n& (0+255),b
  8167  0011B4  0E00               	movlw	0
  8168  0011B6  6F81               	movwf	(powf@n+1)& (0+255),b
  8169  0011B8  0E00               	movlw	0
  8170  0011BA  6F82               	movwf	(powf@n+2)& (0+255),b
  8171  0011BC  0E00               	movlw	0
  8172  0011BE  6F83               	movwf	(powf@n+3)& (0+255),b
  8173                           
  8174                           ; BSR set to: 1
  8175  0011C0  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8176  0011C2  D006               	goto	u9420
  8177  0011C4  51AB               	movf	(powf@ix+3)& (0+255),w,b
  8178  0011C6  E137               	bnz	l7127
  8179  0011C8  0E80               	movlw	128
  8180  0011CA  5DAA               	subwf	(powf@ix+2)& (0+255),w,b
  8181  0011CC  B0D8               	btfsc	status,0,c
  8182  0011CE  D033               	goto	l7127
  8183  0011D0                     u9420:
  8184                           
  8185                           ; BSR set to: 1
  8186  0011D0  C170  F01C         	movff	powf@ax,___flmul@b
  8187  0011D4  C171  F01D         	movff	powf@ax+1,___flmul@b+1
  8188  0011D8  C172  F01E         	movff	powf@ax+2,___flmul@b+2
  8189  0011DC  C173  F01F         	movff	powf@ax+3,___flmul@b+3
  8190  0011E0  0E00               	movlw	0
  8191  0011E2  6E20               	movwf	___flmul@a^0,c
  8192  0011E4  0E00               	movlw	0
  8193  0011E6  6E21               	movwf	(___flmul@a+1)^0,c
  8194  0011E8  0E80               	movlw	128
  8195  0011EA  6E22               	movwf	(___flmul@a+2)^0,c
  8196  0011EC  0E4B               	movlw	75
  8197  0011EE  6E23               	movwf	(___flmul@a+3)^0,c
  8198  0011F0  EC35  F01F         	call	___flmul	;wreg free
  8199  0011F4  C01C  F170         	movff	?___flmul,powf@ax
  8200  0011F8  C01D  F171         	movff	?___flmul+1,powf@ax+1
  8201  0011FC  C01E  F172         	movff	?___flmul+2,powf@ax+2
  8202  001200  C01F  F173         	movff	?___flmul+3,powf@ax+3
  8203  001204  0EE8               	movlw	232
  8204  001206  0101               	movlb	1	; () banked
  8205  001208  2780               	addwf	powf@n& (0+255),f,b
  8206  00120A  0EFF               	movlw	255
  8207  00120C  2381               	addwfc	(powf@n+1)& (0+255),f,b
  8208  00120E  0EFF               	movlw	255
  8209  001210  2382               	addwfc	(powf@n+2)& (0+255),f,b
  8210  001212  0EFF               	movlw	255
  8211  001214  2383               	addwfc	(powf@n+3)& (0+255),f,b
  8212                           
  8213                           ; BSR set to: 1
  8214  001216  C170  F1B8         	movff	powf@ax,powf@__xc8_float_word
  8215  00121A  C171  F1B9         	movff	powf@ax+1,powf@__xc8_float_word+1
  8216  00121E  C172  F1BA         	movff	powf@ax+2,powf@__xc8_float_word+2
  8217  001222  C173  F1BB         	movff	powf@ax+3,powf@__xc8_float_word+3
  8218                           
  8219                           ; BSR set to: 1
  8220  001226  C1B8  F1A8         	movff	powf@__xc8_float_word,powf@ix
  8221  00122A  C1B9  F1A9         	movff	powf@__xc8_float_word+1,powf@ix+1
  8222  00122E  C1BA  F1AA         	movff	powf@__xc8_float_word+2,powf@ix+2
  8223  001232  C1BB  F1AB         	movff	powf@__xc8_float_word+3,powf@ix+3
  8224  001236                     l7127:
  8225                           
  8226                           ; BSR set to: 1
  8227  001236  0E17               	movlw	23
  8228  001238  6E5E               	movwf	??_powf^0,c
  8229  00123A  C1A8  F05F         	movff	powf@ix,??_powf+1
  8230  00123E  C1A9  F060         	movff	powf@ix+1,??_powf+2
  8231  001242  C1AA  F061         	movff	powf@ix+2,??_powf+3
  8232  001246  C1AB  F062         	movff	powf@ix+3,??_powf+4
  8233  00124A                     u9435:
  8234  00124A  665E               	tstfsz	??_powf^0,c
  8235  00124C  D001               	goto	u9436
  8236  00124E  D007               	goto	u9437
  8237  001250                     u9436:
  8238  001250  3462               	rlcf	(??_powf+4)^0,w,c
  8239  001252  3262               	rrcf	(??_powf+4)^0,f,c
  8240  001254  3261               	rrcf	(??_powf+3)^0,f,c
  8241  001256  3260               	rrcf	(??_powf+2)^0,f,c
  8242  001258  325F               	rrcf	(??_powf+1)^0,f,c
  8243  00125A  2E5E               	decfsz	??_powf^0,f,c
  8244  00125C  D7F6               	goto	u9435
  8245  00125E                     u9437:
  8246  00125E  0E81               	movlw	129
  8247  001260  245F               	addwf	(??_powf+1)^0,w,c
  8248  001262  6E63               	movwf	(??_powf+5)^0,c
  8249  001264  0EFF               	movlw	255
  8250  001266  2060               	addwfc	(??_powf+2)^0,w,c
  8251  001268  6E64               	movwf	(??_powf+6)^0,c
  8252  00126A  0EFF               	movlw	255
  8253  00126C  2061               	addwfc	(??_powf+3)^0,w,c
  8254  00126E  6E65               	movwf	(??_powf+7)^0,c
  8255  001270  0EFF               	movlw	255
  8256  001272  2062               	addwfc	(??_powf+4)^0,w,c
  8257  001274  6E66               	movwf	(??_powf+8)^0,c
  8258  001276  5063               	movf	(??_powf+5)^0,w,c
  8259  001278  0101               	movlb	1	; () banked
  8260  00127A  2780               	addwf	powf@n& (0+255),f,b
  8261  00127C  5064               	movf	(??_powf+6)^0,w,c
  8262  00127E  2381               	addwfc	(powf@n+1)& (0+255),f,b
  8263  001280  5065               	movf	(??_powf+7)^0,w,c
  8264  001282  2382               	addwfc	(powf@n+2)& (0+255),f,b
  8265  001284  5066               	movf	(??_powf+8)^0,w,c
  8266  001286  2383               	addwfc	(powf@n+3)& (0+255),f,b
  8267                           
  8268                           ; BSR set to: 1
  8269  001288  0EFF               	movlw	255
  8270  00128A  15A8               	andwf	powf@ix& (0+255),w,b
  8271  00128C  6FAC               	movwf	powf@j& (0+255),b
  8272  00128E  0EFF               	movlw	255
  8273  001290  15A9               	andwf	(powf@ix+1)& (0+255),w,b
  8274  001292  6FAD               	movwf	(powf@j+1)& (0+255),b
  8275  001294  0E7F               	movlw	127
  8276  001296  15AA               	andwf	(powf@ix+2)& (0+255),w,b
  8277  001298  6FAE               	movwf	(powf@j+2)& (0+255),b
  8278  00129A  0E00               	movlw	0
  8279  00129C  15AB               	andwf	(powf@ix+3)& (0+255),w,b
  8280  00129E  6FAF               	movwf	(powf@j+3)& (0+255),b
  8281                           
  8282                           ; BSR set to: 1
  8283  0012A0  0E00               	movlw	0
  8284  0012A2  11AC               	iorwf	powf@j& (0+255),w,b
  8285  0012A4  6FA8               	movwf	powf@ix& (0+255),b
  8286  0012A6  0E00               	movlw	0
  8287  0012A8  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  8288  0012AA  6FA9               	movwf	(powf@ix+1)& (0+255),b
  8289  0012AC  0E80               	movlw	128
  8290  0012AE  11AE               	iorwf	(powf@j+2)& (0+255),w,b
  8291  0012B0  6FAA               	movwf	(powf@ix+2)& (0+255),b
  8292  0012B2  0E3F               	movlw	63
  8293  0012B4  11AF               	iorwf	(powf@j+3)& (0+255),w,b
  8294  0012B6  6FAB               	movwf	(powf@ix+3)& (0+255),b
  8295                           
  8296                           ; BSR set to: 1
  8297  0012B8  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  8298  0012BA  D00A               	goto	u9440
  8299  0012BC  51AF               	movf	(powf@j+3)& (0+255),w,b
  8300  0012BE  E10A               	bnz	l7137
  8301  0012C0  0E72               	movlw	114
  8302  0012C2  5DAC               	subwf	powf@j& (0+255),w,b
  8303  0012C4  0EC4               	movlw	196
  8304  0012C6  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  8305  0012C8  0E1C               	movlw	28
  8306  0012CA  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  8307  0012CC  B0D8               	btfsc	status,0,c
  8308  0012CE  D002               	goto	l7137
  8309  0012D0                     u9440:
  8310                           
  8311                           ; BSR set to: 1
  8312  0012D0  0E00               	movlw	0
  8313  0012D2  D00D               	goto	L9
  8314  0012D4                     l7137:
  8315                           
  8316                           ; BSR set to: 1
  8317  0012D4  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  8318  0012D6  D00A               	goto	u9450
  8319  0012D8  51AF               	movf	(powf@j+3)& (0+255),w,b
  8320  0012DA  E111               	bnz	l7141
  8321  0012DC  0ED7               	movlw	215
  8322  0012DE  5DAC               	subwf	powf@j& (0+255),w,b
  8323  0012E0  0EB3               	movlw	179
  8324  0012E2  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  8325  0012E4  0E5D               	movlw	93
  8326  0012E6  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  8327  0012E8  B0D8               	btfsc	status,0,c
  8328  0012EA  D009               	goto	l7141
  8329  0012EC                     u9450:
  8330                           
  8331                           ; BSR set to: 1
  8332  0012EC  0E01               	movlw	1
  8333  0012EE                     L9:
  8334  0012EE  6FA0               	movwf	powf@k& (0+255),b
  8335  0012F0  0E00               	movlw	0
  8336  0012F2  6FA1               	movwf	(powf@k+1)& (0+255),b
  8337  0012F4  0E00               	movlw	0
  8338  0012F6  6FA2               	movwf	(powf@k+2)& (0+255),b
  8339  0012F8  0E00               	movlw	0
  8340  0012FA  6FA3               	movwf	(powf@k+3)& (0+255),b
  8341  0012FC  D016               	goto	l7147
  8342  0012FE                     l7141:
  8343                           
  8344                           ; BSR set to: 1
  8345  0012FE  0E00               	movlw	0
  8346  001300  6FA0               	movwf	powf@k& (0+255),b
  8347  001302  0E00               	movlw	0
  8348  001304  6FA1               	movwf	(powf@k+1)& (0+255),b
  8349  001306  0E00               	movlw	0
  8350  001308  6FA2               	movwf	(powf@k+2)& (0+255),b
  8351  00130A  0E00               	movlw	0
  8352  00130C  6FA3               	movwf	(powf@k+3)& (0+255),b
  8353                           
  8354                           ; BSR set to: 1
  8355  00130E  0E01               	movlw	1
  8356  001310  2780               	addwf	powf@n& (0+255),f,b
  8357  001312  0E00               	movlw	0
  8358  001314  2381               	addwfc	(powf@n+1)& (0+255),f,b
  8359  001316  2382               	addwfc	(powf@n+2)& (0+255),f,b
  8360  001318  2383               	addwfc	(powf@n+3)& (0+255),f,b
  8361                           
  8362                           ; BSR set to: 1
  8363  00131A  0E00               	movlw	0
  8364  00131C  27A8               	addwf	powf@ix& (0+255),f,b
  8365  00131E  0E00               	movlw	0
  8366  001320  23A9               	addwfc	(powf@ix+1)& (0+255),f,b
  8367  001322  0E80               	movlw	128
  8368  001324  23AA               	addwfc	(powf@ix+2)& (0+255),f,b
  8369  001326  0EFF               	movlw	255
  8370  001328  23AB               	addwfc	(powf@ix+3)& (0+255),f,b
  8371  00132A                     l7147:
  8372                           
  8373                           ; BSR set to: 1
  8374  00132A  C1A8  F1B8         	movff	powf@ix,powf@__xc8_float_word
  8375  00132E  C1A9  F1B9         	movff	powf@ix+1,powf@__xc8_float_word+1
  8376  001332  C1AA  F1BA         	movff	powf@ix+2,powf@__xc8_float_word+2
  8377  001336  C1AB  F1BB         	movff	powf@ix+3,powf@__xc8_float_word+3
  8378                           
  8379                           ; BSR set to: 1
  8380  00133A  C1B8  F170         	movff	powf@__xc8_float_word,powf@ax
  8381  00133E  C1B9  F171         	movff	powf@__xc8_float_word+1,powf@ax+1
  8382  001342  C1BA  F172         	movff	powf@__xc8_float_word+2,powf@ax+2
  8383  001346  C1BB  F173         	movff	powf@__xc8_float_word+3,powf@ax+3
  8384                           
  8385                           ; BSR set to: 1
  8386  00134A  C170  F035         	movff	powf@ax,___flsub@b
  8387  00134E  C171  F036         	movff	powf@ax+1,___flsub@b+1
  8388  001352  C172  F037         	movff	powf@ax+2,___flsub@b+2
  8389  001356  C173  F038         	movff	powf@ax+3,___flsub@b+3
  8390  00135A  C1A0  F05E         	movff	powf@k,??_powf
  8391  00135E  C1A1  F05F         	movff	powf@k+1,??_powf+1
  8392  001362  90D8               	bcf	status,0,c
  8393  001364  365E               	rlcf	??_powf^0,f,c
  8394  001366  365F               	rlcf	(??_powf+1)^0,f,c
  8395  001368  90D8               	bcf	status,0,c
  8396  00136A  365E               	rlcf	??_powf^0,f,c
  8397  00136C  365F               	rlcf	(??_powf+1)^0,f,c
  8398  00136E  0E69               	movlw	low _bp
  8399  001370  245E               	addwf	??_powf^0,w,c
  8400  001372  6EF6               	movwf	tblptrl,c
  8401  001374  0E06               	movlw	high _bp
  8402  001376  205F               	addwfc	(??_powf+1)^0,w,c
  8403  001378  6EF7               	movwf	tblptrh,c
  8404  00137A                     	if	0	;There are less than 3 active tblptr bytes
  8405  00137A                     	endif
  8406  00137A  0009               	tblrd		*+
  8407  00137C  CFF5 F039          	movff	tablat,___flsub@a
  8408  001380  0009               	tblrd		*+
  8409  001382  CFF5 F03A          	movff	tablat,___flsub@a+1
  8410  001386  0009               	tblrd		*+
  8411  001388  CFF5 F03B          	movff	tablat,___flsub@a+2
  8412  00138C  000A               	tblrd		*-
  8413  00138E  CFF5 F03C          	movff	tablat,___flsub@a+3
  8414  001392  EC52  F02D         	call	___flsub	;wreg free
  8415  001396  C035  F174         	movff	?___flsub,powf@u
  8416  00139A  C036  F175         	movff	?___flsub+1,powf@u+1
  8417  00139E  C037  F176         	movff	?___flsub+2,powf@u+2
  8418  0013A2  C038  F177         	movff	?___flsub+3,powf@u+3
  8419  0013A6  0E00               	movlw	0
  8420  0013A8  6E3D               	movwf	___fldiv@b^0,c
  8421  0013AA  0E00               	movlw	0
  8422  0013AC  6E3E               	movwf	(___fldiv@b+1)^0,c
  8423  0013AE  0E80               	movlw	128
  8424  0013B0  6E3F               	movwf	(___fldiv@b+2)^0,c
  8425  0013B2  0E3F               	movlw	63
  8426  0013B4  6E40               	movwf	(___fldiv@b+3)^0,c
  8427  0013B6  C170  F010         	movff	powf@ax,___fladd@a
  8428  0013BA  C171  F011         	movff	powf@ax+1,___fladd@a+1
  8429  0013BE  C172  F012         	movff	powf@ax+2,___fladd@a+2
  8430  0013C2  C173  F013         	movff	powf@ax+3,___fladd@a+3
  8431  0013C6  C1A0  F05E         	movff	powf@k,??_powf
  8432  0013CA  C1A1  F05F         	movff	powf@k+1,??_powf+1
  8433  0013CE  90D8               	bcf	status,0,c
  8434  0013D0  365E               	rlcf	??_powf^0,f,c
  8435  0013D2  365F               	rlcf	(??_powf+1)^0,f,c
  8436  0013D4  90D8               	bcf	status,0,c
  8437  0013D6  365E               	rlcf	??_powf^0,f,c
  8438  0013D8  365F               	rlcf	(??_powf+1)^0,f,c
  8439  0013DA  0E69               	movlw	low _bp
  8440  0013DC  245E               	addwf	??_powf^0,w,c
  8441  0013DE  6EF6               	movwf	tblptrl,c
  8442  0013E0  0E06               	movlw	high _bp
  8443  0013E2  205F               	addwfc	(??_powf+1)^0,w,c
  8444  0013E4  6EF7               	movwf	tblptrh,c
  8445  0013E6                     	if	0	;There are less than 3 active tblptr bytes
  8446  0013E6                     	endif
  8447  0013E6  0009               	tblrd		*+
  8448  0013E8  CFF5 F00C          	movff	tablat,___fladd@b
  8449  0013EC  0009               	tblrd		*+
  8450  0013EE  CFF5 F00D          	movff	tablat,___fladd@b+1
  8451  0013F2  0009               	tblrd		*+
  8452  0013F4  CFF5 F00E          	movff	tablat,___fladd@b+2
  8453  0013F8  000A               	tblrd		*-
  8454  0013FA  CFF5 F00F          	movff	tablat,___fladd@b+3
  8455  0013FE  ECDE  F020         	call	___fladd	;wreg free
  8456  001402  C00C  F041         	movff	?___fladd,___fldiv@a
  8457  001406  C00D  F042         	movff	?___fladd+1,___fldiv@a+1
  8458  00140A  C00E  F043         	movff	?___fladd+2,___fldiv@a+2
  8459  00140E  C00F  F044         	movff	?___fladd+3,___fldiv@a+3
  8460  001412  EC64  F022         	call	___fldiv	;wreg free
  8461  001416  C03D  F178         	movff	?___fldiv,powf@v
  8462  00141A  C03E  F179         	movff	?___fldiv+1,powf@v+1
  8463  00141E  C03F  F17A         	movff	?___fldiv+2,powf@v+2
  8464  001422  C040  F17B         	movff	?___fldiv+3,powf@v+3
  8465  001426  C174  F01C         	movff	powf@u,___flmul@b
  8466  00142A  C175  F01D         	movff	powf@u+1,___flmul@b+1
  8467  00142E  C176  F01E         	movff	powf@u+2,___flmul@b+2
  8468  001432  C177  F01F         	movff	powf@u+3,___flmul@b+3
  8469  001436  C178  F020         	movff	powf@v,___flmul@a
  8470  00143A  C179  F021         	movff	powf@v+1,___flmul@a+1
  8471  00143E  C17A  F022         	movff	powf@v+2,___flmul@a+2
  8472  001442  C17B  F023         	movff	powf@v+3,___flmul@a+3
  8473  001446  EC35  F01F         	call	___flmul	;wreg free
  8474  00144A  C01C  F15C         	movff	?___flmul,powf@s
  8475  00144E  C01D  F15D         	movff	?___flmul+1,powf@s+1
  8476  001452  C01E  F15E         	movff	?___flmul+2,powf@s+2
  8477  001456  C01F  F15F         	movff	?___flmul+3,powf@s+3
  8478  00145A  C15C  F16C         	movff	powf@s,powf@s_h
  8479  00145E  C15D  F16D         	movff	powf@s+1,powf@s_h+1
  8480  001462  C15E  F16E         	movff	powf@s+2,powf@s_h+2
  8481  001466  C15F  F16F         	movff	powf@s+3,powf@s_h+3
  8482  00146A  C16C  F1B8         	movff	powf@s_h,powf@__xc8_float_word
  8483  00146E  C16D  F1B9         	movff	powf@s_h+1,powf@__xc8_float_word+1
  8484  001472  C16E  F1BA         	movff	powf@s_h+2,powf@__xc8_float_word+2
  8485  001476  C16F  F1BB         	movff	powf@s_h+3,powf@__xc8_float_word+3
  8486  00147A  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  8487  00147E  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  8488  001482  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  8489  001486  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  8490  00148A  0E00               	movlw	0
  8491  00148C  0101               	movlb	1	; () banked
  8492  00148E  1594               	andwf	powf@is& (0+255),w,b
  8493  001490  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  8494  001492  0EF0               	movlw	240
  8495  001494  1595               	andwf	(powf@is+1)& (0+255),w,b
  8496  001496  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  8497  001498  0EFF               	movlw	255
  8498  00149A  1596               	andwf	(powf@is+2)& (0+255),w,b
  8499  00149C  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  8500  00149E  0EFF               	movlw	255
  8501  0014A0  1597               	andwf	(powf@is+3)& (0+255),w,b
  8502  0014A2  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  8503                           
  8504                           ; BSR set to: 1
  8505  0014A4  C1B8  F16C         	movff	powf@__xc8_float_word,powf@s_h
  8506  0014A8  C1B9  F16D         	movff	powf@__xc8_float_word+1,powf@s_h+1
  8507  0014AC  C1BA  F16E         	movff	powf@__xc8_float_word+2,powf@s_h+2
  8508  0014B0  C1BB  F16F         	movff	powf@__xc8_float_word+3,powf@s_h+3
  8509                           
  8510                           ; BSR set to: 1
  8511  0014B4  C1A8  F05E         	movff	powf@ix,??_powf
  8512  0014B8  C1A9  F05F         	movff	powf@ix+1,??_powf+1
  8513  0014BC  C1AA  F060         	movff	powf@ix+2,??_powf+2
  8514  0014C0  C1AB  F061         	movff	powf@ix+3,??_powf+3
  8515  0014C4  3461               	rlcf	(??_powf+3)^0,w,c
  8516  0014C6  3261               	rrcf	(??_powf+3)^0,f,c
  8517  0014C8  3260               	rrcf	(??_powf+2)^0,f,c
  8518  0014CA  325F               	rrcf	(??_powf+1)^0,f,c
  8519  0014CC  325E               	rrcf	??_powf^0,f,c
  8520  0014CE  0E00               	movlw	0
  8521  0014D0  145E               	andwf	??_powf^0,w,c
  8522  0014D2  6E62               	movwf	(??_powf+4)^0,c
  8523  0014D4  0EF0               	movlw	240
  8524  0014D6  145F               	andwf	(??_powf+1)^0,w,c
  8525  0014D8  6E63               	movwf	(??_powf+5)^0,c
  8526  0014DA  0EFF               	movlw	255
  8527  0014DC  1460               	andwf	(??_powf+2)^0,w,c
  8528  0014DE  6E64               	movwf	(??_powf+6)^0,c
  8529  0014E0  0EFF               	movlw	255
  8530  0014E2  1461               	andwf	(??_powf+3)^0,w,c
  8531  0014E4  6E65               	movwf	(??_powf+7)^0,c
  8532  0014E6  0E00               	movlw	0
  8533  0014E8  1062               	iorwf	(??_powf+4)^0,w,c
  8534  0014EA  6F94               	movwf	powf@is& (0+255),b
  8535  0014EC  0E00               	movlw	0
  8536  0014EE  1063               	iorwf	(??_powf+5)^0,w,c
  8537  0014F0  6F95               	movwf	(powf@is+1)& (0+255),b
  8538  0014F2  0E00               	movlw	0
  8539  0014F4  1064               	iorwf	(??_powf+6)^0,w,c
  8540  0014F6  6F96               	movwf	(powf@is+2)& (0+255),b
  8541  0014F8  0E20               	movlw	32
  8542  0014FA  1065               	iorwf	(??_powf+7)^0,w,c
  8543  0014FC  6F97               	movwf	(powf@is+3)& (0+255),b
  8544                           
  8545                           ; BSR set to: 1
  8546  0014FE  C1A0  F05E         	movff	powf@k,??_powf
  8547  001502  C1A1  F05F         	movff	powf@k+1,??_powf+1
  8548  001506  C1A2  F060         	movff	powf@k+2,??_powf+2
  8549  00150A  C1A3  F061         	movff	powf@k+3,??_powf+3
  8550  00150E  0E15               	movlw	21
  8551  001510                     u9465:
  8552  001510  90D8               	bcf	status,0,c
  8553  001512  365E               	rlcf	??_powf^0,f,c
  8554  001514  365F               	rlcf	(??_powf+1)^0,f,c
  8555  001516  3660               	rlcf	(??_powf+2)^0,f,c
  8556  001518  3661               	rlcf	(??_powf+3)^0,f,c
  8557  00151A  2EE8               	decfsz	wreg,f,c
  8558  00151C  D7F9               	goto	u9465
  8559  00151E  5194               	movf	powf@is& (0+255),w,b
  8560  001520  245E               	addwf	??_powf^0,w,c
  8561  001522  6E62               	movwf	(??_powf+4)^0,c
  8562  001524  5195               	movf	(powf@is+1)& (0+255),w,b
  8563  001526  205F               	addwfc	(??_powf+1)^0,w,c
  8564  001528  6E63               	movwf	(??_powf+5)^0,c
  8565  00152A  5196               	movf	(powf@is+2)& (0+255),w,b
  8566  00152C  2060               	addwfc	(??_powf+2)^0,w,c
  8567  00152E  6E64               	movwf	(??_powf+6)^0,c
  8568  001530  5197               	movf	(powf@is+3)& (0+255),w,b
  8569  001532  2061               	addwfc	(??_powf+3)^0,w,c
  8570  001534  6E65               	movwf	(??_powf+7)^0,c
  8571  001536  0E00               	movlw	0
  8572  001538  2462               	addwf	(??_powf+4)^0,w,c
  8573  00153A  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  8574  00153C  0E00               	movlw	0
  8575  00153E  2063               	addwfc	(??_powf+5)^0,w,c
  8576  001540  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  8577  001542  0E40               	movlw	64
  8578  001544  2064               	addwfc	(??_powf+6)^0,w,c
  8579  001546  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  8580  001548  0E00               	movlw	0
  8581  00154A  2065               	addwfc	(??_powf+7)^0,w,c
  8582  00154C  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  8583                           
  8584                           ; BSR set to: 1
  8585  00154E  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
  8586  001552  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
  8587  001556  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
  8588  00155A  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
  8589                           
  8590                           ; BSR set to: 1
  8591  00155E  C1A0  F05E         	movff	powf@k,??_powf
  8592  001562  C1A1  F05F         	movff	powf@k+1,??_powf+1
  8593  001566  90D8               	bcf	status,0,c
  8594  001568  365E               	rlcf	??_powf^0,f,c
  8595  00156A  365F               	rlcf	(??_powf+1)^0,f,c
  8596  00156C  90D8               	bcf	status,0,c
  8597  00156E  365E               	rlcf	??_powf^0,f,c
  8598  001570  365F               	rlcf	(??_powf+1)^0,f,c
  8599  001572  0E69               	movlw	low _bp
  8600  001574  245E               	addwf	??_powf^0,w,c
  8601  001576  6EF6               	movwf	tblptrl,c
  8602  001578  0E06               	movlw	high _bp
  8603  00157A  205F               	addwfc	(??_powf+1)^0,w,c
  8604  00157C  6EF7               	movwf	tblptrh,c
  8605  00157E                     	if	0	;There are less than 3 active tblptr bytes
  8606  00157E                     	endif
  8607  00157E  0009               	tblrd		*+
  8608  001580  CFF5 F039          	movff	tablat,___flsub@a
  8609  001584  0009               	tblrd		*+
  8610  001586  CFF5 F03A          	movff	tablat,___flsub@a+1
  8611  00158A  0009               	tblrd		*+
  8612  00158C  CFF5 F03B          	movff	tablat,___flsub@a+2
  8613  001590  000A               	tblrd		*-
  8614  001592  CFF5 F03C          	movff	tablat,___flsub@a+3
  8615  001596  C168  F035         	movff	powf@t_h,___flsub@b
  8616  00159A  C169  F036         	movff	powf@t_h+1,___flsub@b+1
  8617  00159E  C16A  F037         	movff	powf@t_h+2,___flsub@b+2
  8618  0015A2  C16B  F038         	movff	powf@t_h+3,___flsub@b+3
  8619  0015A6  EC52  F02D         	call	___flsub	;wreg free
  8620  0015AA  C035  F198         	movff	?___flsub,_powf$1657
  8621  0015AE  C036  F199         	movff	?___flsub+1,_powf$1657+1
  8622  0015B2  C037  F19A         	movff	?___flsub+2,_powf$1657+2
  8623  0015B6  C038  F19B         	movff	?___flsub+3,_powf$1657+3
  8624  0015BA  C170  F035         	movff	powf@ax,___flsub@b
  8625  0015BE  C171  F036         	movff	powf@ax+1,___flsub@b+1
  8626  0015C2  C172  F037         	movff	powf@ax+2,___flsub@b+2
  8627  0015C6  C173  F038         	movff	powf@ax+3,___flsub@b+3
  8628  0015CA  C198  F039         	movff	_powf$1657,___flsub@a
  8629  0015CE  C199  F03A         	movff	_powf$1657+1,___flsub@a+1
  8630  0015D2  C19A  F03B         	movff	_powf$1657+2,___flsub@a+2
  8631  0015D6  C19B  F03C         	movff	_powf$1657+3,___flsub@a+3
  8632  0015DA  EC52  F02D         	call	___flsub	;wreg free
  8633  0015DE  C035  F134         	movff	?___flsub,powf@t_l
  8634  0015E2  C036  F135         	movff	?___flsub+1,powf@t_l+1
  8635  0015E6  C037  F136         	movff	?___flsub+2,powf@t_l+2
  8636  0015EA  C038  F137         	movff	?___flsub+3,powf@t_l+3
  8637  0015EE  C168  F020         	movff	powf@t_h,___flmul@a
  8638  0015F2  C169  F021         	movff	powf@t_h+1,___flmul@a+1
  8639  0015F6  C16A  F022         	movff	powf@t_h+2,___flmul@a+2
  8640  0015FA  C16B  F023         	movff	powf@t_h+3,___flmul@a+3
  8641  0015FE  C16C  F01C         	movff	powf@s_h,___flmul@b
  8642  001602  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
  8643  001606  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
  8644  00160A  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
  8645  00160E  EC35  F01F         	call	___flmul	;wreg free
  8646  001612  C01C  F039         	movff	?___flmul,___flsub@a
  8647  001616  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
  8648  00161A  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
  8649  00161E  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
  8650  001622  C174  F035         	movff	powf@u,___flsub@b
  8651  001626  C175  F036         	movff	powf@u+1,___flsub@b+1
  8652  00162A  C176  F037         	movff	powf@u+2,___flsub@b+2
  8653  00162E  C177  F038         	movff	powf@u+3,___flsub@b+3
  8654  001632  EC52  F02D         	call	___flsub	;wreg free
  8655  001636  C035  F198         	movff	?___flsub,_powf$1657
  8656  00163A  C036  F199         	movff	?___flsub+1,_powf$1657+1
  8657  00163E  C037  F19A         	movff	?___flsub+2,_powf$1657+2
  8658  001642  C038  F19B         	movff	?___flsub+3,_powf$1657+3
  8659  001646  C134  F020         	movff	powf@t_l,___flmul@a
  8660  00164A  C135  F021         	movff	powf@t_l+1,___flmul@a+1
  8661  00164E  C136  F022         	movff	powf@t_l+2,___flmul@a+2
  8662  001652  C137  F023         	movff	powf@t_l+3,___flmul@a+3
  8663  001656  C16C  F01C         	movff	powf@s_h,___flmul@b
  8664  00165A  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
  8665  00165E  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
  8666  001662  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
  8667  001666  EC35  F01F         	call	___flmul	;wreg free
  8668  00166A  C01C  F039         	movff	?___flmul,___flsub@a
  8669  00166E  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
  8670  001672  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
  8671  001676  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
  8672  00167A  C198  F035         	movff	_powf$1657,___flsub@b
  8673  00167E  C199  F036         	movff	_powf$1657+1,___flsub@b+1
  8674  001682  C19A  F037         	movff	_powf$1657+2,___flsub@b+2
  8675  001686  C19B  F038         	movff	_powf$1657+3,___flsub@b+3
  8676  00168A  EC52  F02D         	call	___flsub	;wreg free
  8677  00168E  C035  F154         	movff	?___flsub,_powf$1655
  8678  001692  C036  F155         	movff	?___flsub+1,_powf$1655+1
  8679  001696  C037  F156         	movff	?___flsub+2,_powf$1655+2
  8680  00169A  C038  F157         	movff	?___flsub+3,_powf$1655+3
  8681  00169E  C154  F01C         	movff	_powf$1655,___flmul@b
  8682  0016A2  C155  F01D         	movff	_powf$1655+1,___flmul@b+1
  8683  0016A6  C156  F01E         	movff	_powf$1655+2,___flmul@b+2
  8684  0016AA  C157  F01F         	movff	_powf$1655+3,___flmul@b+3
  8685  0016AE  C178  F020         	movff	powf@v,___flmul@a
  8686  0016B2  C179  F021         	movff	powf@v+1,___flmul@a+1
  8687  0016B6  C17A  F022         	movff	powf@v+2,___flmul@a+2
  8688  0016BA  C17B  F023         	movff	powf@v+3,___flmul@a+3
  8689  0016BE  EC35  F01F         	call	___flmul	;wreg free
  8690  0016C2  C01C  F130         	movff	?___flmul,powf@s_l
  8691  0016C6  C01D  F131         	movff	?___flmul+1,powf@s_l+1
  8692  0016CA  C01E  F132         	movff	?___flmul+2,powf@s_l+2
  8693  0016CE  C01F  F133         	movff	?___flmul+3,powf@s_l+3
  8694  0016D2  C15C  F01C         	movff	powf@s,___flmul@b
  8695  0016D6  C15D  F01D         	movff	powf@s+1,___flmul@b+1
  8696  0016DA  C15E  F01E         	movff	powf@s+2,___flmul@b+2
  8697  0016DE  C15F  F01F         	movff	powf@s+3,___flmul@b+3
  8698  0016E2  C15C  F020         	movff	powf@s,___flmul@a
  8699  0016E6  C15D  F021         	movff	powf@s+1,___flmul@a+1
  8700  0016EA  C15E  F022         	movff	powf@s+2,___flmul@a+2
  8701  0016EE  C15F  F023         	movff	powf@s+3,___flmul@a+3
  8702  0016F2  EC35  F01F         	call	___flmul	;wreg free
  8703  0016F6  C01C  F18C         	movff	?___flmul,powf@s2
  8704  0016FA  C01D  F18D         	movff	?___flmul+1,powf@s2+1
  8705  0016FE  C01E  F18E         	movff	?___flmul+2,powf@s2+2
  8706  001702  C01F  F18F         	movff	?___flmul+3,powf@s2+3
  8707  001706  0E55               	movlw	85
  8708  001708  6E10               	movwf	___fladd@a^0,c
  8709  00170A  0E32               	movlw	50
  8710  00170C  6E11               	movwf	(___fladd@a+1)^0,c
  8711  00170E  0E6C               	movlw	108
  8712  001710  6E12               	movwf	(___fladd@a+2)^0,c
  8713  001712  0E3E               	movlw	62
  8714  001714  6E13               	movwf	(___fladd@a+3)^0,c
  8715  001716  0E42               	movlw	66
  8716  001718  6E20               	movwf	___flmul@a^0,c
  8717  00171A  0EF1               	movlw	241
  8718  00171C  6E21               	movwf	(___flmul@a+1)^0,c
  8719  00171E  0E53               	movlw	83
  8720  001720  6E22               	movwf	(___flmul@a+2)^0,c
  8721  001722  0E3E               	movlw	62
  8722  001724  6E23               	movwf	(___flmul@a+3)^0,c
  8723  001726  C18C  F01C         	movff	powf@s2,___flmul@b
  8724  00172A  C18D  F01D         	movff	powf@s2+1,___flmul@b+1
  8725  00172E  C18E  F01E         	movff	powf@s2+2,___flmul@b+2
  8726  001732  C18F  F01F         	movff	powf@s2+3,___flmul@b+3
  8727  001736  EC35  F01F         	call	___flmul	;wreg free
  8728  00173A  C01C  F00C         	movff	?___flmul,___fladd@b
  8729  00173E  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
  8730  001742  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
  8731  001746  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
  8732  00174A  ECDE  F020         	call	___fladd	;wreg free
  8733  00174E  C00C  F1A4         	movff	?___fladd,_powf$1654
  8734  001752  C00D  F1A5         	movff	?___fladd+1,_powf$1654+1
  8735  001756  C00E  F1A6         	movff	?___fladd+2,_powf$1654+2
  8736  00175A  C00F  F1A7         	movff	?___fladd+3,_powf$1654+3
  8737  00175E  0E05               	movlw	5
  8738  001760  6E10               	movwf	___fladd@a^0,c
  8739  001762  0EA3               	movlw	163
  8740  001764  6E11               	movwf	(___fladd@a+1)^0,c
  8741  001766  0E8B               	movlw	139
  8742  001768  6E12               	movwf	(___fladd@a+2)^0,c
  8743  00176A  0E3E               	movlw	62
  8744  00176C  6E13               	movwf	(___fladd@a+3)^0,c
  8745  00176E  C18C  F020         	movff	powf@s2,___flmul@a
  8746  001772  C18D  F021         	movff	powf@s2+1,___flmul@a+1
  8747  001776  C18E  F022         	movff	powf@s2+2,___flmul@a+2
  8748  00177A  C18F  F023         	movff	powf@s2+3,___flmul@a+3
  8749  00177E  C1A4  F01C         	movff	_powf$1654,___flmul@b
  8750  001782  C1A5  F01D         	movff	_powf$1654+1,___flmul@b+1
  8751  001786  C1A6  F01E         	movff	_powf$1654+2,___flmul@b+2
  8752  00178A  C1A7  F01F         	movff	_powf$1654+3,___flmul@b+3
  8753  00178E  EC35  F01F         	call	___flmul	;wreg free
  8754  001792  C01C  F00C         	movff	?___flmul,___fladd@b
  8755  001796  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
  8756  00179A  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
  8757  00179E  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
  8758  0017A2  ECDE  F020         	call	___fladd	;wreg free
  8759  0017A6  C00C  F154         	movff	?___fladd,_powf$1655
  8760  0017AA  C00D  F155         	movff	?___fladd+1,_powf$1655+1
  8761  0017AE  C00E  F156         	movff	?___fladd+2,_powf$1655+2
  8762  0017B2  C00F  F157         	movff	?___fladd+3,_powf$1655+3
  8763  0017B6  0EAB               	movlw	171
  8764  0017B8  6E10               	movwf	___fladd@a^0,c
  8765  0017BA  0EAA               	movlw	170
  8766  0017BC  6E11               	movwf	(___fladd@a+1)^0,c
  8767  0017BE  0EAA               	movlw	170
  8768  0017C0  6E12               	movwf	(___fladd@a+2)^0,c
  8769  0017C2  0E3E               	movlw	62
  8770  0017C4  6E13               	movwf	(___fladd@a+3)^0,c
  8771  0017C6  C18C  F020         	movff	powf@s2,___flmul@a
  8772  0017CA  C18D  F021         	movff	powf@s2+1,___flmul@a+1
  8773  0017CE  C18E  F022         	movff	powf@s2+2,___flmul@a+2
  8774  0017D2  C18F  F023         	movff	powf@s2+3,___flmul@a+3
  8775  0017D6  C154  F01C         	movff	_powf$1655,___flmul@b
  8776  0017DA  C155  F01D         	movff	_powf$1655+1,___flmul@b+1
  8777  0017DE  C156  F01E         	movff	_powf$1655+2,___flmul@b+2
  8778  0017E2  C157  F01F         	movff	_powf$1655+3,___flmul@b+3
  8779  0017E6  EC35  F01F         	call	___flmul	;wreg free
  8780  0017EA  C01C  F00C         	movff	?___flmul,___fladd@b
  8781  0017EE  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
  8782  0017F2  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
  8783  0017F6  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
  8784  0017FA  ECDE  F020         	call	___fladd	;wreg free
  8785  0017FE  C00C  F148         	movff	?___fladd,_powf$1656
  8786  001802  C00D  F149         	movff	?___fladd+1,_powf$1656+1
  8787  001806  C00E  F14A         	movff	?___fladd+2,_powf$1656+2
  8788  00180A  C00F  F14B         	movff	?___fladd+3,_powf$1656+3
  8789  00180E  0EB7               	movlw	183
  8790  001810  6E10               	movwf	___fladd@a^0,c
  8791  001812  0E6D               	movlw	109
  8792  001814  6E11               	movwf	(___fladd@a+1)^0,c
  8793  001816  0EDB               	movlw	219
  8794  001818  6E12               	movwf	(___fladd@a+2)^0,c
  8795  00181A  0E3E               	movlw	62
  8796  00181C  6E13               	movwf	(___fladd@a+3)^0,c
  8797  00181E  C18C  F020         	movff	powf@s2,___flmul@a
  8798  001822  C18D  F021         	movff	powf@s2+1,___flmul@a+1
  8799  001826  C18E  F022         	movff	powf@s2+2,___flmul@a+2
  8800  00182A  C18F  F023         	movff	powf@s2+3,___flmul@a+3
  8801  00182E  C148  F01C         	movff	_powf$1656,___flmul@b
  8802  001832  C149  F01D         	movff	_powf$1656+1,___flmul@b+1
  8803  001836  C14A  F01E         	movff	_powf$1656+2,___flmul@b+2
  8804  00183A  C14B  F01F         	movff	_powf$1656+3,___flmul@b+3
  8805  00183E  EC35  F01F         	call	___flmul	;wreg free
  8806  001842  C01C  F00C         	movff	?___flmul,___fladd@b
  8807  001846  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
  8808  00184A  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
  8809  00184E  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
  8810  001852  ECDE  F020         	call	___fladd	;wreg free
  8811  001856  C00C  F138         	movff	?___fladd,_powf$1658
  8812  00185A  C00D  F139         	movff	?___fladd+1,_powf$1658+1
  8813  00185E  C00E  F13A         	movff	?___fladd+2,_powf$1658+2
  8814  001862  C00F  F13B         	movff	?___fladd+3,_powf$1658+3
  8815  001866  0E9A               	movlw	154
  8816  001868  6E10               	movwf	___fladd@a^0,c
  8817  00186A  0E99               	movlw	153
  8818  00186C  6E11               	movwf	(___fladd@a+1)^0,c
  8819  00186E  0E19               	movlw	25
  8820  001870  6E12               	movwf	(___fladd@a+2)^0,c
  8821  001872  0E3F               	movlw	63
  8822  001874  6E13               	movwf	(___fladd@a+3)^0,c
  8823  001876  C18C  F020         	movff	powf@s2,___flmul@a
  8824  00187A  C18D  F021         	movff	powf@s2+1,___flmul@a+1
  8825  00187E  C18E  F022         	movff	powf@s2+2,___flmul@a+2
  8826  001882  C18F  F023         	movff	powf@s2+3,___flmul@a+3
  8827  001886  C138  F01C         	movff	_powf$1658,___flmul@b
  8828  00188A  C139  F01D         	movff	_powf$1658+1,___flmul@b+1
  8829  00188E  C13A  F01E         	movff	_powf$1658+2,___flmul@b+2
  8830  001892  C13B  F01F         	movff	_powf$1658+3,___flmul@b+3
  8831  001896  EC35  F01F         	call	___flmul	;wreg free
  8832  00189A  C01C  F00C         	movff	?___flmul,___fladd@b
  8833  00189E  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
  8834  0018A2  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
  8835  0018A6  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
  8836  0018AA  ECDE  F020         	call	___fladd	;wreg free
  8837  0018AE  C00C  F100         	movff	?___fladd,_powf$1659
  8838  0018B2  C00D  F101         	movff	?___fladd+1,_powf$1659+1
  8839  0018B6  C00E  F102         	movff	?___fladd+2,_powf$1659+2
  8840  0018BA  C00F  F103         	movff	?___fladd+3,_powf$1659+3
  8841  0018BE  C18C  F020         	movff	powf@s2,___flmul@a
  8842  0018C2  C18D  F021         	movff	powf@s2+1,___flmul@a+1
  8843  0018C6  C18E  F022         	movff	powf@s2+2,___flmul@a+2
  8844  0018CA  C18F  F023         	movff	powf@s2+3,___flmul@a+3
  8845  0018CE  C18C  F01C         	movff	powf@s2,___flmul@b
  8846  0018D2  C18D  F01D         	movff	powf@s2+1,___flmul@b+1
  8847  0018D6  C18E  F01E         	movff	powf@s2+2,___flmul@b+2
  8848  0018DA  C18F  F01F         	movff	powf@s2+3,___flmul@b+3
  8849  0018DE  EC35  F01F         	call	___flmul	;wreg free
  8850  0018E2  C01C  F104         	movff	?___flmul,_powf$1660
  8851  0018E6  C01D  F105         	movff	?___flmul+1,_powf$1660+1
  8852  0018EA  C01E  F106         	movff	?___flmul+2,_powf$1660+2
  8853  0018EE  C01F  F107         	movff	?___flmul+3,_powf$1660+3
  8854  0018F2  C100  F01C         	movff	_powf$1659,___flmul@b
  8855  0018F6  C101  F01D         	movff	_powf$1659+1,___flmul@b+1
  8856  0018FA  C102  F01E         	movff	_powf$1659+2,___flmul@b+2
  8857  0018FE  C103  F01F         	movff	_powf$1659+3,___flmul@b+3
  8858  001902  C104  F020         	movff	_powf$1660,___flmul@a
  8859  001906  C105  F021         	movff	_powf$1660+1,___flmul@a+1
  8860  00190A  C106  F022         	movff	_powf$1660+2,___flmul@a+2
  8861  00190E  C107  F023         	movff	_powf$1660+3,___flmul@a+3
  8862  001912  EC35  F01F         	call	___flmul	;wreg free
  8863  001916  C01C  F14C         	movff	?___flmul,powf@r
  8864  00191A  C01D  F14D         	movff	?___flmul+1,powf@r+1
  8865  00191E  C01E  F14E         	movff	?___flmul+2,powf@r+2
  8866  001922  C01F  F14F         	movff	?___flmul+3,powf@r+3
  8867  001926  C130  F020         	movff	powf@s_l,___flmul@a
  8868  00192A  C131  F021         	movff	powf@s_l+1,___flmul@a+1
  8869  00192E  C132  F022         	movff	powf@s_l+2,___flmul@a+2
  8870  001932  C133  F023         	movff	powf@s_l+3,___flmul@a+3
  8871  001936  C15C  F010         	movff	powf@s,___fladd@a
  8872  00193A  C15D  F011         	movff	powf@s+1,___fladd@a+1
  8873  00193E  C15E  F012         	movff	powf@s+2,___fladd@a+2
  8874  001942  C15F  F013         	movff	powf@s+3,___fladd@a+3
  8875  001946  C16C  F00C         	movff	powf@s_h,___fladd@b
  8876  00194A  C16D  F00D         	movff	powf@s_h+1,___fladd@b+1
  8877  00194E  C16E  F00E         	movff	powf@s_h+2,___fladd@b+2
  8878  001952  C16F  F00F         	movff	powf@s_h+3,___fladd@b+3
  8879  001956  ECDE  F020         	call	___fladd	;wreg free
  8880  00195A  C00C  F01C         	movff	?___fladd,___flmul@b
  8881  00195E  C00D  F01D         	movff	?___fladd+1,___flmul@b+1
  8882  001962  C00E  F01E         	movff	?___fladd+2,___flmul@b+2
  8883  001966  C00F  F01F         	movff	?___fladd+3,___flmul@b+3
  8884  00196A  EC35  F01F         	call	___flmul	;wreg free
  8885  00196E  C01C  F158         	movff	?___flmul,_powf$1661
  8886  001972  C01D  F159         	movff	?___flmul+1,_powf$1661+1
  8887  001976  C01E  F15A         	movff	?___flmul+2,_powf$1661+2
  8888  00197A  C01F  F15B         	movff	?___flmul+3,_powf$1661+3
  8889  00197E  C14C  F00C         	movff	powf@r,___fladd@b
  8890  001982  C14D  F00D         	movff	powf@r+1,___fladd@b+1
  8891  001986  C14E  F00E         	movff	powf@r+2,___fladd@b+2
  8892  00198A  C14F  F00F         	movff	powf@r+3,___fladd@b+3
  8893  00198E  C158  F010         	movff	_powf$1661,___fladd@a
  8894  001992  C159  F011         	movff	_powf$1661+1,___fladd@a+1
  8895  001996  C15A  F012         	movff	_powf$1661+2,___fladd@a+2
  8896  00199A  C15B  F013         	movff	_powf$1661+3,___fladd@a+3
  8897  00199E  ECDE  F020         	call	___fladd	;wreg free
  8898  0019A2  C00C  F14C         	movff	?___fladd,powf@r
  8899  0019A6  C00D  F14D         	movff	?___fladd+1,powf@r+1
  8900  0019AA  C00E  F14E         	movff	?___fladd+2,powf@r+2
  8901  0019AE  C00F  F14F         	movff	?___fladd+3,powf@r+3
  8902  0019B2  C16C  F01C         	movff	powf@s_h,___flmul@b
  8903  0019B6  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
  8904  0019BA  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
  8905  0019BE  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
  8906  0019C2  C16C  F020         	movff	powf@s_h,___flmul@a
  8907  0019C6  C16D  F021         	movff	powf@s_h+1,___flmul@a+1
  8908  0019CA  C16E  F022         	movff	powf@s_h+2,___flmul@a+2
  8909  0019CE  C16F  F023         	movff	powf@s_h+3,___flmul@a+3
  8910  0019D2  EC35  F01F         	call	___flmul	;wreg free
  8911  0019D6  C01C  F18C         	movff	?___flmul,powf@s2
  8912  0019DA  C01D  F18D         	movff	?___flmul+1,powf@s2+1
  8913  0019DE  C01E  F18E         	movff	?___flmul+2,powf@s2+2
  8914  0019E2  C01F  F18F         	movff	?___flmul+3,powf@s2+3
  8915  0019E6  0E00               	movlw	0
  8916  0019E8  6E10               	movwf	___fladd@a^0,c
  8917  0019EA  0E00               	movlw	0
  8918  0019EC  6E11               	movwf	(___fladd@a+1)^0,c
  8919  0019EE  0E40               	movlw	64
  8920  0019F0  6E12               	movwf	(___fladd@a+2)^0,c
  8921  0019F2  0E40               	movlw	64
  8922  0019F4  6E13               	movwf	(___fladd@a+3)^0,c
  8923  0019F6  C18C  F00C         	movff	powf@s2,___fladd@b
  8924  0019FA  C18D  F00D         	movff	powf@s2+1,___fladd@b+1
  8925  0019FE  C18E  F00E         	movff	powf@s2+2,___fladd@b+2
  8926  001A02  C18F  F00F         	movff	powf@s2+3,___fladd@b+3
  8927  001A06  ECDE  F020         	call	___fladd	;wreg free
  8928  001A0A  C00C  F158         	movff	?___fladd,_powf$1661
  8929  001A0E  C00D  F159         	movff	?___fladd+1,_powf$1661+1
  8930  001A12  C00E  F15A         	movff	?___fladd+2,_powf$1661+2
  8931  001A16  C00F  F15B         	movff	?___fladd+3,_powf$1661+3
  8932  001A1A  C158  F00C         	movff	_powf$1661,___fladd@b
  8933  001A1E  C159  F00D         	movff	_powf$1661+1,___fladd@b+1
  8934  001A22  C15A  F00E         	movff	_powf$1661+2,___fladd@b+2
  8935  001A26  C15B  F00F         	movff	_powf$1661+3,___fladd@b+3
  8936  001A2A  C14C  F010         	movff	powf@r,___fladd@a
  8937  001A2E  C14D  F011         	movff	powf@r+1,___fladd@a+1
  8938  001A32  C14E  F012         	movff	powf@r+2,___fladd@a+2
  8939  001A36  C14F  F013         	movff	powf@r+3,___fladd@a+3
  8940  001A3A  ECDE  F020         	call	___fladd	;wreg free
  8941  001A3E  C00C  F168         	movff	?___fladd,powf@t_h
  8942  001A42  C00D  F169         	movff	?___fladd+1,powf@t_h+1
  8943  001A46  C00E  F16A         	movff	?___fladd+2,powf@t_h+2
  8944  001A4A  C00F  F16B         	movff	?___fladd+3,powf@t_h+3
  8945  001A4E  C168  F1B8         	movff	powf@t_h,powf@__xc8_float_word
  8946  001A52  C169  F1B9         	movff	powf@t_h+1,powf@__xc8_float_word+1
  8947  001A56  C16A  F1BA         	movff	powf@t_h+2,powf@__xc8_float_word+2
  8948  001A5A  C16B  F1BB         	movff	powf@t_h+3,powf@__xc8_float_word+3
  8949  001A5E  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  8950  001A62  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  8951  001A66  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  8952  001A6A  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  8953  001A6E  0E00               	movlw	0
  8954  001A70  0101               	movlb	1	; () banked
  8955  001A72  1594               	andwf	powf@is& (0+255),w,b
  8956  001A74  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  8957  001A76  0EF0               	movlw	240
  8958  001A78  1595               	andwf	(powf@is+1)& (0+255),w,b
  8959  001A7A  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  8960  001A7C  0EFF               	movlw	255
  8961  001A7E  1596               	andwf	(powf@is+2)& (0+255),w,b
  8962  001A80  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  8963  001A82  0EFF               	movlw	255
  8964  001A84  1597               	andwf	(powf@is+3)& (0+255),w,b
  8965  001A86  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  8966                           
  8967                           ; BSR set to: 1
  8968  001A88  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
  8969  001A8C  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
  8970  001A90  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
  8971  001A94  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
  8972                           
  8973                           ; BSR set to: 1
  8974  001A98  0E00               	movlw	0
  8975  001A9A  6E10               	movwf	___fladd@a^0,c
  8976  001A9C  0E00               	movlw	0
  8977  001A9E  6E11               	movwf	(___fladd@a+1)^0,c
  8978  001AA0  0E40               	movlw	64
  8979  001AA2  6E12               	movwf	(___fladd@a+2)^0,c
  8980  001AA4  0EC0               	movlw	192
  8981  001AA6  6E13               	movwf	(___fladd@a+3)^0,c
  8982  001AA8  C168  F00C         	movff	powf@t_h,___fladd@b
  8983  001AAC  C169  F00D         	movff	powf@t_h+1,___fladd@b+1
  8984  001AB0  C16A  F00E         	movff	powf@t_h+2,___fladd@b+2
  8985  001AB4  C16B  F00F         	movff	powf@t_h+3,___fladd@b+3
  8986  001AB8  ECDE  F020         	call	___fladd	;wreg free
  8987  001ABC  C00C  F13C         	movff	?___fladd,_powf$1662
  8988  001AC0  C00D  F13D         	movff	?___fladd+1,_powf$1662+1
  8989  001AC4  C00E  F13E         	movff	?___fladd+2,_powf$1662+2
  8990  001AC8  C00F  F13F         	movff	?___fladd+3,_powf$1662+3
  8991  001ACC  C18C  F039         	movff	powf@s2,___flsub@a
  8992  001AD0  C18D  F03A         	movff	powf@s2+1,___flsub@a+1
  8993  001AD4  C18E  F03B         	movff	powf@s2+2,___flsub@a+2
  8994  001AD8  C18F  F03C         	movff	powf@s2+3,___flsub@a+3
  8995  001ADC  C13C  F035         	movff	_powf$1662,___flsub@b
  8996  001AE0  C13D  F036         	movff	_powf$1662+1,___flsub@b+1
  8997  001AE4  C13E  F037         	movff	_powf$1662+2,___flsub@b+2
  8998  001AE8  C13F  F038         	movff	_powf$1662+3,___flsub@b+3
  8999  001AEC  EC52  F02D         	call	___flsub	;wreg free
  9000  001AF0  C035  F140         	movff	?___flsub,_powf$1663
  9001  001AF4  C036  F141         	movff	?___flsub+1,_powf$1663+1
  9002  001AF8  C037  F142         	movff	?___flsub+2,_powf$1663+2
  9003  001AFC  C038  F143         	movff	?___flsub+3,_powf$1663+3
  9004  001B00  C14C  F035         	movff	powf@r,___flsub@b
  9005  001B04  C14D  F036         	movff	powf@r+1,___flsub@b+1
  9006  001B08  C14E  F037         	movff	powf@r+2,___flsub@b+2
  9007  001B0C  C14F  F038         	movff	powf@r+3,___flsub@b+3
  9008  001B10  C140  F039         	movff	_powf$1663,___flsub@a
  9009  001B14  C141  F03A         	movff	_powf$1663+1,___flsub@a+1
  9010  001B18  C142  F03B         	movff	_powf$1663+2,___flsub@a+2
  9011  001B1C  C143  F03C         	movff	_powf$1663+3,___flsub@a+3
  9012  001B20  EC52  F02D         	call	___flsub	;wreg free
  9013  001B24  C035  F134         	movff	?___flsub,powf@t_l
  9014  001B28  C036  F135         	movff	?___flsub+1,powf@t_l+1
  9015  001B2C  C037  F136         	movff	?___flsub+2,powf@t_l+2
  9016  001B30  C038  F137         	movff	?___flsub+3,powf@t_l+3
  9017  001B34  C16C  F01C         	movff	powf@s_h,___flmul@b
  9018  001B38  C16D  F01D         	movff	powf@s_h+1,___flmul@b+1
  9019  001B3C  C16E  F01E         	movff	powf@s_h+2,___flmul@b+2
  9020  001B40  C16F  F01F         	movff	powf@s_h+3,___flmul@b+3
  9021  001B44  C168  F020         	movff	powf@t_h,___flmul@a
  9022  001B48  C169  F021         	movff	powf@t_h+1,___flmul@a+1
  9023  001B4C  C16A  F022         	movff	powf@t_h+2,___flmul@a+2
  9024  001B50  C16B  F023         	movff	powf@t_h+3,___flmul@a+3
  9025  001B54  EC35  F01F         	call	___flmul	;wreg free
  9026  001B58  C01C  F174         	movff	?___flmul,powf@u
  9027  001B5C  C01D  F175         	movff	?___flmul+1,powf@u+1
  9028  001B60  C01E  F176         	movff	?___flmul+2,powf@u+2
  9029  001B64  C01F  F177         	movff	?___flmul+3,powf@u+3
  9030  001B68  C168  F020         	movff	powf@t_h,___flmul@a
  9031  001B6C  C169  F021         	movff	powf@t_h+1,___flmul@a+1
  9032  001B70  C16A  F022         	movff	powf@t_h+2,___flmul@a+2
  9033  001B74  C16B  F023         	movff	powf@t_h+3,___flmul@a+3
  9034  001B78  C130  F01C         	movff	powf@s_l,___flmul@b
  9035  001B7C  C131  F01D         	movff	powf@s_l+1,___flmul@b+1
  9036  001B80  C132  F01E         	movff	powf@s_l+2,___flmul@b+2
  9037  001B84  C133  F01F         	movff	powf@s_l+3,___flmul@b+3
  9038  001B88  EC35  F01F         	call	___flmul	;wreg free
  9039  001B8C  C01C  F00C         	movff	?___flmul,___fladd@b
  9040  001B90  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
  9041  001B94  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
  9042  001B98  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
  9043  001B9C  C15C  F020         	movff	powf@s,___flmul@a
  9044  001BA0  C15D  F021         	movff	powf@s+1,___flmul@a+1
  9045  001BA4  C15E  F022         	movff	powf@s+2,___flmul@a+2
  9046  001BA8  C15F  F023         	movff	powf@s+3,___flmul@a+3
  9047  001BAC  C134  F01C         	movff	powf@t_l,___flmul@b
  9048  001BB0  C135  F01D         	movff	powf@t_l+1,___flmul@b+1
  9049  001BB4  C136  F01E         	movff	powf@t_l+2,___flmul@b+2
  9050  001BB8  C137  F01F         	movff	powf@t_l+3,___flmul@b+3
  9051  001BBC  EC35  F01F         	call	___flmul	;wreg free
  9052  001BC0  C01C  F010         	movff	?___flmul,___fladd@a
  9053  001BC4  C01D  F011         	movff	?___flmul+1,___fladd@a+1
  9054  001BC8  C01E  F012         	movff	?___flmul+2,___fladd@a+2
  9055  001BCC  C01F  F013         	movff	?___flmul+3,___fladd@a+3
  9056  001BD0  ECDE  F020         	call	___fladd	;wreg free
  9057  001BD4  C00C  F178         	movff	?___fladd,powf@v
  9058  001BD8  C00D  F179         	movff	?___fladd+1,powf@v+1
  9059  001BDC  C00E  F17A         	movff	?___fladd+2,powf@v+2
  9060  001BE0  C00F  F17B         	movff	?___fladd+3,powf@v+3
  9061  001BE4  C174  F00C         	movff	powf@u,___fladd@b
  9062  001BE8  C175  F00D         	movff	powf@u+1,___fladd@b+1
  9063  001BEC  C176  F00E         	movff	powf@u+2,___fladd@b+2
  9064  001BF0  C177  F00F         	movff	powf@u+3,___fladd@b+3
  9065  001BF4  C178  F010         	movff	powf@v,___fladd@a
  9066  001BF8  C179  F011         	movff	powf@v+1,___fladd@a+1
  9067  001BFC  C17A  F012         	movff	powf@v+2,___fladd@a+2
  9068  001C00  C17B  F013         	movff	powf@v+3,___fladd@a+3
  9069  001C04  ECDE  F020         	call	___fladd	;wreg free
  9070  001C08  C00C  F19C         	movff	?___fladd,powf@p_h
  9071  001C0C  C00D  F19D         	movff	?___fladd+1,powf@p_h+1
  9072  001C10  C00E  F19E         	movff	?___fladd+2,powf@p_h+2
  9073  001C14  C00F  F19F         	movff	?___fladd+3,powf@p_h+3
  9074  001C18  C19C  F1B8         	movff	powf@p_h,powf@__xc8_float_word
  9075  001C1C  C19D  F1B9         	movff	powf@p_h+1,powf@__xc8_float_word+1
  9076  001C20  C19E  F1BA         	movff	powf@p_h+2,powf@__xc8_float_word+2
  9077  001C24  C19F  F1BB         	movff	powf@p_h+3,powf@__xc8_float_word+3
  9078  001C28  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  9079  001C2C  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  9080  001C30  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  9081  001C34  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  9082  001C38  0E00               	movlw	0
  9083  001C3A  0101               	movlb	1	; () banked
  9084  001C3C  1594               	andwf	powf@is& (0+255),w,b
  9085  001C3E  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9086  001C40  0EF0               	movlw	240
  9087  001C42  1595               	andwf	(powf@is+1)& (0+255),w,b
  9088  001C44  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9089  001C46  0EFF               	movlw	255
  9090  001C48  1596               	andwf	(powf@is+2)& (0+255),w,b
  9091  001C4A  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9092  001C4C  0EFF               	movlw	255
  9093  001C4E  1597               	andwf	(powf@is+3)& (0+255),w,b
  9094  001C50  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9095                           
  9096                           ; BSR set to: 1
  9097  001C52  C1B8  F19C         	movff	powf@__xc8_float_word,powf@p_h
  9098  001C56  C1B9  F19D         	movff	powf@__xc8_float_word+1,powf@p_h+1
  9099  001C5A  C1BA  F19E         	movff	powf@__xc8_float_word+2,powf@p_h+2
  9100  001C5E  C1BB  F19F         	movff	powf@__xc8_float_word+3,powf@p_h+3
  9101                           
  9102                           ; BSR set to: 1
  9103  001C62  C174  F039         	movff	powf@u,___flsub@a
  9104  001C66  C175  F03A         	movff	powf@u+1,___flsub@a+1
  9105  001C6A  C176  F03B         	movff	powf@u+2,___flsub@a+2
  9106  001C6E  C177  F03C         	movff	powf@u+3,___flsub@a+3
  9107  001C72  C19C  F035         	movff	powf@p_h,___flsub@b
  9108  001C76  C19D  F036         	movff	powf@p_h+1,___flsub@b+1
  9109  001C7A  C19E  F037         	movff	powf@p_h+2,___flsub@b+2
  9110  001C7E  C19F  F038         	movff	powf@p_h+3,___flsub@b+3
  9111  001C82  EC52  F02D         	call	___flsub	;wreg free
  9112  001C86  C035  F198         	movff	?___flsub,_powf$1657
  9113  001C8A  C036  F199         	movff	?___flsub+1,_powf$1657+1
  9114  001C8E  C037  F19A         	movff	?___flsub+2,_powf$1657+2
  9115  001C92  C038  F19B         	movff	?___flsub+3,_powf$1657+3
  9116  001C96  C178  F035         	movff	powf@v,___flsub@b
  9117  001C9A  C179  F036         	movff	powf@v+1,___flsub@b+1
  9118  001C9E  C17A  F037         	movff	powf@v+2,___flsub@b+2
  9119  001CA2  C17B  F038         	movff	powf@v+3,___flsub@b+3
  9120  001CA6  C198  F039         	movff	_powf$1657,___flsub@a
  9121  001CAA  C199  F03A         	movff	_powf$1657+1,___flsub@a+1
  9122  001CAE  C19A  F03B         	movff	_powf$1657+2,___flsub@a+2
  9123  001CB2  C19B  F03C         	movff	_powf$1657+3,___flsub@a+3
  9124  001CB6  EC52  F02D         	call	___flsub	;wreg free
  9125  001CBA  C035  F164         	movff	?___flsub,powf@p_l
  9126  001CBE  C036  F165         	movff	?___flsub+1,powf@p_l+1
  9127  001CC2  C037  F166         	movff	?___flsub+2,powf@p_l+2
  9128  001CC6  C038  F167         	movff	?___flsub+3,powf@p_l+3
  9129  001CCA  C19C  F01C         	movff	powf@p_h,___flmul@b
  9130  001CCE  C19D  F01D         	movff	powf@p_h+1,___flmul@b+1
  9131  001CD2  C19E  F01E         	movff	powf@p_h+2,___flmul@b+2
  9132  001CD6  C19F  F01F         	movff	powf@p_h+3,___flmul@b+3
  9133  001CDA  0E00               	movlw	0
  9134  001CDC  6E20               	movwf	___flmul@a^0,c
  9135  001CDE  0E40               	movlw	64
  9136  001CE0  6E21               	movwf	(___flmul@a+1)^0,c
  9137  001CE2  0E76               	movlw	118
  9138  001CE4  6E22               	movwf	(___flmul@a+2)^0,c
  9139  001CE6  0E3F               	movlw	63
  9140  001CE8  6E23               	movwf	(___flmul@a+3)^0,c
  9141  001CEA  EC35  F01F         	call	___flmul	;wreg free
  9142  001CEE  C01C  F120         	movff	?___flmul,powf@z_h
  9143  001CF2  C01D  F121         	movff	?___flmul+1,powf@z_h+1
  9144  001CF6  C01E  F122         	movff	?___flmul+2,powf@z_h+2
  9145  001CFA  C01F  F123         	movff	?___flmul+3,powf@z_h+3
  9146  001CFE  0E4F               	movlw	79
  9147  001D00  6E20               	movwf	___flmul@a^0,c
  9148  001D02  0E38               	movlw	56
  9149  001D04  6E21               	movwf	(___flmul@a+1)^0,c
  9150  001D06  0E76               	movlw	118
  9151  001D08  6E22               	movwf	(___flmul@a+2)^0,c
  9152  001D0A  0E3F               	movlw	63
  9153  001D0C  6E23               	movwf	(___flmul@a+3)^0,c
  9154  001D0E  C164  F01C         	movff	powf@p_l,___flmul@b
  9155  001D12  C165  F01D         	movff	powf@p_l+1,___flmul@b+1
  9156  001D16  C166  F01E         	movff	powf@p_l+2,___flmul@b+2
  9157  001D1A  C167  F01F         	movff	powf@p_l+3,___flmul@b+3
  9158  001D1E  EC35  F01F         	call	___flmul	;wreg free
  9159  001D22  C01C  F010         	movff	?___flmul,___fladd@a
  9160  001D26  C01D  F011         	movff	?___flmul+1,___fladd@a+1
  9161  001D2A  C01E  F012         	movff	?___flmul+2,___fladd@a+2
  9162  001D2E  C01F  F013         	movff	?___flmul+3,___fladd@a+3
  9163  001D32  0EC6               	movlw	198
  9164  001D34  6E20               	movwf	___flmul@a^0,c
  9165  001D36  0E23               	movlw	35
  9166  001D38  6E21               	movwf	(___flmul@a+1)^0,c
  9167  001D3A  0EF6               	movlw	246
  9168  001D3C  6E22               	movwf	(___flmul@a+2)^0,c
  9169  001D3E  0EB8               	movlw	184
  9170  001D40  6E23               	movwf	(___flmul@a+3)^0,c
  9171  001D42  C19C  F01C         	movff	powf@p_h,___flmul@b
  9172  001D46  C19D  F01D         	movff	powf@p_h+1,___flmul@b+1
  9173  001D4A  C19E  F01E         	movff	powf@p_h+2,___flmul@b+2
  9174  001D4E  C19F  F01F         	movff	powf@p_h+3,___flmul@b+3
  9175  001D52  EC35  F01F         	call	___flmul	;wreg free
  9176  001D56  C01C  F00C         	movff	?___flmul,___fladd@b
  9177  001D5A  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
  9178  001D5E  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
  9179  001D62  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
  9180  001D66  ECDE  F020         	call	___fladd	;wreg free
  9181  001D6A  C00C  F158         	movff	?___fladd,_powf$1661
  9182  001D6E  C00D  F159         	movff	?___fladd+1,_powf$1661+1
  9183  001D72  C00E  F15A         	movff	?___fladd+2,_powf$1661+2
  9184  001D76  C00F  F15B         	movff	?___fladd+3,_powf$1661+3
  9185  001D7A  C158  F00C         	movff	_powf$1661,___fladd@b
  9186  001D7E  C159  F00D         	movff	_powf$1661+1,___fladd@b+1
  9187  001D82  C15A  F00E         	movff	_powf$1661+2,___fladd@b+2
  9188  001D86  C15B  F00F         	movff	_powf$1661+3,___fladd@b+3
  9189  001D8A  C1A0  F05E         	movff	powf@k,??_powf
  9190  001D8E  C1A1  F05F         	movff	powf@k+1,??_powf+1
  9191  001D92  90D8               	bcf	status,0,c
  9192  001D94  365E               	rlcf	??_powf^0,f,c
  9193  001D96  365F               	rlcf	(??_powf+1)^0,f,c
  9194  001D98  90D8               	bcf	status,0,c
  9195  001D9A  365E               	rlcf	??_powf^0,f,c
  9196  001D9C  365F               	rlcf	(??_powf+1)^0,f,c
  9197  001D9E  0E01               	movlw	low _dp_l
  9198  001DA0  245E               	addwf	??_powf^0,w,c
  9199  001DA2  6EF6               	movwf	tblptrl,c
  9200  001DA4  0E06               	movlw	high _dp_l
  9201  001DA6  205F               	addwfc	(??_powf+1)^0,w,c
  9202  001DA8  6EF7               	movwf	tblptrh,c
  9203  001DAA                     	if	0	;There are less than 3 active tblptr bytes
  9204  001DAA                     	endif
  9205  001DAA  0009               	tblrd		*+
  9206  001DAC  CFF5 F010          	movff	tablat,___fladd@a
  9207  001DB0  0009               	tblrd		*+
  9208  001DB2  CFF5 F011          	movff	tablat,___fladd@a+1
  9209  001DB6  0009               	tblrd		*+
  9210  001DB8  CFF5 F012          	movff	tablat,___fladd@a+2
  9211  001DBC  000A               	tblrd		*-
  9212  001DBE  CFF5 F013          	movff	tablat,___fladd@a+3
  9213  001DC2  ECDE  F020         	call	___fladd	;wreg free
  9214  001DC6  C00C  F124         	movff	?___fladd,powf@z_l
  9215  001DCA  C00D  F125         	movff	?___fladd+1,powf@z_l+1
  9216  001DCE  C00E  F126         	movff	?___fladd+2,powf@z_l+2
  9217  001DD2  C00F  F127         	movff	?___fladd+3,powf@z_l+3
  9218  001DD6  C180  F00C         	movff	powf@n,___xxtofl@val
  9219  001DDA  C181  F00D         	movff	powf@n+1,___xxtofl@val+1
  9220  001DDE  C182  F00E         	movff	powf@n+2,___xxtofl@val+2
  9221  001DE2  C183  F00F         	movff	powf@n+3,___xxtofl@val+3
  9222  001DE6  0E01               	movlw	1
  9223  001DE8  ECAF  F027         	call	___xxtofl
  9224  001DEC  C00C  F1B0         	movff	?___xxtofl,powf@t
  9225  001DF0  C00D  F1B1         	movff	?___xxtofl+1,powf@t+1
  9226  001DF4  C00E  F1B2         	movff	?___xxtofl+2,powf@t+2
  9227  001DF8  C00F  F1B3         	movff	?___xxtofl+3,powf@t+3
  9228  001DFC  C124  F010         	movff	powf@z_l,___fladd@a
  9229  001E00  C125  F011         	movff	powf@z_l+1,___fladd@a+1
  9230  001E04  C126  F012         	movff	powf@z_l+2,___fladd@a+2
  9231  001E08  C127  F013         	movff	powf@z_l+3,___fladd@a+3
  9232  001E0C  C120  F00C         	movff	powf@z_h,___fladd@b
  9233  001E10  C121  F00D         	movff	powf@z_h+1,___fladd@b+1
  9234  001E14  C122  F00E         	movff	powf@z_h+2,___fladd@b+2
  9235  001E18  C123  F00F         	movff	powf@z_h+3,___fladd@b+3
  9236  001E1C  ECDE  F020         	call	___fladd	;wreg free
  9237  001E20  C00C  F158         	movff	?___fladd,_powf$1661
  9238  001E24  C00D  F159         	movff	?___fladd+1,_powf$1661+1
  9239  001E28  C00E  F15A         	movff	?___fladd+2,_powf$1661+2
  9240  001E2C  C00F  F15B         	movff	?___fladd+3,_powf$1661+3
  9241  001E30  C1A0  F05E         	movff	powf@k,??_powf
  9242  001E34  C1A1  F05F         	movff	powf@k+1,??_powf+1
  9243  001E38  90D8               	bcf	status,0,c
  9244  001E3A  365E               	rlcf	??_powf^0,f,c
  9245  001E3C  365F               	rlcf	(??_powf+1)^0,f,c
  9246  001E3E  90D8               	bcf	status,0,c
  9247  001E40  365E               	rlcf	??_powf^0,f,c
  9248  001E42  365F               	rlcf	(??_powf+1)^0,f,c
  9249  001E44  0E09               	movlw	low _dp_h
  9250  001E46  245E               	addwf	??_powf^0,w,c
  9251  001E48  6EF6               	movwf	tblptrl,c
  9252  001E4A  0E06               	movlw	high _dp_h
  9253  001E4C  205F               	addwfc	(??_powf+1)^0,w,c
  9254  001E4E  6EF7               	movwf	tblptrh,c
  9255  001E50                     	if	0	;There are less than 3 active tblptr bytes
  9256  001E50                     	endif
  9257  001E50  0009               	tblrd		*+
  9258  001E52  CFF5 F010          	movff	tablat,___fladd@a
  9259  001E56  0009               	tblrd		*+
  9260  001E58  CFF5 F011          	movff	tablat,___fladd@a+1
  9261  001E5C  0009               	tblrd		*+
  9262  001E5E  CFF5 F012          	movff	tablat,___fladd@a+2
  9263  001E62  000A               	tblrd		*-
  9264  001E64  CFF5 F013          	movff	tablat,___fladd@a+3
  9265  001E68  C158  F00C         	movff	_powf$1661,___fladd@b
  9266  001E6C  C159  F00D         	movff	_powf$1661+1,___fladd@b+1
  9267  001E70  C15A  F00E         	movff	_powf$1661+2,___fladd@b+2
  9268  001E74  C15B  F00F         	movff	_powf$1661+3,___fladd@b+3
  9269  001E78  ECDE  F020         	call	___fladd	;wreg free
  9270  001E7C  C00C  F108         	movff	?___fladd,_powf$1664
  9271  001E80  C00D  F109         	movff	?___fladd+1,_powf$1664+1
  9272  001E84  C00E  F10A         	movff	?___fladd+2,_powf$1664+2
  9273  001E88  C00F  F10B         	movff	?___fladd+3,_powf$1664+3
  9274  001E8C  C108  F00C         	movff	_powf$1664,___fladd@b
  9275  001E90  C109  F00D         	movff	_powf$1664+1,___fladd@b+1
  9276  001E94  C10A  F00E         	movff	_powf$1664+2,___fladd@b+2
  9277  001E98  C10B  F00F         	movff	_powf$1664+3,___fladd@b+3
  9278  001E9C  C1B0  F010         	movff	powf@t,___fladd@a
  9279  001EA0  C1B1  F011         	movff	powf@t+1,___fladd@a+1
  9280  001EA4  C1B2  F012         	movff	powf@t+2,___fladd@a+2
  9281  001EA8  C1B3  F013         	movff	powf@t+3,___fladd@a+3
  9282  001EAC  ECDE  F020         	call	___fladd	;wreg free
  9283  001EB0  C00C  F184         	movff	?___fladd,powf@t1
  9284  001EB4  C00D  F185         	movff	?___fladd+1,powf@t1+1
  9285  001EB8  C00E  F186         	movff	?___fladd+2,powf@t1+2
  9286  001EBC  C00F  F187         	movff	?___fladd+3,powf@t1+3
  9287  001EC0  C184  F1B8         	movff	powf@t1,powf@__xc8_float_word
  9288  001EC4  C185  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
  9289  001EC8  C186  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
  9290  001ECC  C187  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
  9291  001ED0  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  9292  001ED4  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  9293  001ED8  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  9294  001EDC  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  9295  001EE0  0E00               	movlw	0
  9296  001EE2  0101               	movlb	1	; () banked
  9297  001EE4  1594               	andwf	powf@is& (0+255),w,b
  9298  001EE6  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9299  001EE8  0EF0               	movlw	240
  9300  001EEA  1595               	andwf	(powf@is+1)& (0+255),w,b
  9301  001EEC  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9302  001EEE  0EFF               	movlw	255
  9303  001EF0  1596               	andwf	(powf@is+2)& (0+255),w,b
  9304  001EF2  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9305  001EF4  0EFF               	movlw	255
  9306  001EF6  1597               	andwf	(powf@is+3)& (0+255),w,b
  9307  001EF8  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9308                           
  9309                           ; BSR set to: 1
  9310  001EFA  C1B8  F184         	movff	powf@__xc8_float_word,powf@t1
  9311  001EFE  C1B9  F185         	movff	powf@__xc8_float_word+1,powf@t1+1
  9312  001F02  C1BA  F186         	movff	powf@__xc8_float_word+2,powf@t1+2
  9313  001F06  C1BB  F187         	movff	powf@__xc8_float_word+3,powf@t1+3
  9314                           
  9315                           ; BSR set to: 1
  9316  001F0A  C1B0  F039         	movff	powf@t,___flsub@a
  9317  001F0E  C1B1  F03A         	movff	powf@t+1,___flsub@a+1
  9318  001F12  C1B2  F03B         	movff	powf@t+2,___flsub@a+2
  9319  001F16  C1B3  F03C         	movff	powf@t+3,___flsub@a+3
  9320  001F1A  C184  F035         	movff	powf@t1,___flsub@b
  9321  001F1E  C185  F036         	movff	powf@t1+1,___flsub@b+1
  9322  001F22  C186  F037         	movff	powf@t1+2,___flsub@b+2
  9323  001F26  C187  F038         	movff	powf@t1+3,___flsub@b+3
  9324  001F2A  EC52  F02D         	call	___flsub	;wreg free
  9325  001F2E  C035  F198         	movff	?___flsub,_powf$1657
  9326  001F32  C036  F199         	movff	?___flsub+1,_powf$1657+1
  9327  001F36  C037  F19A         	movff	?___flsub+2,_powf$1657+2
  9328  001F3A  C038  F19B         	movff	?___flsub+3,_powf$1657+3
  9329  001F3E  C1A0  F05E         	movff	powf@k,??_powf
  9330  001F42  C1A1  F05F         	movff	powf@k+1,??_powf+1
  9331  001F46  90D8               	bcf	status,0,c
  9332  001F48  365E               	rlcf	??_powf^0,f,c
  9333  001F4A  365F               	rlcf	(??_powf+1)^0,f,c
  9334  001F4C  90D8               	bcf	status,0,c
  9335  001F4E  365E               	rlcf	??_powf^0,f,c
  9336  001F50  365F               	rlcf	(??_powf+1)^0,f,c
  9337  001F52  0E09               	movlw	low _dp_h
  9338  001F54  245E               	addwf	??_powf^0,w,c
  9339  001F56  6EF6               	movwf	tblptrl,c
  9340  001F58  0E06               	movlw	high _dp_h
  9341  001F5A  205F               	addwfc	(??_powf+1)^0,w,c
  9342  001F5C  6EF7               	movwf	tblptrh,c
  9343  001F5E                     	if	0	;There are less than 3 active tblptr bytes
  9344  001F5E                     	endif
  9345  001F5E  0009               	tblrd		*+
  9346  001F60  CFF5 F039          	movff	tablat,___flsub@a
  9347  001F64  0009               	tblrd		*+
  9348  001F66  CFF5 F03A          	movff	tablat,___flsub@a+1
  9349  001F6A  0009               	tblrd		*+
  9350  001F6C  CFF5 F03B          	movff	tablat,___flsub@a+2
  9351  001F70  000A               	tblrd		*-
  9352  001F72  CFF5 F03C          	movff	tablat,___flsub@a+3
  9353  001F76  C198  F035         	movff	_powf$1657,___flsub@b
  9354  001F7A  C199  F036         	movff	_powf$1657+1,___flsub@b+1
  9355  001F7E  C19A  F037         	movff	_powf$1657+2,___flsub@b+2
  9356  001F82  C19B  F038         	movff	_powf$1657+3,___flsub@b+3
  9357  001F86  EC52  F02D         	call	___flsub	;wreg free
  9358  001F8A  C035  F140         	movff	?___flsub,_powf$1663
  9359  001F8E  C036  F141         	movff	?___flsub+1,_powf$1663+1
  9360  001F92  C037  F142         	movff	?___flsub+2,_powf$1663+2
  9361  001F96  C038  F143         	movff	?___flsub+3,_powf$1663+3
  9362  001F9A  C120  F039         	movff	powf@z_h,___flsub@a
  9363  001F9E  C121  F03A         	movff	powf@z_h+1,___flsub@a+1
  9364  001FA2  C122  F03B         	movff	powf@z_h+2,___flsub@a+2
  9365  001FA6  C123  F03C         	movff	powf@z_h+3,___flsub@a+3
  9366  001FAA  C140  F035         	movff	_powf$1663,___flsub@b
  9367  001FAE  C141  F036         	movff	_powf$1663+1,___flsub@b+1
  9368  001FB2  C142  F037         	movff	_powf$1663+2,___flsub@b+2
  9369  001FB6  C143  F038         	movff	_powf$1663+3,___flsub@b+3
  9370  001FBA  EC52  F02D         	call	___flsub	;wreg free
  9371  001FBE  C035  F10C         	movff	?___flsub,_powf$1665
  9372  001FC2  C036  F10D         	movff	?___flsub+1,_powf$1665+1
  9373  001FC6  C037  F10E         	movff	?___flsub+2,_powf$1665+2
  9374  001FCA  C038  F10F         	movff	?___flsub+3,_powf$1665+3
  9375  001FCE  C124  F035         	movff	powf@z_l,___flsub@b
  9376  001FD2  C125  F036         	movff	powf@z_l+1,___flsub@b+1
  9377  001FD6  C126  F037         	movff	powf@z_l+2,___flsub@b+2
  9378  001FDA  C127  F038         	movff	powf@z_l+3,___flsub@b+3
  9379  001FDE  C10C  F039         	movff	_powf$1665,___flsub@a
  9380  001FE2  C10D  F03A         	movff	_powf$1665+1,___flsub@a+1
  9381  001FE6  C10E  F03B         	movff	_powf$1665+2,___flsub@a+2
  9382  001FEA  C10F  F03C         	movff	_powf$1665+3,___flsub@a+3
  9383  001FEE  EC52  F02D         	call	___flsub	;wreg free
  9384  001FF2                     L8:
  9385  001FF2  C035  F11C         	movff	?___flsub,powf@t2
  9386  001FF6  C036  F11D         	movff	?___flsub+1,powf@t2+1
  9387  001FFA  C037  F11E         	movff	?___flsub+2,powf@t2+2
  9388  001FFE  C038  F11F         	movff	?___flsub+3,powf@t2+3
  9389  002002  C05A  F1B8         	movff	powf@y,powf@__xc8_float_word
  9390  002006  C05B  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  9391  00200A  C05C  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  9392  00200E  C05D  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  9393  002012  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  9394  002016  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  9395  00201A  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  9396  00201E  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  9397  002022  0E00               	movlw	0
  9398  002024  0101               	movlb	1	; () banked
  9399  002026  1594               	andwf	powf@is& (0+255),w,b
  9400  002028  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9401  00202A  0EF0               	movlw	240
  9402  00202C  1595               	andwf	(powf@is+1)& (0+255),w,b
  9403  00202E  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9404  002030  0EFF               	movlw	255
  9405  002032  1596               	andwf	(powf@is+2)& (0+255),w,b
  9406  002034  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9407  002036  0EFF               	movlw	255
  9408  002038  1597               	andwf	(powf@is+3)& (0+255),w,b
  9409  00203A  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9410                           
  9411                           ; BSR set to: 1
  9412  00203C  C1B8  F128         	movff	powf@__xc8_float_word,powf@y1
  9413  002040  C1B9  F129         	movff	powf@__xc8_float_word+1,powf@y1+1
  9414  002044  C1BA  F12A         	movff	powf@__xc8_float_word+2,powf@y1+2
  9415  002048  C1BB  F12B         	movff	powf@__xc8_float_word+3,powf@y1+3
  9416                           
  9417                           ; BSR set to: 1
  9418  00204C  C184  F020         	movff	powf@t1,___flmul@a
  9419  002050  C185  F021         	movff	powf@t1+1,___flmul@a+1
  9420  002054  C186  F022         	movff	powf@t1+2,___flmul@a+2
  9421  002058  C187  F023         	movff	powf@t1+3,___flmul@a+3
  9422  00205C  C128  F039         	movff	powf@y1,___flsub@a
  9423  002060  C129  F03A         	movff	powf@y1+1,___flsub@a+1
  9424  002064  C12A  F03B         	movff	powf@y1+2,___flsub@a+2
  9425  002068  C12B  F03C         	movff	powf@y1+3,___flsub@a+3
  9426  00206C  C05A  F035         	movff	powf@y,___flsub@b
  9427  002070  C05B  F036         	movff	powf@y+1,___flsub@b+1
  9428  002074  C05C  F037         	movff	powf@y+2,___flsub@b+2
  9429  002078  C05D  F038         	movff	powf@y+3,___flsub@b+3
  9430  00207C  EC52  F02D         	call	___flsub	;wreg free
  9431  002080  C035  F01C         	movff	?___flsub,___flmul@b
  9432  002084  C036  F01D         	movff	?___flsub+1,___flmul@b+1
  9433  002088  C037  F01E         	movff	?___flsub+2,___flmul@b+2
  9434  00208C  C038  F01F         	movff	?___flsub+3,___flmul@b+3
  9435  002090  EC35  F01F         	call	___flmul	;wreg free
  9436  002094  C01C  F110         	movff	?___flmul,_powf$1666
  9437  002098  C01D  F111         	movff	?___flmul+1,_powf$1666+1
  9438  00209C  C01E  F112         	movff	?___flmul+2,_powf$1666+2
  9439  0020A0  C01F  F113         	movff	?___flmul+3,_powf$1666+3
  9440  0020A4  C110  F00C         	movff	_powf$1666,___fladd@b
  9441  0020A8  C111  F00D         	movff	_powf$1666+1,___fladd@b+1
  9442  0020AC  C112  F00E         	movff	_powf$1666+2,___fladd@b+2
  9443  0020B0  C113  F00F         	movff	_powf$1666+3,___fladd@b+3
  9444  0020B4  C11C  F020         	movff	powf@t2,___flmul@a
  9445  0020B8  C11D  F021         	movff	powf@t2+1,___flmul@a+1
  9446  0020BC  C11E  F022         	movff	powf@t2+2,___flmul@a+2
  9447  0020C0  C11F  F023         	movff	powf@t2+3,___flmul@a+3
  9448  0020C4  C05A  F01C         	movff	powf@y,___flmul@b
  9449  0020C8  C05B  F01D         	movff	powf@y+1,___flmul@b+1
  9450  0020CC  C05C  F01E         	movff	powf@y+2,___flmul@b+2
  9451  0020D0  C05D  F01F         	movff	powf@y+3,___flmul@b+3
  9452  0020D4  EC35  F01F         	call	___flmul	;wreg free
  9453  0020D8  C01C  F010         	movff	?___flmul,___fladd@a
  9454  0020DC  C01D  F011         	movff	?___flmul+1,___fladd@a+1
  9455  0020E0  C01E  F012         	movff	?___flmul+2,___fladd@a+2
  9456  0020E4  C01F  F013         	movff	?___flmul+3,___fladd@a+3
  9457  0020E8  ECDE  F020         	call	___fladd	;wreg free
  9458  0020EC  C00C  F164         	movff	?___fladd,powf@p_l
  9459  0020F0  C00D  F165         	movff	?___fladd+1,powf@p_l+1
  9460  0020F4  C00E  F166         	movff	?___fladd+2,powf@p_l+2
  9461  0020F8  C00F  F167         	movff	?___fladd+3,powf@p_l+3
  9462  0020FC  C128  F01C         	movff	powf@y1,___flmul@b
  9463  002100  C129  F01D         	movff	powf@y1+1,___flmul@b+1
  9464  002104  C12A  F01E         	movff	powf@y1+2,___flmul@b+2
  9465  002108  C12B  F01F         	movff	powf@y1+3,___flmul@b+3
  9466  00210C  C184  F020         	movff	powf@t1,___flmul@a
  9467  002110  C185  F021         	movff	powf@t1+1,___flmul@a+1
  9468  002114  C186  F022         	movff	powf@t1+2,___flmul@a+2
  9469  002118  C187  F023         	movff	powf@t1+3,___flmul@a+3
  9470  00211C  EC35  F01F         	call	___flmul	;wreg free
  9471  002120  C01C  F19C         	movff	?___flmul,powf@p_h
  9472  002124  C01D  F19D         	movff	?___flmul+1,powf@p_h+1
  9473  002128  C01E  F19E         	movff	?___flmul+2,powf@p_h+2
  9474  00212C  C01F  F19F         	movff	?___flmul+3,powf@p_h+3
  9475  002130  C164  F00C         	movff	powf@p_l,___fladd@b
  9476  002134  C165  F00D         	movff	powf@p_l+1,___fladd@b+1
  9477  002138  C166  F00E         	movff	powf@p_l+2,___fladd@b+2
  9478  00213C  C167  F00F         	movff	powf@p_l+3,___fladd@b+3
  9479  002140  C19C  F010         	movff	powf@p_h,___fladd@a
  9480  002144  C19D  F011         	movff	powf@p_h+1,___fladd@a+1
  9481  002148  C19E  F012         	movff	powf@p_h+2,___fladd@a+2
  9482  00214C  C19F  F013         	movff	powf@p_h+3,___fladd@a+3
  9483  002150  ECDE  F020         	call	___fladd	;wreg free
  9484  002154  C00C  F1B4         	movff	?___fladd,powf@z
  9485  002158  C00D  F1B5         	movff	?___fladd+1,powf@z+1
  9486  00215C  C00E  F1B6         	movff	?___fladd+2,powf@z+2
  9487  002160  C00F  F1B7         	movff	?___fladd+3,powf@z+3
  9488  002164  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
  9489  002168  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
  9490  00216C  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
  9491  002170  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
  9492  002174  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
  9493  002178  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
  9494  00217C  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
  9495  002180  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
  9496  002184  0101               	movlb	1	; () banked
  9497  002186  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  9498  002188  D03E               	goto	l7299
  9499  00218A  05AC               	decf	powf@j& (0+255),w,b
  9500  00218C  0E00               	movlw	0
  9501  00218E  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  9502  002190  0E00               	movlw	0
  9503  002192  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  9504  002194  0E43               	movlw	67
  9505  002196  59AF               	subwfb	(powf@j+3)& (0+255),w,b
  9506  002198  A0D8               	btfss	status,0,c
  9507  00219A  D035               	goto	l7299
  9508                           
  9509                           ; BSR set to: 1
  9510  00219C  0ECA               	movlw	202
  9511  00219E  6E20               	movwf	___flmul@a^0,c
  9512  0021A0  0EF2               	movlw	242
  9513  0021A2  6E21               	movwf	(___flmul@a+1)^0,c
  9514  0021A4  0E49               	movlw	73
  9515  0021A6  6E22               	movwf	(___flmul@a+2)^0,c
  9516  0021A8  0E71               	movlw	113
  9517  0021AA  6E23               	movwf	(___flmul@a+3)^0,c
  9518  0021AC  C188  F01C         	movff	powf@sn,___flmul@b
  9519  0021B0  C189  F01D         	movff	powf@sn+1,___flmul@b+1
  9520  0021B4  C18A  F01E         	movff	powf@sn+2,___flmul@b+2
  9521  0021B8  C18B  F01F         	movff	powf@sn+3,___flmul@b+3
  9522  0021BC  EC35  F01F         	call	___flmul	;wreg free
  9523  0021C0  C01C  F1A4         	movff	?___flmul,_powf$1654
  9524  0021C4  C01D  F1A5         	movff	?___flmul+1,_powf$1654+1
  9525  0021C8  C01E  F1A6         	movff	?___flmul+2,_powf$1654+2
  9526  0021CC  C01F  F1A7         	movff	?___flmul+3,_powf$1654+3
  9527  0021D0  C1A4  F01C         	movff	_powf$1654,___flmul@b
  9528  0021D4  C1A5  F01D         	movff	_powf$1654+1,___flmul@b+1
  9529  0021D8  C1A6  F01E         	movff	_powf$1654+2,___flmul@b+2
  9530  0021DC  C1A7  F01F         	movff	_powf$1654+3,___flmul@b+3
  9531  0021E0  0ECA               	movlw	202
  9532  0021E2  6E20               	movwf	___flmul@a^0,c
  9533  0021E4  0EF2               	movlw	242
  9534  0021E6  6E21               	movwf	(___flmul@a+1)^0,c
  9535  0021E8  0E49               	movlw	73
  9536  0021EA  6E22               	movwf	(___flmul@a+2)^0,c
  9537  0021EC  0E71               	movlw	113
  9538  0021EE  6E23               	movwf	(___flmul@a+3)^0,c
  9539  0021F0  EC35  F01F         	call	___flmul	;wreg free
  9540  0021F4  C01C  F056         	movff	?___flmul,?_powf
  9541  0021F8  C01D  F057         	movff	?___flmul+1,?_powf+1
  9542  0021FC  C01E  F058         	movff	?___flmul+2,?_powf+2
  9543  002200  C01F  F059         	movff	?___flmul+3,?_powf+3
  9544  002204  0012               	return	
  9545  002206                     l7299:
  9546                           
  9547                           ; BSR set to: 1
  9548  002206  0E43               	movlw	67
  9549  002208  19AF               	xorwf	(powf@j+3)& (0+255),w,b
  9550  00220A  11AC               	iorwf	powf@j& (0+255),w,b
  9551  00220C  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  9552  00220E  11AE               	iorwf	(powf@j+2)& (0+255),w,b
  9553  002210  A4D8               	btfss	status,2,c
  9554  002212  D06D               	goto	l7307
  9555                           
  9556                           ; BSR set to: 1
  9557  002214  C19C  F039         	movff	powf@p_h,___flsub@a
  9558  002218  C19D  F03A         	movff	powf@p_h+1,___flsub@a+1
  9559  00221C  C19E  F03B         	movff	powf@p_h+2,___flsub@a+2
  9560  002220  C19F  F03C         	movff	powf@p_h+3,___flsub@a+3
  9561  002224  C1B4  F035         	movff	powf@z,___flsub@b
  9562  002228  C1B5  F036         	movff	powf@z+1,___flsub@b+1
  9563  00222C  C1B6  F037         	movff	powf@z+2,___flsub@b+2
  9564  002230  C1B7  F038         	movff	powf@z+3,___flsub@b+3
  9565  002234  EC52  F02D         	call	___flsub	;wreg free
  9566  002238  C035  F03D         	movff	?___flsub,___flge@ff1
  9567  00223C  C036  F03E         	movff	?___flsub+1,___flge@ff1+1
  9568  002240  C037  F03F         	movff	?___flsub+2,___flge@ff1+2
  9569  002244  C038  F040         	movff	?___flsub+3,___flge@ff1+3
  9570  002248  0E3C               	movlw	60
  9571  00224A  6E10               	movwf	___fladd@a^0,c
  9572  00224C  0EAA               	movlw	170
  9573  00224E  6E11               	movwf	(___fladd@a+1)^0,c
  9574  002250  0E38               	movlw	56
  9575  002252  6E12               	movwf	(___fladd@a+2)^0,c
  9576  002254  0E33               	movlw	51
  9577  002256  6E13               	movwf	(___fladd@a+3)^0,c
  9578  002258  C164  F00C         	movff	powf@p_l,___fladd@b
  9579  00225C  C165  F00D         	movff	powf@p_l+1,___fladd@b+1
  9580  002260  C166  F00E         	movff	powf@p_l+2,___fladd@b+2
  9581  002264  C167  F00F         	movff	powf@p_l+3,___fladd@b+3
  9582  002268  ECDE  F020         	call	___fladd	;wreg free
  9583  00226C  C00C  F041         	movff	?___fladd,___flge@ff2
  9584  002270  C00D  F042         	movff	?___fladd+1,___flge@ff2+1
  9585  002274  C00E  F043         	movff	?___fladd+2,___flge@ff2+2
  9586  002278  C00F  F044         	movff	?___fladd+3,___flge@ff2+3
  9587  00227C  ECE8  F028         	call	___flge	;wreg free
  9588  002280  B0D8               	btfsc	status,0,c
  9589  002282  D0E5               	goto	l7323
  9590  002284  0ECA               	movlw	202
  9591  002286  6E20               	movwf	___flmul@a^0,c
  9592  002288  0EF2               	movlw	242
  9593  00228A  6E21               	movwf	(___flmul@a+1)^0,c
  9594  00228C  0E49               	movlw	73
  9595  00228E  6E22               	movwf	(___flmul@a+2)^0,c
  9596  002290  0E71               	movlw	113
  9597  002292  6E23               	movwf	(___flmul@a+3)^0,c
  9598  002294  C188  F01C         	movff	powf@sn,___flmul@b
  9599  002298  C189  F01D         	movff	powf@sn+1,___flmul@b+1
  9600  00229C  C18A  F01E         	movff	powf@sn+2,___flmul@b+2
  9601  0022A0  C18B  F01F         	movff	powf@sn+3,___flmul@b+3
  9602  0022A4  EC35  F01F         	call	___flmul	;wreg free
  9603  0022A8  C01C  F1A4         	movff	?___flmul,_powf$1654
  9604  0022AC  C01D  F1A5         	movff	?___flmul+1,_powf$1654+1
  9605  0022B0  C01E  F1A6         	movff	?___flmul+2,_powf$1654+2
  9606  0022B4  C01F  F1A7         	movff	?___flmul+3,_powf$1654+3
  9607  0022B8  C1A4  F01C         	movff	_powf$1654,___flmul@b
  9608  0022BC  C1A5  F01D         	movff	_powf$1654+1,___flmul@b+1
  9609  0022C0  C1A6  F01E         	movff	_powf$1654+2,___flmul@b+2
  9610  0022C4  C1A7  F01F         	movff	_powf$1654+3,___flmul@b+3
  9611  0022C8  0ECA               	movlw	202
  9612  0022CA  6E20               	movwf	___flmul@a^0,c
  9613  0022CC  0EF2               	movlw	242
  9614  0022CE  6E21               	movwf	(___flmul@a+1)^0,c
  9615  0022D0  0E49               	movlw	73
  9616  0022D2  6E22               	movwf	(___flmul@a+2)^0,c
  9617  0022D4  0E71               	movlw	113
  9618  0022D6  6E23               	movwf	(___flmul@a+3)^0,c
  9619  0022D8  EC35  F01F         	call	___flmul	;wreg free
  9620  0022DC  C01C  F056         	movff	?___flmul,?_powf
  9621  0022E0  C01D  F057         	movff	?___flmul+1,?_powf+1
  9622  0022E4  C01E  F058         	movff	?___flmul+2,?_powf+2
  9623  0022E8  C01F  F059         	movff	?___flmul+3,?_powf+3
  9624  0022EC  0012               	return	
  9625  0022EE                     l7307:
  9626                           
  9627                           ; BSR set to: 1
  9628  0022EE  0EFF               	movlw	255
  9629  0022F0  15AC               	andwf	powf@j& (0+255),w,b
  9630  0022F2  6E5E               	movwf	??_powf^0,c
  9631  0022F4  0EFF               	movlw	255
  9632  0022F6  15AD               	andwf	(powf@j+1)& (0+255),w,b
  9633  0022F8  6E5F               	movwf	(??_powf+1)^0,c
  9634  0022FA  0EFF               	movlw	255
  9635  0022FC  15AE               	andwf	(powf@j+2)& (0+255),w,b
  9636  0022FE  6E60               	movwf	(??_powf+2)^0,c
  9637  002300  0E7F               	movlw	127
  9638  002302  15AF               	andwf	(powf@j+3)& (0+255),w,b
  9639  002304  6E61               	movwf	(??_powf+3)^0,c
  9640  002306  BE61               	btfsc	(??_powf+3)^0,7,c
  9641  002308  D03E               	goto	l7315
  9642  00230A  045E               	decf	??_powf^0,w,c
  9643  00230C  0E00               	movlw	0
  9644  00230E  585F               	subwfb	(??_powf+1)^0,w,c
  9645  002310  0E16               	movlw	22
  9646  002312  5860               	subwfb	(??_powf+2)^0,w,c
  9647  002314  0E43               	movlw	67
  9648  002316  5861               	subwfb	(??_powf+3)^0,w,c
  9649  002318  A0D8               	btfss	status,0,c
  9650  00231A  D035               	goto	l7315
  9651                           
  9652                           ; BSR set to: 1
  9653  00231C  0E60               	movlw	96
  9654  00231E  6E20               	movwf	___flmul@a^0,c
  9655  002320  0E42               	movlw	66
  9656  002322  6E21               	movwf	(___flmul@a+1)^0,c
  9657  002324  0EA2               	movlw	162
  9658  002326  6E22               	movwf	(___flmul@a+2)^0,c
  9659  002328  0E0D               	movlw	13
  9660  00232A  6E23               	movwf	(___flmul@a+3)^0,c
  9661  00232C  C188  F01C         	movff	powf@sn,___flmul@b
  9662  002330  C189  F01D         	movff	powf@sn+1,___flmul@b+1
  9663  002334  C18A  F01E         	movff	powf@sn+2,___flmul@b+2
  9664  002338  C18B  F01F         	movff	powf@sn+3,___flmul@b+3
  9665  00233C  EC35  F01F         	call	___flmul	;wreg free
  9666  002340  C01C  F1A4         	movff	?___flmul,_powf$1654
  9667  002344  C01D  F1A5         	movff	?___flmul+1,_powf$1654+1
  9668  002348  C01E  F1A6         	movff	?___flmul+2,_powf$1654+2
  9669  00234C  C01F  F1A7         	movff	?___flmul+3,_powf$1654+3
  9670  002350  C1A4  F01C         	movff	_powf$1654,___flmul@b
  9671  002354  C1A5  F01D         	movff	_powf$1654+1,___flmul@b+1
  9672  002358  C1A6  F01E         	movff	_powf$1654+2,___flmul@b+2
  9673  00235C  C1A7  F01F         	movff	_powf$1654+3,___flmul@b+3
  9674  002360  0E60               	movlw	96
  9675  002362  6E20               	movwf	___flmul@a^0,c
  9676  002364  0E42               	movlw	66
  9677  002366  6E21               	movwf	(___flmul@a+1)^0,c
  9678  002368  0EA2               	movlw	162
  9679  00236A  6E22               	movwf	(___flmul@a+2)^0,c
  9680  00236C  0E0D               	movlw	13
  9681  00236E  6E23               	movwf	(___flmul@a+3)^0,c
  9682  002370  EC35  F01F         	call	___flmul	;wreg free
  9683  002374  C01C  F056         	movff	?___flmul,?_powf
  9684  002378  C01D  F057         	movff	?___flmul+1,?_powf+1
  9685  00237C  C01E  F058         	movff	?___flmul+2,?_powf+2
  9686  002380  C01F  F059         	movff	?___flmul+3,?_powf+3
  9687  002384  0012               	return	
  9688  002386                     l7315:
  9689                           
  9690                           ; BSR set to: 1
  9691  002386  0E16               	movlw	22
  9692  002388  19AE               	xorwf	(powf@j+2)& (0+255),w,b
  9693  00238A  E161               	bnz	l7323
  9694  00238C  0EC3               	movlw	195
  9695  00238E  19AF               	xorwf	(powf@j+3)& (0+255),w,b
  9696  002390  11AC               	iorwf	powf@j& (0+255),w,b
  9697  002392  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  9698  002394  A4D8               	btfss	status,2,c
  9699  002396  D05B               	goto	l7323
  9700                           
  9701                           ; BSR set to: 1
  9702  002398  C19C  F039         	movff	powf@p_h,___flsub@a
  9703  00239C  C19D  F03A         	movff	powf@p_h+1,___flsub@a+1
  9704  0023A0  C19E  F03B         	movff	powf@p_h+2,___flsub@a+2
  9705  0023A4  C19F  F03C         	movff	powf@p_h+3,___flsub@a+3
  9706  0023A8  C1B4  F035         	movff	powf@z,___flsub@b
  9707  0023AC  C1B5  F036         	movff	powf@z+1,___flsub@b+1
  9708  0023B0  C1B6  F037         	movff	powf@z+2,___flsub@b+2
  9709  0023B4  C1B7  F038         	movff	powf@z+3,___flsub@b+3
  9710  0023B8  EC52  F02D         	call	___flsub	;wreg free
  9711  0023BC  C035  F03D         	movff	?___flsub,___flge@ff1
  9712  0023C0  C036  F03E         	movff	?___flsub+1,___flge@ff1+1
  9713  0023C4  C037  F03F         	movff	?___flsub+2,___flge@ff1+2
  9714  0023C8  C038  F040         	movff	?___flsub+3,___flge@ff1+3
  9715  0023CC  C164  F041         	movff	powf@p_l,___flge@ff2
  9716  0023D0  C165  F042         	movff	powf@p_l+1,___flge@ff2+1
  9717  0023D4  C166  F043         	movff	powf@p_l+2,___flge@ff2+2
  9718  0023D8  C167  F044         	movff	powf@p_l+3,___flge@ff2+3
  9719  0023DC  ECE8  F028         	call	___flge	;wreg free
  9720  0023E0  A0D8               	btfss	status,0,c
  9721  0023E2  D035               	goto	l7323
  9722  0023E4  0E60               	movlw	96
  9723  0023E6  6E20               	movwf	___flmul@a^0,c
  9724  0023E8  0E42               	movlw	66
  9725  0023EA  6E21               	movwf	(___flmul@a+1)^0,c
  9726  0023EC  0EA2               	movlw	162
  9727  0023EE  6E22               	movwf	(___flmul@a+2)^0,c
  9728  0023F0  0E0D               	movlw	13
  9729  0023F2  6E23               	movwf	(___flmul@a+3)^0,c
  9730  0023F4  C188  F01C         	movff	powf@sn,___flmul@b
  9731  0023F8  C189  F01D         	movff	powf@sn+1,___flmul@b+1
  9732  0023FC  C18A  F01E         	movff	powf@sn+2,___flmul@b+2
  9733  002400  C18B  F01F         	movff	powf@sn+3,___flmul@b+3
  9734  002404  EC35  F01F         	call	___flmul	;wreg free
  9735  002408  C01C  F1A4         	movff	?___flmul,_powf$1654
  9736  00240C  C01D  F1A5         	movff	?___flmul+1,_powf$1654+1
  9737  002410  C01E  F1A6         	movff	?___flmul+2,_powf$1654+2
  9738  002414  C01F  F1A7         	movff	?___flmul+3,_powf$1654+3
  9739  002418  C1A4  F01C         	movff	_powf$1654,___flmul@b
  9740  00241C  C1A5  F01D         	movff	_powf$1654+1,___flmul@b+1
  9741  002420  C1A6  F01E         	movff	_powf$1654+2,___flmul@b+2
  9742  002424  C1A7  F01F         	movff	_powf$1654+3,___flmul@b+3
  9743  002428  0E60               	movlw	96
  9744  00242A  6E20               	movwf	___flmul@a^0,c
  9745  00242C  0E42               	movlw	66
  9746  00242E  6E21               	movwf	(___flmul@a+1)^0,c
  9747  002430  0EA2               	movlw	162
  9748  002432  6E22               	movwf	(___flmul@a+2)^0,c
  9749  002434  0E0D               	movlw	13
  9750  002436  6E23               	movwf	(___flmul@a+3)^0,c
  9751  002438  EC35  F01F         	call	___flmul	;wreg free
  9752  00243C  C01C  F056         	movff	?___flmul,?_powf
  9753  002440  C01D  F057         	movff	?___flmul+1,?_powf+1
  9754  002444  C01E  F058         	movff	?___flmul+2,?_powf+2
  9755  002448  C01F  F059         	movff	?___flmul+3,?_powf+3
  9756  00244C  0012               	return	
  9757  00244E                     l7323:
  9758  00244E  0EFF               	movlw	255
  9759  002450  0101               	movlb	1	; () banked
  9760  002452  15AC               	andwf	powf@j& (0+255),w,b
  9761  002454  6F2C               	movwf	powf@i& (0+255),b
  9762  002456  0EFF               	movlw	255
  9763  002458  15AD               	andwf	(powf@j+1)& (0+255),w,b
  9764  00245A  6F2D               	movwf	(powf@i+1)& (0+255),b
  9765  00245C  0EFF               	movlw	255
  9766  00245E  15AE               	andwf	(powf@j+2)& (0+255),w,b
  9767  002460  6F2E               	movwf	(powf@i+2)& (0+255),b
  9768  002462  0E7F               	movlw	127
  9769  002464  15AF               	andwf	(powf@j+3)& (0+255),w,b
  9770  002466  6F2F               	movwf	(powf@i+3)& (0+255),b
  9771  002468  0E17               	movlw	23
  9772  00246A  6E5E               	movwf	??_powf^0,c
  9773  00246C  C12C  F05F         	movff	powf@i,??_powf+1
  9774  002470  C12D  F060         	movff	powf@i+1,??_powf+2
  9775  002474  C12E  F061         	movff	powf@i+2,??_powf+3
  9776  002478  C12F  F062         	movff	powf@i+3,??_powf+4
  9777  00247C                     u9535:
  9778  00247C  665E               	tstfsz	??_powf^0,c
  9779  00247E  D001               	goto	u9536
  9780  002480  D007               	goto	u9537
  9781  002482                     u9536:
  9782  002482  3462               	rlcf	(??_powf+4)^0,w,c
  9783  002484  3262               	rrcf	(??_powf+4)^0,f,c
  9784  002486  3261               	rrcf	(??_powf+3)^0,f,c
  9785  002488  3260               	rrcf	(??_powf+2)^0,f,c
  9786  00248A  325F               	rrcf	(??_powf+1)^0,f,c
  9787  00248C  2E5E               	decfsz	??_powf^0,f,c
  9788  00248E  D7F6               	goto	u9535
  9789  002490                     u9537:
  9790  002490  0E81               	movlw	129
  9791  002492  245F               	addwf	(??_powf+1)^0,w,c
  9792  002494  0101               	movlb	1	; () banked
  9793  002496  6FA0               	movwf	powf@k& (0+255),b
  9794  002498  0EFF               	movlw	255
  9795  00249A  2060               	addwfc	(??_powf+2)^0,w,c
  9796  00249C  6FA1               	movwf	(powf@k+1)& (0+255),b
  9797  00249E  0EFF               	movlw	255
  9798  0024A0  2061               	addwfc	(??_powf+3)^0,w,c
  9799  0024A2  6FA2               	movwf	(powf@k+2)& (0+255),b
  9800  0024A4  0EFF               	movlw	255
  9801  0024A6  2062               	addwfc	(??_powf+4)^0,w,c
  9802  0024A8  6FA3               	movwf	(powf@k+3)& (0+255),b
  9803                           
  9804                           ; BSR set to: 1
  9805  0024AA  0E00               	movlw	0
  9806  0024AC  6F80               	movwf	powf@n& (0+255),b
  9807  0024AE  0E00               	movlw	0
  9808  0024B0  6F81               	movwf	(powf@n+1)& (0+255),b
  9809  0024B2  0E00               	movlw	0
  9810  0024B4  6F82               	movwf	(powf@n+2)& (0+255),b
  9811  0024B6  0E00               	movlw	0
  9812  0024B8  6F83               	movwf	(powf@n+3)& (0+255),b
  9813                           
  9814                           ; BSR set to: 1
  9815  0024BA  BF2F               	btfsc	(powf@i+3)& (0+255),7,b
  9816  0024BC  D0D8               	goto	l7337
  9817  0024BE  052C               	decf	powf@i& (0+255),w,b
  9818  0024C0  0E00               	movlw	0
  9819  0024C2  592D               	subwfb	(powf@i+1)& (0+255),w,b
  9820  0024C4  0E00               	movlw	0
  9821  0024C6  592E               	subwfb	(powf@i+2)& (0+255),w,b
  9822  0024C8  0E3F               	movlw	63
  9823  0024CA  592F               	subwfb	(powf@i+3)& (0+255),w,b
  9824  0024CC  A0D8               	btfss	status,0,c
  9825  0024CE  D0CF               	goto	l7337
  9826                           
  9827                           ; BSR set to: 1
  9828  0024D0  C1A0  F05E         	movff	powf@k,??_powf
  9829  0024D4  0E01               	movlw	1
  9830  0024D6  265E               	addwf	??_powf^0,f,c
  9831  0024D8  0E00               	movlw	0
  9832  0024DA  6E5F               	movwf	(??_powf+1)^0,c
  9833  0024DC  0E00               	movlw	0
  9834  0024DE  6E60               	movwf	(??_powf+2)^0,c
  9835  0024E0  0E80               	movlw	128
  9836  0024E2  6E61               	movwf	(??_powf+3)^0,c
  9837  0024E4  0E00               	movlw	0
  9838  0024E6  6E62               	movwf	(??_powf+4)^0,c
  9839  0024E8                     u9555:
  9840  0024E8  665E               	tstfsz	??_powf^0,c
  9841  0024EA  D001               	goto	u9556
  9842  0024EC  D007               	goto	u9557
  9843  0024EE                     u9556:
  9844  0024EE  3462               	rlcf	(??_powf+4)^0,w,c
  9845  0024F0  3262               	rrcf	(??_powf+4)^0,f,c
  9846  0024F2  3261               	rrcf	(??_powf+3)^0,f,c
  9847  0024F4  3260               	rrcf	(??_powf+2)^0,f,c
  9848  0024F6  325F               	rrcf	(??_powf+1)^0,f,c
  9849  0024F8  2E5E               	decfsz	??_powf^0,f,c
  9850  0024FA  D7F6               	goto	u9555
  9851  0024FC                     u9557:
  9852  0024FC  0101               	movlb	1	; () banked
  9853  0024FE  51AC               	movf	powf@j& (0+255),w,b
  9854  002500  245F               	addwf	(??_powf+1)^0,w,c
  9855  002502  6F80               	movwf	powf@n& (0+255),b
  9856  002504  51AD               	movf	(powf@j+1)& (0+255),w,b
  9857  002506  2060               	addwfc	(??_powf+2)^0,w,c
  9858  002508  6F81               	movwf	(powf@n+1)& (0+255),b
  9859  00250A  51AE               	movf	(powf@j+2)& (0+255),w,b
  9860  00250C  2061               	addwfc	(??_powf+3)^0,w,c
  9861  00250E  6F82               	movwf	(powf@n+2)& (0+255),b
  9862  002510  51AF               	movf	(powf@j+3)& (0+255),w,b
  9863  002512  2062               	addwfc	(??_powf+4)^0,w,c
  9864  002514  6F83               	movwf	(powf@n+3)& (0+255),b
  9865  002516  0E81               	movlw	129
  9866  002518  6E5E               	movwf	??_powf^0,c
  9867  00251A  0EFF               	movlw	255
  9868  00251C  6E5F               	movwf	(??_powf+1)^0,c
  9869  00251E  0EFF               	movlw	255
  9870  002520  6E60               	movwf	(??_powf+2)^0,c
  9871  002522  0EFF               	movlw	255
  9872  002524  6E61               	movwf	(??_powf+3)^0,c
  9873  002526  0E17               	movlw	23
  9874  002528  6E62               	movwf	(??_powf+4)^0,c
  9875  00252A  C180  F063         	movff	powf@n,??_powf+5
  9876  00252E  C181  F064         	movff	powf@n+1,??_powf+6
  9877  002532  C182  F065         	movff	powf@n+2,??_powf+7
  9878  002536  C183  F066         	movff	powf@n+3,??_powf+8
  9879  00253A                     u9565:
  9880  00253A  6662               	tstfsz	(??_powf+4)^0,c
  9881  00253C  D001               	goto	u9566
  9882  00253E  D007               	goto	u9567
  9883  002540                     u9566:
  9884  002540  3466               	rlcf	(??_powf+8)^0,w,c
  9885  002542  3266               	rrcf	(??_powf+8)^0,f,c
  9886  002544  3265               	rrcf	(??_powf+7)^0,f,c
  9887  002546  3264               	rrcf	(??_powf+6)^0,f,c
  9888  002548  3263               	rrcf	(??_powf+5)^0,f,c
  9889  00254A  2E62               	decfsz	(??_powf+4)^0,f,c
  9890  00254C  D7F6               	goto	u9565
  9891  00254E                     u9567:
  9892  00254E  5063               	movf	(??_powf+5)^0,w,c
  9893  002550  245E               	addwf	??_powf^0,w,c
  9894  002552  0101               	movlb	1	; () banked
  9895  002554  6FA0               	movwf	powf@k& (0+255),b
  9896  002556  0E00               	movlw	0
  9897  002558  205F               	addwfc	(??_powf+1)^0,w,c
  9898  00255A  6FA1               	movwf	(powf@k+1)& (0+255),b
  9899  00255C  0E00               	movlw	0
  9900  00255E  2060               	addwfc	(??_powf+2)^0,w,c
  9901  002560  6FA2               	movwf	(powf@k+2)& (0+255),b
  9902  002562  0E00               	movlw	0
  9903  002564  2061               	addwfc	(??_powf+3)^0,w,c
  9904  002566  6FA3               	movwf	(powf@k+3)& (0+255),b
  9905                           
  9906                           ; BSR set to: 1
  9907  002568  C1A0  F05E         	movff	powf@k,??_powf
  9908  00256C  0EFF               	movlw	255
  9909  00256E  6E5F               	movwf	(??_powf+1)^0,c
  9910  002570  0EFF               	movlw	255
  9911  002572  6E60               	movwf	(??_powf+2)^0,c
  9912  002574  0E7F               	movlw	127
  9913  002576  6E61               	movwf	(??_powf+3)^0,c
  9914  002578  0E00               	movlw	0
  9915  00257A  6E62               	movwf	(??_powf+4)^0,c
  9916  00257C                     u9575:
  9917  00257C  665E               	tstfsz	??_powf^0,c
  9918  00257E  D001               	goto	u9576
  9919  002580  D007               	goto	u9577
  9920  002582                     u9576:
  9921  002582  3462               	rlcf	(??_powf+4)^0,w,c
  9922  002584  3262               	rrcf	(??_powf+4)^0,f,c
  9923  002586  3261               	rrcf	(??_powf+3)^0,f,c
  9924  002588  3260               	rrcf	(??_powf+2)^0,f,c
  9925  00258A  325F               	rrcf	(??_powf+1)^0,f,c
  9926  00258C  2E5E               	decfsz	??_powf^0,f,c
  9927  00258E  D7F6               	goto	u9575
  9928  002590                     u9577:
  9929  002590  1C5F               	comf	(??_powf+1)^0,w,c
  9930  002592  6E63               	movwf	(??_powf+5)^0,c
  9931  002594  1C60               	comf	(??_powf+2)^0,w,c
  9932  002596  6E64               	movwf	(??_powf+6)^0,c
  9933  002598  1C61               	comf	(??_powf+3)^0,w,c
  9934  00259A  6E65               	movwf	(??_powf+7)^0,c
  9935  00259C  1C62               	comf	(??_powf+4)^0,w,c
  9936  00259E  6E66               	movwf	(??_powf+8)^0,c
  9937  0025A0  0101               	movlb	1	; () banked
  9938  0025A2  5180               	movf	powf@n& (0+255),w,b
  9939  0025A4  1463               	andwf	(??_powf+5)^0,w,c
  9940  0025A6  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9941  0025A8  5181               	movf	(powf@n+1)& (0+255),w,b
  9942  0025AA  1464               	andwf	(??_powf+6)^0,w,c
  9943  0025AC  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9944  0025AE  5182               	movf	(powf@n+2)& (0+255),w,b
  9945  0025B0  1465               	andwf	(??_powf+7)^0,w,c
  9946  0025B2  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9947  0025B4  5183               	movf	(powf@n+3)& (0+255),w,b
  9948  0025B6  1466               	andwf	(??_powf+8)^0,w,c
  9949  0025B8  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9950                           
  9951                           ; BSR set to: 1
  9952  0025BA  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
  9953  0025BE  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
  9954  0025C2  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
  9955  0025C6  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
  9956                           
  9957                           ; BSR set to: 1
  9958  0025CA  51A0               	movf	powf@k& (0+255),w,b
  9959  0025CC  0817               	sublw	23
  9960  0025CE  6E5E               	movwf	??_powf^0,c
  9961  0025D0  0EFF               	movlw	255
  9962  0025D2  1580               	andwf	powf@n& (0+255),w,b
  9963  0025D4  6E5F               	movwf	(??_powf+1)^0,c
  9964  0025D6  0EFF               	movlw	255
  9965  0025D8  1581               	andwf	(powf@n+1)& (0+255),w,b
  9966  0025DA  6E60               	movwf	(??_powf+2)^0,c
  9967  0025DC  0E7F               	movlw	127
  9968  0025DE  1582               	andwf	(powf@n+2)& (0+255),w,b
  9969  0025E0  6E61               	movwf	(??_powf+3)^0,c
  9970  0025E2  0E00               	movlw	0
  9971  0025E4  1583               	andwf	(powf@n+3)& (0+255),w,b
  9972  0025E6  6E62               	movwf	(??_powf+4)^0,c
  9973  0025E8  0E00               	movlw	0
  9974  0025EA  105F               	iorwf	(??_powf+1)^0,w,c
  9975  0025EC  6E63               	movwf	(??_powf+5)^0,c
  9976  0025EE  0E00               	movlw	0
  9977  0025F0  1060               	iorwf	(??_powf+2)^0,w,c
  9978  0025F2  6E64               	movwf	(??_powf+6)^0,c
  9979  0025F4  0E80               	movlw	128
  9980  0025F6  1061               	iorwf	(??_powf+3)^0,w,c
  9981  0025F8  6E65               	movwf	(??_powf+7)^0,c
  9982  0025FA  0E00               	movlw	0
  9983  0025FC  1062               	iorwf	(??_powf+4)^0,w,c
  9984  0025FE  6E66               	movwf	(??_powf+8)^0,c
  9985  002600                     u9585:
  9986  002600  665E               	tstfsz	??_powf^0,c
  9987  002602  D001               	goto	u9586
  9988  002604  D007               	goto	u9587
  9989  002606                     u9586:
  9990  002606  3466               	rlcf	(??_powf+8)^0,w,c
  9991  002608  3266               	rrcf	(??_powf+8)^0,f,c
  9992  00260A  3265               	rrcf	(??_powf+7)^0,f,c
  9993  00260C  3264               	rrcf	(??_powf+6)^0,f,c
  9994  00260E  3263               	rrcf	(??_powf+5)^0,f,c
  9995  002610  2E5E               	decfsz	??_powf^0,f,c
  9996  002612  D7F6               	goto	u9585
  9997  002614                     u9587:
  9998  002614  C063  F180         	movff	??_powf+5,powf@n
  9999  002618  C064  F181         	movff	??_powf+6,powf@n+1
 10000  00261C  C065  F182         	movff	??_powf+7,powf@n+2
 10001  002620  C066  F183         	movff	??_powf+8,powf@n+3
 10002  002624  0101               	movlb	1	; () banked
 10003  002626  AFAF               	btfss	(powf@j+3)& (0+255),7,b
 10004  002628  D008               	goto	l7335
 10005                           
 10006                           ; BSR set to: 1
 10007  00262A  1F83               	comf	(powf@n+3)& (0+255),f,b
 10008  00262C  1F82               	comf	(powf@n+2)& (0+255),f,b
 10009  00262E  1F81               	comf	(powf@n+1)& (0+255),f,b
 10010  002630  6D80               	negf	powf@n& (0+255),b
 10011  002632  0E00               	movlw	0
 10012  002634  2381               	addwfc	(powf@n+1)& (0+255),f,b
 10013  002636  2382               	addwfc	(powf@n+2)& (0+255),f,b
 10014  002638  2383               	addwfc	(powf@n+3)& (0+255),f,b
 10015  00263A                     l7335:
 10016                           
 10017                           ; BSR set to: 1
 10018  00263A  C19C  F035         	movff	powf@p_h,___flsub@b
 10019  00263E  C19D  F036         	movff	powf@p_h+1,___flsub@b+1
 10020  002642  C19E  F037         	movff	powf@p_h+2,___flsub@b+2
 10021  002646  C19F  F038         	movff	powf@p_h+3,___flsub@b+3
 10022  00264A  C1B0  F039         	movff	powf@t,___flsub@a
 10023  00264E  C1B1  F03A         	movff	powf@t+1,___flsub@a+1
 10024  002652  C1B2  F03B         	movff	powf@t+2,___flsub@a+2
 10025  002656  C1B3  F03C         	movff	powf@t+3,___flsub@a+3
 10026  00265A  EC52  F02D         	call	___flsub	;wreg free
 10027  00265E  C035  F19C         	movff	?___flsub,powf@p_h
 10028  002662  C036  F19D         	movff	?___flsub+1,powf@p_h+1
 10029  002666  C037  F19E         	movff	?___flsub+2,powf@p_h+2
 10030  00266A  C038  F19F         	movff	?___flsub+3,powf@p_h+3
 10031  00266E                     l7337:
 10032  00266E  C164  F00C         	movff	powf@p_l,___fladd@b
 10033  002672  C165  F00D         	movff	powf@p_l+1,___fladd@b+1
 10034  002676  C166  F00E         	movff	powf@p_l+2,___fladd@b+2
 10035  00267A  C167  F00F         	movff	powf@p_l+3,___fladd@b+3
 10036  00267E  C19C  F010         	movff	powf@p_h,___fladd@a
 10037  002682  C19D  F011         	movff	powf@p_h+1,___fladd@a+1
 10038  002686  C19E  F012         	movff	powf@p_h+2,___fladd@a+2
 10039  00268A  C19F  F013         	movff	powf@p_h+3,___fladd@a+3
 10040  00268E  ECDE  F020         	call	___fladd	;wreg free
 10041  002692  C00C  F1B0         	movff	?___fladd,powf@t
 10042  002696  C00D  F1B1         	movff	?___fladd+1,powf@t+1
 10043  00269A  C00E  F1B2         	movff	?___fladd+2,powf@t+2
 10044  00269E  C00F  F1B3         	movff	?___fladd+3,powf@t+3
 10045  0026A2  C1B0  F1B8         	movff	powf@t,powf@__xc8_float_word
 10046  0026A6  C1B1  F1B9         	movff	powf@t+1,powf@__xc8_float_word+1
 10047  0026AA  C1B2  F1BA         	movff	powf@t+2,powf@__xc8_float_word+2
 10048  0026AE  C1B3  F1BB         	movff	powf@t+3,powf@__xc8_float_word+3
 10049  0026B2  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10050  0026B6  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10051  0026BA  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10052  0026BE  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10053  0026C2  0E00               	movlw	0
 10054  0026C4  0101               	movlb	1	; () banked
 10055  0026C6  1594               	andwf	powf@is& (0+255),w,b
 10056  0026C8  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10057  0026CA  0E80               	movlw	128
 10058  0026CC  1595               	andwf	(powf@is+1)& (0+255),w,b
 10059  0026CE  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10060  0026D0  0EFF               	movlw	255
 10061  0026D2  1596               	andwf	(powf@is+2)& (0+255),w,b
 10062  0026D4  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10063  0026D6  0EFF               	movlw	255
 10064  0026D8  1597               	andwf	(powf@is+3)& (0+255),w,b
 10065  0026DA  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10066                           
 10067                           ; BSR set to: 1
 10068  0026DC  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 10069  0026E0  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 10070  0026E4  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 10071  0026E8  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 10072                           
 10073                           ; BSR set to: 1
 10074  0026EC  C1B0  F01C         	movff	powf@t,___flmul@b
 10075  0026F0  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
 10076  0026F4  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
 10077  0026F8  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
 10078  0026FC  0E00               	movlw	0
 10079  0026FE  6E20               	movwf	___flmul@a^0,c
 10080  002700  0E72               	movlw	114
 10081  002702  6E21               	movwf	(___flmul@a+1)^0,c
 10082  002704  0E31               	movlw	49
 10083  002706  6E22               	movwf	(___flmul@a+2)^0,c
 10084  002708  0E3F               	movlw	63
 10085  00270A  6E23               	movwf	(___flmul@a+3)^0,c
 10086  00270C  EC35  F01F         	call	___flmul	;wreg free
 10087  002710  C01C  F174         	movff	?___flmul,powf@u
 10088  002714  C01D  F175         	movff	?___flmul+1,powf@u+1
 10089  002718  C01E  F176         	movff	?___flmul+2,powf@u+2
 10090  00271C  C01F  F177         	movff	?___flmul+3,powf@u+3
 10091  002720  C19C  F039         	movff	powf@p_h,___flsub@a
 10092  002724  C19D  F03A         	movff	powf@p_h+1,___flsub@a+1
 10093  002728  C19E  F03B         	movff	powf@p_h+2,___flsub@a+2
 10094  00272C  C19F  F03C         	movff	powf@p_h+3,___flsub@a+3
 10095  002730  C1B0  F035         	movff	powf@t,___flsub@b
 10096  002734  C1B1  F036         	movff	powf@t+1,___flsub@b+1
 10097  002738  C1B2  F037         	movff	powf@t+2,___flsub@b+2
 10098  00273C  C1B3  F038         	movff	powf@t+3,___flsub@b+3
 10099  002740  EC52  F02D         	call	___flsub	;wreg free
 10100  002744  C035  F198         	movff	?___flsub,_powf$1657
 10101  002748  C036  F199         	movff	?___flsub+1,_powf$1657+1
 10102  00274C  C037  F19A         	movff	?___flsub+2,_powf$1657+2
 10103  002750  C038  F19B         	movff	?___flsub+3,_powf$1657+3
 10104  002754  0E18               	movlw	24
 10105  002756  6E20               	movwf	___flmul@a^0,c
 10106  002758  0E72               	movlw	114
 10107  00275A  6E21               	movwf	(___flmul@a+1)^0,c
 10108  00275C  0E31               	movlw	49
 10109  00275E  6E22               	movwf	(___flmul@a+2)^0,c
 10110  002760  0E3F               	movlw	63
 10111  002762  6E23               	movwf	(___flmul@a+3)^0,c
 10112  002764  C198  F039         	movff	_powf$1657,___flsub@a
 10113  002768  C199  F03A         	movff	_powf$1657+1,___flsub@a+1
 10114  00276C  C19A  F03B         	movff	_powf$1657+2,___flsub@a+2
 10115  002770  C19B  F03C         	movff	_powf$1657+3,___flsub@a+3
 10116  002774  C164  F035         	movff	powf@p_l,___flsub@b
 10117  002778  C165  F036         	movff	powf@p_l+1,___flsub@b+1
 10118  00277C  C166  F037         	movff	powf@p_l+2,___flsub@b+2
 10119  002780  C167  F038         	movff	powf@p_l+3,___flsub@b+3
 10120  002784  EC52  F02D         	call	___flsub	;wreg free
 10121  002788  C035  F01C         	movff	?___flsub,___flmul@b
 10122  00278C  C036  F01D         	movff	?___flsub+1,___flmul@b+1
 10123  002790  C037  F01E         	movff	?___flsub+2,___flmul@b+2
 10124  002794  C038  F01F         	movff	?___flsub+3,___flmul@b+3
 10125  002798  EC35  F01F         	call	___flmul	;wreg free
 10126  00279C  C01C  F114         	movff	?___flmul,_powf$1667
 10127  0027A0  C01D  F115         	movff	?___flmul+1,_powf$1667+1
 10128  0027A4  C01E  F116         	movff	?___flmul+2,_powf$1667+2
 10129  0027A8  C01F  F117         	movff	?___flmul+3,_powf$1667+3
 10130  0027AC  C114  F00C         	movff	_powf$1667,___fladd@b
 10131  0027B0  C115  F00D         	movff	_powf$1667+1,___fladd@b+1
 10132  0027B4  C116  F00E         	movff	_powf$1667+2,___fladd@b+2
 10133  0027B8  C117  F00F         	movff	_powf$1667+3,___fladd@b+3
 10134  0027BC  0E8C               	movlw	140
 10135  0027BE  6E20               	movwf	___flmul@a^0,c
 10136  0027C0  0EBE               	movlw	190
 10137  0027C2  6E21               	movwf	(___flmul@a+1)^0,c
 10138  0027C4  0EBF               	movlw	191
 10139  0027C6  6E22               	movwf	(___flmul@a+2)^0,c
 10140  0027C8  0E35               	movlw	53
 10141  0027CA  6E23               	movwf	(___flmul@a+3)^0,c
 10142  0027CC  C1B0  F01C         	movff	powf@t,___flmul@b
 10143  0027D0  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
 10144  0027D4  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
 10145  0027D8  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
 10146  0027DC  EC35  F01F         	call	___flmul	;wreg free
 10147  0027E0  C01C  F010         	movff	?___flmul,___fladd@a
 10148  0027E4  C01D  F011         	movff	?___flmul+1,___fladd@a+1
 10149  0027E8  C01E  F012         	movff	?___flmul+2,___fladd@a+2
 10150  0027EC  C01F  F013         	movff	?___flmul+3,___fladd@a+3
 10151  0027F0  ECDE  F020         	call	___fladd	;wreg free
 10152  0027F4  C00C  F178         	movff	?___fladd,powf@v
 10153  0027F8  C00D  F179         	movff	?___fladd+1,powf@v+1
 10154  0027FC  C00E  F17A         	movff	?___fladd+2,powf@v+2
 10155  002800  C00F  F17B         	movff	?___fladd+3,powf@v+3
 10156  002804  C174  F00C         	movff	powf@u,___fladd@b
 10157  002808  C175  F00D         	movff	powf@u+1,___fladd@b+1
 10158  00280C  C176  F00E         	movff	powf@u+2,___fladd@b+2
 10159  002810  C177  F00F         	movff	powf@u+3,___fladd@b+3
 10160  002814  C178  F010         	movff	powf@v,___fladd@a
 10161  002818  C179  F011         	movff	powf@v+1,___fladd@a+1
 10162  00281C  C17A  F012         	movff	powf@v+2,___fladd@a+2
 10163  002820  C17B  F013         	movff	powf@v+3,___fladd@a+3
 10164  002824  ECDE  F020         	call	___fladd	;wreg free
 10165  002828  C00C  F1B4         	movff	?___fladd,powf@z
 10166  00282C  C00D  F1B5         	movff	?___fladd+1,powf@z+1
 10167  002830  C00E  F1B6         	movff	?___fladd+2,powf@z+2
 10168  002834  C00F  F1B7         	movff	?___fladd+3,powf@z+3
 10169  002838  C174  F039         	movff	powf@u,___flsub@a
 10170  00283C  C175  F03A         	movff	powf@u+1,___flsub@a+1
 10171  002840  C176  F03B         	movff	powf@u+2,___flsub@a+2
 10172  002844  C177  F03C         	movff	powf@u+3,___flsub@a+3
 10173  002848  C1B4  F035         	movff	powf@z,___flsub@b
 10174  00284C  C1B5  F036         	movff	powf@z+1,___flsub@b+1
 10175  002850  C1B6  F037         	movff	powf@z+2,___flsub@b+2
 10176  002854  C1B7  F038         	movff	powf@z+3,___flsub@b+3
 10177  002858  EC52  F02D         	call	___flsub	;wreg free
 10178  00285C  C035  F198         	movff	?___flsub,_powf$1657
 10179  002860  C036  F199         	movff	?___flsub+1,_powf$1657+1
 10180  002864  C037  F19A         	movff	?___flsub+2,_powf$1657+2
 10181  002868  C038  F19B         	movff	?___flsub+3,_powf$1657+3
 10182  00286C  C178  F035         	movff	powf@v,___flsub@b
 10183  002870  C179  F036         	movff	powf@v+1,___flsub@b+1
 10184  002874  C17A  F037         	movff	powf@v+2,___flsub@b+2
 10185  002878  C17B  F038         	movff	powf@v+3,___flsub@b+3
 10186  00287C  C198  F039         	movff	_powf$1657,___flsub@a
 10187  002880  C199  F03A         	movff	_powf$1657+1,___flsub@a+1
 10188  002884  C19A  F03B         	movff	_powf$1657+2,___flsub@a+2
 10189  002888  C19B  F03C         	movff	_powf$1657+3,___flsub@a+3
 10190  00288C  EC52  F02D         	call	___flsub	;wreg free
 10191  002890  C035  F144         	movff	?___flsub,powf@w
 10192  002894  C036  F145         	movff	?___flsub+1,powf@w+1
 10193  002898  C037  F146         	movff	?___flsub+2,powf@w+2
 10194  00289C  C038  F147         	movff	?___flsub+3,powf@w+3
 10195  0028A0  C1B4  F01C         	movff	powf@z,___flmul@b
 10196  0028A4  C1B5  F01D         	movff	powf@z+1,___flmul@b+1
 10197  0028A8  C1B6  F01E         	movff	powf@z+2,___flmul@b+2
 10198  0028AC  C1B7  F01F         	movff	powf@z+3,___flmul@b+3
 10199  0028B0  C1B4  F020         	movff	powf@z,___flmul@a
 10200  0028B4  C1B5  F021         	movff	powf@z+1,___flmul@a+1
 10201  0028B8  C1B6  F022         	movff	powf@z+2,___flmul@a+2
 10202  0028BC  C1B7  F023         	movff	powf@z+3,___flmul@a+3
 10203  0028C0  EC35  F01F         	call	___flmul	;wreg free
 10204  0028C4  C01C  F1B0         	movff	?___flmul,powf@t
 10205  0028C8  C01D  F1B1         	movff	?___flmul+1,powf@t+1
 10206  0028CC  C01E  F1B2         	movff	?___flmul+2,powf@t+2
 10207  0028D0  C01F  F1B3         	movff	?___flmul+3,powf@t+3
 10208  0028D4  0E0E               	movlw	14
 10209  0028D6  6E10               	movwf	___fladd@a^0,c
 10210  0028D8  0EEA               	movlw	234
 10211  0028DA  6E11               	movwf	(___fladd@a+1)^0,c
 10212  0028DC  0EDD               	movlw	221
 10213  0028DE  6E12               	movwf	(___fladd@a+2)^0,c
 10214  0028E0  0EB5               	movlw	181
 10215  0028E2  6E13               	movwf	(___fladd@a+3)^0,c
 10216  0028E4  0E4C               	movlw	76
 10217  0028E6  6E20               	movwf	___flmul@a^0,c
 10218  0028E8  0EBB               	movlw	187
 10219  0028EA  6E21               	movwf	(___flmul@a+1)^0,c
 10220  0028EC  0E31               	movlw	49
 10221  0028EE  6E22               	movwf	(___flmul@a+2)^0,c
 10222  0028F0  0E33               	movlw	51
 10223  0028F2  6E23               	movwf	(___flmul@a+3)^0,c
 10224  0028F4  C1B0  F01C         	movff	powf@t,___flmul@b
 10225  0028F8  C1B1  F01D         	movff	powf@t+1,___flmul@b+1
 10226  0028FC  C1B2  F01E         	movff	powf@t+2,___flmul@b+2
 10227  002900  C1B3  F01F         	movff	powf@t+3,___flmul@b+3
 10228  002904  EC35  F01F         	call	___flmul	;wreg free
 10229  002908  C01C  F00C         	movff	?___flmul,___fladd@b
 10230  00290C  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10231  002910  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10232  002914  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10233  002918  ECDE  F020         	call	___fladd	;wreg free
 10234  00291C  C00C  F1A4         	movff	?___fladd,_powf$1654
 10235  002920  C00D  F1A5         	movff	?___fladd+1,_powf$1654+1
 10236  002924  C00E  F1A6         	movff	?___fladd+2,_powf$1654+2
 10237  002928  C00F  F1A7         	movff	?___fladd+3,_powf$1654+3
 10238  00292C  0E55               	movlw	85
 10239  00292E  6E10               	movwf	___fladd@a^0,c
 10240  002930  0EB3               	movlw	179
 10241  002932  6E11               	movwf	(___fladd@a+1)^0,c
 10242  002934  0E8A               	movlw	138
 10243  002936  6E12               	movwf	(___fladd@a+2)^0,c
 10244  002938  0E38               	movlw	56
 10245  00293A  6E13               	movwf	(___fladd@a+3)^0,c
 10246  00293C  C1B0  F020         	movff	powf@t,___flmul@a
 10247  002940  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 10248  002944  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 10249  002948  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 10250  00294C  C1A4  F01C         	movff	_powf$1654,___flmul@b
 10251  002950  C1A5  F01D         	movff	_powf$1654+1,___flmul@b+1
 10252  002954  C1A6  F01E         	movff	_powf$1654+2,___flmul@b+2
 10253  002958  C1A7  F01F         	movff	_powf$1654+3,___flmul@b+3
 10254  00295C  EC35  F01F         	call	___flmul	;wreg free
 10255  002960  C01C  F00C         	movff	?___flmul,___fladd@b
 10256  002964  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10257  002968  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10258  00296C  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10259  002970  ECDE  F020         	call	___fladd	;wreg free
 10260  002974  C00C  F154         	movff	?___fladd,_powf$1655
 10261  002978  C00D  F155         	movff	?___fladd+1,_powf$1655+1
 10262  00297C  C00E  F156         	movff	?___fladd+2,_powf$1655+2
 10263  002980  C00F  F157         	movff	?___fladd+3,_powf$1655+3
 10264  002984  0E61               	movlw	97
 10265  002986  6E10               	movwf	___fladd@a^0,c
 10266  002988  0E0B               	movlw	11
 10267  00298A  6E11               	movwf	(___fladd@a+1)^0,c
 10268  00298C  0E36               	movlw	54
 10269  00298E  6E12               	movwf	(___fladd@a+2)^0,c
 10270  002990  0EBB               	movlw	187
 10271  002992  6E13               	movwf	(___fladd@a+3)^0,c
 10272  002994  C1B0  F020         	movff	powf@t,___flmul@a
 10273  002998  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 10274  00299C  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 10275  0029A0  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 10276  0029A4  C154  F01C         	movff	_powf$1655,___flmul@b
 10277  0029A8  C155  F01D         	movff	_powf$1655+1,___flmul@b+1
 10278  0029AC  C156  F01E         	movff	_powf$1655+2,___flmul@b+2
 10279  0029B0  C157  F01F         	movff	_powf$1655+3,___flmul@b+3
 10280  0029B4  EC35  F01F         	call	___flmul	;wreg free
 10281  0029B8  C01C  F00C         	movff	?___flmul,___fladd@b
 10282  0029BC  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10283  0029C0  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10284  0029C4  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10285  0029C8  ECDE  F020         	call	___fladd	;wreg free
 10286  0029CC  C00C  F148         	movff	?___fladd,_powf$1656
 10287  0029D0  C00D  F149         	movff	?___fladd+1,_powf$1656+1
 10288  0029D4  C00E  F14A         	movff	?___fladd+2,_powf$1656+2
 10289  0029D8  C00F  F14B         	movff	?___fladd+3,_powf$1656+3
 10290  0029DC  0EAB               	movlw	171
 10291  0029DE  6E10               	movwf	___fladd@a^0,c
 10292  0029E0  0EAA               	movlw	170
 10293  0029E2  6E11               	movwf	(___fladd@a+1)^0,c
 10294  0029E4  0E2A               	movlw	42
 10295  0029E6  6E12               	movwf	(___fladd@a+2)^0,c
 10296  0029E8  0E3E               	movlw	62
 10297  0029EA  6E13               	movwf	(___fladd@a+3)^0,c
 10298  0029EC  C1B0  F020         	movff	powf@t,___flmul@a
 10299  0029F0  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 10300  0029F4  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 10301  0029F8  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 10302  0029FC  C148  F01C         	movff	_powf$1656,___flmul@b
 10303  002A00  C149  F01D         	movff	_powf$1656+1,___flmul@b+1
 10304  002A04  C14A  F01E         	movff	_powf$1656+2,___flmul@b+2
 10305  002A08  C14B  F01F         	movff	_powf$1656+3,___flmul@b+3
 10306  002A0C  EC35  F01F         	call	___flmul	;wreg free
 10307  002A10  C01C  F00C         	movff	?___flmul,___fladd@b
 10308  002A14  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10309  002A18  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10310  002A1C  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10311  002A20  ECDE  F020         	call	___fladd	;wreg free
 10312  002A24  C00C  F138         	movff	?___fladd,_powf$1658
 10313  002A28  C00D  F139         	movff	?___fladd+1,_powf$1658+1
 10314  002A2C  C00E  F13A         	movff	?___fladd+2,_powf$1658+2
 10315  002A30  C00F  F13B         	movff	?___fladd+3,_powf$1658+3
 10316  002A34  C1B4  F035         	movff	powf@z,___flsub@b
 10317  002A38  C1B5  F036         	movff	powf@z+1,___flsub@b+1
 10318  002A3C  C1B6  F037         	movff	powf@z+2,___flsub@b+2
 10319  002A40  C1B7  F038         	movff	powf@z+3,___flsub@b+3
 10320  002A44  C1B0  F020         	movff	powf@t,___flmul@a
 10321  002A48  C1B1  F021         	movff	powf@t+1,___flmul@a+1
 10322  002A4C  C1B2  F022         	movff	powf@t+2,___flmul@a+2
 10323  002A50  C1B3  F023         	movff	powf@t+3,___flmul@a+3
 10324  002A54  C138  F01C         	movff	_powf$1658,___flmul@b
 10325  002A58  C139  F01D         	movff	_powf$1658+1,___flmul@b+1
 10326  002A5C  C13A  F01E         	movff	_powf$1658+2,___flmul@b+2
 10327  002A60  C13B  F01F         	movff	_powf$1658+3,___flmul@b+3
 10328  002A64  EC35  F01F         	call	___flmul	;wreg free
 10329  002A68  C01C  F039         	movff	?___flmul,___flsub@a
 10330  002A6C  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
 10331  002A70  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
 10332  002A74  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
 10333  002A78  EC52  F02D         	call	___flsub	;wreg free
 10334  002A7C  C035  F184         	movff	?___flsub,powf@t1
 10335  002A80  C036  F185         	movff	?___flsub+1,powf@t1+1
 10336  002A84  C037  F186         	movff	?___flsub+2,powf@t1+2
 10337  002A88  C038  F187         	movff	?___flsub+3,powf@t1+3
 10338  002A8C  0E00               	movlw	0
 10339  002A8E  6E10               	movwf	___fladd@a^0,c
 10340  002A90  0E00               	movlw	0
 10341  002A92  6E11               	movwf	(___fladd@a+1)^0,c
 10342  002A94  0E00               	movlw	0
 10343  002A96  6E12               	movwf	(___fladd@a+2)^0,c
 10344  002A98  0EC0               	movlw	192
 10345  002A9A  6E13               	movwf	(___fladd@a+3)^0,c
 10346  002A9C  C184  F00C         	movff	powf@t1,___fladd@b
 10347  002AA0  C185  F00D         	movff	powf@t1+1,___fladd@b+1
 10348  002AA4  C186  F00E         	movff	powf@t1+2,___fladd@b+2
 10349  002AA8  C187  F00F         	movff	powf@t1+3,___fladd@b+3
 10350  002AAC  ECDE  F020         	call	___fladd	;wreg free
 10351  002AB0  C00C  F041         	movff	?___fladd,___fldiv@a
 10352  002AB4  C00D  F042         	movff	?___fladd+1,___fldiv@a+1
 10353  002AB8  C00E  F043         	movff	?___fladd+2,___fldiv@a+2
 10354  002ABC  C00F  F044         	movff	?___fladd+3,___fldiv@a+3
 10355  002AC0  C184  F020         	movff	powf@t1,___flmul@a
 10356  002AC4  C185  F021         	movff	powf@t1+1,___flmul@a+1
 10357  002AC8  C186  F022         	movff	powf@t1+2,___flmul@a+2
 10358  002ACC  C187  F023         	movff	powf@t1+3,___flmul@a+3
 10359  002AD0  C1B4  F01C         	movff	powf@z,___flmul@b
 10360  002AD4  C1B5  F01D         	movff	powf@z+1,___flmul@b+1
 10361  002AD8  C1B6  F01E         	movff	powf@z+2,___flmul@b+2
 10362  002ADC  C1B7  F01F         	movff	powf@z+3,___flmul@b+3
 10363  002AE0  EC35  F01F         	call	___flmul	;wreg free
 10364  002AE4  C01C  F03D         	movff	?___flmul,___fldiv@b
 10365  002AE8  C01D  F03E         	movff	?___flmul+1,___fldiv@b+1
 10366  002AEC  C01E  F03F         	movff	?___flmul+2,___fldiv@b+2
 10367  002AF0  C01F  F040         	movff	?___flmul+3,___fldiv@b+3
 10368  002AF4  EC64  F022         	call	___fldiv	;wreg free
 10369  002AF8  C03D  F13C         	movff	?___fldiv,_powf$1662
 10370  002AFC  C03E  F13D         	movff	?___fldiv+1,_powf$1662+1
 10371  002B00  C03F  F13E         	movff	?___fldiv+2,_powf$1662+2
 10372  002B04  C040  F13F         	movff	?___fldiv+3,_powf$1662+3
 10373  002B08  C144  F010         	movff	powf@w,___fladd@a
 10374  002B0C  C145  F011         	movff	powf@w+1,___fladd@a+1
 10375  002B10  C146  F012         	movff	powf@w+2,___fladd@a+2
 10376  002B14  C147  F013         	movff	powf@w+3,___fladd@a+3
 10377  002B18  C144  F020         	movff	powf@w,___flmul@a
 10378  002B1C  C145  F021         	movff	powf@w+1,___flmul@a+1
 10379  002B20  C146  F022         	movff	powf@w+2,___flmul@a+2
 10380  002B24  C147  F023         	movff	powf@w+3,___flmul@a+3
 10381  002B28  C1B4  F01C         	movff	powf@z,___flmul@b
 10382  002B2C  C1B5  F01D         	movff	powf@z+1,___flmul@b+1
 10383  002B30  C1B6  F01E         	movff	powf@z+2,___flmul@b+2
 10384  002B34  C1B7  F01F         	movff	powf@z+3,___flmul@b+3
 10385  002B38  EC35  F01F         	call	___flmul	;wreg free
 10386  002B3C  C01C  F00C         	movff	?___flmul,___fladd@b
 10387  002B40  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10388  002B44  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10389  002B48  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10390  002B4C  ECDE  F020         	call	___fladd	;wreg free
 10391  002B50  C00C  F118         	movff	?___fladd,_powf$1668
 10392  002B54  C00D  F119         	movff	?___fladd+1,_powf$1668+1
 10393  002B58  C00E  F11A         	movff	?___fladd+2,_powf$1668+2
 10394  002B5C  C00F  F11B         	movff	?___fladd+3,_powf$1668+3
 10395  002B60  C13C  F035         	movff	_powf$1662,___flsub@b
 10396  002B64  C13D  F036         	movff	_powf$1662+1,___flsub@b+1
 10397  002B68  C13E  F037         	movff	_powf$1662+2,___flsub@b+2
 10398  002B6C  C13F  F038         	movff	_powf$1662+3,___flsub@b+3
 10399  002B70  C118  F039         	movff	_powf$1668,___flsub@a
 10400  002B74  C119  F03A         	movff	_powf$1668+1,___flsub@a+1
 10401  002B78  C11A  F03B         	movff	_powf$1668+2,___flsub@a+2
 10402  002B7C  C11B  F03C         	movff	_powf$1668+3,___flsub@a+3
 10403  002B80  EC52  F02D         	call	___flsub	;wreg free
 10404  002B84  C035  F14C         	movff	?___flsub,powf@r
 10405  002B88  C036  F14D         	movff	?___flsub+1,powf@r+1
 10406  002B8C  C037  F14E         	movff	?___flsub+2,powf@r+2
 10407  002B90  C038  F14F         	movff	?___flsub+3,powf@r+3
 10408  002B94  C1B4  F039         	movff	powf@z,___flsub@a
 10409  002B98  C1B5  F03A         	movff	powf@z+1,___flsub@a+1
 10410  002B9C  C1B6  F03B         	movff	powf@z+2,___flsub@a+2
 10411  002BA0  C1B7  F03C         	movff	powf@z+3,___flsub@a+3
 10412  002BA4  C14C  F035         	movff	powf@r,___flsub@b
 10413  002BA8  C14D  F036         	movff	powf@r+1,___flsub@b+1
 10414  002BAC  C14E  F037         	movff	powf@r+2,___flsub@b+2
 10415  002BB0  C14F  F038         	movff	powf@r+3,___flsub@b+3
 10416  002BB4  EC52  F02D         	call	___flsub	;wreg free
 10417  002BB8  C035  F198         	movff	?___flsub,_powf$1657
 10418  002BBC  C036  F199         	movff	?___flsub+1,_powf$1657+1
 10419  002BC0  C037  F19A         	movff	?___flsub+2,_powf$1657+2
 10420  002BC4  C038  F19B         	movff	?___flsub+3,_powf$1657+3
 10421  002BC8  0E00               	movlw	0
 10422  002BCA  6E35               	movwf	___flsub@b^0,c
 10423  002BCC  0E00               	movlw	0
 10424  002BCE  6E36               	movwf	(___flsub@b+1)^0,c
 10425  002BD0  0E80               	movlw	128
 10426  002BD2  6E37               	movwf	(___flsub@b+2)^0,c
 10427  002BD4  0E3F               	movlw	63
 10428  002BD6  6E38               	movwf	(___flsub@b+3)^0,c
 10429  002BD8  C198  F039         	movff	_powf$1657,___flsub@a
 10430  002BDC  C199  F03A         	movff	_powf$1657+1,___flsub@a+1
 10431  002BE0  C19A  F03B         	movff	_powf$1657+2,___flsub@a+2
 10432  002BE4  C19B  F03C         	movff	_powf$1657+3,___flsub@a+3
 10433  002BE8  EC52  F02D         	call	___flsub	;wreg free
 10434  002BEC  C035  F1B4         	movff	?___flsub,powf@z
 10435  002BF0  C036  F1B5         	movff	?___flsub+1,powf@z+1
 10436  002BF4  C037  F1B6         	movff	?___flsub+2,powf@z+2
 10437  002BF8  C038  F1B7         	movff	?___flsub+3,powf@z+3
 10438  002BFC  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 10439  002C00  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 10440  002C04  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 10441  002C08  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 10442  002C0C  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 10443  002C10  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 10444  002C14  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 10445  002C18  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 10446  002C1C  C180  F05E         	movff	powf@n,??_powf
 10447  002C20  C181  F05F         	movff	powf@n+1,??_powf+1
 10448  002C24  C182  F060         	movff	powf@n+2,??_powf+2
 10449  002C28  C183  F061         	movff	powf@n+3,??_powf+3
 10450  002C2C  0E17               	movlw	23
 10451  002C2E                     u9605:
 10452  002C2E  90D8               	bcf	status,0,c
 10453  002C30  365E               	rlcf	??_powf^0,f,c
 10454  002C32  365F               	rlcf	(??_powf+1)^0,f,c
 10455  002C34  3660               	rlcf	(??_powf+2)^0,f,c
 10456  002C36  3661               	rlcf	(??_powf+3)^0,f,c
 10457  002C38  2EE8               	decfsz	wreg,f,c
 10458  002C3A  D7F9               	goto	u9605
 10459  002C3C  505E               	movf	??_powf^0,w,c
 10460  002C3E  0101               	movlb	1	; () banked
 10461  002C40  27AC               	addwf	powf@j& (0+255),f,b
 10462  002C42  505F               	movf	(??_powf+1)^0,w,c
 10463  002C44  23AD               	addwfc	(powf@j+1)& (0+255),f,b
 10464  002C46  5060               	movf	(??_powf+2)^0,w,c
 10465  002C48  23AE               	addwfc	(powf@j+2)& (0+255),f,b
 10466  002C4A  5061               	movf	(??_powf+3)^0,w,c
 10467  002C4C  23AF               	addwfc	(powf@j+3)& (0+255),f,b
 10468                           
 10469                           ; BSR set to: 1
 10470  002C4E  0E17               	movlw	23
 10471  002C50  6E5E               	movwf	??_powf^0,c
 10472  002C52  C1AC  F05F         	movff	powf@j,??_powf+1
 10473  002C56  C1AD  F060         	movff	powf@j+1,??_powf+2
 10474  002C5A  C1AE  F061         	movff	powf@j+2,??_powf+3
 10475  002C5E  C1AF  F062         	movff	powf@j+3,??_powf+4
 10476  002C62                     u9615:
 10477  002C62  665E               	tstfsz	??_powf^0,c
 10478  002C64  D001               	goto	u9616
 10479  002C66  D007               	goto	u9617
 10480  002C68                     u9616:
 10481  002C68  3462               	rlcf	(??_powf+4)^0,w,c
 10482  002C6A  3262               	rrcf	(??_powf+4)^0,f,c
 10483  002C6C  3261               	rrcf	(??_powf+3)^0,f,c
 10484  002C6E  3260               	rrcf	(??_powf+2)^0,f,c
 10485  002C70  325F               	rrcf	(??_powf+1)^0,f,c
 10486  002C72  2E5E               	decfsz	??_powf^0,f,c
 10487  002C74  D7F6               	goto	u9615
 10488  002C76                     u9617:
 10489  002C76  BE62               	btfsc	(??_powf+4)^0,7,c
 10490  002C78  D007               	goto	u9620
 10491  002C7A  5062               	movf	(??_powf+4)^0,w,c
 10492  002C7C  1061               	iorwf	(??_powf+3)^0,w,c
 10493  002C7E  1060               	iorwf	(??_powf+2)^0,w,c
 10494  002C80  E11A               	bnz	l1327
 10495  002C82  045F               	decf	(??_powf+1)^0,w,c
 10496  002C84  B0D8               	btfsc	status,0,c
 10497  002C86  D017               	goto	l1327
 10498  002C88                     u9620:
 10499  002C88  C1B4  F035         	movff	powf@z,scalbnf@x
 10500  002C8C  C1B5  F036         	movff	powf@z+1,scalbnf@x+1
 10501  002C90  C1B6  F037         	movff	powf@z+2,scalbnf@x+2
 10502  002C94  C1B7  F038         	movff	powf@z+3,scalbnf@x+3
 10503  002C98  C180  F039         	movff	powf@n,scalbnf@n
 10504  002C9C  C181  F03A         	movff	powf@n+1,scalbnf@n+1
 10505  002CA0  ECA8  F023         	call	_scalbnf	;wreg free
 10506  002CA4  C035  F1B4         	movff	?_scalbnf,powf@z
 10507  002CA8  C036  F1B5         	movff	?_scalbnf+1,powf@z+1
 10508  002CAC  C037  F1B6         	movff	?_scalbnf+2,powf@z+2
 10509  002CB0  C038  F1B7         	movff	?_scalbnf+3,powf@z+3
 10510  002CB4  D010               	goto	l7393
 10511  002CB6                     l1327:
 10512  002CB6  C1AC  F1B8         	movff	powf@j,powf@__xc8_float_word
 10513  002CBA  C1AD  F1B9         	movff	powf@j+1,powf@__xc8_float_word+1
 10514  002CBE  C1AE  F1BA         	movff	powf@j+2,powf@__xc8_float_word+2
 10515  002CC2  C1AF  F1BB         	movff	powf@j+3,powf@__xc8_float_word+3
 10516  002CC6  C1B8  F1B4         	movff	powf@__xc8_float_word,powf@z
 10517  002CCA  C1B9  F1B5         	movff	powf@__xc8_float_word+1,powf@z+1
 10518  002CCE  C1BA  F1B6         	movff	powf@__xc8_float_word+2,powf@z+2
 10519  002CD2  C1BB  F1B7         	movff	powf@__xc8_float_word+3,powf@z+3
 10520  002CD6                     l7393:
 10521  002CD6  C188  F01C         	movff	powf@sn,___flmul@b
 10522  002CDA  C189  F01D         	movff	powf@sn+1,___flmul@b+1
 10523  002CDE  C18A  F01E         	movff	powf@sn+2,___flmul@b+2
 10524  002CE2  C18B  F01F         	movff	powf@sn+3,___flmul@b+3
 10525  002CE6  C1B4  F020         	movff	powf@z,___flmul@a
 10526  002CEA  C1B5  F021         	movff	powf@z+1,___flmul@a+1
 10527  002CEE  C1B6  F022         	movff	powf@z+2,___flmul@a+2
 10528  002CF2  C1B7  F023         	movff	powf@z+3,___flmul@a+3
 10529  002CF6  EC35  F01F         	call	___flmul	;wreg free
 10530  002CFA  C01C  F056         	movff	?___flmul,?_powf
 10531  002CFE  C01D  F057         	movff	?___flmul+1,?_powf+1
 10532  002D02  C01E  F058         	movff	?___flmul+2,?_powf+2
 10533  002D06  C01F  F059         	movff	?___flmul+3,?_powf+3
 10534  002D0A  0012               	return		;funcret
 10535  002D0C                     __end_of_powf:
 10536                           	opt callstack 0
 10537                           
 10538 ;; *************** function _sqrtf *****************
 10539 ;; Defined at:
 10540 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sqrtf.c"
 10541 ;; Parameters:    Size  Location     Type
 10542 ;;  x               4   72[COMRAM] float 
 10543 ;; Auto vars:     Size  Location     Type
 10544 ;;  ix              4   36[BANK0 ] long 
 10545 ;;  r               4   32[BANK0 ] unsigned long 
 10546 ;;  m               4   28[BANK0 ] long 
 10547 ;;  z               4   24[BANK0 ] float 
 10548 ;;  t               4   20[BANK0 ] long 
 10549 ;;  q               4   16[BANK0 ] long 
 10550 ;;  __xc8_float_    4   12[BANK0 ] struct .
 10551 ;;  i               4    8[BANK0 ] long 
 10552 ;;  s               4    4[BANK0 ] long 
 10553 ;;  sign            4    0        long 
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  4   72[COMRAM] float 
 10556 ;; Registers used:
 10557 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10563 ;;      Params:         4       0       0       0       0       0       0
 10564 ;;      Locals:         0      40       0       0       0       0       0
 10565 ;;      Temps:          5       0       0       0       0       0       0
 10566 ;;      Totals:         9      40       0       0       0       0       0
 10567 ;;Total ram usage:       49 bytes
 10568 ;; Hardware stack levels used:    1
 10569 ;; Hardware stack levels required when called:    5
 10570 ;; This function calls:
 10571 ;;		___fladd
 10572 ;;		___flge
 10573 ;;		___flmul
 10574 ;;		_nanf
 10575 ;; This function is called by:
 10576 ;;		_powf
 10577 ;; This function uses a non-reentrant model
 10578 ;;
 10579                           
 10580                           	psect	text36
 10581  00368A                     __ptext36:
 10582                           	opt callstack 0
 10583  00368A                     _sqrtf:
 10584                           	opt callstack 22
 10585                           
 10586                           ;incstack = 0
 10587  00368A  C049  F08C         	movff	sqrtf@x,sqrtf@__xc8_float_word
 10588  00368E  C04A  F08D         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
 10589  003692  C04B  F08E         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
 10590  003696  C04C  F08F         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
 10591  00369A  C08C  F0A4         	movff	sqrtf@__xc8_float_word,sqrtf@ix
 10592  00369E  C08D  F0A5         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
 10593  0036A2  C08E  F0A6         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
 10594  0036A6  C08F  F0A7         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
 10595  0036AA  0E00               	movlw	0
 10596  0036AC  0100               	movlb	0	; () banked
 10597  0036AE  15A4               	andwf	sqrtf@ix& (0+255),w,b
 10598  0036B0  6E4D               	movwf	??_sqrtf^0,c
 10599  0036B2  0E00               	movlw	0
 10600  0036B4  15A5               	andwf	(sqrtf@ix+1)& (0+255),w,b
 10601  0036B6  6E4E               	movwf	(??_sqrtf+1)^0,c
 10602  0036B8  0E80               	movlw	128
 10603  0036BA  15A6               	andwf	(sqrtf@ix+2)& (0+255),w,b
 10604  0036BC  6E4F               	movwf	(??_sqrtf+2)^0,c
 10605  0036BE  0E7F               	movlw	127
 10606  0036C0  15A7               	andwf	(sqrtf@ix+3)& (0+255),w,b
 10607  0036C2  6E50               	movwf	(??_sqrtf+3)^0,c
 10608  0036C4  0E80               	movlw	128
 10609  0036C6  184F               	xorwf	(??_sqrtf+2)^0,w,c
 10610  0036C8  E133               	bnz	l6843
 10611  0036CA  0E7F               	movlw	127
 10612  0036CC  1850               	xorwf	(??_sqrtf+3)^0,w,c
 10613  0036CE  104D               	iorwf	??_sqrtf^0,w,c
 10614  0036D0  104E               	iorwf	(??_sqrtf+1)^0,w,c
 10615  0036D2  A4D8               	btfss	status,2,c
 10616  0036D4  D02D               	goto	l6843
 10617                           
 10618                           ; BSR set to: 0
 10619  0036D6  C049  F020         	movff	sqrtf@x,___flmul@a
 10620  0036DA  C04A  F021         	movff	sqrtf@x+1,___flmul@a+1
 10621  0036DE  C04B  F022         	movff	sqrtf@x+2,___flmul@a+2
 10622  0036E2  C04C  F023         	movff	sqrtf@x+3,___flmul@a+3
 10623  0036E6  C049  F01C         	movff	sqrtf@x,___flmul@b
 10624  0036EA  C04A  F01D         	movff	sqrtf@x+1,___flmul@b+1
 10625  0036EE  C04B  F01E         	movff	sqrtf@x+2,___flmul@b+2
 10626  0036F2  C04C  F01F         	movff	sqrtf@x+3,___flmul@b+3
 10627  0036F6  EC35  F01F         	call	___flmul	;wreg free
 10628  0036FA  C01C  F00C         	movff	?___flmul,___fladd@b
 10629  0036FE  C01D  F00D         	movff	?___flmul+1,___fladd@b+1
 10630  003702  C01E  F00E         	movff	?___flmul+2,___fladd@b+2
 10631  003706  C01F  F00F         	movff	?___flmul+3,___fladd@b+3
 10632  00370A  C049  F010         	movff	sqrtf@x,___fladd@a
 10633  00370E  C04A  F011         	movff	sqrtf@x+1,___fladd@a+1
 10634  003712  C04B  F012         	movff	sqrtf@x+2,___fladd@a+2
 10635  003716  C04C  F013         	movff	sqrtf@x+3,___fladd@a+3
 10636  00371A  ECDE  F020         	call	___fladd	;wreg free
 10637  00371E  C00C  F049         	movff	?___fladd,?_sqrtf
 10638  003722  C00D  F04A         	movff	?___fladd+1,?_sqrtf+1
 10639  003726  C00E  F04B         	movff	?___fladd+2,?_sqrtf+2
 10640  00372A  C00F  F04C         	movff	?___fladd+3,?_sqrtf+3
 10641  00372E  0012               	return	
 10642  003730                     l6843:
 10643                           
 10644                           ; BSR set to: 0
 10645  003730  BFA7               	btfsc	(sqrtf@ix+3)& (0+255),7,b
 10646  003732  D007               	goto	u8860
 10647  003734  51A7               	movf	(sqrtf@ix+3)& (0+255),w,b
 10648  003736  11A6               	iorwf	(sqrtf@ix+2)& (0+255),w,b
 10649  003738  11A5               	iorwf	(sqrtf@ix+1)& (0+255),w,b
 10650  00373A  E133               	bnz	l6857
 10651  00373C  05A4               	decf	sqrtf@ix& (0+255),w,b
 10652  00373E  B0D8               	btfsc	status,0,c
 10653  003740  D030               	goto	l6857
 10654  003742                     u8860:
 10655                           
 10656                           ; BSR set to: 0
 10657  003742  0EFF               	movlw	255
 10658  003744  15A4               	andwf	sqrtf@ix& (0+255),w,b
 10659  003746  6E4D               	movwf	??_sqrtf^0,c
 10660  003748  0EFF               	movlw	255
 10661  00374A  15A5               	andwf	(sqrtf@ix+1)& (0+255),w,b
 10662  00374C  6E4E               	movwf	(??_sqrtf+1)^0,c
 10663  00374E  0EFF               	movlw	255
 10664  003750  15A6               	andwf	(sqrtf@ix+2)& (0+255),w,b
 10665  003752  6E4F               	movwf	(??_sqrtf+2)^0,c
 10666  003754  0E7F               	movlw	127
 10667  003756  15A7               	andwf	(sqrtf@ix+3)& (0+255),w,b
 10668  003758  6E50               	movwf	(??_sqrtf+3)^0,c
 10669  00375A  504D               	movf	??_sqrtf^0,w,c
 10670  00375C  104E               	iorwf	(??_sqrtf+1)^0,w,c
 10671  00375E  104F               	iorwf	(??_sqrtf+2)^0,w,c
 10672  003760  1050               	iorwf	(??_sqrtf+3)^0,w,c
 10673  003762  A4D8               	btfss	status,2,c
 10674  003764  D009               	goto	l6849
 10675                           
 10676                           ; BSR set to: 0
 10677  003766  C049  F049         	movff	sqrtf@x,?_sqrtf
 10678  00376A  C04A  F04A         	movff	sqrtf@x+1,?_sqrtf+1
 10679  00376E  C04B  F04B         	movff	sqrtf@x+2,?_sqrtf+2
 10680  003772  C04C  F04C         	movff	sqrtf@x+3,?_sqrtf+3
 10681  003776  0012               	return	
 10682  003778                     l6849:
 10683                           
 10684                           ; BSR set to: 0
 10685  003778  AFA7               	btfss	(sqrtf@ix+3)& (0+255),7,b
 10686  00377A  D013               	goto	l6857
 10687                           
 10688                           ; BSR set to: 0
 10689  00377C  0E00               	movlw	0
 10690  00377E  6E68               	movwf	(_errno+1)^0,c
 10691  003780  0E21               	movlw	33
 10692  003782  6E67               	movwf	_errno^0,c
 10693                           
 10694                           ; BSR set to: 0
 10695  003784  0E98               	movlw	low (STR_5+3)
 10696  003786  6E0C               	movwf	nanf@s^0,c
 10697  003788  0E06               	movlw	high (STR_5+3)
 10698  00378A  6E0D               	movwf	(nanf@s+1)^0,c
 10699  00378C  EC78  F02E         	call	_nanf	;wreg free
 10700  003790  C00C  F049         	movff	?_nanf,?_sqrtf
 10701  003794  C00D  F04A         	movff	?_nanf+1,?_sqrtf+1
 10702  003798  C00E  F04B         	movff	?_nanf+2,?_sqrtf+2
 10703  00379C  C00F  F04C         	movff	?_nanf+3,?_sqrtf+3
 10704  0037A0  0012               	return	
 10705  0037A2                     l6857:
 10706                           
 10707                           ; BSR set to: 0
 10708  0037A2  0E17               	movlw	23
 10709  0037A4  6E4D               	movwf	??_sqrtf^0,c
 10710  0037A6  C0A4  F04E         	movff	sqrtf@ix,??_sqrtf+1
 10711  0037AA  C0A5  F04F         	movff	sqrtf@ix+1,??_sqrtf+2
 10712  0037AE  C0A6  F050         	movff	sqrtf@ix+2,??_sqrtf+3
 10713  0037B2  C0A7  F051         	movff	sqrtf@ix+3,??_sqrtf+4
 10714  0037B6                     u8895:
 10715  0037B6  664D               	tstfsz	??_sqrtf^0,c
 10716  0037B8  D001               	goto	u8896
 10717  0037BA  D007               	goto	u8897
 10718  0037BC                     u8896:
 10719  0037BC  3451               	rlcf	(??_sqrtf+4)^0,w,c
 10720  0037BE  3251               	rrcf	(??_sqrtf+4)^0,f,c
 10721  0037C0  3250               	rrcf	(??_sqrtf+3)^0,f,c
 10722  0037C2  324F               	rrcf	(??_sqrtf+2)^0,f,c
 10723  0037C4  324E               	rrcf	(??_sqrtf+1)^0,f,c
 10724  0037C6  2E4D               	decfsz	??_sqrtf^0,f,c
 10725  0037C8  D7F6               	goto	u8895
 10726  0037CA                     u8897:
 10727  0037CA  C04E  F09C         	movff	??_sqrtf+1,sqrtf@m
 10728  0037CE  C04F  F09D         	movff	??_sqrtf+2,sqrtf@m+1
 10729  0037D2  C050  F09E         	movff	??_sqrtf+3,sqrtf@m+2
 10730  0037D6  C051  F09F         	movff	??_sqrtf+4,sqrtf@m+3
 10731  0037DA  0100               	movlb	0	; () banked
 10732  0037DC  519C               	movf	sqrtf@m& (0+255),w,b
 10733  0037DE  119D               	iorwf	(sqrtf@m+1)& (0+255),w,b
 10734  0037E0  119E               	iorwf	(sqrtf@m+2)& (0+255),w,b
 10735  0037E2  119F               	iorwf	(sqrtf@m+3)& (0+255),w,b
 10736  0037E4  A4D8               	btfss	status,2,c
 10737  0037E6  D02A               	goto	l1357
 10738                           
 10739                           ; BSR set to: 0
 10740  0037E8  0E00               	movlw	0
 10741  0037EA  6F88               	movwf	sqrtf@i& (0+255),b
 10742  0037EC  0E00               	movlw	0
 10743  0037EE  6F89               	movwf	(sqrtf@i+1)& (0+255),b
 10744  0037F0  0E00               	movlw	0
 10745  0037F2  6F8A               	movwf	(sqrtf@i+2)& (0+255),b
 10746  0037F4  0E00               	movlw	0
 10747  0037F6  6F8B               	movwf	(sqrtf@i+3)& (0+255),b
 10748  0037F8  D00B               	goto	l6865
 10749  0037FA                     l6861:
 10750                           
 10751                           ; BSR set to: 0
 10752  0037FA  90D8               	bcf	status,0,c
 10753  0037FC  37A4               	rlcf	sqrtf@ix& (0+255),f,b
 10754  0037FE  37A5               	rlcf	(sqrtf@ix+1)& (0+255),f,b
 10755  003800  37A6               	rlcf	(sqrtf@ix+2)& (0+255),f,b
 10756  003802  37A7               	rlcf	(sqrtf@ix+3)& (0+255),f,b
 10757                           
 10758                           ; BSR set to: 0
 10759  003804  0E01               	movlw	1
 10760  003806  2788               	addwf	sqrtf@i& (0+255),f,b
 10761  003808  0E00               	movlw	0
 10762  00380A  2389               	addwfc	(sqrtf@i+1)& (0+255),f,b
 10763  00380C  238A               	addwfc	(sqrtf@i+2)& (0+255),f,b
 10764  00380E  238B               	addwfc	(sqrtf@i+3)& (0+255),f,b
 10765  003810                     l6865:
 10766                           
 10767                           ; BSR set to: 0
 10768  003810  AFA6               	btfss	(sqrtf@ix+2)& (0+255),7,b
 10769  003812  D7F3               	goto	l6861
 10770                           
 10771                           ; BSR set to: 0
 10772  003814  0EFF               	movlw	255
 10773  003816  2588               	addwf	sqrtf@i& (0+255),w,b
 10774  003818  6E4D               	movwf	??_sqrtf^0,c
 10775  00381A  0EFF               	movlw	255
 10776  00381C  2189               	addwfc	(sqrtf@i+1)& (0+255),w,b
 10777  00381E  6E4E               	movwf	(??_sqrtf+1)^0,c
 10778  003820  0EFF               	movlw	255
 10779  003822  218A               	addwfc	(sqrtf@i+2)& (0+255),w,b
 10780  003824  6E4F               	movwf	(??_sqrtf+2)^0,c
 10781  003826  0EFF               	movlw	255
 10782  003828  218B               	addwfc	(sqrtf@i+3)& (0+255),w,b
 10783  00382A  6E50               	movwf	(??_sqrtf+3)^0,c
 10784  00382C  504D               	movf	??_sqrtf^0,w,c
 10785  00382E  5F9C               	subwf	sqrtf@m& (0+255),f,b
 10786  003830  504E               	movf	(??_sqrtf+1)^0,w,c
 10787  003832  5B9D               	subwfb	(sqrtf@m+1)& (0+255),f,b
 10788  003834  504F               	movf	(??_sqrtf+2)^0,w,c
 10789  003836  5B9E               	subwfb	(sqrtf@m+2)& (0+255),f,b
 10790  003838  5050               	movf	(??_sqrtf+3)^0,w,c
 10791  00383A  5B9F               	subwfb	(sqrtf@m+3)& (0+255),f,b
 10792  00383C                     l1357:
 10793                           
 10794                           ; BSR set to: 0
 10795  00383C  0E81               	movlw	129
 10796  00383E  279C               	addwf	sqrtf@m& (0+255),f,b
 10797  003840  0EFF               	movlw	255
 10798  003842  239D               	addwfc	(sqrtf@m+1)& (0+255),f,b
 10799  003844  0EFF               	movlw	255
 10800  003846  239E               	addwfc	(sqrtf@m+2)& (0+255),f,b
 10801  003848  0EFF               	movlw	255
 10802  00384A  239F               	addwfc	(sqrtf@m+3)& (0+255),f,b
 10803  00384C  0EFF               	movlw	255
 10804  00384E  15A4               	andwf	sqrtf@ix& (0+255),w,b
 10805  003850  6E4D               	movwf	??_sqrtf^0,c
 10806  003852  0EFF               	movlw	255
 10807  003854  15A5               	andwf	(sqrtf@ix+1)& (0+255),w,b
 10808  003856  6E4E               	movwf	(??_sqrtf+1)^0,c
 10809  003858  0E7F               	movlw	127
 10810  00385A  15A6               	andwf	(sqrtf@ix+2)& (0+255),w,b
 10811  00385C  6E4F               	movwf	(??_sqrtf+2)^0,c
 10812  00385E  0E00               	movlw	0
 10813  003860  15A7               	andwf	(sqrtf@ix+3)& (0+255),w,b
 10814  003862  6E50               	movwf	(??_sqrtf+3)^0,c
 10815  003864  0E00               	movlw	0
 10816  003866  104D               	iorwf	??_sqrtf^0,w,c
 10817  003868  6FA4               	movwf	sqrtf@ix& (0+255),b
 10818  00386A  0E00               	movlw	0
 10819  00386C  104E               	iorwf	(??_sqrtf+1)^0,w,c
 10820  00386E  6FA5               	movwf	(sqrtf@ix+1)& (0+255),b
 10821  003870  0E80               	movlw	128
 10822  003872  104F               	iorwf	(??_sqrtf+2)^0,w,c
 10823  003874  6FA6               	movwf	(sqrtf@ix+2)& (0+255),b
 10824  003876  0E00               	movlw	0
 10825  003878  1050               	iorwf	(??_sqrtf+3)^0,w,c
 10826  00387A  6FA7               	movwf	(sqrtf@ix+3)& (0+255),b
 10827                           
 10828                           ; BSR set to: 0
 10829  00387C  A19C               	btfss	sqrtf@m& (0+255),0,b
 10830  00387E  D008               	goto	l1361
 10831                           
 10832                           ; BSR set to: 0
 10833  003880  51A4               	movf	sqrtf@ix& (0+255),w,b
 10834  003882  27A4               	addwf	sqrtf@ix& (0+255),f,b
 10835  003884  51A5               	movf	(sqrtf@ix+1)& (0+255),w,b
 10836  003886  23A5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 10837  003888  51A6               	movf	(sqrtf@ix+2)& (0+255),w,b
 10838  00388A  23A6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 10839  00388C  51A7               	movf	(sqrtf@ix+3)& (0+255),w,b
 10840  00388E  23A7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 10841  003890                     l1361:
 10842                           
 10843                           ; BSR set to: 0
 10844  003890  359F               	rlcf	(sqrtf@m+3)& (0+255),w,b
 10845  003892  339F               	rrcf	(sqrtf@m+3)& (0+255),f,b
 10846  003894  339E               	rrcf	(sqrtf@m+2)& (0+255),f,b
 10847  003896  339D               	rrcf	(sqrtf@m+1)& (0+255),f,b
 10848  003898  339C               	rrcf	sqrtf@m& (0+255),f,b
 10849  00389A  51A4               	movf	sqrtf@ix& (0+255),w,b
 10850  00389C  27A4               	addwf	sqrtf@ix& (0+255),f,b
 10851  00389E  51A5               	movf	(sqrtf@ix+1)& (0+255),w,b
 10852  0038A0  23A5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 10853  0038A2  51A6               	movf	(sqrtf@ix+2)& (0+255),w,b
 10854  0038A4  23A6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 10855  0038A6  51A7               	movf	(sqrtf@ix+3)& (0+255),w,b
 10856  0038A8  23A7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 10857                           
 10858                           ; BSR set to: 0
 10859  0038AA  0E00               	movlw	0
 10860  0038AC  6F84               	movwf	sqrtf@s& (0+255),b
 10861  0038AE  0E00               	movlw	0
 10862  0038B0  6F85               	movwf	(sqrtf@s+1)& (0+255),b
 10863  0038B2  0E00               	movlw	0
 10864  0038B4  6F86               	movwf	(sqrtf@s+2)& (0+255),b
 10865  0038B6  0E00               	movlw	0
 10866  0038B8  6F87               	movwf	(sqrtf@s+3)& (0+255),b
 10867  0038BA  C084  F090         	movff	sqrtf@s,sqrtf@q
 10868  0038BE  C085  F091         	movff	sqrtf@s+1,sqrtf@q+1
 10869  0038C2  C086  F092         	movff	sqrtf@s+2,sqrtf@q+2
 10870  0038C6  C087  F093         	movff	sqrtf@s+3,sqrtf@q+3
 10871                           
 10872                           ; BSR set to: 0
 10873  0038CA  0E00               	movlw	0
 10874  0038CC  6FA0               	movwf	sqrtf@r& (0+255),b
 10875  0038CE  0E00               	movlw	0
 10876  0038D0  6FA1               	movwf	(sqrtf@r+1)& (0+255),b
 10877  0038D2  0E00               	movlw	0
 10878  0038D4  6FA2               	movwf	(sqrtf@r+2)& (0+255),b
 10879  0038D6  0E01               	movlw	1
 10880  0038D8  6FA3               	movwf	(sqrtf@r+3)& (0+255),b
 10881  0038DA  D043               	goto	l6883
 10882  0038DC                     l6877:
 10883                           
 10884                           ; BSR set to: 0
 10885  0038DC  51A0               	movf	sqrtf@r& (0+255),w,b
 10886  0038DE  2584               	addwf	sqrtf@s& (0+255),w,b
 10887  0038E0  6F94               	movwf	sqrtf@t& (0+255),b
 10888  0038E2  51A1               	movf	(sqrtf@r+1)& (0+255),w,b
 10889  0038E4  2185               	addwfc	(sqrtf@s+1)& (0+255),w,b
 10890  0038E6  6F95               	movwf	(sqrtf@t+1)& (0+255),b
 10891  0038E8  51A2               	movf	(sqrtf@r+2)& (0+255),w,b
 10892  0038EA  2186               	addwfc	(sqrtf@s+2)& (0+255),w,b
 10893  0038EC  6F96               	movwf	(sqrtf@t+2)& (0+255),b
 10894  0038EE  51A3               	movf	(sqrtf@r+3)& (0+255),w,b
 10895  0038F0  2187               	addwfc	(sqrtf@s+3)& (0+255),w,b
 10896  0038F2  6F97               	movwf	(sqrtf@t+3)& (0+255),b
 10897  0038F4  5194               	movf	sqrtf@t& (0+255),w,b
 10898  0038F6  5DA4               	subwf	sqrtf@ix& (0+255),w,b
 10899  0038F8  5195               	movf	(sqrtf@t+1)& (0+255),w,b
 10900  0038FA  59A5               	subwfb	(sqrtf@ix+1)& (0+255),w,b
 10901  0038FC  5196               	movf	(sqrtf@t+2)& (0+255),w,b
 10902  0038FE  59A6               	subwfb	(sqrtf@ix+2)& (0+255),w,b
 10903  003900  51A7               	movf	(sqrtf@ix+3)& (0+255),w,b
 10904  003902  0A80               	xorlw	128
 10905  003904  6E4D               	movwf	??_sqrtf^0,c
 10906  003906  5197               	movf	(sqrtf@t+3)& (0+255),w,b
 10907  003908  0A80               	xorlw	128
 10908  00390A  584D               	subwfb	??_sqrtf^0,w,c
 10909  00390C  A0D8               	btfss	status,0,c
 10910  00390E  D01C               	goto	l1364
 10911                           
 10912                           ; BSR set to: 0
 10913  003910  51A0               	movf	sqrtf@r& (0+255),w,b
 10914  003912  2594               	addwf	sqrtf@t& (0+255),w,b
 10915  003914  6F84               	movwf	sqrtf@s& (0+255),b
 10916  003916  51A1               	movf	(sqrtf@r+1)& (0+255),w,b
 10917  003918  2195               	addwfc	(sqrtf@t+1)& (0+255),w,b
 10918  00391A  6F85               	movwf	(sqrtf@s+1)& (0+255),b
 10919  00391C  51A2               	movf	(sqrtf@r+2)& (0+255),w,b
 10920  00391E  2196               	addwfc	(sqrtf@t+2)& (0+255),w,b
 10921  003920  6F86               	movwf	(sqrtf@s+2)& (0+255),b
 10922  003922  51A3               	movf	(sqrtf@r+3)& (0+255),w,b
 10923  003924  2197               	addwfc	(sqrtf@t+3)& (0+255),w,b
 10924  003926  6F87               	movwf	(sqrtf@s+3)& (0+255),b
 10925  003928  5194               	movf	sqrtf@t& (0+255),w,b
 10926  00392A  5FA4               	subwf	sqrtf@ix& (0+255),f,b
 10927  00392C  5195               	movf	(sqrtf@t+1)& (0+255),w,b
 10928  00392E  5BA5               	subwfb	(sqrtf@ix+1)& (0+255),f,b
 10929  003930  5196               	movf	(sqrtf@t+2)& (0+255),w,b
 10930  003932  5BA6               	subwfb	(sqrtf@ix+2)& (0+255),f,b
 10931  003934  5197               	movf	(sqrtf@t+3)& (0+255),w,b
 10932  003936  5BA7               	subwfb	(sqrtf@ix+3)& (0+255),f,b
 10933  003938  51A0               	movf	sqrtf@r& (0+255),w,b
 10934  00393A  2790               	addwf	sqrtf@q& (0+255),f,b
 10935  00393C  51A1               	movf	(sqrtf@r+1)& (0+255),w,b
 10936  00393E  2391               	addwfc	(sqrtf@q+1)& (0+255),f,b
 10937  003940  51A2               	movf	(sqrtf@r+2)& (0+255),w,b
 10938  003942  2392               	addwfc	(sqrtf@q+2)& (0+255),f,b
 10939  003944  51A3               	movf	(sqrtf@r+3)& (0+255),w,b
 10940  003946  2393               	addwfc	(sqrtf@q+3)& (0+255),f,b
 10941  003948                     l1364:
 10942                           
 10943                           ; BSR set to: 0
 10944  003948  51A4               	movf	sqrtf@ix& (0+255),w,b
 10945  00394A  27A4               	addwf	sqrtf@ix& (0+255),f,b
 10946  00394C  51A5               	movf	(sqrtf@ix+1)& (0+255),w,b
 10947  00394E  23A5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 10948  003950  51A6               	movf	(sqrtf@ix+2)& (0+255),w,b
 10949  003952  23A6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 10950  003954  51A7               	movf	(sqrtf@ix+3)& (0+255),w,b
 10951  003956  23A7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 10952                           
 10953                           ; BSR set to: 0
 10954  003958  90D8               	bcf	status,0,c
 10955  00395A  33A3               	rrcf	(sqrtf@r+3)& (0+255),f,b
 10956  00395C  33A2               	rrcf	(sqrtf@r+2)& (0+255),f,b
 10957  00395E  33A1               	rrcf	(sqrtf@r+1)& (0+255),f,b
 10958  003960  33A0               	rrcf	sqrtf@r& (0+255),f,b
 10959  003962                     l6883:
 10960                           
 10961                           ; BSR set to: 0
 10962  003962  51A0               	movf	sqrtf@r& (0+255),w,b
 10963  003964  11A1               	iorwf	(sqrtf@r+1)& (0+255),w,b
 10964  003966  11A2               	iorwf	(sqrtf@r+2)& (0+255),w,b
 10965  003968  11A3               	iorwf	(sqrtf@r+3)& (0+255),w,b
 10966  00396A  A4D8               	btfss	status,2,c
 10967  00396C  D7B7               	goto	l6877
 10968                           
 10969                           ; BSR set to: 0
 10970  00396E  51A4               	movf	sqrtf@ix& (0+255),w,b
 10971  003970  11A5               	iorwf	(sqrtf@ix+1)& (0+255),w,b
 10972  003972  11A6               	iorwf	(sqrtf@ix+2)& (0+255),w,b
 10973  003974  11A7               	iorwf	(sqrtf@ix+3)& (0+255),w,b
 10974  003976  B4D8               	btfsc	status,2,c
 10975  003978  D055               	goto	l1366
 10976                           
 10977                           ; BSR set to: 0
 10978  00397A  0E00               	movlw	0
 10979  00397C  6F98               	movwf	sqrtf@z& (0+255),b
 10980  00397E  0E00               	movlw	0
 10981  003980  6F99               	movwf	(sqrtf@z+1)& (0+255),b
 10982  003982  0E80               	movlw	128
 10983  003984  6F9A               	movwf	(sqrtf@z+2)& (0+255),b
 10984  003986  0E3F               	movlw	63
 10985  003988  6F9B               	movwf	(sqrtf@z+3)& (0+255),b
 10986                           
 10987                           ; BSR set to: 0
 10988  00398A  C098  F03D         	movff	sqrtf@z,___flge@ff1
 10989  00398E  C099  F03E         	movff	sqrtf@z+1,___flge@ff1+1
 10990  003992  C09A  F03F         	movff	sqrtf@z+2,___flge@ff1+2
 10991  003996  C09B  F040         	movff	sqrtf@z+3,___flge@ff1+3
 10992  00399A  0E00               	movlw	0
 10993  00399C  6E41               	movwf	___flge@ff2^0,c
 10994  00399E  0E00               	movlw	0
 10995  0039A0  6E42               	movwf	(___flge@ff2+1)^0,c
 10996  0039A2  0E80               	movlw	128
 10997  0039A4  6E43               	movwf	(___flge@ff2+2)^0,c
 10998  0039A6  0E3F               	movlw	63
 10999  0039A8  6E44               	movwf	(___flge@ff2+3)^0,c
 11000  0039AA  ECE8  F028         	call	___flge	;wreg free
 11001  0039AE  A0D8               	btfss	status,0,c
 11002  0039B0  D039               	goto	l1366
 11003  0039B2  0E00               	movlw	0
 11004  0039B4  0100               	movlb	0	; () banked
 11005  0039B6  6F98               	movwf	sqrtf@z& (0+255),b
 11006  0039B8  0E00               	movlw	0
 11007  0039BA  6F99               	movwf	(sqrtf@z+1)& (0+255),b
 11008  0039BC  0E80               	movlw	128
 11009  0039BE  6F9A               	movwf	(sqrtf@z+2)& (0+255),b
 11010  0039C0  0E3F               	movlw	63
 11011  0039C2  6F9B               	movwf	(sqrtf@z+3)& (0+255),b
 11012                           
 11013                           ; BSR set to: 0
 11014  0039C4  0E00               	movlw	0
 11015  0039C6  6E3D               	movwf	___flge@ff1^0,c
 11016  0039C8  0E00               	movlw	0
 11017  0039CA  6E3E               	movwf	(___flge@ff1+1)^0,c
 11018  0039CC  0E80               	movlw	128
 11019  0039CE  6E3F               	movwf	(___flge@ff1+2)^0,c
 11020  0039D0  0E3F               	movlw	63
 11021  0039D2  6E40               	movwf	(___flge@ff1+3)^0,c
 11022  0039D4  C098  F041         	movff	sqrtf@z,___flge@ff2
 11023  0039D8  C099  F042         	movff	sqrtf@z+1,___flge@ff2+1
 11024  0039DC  C09A  F043         	movff	sqrtf@z+2,___flge@ff2+2
 11025  0039E0  C09B  F044         	movff	sqrtf@z+3,___flge@ff2+3
 11026  0039E4  ECE8  F028         	call	___flge	;wreg free
 11027  0039E8  B0D8               	btfsc	status,0,c
 11028  0039EA  D007               	goto	l6897
 11029  0039EC  0E02               	movlw	2
 11030  0039EE  0100               	movlb	0	; () banked
 11031  0039F0  2790               	addwf	sqrtf@q& (0+255),f,b
 11032  0039F2  0E00               	movlw	0
 11033  0039F4  2391               	addwfc	(sqrtf@q+1)& (0+255),f,b
 11034  0039F6  2392               	addwfc	(sqrtf@q+2)& (0+255),f,b
 11035  0039F8  D014               	goto	L10
 11036  0039FA                     l6897:
 11037  0039FA  0E01               	movlw	1
 11038  0039FC  0100               	movlb	0	; () banked
 11039  0039FE  1590               	andwf	sqrtf@q& (0+255),w,b
 11040  003A00  6E4D               	movwf	??_sqrtf^0,c
 11041  003A02  0E00               	movlw	0
 11042  003A04  1591               	andwf	(sqrtf@q+1)& (0+255),w,b
 11043  003A06  6E4E               	movwf	(??_sqrtf+1)^0,c
 11044  003A08  0E00               	movlw	0
 11045  003A0A  1592               	andwf	(sqrtf@q+2)& (0+255),w,b
 11046  003A0C  6E4F               	movwf	(??_sqrtf+2)^0,c
 11047  003A0E  0E00               	movlw	0
 11048  003A10  1593               	andwf	(sqrtf@q+3)& (0+255),w,b
 11049  003A12  6E50               	movwf	(??_sqrtf+3)^0,c
 11050  003A14  504D               	movf	??_sqrtf^0,w,c
 11051  003A16  2790               	addwf	sqrtf@q& (0+255),f,b
 11052  003A18  504E               	movf	(??_sqrtf+1)^0,w,c
 11053  003A1A  2391               	addwfc	(sqrtf@q+1)& (0+255),f,b
 11054  003A1C  504F               	movf	(??_sqrtf+2)^0,w,c
 11055  003A1E  2392               	addwfc	(sqrtf@q+2)& (0+255),f,b
 11056  003A20  5050               	movf	(??_sqrtf+3)^0,w,c
 11057  003A22                     L10:
 11058  003A22  2393               	addwfc	(sqrtf@q+3)& (0+255),f,b
 11059  003A24                     l1366:
 11060  003A24  C090  F04D         	movff	sqrtf@q,??_sqrtf
 11061  003A28  C091  F04E         	movff	sqrtf@q+1,??_sqrtf+1
 11062  003A2C  C092  F04F         	movff	sqrtf@q+2,??_sqrtf+2
 11063  003A30  C093  F050         	movff	sqrtf@q+3,??_sqrtf+3
 11064  003A34  3450               	rlcf	(??_sqrtf+3)^0,w,c
 11065  003A36  3250               	rrcf	(??_sqrtf+3)^0,f,c
 11066  003A38  324F               	rrcf	(??_sqrtf+2)^0,f,c
 11067  003A3A  324E               	rrcf	(??_sqrtf+1)^0,f,c
 11068  003A3C  324D               	rrcf	??_sqrtf^0,f,c
 11069  003A3E  0E00               	movlw	0
 11070  003A40  244D               	addwf	??_sqrtf^0,w,c
 11071  003A42  0100               	movlb	0	; () banked
 11072  003A44  6FA4               	movwf	sqrtf@ix& (0+255),b
 11073  003A46  0E00               	movlw	0
 11074  003A48  204E               	addwfc	(??_sqrtf+1)^0,w,c
 11075  003A4A  6FA5               	movwf	(sqrtf@ix+1)& (0+255),b
 11076  003A4C  0E00               	movlw	0
 11077  003A4E  204F               	addwfc	(??_sqrtf+2)^0,w,c
 11078  003A50  6FA6               	movwf	(sqrtf@ix+2)& (0+255),b
 11079  003A52  0E3F               	movlw	63
 11080  003A54  2050               	addwfc	(??_sqrtf+3)^0,w,c
 11081  003A56  6FA7               	movwf	(sqrtf@ix+3)& (0+255),b
 11082  003A58  C09C  F04D         	movff	sqrtf@m,??_sqrtf
 11083  003A5C  C09D  F04E         	movff	sqrtf@m+1,??_sqrtf+1
 11084  003A60  C09E  F04F         	movff	sqrtf@m+2,??_sqrtf+2
 11085  003A64  C09F  F050         	movff	sqrtf@m+3,??_sqrtf+3
 11086  003A68  0E17               	movlw	23
 11087  003A6A                     u8985:
 11088  003A6A  90D8               	bcf	status,0,c
 11089  003A6C  364D               	rlcf	??_sqrtf^0,f,c
 11090  003A6E  364E               	rlcf	(??_sqrtf+1)^0,f,c
 11091  003A70  364F               	rlcf	(??_sqrtf+2)^0,f,c
 11092  003A72  3650               	rlcf	(??_sqrtf+3)^0,f,c
 11093  003A74  2EE8               	decfsz	wreg,f,c
 11094  003A76  D7F9               	goto	u8985
 11095  003A78  504D               	movf	??_sqrtf^0,w,c
 11096  003A7A  27A4               	addwf	sqrtf@ix& (0+255),f,b
 11097  003A7C  504E               	movf	(??_sqrtf+1)^0,w,c
 11098  003A7E  23A5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 11099  003A80  504F               	movf	(??_sqrtf+2)^0,w,c
 11100  003A82  23A6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 11101  003A84  5050               	movf	(??_sqrtf+3)^0,w,c
 11102  003A86  23A7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 11103                           
 11104                           ; BSR set to: 0
 11105  003A88  C0A4  F08C         	movff	sqrtf@ix,sqrtf@__xc8_float_word
 11106  003A8C  C0A5  F08D         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
 11107  003A90  C0A6  F08E         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
 11108  003A94  C0A7  F08F         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
 11109                           
 11110                           ; BSR set to: 0
 11111  003A98  C08C  F098         	movff	sqrtf@__xc8_float_word,sqrtf@z
 11112  003A9C  C08D  F099         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
 11113  003AA0  C08E  F09A         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
 11114  003AA4  C08F  F09B         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
 11115                           
 11116                           ; BSR set to: 0
 11117  003AA8  C098  F049         	movff	sqrtf@z,?_sqrtf
 11118  003AAC  C099  F04A         	movff	sqrtf@z+1,?_sqrtf+1
 11119  003AB0  C09A  F04B         	movff	sqrtf@z+2,?_sqrtf+2
 11120  003AB4  C09B  F04C         	movff	sqrtf@z+3,?_sqrtf+3
 11121  003AB8  0012               	return		;funcret
 11122  003ABA                     __end_of_sqrtf:
 11123                           	opt callstack 0
 11124                           
 11125 ;; *************** function _nanf *****************
 11126 ;; Defined at:
 11127 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nanf.c"
 11128 ;; Parameters:    Size  Location     Type
 11129 ;;  s               2   11[COMRAM] PTR const unsigned char 
 11130 ;;		 -> STR_18(1), 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;  u               4   15[COMRAM] struct .
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  4   11[COMRAM] float 
 11135 ;; Registers used:
 11136 ;;		wreg, status,2
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11142 ;;      Params:         4       0       0       0       0       0       0
 11143 ;;      Locals:         4       0       0       0       0       0       0
 11144 ;;      Temps:          0       0       0       0       0       0       0
 11145 ;;      Totals:         8       0       0       0       0       0       0
 11146 ;;Total ram usage:        8 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; Hardware stack levels required when called:    4
 11149 ;; This function calls:
 11150 ;;		Nothing
 11151 ;; This function is called by:
 11152 ;;		_sqrtf
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           
 11156                           	psect	text37
 11157  005CF0                     __ptext37:
 11158                           	opt callstack 0
 11159  005CF0                     _nanf:
 11160                           	opt callstack 22
 11161                           
 11162                           ;incstack = 0
 11163  005CF0  0EFF               	movlw	255
 11164  005CF2  6E10               	movwf	nanf@u^0,c
 11165  005CF4  0EFF               	movlw	255
 11166  005CF6  6E11               	movwf	(nanf@u+1)^0,c
 11167  005CF8  0EFF               	movlw	255
 11168  005CFA  6E12               	movwf	(nanf@u+2)^0,c
 11169  005CFC  0E7F               	movlw	127
 11170  005CFE  6E13               	movwf	(nanf@u+3)^0,c
 11171  005D00  C010  F00C         	movff	nanf@u,?_nanf
 11172  005D04  C011  F00D         	movff	nanf@u+1,?_nanf+1
 11173  005D08  C012  F00E         	movff	nanf@u+2,?_nanf+2
 11174  005D0C  C013  F00F         	movff	nanf@u+3,?_nanf+3
 11175  005D10  0012               	return		;funcret
 11176  005D12                     __end_of_nanf:
 11177                           	opt callstack 0
 11178                           
 11179 ;; *************** function ___flge *****************
 11180 ;; Defined at:
 11181 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;  ff1             4   60[COMRAM] float 
 11184 ;;  ff2             4   64[COMRAM] float 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;		None
 11187 ;; Return value:  Size  Location     Type
 11188 ;;		None               void
 11189 ;; Registers used:
 11190 ;;		wreg, status,2, status,0
 11191 ;; Tracked objects:
 11192 ;;		On entry : 0/0
 11193 ;;		On exit  : 0/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11196 ;;      Params:         8       0       0       0       0       0       0
 11197 ;;      Locals:         0       0       0       0       0       0       0
 11198 ;;      Temps:          4       0       0       0       0       0       0
 11199 ;;      Totals:        12       0       0       0       0       0       0
 11200 ;;Total ram usage:       12 bytes
 11201 ;; Hardware stack levels used:    1
 11202 ;; Hardware stack levels required when called:    4
 11203 ;; This function calls:
 11204 ;;		Nothing
 11205 ;; This function is called by:
 11206 ;;		_mq135_getppm
 11207 ;;		_efgtoa
 11208 ;;		_powf
 11209 ;;		_sqrtf
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           	psect	text38
 11214  0051D0                     __ptext38:
 11215                           	opt callstack 0
 11216  0051D0                     ___flge:
 11217                           	opt callstack 22
 11218                           
 11219                           ;incstack = 0
 11220  0051D0  0E00               	movlw	0
 11221  0051D2  143D               	andwf	___flge@ff1^0,w,c
 11222  0051D4  6E45               	movwf	??___flge^0,c
 11223  0051D6  0E00               	movlw	0
 11224  0051D8  143E               	andwf	(___flge@ff1+1)^0,w,c
 11225  0051DA  6E46               	movwf	(??___flge+1)^0,c
 11226  0051DC  0E80               	movlw	128
 11227  0051DE  143F               	andwf	(___flge@ff1+2)^0,w,c
 11228  0051E0  6E47               	movwf	(??___flge+2)^0,c
 11229  0051E2  0E7F               	movlw	127
 11230  0051E4  1440               	andwf	(___flge@ff1+3)^0,w,c
 11231  0051E6  6E48               	movwf	(??___flge+3)^0,c
 11232  0051E8  5045               	movf	??___flge^0,w,c
 11233  0051EA  1046               	iorwf	(??___flge+1)^0,w,c
 11234  0051EC  1047               	iorwf	(??___flge+2)^0,w,c
 11235  0051EE  1048               	iorwf	(??___flge+3)^0,w,c
 11236  0051F0  A4D8               	btfss	status,2,c
 11237  0051F2  D008               	goto	l6389
 11238  0051F4  0E00               	movlw	0
 11239  0051F6  6E3D               	movwf	___flge@ff1^0,c
 11240  0051F8  0E00               	movlw	0
 11241  0051FA  6E3E               	movwf	(___flge@ff1+1)^0,c
 11242  0051FC  0E00               	movlw	0
 11243  0051FE  6E3F               	movwf	(___flge@ff1+2)^0,c
 11244  005200  0E00               	movlw	0
 11245  005202  6E40               	movwf	(___flge@ff1+3)^0,c
 11246  005204                     l6389:
 11247  005204  0E00               	movlw	0
 11248  005206  1441               	andwf	___flge@ff2^0,w,c
 11249  005208  6E45               	movwf	??___flge^0,c
 11250  00520A  0E00               	movlw	0
 11251  00520C  1442               	andwf	(___flge@ff2+1)^0,w,c
 11252  00520E  6E46               	movwf	(??___flge+1)^0,c
 11253  005210  0E80               	movlw	128
 11254  005212  1443               	andwf	(___flge@ff2+2)^0,w,c
 11255  005214  6E47               	movwf	(??___flge+2)^0,c
 11256  005216  0E7F               	movlw	127
 11257  005218  1444               	andwf	(___flge@ff2+3)^0,w,c
 11258  00521A  6E48               	movwf	(??___flge+3)^0,c
 11259  00521C  5045               	movf	??___flge^0,w,c
 11260  00521E  1046               	iorwf	(??___flge+1)^0,w,c
 11261  005220  1047               	iorwf	(??___flge+2)^0,w,c
 11262  005222  1048               	iorwf	(??___flge+3)^0,w,c
 11263  005224  A4D8               	btfss	status,2,c
 11264  005226  D008               	goto	l6393
 11265  005228  0E00               	movlw	0
 11266  00522A  6E41               	movwf	___flge@ff2^0,c
 11267  00522C  0E00               	movlw	0
 11268  00522E  6E42               	movwf	(___flge@ff2+1)^0,c
 11269  005230  0E00               	movlw	0
 11270  005232  6E43               	movwf	(___flge@ff2+2)^0,c
 11271  005234  0E00               	movlw	0
 11272  005236  6E44               	movwf	(___flge@ff2+3)^0,c
 11273  005238                     l6393:
 11274  005238  AE40               	btfss	(___flge@ff1+3)^0,7,c
 11275  00523A  D009               	goto	l6397
 11276  00523C  6C3D               	negf	___flge@ff1^0,c
 11277  00523E  1E3E               	comf	(___flge@ff1+1)^0,f,c
 11278  005240  B0D8               	btfsc	status,0,c
 11279  005242  2A3E               	incf	(___flge@ff1+1)^0,f,c
 11280  005244  1E3F               	comf	(___flge@ff1+2)^0,f,c
 11281  005246  B0D8               	btfsc	status,0,c
 11282  005248  2A3F               	incf	(___flge@ff1+2)^0,f,c
 11283  00524A  0E80               	movlw	128
 11284  00524C  5640               	subfwb	(___flge@ff1+3)^0,f,c
 11285  00524E                     l6397:
 11286  00524E  AE44               	btfss	(___flge@ff2+3)^0,7,c
 11287  005250  D009               	goto	l629
 11288  005252  6C41               	negf	___flge@ff2^0,c
 11289  005254  1E42               	comf	(___flge@ff2+1)^0,f,c
 11290  005256  B0D8               	btfsc	status,0,c
 11291  005258  2A42               	incf	(___flge@ff2+1)^0,f,c
 11292  00525A  1E43               	comf	(___flge@ff2+2)^0,f,c
 11293  00525C  B0D8               	btfsc	status,0,c
 11294  00525E  2A43               	incf	(___flge@ff2+2)^0,f,c
 11295  005260  0E80               	movlw	128
 11296  005262  5644               	subfwb	(___flge@ff2+3)^0,f,c
 11297  005264                     l629:
 11298  005264  0E00               	movlw	0
 11299  005266  1A3D               	xorwf	___flge@ff1^0,f,c
 11300  005268  0E00               	movlw	0
 11301  00526A  1A3E               	xorwf	(___flge@ff1+1)^0,f,c
 11302  00526C  0E00               	movlw	0
 11303  00526E  1A3F               	xorwf	(___flge@ff1+2)^0,f,c
 11304  005270  0E80               	movlw	128
 11305  005272  1A40               	xorwf	(___flge@ff1+3)^0,f,c
 11306  005274  0E00               	movlw	0
 11307  005276  1A41               	xorwf	___flge@ff2^0,f,c
 11308  005278  0E00               	movlw	0
 11309  00527A  1A42               	xorwf	(___flge@ff2+1)^0,f,c
 11310  00527C  0E00               	movlw	0
 11311  00527E  1A43               	xorwf	(___flge@ff2+2)^0,f,c
 11312  005280  0E80               	movlw	128
 11313  005282  1A44               	xorwf	(___flge@ff2+3)^0,f,c
 11314  005284  5041               	movf	___flge@ff2^0,w,c
 11315  005286  5C3D               	subwf	___flge@ff1^0,w,c
 11316  005288  5042               	movf	(___flge@ff2+1)^0,w,c
 11317  00528A  583E               	subwfb	(___flge@ff1+1)^0,w,c
 11318  00528C  5043               	movf	(___flge@ff2+2)^0,w,c
 11319  00528E  583F               	subwfb	(___flge@ff1+2)^0,w,c
 11320  005290  5044               	movf	(___flge@ff2+3)^0,w,c
 11321  005292  5840               	subwfb	(___flge@ff1+3)^0,w,c
 11322  005294  B0D8               	btfsc	status,0,c
 11323  005296  D002               	goto	l6403
 11324  005298  90D8               	bcf	status,0,c
 11325  00529A  0012               	return	
 11326  00529C                     l6403:
 11327  00529C  80D8               	bsf	status,0,c
 11328  00529E  0012               	return		;funcret
 11329  0052A0                     __end_of___flge:
 11330                           	opt callstack 0
 11331                           
 11332 ;; *************** function _scalbnf *****************
 11333 ;; Defined at:
 11334 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\scalbnf.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;  x               4   52[COMRAM] float 
 11337 ;;  n               2   56[COMRAM] int 
 11338 ;; Auto vars:     Size  Location     Type
 11339 ;;  y               4   66[COMRAM] float 
 11340 ;;  u               4   62[COMRAM] struct .
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  4   52[COMRAM] float 
 11343 ;; Registers used:
 11344 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11350 ;;      Params:         6       0       0       0       0       0       0
 11351 ;;      Locals:         8       0       0       0       0       0       0
 11352 ;;      Temps:          4       0       0       0       0       0       0
 11353 ;;      Totals:        18       0       0       0       0       0       0
 11354 ;;Total ram usage:       18 bytes
 11355 ;; Hardware stack levels used:    1
 11356 ;; Hardware stack levels required when called:    5
 11357 ;; This function calls:
 11358 ;;		___flmul
 11359 ;; This function is called by:
 11360 ;;		_powf
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           	psect	text39
 11365  004750                     __ptext39:
 11366                           	opt callstack 0
 11367  004750                     _scalbnf:
 11368                           	opt callstack 22
 11369                           
 11370                           ;incstack = 0
 11371  004750  C035  F043         	movff	scalbnf@x,scalbnf@y
 11372  004754  C036  F044         	movff	scalbnf@x+1,scalbnf@y+1
 11373  004758  C037  F045         	movff	scalbnf@x+2,scalbnf@y+2
 11374  00475C  C038  F046         	movff	scalbnf@x+3,scalbnf@y+3
 11375  004760  BE3A               	btfsc	(scalbnf@n+1)^0,7,c
 11376  004762  D056               	goto	l6925
 11377  004764  503A               	movf	(scalbnf@n+1)^0,w,c
 11378  004766  E104               	bnz	u8990
 11379  004768  0E80               	movlw	128
 11380  00476A  5C39               	subwf	scalbnf@n^0,w,c
 11381  00476C  A0D8               	btfss	status,0,c
 11382  00476E  D050               	goto	l6925
 11383  004770                     u8990:
 11384  004770  C043  F01C         	movff	scalbnf@y,___flmul@b
 11385  004774  C044  F01D         	movff	scalbnf@y+1,___flmul@b+1
 11386  004778  C045  F01E         	movff	scalbnf@y+2,___flmul@b+2
 11387  00477C  C046  F01F         	movff	scalbnf@y+3,___flmul@b+3
 11388  004780  0E00               	movlw	0
 11389  004782  6E20               	movwf	___flmul@a^0,c
 11390  004784  0E00               	movlw	0
 11391  004786  6E21               	movwf	(___flmul@a+1)^0,c
 11392  004788  0E00               	movlw	0
 11393  00478A  6E22               	movwf	(___flmul@a+2)^0,c
 11394  00478C  0E7F               	movlw	127
 11395  00478E  6E23               	movwf	(___flmul@a+3)^0,c
 11396  004790  EC35  F01F         	call	___flmul	;wreg free
 11397  004794  C01C  F043         	movff	?___flmul,scalbnf@y
 11398  004798  C01D  F044         	movff	?___flmul+1,scalbnf@y+1
 11399  00479C  C01E  F045         	movff	?___flmul+2,scalbnf@y+2
 11400  0047A0  C01F  F046         	movff	?___flmul+3,scalbnf@y+3
 11401  0047A4  0E81               	movlw	129
 11402  0047A6  2639               	addwf	scalbnf@n^0,f,c
 11403  0047A8  0EFF               	movlw	255
 11404  0047AA  223A               	addwfc	(scalbnf@n+1)^0,f,c
 11405  0047AC  BE3A               	btfsc	(scalbnf@n+1)^0,7,c
 11406  0047AE  D088               	goto	l6941
 11407  0047B0  503A               	movf	(scalbnf@n+1)^0,w,c
 11408  0047B2  E104               	bnz	u9000
 11409  0047B4  0E80               	movlw	128
 11410  0047B6  5C39               	subwf	scalbnf@n^0,w,c
 11411  0047B8  A0D8               	btfss	status,0,c
 11412  0047BA  D082               	goto	l6941
 11413  0047BC                     u9000:
 11414  0047BC  C043  F01C         	movff	scalbnf@y,___flmul@b
 11415  0047C0  C044  F01D         	movff	scalbnf@y+1,___flmul@b+1
 11416  0047C4  C045  F01E         	movff	scalbnf@y+2,___flmul@b+2
 11417  0047C8  C046  F01F         	movff	scalbnf@y+3,___flmul@b+3
 11418  0047CC  0E00               	movlw	0
 11419  0047CE  6E20               	movwf	___flmul@a^0,c
 11420  0047D0  0E00               	movlw	0
 11421  0047D2  6E21               	movwf	(___flmul@a+1)^0,c
 11422  0047D4  0E00               	movlw	0
 11423  0047D6  6E22               	movwf	(___flmul@a+2)^0,c
 11424  0047D8  0E7F               	movlw	127
 11425  0047DA  6E23               	movwf	(___flmul@a+3)^0,c
 11426  0047DC  EC35  F01F         	call	___flmul	;wreg free
 11427  0047E0  C01C  F043         	movff	?___flmul,scalbnf@y
 11428  0047E4  C01D  F044         	movff	?___flmul+1,scalbnf@y+1
 11429  0047E8  C01E  F045         	movff	?___flmul+2,scalbnf@y+2
 11430  0047EC  C01F  F046         	movff	?___flmul+3,scalbnf@y+3
 11431  0047F0  0E81               	movlw	129
 11432  0047F2  2639               	addwf	scalbnf@n^0,f,c
 11433  0047F4  0EFF               	movlw	255
 11434  0047F6  223A               	addwfc	(scalbnf@n+1)^0,f,c
 11435  0047F8  BE3A               	btfsc	(scalbnf@n+1)^0,7,c
 11436  0047FA  D062               	goto	l6941
 11437  0047FC  503A               	movf	(scalbnf@n+1)^0,w,c
 11438  0047FE  E104               	bnz	u9010
 11439  004800  0E80               	movlw	128
 11440  004802  5C39               	subwf	scalbnf@n^0,w,c
 11441  004804  A0D8               	btfss	status,0,c
 11442  004806  D05C               	goto	l6941
 11443  004808                     u9010:
 11444  004808  0E00               	movlw	0
 11445  00480A  6E3A               	movwf	(scalbnf@n+1)^0,c
 11446  00480C  0E7F               	movlw	127
 11447  00480E  D057               	goto	L11
 11448  004810                     l6925:
 11449  004810  AE3A               	btfss	(scalbnf@n+1)^0,7,c
 11450  004812  D056               	goto	l6941
 11451  004814  0E82               	movlw	130
 11452  004816  5C39               	subwf	scalbnf@n^0,w,c
 11453  004818  0EFF               	movlw	255
 11454  00481A  583A               	subwfb	(scalbnf@n+1)^0,w,c
 11455  00481C  B0D8               	btfsc	status,0,c
 11456  00481E  D050               	goto	l6941
 11457  004820  C043  F01C         	movff	scalbnf@y,___flmul@b
 11458  004824  C044  F01D         	movff	scalbnf@y+1,___flmul@b+1
 11459  004828  C045  F01E         	movff	scalbnf@y+2,___flmul@b+2
 11460  00482C  C046  F01F         	movff	scalbnf@y+3,___flmul@b+3
 11461  004830  0E00               	movlw	0
 11462  004832  6E20               	movwf	___flmul@a^0,c
 11463  004834  0E00               	movlw	0
 11464  004836  6E21               	movwf	(___flmul@a+1)^0,c
 11465  004838  0E80               	movlw	128
 11466  00483A  6E22               	movwf	(___flmul@a+2)^0,c
 11467  00483C  0E0C               	movlw	12
 11468  00483E  6E23               	movwf	(___flmul@a+3)^0,c
 11469  004840  EC35  F01F         	call	___flmul	;wreg free
 11470  004844  C01C  F043         	movff	?___flmul,scalbnf@y
 11471  004848  C01D  F044         	movff	?___flmul+1,scalbnf@y+1
 11472  00484C  C01E  F045         	movff	?___flmul+2,scalbnf@y+2
 11473  004850  C01F  F046         	movff	?___flmul+3,scalbnf@y+3
 11474  004854  0E66               	movlw	102
 11475  004856  2639               	addwf	scalbnf@n^0,f,c
 11476  004858  0E00               	movlw	0
 11477  00485A  223A               	addwfc	(scalbnf@n+1)^0,f,c
 11478  00485C  AE3A               	btfss	(scalbnf@n+1)^0,7,c
 11479  00485E  D030               	goto	l6941
 11480  004860  0E82               	movlw	130
 11481  004862  5C39               	subwf	scalbnf@n^0,w,c
 11482  004864  0EFF               	movlw	255
 11483  004866  583A               	subwfb	(scalbnf@n+1)^0,w,c
 11484  004868  B0D8               	btfsc	status,0,c
 11485  00486A  D02A               	goto	l6941
 11486  00486C  C043  F01C         	movff	scalbnf@y,___flmul@b
 11487  004870  C044  F01D         	movff	scalbnf@y+1,___flmul@b+1
 11488  004874  C045  F01E         	movff	scalbnf@y+2,___flmul@b+2
 11489  004878  C046  F01F         	movff	scalbnf@y+3,___flmul@b+3
 11490  00487C  0E00               	movlw	0
 11491  00487E  6E20               	movwf	___flmul@a^0,c
 11492  004880  0E00               	movlw	0
 11493  004882  6E21               	movwf	(___flmul@a+1)^0,c
 11494  004884  0E80               	movlw	128
 11495  004886  6E22               	movwf	(___flmul@a+2)^0,c
 11496  004888  0E0C               	movlw	12
 11497  00488A  6E23               	movwf	(___flmul@a+3)^0,c
 11498  00488C  EC35  F01F         	call	___flmul	;wreg free
 11499  004890  C01C  F043         	movff	?___flmul,scalbnf@y
 11500  004894  C01D  F044         	movff	?___flmul+1,scalbnf@y+1
 11501  004898  C01E  F045         	movff	?___flmul+2,scalbnf@y+2
 11502  00489C  C01F  F046         	movff	?___flmul+3,scalbnf@y+3
 11503  0048A0  0E66               	movlw	102
 11504  0048A2  2639               	addwf	scalbnf@n^0,f,c
 11505  0048A4  0E00               	movlw	0
 11506  0048A6  223A               	addwfc	(scalbnf@n+1)^0,f,c
 11507  0048A8  AE3A               	btfss	(scalbnf@n+1)^0,7,c
 11508  0048AA  D00A               	goto	l6941
 11509  0048AC  0E82               	movlw	130
 11510  0048AE  5C39               	subwf	scalbnf@n^0,w,c
 11511  0048B0  0EFF               	movlw	255
 11512  0048B2  583A               	subwfb	(scalbnf@n+1)^0,w,c
 11513  0048B4  B0D8               	btfsc	status,0,c
 11514  0048B6  D004               	goto	l6941
 11515  0048B8  0EFF               	movlw	255
 11516  0048BA  6E3A               	movwf	(scalbnf@n+1)^0,c
 11517  0048BC  0E82               	movlw	130
 11518  0048BE                     L11:
 11519  0048BE  6E39               	movwf	scalbnf@n^0,c
 11520  0048C0                     l6941:
 11521  0048C0  0E7F               	movlw	127
 11522  0048C2  2439               	addwf	scalbnf@n^0,w,c
 11523  0048C4  6E3B               	movwf	??_scalbnf^0,c
 11524  0048C6  0E00               	movlw	0
 11525  0048C8  203A               	addwfc	(scalbnf@n+1)^0,w,c
 11526  0048CA  6E3C               	movwf	(??_scalbnf+1)^0,c
 11527  0048CC  6A3D               	clrf	(??_scalbnf+2)^0,c
 11528  0048CE  6A3E               	clrf	(??_scalbnf+3)^0,c
 11529  0048D0  0E17               	movlw	23
 11530  0048D2                     u9055:
 11531  0048D2  90D8               	bcf	status,0,c
 11532  0048D4  363B               	rlcf	??_scalbnf^0,f,c
 11533  0048D6  363C               	rlcf	(??_scalbnf+1)^0,f,c
 11534  0048D8  363D               	rlcf	(??_scalbnf+2)^0,f,c
 11535  0048DA  363E               	rlcf	(??_scalbnf+3)^0,f,c
 11536  0048DC  2EE8               	decfsz	wreg,f,c
 11537  0048DE  D7F9               	goto	u9055
 11538  0048E0  C03B  F03F         	movff	??_scalbnf,scalbnf@u
 11539  0048E4  C03C  F040         	movff	??_scalbnf+1,scalbnf@u+1
 11540  0048E8  C03D  F041         	movff	??_scalbnf+2,scalbnf@u+2
 11541  0048EC  C03E  F042         	movff	??_scalbnf+3,scalbnf@u+3
 11542  0048F0  C03F  F01C         	movff	scalbnf@u,___flmul@b
 11543  0048F4  C040  F01D         	movff	scalbnf@u+1,___flmul@b+1
 11544  0048F8  C041  F01E         	movff	scalbnf@u+2,___flmul@b+2
 11545  0048FC  C042  F01F         	movff	scalbnf@u+3,___flmul@b+3
 11546  004900  C043  F020         	movff	scalbnf@y,___flmul@a
 11547  004904  C044  F021         	movff	scalbnf@y+1,___flmul@a+1
 11548  004908  C045  F022         	movff	scalbnf@y+2,___flmul@a+2
 11549  00490C  C046  F023         	movff	scalbnf@y+3,___flmul@a+3
 11550  004910  EC35  F01F         	call	___flmul	;wreg free
 11551  004914  C01C  F035         	movff	?___flmul,scalbnf@x
 11552  004918  C01D  F036         	movff	?___flmul+1,scalbnf@x+1
 11553  00491C  C01E  F037         	movff	?___flmul+2,scalbnf@x+2
 11554  004920  C01F  F038         	movff	?___flmul+3,scalbnf@x+3
 11555  004924  C035  F035         	movff	scalbnf@x,?_scalbnf
 11556  004928  C036  F036         	movff	scalbnf@x+1,?_scalbnf+1
 11557  00492C  C037  F037         	movff	scalbnf@x+2,?_scalbnf+2
 11558  004930  C038  F038         	movff	scalbnf@x+3,?_scalbnf+3
 11559  004934  0012               	return		;funcret
 11560  004936                     __end_of_scalbnf:
 11561                           	opt callstack 0
 11562                           
 11563 ;; *************** function ___flmul *****************
 11564 ;; Defined at:
 11565 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  b               4   27[COMRAM] float 
 11568 ;;  a               4   31[COMRAM] float 
 11569 ;; Auto vars:     Size  Location     Type
 11570 ;;  prod            4   46[COMRAM] struct .
 11571 ;;  grs             4   41[COMRAM] unsigned long 
 11572 ;;  temp            2   50[COMRAM] struct .
 11573 ;;  bexp            1   45[COMRAM] unsigned char 
 11574 ;;  aexp            1   40[COMRAM] unsigned char 
 11575 ;;  sign            1   39[COMRAM] unsigned char 
 11576 ;; Return value:  Size  Location     Type
 11577 ;;                  4   27[COMRAM] unsigned char 
 11578 ;; Registers used:
 11579 ;;		wreg, status,2, status,0, prodl, prodh
 11580 ;; Tracked objects:
 11581 ;;		On entry : 0/0
 11582 ;;		On exit  : 0/0
 11583 ;;		Unchanged: 0/0
 11584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11585 ;;      Params:         8       0       0       0       0       0       0
 11586 ;;      Locals:        13       0       0       0       0       0       0
 11587 ;;      Temps:          4       0       0       0       0       0       0
 11588 ;;      Totals:        25       0       0       0       0       0       0
 11589 ;;Total ram usage:       25 bytes
 11590 ;; Hardware stack levels used:    1
 11591 ;; Hardware stack levels required when called:    4
 11592 ;; This function calls:
 11593 ;;		Nothing
 11594 ;; This function is called by:
 11595 ;;		_mq135_getppm
 11596 ;;		_ADC_Read
 11597 ;;		_efgtoa
 11598 ;;		_powf
 11599 ;;		_scalbnf
 11600 ;;		_sqrtf
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604                           	psect	text40
 11605  003E6A                     __ptext40:
 11606                           	opt callstack 0
 11607  003E6A                     ___flmul:
 11608                           	opt callstack 22
 11609                           
 11610                           ;incstack = 0
 11611  003E6A  501F               	movf	(___flmul@b+3)^0,w,c
 11612  003E6C  0B80               	andlw	128
 11613  003E6E  6E28               	movwf	___flmul@sign^0,c
 11614  003E70  501F               	movf	(___flmul@b+3)^0,w,c
 11615  003E72  241F               	addwf	(___flmul@b+3)^0,w,c
 11616  003E74  6E2E               	movwf	___flmul@bexp^0,c
 11617  003E76  BE1E               	btfsc	(___flmul@b+2)^0,7,c
 11618  003E78  802E               	bsf	___flmul@bexp^0,0,c
 11619  003E7A  502E               	movf	___flmul@bexp^0,w,c
 11620  003E7C  B4D8               	btfsc	status,2,c
 11621  003E7E  D00D               	goto	l6167
 11622  003E80  282E               	incf	___flmul@bexp^0,w,c
 11623  003E82  A4D8               	btfss	status,2,c
 11624  003E84  D008               	goto	l6165
 11625  003E86  0E00               	movlw	0
 11626  003E88  6E1C               	movwf	___flmul@b^0,c
 11627  003E8A  0E00               	movlw	0
 11628  003E8C  6E1D               	movwf	(___flmul@b+1)^0,c
 11629  003E8E  0E00               	movlw	0
 11630  003E90  6E1E               	movwf	(___flmul@b+2)^0,c
 11631  003E92  0E00               	movlw	0
 11632  003E94  6E1F               	movwf	(___flmul@b+3)^0,c
 11633  003E96                     l6165:
 11634  003E96  8E1E               	bsf	(___flmul@b+2)^0,7,c
 11635  003E98  D008               	goto	l6169
 11636  003E9A                     l6167:
 11637  003E9A  0E00               	movlw	0
 11638  003E9C  6E1C               	movwf	___flmul@b^0,c
 11639  003E9E  0E00               	movlw	0
 11640  003EA0  6E1D               	movwf	(___flmul@b+1)^0,c
 11641  003EA2  0E00               	movlw	0
 11642  003EA4  6E1E               	movwf	(___flmul@b+2)^0,c
 11643  003EA6  0E00               	movlw	0
 11644  003EA8  6E1F               	movwf	(___flmul@b+3)^0,c
 11645  003EAA                     l6169:
 11646  003EAA  5023               	movf	(___flmul@a+3)^0,w,c
 11647  003EAC  0B80               	andlw	128
 11648  003EAE  1A28               	xorwf	___flmul@sign^0,f,c
 11649  003EB0  5023               	movf	(___flmul@a+3)^0,w,c
 11650  003EB2  2423               	addwf	(___flmul@a+3)^0,w,c
 11651  003EB4  6E29               	movwf	___flmul@aexp^0,c
 11652  003EB6  BE22               	btfsc	(___flmul@a+2)^0,7,c
 11653  003EB8  8029               	bsf	___flmul@aexp^0,0,c
 11654  003EBA  5029               	movf	___flmul@aexp^0,w,c
 11655  003EBC  B4D8               	btfsc	status,2,c
 11656  003EBE  D00D               	goto	l6185
 11657  003EC0  2829               	incf	___flmul@aexp^0,w,c
 11658  003EC2  A4D8               	btfss	status,2,c
 11659  003EC4  D008               	goto	l6183
 11660  003EC6  0E00               	movlw	0
 11661  003EC8  6E20               	movwf	___flmul@a^0,c
 11662  003ECA  0E00               	movlw	0
 11663  003ECC  6E21               	movwf	(___flmul@a+1)^0,c
 11664  003ECE  0E00               	movlw	0
 11665  003ED0  6E22               	movwf	(___flmul@a+2)^0,c
 11666  003ED2  0E00               	movlw	0
 11667  003ED4  6E23               	movwf	(___flmul@a+3)^0,c
 11668  003ED6                     l6183:
 11669  003ED6  8E22               	bsf	(___flmul@a+2)^0,7,c
 11670  003ED8  D008               	goto	l978
 11671  003EDA                     l6185:
 11672  003EDA  0E00               	movlw	0
 11673  003EDC  6E20               	movwf	___flmul@a^0,c
 11674  003EDE  0E00               	movlw	0
 11675  003EE0  6E21               	movwf	(___flmul@a+1)^0,c
 11676  003EE2  0E00               	movlw	0
 11677  003EE4  6E22               	movwf	(___flmul@a+2)^0,c
 11678  003EE6  0E00               	movlw	0
 11679  003EE8  6E23               	movwf	(___flmul@a+3)^0,c
 11680  003EEA                     l978:
 11681  003EEA  5029               	movf	___flmul@aexp^0,w,c
 11682  003EEC  B4D8               	btfsc	status,2,c
 11683  003EEE  D003               	goto	u7790
 11684  003EF0  502E               	movf	___flmul@bexp^0,w,c
 11685  003EF2  A4D8               	btfss	status,2,c
 11686  003EF4  D009               	goto	l6193
 11687  003EF6                     u7790:
 11688  003EF6  0E00               	movlw	0
 11689  003EF8  6E1C               	movwf	?___flmul^0,c
 11690  003EFA  0E00               	movlw	0
 11691  003EFC  6E1D               	movwf	(?___flmul+1)^0,c
 11692  003EFE  0E00               	movlw	0
 11693  003F00  6E1E               	movwf	(?___flmul+2)^0,c
 11694  003F02  0E00               	movlw	0
 11695  003F04  6E1F               	movwf	(?___flmul+3)^0,c
 11696  003F06  0012               	return	
 11697  003F08                     l6193:
 11698  003F08  5022               	movf	(___flmul@a+2)^0,w,c
 11699  003F0A  021C               	mulwf	___flmul@b^0,c
 11700  003F0C  CFF3 F033          	movff	prodl,___flmul@temp
 11701  003F10  CFF4 F034          	movff	prodh,___flmul@temp+1
 11702  003F14  5033               	movf	___flmul@temp^0,w,c
 11703  003F16  6E2A               	movwf	___flmul@grs^0,c
 11704  003F18  6A2B               	clrf	(___flmul@grs+1)^0,c
 11705  003F1A  6A2C               	clrf	(___flmul@grs+2)^0,c
 11706  003F1C  6A2D               	clrf	(___flmul@grs+3)^0,c
 11707  003F1E  5034               	movf	(___flmul@temp+1)^0,w,c
 11708  003F20  6E2F               	movwf	___flmul@prod^0,c
 11709  003F22  6A30               	clrf	(___flmul@prod+1)^0,c
 11710  003F24  6A31               	clrf	(___flmul@prod+2)^0,c
 11711  003F26  6A32               	clrf	(___flmul@prod+3)^0,c
 11712  003F28  5021               	movf	(___flmul@a+1)^0,w,c
 11713  003F2A  021D               	mulwf	(___flmul@b+1)^0,c
 11714  003F2C  CFF3 F033          	movff	prodl,___flmul@temp
 11715  003F30  CFF4 F034          	movff	prodh,___flmul@temp+1
 11716  003F34  5033               	movf	___flmul@temp^0,w,c
 11717  003F36  262A               	addwf	___flmul@grs^0,f,c
 11718  003F38  0E00               	movlw	0
 11719  003F3A  222B               	addwfc	(___flmul@grs+1)^0,f,c
 11720  003F3C  222C               	addwfc	(___flmul@grs+2)^0,f,c
 11721  003F3E  222D               	addwfc	(___flmul@grs+3)^0,f,c
 11722  003F40  5034               	movf	(___flmul@temp+1)^0,w,c
 11723  003F42  262F               	addwf	___flmul@prod^0,f,c
 11724  003F44  0E00               	movlw	0
 11725  003F46  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11726  003F48  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11727  003F4A  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11728  003F4C  5020               	movf	___flmul@a^0,w,c
 11729  003F4E  021E               	mulwf	(___flmul@b+2)^0,c
 11730  003F50  CFF3 F033          	movff	prodl,___flmul@temp
 11731  003F54  CFF4 F034          	movff	prodh,___flmul@temp+1
 11732  003F58  5033               	movf	___flmul@temp^0,w,c
 11733  003F5A  262A               	addwf	___flmul@grs^0,f,c
 11734  003F5C  0E00               	movlw	0
 11735  003F5E  222B               	addwfc	(___flmul@grs+1)^0,f,c
 11736  003F60  222C               	addwfc	(___flmul@grs+2)^0,f,c
 11737  003F62  222D               	addwfc	(___flmul@grs+3)^0,f,c
 11738  003F64  5034               	movf	(___flmul@temp+1)^0,w,c
 11739  003F66  262F               	addwf	___flmul@prod^0,f,c
 11740  003F68  0E00               	movlw	0
 11741  003F6A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11742  003F6C  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11743  003F6E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11744  003F70  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
 11745  003F74  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
 11746  003F78  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
 11747  003F7C  6A2A               	clrf	___flmul@grs^0,c
 11748  003F7E  5020               	movf	___flmul@a^0,w,c
 11749  003F80  021D               	mulwf	(___flmul@b+1)^0,c
 11750  003F82  CFF3 F033          	movff	prodl,___flmul@temp
 11751  003F86  CFF4 F034          	movff	prodh,___flmul@temp+1
 11752  003F8A  5033               	movf	___flmul@temp^0,w,c
 11753  003F8C  262A               	addwf	___flmul@grs^0,f,c
 11754  003F8E  5034               	movf	(___flmul@temp+1)^0,w,c
 11755  003F90  222B               	addwfc	(___flmul@grs+1)^0,f,c
 11756  003F92  0E00               	movlw	0
 11757  003F94  222C               	addwfc	(___flmul@grs+2)^0,f,c
 11758  003F96  0E00               	movlw	0
 11759  003F98  222D               	addwfc	(___flmul@grs+3)^0,f,c
 11760  003F9A  5021               	movf	(___flmul@a+1)^0,w,c
 11761  003F9C  021C               	mulwf	___flmul@b^0,c
 11762  003F9E  CFF3 F033          	movff	prodl,___flmul@temp
 11763  003FA2  CFF4 F034          	movff	prodh,___flmul@temp+1
 11764  003FA6  5033               	movf	___flmul@temp^0,w,c
 11765  003FA8  262A               	addwf	___flmul@grs^0,f,c
 11766  003FAA  5034               	movf	(___flmul@temp+1)^0,w,c
 11767  003FAC  222B               	addwfc	(___flmul@grs+1)^0,f,c
 11768  003FAE  0E00               	movlw	0
 11769  003FB0  222C               	addwfc	(___flmul@grs+2)^0,f,c
 11770  003FB2  0E00               	movlw	0
 11771  003FB4  222D               	addwfc	(___flmul@grs+3)^0,f,c
 11772  003FB6  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
 11773  003FBA  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
 11774  003FBE  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
 11775  003FC2  6A2A               	clrf	___flmul@grs^0,c
 11776  003FC4  5020               	movf	___flmul@a^0,w,c
 11777  003FC6  021C               	mulwf	___flmul@b^0,c
 11778  003FC8  CFF3 F033          	movff	prodl,___flmul@temp
 11779  003FCC  CFF4 F034          	movff	prodh,___flmul@temp+1
 11780  003FD0  5033               	movf	___flmul@temp^0,w,c
 11781  003FD2  262A               	addwf	___flmul@grs^0,f,c
 11782  003FD4  5034               	movf	(___flmul@temp+1)^0,w,c
 11783  003FD6  222B               	addwfc	(___flmul@grs+1)^0,f,c
 11784  003FD8  0E00               	movlw	0
 11785  003FDA  222C               	addwfc	(___flmul@grs+2)^0,f,c
 11786  003FDC  0E00               	movlw	0
 11787  003FDE  222D               	addwfc	(___flmul@grs+3)^0,f,c
 11788  003FE0  5022               	movf	(___flmul@a+2)^0,w,c
 11789  003FE2  021D               	mulwf	(___flmul@b+1)^0,c
 11790  003FE4  CFF3 F033          	movff	prodl,___flmul@temp
 11791  003FE8  CFF4 F034          	movff	prodh,___flmul@temp+1
 11792  003FEC  5033               	movf	___flmul@temp^0,w,c
 11793  003FEE  262F               	addwf	___flmul@prod^0,f,c
 11794  003FF0  5034               	movf	(___flmul@temp+1)^0,w,c
 11795  003FF2  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11796  003FF4  0E00               	movlw	0
 11797  003FF6  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11798  003FF8  0E00               	movlw	0
 11799  003FFA  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11800  003FFC  5021               	movf	(___flmul@a+1)^0,w,c
 11801  003FFE  021E               	mulwf	(___flmul@b+2)^0,c
 11802  004000  CFF3 F033          	movff	prodl,___flmul@temp
 11803  004004  CFF4 F034          	movff	prodh,___flmul@temp+1
 11804  004008  5033               	movf	___flmul@temp^0,w,c
 11805  00400A  262F               	addwf	___flmul@prod^0,f,c
 11806  00400C  5034               	movf	(___flmul@temp+1)^0,w,c
 11807  00400E  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11808  004010  0E00               	movlw	0
 11809  004012  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11810  004014  0E00               	movlw	0
 11811  004016  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11812  004018  5022               	movf	(___flmul@a+2)^0,w,c
 11813  00401A  021E               	mulwf	(___flmul@b+2)^0,c
 11814  00401C  CFF3 F033          	movff	prodl,___flmul@temp
 11815  004020  CFF4 F034          	movff	prodh,___flmul@temp+1
 11816  004024  5033               	movf	___flmul@temp^0,w,c
 11817  004026  6E24               	movwf	??___flmul^0,c
 11818  004028  5034               	movf	(___flmul@temp+1)^0,w,c
 11819  00402A  6E25               	movwf	(??___flmul+1)^0,c
 11820  00402C  6A26               	clrf	(??___flmul+2)^0,c
 11821  00402E  6A27               	clrf	(??___flmul+3)^0,c
 11822  004030  C026  F027         	movff	??___flmul+2,??___flmul+3
 11823  004034  C025  F026         	movff	??___flmul+1,??___flmul+2
 11824  004038  C024  F025         	movff	??___flmul,??___flmul+1
 11825  00403C  6A24               	clrf	??___flmul^0,c
 11826  00403E  5024               	movf	??___flmul^0,w,c
 11827  004040  262F               	addwf	___flmul@prod^0,f,c
 11828  004042  5025               	movf	(??___flmul+1)^0,w,c
 11829  004044  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11830  004046  5026               	movf	(??___flmul+2)^0,w,c
 11831  004048  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11832  00404A  5027               	movf	(??___flmul+3)^0,w,c
 11833  00404C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11834  00404E  C02A  F024         	movff	___flmul@grs,??___flmul
 11835  004052  C02B  F025         	movff	___flmul@grs+1,??___flmul+1
 11836  004056  C02C  F026         	movff	___flmul@grs+2,??___flmul+2
 11837  00405A  C02D  F027         	movff	___flmul@grs+3,??___flmul+3
 11838  00405E  0E19               	movlw	25
 11839  004060  D005               	goto	u7800
 11840  004062                     u7805:
 11841  004062  90D8               	bcf	status,0,c
 11842  004064  3227               	rrcf	(??___flmul+3)^0,f,c
 11843  004066  3226               	rrcf	(??___flmul+2)^0,f,c
 11844  004068  3225               	rrcf	(??___flmul+1)^0,f,c
 11845  00406A  3224               	rrcf	??___flmul^0,f,c
 11846  00406C                     u7800:
 11847  00406C  2EE8               	decfsz	wreg,f,c
 11848  00406E  D7F9               	goto	u7805
 11849  004070  5024               	movf	??___flmul^0,w,c
 11850  004072  262F               	addwf	___flmul@prod^0,f,c
 11851  004074  5025               	movf	(??___flmul+1)^0,w,c
 11852  004076  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11853  004078  5026               	movf	(??___flmul+2)^0,w,c
 11854  00407A  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11855  00407C  5027               	movf	(??___flmul+3)^0,w,c
 11856  00407E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11857  004080  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
 11858  004084  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
 11859  004088  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
 11860  00408C  6A2A               	clrf	___flmul@grs^0,c
 11861  00408E  5029               	movf	___flmul@aexp^0,w,c
 11862  004090  C02E  F024         	movff	___flmul@bexp,??___flmul
 11863  004094  6A25               	clrf	(??___flmul+1)^0,c
 11864  004096  2624               	addwf	??___flmul^0,f,c
 11865  004098  0E00               	movlw	0
 11866  00409A  2225               	addwfc	(??___flmul+1)^0,f,c
 11867  00409C  0E82               	movlw	130
 11868  00409E  2424               	addwf	??___flmul^0,w,c
 11869  0040A0  6E33               	movwf	___flmul@temp^0,c
 11870  0040A2  0EFF               	movlw	255
 11871  0040A4  2025               	addwfc	(??___flmul+1)^0,w,c
 11872  0040A6  6E34               	movwf	(___flmul@temp+1)^0,c
 11873  0040A8  D00F               	goto	l6241
 11874  0040AA                     l6235:
 11875  0040AA  90D8               	bcf	status,0,c
 11876  0040AC  362F               	rlcf	___flmul@prod^0,f,c
 11877  0040AE  3630               	rlcf	(___flmul@prod+1)^0,f,c
 11878  0040B0  3631               	rlcf	(___flmul@prod+2)^0,f,c
 11879  0040B2  3632               	rlcf	(___flmul@prod+3)^0,f,c
 11880  0040B4  BE2D               	btfsc	(___flmul@grs+3)^0,7,c
 11881  0040B6  802F               	bsf	___flmul@prod^0,0,c
 11882  0040B8  90D8               	bcf	status,0,c
 11883  0040BA  362A               	rlcf	___flmul@grs^0,f,c
 11884  0040BC  362B               	rlcf	(___flmul@grs+1)^0,f,c
 11885  0040BE  362C               	rlcf	(___flmul@grs+2)^0,f,c
 11886  0040C0  362D               	rlcf	(___flmul@grs+3)^0,f,c
 11887  0040C2  0633               	decf	___flmul@temp^0,f,c
 11888  0040C4  A0D8               	btfss	status,0,c
 11889  0040C6  0634               	decf	(___flmul@temp+1)^0,f,c
 11890  0040C8                     l6241:
 11891  0040C8  AE31               	btfss	(___flmul@prod+2)^0,7,c
 11892  0040CA  D7EF               	goto	l6235
 11893  0040CC  0E00               	movlw	0
 11894  0040CE  6E29               	movwf	___flmul@aexp^0,c
 11895  0040D0  AE2D               	btfss	(___flmul@grs+3)^0,7,c
 11896  0040D2  D017               	goto	l987
 11897  0040D4  0EFF               	movlw	255
 11898  0040D6  142A               	andwf	___flmul@grs^0,w,c
 11899  0040D8  6E24               	movwf	??___flmul^0,c
 11900  0040DA  0EFF               	movlw	255
 11901  0040DC  142B               	andwf	(___flmul@grs+1)^0,w,c
 11902  0040DE  6E25               	movwf	(??___flmul+1)^0,c
 11903  0040E0  0EFF               	movlw	255
 11904  0040E2  142C               	andwf	(___flmul@grs+2)^0,w,c
 11905  0040E4  6E26               	movwf	(??___flmul+2)^0,c
 11906  0040E6  0E7F               	movlw	127
 11907  0040E8  142D               	andwf	(___flmul@grs+3)^0,w,c
 11908  0040EA  6E27               	movwf	(??___flmul+3)^0,c
 11909  0040EC  5024               	movf	??___flmul^0,w,c
 11910  0040EE  1025               	iorwf	(??___flmul+1)^0,w,c
 11911  0040F0  1026               	iorwf	(??___flmul+2)^0,w,c
 11912  0040F2  1027               	iorwf	(??___flmul+3)^0,w,c
 11913  0040F4  B4D8               	btfsc	status,2,c
 11914  0040F6  D003               	goto	l988
 11915  0040F8                     u7840:
 11916  0040F8  0E01               	movlw	1
 11917  0040FA  6E29               	movwf	___flmul@aexp^0,c
 11918  0040FC  D002               	goto	l987
 11919  0040FE                     l988:
 11920  0040FE  B02F               	btfsc	___flmul@prod^0,0,c
 11921  004100  D7FB               	goto	u7840
 11922  004102                     l987:
 11923  004102  5029               	movf	___flmul@aexp^0,w,c
 11924  004104  B4D8               	btfsc	status,2,c
 11925  004106  D01F               	goto	l6261
 11926  004108  0E01               	movlw	1
 11927  00410A  262F               	addwf	___flmul@prod^0,f,c
 11928  00410C  0E00               	movlw	0
 11929  00410E  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11930  004110  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11931  004112  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11932  004114  A032               	btfss	(___flmul@prod+3)^0,0,c
 11933  004116  D017               	goto	l6261
 11934  004118  C02F  F024         	movff	___flmul@prod,??___flmul
 11935  00411C  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11936  004120  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11937  004124  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11938  004128  3427               	rlcf	(??___flmul+3)^0,w,c
 11939  00412A  3227               	rrcf	(??___flmul+3)^0,f,c
 11940  00412C  3226               	rrcf	(??___flmul+2)^0,f,c
 11941  00412E  3225               	rrcf	(??___flmul+1)^0,f,c
 11942  004130  3224               	rrcf	??___flmul^0,f,c
 11943  004132  C024  F02F         	movff	??___flmul,___flmul@prod
 11944  004136  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11945  00413A  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11946  00413E  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11947  004142  4A33               	infsnz	___flmul@temp^0,f,c
 11948  004144  2A34               	incf	(___flmul@temp+1)^0,f,c
 11949  004146                     l6261:
 11950  004146  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11951  004148  D00D               	goto	l6265
 11952  00414A  5034               	movf	(___flmul@temp+1)^0,w,c
 11953  00414C  E103               	bnz	u7880
 11954  00414E  2833               	incf	___flmul@temp^0,w,c
 11955  004150  A0D8               	btfss	status,0,c
 11956  004152  D008               	goto	l6265
 11957  004154                     u7880:
 11958  004154  0E00               	movlw	0
 11959  004156  6E2F               	movwf	___flmul@prod^0,c
 11960  004158  0E00               	movlw	0
 11961  00415A  6E30               	movwf	(___flmul@prod+1)^0,c
 11962  00415C  0E80               	movlw	128
 11963  00415E  6E31               	movwf	(___flmul@prod+2)^0,c
 11964  004160  0E7F               	movlw	127
 11965  004162  D020               	goto	L12
 11966  004164                     l6265:
 11967  004164  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11968  004166  D005               	goto	u7890
 11969  004168  5034               	movf	(___flmul@temp+1)^0,w,c
 11970  00416A  E10E               	bnz	l995
 11971  00416C  0433               	decf	___flmul@temp^0,w,c
 11972  00416E  B0D8               	btfsc	status,0,c
 11973  004170  D00B               	goto	l995
 11974  004172                     u7890:
 11975  004172  0E00               	movlw	0
 11976  004174  6E2F               	movwf	___flmul@prod^0,c
 11977  004176  0E00               	movlw	0
 11978  004178  6E30               	movwf	(___flmul@prod+1)^0,c
 11979  00417A  0E00               	movlw	0
 11980  00417C  6E31               	movwf	(___flmul@prod+2)^0,c
 11981  00417E  0E00               	movlw	0
 11982  004180  6E32               	movwf	(___flmul@prod+3)^0,c
 11983  004182  0E00               	movlw	0
 11984  004184  6E28               	movwf	___flmul@sign^0,c
 11985  004186  D00F               	goto	l6277
 11986  004188                     l995:
 11987  004188  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11988  00418C  0EFF               	movlw	255
 11989  00418E  162F               	andwf	___flmul@prod^0,f,c
 11990  004190  0EFF               	movlw	255
 11991  004192  1630               	andwf	(___flmul@prod+1)^0,f,c
 11992  004194  0E7F               	movlw	127
 11993  004196  1631               	andwf	(___flmul@prod+2)^0,f,c
 11994  004198  0E00               	movlw	0
 11995  00419A  1632               	andwf	(___flmul@prod+3)^0,f,c
 11996  00419C  B02E               	btfsc	___flmul@bexp^0,0,c
 11997  00419E  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11998  0041A0  90D8               	bcf	status,0,c
 11999  0041A2  302E               	rrcf	___flmul@bexp^0,w,c
 12000  0041A4                     L12:
 12001  0041A4  6E32               	movwf	(___flmul@prod+3)^0,c
 12002  0041A6                     l6277:
 12003  0041A6  5028               	movf	___flmul@sign^0,w,c
 12004  0041A8  1232               	iorwf	(___flmul@prod+3)^0,f,c
 12005  0041AA  C02F  F01C         	movff	___flmul@prod,?___flmul
 12006  0041AE  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 12007  0041B2  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 12008  0041B6  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 12009  0041BA  0012               	return		;funcret
 12010  0041BC                     __end_of___flmul:
 12011                           	opt callstack 0
 12012                           
 12013 ;; *************** function _fabsf *****************
 12014 ;; Defined at:
 12015 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fabsf.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;  x               4   11[COMRAM] float 
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;  u               4   15[COMRAM] struct .
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  4   11[COMRAM] float 
 12022 ;; Registers used:
 12023 ;;		status,2, status,0
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12029 ;;      Params:         4       0       0       0       0       0       0
 12030 ;;      Locals:         4       0       0       0       0       0       0
 12031 ;;      Temps:          0       0       0       0       0       0       0
 12032 ;;      Totals:         8       0       0       0       0       0       0
 12033 ;;Total ram usage:        8 bytes
 12034 ;; Hardware stack levels used:    1
 12035 ;; Hardware stack levels required when called:    4
 12036 ;; This function calls:
 12037 ;;		Nothing
 12038 ;; This function is called by:
 12039 ;;		_powf
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           	psect	text41
 12044  005BDE                     __ptext41:
 12045                           	opt callstack 0
 12046  005BDE                     _fabsf:
 12047                           	opt callstack 23
 12048                           
 12049                           ;incstack = 0
 12050  005BDE  C0ED  F010         	movff	fabsf@F463,fabsf@u
 12051  005BE2  C0EE  F011         	movff	fabsf@F463+1,fabsf@u+1
 12052  005BE6  C0EF  F012         	movff	fabsf@F463+2,fabsf@u+2
 12053  005BEA  C0F0  F013         	movff	fabsf@F463+3,fabsf@u+3
 12054  005BEE  C00C  F010         	movff	fabsf@x,fabsf@u
 12055  005BF2  C00D  F011         	movff	fabsf@x+1,fabsf@u+1
 12056  005BF6  C00E  F012         	movff	fabsf@x+2,fabsf@u+2
 12057  005BFA  C00F  F013         	movff	fabsf@x+3,fabsf@u+3
 12058  005BFE  9E13               	bcf	(fabsf@u+3)^0,7,c
 12059  005C00  C010  F00C         	movff	fabsf@u,?_fabsf
 12060  005C04  C011  F00D         	movff	fabsf@u+1,?_fabsf+1
 12061  005C08  C012  F00E         	movff	fabsf@u+2,?_fabsf+2
 12062  005C0C  C013  F00F         	movff	fabsf@u+3,?_fabsf+3
 12063  005C10  0012               	return		;funcret
 12064  005C12                     __end_of_fabsf:
 12065                           	opt callstack 0
 12066                           
 12067 ;; *************** function ___xxtofl *****************
 12068 ;; Defined at:
 12069 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 12070 ;; Parameters:    Size  Location     Type
 12071 ;;  sign            1    wreg     unsigned char 
 12072 ;;  val             4   11[COMRAM] long 
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;  sign            1   19[COMRAM] unsigned char 
 12075 ;;  arg             4   21[COMRAM] unsigned long 
 12076 ;;  exp             1   20[COMRAM] unsigned char 
 12077 ;; Return value:  Size  Location     Type
 12078 ;;                  4   11[COMRAM] unsigned char 
 12079 ;; Registers used:
 12080 ;;		wreg, status,2, status,0
 12081 ;; Tracked objects:
 12082 ;;		On entry : 0/0
 12083 ;;		On exit  : 0/0
 12084 ;;		Unchanged: 0/0
 12085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12086 ;;      Params:         4       0       0       0       0       0       0
 12087 ;;      Locals:         6       0       0       0       0       0       0
 12088 ;;      Temps:          4       0       0       0       0       0       0
 12089 ;;      Totals:        14       0       0       0       0       0       0
 12090 ;;Total ram usage:       14 bytes
 12091 ;; Hardware stack levels used:    1
 12092 ;; Hardware stack levels required when called:    4
 12093 ;; This function calls:
 12094 ;;		Nothing
 12095 ;; This function is called by:
 12096 ;;		_mq135_getppm
 12097 ;;		_ADC_Read
 12098 ;;		_powf
 12099 ;; This function uses a non-reentrant model
 12100 ;;
 12101                           
 12102                           	psect	text42
 12103  004F5E                     __ptext42:
 12104                           	opt callstack 0
 12105  004F5E                     ___xxtofl:
 12106                           	opt callstack 23
 12107                           
 12108                           ;incstack = 0
 12109                           ;___xxtofl@sign stored from wreg
 12110  004F5E  6E14               	movwf	___xxtofl@sign^0,c
 12111  004F60  5014               	movf	___xxtofl@sign^0,w,c
 12112  004F62  A4D8               	btfss	status,2,c
 12113  004F64  AE0F               	btfss	(___xxtofl@val+3)^0,7,c
 12114  004F66  D01A               	goto	l1019
 12115  004F68  C00C  F010         	movff	___xxtofl@val,??___xxtofl
 12116  004F6C  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
 12117  004F70  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
 12118  004F74  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
 12119  004F78  1E10               	comf	??___xxtofl^0,f,c
 12120  004F7A  1E11               	comf	(??___xxtofl+1)^0,f,c
 12121  004F7C  1E12               	comf	(??___xxtofl+2)^0,f,c
 12122  004F7E  1E13               	comf	(??___xxtofl+3)^0,f,c
 12123  004F80  2A10               	incf	??___xxtofl^0,f,c
 12124  004F82  0E00               	movlw	0
 12125  004F84  2211               	addwfc	(??___xxtofl+1)^0,f,c
 12126  004F86  2212               	addwfc	(??___xxtofl+2)^0,f,c
 12127  004F88  2213               	addwfc	(??___xxtofl+3)^0,f,c
 12128  004F8A  C010  F016         	movff	??___xxtofl,___xxtofl@arg
 12129  004F8E  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
 12130  004F92  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
 12131  004F96  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
 12132  004F9A  D008               	goto	l4731
 12133  004F9C                     l1019:
 12134  004F9C  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
 12135  004FA0  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12136  004FA4  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12137  004FA8  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12138  004FAC                     l4731:
 12139  004FAC  500C               	movf	___xxtofl@val^0,w,c
 12140  004FAE  100D               	iorwf	(___xxtofl@val+1)^0,w,c
 12141  004FB0  100E               	iorwf	(___xxtofl@val+2)^0,w,c
 12142  004FB2  100F               	iorwf	(___xxtofl@val+3)^0,w,c
 12143  004FB4  A4D8               	btfss	status,2,c
 12144  004FB6  D009               	goto	l4737
 12145  004FB8  0E00               	movlw	0
 12146  004FBA  6E0C               	movwf	?___xxtofl^0,c
 12147  004FBC  0E00               	movlw	0
 12148  004FBE  6E0D               	movwf	(?___xxtofl+1)^0,c
 12149  004FC0  0E00               	movlw	0
 12150  004FC2  6E0E               	movwf	(?___xxtofl+2)^0,c
 12151  004FC4  0E00               	movlw	0
 12152  004FC6  6E0F               	movwf	(?___xxtofl+3)^0,c
 12153  004FC8  0012               	return	
 12154  004FCA                     l4737:
 12155  004FCA  0E96               	movlw	150
 12156  004FCC  6E15               	movwf	___xxtofl@exp^0,c
 12157  004FCE  D006               	goto	l4741
 12158  004FD0                     l4739:
 12159  004FD0  2A15               	incf	___xxtofl@exp^0,f,c
 12160  004FD2  90D8               	bcf	status,0,c
 12161  004FD4  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
 12162  004FD6  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
 12163  004FD8  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
 12164  004FDA  3216               	rrcf	___xxtofl@arg^0,f,c
 12165  004FDC                     l4741:
 12166  004FDC  0E00               	movlw	0
 12167  004FDE  1416               	andwf	___xxtofl@arg^0,w,c
 12168  004FE0  6E10               	movwf	??___xxtofl^0,c
 12169  004FE2  0E00               	movlw	0
 12170  004FE4  1417               	andwf	(___xxtofl@arg+1)^0,w,c
 12171  004FE6  6E11               	movwf	(??___xxtofl+1)^0,c
 12172  004FE8  0E00               	movlw	0
 12173  004FEA  1418               	andwf	(___xxtofl@arg+2)^0,w,c
 12174  004FEC  6E12               	movwf	(??___xxtofl+2)^0,c
 12175  004FEE  0EFE               	movlw	254
 12176  004FF0  1419               	andwf	(___xxtofl@arg+3)^0,w,c
 12177  004FF2  6E13               	movwf	(??___xxtofl+3)^0,c
 12178  004FF4  5010               	movf	??___xxtofl^0,w,c
 12179  004FF6  1011               	iorwf	(??___xxtofl+1)^0,w,c
 12180  004FF8  1012               	iorwf	(??___xxtofl+2)^0,w,c
 12181  004FFA  1013               	iorwf	(??___xxtofl+3)^0,w,c
 12182  004FFC  B4D8               	btfsc	status,2,c
 12183  004FFE  D00D               	goto	l1026
 12184  005000  D7E7               	goto	l4739
 12185  005002                     l4743:
 12186  005002  2A15               	incf	___xxtofl@exp^0,f,c
 12187  005004  0E01               	movlw	1
 12188  005006  2616               	addwf	___xxtofl@arg^0,f,c
 12189  005008  0E00               	movlw	0
 12190  00500A  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
 12191  00500C  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
 12192  00500E  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
 12193  005010  90D8               	bcf	status,0,c
 12194  005012  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
 12195  005014  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
 12196  005016  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
 12197  005018  3216               	rrcf	___xxtofl@arg^0,f,c
 12198  00501A                     l1026:
 12199  00501A  0E00               	movlw	0
 12200  00501C  1416               	andwf	___xxtofl@arg^0,w,c
 12201  00501E  6E10               	movwf	??___xxtofl^0,c
 12202  005020  0E00               	movlw	0
 12203  005022  1417               	andwf	(___xxtofl@arg+1)^0,w,c
 12204  005024  6E11               	movwf	(??___xxtofl+1)^0,c
 12205  005026  0E00               	movlw	0
 12206  005028  1418               	andwf	(___xxtofl@arg+2)^0,w,c
 12207  00502A  6E12               	movwf	(??___xxtofl+2)^0,c
 12208  00502C  0EFF               	movlw	255
 12209  00502E  1419               	andwf	(___xxtofl@arg+3)^0,w,c
 12210  005030  6E13               	movwf	(??___xxtofl+3)^0,c
 12211  005032  5010               	movf	??___xxtofl^0,w,c
 12212  005034  1011               	iorwf	(??___xxtofl+1)^0,w,c
 12213  005036  1012               	iorwf	(??___xxtofl+2)^0,w,c
 12214  005038  1013               	iorwf	(??___xxtofl+3)^0,w,c
 12215  00503A  B4D8               	btfsc	status,2,c
 12216  00503C  D007               	goto	l4751
 12217  00503E  D7E1               	goto	l4743
 12218  005040                     l4749:
 12219  005040  0615               	decf	___xxtofl@exp^0,f,c
 12220  005042  90D8               	bcf	status,0,c
 12221  005044  3616               	rlcf	___xxtofl@arg^0,f,c
 12222  005046  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
 12223  005048  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
 12224  00504A  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
 12225  00504C                     l4751:
 12226  00504C  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
 12227  00504E  D003               	goto	u5550
 12228  005050  0E02               	movlw	2
 12229  005052  6015               	cpfslt	___xxtofl@exp^0,c
 12230  005054  D7F5               	goto	l4749
 12231  005056                     u5550:
 12232  005056  A015               	btfss	___xxtofl@exp^0,0,c
 12233  005058  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
 12234  00505A  90D8               	bcf	status,0,c
 12235  00505C  3215               	rrcf	___xxtofl@exp^0,f,c
 12236  00505E  C015  F010         	movff	___xxtofl@exp,??___xxtofl
 12237  005062  6A11               	clrf	(??___xxtofl+1)^0,c
 12238  005064  6A12               	clrf	(??___xxtofl+2)^0,c
 12239  005066  6A13               	clrf	(??___xxtofl+3)^0,c
 12240  005068  C010  F013         	movff	??___xxtofl,??___xxtofl+3
 12241  00506C  6A12               	clrf	(??___xxtofl+2)^0,c
 12242  00506E  6A11               	clrf	(??___xxtofl+1)^0,c
 12243  005070  6A10               	clrf	??___xxtofl^0,c
 12244  005072  5010               	movf	??___xxtofl^0,w,c
 12245  005074  1216               	iorwf	___xxtofl@arg^0,f,c
 12246  005076  5011               	movf	(??___xxtofl+1)^0,w,c
 12247  005078  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
 12248  00507A  5012               	movf	(??___xxtofl+2)^0,w,c
 12249  00507C  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
 12250  00507E  5013               	movf	(??___xxtofl+3)^0,w,c
 12251  005080  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
 12252  005082  5014               	movf	___xxtofl@sign^0,w,c
 12253  005084  A4D8               	btfss	status,2,c
 12254  005086  AE0F               	btfss	(___xxtofl@val+3)^0,7,c
 12255  005088  D001               	goto	l4767
 12256  00508A  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
 12257  00508C                     l4767:
 12258  00508C  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
 12259  005090  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12260  005094  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12261  005098  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12262  00509C  0012               	return		;funcret
 12263  00509E                     __end_of___xxtofl:
 12264                           	opt callstack 0
 12265                           
 12266 ;; *************** function ___flsub *****************
 12267 ;; Defined at:
 12268 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 12269 ;; Parameters:    Size  Location     Type
 12270 ;;  b               4   52[COMRAM] unsigned char 
 12271 ;;  a               4   56[COMRAM] unsigned char 
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;		None
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  4   52[COMRAM] unsigned char 
 12276 ;; Registers used:
 12277 ;;		wreg, status,2, status,0, cstack
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12283 ;;      Params:         8       0       0       0       0       0       0
 12284 ;;      Locals:         0       0       0       0       0       0       0
 12285 ;;      Temps:          0       0       0       0       0       0       0
 12286 ;;      Totals:         8       0       0       0       0       0       0
 12287 ;;Total ram usage:        8 bytes
 12288 ;; Hardware stack levels used:    1
 12289 ;; Hardware stack levels required when called:    5
 12290 ;; This function calls:
 12291 ;;		___fladd
 12292 ;; This function is called by:
 12293 ;;		_efgtoa
 12294 ;;		_powf
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298                           	psect	text43
 12299  005AA4                     __ptext43:
 12300                           	opt callstack 0
 12301  005AA4                     ___flsub:
 12302                           	opt callstack 21
 12303                           
 12304                           ;incstack = 0
 12305  005AA4  0E00               	movlw	0
 12306  005AA6  1A39               	xorwf	___flsub@a^0,f,c
 12307  005AA8  0E00               	movlw	0
 12308  005AAA  1A3A               	xorwf	(___flsub@a+1)^0,f,c
 12309  005AAC  0E00               	movlw	0
 12310  005AAE  1A3B               	xorwf	(___flsub@a+2)^0,f,c
 12311  005AB0  0E80               	movlw	128
 12312  005AB2  1A3C               	xorwf	(___flsub@a+3)^0,f,c
 12313  005AB4  C035  F00C         	movff	___flsub@b,___fladd@b
 12314  005AB8  C036  F00D         	movff	___flsub@b+1,___fladd@b+1
 12315  005ABC  C037  F00E         	movff	___flsub@b+2,___fladd@b+2
 12316  005AC0  C038  F00F         	movff	___flsub@b+3,___fladd@b+3
 12317  005AC4  C039  F010         	movff	___flsub@a,___fladd@a
 12318  005AC8  C03A  F011         	movff	___flsub@a+1,___fladd@a+1
 12319  005ACC  C03B  F012         	movff	___flsub@a+2,___fladd@a+2
 12320  005AD0  C03C  F013         	movff	___flsub@a+3,___fladd@a+3
 12321  005AD4  ECDE  F020         	call	___fladd	;wreg free
 12322  005AD8  C00C  F035         	movff	?___fladd,?___flsub
 12323  005ADC  C00D  F036         	movff	?___fladd+1,?___flsub+1
 12324  005AE0  C00E  F037         	movff	?___fladd+2,?___flsub+2
 12325  005AE4  C00F  F038         	movff	?___fladd+3,?___flsub+3
 12326  005AE8  0012               	return		;funcret
 12327  005AEA                     __end_of___flsub:
 12328                           	opt callstack 0
 12329                           
 12330 ;; *************** function ___fladd *****************
 12331 ;; Defined at:
 12332 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 12333 ;; Parameters:    Size  Location     Type
 12334 ;;  b               4   11[COMRAM] unsigned char 
 12335 ;;  a               4   15[COMRAM] unsigned char 
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;  grs             1   26[COMRAM] unsigned char 
 12338 ;;  bexp            1   25[COMRAM] unsigned char 
 12339 ;;  aexp            1   24[COMRAM] unsigned char 
 12340 ;;  signs           1   23[COMRAM] unsigned char 
 12341 ;; Return value:  Size  Location     Type
 12342 ;;                  4   11[COMRAM] unsigned char 
 12343 ;; Registers used:
 12344 ;;		wreg, status,2, status,0
 12345 ;; Tracked objects:
 12346 ;;		On entry : 0/0
 12347 ;;		On exit  : 0/0
 12348 ;;		Unchanged: 0/0
 12349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12350 ;;      Params:         8       0       0       0       0       0       0
 12351 ;;      Locals:         4       0       0       0       0       0       0
 12352 ;;      Temps:          4       0       0       0       0       0       0
 12353 ;;      Totals:        16       0       0       0       0       0       0
 12354 ;;Total ram usage:       16 bytes
 12355 ;; Hardware stack levels used:    1
 12356 ;; Hardware stack levels required when called:    4
 12357 ;; This function calls:
 12358 ;;		Nothing
 12359 ;; This function is called by:
 12360 ;;		_efgtoa
 12361 ;;		___flsub
 12362 ;;		_powf
 12363 ;;		_sqrtf
 12364 ;; This function uses a non-reentrant model
 12365 ;;
 12366                           
 12367                           	psect	text44
 12368  0041BC                     __ptext44:
 12369                           	opt callstack 0
 12370  0041BC                     ___fladd:
 12371                           	opt callstack 21
 12372                           
 12373                           ;incstack = 0
 12374  0041BC  500F               	movf	(___fladd@b+3)^0,w,c
 12375  0041BE  0B80               	andlw	128
 12376  0041C0  6E18               	movwf	___fladd@signs^0,c
 12377  0041C2  500F               	movf	(___fladd@b+3)^0,w,c
 12378  0041C4  240F               	addwf	(___fladd@b+3)^0,w,c
 12379  0041C6  6E1A               	movwf	___fladd@bexp^0,c
 12380  0041C8  BE0E               	btfsc	(___fladd@b+2)^0,7,c
 12381  0041CA  801A               	bsf	___fladd@bexp^0,0,c
 12382  0041CC  501A               	movf	___fladd@bexp^0,w,c
 12383  0041CE  B4D8               	btfsc	status,2,c
 12384  0041D0  D00D               	goto	l5733
 12385  0041D2  281A               	incf	___fladd@bexp^0,w,c
 12386  0041D4  A4D8               	btfss	status,2,c
 12387  0041D6  D008               	goto	l5729
 12388  0041D8  0E00               	movlw	0
 12389  0041DA  6E0C               	movwf	___fladd@b^0,c
 12390  0041DC  0E00               	movlw	0
 12391  0041DE  6E0D               	movwf	(___fladd@b+1)^0,c
 12392  0041E0  0E00               	movlw	0
 12393  0041E2  6E0E               	movwf	(___fladd@b+2)^0,c
 12394  0041E4  0E00               	movlw	0
 12395  0041E6  6E0F               	movwf	(___fladd@b+3)^0,c
 12396  0041E8                     l5729:
 12397  0041E8  8E0E               	bsf	(___fladd@b+2)^0,7,c
 12398  0041EA  D006               	goto	L13
 12399  0041EC                     l5733:
 12400  0041EC  0E00               	movlw	0
 12401  0041EE  6E0C               	movwf	___fladd@b^0,c
 12402  0041F0  0E00               	movlw	0
 12403  0041F2  6E0D               	movwf	(___fladd@b+1)^0,c
 12404  0041F4  0E00               	movlw	0
 12405  0041F6  6E0E               	movwf	(___fladd@b+2)^0,c
 12406  0041F8                     L13:
 12407  0041F8  0E00               	movlw	0
 12408  0041FA  6E0F               	movwf	(___fladd@b+3)^0,c
 12409  0041FC  5013               	movf	(___fladd@a+3)^0,w,c
 12410  0041FE  0B80               	andlw	128
 12411  004200  6E19               	movwf	___fladd@aexp^0,c
 12412  004202  5018               	movf	___fladd@signs^0,w,c
 12413  004204  1819               	xorwf	___fladd@aexp^0,w,c
 12414  004206  A4D8               	btfss	status,2,c
 12415  004208  8C18               	bsf	___fladd@signs^0,6,c
 12416  00420A  5013               	movf	(___fladd@a+3)^0,w,c
 12417  00420C  2413               	addwf	(___fladd@a+3)^0,w,c
 12418  00420E  6E19               	movwf	___fladd@aexp^0,c
 12419  004210  BE12               	btfsc	(___fladd@a+2)^0,7,c
 12420  004212  8019               	bsf	___fladd@aexp^0,0,c
 12421  004214  5019               	movf	___fladd@aexp^0,w,c
 12422  004216  B4D8               	btfsc	status,2,c
 12423  004218  D00D               	goto	l5757
 12424  00421A  2819               	incf	___fladd@aexp^0,w,c
 12425  00421C  A4D8               	btfss	status,2,c
 12426  00421E  D008               	goto	l5753
 12427  004220  0E00               	movlw	0
 12428  004222  6E10               	movwf	___fladd@a^0,c
 12429  004224  0E00               	movlw	0
 12430  004226  6E11               	movwf	(___fladd@a+1)^0,c
 12431  004228  0E00               	movlw	0
 12432  00422A  6E12               	movwf	(___fladd@a+2)^0,c
 12433  00422C  0E00               	movlw	0
 12434  00422E  6E13               	movwf	(___fladd@a+3)^0,c
 12435  004230                     l5753:
 12436  004230  8E12               	bsf	(___fladd@a+2)^0,7,c
 12437  004232  D006               	goto	L14
 12438  004234                     l5757:
 12439  004234  0E00               	movlw	0
 12440  004236  6E10               	movwf	___fladd@a^0,c
 12441  004238  0E00               	movlw	0
 12442  00423A  6E11               	movwf	(___fladd@a+1)^0,c
 12443  00423C  0E00               	movlw	0
 12444  00423E  6E12               	movwf	(___fladd@a+2)^0,c
 12445  004240                     L14:
 12446  004240  0E00               	movlw	0
 12447  004242  6E13               	movwf	(___fladd@a+3)^0,c
 12448  004244  501A               	movf	___fladd@bexp^0,w,c
 12449  004246  5C19               	subwf	___fladd@aexp^0,w,c
 12450  004248  B0D8               	btfsc	status,0,c
 12451  00424A  D022               	goto	l5795
 12452  00424C  AC18               	btfss	___fladd@signs^0,6,c
 12453  00424E  D002               	goto	l5765
 12454  004250  0E80               	movlw	128
 12455  004252  1A18               	xorwf	___fladd@signs^0,f,c
 12456  004254                     l5765:
 12457  004254  C01A  F01B         	movff	___fladd@bexp,___fladd@grs
 12458  004258  C019  F01A         	movff	___fladd@aexp,___fladd@bexp
 12459  00425C  C01B  F019         	movff	___fladd@grs,___fladd@aexp
 12460  004260  C00C  F01B         	movff	___fladd@b,___fladd@grs
 12461  004264  C010  F00C         	movff	___fladd@a,___fladd@b
 12462  004268  C01B  F010         	movff	___fladd@grs,___fladd@a
 12463  00426C  C00D  F01B         	movff	___fladd@b+1,___fladd@grs
 12464  004270  C011  F00D         	movff	___fladd@a+1,___fladd@b+1
 12465  004274  C01B  F011         	movff	___fladd@grs,___fladd@a+1
 12466  004278  C00E  F01B         	movff	___fladd@b+2,___fladd@grs
 12467  00427C  C012  F00E         	movff	___fladd@a+2,___fladd@b+2
 12468  004280  C01B  F012         	movff	___fladd@grs,___fladd@a+2
 12469  004284  C00F  F01B         	movff	___fladd@b+3,___fladd@grs
 12470  004288  C013  F00F         	movff	___fladd@a+3,___fladd@b+3
 12471  00428C  C01B  F013         	movff	___fladd@grs,___fladd@a+3
 12472  004290                     l5795:
 12473  004290  0E00               	movlw	0
 12474  004292  6E1B               	movwf	___fladd@grs^0,c
 12475  004294  501A               	movf	___fladd@bexp^0,w,c
 12476  004296  C019  F014         	movff	___fladd@aexp,??___fladd
 12477  00429A  6A15               	clrf	(??___fladd+1)^0,c
 12478  00429C  5E14               	subwf	??___fladd^0,f,c
 12479  00429E  0E00               	movlw	0
 12480  0042A0  5A15               	subwfb	(??___fladd+1)^0,f,c
 12481  0042A2  BE15               	btfsc	(??___fladd+1)^0,7,c
 12482  0042A4  D02C               	goto	l893
 12483  0042A6  5015               	movf	(??___fladd+1)^0,w,c
 12484  0042A8  E104               	bnz	u6910
 12485  0042AA  0E1A               	movlw	26
 12486  0042AC  5C14               	subwf	??___fladd^0,w,c
 12487  0042AE  A0D8               	btfss	status,0,c
 12488  0042B0  D026               	goto	l893
 12489  0042B2                     u6910:
 12490  0042B2  500C               	movf	___fladd@b^0,w,c
 12491  0042B4  100D               	iorwf	(___fladd@b+1)^0,w,c
 12492  0042B6  100E               	iorwf	(___fladd@b+2)^0,w,c
 12493  0042B8  100F               	iorwf	(___fladd@b+3)^0,w,c
 12494  0042BA  B4D8               	btfsc	status,2,c
 12495  0042BC  D002               	goto	u6920
 12496  0042BE  0E01               	movlw	1
 12497  0042C0  D001               	goto	u6930
 12498  0042C2                     u6920:
 12499  0042C2  0E00               	movlw	0
 12500  0042C4                     u6930:
 12501  0042C4  6E1B               	movwf	___fladd@grs^0,c
 12502  0042C6  0E00               	movlw	0
 12503  0042C8  6E0C               	movwf	___fladd@b^0,c
 12504  0042CA  0E00               	movlw	0
 12505  0042CC  6E0D               	movwf	(___fladd@b+1)^0,c
 12506  0042CE  0E00               	movlw	0
 12507  0042D0  6E0E               	movwf	(___fladd@b+2)^0,c
 12508  0042D2  0E00               	movlw	0
 12509  0042D4  6E0F               	movwf	(___fladd@b+3)^0,c
 12510  0042D6  C019  F01A         	movff	___fladd@aexp,___fladd@bexp
 12511  0042DA  D015               	goto	u6960
 12512  0042DC                     l894:
 12513  0042DC  A01B               	btfss	___fladd@grs^0,0,c
 12514  0042DE  D005               	goto	l5807
 12515  0042E0  90D8               	bcf	status,0,c
 12516  0042E2  301B               	rrcf	___fladd@grs^0,w,c
 12517  0042E4  0901               	iorlw	1
 12518  0042E6  6E1B               	movwf	___fladd@grs^0,c
 12519  0042E8  D002               	goto	l5809
 12520  0042EA                     l5807:
 12521  0042EA  90D8               	bcf	status,0,c
 12522  0042EC  321B               	rrcf	___fladd@grs^0,f,c
 12523  0042EE                     l5809:
 12524  0042EE  B00C               	btfsc	___fladd@b^0,0,c
 12525  0042F0  8E1B               	bsf	___fladd@grs^0,7,c
 12526  0042F2  340F               	rlcf	(___fladd@b+3)^0,w,c
 12527  0042F4  320F               	rrcf	(___fladd@b+3)^0,f,c
 12528  0042F6  320E               	rrcf	(___fladd@b+2)^0,f,c
 12529  0042F8  320D               	rrcf	(___fladd@b+1)^0,f,c
 12530  0042FA  320C               	rrcf	___fladd@b^0,f,c
 12531  0042FC  2A1A               	incf	___fladd@bexp^0,f,c
 12532  0042FE                     l893:
 12533  0042FE  5019               	movf	___fladd@aexp^0,w,c
 12534  004300  5C1A               	subwf	___fladd@bexp^0,w,c
 12535  004302  A0D8               	btfss	status,0,c
 12536  004304  D7EB               	goto	l894
 12537  004306                     u6960:
 12538  004306  BC18               	btfsc	___fladd@signs^0,6,c
 12539  004308  D028               	goto	l5841
 12540  00430A  501A               	movf	___fladd@bexp^0,w,c
 12541  00430C  A4D8               	btfss	status,2,c
 12542  00430E  D009               	goto	l5823
 12543  004310  0E00               	movlw	0
 12544  004312  6E0C               	movwf	?___fladd^0,c
 12545  004314  0E00               	movlw	0
 12546  004316  6E0D               	movwf	(?___fladd+1)^0,c
 12547  004318  0E00               	movlw	0
 12548  00431A  6E0E               	movwf	(?___fladd+2)^0,c
 12549  00431C  0E00               	movlw	0
 12550  00431E  6E0F               	movwf	(?___fladd+3)^0,c
 12551  004320  0012               	return	
 12552  004322                     l5823:
 12553  004322  5010               	movf	___fladd@a^0,w,c
 12554  004324  260C               	addwf	___fladd@b^0,f,c
 12555  004326  5011               	movf	(___fladd@a+1)^0,w,c
 12556  004328  220D               	addwfc	(___fladd@b+1)^0,f,c
 12557  00432A  5012               	movf	(___fladd@a+2)^0,w,c
 12558  00432C  220E               	addwfc	(___fladd@b+2)^0,f,c
 12559  00432E  5013               	movf	(___fladd@a+3)^0,w,c
 12560  004330  220F               	addwfc	(___fladd@b+3)^0,f,c
 12561  004332  A00F               	btfss	(___fladd@b+3)^0,0,c
 12562  004334  D071               	goto	u7090
 12563  004336  A01B               	btfss	___fladd@grs^0,0,c
 12564  004338  D005               	goto	l5831
 12565  00433A  90D8               	bcf	status,0,c
 12566  00433C  301B               	rrcf	___fladd@grs^0,w,c
 12567  00433E  0901               	iorlw	1
 12568  004340  6E1B               	movwf	___fladd@grs^0,c
 12569  004342  D002               	goto	l5833
 12570  004344                     l5831:
 12571  004344  90D8               	bcf	status,0,c
 12572  004346  321B               	rrcf	___fladd@grs^0,f,c
 12573  004348                     l5833:
 12574  004348  B00C               	btfsc	___fladd@b^0,0,c
 12575  00434A  8E1B               	bsf	___fladd@grs^0,7,c
 12576  00434C  340F               	rlcf	(___fladd@b+3)^0,w,c
 12577  00434E  320F               	rrcf	(___fladd@b+3)^0,f,c
 12578  004350  320E               	rrcf	(___fladd@b+2)^0,f,c
 12579  004352  320D               	rrcf	(___fladd@b+1)^0,f,c
 12580  004354  320C               	rrcf	___fladd@b^0,f,c
 12581  004356  2A1A               	incf	___fladd@bexp^0,f,c
 12582  004358  D05F               	goto	u7090
 12583  00435A                     l5841:
 12584  00435A  5010               	movf	___fladd@a^0,w,c
 12585  00435C  5C0C               	subwf	___fladd@b^0,w,c
 12586  00435E  5011               	movf	(___fladd@a+1)^0,w,c
 12587  004360  580D               	subwfb	(___fladd@b+1)^0,w,c
 12588  004362  5012               	movf	(___fladd@a+2)^0,w,c
 12589  004364  580E               	subwfb	(___fladd@b+2)^0,w,c
 12590  004366  500F               	movf	(___fladd@b+3)^0,w,c
 12591  004368  0A80               	xorlw	128
 12592  00436A  6E14               	movwf	??___fladd^0,c
 12593  00436C  5013               	movf	(___fladd@a+3)^0,w,c
 12594  00436E  0A80               	xorlw	128
 12595  004370  5814               	subwfb	??___fladd^0,w,c
 12596  004372  B0D8               	btfsc	status,0,c
 12597  004374  D025               	goto	l5851
 12598  004376  500C               	movf	___fladd@b^0,w,c
 12599  004378  5C10               	subwf	___fladd@a^0,w,c
 12600  00437A  6E14               	movwf	??___fladd^0,c
 12601  00437C  500D               	movf	(___fladd@b+1)^0,w,c
 12602  00437E  5811               	subwfb	(___fladd@a+1)^0,w,c
 12603  004380  6E15               	movwf	(??___fladd+1)^0,c
 12604  004382  500E               	movf	(___fladd@b+2)^0,w,c
 12605  004384  5812               	subwfb	(___fladd@a+2)^0,w,c
 12606  004386  6E16               	movwf	(??___fladd+2)^0,c
 12607  004388  500F               	movf	(___fladd@b+3)^0,w,c
 12608  00438A  5813               	subwfb	(___fladd@a+3)^0,w,c
 12609  00438C  6E17               	movwf	(??___fladd+3)^0,c
 12610  00438E  0EFF               	movlw	255
 12611  004390  2414               	addwf	??___fladd^0,w,c
 12612  004392  6E0C               	movwf	___fladd@b^0,c
 12613  004394  0EFF               	movlw	255
 12614  004396  2015               	addwfc	(??___fladd+1)^0,w,c
 12615  004398  6E0D               	movwf	(___fladd@b+1)^0,c
 12616  00439A  0EFF               	movlw	255
 12617  00439C  2016               	addwfc	(??___fladd+2)^0,w,c
 12618  00439E  6E0E               	movwf	(___fladd@b+2)^0,c
 12619  0043A0  0EFF               	movlw	255
 12620  0043A2  2017               	addwfc	(??___fladd+3)^0,w,c
 12621  0043A4  6E0F               	movwf	(___fladd@b+3)^0,c
 12622  0043A6  0E80               	movlw	128
 12623  0043A8  1A18               	xorwf	___fladd@signs^0,f,c
 12624  0043AA  6C1B               	negf	___fladd@grs^0,c
 12625  0043AC  501B               	movf	___fladd@grs^0,w,c
 12626  0043AE  A4D8               	btfss	status,2,c
 12627  0043B0  D00F               	goto	l909
 12628  0043B2  0E01               	movlw	1
 12629  0043B4  260C               	addwf	___fladd@b^0,f,c
 12630  0043B6  0E00               	movlw	0
 12631  0043B8  220D               	addwfc	(___fladd@b+1)^0,f,c
 12632  0043BA  220E               	addwfc	(___fladd@b+2)^0,f,c
 12633  0043BC  220F               	addwfc	(___fladd@b+3)^0,f,c
 12634  0043BE  D008               	goto	l909
 12635  0043C0                     l5851:
 12636  0043C0  5010               	movf	___fladd@a^0,w,c
 12637  0043C2  5E0C               	subwf	___fladd@b^0,f,c
 12638  0043C4  5011               	movf	(___fladd@a+1)^0,w,c
 12639  0043C6  5A0D               	subwfb	(___fladd@b+1)^0,f,c
 12640  0043C8  5012               	movf	(___fladd@a+2)^0,w,c
 12641  0043CA  5A0E               	subwfb	(___fladd@b+2)^0,f,c
 12642  0043CC  5013               	movf	(___fladd@a+3)^0,w,c
 12643  0043CE  5A0F               	subwfb	(___fladd@b+3)^0,f,c
 12644  0043D0                     l909:
 12645  0043D0  500C               	movf	___fladd@b^0,w,c
 12646  0043D2  100D               	iorwf	(___fladd@b+1)^0,w,c
 12647  0043D4  100E               	iorwf	(___fladd@b+2)^0,w,c
 12648  0043D6  100F               	iorwf	(___fladd@b+3)^0,w,c
 12649  0043D8  A4D8               	btfss	status,2,c
 12650  0043DA  D01C               	goto	l5875
 12651  0043DC  501B               	movf	___fladd@grs^0,w,c
 12652  0043DE  A4D8               	btfss	status,2,c
 12653  0043E0  D019               	goto	l5875
 12654  0043E2  0E00               	movlw	0
 12655  0043E4  6E0C               	movwf	?___fladd^0,c
 12656  0043E6  0E00               	movlw	0
 12657  0043E8  6E0D               	movwf	(?___fladd+1)^0,c
 12658  0043EA  0E00               	movlw	0
 12659  0043EC  6E0E               	movwf	(?___fladd+2)^0,c
 12660  0043EE  0E00               	movlw	0
 12661  0043F0  6E0F               	movwf	(?___fladd+3)^0,c
 12662  0043F2  0012               	return	
 12663  0043F4                     l5859:
 12664  0043F4  90D8               	bcf	status,0,c
 12665  0043F6  360C               	rlcf	___fladd@b^0,f,c
 12666  0043F8  360D               	rlcf	(___fladd@b+1)^0,f,c
 12667  0043FA  360E               	rlcf	(___fladd@b+2)^0,f,c
 12668  0043FC  360F               	rlcf	(___fladd@b+3)^0,f,c
 12669  0043FE  BE1B               	btfsc	___fladd@grs^0,7,c
 12670  004400  800C               	bsf	___fladd@b^0,0,c
 12671  004402  A01B               	btfss	___fladd@grs^0,0,c
 12672  004404  D002               	goto	l5869
 12673  004406  80D8               	bsf	status,0,c
 12674  004408  D001               	goto	L15
 12675  00440A                     l5869:
 12676  00440A  90D8               	bcf	status,0,c
 12677  00440C                     L15:
 12678  00440C  361B               	rlcf	___fladd@grs^0,f,c
 12679  00440E  501A               	movf	___fladd@bexp^0,w,c
 12680  004410  A4D8               	btfss	status,2,c
 12681  004412  061A               	decf	___fladd@bexp^0,f,c
 12682  004414                     l5875:
 12683  004414  AE0E               	btfss	(___fladd@b+2)^0,7,c
 12684  004416  D7EE               	goto	l5859
 12685  004418                     u7090:
 12686  004418  0E00               	movlw	0
 12687  00441A  6E19               	movwf	___fladd@aexp^0,c
 12688  00441C  AE1B               	btfss	___fladd@grs^0,7,c
 12689  00441E  D00B               	goto	l918
 12690  004420  C01B  F014         	movff	___fladd@grs,??___fladd
 12691  004424  0E7F               	movlw	127
 12692  004426  1614               	andwf	??___fladd^0,f,c
 12693  004428  B4D8               	btfsc	status,2,c
 12694  00442A  D003               	goto	l919
 12695  00442C                     u7110:
 12696  00442C  0E01               	movlw	1
 12697  00442E  6E19               	movwf	___fladd@aexp^0,c
 12698  004430  D002               	goto	l918
 12699  004432                     l919:
 12700  004432  B00C               	btfsc	___fladd@b^0,0,c
 12701  004434  D7FB               	goto	u7110
 12702  004436                     l918:
 12703  004436  5019               	movf	___fladd@aexp^0,w,c
 12704  004438  B4D8               	btfsc	status,2,c
 12705  00443A  D020               	goto	l5895
 12706  00443C  0E01               	movlw	1
 12707  00443E  260C               	addwf	___fladd@b^0,f,c
 12708  004440  0E00               	movlw	0
 12709  004442  220D               	addwfc	(___fladd@b+1)^0,f,c
 12710  004444  220E               	addwfc	(___fladd@b+2)^0,f,c
 12711  004446  220F               	addwfc	(___fladd@b+3)^0,f,c
 12712  004448  A00F               	btfss	(___fladd@b+3)^0,0,c
 12713  00444A  D018               	goto	l5895
 12714  00444C  C00C  F014         	movff	___fladd@b,??___fladd
 12715  004450  C00D  F015         	movff	___fladd@b+1,??___fladd+1
 12716  004454  C00E  F016         	movff	___fladd@b+2,??___fladd+2
 12717  004458  C00F  F017         	movff	___fladd@b+3,??___fladd+3
 12718  00445C  3417               	rlcf	(??___fladd+3)^0,w,c
 12719  00445E  3217               	rrcf	(??___fladd+3)^0,f,c
 12720  004460  3216               	rrcf	(??___fladd+2)^0,f,c
 12721  004462  3215               	rrcf	(??___fladd+1)^0,f,c
 12722  004464  3214               	rrcf	??___fladd^0,f,c
 12723  004466  C014  F00C         	movff	??___fladd,___fladd@b
 12724  00446A  C015  F00D         	movff	??___fladd+1,___fladd@b+1
 12725  00446E  C016  F00E         	movff	??___fladd+2,___fladd@b+2
 12726  004472  C017  F00F         	movff	??___fladd+3,___fladd@b+3
 12727  004476  281A               	incf	___fladd@bexp^0,w,c
 12728  004478  A4D8               	btfss	status,2,c
 12729  00447A  2A1A               	incf	___fladd@bexp^0,f,c
 12730  00447C                     l5895:
 12731  00447C  281A               	incf	___fladd@bexp^0,w,c
 12732  00447E  B4D8               	btfsc	status,2,c
 12733  004480  D003               	goto	u7170
 12734  004482  501A               	movf	___fladd@bexp^0,w,c
 12735  004484  A4D8               	btfss	status,2,c
 12736  004486  D00D               	goto	l5903
 12737  004488                     u7170:
 12738  004488  0E00               	movlw	0
 12739  00448A  6E0C               	movwf	___fladd@b^0,c
 12740  00448C  0E00               	movlw	0
 12741  00448E  6E0D               	movwf	(___fladd@b+1)^0,c
 12742  004490  0E00               	movlw	0
 12743  004492  6E0E               	movwf	(___fladd@b+2)^0,c
 12744  004494  0E00               	movlw	0
 12745  004496  6E0F               	movwf	(___fladd@b+3)^0,c
 12746  004498  501A               	movf	___fladd@bexp^0,w,c
 12747  00449A  A4D8               	btfss	status,2,c
 12748  00449C  D002               	goto	l5903
 12749  00449E  0E00               	movlw	0
 12750  0044A0  6E18               	movwf	___fladd@signs^0,c
 12751  0044A2                     l5903:
 12752  0044A2  A01A               	btfss	___fladd@bexp^0,0,c
 12753  0044A4  D002               	goto	l5907
 12754  0044A6  8E0E               	bsf	(___fladd@b+2)^0,7,c
 12755  0044A8  D001               	goto	l5909
 12756  0044AA                     l5907:
 12757  0044AA  9E0E               	bcf	(___fladd@b+2)^0,7,c
 12758  0044AC                     l5909:
 12759  0044AC  90D8               	bcf	status,0,c
 12760  0044AE  301A               	rrcf	___fladd@bexp^0,w,c
 12761  0044B0  6E0F               	movwf	(___fladd@b+3)^0,c
 12762  0044B2  BE18               	btfsc	___fladd@signs^0,7,c
 12763  0044B4  8E0F               	bsf	(___fladd@b+3)^0,7,c
 12764  0044B6  C00C  F00C         	movff	___fladd@b,?___fladd
 12765  0044BA  C00D  F00D         	movff	___fladd@b+1,?___fladd+1
 12766  0044BE  C00E  F00E         	movff	___fladd@b+2,?___fladd+2
 12767  0044C2  C00F  F00F         	movff	___fladd@b+3,?___fladd+3
 12768  0044C6  0012               	return		;funcret
 12769  0044C8                     __end_of___fladd:
 12770                           	opt callstack 0
 12771                           
 12772 ;; *************** function ___flneg *****************
 12773 ;; Defined at:
 12774 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 12775 ;; Parameters:    Size  Location     Type
 12776 ;;  f1              4   11[COMRAM] unsigned char 
 12777 ;; Auto vars:     Size  Location     Type
 12778 ;;		None
 12779 ;; Return value:  Size  Location     Type
 12780 ;;                  4   11[COMRAM] unsigned char 
 12781 ;; Registers used:
 12782 ;;		wreg, status,2, status,0
 12783 ;; Tracked objects:
 12784 ;;		On entry : 0/0
 12785 ;;		On exit  : 0/0
 12786 ;;		Unchanged: 0/0
 12787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12788 ;;      Params:         4       0       0       0       0       0       0
 12789 ;;      Locals:         0       0       0       0       0       0       0
 12790 ;;      Temps:          0       0       0       0       0       0       0
 12791 ;;      Totals:         4       0       0       0       0       0       0
 12792 ;;Total ram usage:        4 bytes
 12793 ;; Hardware stack levels used:    1
 12794 ;; Hardware stack levels required when called:    4
 12795 ;; This function calls:
 12796 ;;		Nothing
 12797 ;; This function is called by:
 12798 ;;		_efgtoa
 12799 ;;		_powf
 12800 ;; This function uses a non-reentrant model
 12801 ;;
 12802                           
 12803                           	psect	text45
 12804  005C72                     __ptext45:
 12805                           	opt callstack 0
 12806  005C72                     ___flneg:
 12807                           	opt callstack 22
 12808                           
 12809                           ;incstack = 0
 12810  005C72  500C               	movf	___flneg@f1^0,w,c
 12811  005C74  100D               	iorwf	(___flneg@f1+1)^0,w,c
 12812  005C76  100E               	iorwf	(___flneg@f1+2)^0,w,c
 12813  005C78  100F               	iorwf	(___flneg@f1+3)^0,w,c
 12814  005C7A  B4D8               	btfsc	status,2,c
 12815  005C7C  D008               	goto	l6411
 12816  005C7E  0E00               	movlw	0
 12817  005C80  1A0C               	xorwf	___flneg@f1^0,f,c
 12818  005C82  0E00               	movlw	0
 12819  005C84  1A0D               	xorwf	(___flneg@f1+1)^0,f,c
 12820  005C86  0E00               	movlw	0
 12821  005C88  1A0E               	xorwf	(___flneg@f1+2)^0,f,c
 12822  005C8A  0E80               	movlw	128
 12823  005C8C  1A0F               	xorwf	(___flneg@f1+3)^0,f,c
 12824  005C8E                     l6411:
 12825  005C8E  C00C  F00C         	movff	___flneg@f1,?___flneg
 12826  005C92  C00D  F00D         	movff	___flneg@f1+1,?___flneg+1
 12827  005C96  C00E  F00E         	movff	___flneg@f1+2,?___flneg+2
 12828  005C9A  C00F  F00F         	movff	___flneg@f1+3,?___flneg+3
 12829  005C9E  0012               	return		;funcret
 12830  005CA0                     __end_of___flneg:
 12831                           	opt callstack 0
 12832                           
 12833 ;; *************** function ___fldiv *****************
 12834 ;; Defined at:
 12835 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12836 ;; Parameters:    Size  Location     Type
 12837 ;;  b               4   60[COMRAM] unsigned char 
 12838 ;;  a               4   64[COMRAM] unsigned char 
 12839 ;; Auto vars:     Size  Location     Type
 12840 ;;  grs             4   79[COMRAM] unsigned long 
 12841 ;;  rem             4   72[COMRAM] unsigned long 
 12842 ;;  new_exp         2   77[COMRAM] short 
 12843 ;;  aexp            1   84[COMRAM] unsigned char 
 12844 ;;  bexp            1   83[COMRAM] unsigned char 
 12845 ;;  sign            1   76[COMRAM] unsigned char 
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  4   60[COMRAM] unsigned char 
 12848 ;; Registers used:
 12849 ;;		wreg, status,2, status,0
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12855 ;;      Params:         8       0       0       0       0       0       0
 12856 ;;      Locals:        13       0       0       0       0       0       0
 12857 ;;      Temps:          4       0       0       0       0       0       0
 12858 ;;      Totals:        25       0       0       0       0       0       0
 12859 ;;Total ram usage:       25 bytes
 12860 ;; Hardware stack levels used:    1
 12861 ;; Hardware stack levels required when called:    4
 12862 ;; This function calls:
 12863 ;;		Nothing
 12864 ;; This function is called by:
 12865 ;;		_mq135_getppm
 12866 ;;		_ADC_Read
 12867 ;;		_efgtoa
 12868 ;;		_powf
 12869 ;; This function uses a non-reentrant model
 12870 ;;
 12871                           
 12872                           	psect	text46
 12873  0044C8                     __ptext46:
 12874                           	opt callstack 0
 12875  0044C8                     ___fldiv:
 12876                           	opt callstack 22
 12877                           
 12878                           ;incstack = 0
 12879  0044C8  5040               	movf	(___fldiv@b+3)^0,w,c
 12880  0044CA  0B80               	andlw	128
 12881  0044CC  6E4D               	movwf	___fldiv@sign^0,c
 12882  0044CE  5040               	movf	(___fldiv@b+3)^0,w,c
 12883  0044D0  2440               	addwf	(___fldiv@b+3)^0,w,c
 12884  0044D2  6E54               	movwf	___fldiv@bexp^0,c
 12885  0044D4  BE3F               	btfsc	(___fldiv@b+2)^0,7,c
 12886  0044D6  8054               	bsf	___fldiv@bexp^0,0,c
 12887  0044D8  5054               	movf	___fldiv@bexp^0,w,c
 12888  0044DA  B4D8               	btfsc	status,2,c
 12889  0044DC  D00D               	goto	l6031
 12890  0044DE  2854               	incf	___fldiv@bexp^0,w,c
 12891  0044E0  A4D8               	btfss	status,2,c
 12892  0044E2  D008               	goto	l6027
 12893  0044E4  0E00               	movlw	0
 12894  0044E6  6E3D               	movwf	___fldiv@b^0,c
 12895  0044E8  0E00               	movlw	0
 12896  0044EA  6E3E               	movwf	(___fldiv@b+1)^0,c
 12897  0044EC  0E00               	movlw	0
 12898  0044EE  6E3F               	movwf	(___fldiv@b+2)^0,c
 12899  0044F0  0E00               	movlw	0
 12900  0044F2  6E40               	movwf	(___fldiv@b+3)^0,c
 12901  0044F4                     l6027:
 12902  0044F4  8E3F               	bsf	(___fldiv@b+2)^0,7,c
 12903  0044F6  D006               	goto	L16
 12904  0044F8                     l6031:
 12905  0044F8  0E00               	movlw	0
 12906  0044FA  6E3D               	movwf	___fldiv@b^0,c
 12907  0044FC  0E00               	movlw	0
 12908  0044FE  6E3E               	movwf	(___fldiv@b+1)^0,c
 12909  004500  0E00               	movlw	0
 12910  004502  6E3F               	movwf	(___fldiv@b+2)^0,c
 12911  004504                     L16:
 12912  004504  0E00               	movlw	0
 12913  004506  6E40               	movwf	(___fldiv@b+3)^0,c
 12914  004508  5044               	movf	(___fldiv@a+3)^0,w,c
 12915  00450A  0B80               	andlw	128
 12916  00450C  1A4D               	xorwf	___fldiv@sign^0,f,c
 12917  00450E  5044               	movf	(___fldiv@a+3)^0,w,c
 12918  004510  2444               	addwf	(___fldiv@a+3)^0,w,c
 12919  004512  6E55               	movwf	___fldiv@aexp^0,c
 12920  004514  BE43               	btfsc	(___fldiv@a+2)^0,7,c
 12921  004516  8055               	bsf	___fldiv@aexp^0,0,c
 12922  004518  5055               	movf	___fldiv@aexp^0,w,c
 12923  00451A  B4D8               	btfsc	status,2,c
 12924  00451C  D00D               	goto	l6051
 12925  00451E  2855               	incf	___fldiv@aexp^0,w,c
 12926  004520  A4D8               	btfss	status,2,c
 12927  004522  D008               	goto	l6047
 12928  004524  0E00               	movlw	0
 12929  004526  6E41               	movwf	___fldiv@a^0,c
 12930  004528  0E00               	movlw	0
 12931  00452A  6E42               	movwf	(___fldiv@a+1)^0,c
 12932  00452C  0E00               	movlw	0
 12933  00452E  6E43               	movwf	(___fldiv@a+2)^0,c
 12934  004530  0E00               	movlw	0
 12935  004532  6E44               	movwf	(___fldiv@a+3)^0,c
 12936  004534                     l6047:
 12937  004534  8E43               	bsf	(___fldiv@a+2)^0,7,c
 12938  004536  D006               	goto	L17
 12939  004538                     l6051:
 12940  004538  0E00               	movlw	0
 12941  00453A  6E41               	movwf	___fldiv@a^0,c
 12942  00453C  0E00               	movlw	0
 12943  00453E  6E42               	movwf	(___fldiv@a+1)^0,c
 12944  004540  0E00               	movlw	0
 12945  004542  6E43               	movwf	(___fldiv@a+2)^0,c
 12946  004544                     L17:
 12947  004544  0E00               	movlw	0
 12948  004546  6E44               	movwf	(___fldiv@a+3)^0,c
 12949  004548  5041               	movf	___fldiv@a^0,w,c
 12950  00454A  1042               	iorwf	(___fldiv@a+1)^0,w,c
 12951  00454C  1043               	iorwf	(___fldiv@a+2)^0,w,c
 12952  00454E  1044               	iorwf	(___fldiv@a+3)^0,w,c
 12953  004550  A4D8               	btfss	status,2,c
 12954  004552  D017               	goto	l6065
 12955  004554  0E00               	movlw	0
 12956  004556  6E3D               	movwf	___fldiv@b^0,c
 12957  004558  0E00               	movlw	0
 12958  00455A  6E3E               	movwf	(___fldiv@b+1)^0,c
 12959  00455C  0E00               	movlw	0
 12960  00455E  6E3F               	movwf	(___fldiv@b+2)^0,c
 12961  004560  0E00               	movlw	0
 12962  004562  6E40               	movwf	(___fldiv@b+3)^0,c
 12963  004564  0E80               	movlw	128
 12964  004566  123F               	iorwf	(___fldiv@b+2)^0,f,c
 12965  004568  0E7F               	movlw	127
 12966  00456A  1240               	iorwf	(___fldiv@b+3)^0,f,c
 12967  00456C                     l6059:
 12968  00456C  504D               	movf	___fldiv@sign^0,w,c
 12969  00456E  1240               	iorwf	(___fldiv@b+3)^0,f,c
 12970  004570  C03D  F03D         	movff	___fldiv@b,?___fldiv
 12971  004574  C03E  F03E         	movff	___fldiv@b+1,?___fldiv+1
 12972  004578  C03F  F03F         	movff	___fldiv@b+2,?___fldiv+2
 12973  00457C  C040  F040         	movff	___fldiv@b+3,?___fldiv+3
 12974  004580  0012               	return	
 12975  004582                     l6065:
 12976  004582  5054               	movf	___fldiv@bexp^0,w,c
 12977  004584  A4D8               	btfss	status,2,c
 12978  004586  D009               	goto	l6073
 12979  004588  0E00               	movlw	0
 12980  00458A  6E3D               	movwf	?___fldiv^0,c
 12981  00458C  0E00               	movlw	0
 12982  00458E  6E3E               	movwf	(?___fldiv+1)^0,c
 12983  004590  0E00               	movlw	0
 12984  004592  6E3F               	movwf	(?___fldiv+2)^0,c
 12985  004594  0E00               	movlw	0
 12986  004596  6E40               	movwf	(?___fldiv+3)^0,c
 12987  004598  0012               	return	
 12988  00459A                     l6073:
 12989  00459A  5055               	movf	___fldiv@aexp^0,w,c
 12990  00459C  C054  F045         	movff	___fldiv@bexp,??___fldiv
 12991  0045A0  6A46               	clrf	(??___fldiv+1)^0,c
 12992  0045A2  5E45               	subwf	??___fldiv^0,f,c
 12993  0045A4  0E00               	movlw	0
 12994  0045A6  5A46               	subwfb	(??___fldiv+1)^0,f,c
 12995  0045A8  0E7F               	movlw	127
 12996  0045AA  2445               	addwf	??___fldiv^0,w,c
 12997  0045AC  6E4E               	movwf	___fldiv@new_exp^0,c
 12998  0045AE  0E00               	movlw	0
 12999  0045B0  2046               	addwfc	(??___fldiv+1)^0,w,c
 13000  0045B2  6E4F               	movwf	(___fldiv@new_exp+1)^0,c
 13001  0045B4  C03D  F049         	movff	___fldiv@b,___fldiv@rem
 13002  0045B8  C03E  F04A         	movff	___fldiv@b+1,___fldiv@rem+1
 13003  0045BC  C03F  F04B         	movff	___fldiv@b+2,___fldiv@rem+2
 13004  0045C0  C040  F04C         	movff	___fldiv@b+3,___fldiv@rem+3
 13005  0045C4  0E00               	movlw	0
 13006  0045C6  6E3D               	movwf	___fldiv@b^0,c
 13007  0045C8  0E00               	movlw	0
 13008  0045CA  6E3E               	movwf	(___fldiv@b+1)^0,c
 13009  0045CC  0E00               	movlw	0
 13010  0045CE  6E3F               	movwf	(___fldiv@b+2)^0,c
 13011  0045D0  0E00               	movlw	0
 13012  0045D2  6E40               	movwf	(___fldiv@b+3)^0,c
 13013  0045D4  0E00               	movlw	0
 13014  0045D6  6E50               	movwf	___fldiv@grs^0,c
 13015  0045D8  0E00               	movlw	0
 13016  0045DA  6E51               	movwf	(___fldiv@grs+1)^0,c
 13017  0045DC  0E00               	movlw	0
 13018  0045DE  6E52               	movwf	(___fldiv@grs+2)^0,c
 13019  0045E0  0E00               	movlw	0
 13020  0045E2  6E53               	movwf	(___fldiv@grs+3)^0,c
 13021  0045E4  0E00               	movlw	0
 13022  0045E6  6E55               	movwf	___fldiv@aexp^0,c
 13023  0045E8  D028               	goto	l948
 13024  0045EA                     l6083:
 13025  0045EA  5055               	movf	___fldiv@aexp^0,w,c
 13026  0045EC  B4D8               	btfsc	status,2,c
 13027  0045EE  D011               	goto	l6091
 13028  0045F0  90D8               	bcf	status,0,c
 13029  0045F2  3649               	rlcf	___fldiv@rem^0,f,c
 13030  0045F4  364A               	rlcf	(___fldiv@rem+1)^0,f,c
 13031  0045F6  364B               	rlcf	(___fldiv@rem+2)^0,f,c
 13032  0045F8  364C               	rlcf	(___fldiv@rem+3)^0,f,c
 13033  0045FA  90D8               	bcf	status,0,c
 13034  0045FC  363D               	rlcf	___fldiv@b^0,f,c
 13035  0045FE  363E               	rlcf	(___fldiv@b+1)^0,f,c
 13036  004600  363F               	rlcf	(___fldiv@b+2)^0,f,c
 13037  004602  3640               	rlcf	(___fldiv@b+3)^0,f,c
 13038  004604  BE53               	btfsc	(___fldiv@grs+3)^0,7,c
 13039  004606  803D               	bsf	___fldiv@b^0,0,c
 13040  004608  90D8               	bcf	status,0,c
 13041  00460A  3650               	rlcf	___fldiv@grs^0,f,c
 13042  00460C  3651               	rlcf	(___fldiv@grs+1)^0,f,c
 13043  00460E  3652               	rlcf	(___fldiv@grs+2)^0,f,c
 13044  004610  3653               	rlcf	(___fldiv@grs+3)^0,f,c
 13045  004612                     l6091:
 13046  004612  5041               	movf	___fldiv@a^0,w,c
 13047  004614  5C49               	subwf	___fldiv@rem^0,w,c
 13048  004616  5042               	movf	(___fldiv@a+1)^0,w,c
 13049  004618  584A               	subwfb	(___fldiv@rem+1)^0,w,c
 13050  00461A  5043               	movf	(___fldiv@a+2)^0,w,c
 13051  00461C  584B               	subwfb	(___fldiv@rem+2)^0,w,c
 13052  00461E  5044               	movf	(___fldiv@a+3)^0,w,c
 13053  004620  584C               	subwfb	(___fldiv@rem+3)^0,w,c
 13054  004622  A0D8               	btfss	status,0,c
 13055  004624  D009               	goto	l6097
 13056  004626  8C53               	bsf	(___fldiv@grs+3)^0,6,c
 13057  004628  5041               	movf	___fldiv@a^0,w,c
 13058  00462A  5E49               	subwf	___fldiv@rem^0,f,c
 13059  00462C  5042               	movf	(___fldiv@a+1)^0,w,c
 13060  00462E  5A4A               	subwfb	(___fldiv@rem+1)^0,f,c
 13061  004630  5043               	movf	(___fldiv@a+2)^0,w,c
 13062  004632  5A4B               	subwfb	(___fldiv@rem+2)^0,f,c
 13063  004634  5044               	movf	(___fldiv@a+3)^0,w,c
 13064  004636  5A4C               	subwfb	(___fldiv@rem+3)^0,f,c
 13065  004638                     l6097:
 13066  004638  2A55               	incf	___fldiv@aexp^0,f,c
 13067  00463A                     l948:
 13068  00463A  0E19               	movlw	25
 13069  00463C  6455               	cpfsgt	___fldiv@aexp^0,c
 13070  00463E  D7D5               	goto	l6083
 13071  004640  5049               	movf	___fldiv@rem^0,w,c
 13072  004642  104A               	iorwf	(___fldiv@rem+1)^0,w,c
 13073  004644  104B               	iorwf	(___fldiv@rem+2)^0,w,c
 13074  004646  104C               	iorwf	(___fldiv@rem+3)^0,w,c
 13075  004648  B4D8               	btfsc	status,2,c
 13076  00464A  D011               	goto	l6109
 13077  00464C  8050               	bsf	___fldiv@grs^0,0,c
 13078  00464E  D00F               	goto	l6109
 13079  004650                     l6103:
 13080  004650  90D8               	bcf	status,0,c
 13081  004652  363D               	rlcf	___fldiv@b^0,f,c
 13082  004654  363E               	rlcf	(___fldiv@b+1)^0,f,c
 13083  004656  363F               	rlcf	(___fldiv@b+2)^0,f,c
 13084  004658  3640               	rlcf	(___fldiv@b+3)^0,f,c
 13085  00465A  BE53               	btfsc	(___fldiv@grs+3)^0,7,c
 13086  00465C  803D               	bsf	___fldiv@b^0,0,c
 13087  00465E  90D8               	bcf	status,0,c
 13088  004660  3650               	rlcf	___fldiv@grs^0,f,c
 13089  004662  3651               	rlcf	(___fldiv@grs+1)^0,f,c
 13090  004664  3652               	rlcf	(___fldiv@grs+2)^0,f,c
 13091  004666  3653               	rlcf	(___fldiv@grs+3)^0,f,c
 13092  004668  064E               	decf	___fldiv@new_exp^0,f,c
 13093  00466A  A0D8               	btfss	status,0,c
 13094  00466C  064F               	decf	(___fldiv@new_exp+1)^0,f,c
 13095  00466E                     l6109:
 13096  00466E  AE3F               	btfss	(___fldiv@b+2)^0,7,c
 13097  004670  D7EF               	goto	l6103
 13098  004672  0E00               	movlw	0
 13099  004674  6E55               	movwf	___fldiv@aexp^0,c
 13100  004676  AE53               	btfss	(___fldiv@grs+3)^0,7,c
 13101  004678  D017               	goto	l959
 13102  00467A  0EFF               	movlw	255
 13103  00467C  1450               	andwf	___fldiv@grs^0,w,c
 13104  00467E  6E45               	movwf	??___fldiv^0,c
 13105  004680  0EFF               	movlw	255
 13106  004682  1451               	andwf	(___fldiv@grs+1)^0,w,c
 13107  004684  6E46               	movwf	(??___fldiv+1)^0,c
 13108  004686  0EFF               	movlw	255
 13109  004688  1452               	andwf	(___fldiv@grs+2)^0,w,c
 13110  00468A  6E47               	movwf	(??___fldiv+2)^0,c
 13111  00468C  0E7F               	movlw	127
 13112  00468E  1453               	andwf	(___fldiv@grs+3)^0,w,c
 13113  004690  6E48               	movwf	(??___fldiv+3)^0,c
 13114  004692  5045               	movf	??___fldiv^0,w,c
 13115  004694  1046               	iorwf	(??___fldiv+1)^0,w,c
 13116  004696  1047               	iorwf	(??___fldiv+2)^0,w,c
 13117  004698  1048               	iorwf	(??___fldiv+3)^0,w,c
 13118  00469A  B4D8               	btfsc	status,2,c
 13119  00469C  D003               	goto	l960
 13120  00469E                     u7650:
 13121  00469E  0E01               	movlw	1
 13122  0046A0  6E55               	movwf	___fldiv@aexp^0,c
 13123  0046A2  D002               	goto	l959
 13124  0046A4                     l960:
 13125  0046A4  B03D               	btfsc	___fldiv@b^0,0,c
 13126  0046A6  D7FB               	goto	u7650
 13127  0046A8                     l959:
 13128  0046A8  5055               	movf	___fldiv@aexp^0,w,c
 13129  0046AA  B4D8               	btfsc	status,2,c
 13130  0046AC  D01F               	goto	l6129
 13131  0046AE  0E01               	movlw	1
 13132  0046B0  263D               	addwf	___fldiv@b^0,f,c
 13133  0046B2  0E00               	movlw	0
 13134  0046B4  223E               	addwfc	(___fldiv@b+1)^0,f,c
 13135  0046B6  223F               	addwfc	(___fldiv@b+2)^0,f,c
 13136  0046B8  2240               	addwfc	(___fldiv@b+3)^0,f,c
 13137  0046BA  A040               	btfss	(___fldiv@b+3)^0,0,c
 13138  0046BC  D017               	goto	l6129
 13139  0046BE  C03D  F045         	movff	___fldiv@b,??___fldiv
 13140  0046C2  C03E  F046         	movff	___fldiv@b+1,??___fldiv+1
 13141  0046C6  C03F  F047         	movff	___fldiv@b+2,??___fldiv+2
 13142  0046CA  C040  F048         	movff	___fldiv@b+3,??___fldiv+3
 13143  0046CE  3448               	rlcf	(??___fldiv+3)^0,w,c
 13144  0046D0  3248               	rrcf	(??___fldiv+3)^0,f,c
 13145  0046D2  3247               	rrcf	(??___fldiv+2)^0,f,c
 13146  0046D4  3246               	rrcf	(??___fldiv+1)^0,f,c
 13147  0046D6  3245               	rrcf	??___fldiv^0,f,c
 13148  0046D8  C045  F03D         	movff	??___fldiv,___fldiv@b
 13149  0046DC  C046  F03E         	movff	??___fldiv+1,___fldiv@b+1
 13150  0046E0  C047  F03F         	movff	??___fldiv+2,___fldiv@b+2
 13151  0046E4  C048  F040         	movff	??___fldiv+3,___fldiv@b+3
 13152  0046E8  4A4E               	infsnz	___fldiv@new_exp^0,f,c
 13153  0046EA  2A4F               	incf	(___fldiv@new_exp+1)^0,f,c
 13154  0046EC                     l6129:
 13155  0046EC  BE4F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13156  0046EE  D010               	goto	l6133
 13157  0046F0  504F               	movf	(___fldiv@new_exp+1)^0,w,c
 13158  0046F2  E103               	bnz	u7690
 13159  0046F4  284E               	incf	___fldiv@new_exp^0,w,c
 13160  0046F6  A0D8               	btfss	status,0,c
 13161  0046F8  D00B               	goto	l6133
 13162  0046FA                     u7690:
 13163  0046FA  0E00               	movlw	0
 13164  0046FC  6E4F               	movwf	(___fldiv@new_exp+1)^0,c
 13165  0046FE  684E               	setf	___fldiv@new_exp^0,c
 13166  004700  0E00               	movlw	0
 13167  004702  6E3D               	movwf	___fldiv@b^0,c
 13168  004704  0E00               	movlw	0
 13169  004706  6E3E               	movwf	(___fldiv@b+1)^0,c
 13170  004708  0E00               	movlw	0
 13171  00470A  6E3F               	movwf	(___fldiv@b+2)^0,c
 13172  00470C  0E00               	movlw	0
 13173  00470E  6E40               	movwf	(___fldiv@b+3)^0,c
 13174  004710                     l6133:
 13175  004710  BE4F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13176  004712  D005               	goto	u7700
 13177  004714  504F               	movf	(___fldiv@new_exp+1)^0,w,c
 13178  004716  E111               	bnz	l6137
 13179  004718  044E               	decf	___fldiv@new_exp^0,w,c
 13180  00471A  B0D8               	btfsc	status,0,c
 13181  00471C  D00E               	goto	l6137
 13182  00471E                     u7700:
 13183  00471E  0E00               	movlw	0
 13184  004720  6E4F               	movwf	(___fldiv@new_exp+1)^0,c
 13185  004722  0E00               	movlw	0
 13186  004724  6E4E               	movwf	___fldiv@new_exp^0,c
 13187  004726  0E00               	movlw	0
 13188  004728  6E3D               	movwf	___fldiv@b^0,c
 13189  00472A  0E00               	movlw	0
 13190  00472C  6E3E               	movwf	(___fldiv@b+1)^0,c
 13191  00472E  0E00               	movlw	0
 13192  004730  6E3F               	movwf	(___fldiv@b+2)^0,c
 13193  004732  0E00               	movlw	0
 13194  004734  6E40               	movwf	(___fldiv@b+3)^0,c
 13195  004736  0E00               	movlw	0
 13196  004738  6E4D               	movwf	___fldiv@sign^0,c
 13197  00473A                     l6137:
 13198  00473A  C04E  F054         	movff	___fldiv@new_exp,___fldiv@bexp
 13199  00473E  A054               	btfss	___fldiv@bexp^0,0,c
 13200  004740  D002               	goto	l6143
 13201  004742  8E3F               	bsf	(___fldiv@b+2)^0,7,c
 13202  004744  D001               	goto	l6145
 13203  004746                     l6143:
 13204  004746  9E3F               	bcf	(___fldiv@b+2)^0,7,c
 13205  004748                     l6145:
 13206  004748  90D8               	bcf	status,0,c
 13207  00474A  3054               	rrcf	___fldiv@bexp^0,w,c
 13208  00474C  6E40               	movwf	(___fldiv@b+3)^0,c
 13209  00474E  D70E               	goto	l6059
 13210  004750                     __end_of___fldiv:
 13211                           	opt callstack 0
 13212                           
 13213 ;; *************** function ___fltol *****************
 13214 ;; Defined at:
 13215 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 13216 ;; Parameters:    Size  Location     Type
 13217 ;;  f1              4   85[COMRAM] unsigned char 
 13218 ;; Auto vars:     Size  Location     Type
 13219 ;;  exp1            1   94[COMRAM] unsigned char 
 13220 ;;  sign1           1   93[COMRAM] unsigned char 
 13221 ;; Return value:  Size  Location     Type
 13222 ;;                  4   85[COMRAM] long 
 13223 ;; Registers used:
 13224 ;;		wreg, status,2, status,0
 13225 ;; Tracked objects:
 13226 ;;		On entry : 0/0
 13227 ;;		On exit  : 0/0
 13228 ;;		Unchanged: 0/0
 13229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13230 ;;      Params:         4       0       0       0       0       0       0
 13231 ;;      Locals:         2       0       0       0       0       0       0
 13232 ;;      Temps:          4       0       0       0       0       0       0
 13233 ;;      Totals:        10       0       0       0       0       0       0
 13234 ;;Total ram usage:       10 bytes
 13235 ;; Hardware stack levels used:    1
 13236 ;; Hardware stack levels required when called:    4
 13237 ;; This function calls:
 13238 ;;		Nothing
 13239 ;; This function is called by:
 13240 ;;		_ADC_Read
 13241 ;;		_efgtoa
 13242 ;; This function uses a non-reentrant model
 13243 ;;
 13244                           
 13245                           	psect	text47
 13246  00536C                     __ptext47:
 13247                           	opt callstack 0
 13248  00536C                     ___fltol:
 13249                           	opt callstack 22
 13250                           
 13251                           ;incstack = 0
 13252  00536C  3458               	rlcf	(___fltol@f1+2)^0,w,c
 13253  00536E  3459               	rlcf	(___fltol@f1+3)^0,w,c
 13254  005370  6E5F               	movwf	___fltol@exp1^0,c
 13255  005372  505F               	movf	___fltol@exp1^0,w,c
 13256  005374  A4D8               	btfss	status,2,c
 13257  005376  D009               	goto	l6421
 13258  005378                     u8120:
 13259  005378  0E00               	movlw	0
 13260  00537A  6E56               	movwf	?___fltol^0,c
 13261  00537C  0E00               	movlw	0
 13262  00537E  6E57               	movwf	(?___fltol+1)^0,c
 13263  005380  0E00               	movlw	0
 13264  005382  6E58               	movwf	(?___fltol+2)^0,c
 13265  005384  0E00               	movlw	0
 13266  005386  6E59               	movwf	(?___fltol+3)^0,c
 13267  005388  0012               	return	
 13268  00538A                     l6421:
 13269  00538A  C056  F05A         	movff	___fltol@f1,??___fltol
 13270  00538E  C057  F05B         	movff	___fltol@f1+1,??___fltol+1
 13271  005392  C058  F05C         	movff	___fltol@f1+2,??___fltol+2
 13272  005396  C059  F05D         	movff	___fltol@f1+3,??___fltol+3
 13273  00539A  0E20               	movlw	32
 13274  00539C  D005               	goto	u8130
 13275  00539E                     u8135:
 13276  00539E  90D8               	bcf	status,0,c
 13277  0053A0  325D               	rrcf	(??___fltol+3)^0,f,c
 13278  0053A2  325C               	rrcf	(??___fltol+2)^0,f,c
 13279  0053A4  325B               	rrcf	(??___fltol+1)^0,f,c
 13280  0053A6  325A               	rrcf	??___fltol^0,f,c
 13281  0053A8                     u8130:
 13282  0053A8  2EE8               	decfsz	wreg,f,c
 13283  0053AA  D7F9               	goto	u8135
 13284  0053AC  505A               	movf	??___fltol^0,w,c
 13285  0053AE  6E5E               	movwf	___fltol@sign1^0,c
 13286  0053B0  8E58               	bsf	(___fltol@f1+2)^0,7,c
 13287  0053B2  0EFF               	movlw	255
 13288  0053B4  1656               	andwf	___fltol@f1^0,f,c
 13289  0053B6  0EFF               	movlw	255
 13290  0053B8  1657               	andwf	(___fltol@f1+1)^0,f,c
 13291  0053BA  0EFF               	movlw	255
 13292  0053BC  1658               	andwf	(___fltol@f1+2)^0,f,c
 13293  0053BE  0E00               	movlw	0
 13294  0053C0  1659               	andwf	(___fltol@f1+3)^0,f,c
 13295  0053C2  0E96               	movlw	150
 13296  0053C4  5E5F               	subwf	___fltol@exp1^0,f,c
 13297  0053C6  AE5F               	btfss	___fltol@exp1^0,7,c
 13298  0053C8  D00D               	goto	l6441
 13299  0053CA  505F               	movf	___fltol@exp1^0,w,c
 13300  0053CC  0A80               	xorlw	128
 13301  0053CE  0F97               	addlw	151
 13302  0053D0  A0D8               	btfss	status,0,c
 13303  0053D2  D7D2               	goto	u8120
 13304  0053D4                     l6437:
 13305  0053D4  90D8               	bcf	status,0,c
 13306  0053D6  3259               	rrcf	(___fltol@f1+3)^0,f,c
 13307  0053D8  3258               	rrcf	(___fltol@f1+2)^0,f,c
 13308  0053DA  3257               	rrcf	(___fltol@f1+1)^0,f,c
 13309  0053DC  3256               	rrcf	___fltol@f1^0,f,c
 13310  0053DE  3E5F               	incfsz	___fltol@exp1^0,f,c
 13311  0053E0  D7F9               	goto	l6437
 13312  0053E2  D00D               	goto	u8170
 13313  0053E4                     l6441:
 13314  0053E4  0E1F               	movlw	31
 13315  0053E6  645F               	cpfsgt	___fltol@exp1^0,c
 13316  0053E8  D007               	goto	l6449
 13317  0053EA  D7C6               	goto	u8120
 13318  0053EC                     l6447:
 13319  0053EC  90D8               	bcf	status,0,c
 13320  0053EE  3656               	rlcf	___fltol@f1^0,f,c
 13321  0053F0  3657               	rlcf	(___fltol@f1+1)^0,f,c
 13322  0053F2  3658               	rlcf	(___fltol@f1+2)^0,f,c
 13323  0053F4  3659               	rlcf	(___fltol@f1+3)^0,f,c
 13324  0053F6  065F               	decf	___fltol@exp1^0,f,c
 13325  0053F8                     l6449:
 13326  0053F8  505F               	movf	___fltol@exp1^0,w,c
 13327  0053FA  A4D8               	btfss	status,2,c
 13328  0053FC  D7F7               	goto	l6447
 13329  0053FE                     u8170:
 13330  0053FE  505E               	movf	___fltol@sign1^0,w,c
 13331  005400  B4D8               	btfsc	status,2,c
 13332  005402  D008               	goto	l6455
 13333  005404  1E59               	comf	(___fltol@f1+3)^0,f,c
 13334  005406  1E58               	comf	(___fltol@f1+2)^0,f,c
 13335  005408  1E57               	comf	(___fltol@f1+1)^0,f,c
 13336  00540A  6C56               	negf	___fltol@f1^0,c
 13337  00540C  0E00               	movlw	0
 13338  00540E  2257               	addwfc	(___fltol@f1+1)^0,f,c
 13339  005410  2258               	addwfc	(___fltol@f1+2)^0,f,c
 13340  005412  2259               	addwfc	(___fltol@f1+3)^0,f,c
 13341  005414                     l6455:
 13342  005414  C056  F056         	movff	___fltol@f1,?___fltol
 13343  005418  C057  F057         	movff	___fltol@f1+1,?___fltol+1
 13344  00541C  C058  F058         	movff	___fltol@f1+2,?___fltol+2
 13345  005420  C059  F059         	movff	___fltol@f1+3,?___fltol+3
 13346  005424  0012               	return		;funcret
 13347  005426                     __end_of___fltol:
 13348                           	opt callstack 0
 13349                           
 13350 ;; *************** function _Lo_ISR *****************
 13351 ;; Defined at:
 13352 ;;		line 53 in file "setting_hardaware/uart.c"
 13353 ;; Parameters:    Size  Location     Type
 13354 ;;		None
 13355 ;; Auto vars:     Size  Location     Type
 13356 ;;		None
 13357 ;; Return value:  Size  Location     Type
 13358 ;;                  1    wreg      void 
 13359 ;; Registers used:
 13360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13361 ;; Tracked objects:
 13362 ;;		On entry : 0/0
 13363 ;;		On exit  : 0/0
 13364 ;;		Unchanged: 0/0
 13365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13366 ;;      Params:         0       0       0       0       0       0       0
 13367 ;;      Locals:         0       0       0       0       0       0       0
 13368 ;;      Temps:          5       0       0       0       0       0       0
 13369 ;;      Totals:         5       0       0       0       0       0       0
 13370 ;;Total ram usage:        5 bytes
 13371 ;; Hardware stack levels used:    1
 13372 ;; Hardware stack levels required when called:    3
 13373 ;; This function calls:
 13374 ;;		_MyusartRead
 13375 ;; This function is called by:
 13376 ;;		Interrupt level 1
 13377 ;; This function uses a non-reentrant model
 13378 ;;
 13379                           
 13380                           	psect	intcodelo
 13381  000018                     __pintcodelo:
 13382                           	opt callstack 0
 13383  000018                     _Lo_ISR:
 13384                           	opt callstack 19
 13385                           
 13386                           ;incstack = 0
 13387  000018  8073               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13388  00001A  CFD8 F007          	movff	status,??_Lo_ISR
 13389  00001E  CFE8 F008          	movff	wreg,??_Lo_ISR+1
 13390  000022  CFE0 F009          	movff	bsr,??_Lo_ISR+2
 13391  000026  CFD9 F00A          	movff	fsr2l,??_Lo_ISR+3
 13392  00002A  CFDA F00B          	movff	fsr2h,??_Lo_ISR+4
 13393                           
 13394                           ;setting_hardaware/uart.c: 55:     if(RCIF)
 13395  00002E  AA9E               	btfss	3998,5,c	;volatile
 13396  000030  D007               	goto	i1l5637
 13397                           
 13398                           ;setting_hardaware/uart.c: 56:     {;setting_hardaware/uart.c: 57:         if(RCSTAbits.
      +                          OERR)
 13399  000032  A2AB               	btfss	171,1,c	;volatile
 13400  000034  D003               	goto	i1l5635
 13401                           
 13402                           ;setting_hardaware/uart.c: 58:         {;setting_hardaware/uart.c: 59:             CREN 
      +                          = 0;
 13403  000036  98AB               	bcf	4011,4,c	;volatile
 13404                           
 13405                           ;setting_hardaware/uart.c: 60:             __nop();
 13406  000038  F000               	nop	
 13407                           
 13408                           ;setting_hardaware/uart.c: 61:             CREN = 1;
 13409  00003A  88AB               	bsf	4011,4,c	;volatile
 13410  00003C                     i1l5635:
 13411                           
 13412                           ;setting_hardaware/uart.c: 64:         MyusartRead();
 13413  00003C  EC75  F02D         	call	_MyusartRead	;wreg free
 13414  000040                     i1l5637:
 13415                           
 13416                           ;setting_hardaware/uart.c: 66:     if(PIR1bits.TMR1IF){
 13417  000040  A09E               	btfss	158,0,c	;volatile
 13418  000042  D007               	goto	i1l92
 13419                           
 13420                           ;setting_hardaware/uart.c: 67:         count++;
 13421  000044  4A6F               	infsnz	_count^0,f,c
 13422  000046  2A70               	incf	(_count+1)^0,f,c
 13423                           
 13424                           ;setting_hardaware/uart.c: 68:         TMR1 = 62410;
 13425  000048  0EF3               	movlw	243
 13426  00004A  6ECF               	movwf	207,c	;volatile
 13427  00004C  0ECA               	movlw	202
 13428  00004E  6ECE               	movwf	206,c	;volatile
 13429                           
 13430                           ;setting_hardaware/uart.c: 69:         PIR1bits.TMR1IF=0;
 13431  000050  909E               	bcf	158,0,c	;volatile
 13432  000052                     i1l92:
 13433  000052  C00B  FFDA         	movff	??_Lo_ISR+4,fsr2h
 13434  000056  C00A  FFD9         	movff	??_Lo_ISR+3,fsr2l
 13435  00005A  C009  FFE0         	movff	??_Lo_ISR+2,bsr
 13436  00005E  C008  FFE8         	movff	??_Lo_ISR+1,wreg
 13437  000062  C007  FFD8         	movff	??_Lo_ISR,status
 13438  000066  9073               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13439  000068  0010               	retfie	
 13440  00006A                     __end_of_Lo_ISR:
 13441                           	opt callstack 0
 13442                           
 13443 ;; *************** function _MyusartRead *****************
 13444 ;; Defined at:
 13445 ;;		line 32 in file "setting_hardaware/uart.c"
 13446 ;; Parameters:    Size  Location     Type
 13447 ;;		None
 13448 ;; Auto vars:     Size  Location     Type
 13449 ;;		None
 13450 ;; Return value:  Size  Location     Type
 13451 ;;                  1    wreg      void 
 13452 ;; Registers used:
 13453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13454 ;; Tracked objects:
 13455 ;;		On entry : 0/0
 13456 ;;		On exit  : 0/0
 13457 ;;		Unchanged: 0/0
 13458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13459 ;;      Params:         0       0       0       0       0       0       0
 13460 ;;      Locals:         0       0       0       0       0       0       0
 13461 ;;      Temps:          0       0       0       0       0       0       0
 13462 ;;      Totals:         0       0       0       0       0       0       0
 13463 ;;Total ram usage:        0 bytes
 13464 ;; Hardware stack levels used:    1
 13465 ;; Hardware stack levels required when called:    2
 13466 ;; This function calls:
 13467 ;;		_UART_Write
 13468 ;;		i1___awmod
 13469 ;; This function is called by:
 13470 ;;		_Lo_ISR
 13471 ;; This function uses a non-reentrant model
 13472 ;;
 13473                           
 13474                           	psect	text49
 13475  005AEA                     __ptext49:
 13476                           	opt callstack 0
 13477  005AEA                     _MyusartRead:
 13478                           	opt callstack 19
 13479                           
 13480                           ;setting_hardaware/uart.c: 34:     mystring[lenStr] = RCREG;
 13481                           
 13482                           ;incstack = 0
 13483  005AEA  0ED5               	movlw	low _mystring
 13484  005AEC  2471               	addwf	_lenStr^0,w,c
 13485  005AEE  6ED9               	movwf	fsr2l,c
 13486  005AF0  0E01               	movlw	high _mystring
 13487  005AF2  2072               	addwfc	(_lenStr+1)^0,w,c
 13488  005AF4  6EDA               	movwf	fsr2h,c
 13489  005AF6  CFAE FFDF          	movff	4014,indf2	;volatile
 13490                           
 13491                           ;setting_hardaware/uart.c: 35:     UART_Write(mystring[lenStr]);
 13492  005AFA  0ED5               	movlw	low _mystring
 13493  005AFC  2471               	addwf	_lenStr^0,w,c
 13494  005AFE  6ED9               	movwf	fsr2l,c
 13495  005B00  0E01               	movlw	high _mystring
 13496  005B02  2072               	addwfc	(_lenStr+1)^0,w,c
 13497  005B04  6EDA               	movwf	fsr2h,c
 13498  005B06  50DF               	movf	indf2,w,c
 13499  005B08  ECBE  F02E         	call	_UART_Write
 13500                           
 13501                           ;setting_hardaware/uart.c: 36:     lenStr++;
 13502  005B0C  4A71               	infsnz	_lenStr^0,f,c
 13503  005B0E  2A72               	incf	(_lenStr+1)^0,f,c
 13504                           
 13505                           ;setting_hardaware/uart.c: 37:     lenStr %= 10;
 13506  005B10  C071  F001         	movff	_lenStr,i1___awmod@dividend
 13507  005B14  C072  F002         	movff	_lenStr+1,i1___awmod@dividend+1
 13508  005B18  0E00               	movlw	0
 13509  005B1A  6E04               	movwf	(i1___awmod@divisor+1)^0,c
 13510  005B1C  0E0A               	movlw	10
 13511  005B1E  6E03               	movwf	i1___awmod@divisor^0,c
 13512  005B20  EC17  F02C         	call	i1___awmod	;wreg free
 13513  005B24  C001  F071         	movff	?i1___awmod,_lenStr
 13514  005B28  C002  F072         	movff	?i1___awmod+1,_lenStr+1
 13515  005B2C  0012               	return		;funcret
 13516  005B2E                     __end_of_MyusartRead:
 13517                           	opt callstack 0
 13518                           
 13519 ;; *************** function i1___awmod *****************
 13520 ;; Defined at:
 13521 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13522 ;; Parameters:    Size  Location     Type
 13523 ;;  dividend        2    0[COMRAM] int 
 13524 ;;  divisor         2    2[COMRAM] int 
 13525 ;; Auto vars:     Size  Location     Type
 13526 ;;  __awmod         1    5[COMRAM] unsigned char 
 13527 ;;  __awmod         1    4[COMRAM] unsigned char 
 13528 ;; Return value:  Size  Location     Type
 13529 ;;                  2    0[COMRAM] int 
 13530 ;; Registers used:
 13531 ;;		wreg, status,2, status,0
 13532 ;; Tracked objects:
 13533 ;;		On entry : 0/0
 13534 ;;		On exit  : 0/0
 13535 ;;		Unchanged: 0/0
 13536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13537 ;;      Params:         4       0       0       0       0       0       0
 13538 ;;      Locals:         2       0       0       0       0       0       0
 13539 ;;      Temps:          0       0       0       0       0       0       0
 13540 ;;      Totals:         6       0       0       0       0       0       0
 13541 ;;Total ram usage:        6 bytes
 13542 ;; Hardware stack levels used:    1
 13543 ;; Hardware stack levels required when called:    1
 13544 ;; This function calls:
 13545 ;;		Nothing
 13546 ;; This function is called by:
 13547 ;;		_MyusartRead
 13548 ;; This function uses a non-reentrant model
 13549 ;;
 13550                           
 13551                           	psect	text50
 13552  00582E                     __ptext50:
 13553                           	opt callstack 0
 13554  00582E                     i1___awmod:
 13555                           	opt callstack 19
 13556                           
 13557                           ;incstack = 0
 13558  00582E  0E00               	movlw	0
 13559  005830  6E06               	movwf	i1___awmod@sign^0,c
 13560  005832  AE02               	btfss	(i1___awmod@dividend+1)^0,7,c
 13561  005834  D006               	goto	i1l5493
 13562  005836  6C01               	negf	i1___awmod@dividend^0,c
 13563  005838  1E02               	comf	(i1___awmod@dividend+1)^0,f,c
 13564  00583A  B0D8               	btfsc	status,0,c
 13565  00583C  2A02               	incf	(i1___awmod@dividend+1)^0,f,c
 13566  00583E  0E01               	movlw	1
 13567  005840  6E06               	movwf	i1___awmod@sign^0,c
 13568  005842                     i1l5493:
 13569  005842  AE04               	btfss	(i1___awmod@divisor+1)^0,7,c
 13570  005844  D004               	goto	i1l5497
 13571  005846  6C03               	negf	i1___awmod@divisor^0,c
 13572  005848  1E04               	comf	(i1___awmod@divisor+1)^0,f,c
 13573  00584A  B0D8               	btfsc	status,0,c
 13574  00584C  2A04               	incf	(i1___awmod@divisor+1)^0,f,c
 13575  00584E                     i1l5497:
 13576  00584E  5003               	movf	i1___awmod@divisor^0,w,c
 13577  005850  1004               	iorwf	(i1___awmod@divisor+1)^0,w,c
 13578  005852  B4D8               	btfsc	status,2,c
 13579  005854  D018               	goto	i1l5513
 13580  005856  0E01               	movlw	1
 13581  005858  6E05               	movwf	i1___awmod@counter^0,c
 13582  00585A  D004               	goto	i1l5503
 13583  00585C                     i1l5501:
 13584  00585C  90D8               	bcf	status,0,c
 13585  00585E  3603               	rlcf	i1___awmod@divisor^0,f,c
 13586  005860  3604               	rlcf	(i1___awmod@divisor+1)^0,f,c
 13587  005862  2A05               	incf	i1___awmod@counter^0,f,c
 13588  005864                     i1l5503:
 13589  005864  AE04               	btfss	(i1___awmod@divisor+1)^0,7,c
 13590  005866  D7FA               	goto	i1l5501
 13591  005868                     i1u659_20:
 13592  005868  5003               	movf	i1___awmod@divisor^0,w,c
 13593  00586A  5C01               	subwf	i1___awmod@dividend^0,w,c
 13594  00586C  5004               	movf	(i1___awmod@divisor+1)^0,w,c
 13595  00586E  5802               	subwfb	(i1___awmod@dividend+1)^0,w,c
 13596  005870  A0D8               	btfss	status,0,c
 13597  005872  D004               	goto	i1l5509
 13598  005874  5003               	movf	i1___awmod@divisor^0,w,c
 13599  005876  5E01               	subwf	i1___awmod@dividend^0,f,c
 13600  005878  5004               	movf	(i1___awmod@divisor+1)^0,w,c
 13601  00587A  5A02               	subwfb	(i1___awmod@dividend+1)^0,f,c
 13602  00587C                     i1l5509:
 13603  00587C  90D8               	bcf	status,0,c
 13604  00587E  3204               	rrcf	(i1___awmod@divisor+1)^0,f,c
 13605  005880  3203               	rrcf	i1___awmod@divisor^0,f,c
 13606  005882  2E05               	decfsz	i1___awmod@counter^0,f,c
 13607  005884  D7F1               	goto	i1u659_20
 13608  005886                     i1l5513:
 13609  005886  5006               	movf	i1___awmod@sign^0,w,c
 13610  005888  B4D8               	btfsc	status,2,c
 13611  00588A  D004               	goto	i1l5517
 13612  00588C  6C01               	negf	i1___awmod@dividend^0,c
 13613  00588E  1E02               	comf	(i1___awmod@dividend+1)^0,f,c
 13614  005890  B0D8               	btfsc	status,0,c
 13615  005892  2A02               	incf	(i1___awmod@dividend+1)^0,f,c
 13616  005894                     i1l5517:
 13617  005894  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
 13618  005898  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
 13619  00589C  0012               	return		;funcret
 13620  00589E                     __end_ofi1___awmod:
 13621                           	opt callstack 0
 13622                           
 13623 ;; *************** function _UART_Write *****************
 13624 ;; Defined at:
 13625 ;;		line 11 in file "setting_hardaware/uart.c"
 13626 ;; Parameters:    Size  Location     Type
 13627 ;;  data            1    wreg     unsigned char 
 13628 ;; Auto vars:     Size  Location     Type
 13629 ;;  data            1    0[COMRAM] unsigned char 
 13630 ;; Return value:  Size  Location     Type
 13631 ;;                  1    wreg      void 
 13632 ;; Registers used:
 13633 ;;		wreg
 13634 ;; Tracked objects:
 13635 ;;		On entry : 0/0
 13636 ;;		On exit  : 0/0
 13637 ;;		Unchanged: 0/0
 13638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13639 ;;      Params:         0       0       0       0       0       0       0
 13640 ;;      Locals:         1       0       0       0       0       0       0
 13641 ;;      Temps:          0       0       0       0       0       0       0
 13642 ;;      Totals:         1       0       0       0       0       0       0
 13643 ;;Total ram usage:        1 bytes
 13644 ;; Hardware stack levels used:    1
 13645 ;; Hardware stack levels required when called:    1
 13646 ;; This function calls:
 13647 ;;		Nothing
 13648 ;; This function is called by:
 13649 ;;		_MyusartRead
 13650 ;;		_UART_Write_Text
 13651 ;; This function uses a non-reentrant model
 13652 ;;
 13653                           
 13654                           	psect	text51
 13655  005D7C                     __ptext51:
 13656                           	opt callstack 0
 13657  005D7C                     _UART_Write:
 13658                           	opt callstack 19
 13659                           
 13660                           ;incstack = 0
 13661                           ;UART_Write@data stored from wreg
 13662  005D7C  6E01               	movwf	UART_Write@data^0,c
 13663  005D7E                     
 13664                           ;setting_hardaware/uart.c: 11: void UART_Write(unsigned char data);setting_hardaware/uar
      +                          t.c: 12: {;setting_hardaware/uart.c: 13:     while(!TXSTAbits.TRMT);
 13665  005D7E  A2AC               	btfss	172,1,c	;volatile
 13666  005D80  D7FE               	goto	i1l5455
 13667                           
 13668                           ;setting_hardaware/uart.c: 14:     TXREG = data;
 13669  005D82  C001  FFAD         	movff	UART_Write@data,4013	;volatile
 13670  005D86  0012               	return		;funcret
 13671  005D88                     __end_of_UART_Write:
 13672                           	opt callstack 0
 13673                           
 13674 ;; *************** function _Hi_ISR *****************
 13675 ;; Defined at:
 13676 ;;		line 26 in file "main.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;		None
 13679 ;; Auto vars:     Size  Location     Type
 13680 ;;		None
 13681 ;; Return value:  Size  Location     Type
 13682 ;;                  1    wreg      void 
 13683 ;; Registers used:
 13684 ;;		wreg, status,2
 13685 ;; Tracked objects:
 13686 ;;		On entry : 0/0
 13687 ;;		On exit  : 0/0
 13688 ;;		Unchanged: 0/0
 13689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13690 ;;      Params:         0       0       0       0       0       0       0
 13691 ;;      Locals:         0       0       0       0       0       0       0
 13692 ;;      Temps:          0       0       0       0       0       0       0
 13693 ;;      Totals:         0       0       0       0       0       0       0
 13694 ;;Total ram usage:        0 bytes
 13695 ;; Hardware stack levels used:    1
 13696 ;; This function calls:
 13697 ;;		Nothing
 13698 ;; This function is called by:
 13699 ;;		Interrupt level 2
 13700 ;; This function uses a non-reentrant model
 13701 ;;
 13702                           
 13703                           	psect	intcode
 13704  000008                     __pintcode:
 13705                           	opt callstack 0
 13706  000008                     _Hi_ISR:
 13707                           	opt callstack 19
 13708                           
 13709                           ;incstack = 0
 13710  000008  8273               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13711  00000A  ED9F  F02E         	call	int_func,f	;refresh shadow registers
 13712                           
 13713                           	psect	intcode_body
 13714  005D3E                     __pintcode_body:
 13715                           	opt callstack 19
 13716  005D3E                     int_func:
 13717                           	opt callstack 19
 13718  005D3E  0006               	pop		; remove dummy address from shadow register refresh
 13719                           
 13720                           ;main.c: 28:     if(PIR1bits.CCP1IF == 1) {
 13721  005D40  A49E               	btfss	158,2,c	;volatile
 13722  005D42  D006               	goto	i2l163
 13723                           
 13724                           ;main.c: 29:         RC2 ^= 1;
 13725  005D44  7482               	btg	3970,2,c	;volatile
 13726                           
 13727                           ;main.c: 30:         PIR1bits.CCP1IF = 0;
 13728  005D46  949E               	bcf	158,2,c	;volatile
 13729                           
 13730                           ;main.c: 31:         TMR3 = 0;
 13731  005D48  0E00               	movlw	0
 13732  005D4A  6EB3               	movwf	179,c	;volatile
 13733  005D4C  0E00               	movlw	0
 13734  005D4E  6EB2               	movwf	178,c	;volatile
 13735  005D50                     i2l163:
 13736  005D50  9273               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13737  005D52  0011               	retfie		f
 13738  005D54                     __end_of_Hi_ISR:
 13739                           	opt callstack 0
 13740                           
 13741                           	psect	rparam
 13742  0000                     
 13743                           	psect	temp
 13744  000073                     btemp:
 13745                           	opt callstack 0
 13746  000073                     	ds	1
 13747  0000                     int$flags	set	btemp
 13748  0000                     wtemp8	set	btemp+1
 13749  0000                     ttemp5	set	btemp+1
 13750  0000                     ttemp6	set	btemp+4
 13751  0000                     ttemp7	set	btemp+8
 13752                           tosu	equ	0xFFF
 13753                           tosh	equ	0xFFE
 13754                           tosl	equ	0xFFD
 13755                           stkptr	equ	0xFFC
 13756                           pclatu	equ	0xFFB
 13757                           pclath	equ	0xFFA
 13758                           pcl	equ	0xFF9
 13759                           tblptru	equ	0xFF8
 13760                           tblptrh	equ	0xFF7
 13761                           tblptrl	equ	0xFF6
 13762                           tablat	equ	0xFF5
 13763                           prodh	equ	0xFF4
 13764                           prodl	equ	0xFF3
 13765                           indf0	equ	0xFEF
 13766                           postinc0	equ	0xFEE
 13767                           postdec0	equ	0xFED
 13768                           preinc0	equ	0xFEC
 13769                           plusw0	equ	0xFEB
 13770                           fsr0h	equ	0xFEA
 13771                           fsr0l	equ	0xFE9
 13772                           wreg	equ	0xFE8
 13773                           indf1	equ	0xFE7
 13774                           postinc1	equ	0xFE6
 13775                           postdec1	equ	0xFE5
 13776                           preinc1	equ	0xFE4
 13777                           plusw1	equ	0xFE3
 13778                           fsr1h	equ	0xFE2
 13779                           fsr1l	equ	0xFE1
 13780                           bsr	equ	0xFE0
 13781                           indf2	equ	0xFDF
 13782                           postinc2	equ	0xFDE
 13783                           postdec2	equ	0xFDD
 13784                           preinc2	equ	0xFDC
 13785                           plusw2	equ	0xFDB
 13786                           fsr2h	equ	0xFDA
 13787                           fsr2l	equ	0xFD9
 13788                           status	equ	0xFD8


Data Sizes:
    Strings     43
    Constant    124
    Data        4
    BSS         131
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    102     114
    BANK0           128    109     127
    BANK1           256    198     223
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_18(CODE[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 15
		 -> r(BANK1[15]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> r(BANK1[15]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S1202_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 15
		 -> r(BANK1[15]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> r(BANK1[15]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    memset@dest	PTR void  size(2) Largest target is 15
		 -> r(BANK1[15]), 

    memset@s	PTR unsigned char  size(2) Largest target is 15
		 -> r(BANK1[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    Send2Lcd@Lcd	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_4(CODE[6]), STR_3(CODE[8]), 

    sp__memset	PTR void  size(2) Largest target is 15
		 -> r(BANK1[15]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK1[10]), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    _atoi->_isspace
    _LCD_init->_Send2Lcd
    _Send2Lcd->_Cmd
    _Send2Lcd->_Data
    _mq135_getppm->_powf
    _powf->___fldiv
    _sqrtf->___flge
    ___flge->___flsub
    _scalbnf->___flmul
    ___flmul->___fladd
    ___flsub->___flmul
    ___fldiv->___flsub
    ___fltol->___fldiv

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->i1___awmod

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _ADC_Read->_mq135_getppm
    _powf->_sqrtf

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _mq135_getppm->_powf

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  223402
                           _ADC_Read
                  _SYSTEM_Initialize
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   70927
                                            101 BANK0      8     0      8
                                            188 BANK1     10    10      0
                           _ADC_Read (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   70243
                                             93 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   69716
                                             71 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             11 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   62907
                                             95 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             17 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             11 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             27 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             20 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             85 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             11 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     723
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1515
                                             18 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             11 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    1175
                                             11 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1273
                     _ADC_Initialize
                           _LCD_init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             0     0      0    1273
                                _Cmd
                           _Send2Lcd
 ---------------------------------------------------------------------------------
 (3) _Send2Lcd                                             3     1      2     795
                                             13 COMRAM     3     1      2
                                _Cmd
                               _Data
 ---------------------------------------------------------------------------------
 (4) _Data                                                 2     0      2      98
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Cmd                                                  2     0      2     478
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                            14    10      4  150027
                                             64 BANK0     14    10      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _mq135_getppm
 ---------------------------------------------------------------------------------
 (2) _mq135_getppm                                        24    16      8  127902
                                             40 BANK0     24    16      8
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (3) _powf                                               205   197      8  104436
                                             85 COMRAM    17     9      8
                                              0 BANK1    188   188      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                              _fabsf
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (4) _sqrtf                                               49    45      4   28558
                                             72 COMRAM     9     5      4
                                              0 BANK0     40    40      0
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (5) _nanf                                                 8     4      4      99
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1886
                                             60 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (4) _scalbnf                                             18    12      6   16337
                                             52 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   15653
                                             27 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     123
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     930
                                             11 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8   16247
                                             52 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    9562
                                             11 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     335
                                             11 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4523
                                             60 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                             85 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Lo_ISR                                               5     5      0     370
                                              6 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (10) _MyusartRead                                         0     0      0     370
                         _UART_Write
                          i1___awmod
 ---------------------------------------------------------------------------------
 (11) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) _UART_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Hi_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _mq135_getppm
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _powf
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl
         _fabsf
         _scalbnf
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
         _sqrtf
           ___fladd
           ___flge
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           _nanf
   _SYSTEM_Initialize
     _ADC_Initialize
     _LCD_init
       _Cmd
       _Send2Lcd
         _Cmd
         _Data
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _UART_Initialize
   _memset
   _sprintf
     _ADC_Read (ARG)
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _mq135_getppm
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _powf
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _fabsf
           _scalbnf
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
           _sqrtf
             ___fladd
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             _nanf
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     i1___awmod

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      50       9       31.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C6      DF       7       87.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6D      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     66      72       1       90.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     220      15        0.0%
DATA                 0      0     220       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 15 15:30:19 2019

                   ___fldiv@aexp 0055                     ___fldiv@bexp 0054  
                              _r 01C6                     ___fldiv@sign 004D  
                             _L1 0659                               _L2 0655  
                             _L3 0651                               _L4 064D  
                             _L5 0649                               _L6 0645  
                             _P1 0641                               _P2 063D  
                             _P3 0639                               _P4 0635  
                             _P5 0631                     ___awdiv@sign 0011  
                             _bp 0669                               _cp 061D  
                             bsr 000FE0              ___wmul@multiplicand 000E  
                    __CFG_BORV$3 000000                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l301 332A  
                            l126 4CA4                              l234 5648  
                            l275 3048                              l629 5264  
                            l909 43D0                              l918 4436  
                            l919 4432                              l960 46A4  
                            l948 463A                              l893 42FE  
                            l894 42DC                              l959 46A8  
                            l978 3EEA                              l995 4188  
                            l987 4102                              l988 40FE  
                   __CFG_CPB$OFF 000000                              _RC0 007C10  
                            _RC1 007C11                              _RC2 007C12  
                   __CFG_CPD$OFF 000000                              _Cmd 5D68  
                            _lg2 062D                              _pad 561A  
                            _ovt 0621                     ___awmod@sign 0011  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ___flmul@aexp 0029                     ___flmul@bexp 002E  
                   ___flmul@sign 0028                     ___flmul@temp 0033  
                   ___flmul@prod 002F                     __CFG_LVP$OFF 000000  
                           ?_Cmd 000C                     ___fltol@exp1 005F  
                   __CFG_WDT$OFF 000000                             l1026 501A  
                           l1019 4F9C                             l1220 08F4  
                           l1230 0956                             l1240 09F0  
                           l1074 4F54                             l1086 4A50  
                           l1327 2CB6                             l1361 3890  
                           l1364 3948                             l1357 383C  
                           l1366 3A24                             l1397 5A9A  
                           l6001 4ADE                             l6103 4650  
                           l6031 44F8                             l6051 4538  
                           l6027 44F4                             l7003 0992  
                           l6133 4710                             l6109 466E  
                           l7013 0A02                             ?_pad 001C  
                           l6143 4746                             l6047 4534  
                           l7007 09A4                             l5351 5B92  
                           l6311 577C                             l6303 575E  
                           l6145 4748                             l6137 473A  
                           l6129 46EC                             l6073 459A  
                           l6065 4582                             l6241 40C8  
                           l6321 579C                             l6091 4612  
                           l6083 45EA                             l6059 456C  
                           l6411 5C8E                             l4731 4FAC  
                           l6235 40AA                             l6403 529C  
                           l7115 11B0                             l7027 0A7C  
                           l7019 0A46                             l5347 5B7A  
                           l6421 538A                             l4741 4FDC  
                           l6261 4146                             l6165 3E96  
                           l7141 12FE                             l7045 0BDA  
                           l7053 0C1C                             l6309 5774  
                           l6325 57A6                             l6341 57D2  
                           l5701 5BC6                             l6501 2D9A  
                           l4751 504C                             l4743 5002  
                           l6183 3ED6                             l6167 3E9A  
                           l7127 1236                             l7063 0CBA  
                           l7039 0B1A                             l6351 57F4  
                           l6511 2E06                             l6441 53E4  
                           l6097 4638                             l4737 4FCA  
                           l6265 4164                             l6193 3F08  
                           l6185 3EDA                             l6169 3EAA  
                           l7137 12D4                             l7049 0C0A  
                           l6329 57B4                             l6361 5816  
                           l6345 57DE                             l5705 5CAA  
                           l6601 30E6                             l6513 2E1E  
                           l4739 4FD0                             l7315 2386  
                           l7323 244E                             l7307 22EE  
                           l7147 132A                             l7075 0D72  
                           l7067 0CD6                             l5707 5CAE  
                           l6611 3120                             l6515 2E28  
                           l6437 53D4                             l5733 41EC  
                           l4749 5040                             l6277 41A6  
                           l7085 0E70                             l7501 4C7A  
                           l5573 50E2                             l6365 5824  
                           l6357 580C                             l6349 57EC  
                           l6381 5736                             l6373 56E4  
                           l6605 30F6                             l6455 5414  
                           l6447 53EC                             l5903 44A2  
                           l5831 4344                             l5823 4322  
                           l5807 42EA                             l4767 508C  
                           l7335 263A                             l7079 0DDC  
                           l6703 3514                             l6543 2F18  
                           l6519 2E4E                             l7415 3B78  
                           l7511 59EA                             l6449 53F8  
                           l5833 4348                             l5841 435A  
                           l5809 42EE                             l5753 4230  
                           l5729 41E8                             l6393 5238  
                           l7337 266E                             l7089 0EDA  
                           l5593 51C6                             l5585 517E  
                           l6297 574E                             l6377 5718  
                           l6721 356A                             l6641 3322  
                           l6633 32CA                             l6553 2FDC  
                           l6529 2EBA                             l6537 2ED4  
                           l6481 2D56                             l7417 3B96  
                           l5907 44AA                             l5851 43C0  
                           l5587 51B0                             l5579 5146  
                           l6467 5B64                             l5923 5632  
                           l6731 35C0                             l6643 3344  
                           l6627 328C                             l6619 3216  
                           l6547 2F52                             l7443 3CDA  
                           l7435 3C7E                             l7419 3BA4  
                           l5909 44AC                             l5765 4254  
                           l5757 4234                             l6397 524E  
                           l6389 5204                             l5933 566A  
                           l6741 35EC                             l6565 3030  
                           l6549 2FA0                             l6493 2D84  
                           l7509 59C4                             l7527 4D9A  
                           l5687 5592                             l5927 5640  
                           l6719 3560                             l6655 33C6  
                           l6583 30A0                             l6575 3058  
                           l7463 3DD4                             l7447 3D04  
                           l7393 2CD6                             l7529 4E0A  
                           l5953 5322                             l5697 5BB0  
                           l5937 5696                             l5929 5652  
                           l6585 30A4                             l6569 3052  
                           l6817 5502                             l7473 3E1C  
                           l5859 43F4                             l5875 4414  
                           l5795 4290                             l6843 3730  
                           l7299 2206                             l6771 4E30  
                           l6667 33F6                             l6675 3416  
                           l6683 343A                             l6691 34D2  
                           l6595 30C2                             l6819 5510  
                           l5869 440A                             l6941 48C0  
                           l6925 4810                             l6861 37FA  
                           l6781 4E7A                             l6773 4E34  
                           l5949 5318                             l5965 5A16  
                           l6757 364C                             l7469 3E10  
                           l7549 542A                             l5895 447C  
                           l6791 4E98                             l5959 5362  
                           l5983 49B0                             l7479 3E36  
                           l6865 3810                             l6849 3778  
                           l6857 37A2                             l6961 075E  
                           l6793 4EC0                             l5993 4A72  
                           l6883 3962                             l6955 073A  
                           l6787 4E8A                             l6877 38DC  
                           l6797 4EF4                             l6789 4E92  
                           l5997 4AB0                             l6991 092A  
                           l6897 39FA                             l6977 07F4  
                           l6969 07C0                             l6999 0968  
                           STR_1 0690                             STR_2 068B  
                           STR_3 067D                             STR_4 0685  
                           STR_5 0695                             STR_6 069D  
                           STR_9 0699                             _CREN 007D5C  
                           u7110 442C                             u8000 57F8  
                           u7300 535A                             _RCIF 007CF5  
                           u5550 5056                             u7310 535C  
                           u8120 5378                             u9000 47BC  
                           u8200 5B60                             u7320 5A4E  
                           u8130 53A8                             u7170 4488  
                           u7090 4418                             u9010 4808  
                           u8050 5732                             u7250 52DE  
                           i1l92 0052                             u7420 4A30  
                           u7340 5A80                             u8300 2E92  
                           u7405 49C8                             u7406 49CE  
                           u7350 5A82                             u8310 2E94  
                           u8230 2D74                             u8135 539E  
                           u7255 52D4                             u7407 49DC  
                           u7327 5A44                             u7440 4A90  
                           u6800 5C3A                             u7425 4A26  
                           u8170 53FE                             u7370 497C  
                           u6810 5C3C                             u8410 3070  
                           u7700 471E                             u7380 499E  
                           u8260 2DDE                             u7445 4A86  
                           u6910 42B2                             u9150 08A6  
                           u7470 5C6A                             u6750 558A  
                           u8350 3004                             u8270 2DE0  
                           u9055 48D2                             u9135 0818  
                           u7295 533C                             u7375 4972  
                           u6920 42C2                             u7800 406C  
                           u9136 081E                             u9080 0774  
                           u7480 5C6C                             u9145 085C  
                           u9137 082C                             u7650 469E  
                           u6930 42C4                             u9410 0E06  
                           u9146 0862                             u9090 078A  
                           u6770 55D2                             u8450 30BE  
                           u9155 089C                             u9147 0870  
                           u9420 11D0                             u8700 3636  
                           u8620 34F6                             u8380 303E  
                           u7805 4062                             u9270 0AB4  
                           u8710 3638                             u6960 4306  
                           u7840 40F8                             u9440 12D0  
                           u7690 46FA                             u9450 12EC  
                           u9290 0AD2                             u9435 124A  
                           u9291 0AD0                             u9620 2C88  
                           u9436 1250                             u9380 0D04  
                           u8740 4E76                             u7940 5780  
                           u9605 2C2E                             u9437 125E  
                           u7790 3EF6                             u9615 2C62  
                           u9535 247C                             u7880 4154  
                           u9616 2C68                             u9536 2482  
                           u8760 4F24                             u8680 35D6  
                           u8840 5556                             u9617 2C76  
                           u9537 2490                             u9465 1510  
                           u7890 4172                             u8770 4F26  
                           u9730 3D88                             u9555 24E8  
                           u8860 3742                             u9556 24EE  
                           u9740 3D8A                             u9660 3BDE  
                           u9565 253A                             u9557 24FC  
                           u9566 2540                             u9670 3BE0  
                           u9575 257C                             u9567 254E  
                           u9576 2582                             u9680 3BEC  
                           u9585 2600                             u9577 2590  
                           u9586 2606                             u9587 2614  
                           u9827 547A                             u9837 54D0  
                           u8990 4770                             u8895 37B6  
                           u9847 5D5E                             u8896 37BC  
                           u8985 3A6A                             u8897 37CA  
                           u9857 5D72                             _TMR1 000FCE  
                           _TMR3 000FB2                     __CFG_WDTPS$1 000000  
                           _Data 5D54                             _dbuf 0200  
                           _cp_h 0679                             _cp_l 0675  
                           _dp_h 0609                             _dp_l 0601  
                           _atoi 4E1E                             _main 5426  
                           _nanf 5CF0                             _huge 0661  
                           _prec 006B                             _nout 00F9  
                           _powf 06AA                             pad@i 0023  
                           pad@p 0020                             _tiny 065D  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 0025  
                           fsr2l 000FD9                             btemp 0073  
               __end_of_ADC_Read 4E1E                    ___fpclassifyf 52A0  
                           prodh 000FF4                             prodl 000FF3  
                           start 006A                  ___fldiv@new_exp 004E  
                   _tolower$1393 0018                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                            ??_Cmd 000E  
                          ??_pad 0022                 ?_UART_Initialize 0001  
                          ?_Data 000C   __size_of_OSCILLATOR_Initialize 0008  
               __end_of_LCD_init 59B0    __end_of_OSCILLATOR_Initialize 5D9A  
                  ___fltol@sign1 005E                            ?_atoi 0013  
                __end_of___fladd 44C8                            ?_main 0001  
                          ?_nanf 000C                  __end_of___fldiv 4750  
                __end_of___awdiv 57BE                  __end_of___flneg 5CA0  
                          _ADRES 000FC3                            STR_10 06A1  
                          STR_13 06A5                            STR_15 06A5  
                          STR_18 0698                  __end_of___awmod 582E  
                __end_of___flmul 41BC                            ?_powf 0056  
                __end_of___flsub 5AEA                  __end_of___fltol 5426  
                ___awdiv@divisor 000E                            _IRCF0 007E9C  
                          _IRCF1 007E9D                            _IRCF2 007E9E  
                          i2l163 5D50                  ___awdiv@counter 0010  
                          _RCREG 000FAE                     vfpfcnvrt@fmt 00C9  
                          _PORTD 000F83                            _TRISA 000F92  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TXREG 000FAD                    __CFG_PWRT$OFF 000000  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                      ?_UART_Write 0001  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                            _lg2_h 0629  
                 i1___awmod@sign 0006                            _lg2_l 0625  
                          _fabsf 5BDE                   __CFG_EBTRB$OFF 000000  
                          _flags 006D                            _count 006F  
                          _errno 0067                            _ivln2 0619  
                          _fputc 557A                            _fputs 5BA6  
                __end_of_isdigit 5C72                  __end_of_ivln2_h 0675  
                __end_of_ivln2_l 0619                            _two24 0665  
                __end_of_scalbnf 4936                            atoi@n 0020  
                          pad@fp 001C                            atoi@s 0013  
                          _width 0069                            _putch 5D9E  
                          _sqrtf 368A                            nanf@s 000C  
                          nanf@u 0010                  __end_of_isspace 5B6C  
                __end_of_isupper 5C42                            tablat 000FF5  
                          powf@i 012C                            powf@j 01AC  
                          powf@k 01A0                            powf@n 0180  
                          powf@r 014C                            powf@s 015C  
                          powf@t 01B0                            powf@u 0174  
                          powf@v 0178                            powf@w 0144  
                          powf@x 0056                            powf@y 005A  
                          powf@z 01B4                            ttemp5 0074  
                          ttemp6 0077                            ttemp7 007B  
                          status 000FD8                            wtemp8 0074  
                __end_of_sprintf 5956                   ?___fpclassifyf 000C  
                __end_of_tolower 5AA4               __size_ofi1___awmod 0070  
                __end_of_strncmp 557A                   __CFG_PBADEN$ON 000000  
                   __end_of_Data 5D68                  __initialization 589E  
                   __end_of_cp_h 067D                     __end_of_cp_l 0679  
                   __end_of_dp_h 0611                     __end_of_dp_l 0609  
                   __end_of_atoi 4F5E                     __end_of_main 54D8  
                   __end_of_nanf 5D12                     __end_of_huge 0665  
                   __end_of_powf 2D0C                     __end_of_tiny 0661  
                         ??_Data 000E                 __end_of_Send2Lcd 5BA6  
                         ??_atoi 0015                           ??_main 0067  
                         ??_nanf 0010                           ??_powf 005E  
                  __activetblptr 000002                      Send2Lcd@Adr 0010  
                    Send2Lcd@Lcd 000E                           ?_fabsf 000C  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_fputc 000C                           ?_fputs 0015  
               ___awdiv@dividend 000C                           ?_putch 0001  
                         ?_sqrtf 0049                           i1l5501 585C  
                         i1l5503 5864                           i1l5513 5886  
                         i1l5517 5894                           i1l5509 587C  
                         i1l5455 5D7E                           i1l5635 003C  
                         i1l5493 5842                           i1l5637 0040  
                         i1l5497 584E                 __end_of___xxtofl 509E  
                         _Hi_ISR 0008                           _Lo_ISR 0018  
                 __CFG_XINST$OFF 000000                     vfprintf@cfmt 00E3  
                         ___flge 51D0                           ___fleq 56B0  
            __size_of_UART_Write 000C                        ??___fladd 0014  
                         ___wmul 5CCA                        ??___fldiv 0045  
                      ??___awdiv 0010                        ??___flneg 0010  
                 __CFG_STVREN$ON 000000                        ??___awmod 0010  
                      ??___flmul 0024                        ??___flsub 003D  
                      ??___fltol 005A                           _efgtoa 2D0C  
                ADC_Read@channel 00C0                           _lenStr 0071  
                         _floorf 4936                           fabsf@u 0010  
                         fabsf@x 000C                           _memset 509E  
                ADC_Read@digital 00CC                           clear_0 58C4  
                         clear_1 58D0                           clear_2 58DC  
                         clear_3 58E8                 ___awdiv@quotient 0012  
                ___awmod@divisor 000E                  ___awmod@counter 0010  
                         pad@buf 001E                           _strcpy 5A06  
                         _strlen 5CA0                __end_ofi1___awmod 589E  
                         fputc@c 000C                           fputs@c 0019  
                         fputs@i 001A                           fputs@s 0015  
                      ??_isdigit 000E                        ??_scalbnf 003B  
                ___fpclassifyf@e 0014                  ___fpclassifyf@u 0016  
                      ?_ADC_Read 00C0                  ___fpclassifyf@x 000C  
                   __mediumconst 0000                        ??_isspace 000E  
                         powf@s2 018C                           powf@t1 0184  
                         powf@t2 011C                           tblptrh 000FF7  
                      ??_isupper 000E                           tblptrl 000FF6  
                         powf@y1 0128                           tblptru 000FF8  
                         powf@ax 0170                           powf@is 0194  
                         powf@hx 0160                           powf@hy 017C  
                         powf@ix 01A8                           powf@iy 0190  
                         powf@sn 0188                           putch@c 0001  
               __end_of_vfprintf 5A06                           sqrtf@i 0088  
                         sqrtf@m 009C                           sqrtf@q 0090  
                         sqrtf@r 00A0                           sqrtf@s 0084  
                         sqrtf@t 0094                           sqrtf@x 0049  
                         sqrtf@z 0098                        ??_sprintf 0067  
                      ??_tolower 0014                        ??_strncmp 0012  
                     ___flge@ff1 003D                       ___flge@ff2 0041  
                ??___fpclassifyf 0010                     ___xxtofl@arg 0016  
                   ___xxtofl@exp 0015             mq135_getppm@resvalue 00A8  
              _SYSTEM_Initialize 5D12                     ___xxtofl@val 000C  
                     ___fleq@ff1 000C                       ___fleq@ff2 0010  
                     __accesstop 0080          __end_of__initialization 58EE  
                     ___flneg@f1 000C                        ?_LCD_init 0001  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
                     ___fltol@f1 0056                   __pcstackCOMRAM 0001  
                   __pidataBANK0 5D9A                    __end_of_lg2_h 062D  
                  __end_of_lg2_l 0629              ??_SYSTEM_Initialize 0011  
                  __end_of_fabsf 5C12                    __end_of_ivln2 061D  
                  __end_of_fputc 561A                    __end_of_fputs 5BDE  
                  __end_of_two24 0669                    __end_of_putch 5DA0  
                  __end_of_sqrtf 3ABA                       __end_of_L1 065D  
                     __end_of_L2 0659                       __end_of_L3 0655  
                     __end_of_L4 0651                       __end_of_L5 064D  
                     __end_of_L6 0649                       __end_of_P1 0645  
                     __end_of_P2 0641                       __end_of_P3 063D  
                     __end_of_P4 0639                       __end_of_P5 0635  
                     __end_of_bp 0671                       __end_of_cp 0621  
                     ??_ADC_Read 00C4                    ??_MyusartRead 0007  
                        ??_fabsf 0010                          ??_fputc 0010  
      __end_of_SYSTEM_Initialize 5D28                          ??_fputs 0019  
                        ??_putch 000C                          ??_sqrtf 004D  
                     __pbssBANK0 00ED                       __pbssBANK1 01C6  
                     __pbssBANK2 0200                        ?_Send2Lcd 000E  
                     ??_LCD_init 0011                          ?_Hi_ISR 0001  
                        ?_Lo_ISR 0001                       _efgtoa$650 0093  
                     _efgtoa$651 0095                       _efgtoa$660 0099  
                     _efgtoa$661 009B                       _efgtoa$662 009D  
                     _efgtoa$656 0097                          ?___flge 003D  
                        ?___fleq 000C                          ?___wmul 000C  
                        ?_efgtoa 0060                          ?_floorf 0056  
                        ?_memset 000C          __size_of_ADC_Initialize 0016  
                        ?_strcpy 000C                          ?_strlen 000C  
                      ?___xxtofl 000C                     ??_UART_Write 0001  
             __size_of_vfpfcnvrt 03B0              __end_of_MyusartRead 5B2E  
                     ??_Send2Lcd 0010                  __size_of_Hi_ISR 5D4C  
                __size_of_Lo_ISR 0052                          __Hparam 0000  
                        __Lparam 0000                  __size_of___flge 00D0  
                __size_of___fleq 008A                          ___fladd 41BC  
                        ___fldiv 44C8                          ___awdiv 573A  
                        ___flneg 5C72                          ___awmod 57BE  
                        ___flmul 3E6A                          ___flsub 5AA4  
                        ___fltol 536C                  __size_of___wmul 0026  
             __end_of_UART_Write 5D88                        ?_vfprintf 00DD  
                   __psmallconst 0600                  __size_of_efgtoa 097E  
                __size_of_floorf 01BA                          __pcinit 589E  
                __size_of_memset 0132                          __ramtop 0600  
                      Data@Value 000C                          __ptext0 5426  
                        __ptext1 58FC                          __ptext2 59B0  
                        __ptext3 3ABA                          __ptext4 54D8  
                        __ptext5 2D0C                          __ptext6 5A58  
                        __ptext7 5C12                          __ptext8 5A06  
                        __ptext9 561A                  __size_of_strcpy 0052  
                __size_of_strlen 002A                     __size_of_Cmd 0014  
          _OSCILLATOR_Initialize 5D92                     __size_of_pad 0096  
                        _isdigit 5C42                          _ivln2_h 0671  
                        _ivln2_l 0615                       ??___xxtofl 0010  
                        _scalbnf 4750                 ___awmod@dividend 000C  
       ??_PIN_MANAGER_Initialize 000C         __size_of_UART_Initialize 0002  
                        _isspace 5B2E                          _isupper 5C12  
                        efgtoa@c 0066                          efgtoa@d 00A7  
                        efgtoa@e 00BF                          efgtoa@f 0062  
                        efgtoa@g 00BB                          efgtoa@h 00B1  
                        efgtoa@i 00B9                          efgtoa@l 00B5  
                        efgtoa@m 00A3                          efgtoa@n 00C1  
                        efgtoa@p 00AB                          efgtoa@t 009F  
                        efgtoa@u 00C3                          efgtoa@w 00AE  
                        atoi@neg 0019       __size_of_SYSTEM_Initialize 0016  
                        _sprintf 58FC                          _tolower 5A58  
                        _strncmp 54D8                   __pintcode_body 5D3E  
           end_of_initialization 58EE                          floorf@e 0084  
                        floorf@m 0080                          floorf@u 0086  
                        floorf@x 0056                          fputc@fp 000E  
                        memset@c 000E                          memset@k 0014  
                        memset@n 0010                          memset@s 0016  
                  __Lmediumconst 0000                          int_func 5D3E  
                        fputs@fp 0017        mq135_getppm@validinterval 00BC  
                 mq135_getppm@ro 00AC                          powf@p_h 019C  
                        powf@p_l 0164                          powf@s_h 016C  
                        powf@t_h 0168                          powf@s_l 0130  
                        powf@t_l 0134                          powf@z_h 0120  
                        powf@z_l 0124                __end_of_vfpfcnvrt 3E6A  
                     efgtoa@mode 00B0                       efgtoa@sign 00A9  
                      _RCSTAbits 000FAB                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                     ??_vfprintf 0067                          sqrtf@ix 00A4  
                        strcpy@d 0014                          strlen@a 000E  
                        strcpy@s 0012                          strlen@s 000C  
                 UART_Write@data 0001                      ___fladd@grs 001B  
                  ___xxtofl@sign 0014                      _MyusartRead 5AEA  
                      i1___awmod 582E                      ___fldiv@grs 0050  
                    ___fldiv@rem 0049                __size_of_ADC_Read 0192  
                    ___flmul@grs 002A                    ?_mq135_getppm 00A8  
                      _TXSTAbits 000FAC                   __end_of_Hi_ISR 5D54  
              __size_of_LCD_init 005A                   __end_of_Lo_ISR 006A  
                 __end_of___flge 52A0                   __end_of___fleq 573A  
                    vfpfcnvrt@ap 00CB                      vfpfcnvrt@ct 00D9  
                    vfpfcnvrt@fp 00C7                   __end_of___wmul 5CF0  
                 __end_of_efgtoa 368A                   _ADC_Initialize 5D28  
                 __end_of_floorf 4AF0           ?_OSCILLATOR_Initialize 0001  
                     floorf@F524 00F1                   __end_of_memset 51D0  
                 __end_of_strcpy 5A58                   __end_of_strlen 5CCA  
            start_initialization 589E                      __end_of_Cmd 5D7C  
__size_of_PIN_MANAGER_Initialize 000A                      __end_of_lg2 0631  
                    __end_of_pad 56B0                       ?i1___awmod 0001  
                    __end_of_ovt 0625                ??_UART_Initialize 000C  
                 ??_mq135_getppm 0067            __end_of___fpclassifyf 536C  
               __CFG_OSC$INTIO67 000000                         ??_Hi_ISR 0001  
                       ??_Lo_ISR 0007                __size_of_Send2Lcd 003A  
                    vfprintf@fmt 00DF                         ??___flge 0045  
                       ??___fleq 0014                         ??___wmul 0010  
                       ??_efgtoa 008A           __end_of_ADC_Initialize 5D3E  
                    __pdataBANK0 00FB               i1___awmod@dividend 0001  
                       ??_floorf 005A                 __CFG_LPT1OSC$OFF 000000  
                       ??_memset 0012                   ADC_Read@result 00C8  
                     memset@dest 000C                         ??_strcpy 0010  
                       ??_strlen 000E                        ___fladd@a 0010  
                      ___fladd@b 000C                        ___fldiv@a 0041  
                      ___fldiv@b 003D                        ___flmul@a 0020  
                      ___flmul@b 001C                      __pbssCOMRAM 0067  
                      ___flsub@a 0039                        ___flsub@b 0035  
                  __pcstackBANK0 0080                    __pcstackBANK1 0100  
              __end_ofsqrtf@tiny 0615                __size_of___xxtofl 0140  
              _mq135_getppm$1652 00B0                _mq135_getppm$1653 00B4  
                      _atoi$1151 001B                        _atoi$1152 001F  
                      _atoi$1153 001D           _PIN_MANAGER_Initialize 5D88  
              __CFG_CCP2MX$PORTC 000000                        __pintcode 0008  
                       ?___fladd 000C                         ?___fldiv 003D  
                       ?___awdiv 000C                         ?___flneg 000C  
                       ?___awmod 000C                         ?___flmul 001C  
                       ?___flsub 0035                         ?___fltol 0056  
                ?_ADC_Initialize 0001                      __pintcodelo 0018  
              __size_of_vfprintf 0056                        fabsf@F463 00ED  
                    __smallconst 0600                         ?_isdigit 000C  
                       ?_scalbnf 0035                         _ADC_Read 4C8C  
                       ?_isspace 000C                         ?_isupper 000C  
                    ADC_Read@val 00C6                      ??i1___awmod 0005  
                       Cmd@Value 000C                   __size_of_fabsf 0034  
                       ?_sprintf 00E5                         ?_tolower 0012  
                 __size_of_fputc 00A0                   __size_of_fputs 0038  
                       ?_strncmp 000C                   __size_of_putch 0002  
                 __size_of_sqrtf 0430                        _powf$1660 0104  
                      _powf$1661 0158                        _powf$1654 01A4  
                      _powf$1662 013C                        _powf$1655 0154  
                      _powf$1663 0140                        _powf$1656 0148  
                      _powf$1664 0108                        _powf$1657 0198  
                      _powf$1665 010C                        _powf$1658 0138  
                      _powf$1666 0110                        _powf$1667 0114  
                      _powf$1659 0100                        _powf$1668 0118  
                 ___wmul@product 0010                         _LCD_init 5956  
                       _PIR1bits 000F9E                         i1u659_20 5868  
                       _RCONbits 000FD0                       powf@yisint 0150  
                      _vfpfcnvrt 3ABA                       _ADCON0bits 000FC2  
              ___wmul@multiplier 000C             __end_of_mq135_getppm 4C8C  
                   ?_MyusartRead 0001                     _isspace$1182 0012  
                     vfpfcnvrt@c 00DC                       vfpfcnvrt@f 00D5  
                      copy_data0 58B2                         _Send2Lcd 5B6C  
                       __Hrparam 0000                       vfprintf@ap 00E1  
                       __Lrparam 0000                       vfprintf@fp 00DD  
             __CFG_BOREN$SBORDIS 000000                i1___awmod@divisor 0003  
        ??_OSCILLATOR_Initialize 000C                i1___awmod@counter 0005  
               __size_of___fladd 030C                 __size_of___fldiv 0288  
               __size_of___awdiv 0084                 __size_of___flneg 002E  
               __size_of___awmod 0070                         _mq135_ro 00FB  
               __size_of___flmul 0352                 __size_of___flsub 0046  
               __size_of___fltol 00BA                       ?_vfpfcnvrt 00C7  
             ___fpclassifyf@F463 00F5                  _UART_Initialize 5DA0  
                     sprintf@fmt 00E7                         ___xxtofl 4F5E  
               __size_of_isdigit 0030                 __size_of_scalbnf 01E6  
               __size_of_isspace 003E                         __ptext10 5CA0  
                       __ptext11 5BA6                         __ptext20 5B2E  
                       __ptext12 557A                         __ptext21 5C42  
                       __ptext13 5D9E                         __ptext30 5D54  
                       __ptext22 5CCA                         __ptext14 4936  
                       __ptext31 5D68                         __ptext23 509E  
                       __ptext15 52A0                         __ptext40 3E6A  
                       __ptext32 5D28                         __ptext24 5D12  
                       __ptext16 56B0                         __ptext41 5BDE  
                       __ptext33 4C8C                         __ptext25 5DA0  
                       __ptext17 57BE                         __ptext50 582E  
                       __ptext42 4F5E                         __ptext34 4AF0  
                       __ptext26 5D88                         __ptext18 573A  
                       __ptext51 5D7C                         __ptext43 5AA4  
                       __ptext35 06AA                         __ptext27 5D92  
                       __ptext19 4E1E                         __ptext44 41BC  
                       __ptext36 368A                         __ptext28 5956  
                       __ptext45 5C72                         __ptext37 5CF0  
                       __ptext29 5B6C                         __ptext46 44C8  
                       __ptext38 51D0                         __ptext47 536C  
                       __ptext39 4750                         __ptext49 5AEA  
               __size_of_isupper 0030                 __size_of_sprintf 005A  
               __size_of_tolower 004C                       strcpy@dest 000C  
               __size_of_strncmp 00A2                    __size_of_Data 0014  
                  __size_of_atoi 0140                    __size_of_main 00B2  
                  __size_of_nanf 0022                    __size_of_powf 2662  
           powf@__xc8_float_word 01B8                         efgtoa@fp 0060  
                       efgtoa@ne 00A5                         efgtoa@pp 00A1  
                       efgtoa@ou 008F                         int$flags 0073  
                       _vfprintf 59B0                         _mystring 01D5  
                     _INTCONbits 000FF2                         isdigit@c 000C  
                       scalbnf@n 0039                         scalbnf@u 003F  
                       scalbnf@x 0035                         scalbnf@y 0043  
                       intlevel1 0000                         intlevel2 0000  
                      sprintf@ap 01BE                  mq135_getppm@ret 00B8  
                      sqrtf@tiny 0611                         isspace@c 000C  
        ?_PIN_MANAGER_Initialize 0001                        strcpy@src 000E  
                       isupper@c 000C                        strncmp@_l 000C  
                      strncmp@_r 000E                 ??_ADC_Initialize 000C  
                    efgtoa@nmode 00AD            __size_of_mq135_getppm 019C  
        __end_of_UART_Initialize 5DA2                      ??_vfpfcnvrt 00CD  
                  _vfpfcnvrt$680 00D3                    _vfpfcnvrt$676 00D1  
                       sprintf@f 01C0                         tolower@c 0012  
                       sprintf@s 00E5           __size_of___fpclassifyf 00CC  
                       strncmp@l 0013                         strncmp@n 0010  
                       strncmp@r 0015                       _UART_Write 5D7C  
                  ___fladd@signs 0018             __size_of_MyusartRead 0044  
 __end_of_PIN_MANAGER_Initialize 5D92            sqrtf@__xc8_float_word 008C  
                   ___fladd@aexp 0019                     ___fladd@bexp 001A  
                   _mq135_getppm 4AF0  
