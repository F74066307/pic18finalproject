

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 22 10:28:15 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           ; Version 2.10
    89                           ; Generated 31/07/2019 GMT
    90                           ; 
    91                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F4520 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataBANK2
   124  006DE0                     __pidataBANK2:
   125                           	opt callstack 0
   126                           
   127                           ;initializer for stoa@F1161
   128  006DE0  28                 	db	40
   129  006DE1  6E                 	db	110
   130  006DE2  75                 	db	117
   131  006DE3  6C                 	db	108
   132  006DE4  6C                 	db	108
   133  006DE5  29                 	db	41
   134  006DE6  00                 	db	0
   135                           
   136                           ;initializer for _Ro
   137                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};;setting_hardaware/adc.c: 10: double SmokeC
      +                          urve[3] = {2.3,0.53,-0.44};;setting_hardaware/adc.c: 11: double Ro = 10.0;
   138  006DE7  0000               	dw	0
   139  006DE9  4120               	dw	16672
   140                           
   141                           ;initializer for _cycle
   142  006DEB  0004               	dw	4
   143                           
   144                           ;initializer for _GAS_SMOKE
   145  006DED  0002               	dw	2
   146                           
   147                           ;initializer for _GAS_CO
   148  006DEF  0001               	dw	1
   149                           
   150                           ;initializer for _RL_VALUE
   151  006DF1  0001               	dw	1
   152                           
   153                           ;initializer for _timer_val
   154  006DF3  0BDB               	dw	3035
   155                           
   156                           ;initializer for _SmokeCurve
   157                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};;setting_hardaware/adc.c: 10: double SmokeC
      +                          urve[3] = {2.3,0.53,-0.44};
   158  006DF5  3333               	dw	13107
   159  006DF7  4013               	dw	16403
   160                           
   161                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};;setting_hardaware/adc.c: 10: double SmokeC
      +                          urve[3] = {2.3,0.53,-0.44};
   162  006DF9  AE14               	dw	44564
   163  006DFB  3F07               	dw	16135
   164  006DFD  47AE               	dw	18350
   165  006DFF  BEE1               	dw	48865
   166                           
   167                           ;initializer for _COCurve
   168                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};
   169  006E01  3333               	dw	13107
   170  006E03  4013               	dw	16403
   171                           
   172                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};
   173  006E05  51EC               	dw	20972
   174  006E07  3F38               	dw	16184
   175  006E09  147B               	dw	5243
   176  006E0B  BEAE               	dw	48814
   177                           
   178                           ;initializer for _LPGCurve
   179                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};
   180  006E0D  3333               	dw	13107
   181  006E0F  4013               	dw	16403
   182                           
   183                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};
   184  006E11  0A3D               	dw	2621
   185  006E13  3E57               	dw	15959
   186  006E15  A3D7               	dw	41943
   187  006E17  BEF0               	dw	48880
   188                           
   189                           	psect	smallconst
   190  000600                     __psmallconst:
   191                           	opt callstack 0
   192  000600  00                 	db	0
   193  000601                     _dp_l:
   194                           	opt callstack 0
   195  000601  0000               	dw	0
   196  000603  0000               	dw	0
   197  000605  CFDC               	dw	53212
   198  000607  35D1               	dw	13777
   199  000609                     __end_of_dp_l:
   200                           	opt callstack 0
   201  000609                     _dp_h:
   202                           	opt callstack 0
   203  000609  0000               	dw	0
   204  00060B  0000               	dw	0
   205  00060D  C000               	dw	49152
   206  00060F  3F15               	dw	16149
   207  000611                     __end_of_dp_h:
   208                           	opt callstack 0
   209  000611  4260               	dw	16992
   210  000613  0DA2               	dw	3490
   211  000615                     __end_ofsqrtf@tiny:
   212                           	opt callstack 0
   213  000615  A570               	dw	42352
   214  000617  36EC               	dw	14060
   215  000619                     __end_of_ivln2_l:
   216                           	opt callstack 0
   217  000619  AA3B               	dw	43579
   218  00061B  3FB8               	dw	16312
   219  00061D                     __end_of_ivln2:
   220                           	opt callstack 0
   221  00061D  384F               	dw	14415
   222  00061F  3F76               	dw	16246
   223  000621                     __end_of_cp:
   224                           	opt callstack 0
   225  000621  AA3C               	dw	43580
   226  000623  3338               	dw	13112
   227  000625                     __end_of_ovt:
   228                           	opt callstack 0
   229  000625  BE8C               	dw	48780
   230  000627  35BF               	dw	13759
   231  000629                     __end_of_lg2_l:
   232                           	opt callstack 0
   233  000629  7200               	dw	29184
   234  00062B  3F31               	dw	16177
   235  00062D                     __end_of_lg2_h:
   236                           	opt callstack 0
   237  00062D  7218               	dw	29208
   238  00062F  3F31               	dw	16177
   239  000631                     __end_of_lg2:
   240                           	opt callstack 0
   241  000631  BB4C               	dw	47948
   242  000633  3331               	dw	13105
   243  000635                     __end_of_P5:
   244                           	opt callstack 0
   245  000635  EA0E               	dw	59918
   246  000637  B5DD               	dw	46557
   247  000639                     __end_of_P4:
   248                           	opt callstack 0
   249  000639  B355               	dw	45909
   250  00063B  388A               	dw	14474
   251  00063D                     __end_of_P3:
   252                           	opt callstack 0
   253  00063D  0B61               	dw	2913
   254  00063F  BB36               	dw	47926
   255  000641                     __end_of_P2:
   256                           	opt callstack 0
   257  000641  AAAB               	dw	43691
   258  000643  3E2A               	dw	15914
   259  000645                     __end_of_P1:
   260                           	opt callstack 0
   261  000645  F142               	dw	61762
   262  000647  3E53               	dw	15955
   263  000649                     __end_of_L6:
   264                           	opt callstack 0
   265  000649  3255               	dw	12885
   266  00064B  3E6C               	dw	15980
   267  00064D                     __end_of_L5:
   268                           	opt callstack 0
   269  00064D  A305               	dw	41733
   270  00064F  3E8B               	dw	16011
   271  000651                     __end_of_L4:
   272                           	opt callstack 0
   273  000651  AAAB               	dw	43691
   274  000653  3EAA               	dw	16042
   275  000655                     __end_of_L3:
   276                           	opt callstack 0
   277  000655  6DB7               	dw	28087
   278  000657  3EDB               	dw	16091
   279  000659                     __end_of_L2:
   280                           	opt callstack 0
   281  000659  999A               	dw	39322
   282  00065B  3F19               	dw	16153
   283  00065D                     __end_of_L1:
   284                           	opt callstack 0
   285  00065D  4260               	dw	16992
   286  00065F  0DA2               	dw	3490
   287  000661                     __end_of_tiny:
   288                           	opt callstack 0
   289  000661  F2CA               	dw	62154
   290  000663  7149               	dw	29001
   291  000665                     __end_of_huge:
   292                           	opt callstack 0
   293  000665  0000               	dw	0
   294  000667  4B80               	dw	19328
   295  000669                     __end_of_two24:
   296                           	opt callstack 0
   297  000669  9E26               	dw	40486
   298  00066B  3E78               	dw	15992
   299  00066D                     __end_of_Lg4:
   300                           	opt callstack 0
   301  00066D  E9EE               	dw	59886
   302  00066F  3E91               	dw	16017
   303  000671                     __end_of_Lg3:
   304                           	opt callstack 0
   305  000671  CE13               	dw	52755
   306  000673  3ECC               	dw	16076
   307  000675                     __end_of_Lg2:
   308                           	opt callstack 0
   309  000675  AAAA               	dw	43690
   310  000677  3F2A               	dw	16170
   311  000679                     __end_of_Lg1:
   312                           	opt callstack 0
   313  000679  F7D1               	dw	63441
   314  00067B  3717               	dw	14103
   315  00067D                     __end_of_ln2_lo:
   316                           	opt callstack 0
   317  00067D  7180               	dw	29056
   318  00067F  3F31               	dw	16177
   319  000681                     __end_of_ln2_hi:
   320                           	opt callstack 0
   321  000681                     _bp:
   322                           	opt callstack 0
   323  000681  0000               	dw	0
   324  000683  3F80               	dw	16256
   325  000685  0000               	dw	0
   326  000687  3FC0               	dw	16320
   327  000689                     __end_of_bp:
   328                           	opt callstack 0
   329  000689  AA00               	dw	43520
   330  00068B  3FB8               	dw	16312
   331  00068D                     __end_of_ivln2_h:
   332                           	opt callstack 0
   333  00068D  23C6               	dw	9158
   334  00068F  B8F6               	dw	47350
   335  000691                     __end_of_cp_l:
   336                           	opt callstack 0
   337  000691  4000               	dw	16384
   338  000693  3F76               	dw	16246
   339  000695                     __end_of_cp_h:
   340                           	opt callstack 0
   341  0000                     _ADRES	set	4035
   342  0000                     _TMR1	set	4046
   343  0000                     _LATBbits	set	3978
   344  0000                     _LATCbits	set	3979
   345  0000                     _LATD	set	3980
   346  0000                     _TRISA	set	3986
   347  0000                     _TRISBbits	set	3987
   348  0000                     _TRISD	set	3989
   349  0000                     _TRISC	set	3988
   350  0000                     _ADCON0bits	set	4034
   351  0000                     _ADCON2	set	4032
   352  0000                     _ADCON1	set	4033
   353  0000                     _INTCONbits	set	4082
   354  0000                     _RCONbits	set	4048
   355  0000                     _RCSTAbits	set	4011
   356  0000                     _RCREG	set	4014
   357  0000                     _TXREG	set	4013
   358  0000                     _TXSTAbits	set	4012
   359  0000                     _IPR1bits	set	3999
   360  0000                     _PIE1bits	set	3997
   361  0000                     _PIR1bits	set	3998
   362  0000                     _T1CONbits	set	4045
   363  0000                     _CREN	set	32092
   364  0000                     _RCIF	set	31989
   365  0000                     _IRCF0	set	32412
   366  0000                     _IRCF1	set	32413
   367  0000                     _IRCF2	set	32414
   368  000695                     STR_4:
   369  000695  25                 	db	37
   370  000696  73                 	db	115	;'s'
   371  000697  25                 	db	37
   372  000698  64                 	db	100	;'d'
   373  000699  20                 	db	32
   374  00069A  25                 	db	37
   375  00069B  64                 	db	100	;'d'
   376  00069C  20                 	db	32
   377  00069D  25                 	db	37
   378  00069E  64                 	db	100	;'d'
   379  00069F  00                 	db	0
   380  0006A0                     STR_3:
   381  0006A0  25                 	db	37
   382  0006A1  73                 	db	115	;'s'
   383  0006A2  25                 	db	37
   384  0006A3  2E                 	db	46
   385  0006A4  32                 	db	50	;'2'
   386  0006A5  66                 	db	102	;'f'
   387  0006A6  20                 	db	32
   388  0006A7  43                 	db	67	;'C'
   389  0006A8  00                 	db	0
   390  0006A9                     STR_1:
   391  0006A9  6D                 	db	109	;'m'
   392  0006AA  6F                 	db	111	;'o'
   393  0006AB  6E                 	db	110	;'n'
   394  0006AC  69                 	db	105	;'i'
   395  0006AD  74                 	db	116	;'t'
   396  0006AE  6F                 	db	111	;'o'
   397  0006AF  72                 	db	114	;'r'
   398  0006B0  00                 	db	0
   399  0006B1                     STR_2:
   400  0006B1  73                 	db	115	;'s'
   401  0006B2  74                 	db	116	;'t'
   402  0006B3  61                 	db	97	;'a'
   403  0006B4  72                 	db	114	;'r'
   404  0006B5  74                 	db	116	;'t'
   405  0006B6  00                 	db	0
   406  0006B7                     STR_5:
   407  0006B7  49                 	db	73	;'I'
   408  0006B8  4E                 	db	78	;'N'
   409  0006B9  46                 	db	70	;'F'
   410  0006BA  00                 	db	0
   411  0006BB                     STR_9:
   412  0006BB  4E                 	db	78	;'N'
   413  0006BC  41                 	db	65	;'A'
   414  0006BD  4E                 	db	78	;'N'
   415  0006BE  00                 	db	0
   416  0006BF                     STR_6:
   417  0006BF  69                 	db	105	;'i'
   418  0006C0  6E                 	db	110	;'n'
   419  0006C1  66                 	db	102	;'f'
   420  0006C2  00                 	db	0
   421  0006C3                     STR_10:
   422  0006C3  6E                 	db	110	;'n'
   423  0006C4  61                 	db	97	;'a'
   424  0006C5  6E                 	db	110	;'n'
   425  0006C6  00                 	db	0
   426  0006C7                     STR_13:
   427  0006C7  6C                 	db	108	;'l'
   428  0006C8  66                 	db	102	;'f'
   429  0006C9  00                 	db	0
   430  0000                     
   431                           ; #config settings
   432  0006CA  00                 	db	0	; dummy byte at the end
   433  0000                     
   434                           	psect	cinit
   435  006D16                     __pcinit:
   436                           	opt callstack 0
   437  006D16                     start_initialization:
   438                           	opt callstack 0
   439  006D16                     __initialization:
   440                           	opt callstack 0
   441                           
   442                           ; Initialize objects allocated to BANK2 (57 bytes)
   443                           ; load TBLPTR registers with __pidataBANK2
   444  006D16  0EE0               	movlw	low __pidataBANK2
   445  006D18  6EF6               	movwf	tblptrl,c
   446  006D1A  0E6D               	movlw	high __pidataBANK2
   447  006D1C  6EF7               	movwf	tblptrh,c
   448  006D1E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   449  006D20  6EF8               	movwf	tblptru,c
   450  006D22  EE02  F092         	lfsr	0,__pdataBANK2
   451  006D26  EE10 F039          	lfsr	1,57
   452  006D2A                     copy_data0:
   453  006D2A  0009               	tblrd		*+
   454  006D2C  CFF5 FFEE          	movff	tablat,postinc0
   455  006D30  50E5               	movf	postdec1,w,c
   456  006D32  50E1               	movf	fsr1l,w,c
   457  006D34  E1FA               	bnz	copy_data0
   458                           
   459                           ; Clear objects allocated to BANK3 (100 bytes)
   460  006D36  EE03  F000         	lfsr	0,__pbssBANK3
   461  006D3A  0E64               	movlw	100
   462  006D3C                     clear_0:
   463  006D3C  6AEE               	clrf	postinc0,c
   464  006D3E  06E8               	decf	wreg,f,c
   465  006D40  E1FD               	bnz	clear_0
   466                           
   467                           ; Clear objects allocated to BANK2 (146 bytes)
   468  006D42  EE02  F000         	lfsr	0,__pbssBANK2
   469  006D46  0E92               	movlw	146
   470  006D48                     clear_1:
   471  006D48  6AEE               	clrf	postinc0,c
   472  006D4A  06E8               	decf	wreg,f,c
   473  006D4C  E1FD               	bnz	clear_1
   474  006D4E                     end_of_initialization:
   475                           	opt callstack 0
   476  006D4E                     __end_of__initialization:
   477                           	opt callstack 0
   478  006D4E  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   479  006D50  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   480  006D52  0E00               	movlw	low (__Lmediumconst shr (0+16))
   481  006D54  6EF8               	movwf	tblptru,c
   482  006D56  0100               	movlb	0
   483  006D58  EF7C  F038         	goto	_main	;jump to C main() function
   484                           
   485                           	psect	bssBANK2
   486  000200                     __pbssBANK2:
   487                           	opt callstack 0
   488  000200                     fabsf@F463:
   489                           	opt callstack 0
   490  000200                     	ds	4
   491  000204                     logf@F469:
   492                           	opt callstack 0
   493  000204                     	ds	4
   494  000208                     floorf@F524:
   495                           	opt callstack 0
   496  000208                     	ds	4
   497  00020C                     ___fpclassifyf@F463:
   498                           	opt callstack 0
   499  00020C                     	ds	4
   500  000210                     _smoke:
   501                           	opt callstack 0
   502  000210                     	ds	4
   503  000214                     _co:
   504                           	opt callstack 0
   505  000214                     	ds	4
   506  000218                     _lpg:
   507                           	opt callstack 0
   508  000218                     	ds	4
   509  00021C                     _errno:
   510                           	opt callstack 0
   511  00021C                     	ds	2
   512  00021E                     _nout:
   513                           	opt callstack 0
   514  00021E                     	ds	2
   515  000220                     _width:
   516                           	opt callstack 0
   517  000220                     	ds	2
   518  000222                     _prec:
   519                           	opt callstack 0
   520  000222                     	ds	2
   521  000224                     _flags:
   522                           	opt callstack 0
   523  000224                     	ds	2
   524  000226                     _GAS_LPG:
   525                           	opt callstack 0
   526  000226                     	ds	2
   527  000228                     _count:
   528                           	opt callstack 0
   529  000228                     	ds	2
   530  00022A                     _lenStr:
   531                           	opt callstack 0
   532  00022A                     	ds	2
   533  00022C                     _dbuf:
   534                           	opt callstack 0
   535  00022C                     	ds	80
   536  00027C                     _value:
   537                           	opt callstack 0
   538  00027C                     	ds	12
   539  000288                     _mystring:
   540                           	opt callstack 0
   541  000288                     	ds	10
   542                           
   543                           	psect	dataBANK2
   544  000292                     __pdataBANK2:
   545                           	opt callstack 0
   546  000292                     stoa@F1161:
   547                           	opt callstack 0
   548  000292                     	ds	7
   549  000299                     _Ro:
   550                           	opt callstack 0
   551  000299                     	ds	4
   552  00029D                     _cycle:
   553                           	opt callstack 0
   554  00029D                     	ds	2
   555  00029F                     _GAS_SMOKE:
   556                           	opt callstack 0
   557  00029F                     	ds	2
   558  0002A1                     _GAS_CO:
   559                           	opt callstack 0
   560  0002A1                     	ds	2
   561  0002A3                     _RL_VALUE:
   562                           	opt callstack 0
   563  0002A3                     	ds	2
   564  0002A5                     _timer_val:
   565                           	opt callstack 0
   566  0002A5                     	ds	2
   567  0002A7                     _SmokeCurve:
   568                           	opt callstack 0
   569  0002A7                     	ds	12
   570  0002B3                     _COCurve:
   571                           	opt callstack 0
   572  0002B3                     	ds	12
   573  0002BF                     _LPGCurve:
   574                           	opt callstack 0
   575  0002BF                     	ds	12
   576                           
   577                           	psect	bssBANK3
   578  000300                     __pbssBANK3:
   579                           	opt callstack 0
   580  000300                     _r:
   581                           	opt callstack 0
   582  000300                     	ds	100
   583                           
   584                           	psect	cstackBANK3
   585  000364                     __pcstackBANK3:
   586                           	opt callstack 0
   587  000364                     ?___awmod:
   588                           	opt callstack 0
   589  000364                     UART_Write@data:
   590                           	opt callstack 0
   591  000364                     ___awmod@dividend:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0x0
   595  000364                     	ds	2
   596  000366                     ___awmod@divisor:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0x2
   600  000366                     	ds	2
   601  000368                     ___awmod@counter:
   602                           	opt callstack 0
   603                           
   604                           ; 1 bytes @ 0x4
   605  000368                     	ds	1
   606  000369                     ___awmod@sign:
   607                           	opt callstack 0
   608                           
   609                           ; 1 bytes @ 0x5
   610  000369                     	ds	1
   611  00036A                     ??_Lo_ISR:
   612                           
   613                           ; 1 bytes @ 0x6
   614  00036A                     	ds	5
   615  00036F                     Cmd@Value:
   616                           	opt callstack 0
   617  00036F                     Data@Value:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0xB
   621  00036F                     	ds	2
   622  000371                     ??_Cmd:
   623  000371                     ??_Data:
   624                           
   625                           ; 1 bytes @ 0xD
   626  000371                     	ds	1
   627  000372                     Send2Lcd@Lcd:
   628                           	opt callstack 0
   629                           
   630                           ; 2 bytes @ 0xE
   631  000372                     	ds	2
   632  000374                     ??_Send2Lcd:
   633                           
   634                           ; 1 bytes @ 0x10
   635  000374                     	ds	1
   636  000375                     Send2Lcd@Adr:
   637                           	opt callstack 0
   638                           
   639                           ; 1 bytes @ 0x11
   640  000375                     	ds	1
   641  000376                     ??_LCD_init:
   642                           
   643                           ; 1 bytes @ 0x12
   644  000376                     	ds	1
   645  000377                     
   646                           ; 1 bytes @ 0x13
   647                           
   648                           	psect	cstackBANK2
   649  0002CB                     __pcstackBANK2:
   650                           	opt callstack 0
   651  0002CB                     ?_sprintf:
   652                           	opt callstack 0
   653  0002CB                     sprintf@s:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0x0
   657  0002CB                     	ds	2
   658  0002CD                     sprintf@fmt:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x2
   662  0002CD                     	ds	12
   663  0002D9                     sprintf@ap:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0xE
   667  0002D9                     	ds	2
   668  0002DB                     sprintf@f:
   669                           	opt callstack 0
   670                           
   671                           ; 6 bytes @ 0x10
   672  0002DB                     	ds	6
   673  0002E1                     ??_Hi_ISR:
   674                           
   675                           ; 1 bytes @ 0x16
   676  0002E1                     	ds	11
   677                           
   678                           	psect	cstackBANK1
   679  000100                     __pcstackBANK1:
   680                           	opt callstack 0
   681  000100                     _powf$2074:
   682                           	opt callstack 0
   683                           
   684                           ; 4 bytes @ 0x0
   685  000100                     	ds	4
   686  000104                     _powf$2075:
   687                           	opt callstack 0
   688                           
   689                           ; 4 bytes @ 0x4
   690  000104                     	ds	4
   691  000108                     _powf$2079:
   692                           	opt callstack 0
   693                           
   694                           ; 4 bytes @ 0x8
   695  000108                     	ds	4
   696  00010C                     _powf$2080:
   697                           	opt callstack 0
   698                           
   699                           ; 4 bytes @ 0xC
   700  00010C                     	ds	4
   701  000110                     _powf$2081:
   702                           	opt callstack 0
   703                           
   704                           ; 4 bytes @ 0x10
   705  000110                     	ds	4
   706  000114                     _powf$2082:
   707                           	opt callstack 0
   708                           
   709                           ; 4 bytes @ 0x14
   710  000114                     	ds	4
   711  000118                     _powf$2083:
   712                           	opt callstack 0
   713                           
   714                           ; 4 bytes @ 0x18
   715  000118                     	ds	4
   716  00011C                     powf@t2:
   717                           	opt callstack 0
   718                           
   719                           ; 4 bytes @ 0x1C
   720  00011C                     	ds	4
   721  000120                     powf@z_h:
   722                           	opt callstack 0
   723                           
   724                           ; 4 bytes @ 0x20
   725  000120                     	ds	4
   726  000124                     powf@z_l:
   727                           	opt callstack 0
   728                           
   729                           ; 4 bytes @ 0x24
   730  000124                     	ds	4
   731  000128                     powf@y1:
   732                           	opt callstack 0
   733                           
   734                           ; 4 bytes @ 0x28
   735  000128                     	ds	4
   736  00012C                     powf@i:
   737                           	opt callstack 0
   738                           
   739                           ; 4 bytes @ 0x2C
   740  00012C                     	ds	4
   741  000130                     powf@s_l:
   742                           	opt callstack 0
   743                           
   744                           ; 4 bytes @ 0x30
   745  000130                     	ds	4
   746  000134                     powf@t_l:
   747                           	opt callstack 0
   748                           
   749                           ; 4 bytes @ 0x34
   750  000134                     	ds	4
   751  000138                     _powf$2073:
   752                           	opt callstack 0
   753                           
   754                           ; 4 bytes @ 0x38
   755  000138                     	ds	4
   756  00013C                     _powf$2077:
   757                           	opt callstack 0
   758                           
   759                           ; 4 bytes @ 0x3C
   760  00013C                     	ds	4
   761  000140                     _powf$2078:
   762                           	opt callstack 0
   763                           
   764                           ; 4 bytes @ 0x40
   765  000140                     	ds	4
   766  000144                     powf@w:
   767                           	opt callstack 0
   768                           
   769                           ; 4 bytes @ 0x44
   770  000144                     	ds	4
   771  000148                     _powf$2071:
   772                           	opt callstack 0
   773                           
   774                           ; 4 bytes @ 0x48
   775  000148                     	ds	4
   776  00014C                     powf@r:
   777                           	opt callstack 0
   778                           
   779                           ; 4 bytes @ 0x4C
   780  00014C                     	ds	4
   781  000150                     powf@yisint:
   782                           	opt callstack 0
   783                           
   784                           ; 4 bytes @ 0x50
   785  000150                     	ds	4
   786  000154                     powf@s:
   787                           	opt callstack 0
   788                           
   789                           ; 4 bytes @ 0x54
   790  000154                     	ds	4
   791  000158                     _powf$2070:
   792                           	opt callstack 0
   793                           
   794                           ; 4 bytes @ 0x58
   795  000158                     	ds	4
   796  00015C                     _powf$2076:
   797                           	opt callstack 0
   798                           
   799                           ; 4 bytes @ 0x5C
   800  00015C                     	ds	4
   801  000160                     powf@hx:
   802                           	opt callstack 0
   803                           
   804                           ; 4 bytes @ 0x60
   805  000160                     	ds	4
   806  000164                     powf@p_l:
   807                           	opt callstack 0
   808                           
   809                           ; 4 bytes @ 0x64
   810  000164                     	ds	4
   811  000168                     powf@t_h:
   812                           	opt callstack 0
   813                           
   814                           ; 4 bytes @ 0x68
   815  000168                     	ds	4
   816  00016C                     powf@s_h:
   817                           	opt callstack 0
   818                           
   819                           ; 4 bytes @ 0x6C
   820  00016C                     	ds	4
   821  000170                     powf@ax:
   822                           	opt callstack 0
   823                           
   824                           ; 4 bytes @ 0x70
   825  000170                     	ds	4
   826  000174                     powf@u:
   827                           	opt callstack 0
   828                           
   829                           ; 4 bytes @ 0x74
   830  000174                     	ds	4
   831  000178                     powf@v:
   832                           	opt callstack 0
   833                           
   834                           ; 4 bytes @ 0x78
   835  000178                     	ds	4
   836  00017C                     powf@hy:
   837                           	opt callstack 0
   838                           
   839                           ; 4 bytes @ 0x7C
   840  00017C                     	ds	4
   841  000180                     powf@t1:
   842                           	opt callstack 0
   843                           
   844                           ; 4 bytes @ 0x80
   845  000180                     	ds	4
   846  000184                     powf@sn:
   847                           	opt callstack 0
   848                           
   849                           ; 4 bytes @ 0x84
   850  000184                     	ds	4
   851  000188                     powf@n:
   852                           	opt callstack 0
   853                           
   854                           ; 4 bytes @ 0x88
   855  000188                     	ds	4
   856  00018C                     powf@s2:
   857                           	opt callstack 0
   858                           
   859                           ; 4 bytes @ 0x8C
   860  00018C                     	ds	4
   861  000190                     powf@iy:
   862                           	opt callstack 0
   863                           
   864                           ; 4 bytes @ 0x90
   865  000190                     	ds	4
   866  000194                     powf@is:
   867                           	opt callstack 0
   868                           
   869                           ; 4 bytes @ 0x94
   870  000194                     	ds	4
   871  000198                     _powf$2072:
   872                           	opt callstack 0
   873                           
   874                           ; 4 bytes @ 0x98
   875  000198                     	ds	4
   876  00019C                     powf@p_h:
   877                           	opt callstack 0
   878                           
   879                           ; 4 bytes @ 0x9C
   880  00019C                     	ds	4
   881  0001A0                     powf@k:
   882                           	opt callstack 0
   883                           
   884                           ; 4 bytes @ 0xA0
   885  0001A0                     	ds	4
   886  0001A4                     _powf$2069:
   887                           	opt callstack 0
   888                           
   889                           ; 4 bytes @ 0xA4
   890  0001A4                     	ds	4
   891  0001A8                     powf@ix:
   892                           	opt callstack 0
   893                           
   894                           ; 4 bytes @ 0xA8
   895  0001A8                     	ds	4
   896  0001AC                     powf@j:
   897                           	opt callstack 0
   898                           
   899                           ; 4 bytes @ 0xAC
   900  0001AC                     	ds	4
   901  0001B0                     powf@t:
   902                           	opt callstack 0
   903                           
   904                           ; 4 bytes @ 0xB0
   905  0001B0                     	ds	4
   906  0001B4                     powf@z:
   907                           	opt callstack 0
   908                           
   909                           ; 4 bytes @ 0xB4
   910  0001B4                     	ds	4
   911  0001B8                     powf@__xc8_float_word:
   912                           	opt callstack 0
   913                           
   914                           ; 4 bytes @ 0xB8
   915  0001B8                     	ds	4
   916  0001BC                     efgtoa@ou:
   917                           	opt callstack 0
   918                           
   919                           ; 4 bytes @ 0xBC
   920  0001BC                     	ds	4
   921  0001C0                     _efgtoa$1003:
   922                           	opt callstack 0
   923                           
   924                           ; 2 bytes @ 0xC0
   925  0001C0                     	ds	2
   926  0001C2                     _efgtoa$1004:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0xC2
   930  0001C2                     	ds	2
   931  0001C4                     _efgtoa$1008:
   932                           	opt callstack 0
   933                           
   934                           ; 2 bytes @ 0xC4
   935  0001C4                     	ds	2
   936  0001C6                     _efgtoa$1012:
   937                           	opt callstack 0
   938                           
   939                           ; 2 bytes @ 0xC6
   940  0001C6                     	ds	2
   941  0001C8                     _efgtoa$1013:
   942                           	opt callstack 0
   943                           
   944                           ; 2 bytes @ 0xC8
   945  0001C8                     	ds	2
   946  0001CA                     _efgtoa$1014:
   947                           	opt callstack 0
   948                           
   949                           ; 2 bytes @ 0xCA
   950  0001CA                     	ds	2
   951  0001CC                     efgtoa@t:
   952                           	opt callstack 0
   953                           
   954                           ; 2 bytes @ 0xCC
   955  0001CC                     	ds	2
   956  0001CE                     efgtoa@pp:
   957                           	opt callstack 0
   958                           
   959                           ; 2 bytes @ 0xCE
   960  0001CE                     	ds	2
   961  0001D0                     efgtoa@m:
   962                           	opt callstack 0
   963                           
   964                           ; 2 bytes @ 0xD0
   965  0001D0                     	ds	2
   966  0001D2                     efgtoa@ne:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0xD2
   970  0001D2                     	ds	2
   971  0001D4                     efgtoa@d:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0xD4
   975  0001D4                     	ds	2
   976  0001D6                     efgtoa@sign:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0xD6
   980  0001D6                     	ds	2
   981  0001D8                     efgtoa@p:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0xD8
   985  0001D8                     	ds	2
   986  0001DA                     efgtoa@nmode:
   987                           	opt callstack 0
   988                           
   989                           ; 1 bytes @ 0xDA
   990  0001DA                     	ds	1
   991  0001DB                     efgtoa@w:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0xDB
   995  0001DB                     	ds	2
   996  0001DD                     efgtoa@mode:
   997                           	opt callstack 0
   998                           
   999                           ; 1 bytes @ 0xDD
  1000  0001DD                     	ds	1
  1001  0001DE                     efgtoa@h:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 4 bytes @ 0xDE
  1005  0001DE                     	ds	4
  1006  0001E2                     efgtoa@l:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 4 bytes @ 0xE2
  1010  0001E2                     	ds	4
  1011  0001E6                     efgtoa@g:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 4 bytes @ 0xE6
  1015  0001E6                     	ds	4
  1016  0001EA                     efgtoa@i:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0xEA
  1020  0001EA                     	ds	2
  1021  0001EC                     efgtoa@e:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0xEC
  1025  0001EC                     	ds	2
  1026  0001EE                     efgtoa@n:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 2 bytes @ 0xEE
  1030  0001EE                     	ds	2
  1031  0001F0                     efgtoa@u:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 4 bytes @ 0xF0
  1035  0001F0                     	ds	4
  1036  0001F4                     ?_vfprintf:
  1037                           	opt callstack 0
  1038  0001F4                     vfprintf@fp:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0xF4
  1042  0001F4                     	ds	2
  1043  0001F6                     vfprintf@fmt:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 2 bytes @ 0xF6
  1047  0001F6                     	ds	2
  1048  0001F8                     vfprintf@ap:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 2 bytes @ 0xF8
  1052  0001F8                     	ds	2
  1053  0001FA                     _Hi_ISR$2061:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 2 bytes @ 0xFA
  1057  0001FA                     	ds	2
  1058  0001FC                     _Hi_ISR$2062:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0xFC
  1062  0001FC                     	ds	2
  1063  0001FE                     _Hi_ISR$2063:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 2 bytes @ 0xFE
  1067  0001FE                     	ds	2
  1068                           
  1069                           	psect	cstackBANK0
  1070  000080                     __pcstackBANK0:
  1071                           	opt callstack 0
  1072  000080                     logf@R:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x0
  1076  000080                     	ds	4
  1077  000084                     logf@t1:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x4
  1081  000084                     	ds	4
  1082  000088                     logf@t2:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x8
  1086  000088                     	ds	4
  1087  00008C                     _logf$2065:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 4 bytes @ 0xC
  1091  00008C                     	ds	4
  1092  000090                     _logf$2066:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x10
  1096  000090                     	ds	4
  1097  000094                     _logf$2067:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x14
  1101  000094                     	ds	4
  1102  000098                     _logf$2068:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x18
  1106  000098                     	ds	4
  1107  00009C                     logf@k:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x1C
  1111  00009C                     	ds	2
  1112  00009E                     logf@hfsq:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x1E
  1116  00009E                     	ds	4
  1117  0000A2                     logf@dk:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x22
  1121  0000A2                     	ds	4
  1122  0000A6                     logf@s:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x26
  1126  0000A6                     	ds	4
  1127  0000AA                     logf@z:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x2A
  1131  0000AA                     	ds	4
  1132  0000AE                     logf@w:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x2E
  1136  0000AE                     	ds	4
  1137  0000B2                     _logf$2064:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 4 bytes @ 0x32
  1141  0000B2                     	ds	4
  1142  0000B6                     logf@u:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x36
  1146  0000B6                     	ds	4
  1147  0000BA                     logf@f:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x3A
  1151  0000BA                     	ds	4
  1152  0000BE                     logf@ix:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x3E
  1156  0000BE                     	ds	4
  1157  0000C2                     ?_powf:
  1158                           	opt callstack 0
  1159  0000C2                     powf@x:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x42
  1163  0000C2                     	ds	4
  1164  0000C6                     powf@y:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x46
  1168  0000C6                     	ds	4
  1169  0000CA                     ?___fltol:
  1170                           	opt callstack 0
  1171  0000CA                     ___fltol@f1:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x4A
  1175  0000CA                     	ds	4
  1176  0000CE                     ?_MQGetPercentage:
  1177                           	opt callstack 0
  1178  0000CE                     ?_efgtoa:
  1179                           	opt callstack 0
  1180  0000CE                     efgtoa@fp:
  1181                           	opt callstack 0
  1182  0000CE                     MQGetPercentage@rs_ro_ratio:
  1183                           	opt callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x4E
  1186  0000CE                     	ds	2
  1187  0000D0                     efgtoa@f:
  1188                           	opt callstack 0
  1189                           
  1190                           ; 4 bytes @ 0x50
  1191  0000D0                     	ds	2
  1192  0000D2                     MQGetPercentage@pcurve:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x52
  1196  0000D2                     	ds	2
  1197  0000D4                     efgtoa@c:
  1198                           	opt callstack 0
  1199  0000D4                     _MQGetPercentage$2055:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x54
  1203  0000D4                     	ds	1
  1204  0000D5                     ??_efgtoa:
  1205                           
  1206                           ; 1 bytes @ 0x55
  1207  0000D5                     	ds	3
  1208  0000D8                     _MQGetPercentage$2056:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x58
  1212  0000D8                     	ds	2
  1213  0000DA                     ?_vfpfcnvrt:
  1214                           	opt callstack 0
  1215  0000DA                     vfpfcnvrt@fp:
  1216                           	opt callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x5A
  1219  0000DA                     	ds	2
  1220  0000DC                     vfpfcnvrt@fmt:
  1221                           	opt callstack 0
  1222  0000DC                     _MQGetPercentage$2057:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x5C
  1226  0000DC                     	ds	2
  1227  0000DE                     vfpfcnvrt@ap:
  1228                           	opt callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x5E
  1231  0000DE                     	ds	2
  1232  0000E0                     ??_vfpfcnvrt:
  1233  0000E0                     ?_MQGetGasPercentage:
  1234                           	opt callstack 0
  1235  0000E0                     MQGetGasPercentage@rs_ro_ratio:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x60
  1239  0000E0                     	ds	4
  1240  0000E4                     MQGetGasPercentage@gas_id:
  1241                           	opt callstack 0
  1242  0000E4                     vfpfcnvrt@ll:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 8 bytes @ 0x64
  1246  0000E4                     	ds	2
  1247  0000E6                     _MQGetGasPercentage$2058:
  1248                           	opt callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x66
  1251  0000E6                     	ds	4
  1252  0000EA                     MQ_Read@values:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x6A
  1256  0000EA                     	ds	2
  1257  0000EC                     ??_MQ_Read:
  1258  0000EC                     vfpfcnvrt@cp:
  1259                           	opt callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x6C
  1262  0000EC                     	ds	2
  1263  0000EE                     MQ_Read@digital:
  1264                           	opt callstack 0
  1265  0000EE                     _vfpfcnvrt$1039:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x6E
  1269  0000EE                     	ds	2
  1270  0000F0                     _vfpfcnvrt$1044:
  1271                           	opt callstack 0
  1272  0000F0                     MQ_Read@res:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 4 bytes @ 0x70
  1276  0000F0                     	ds	2
  1277  0000F2                     vfpfcnvrt@c:
  1278                           	opt callstack 0
  1279                           
  1280                           ; 1 bytes @ 0x72
  1281  0000F2                     	ds	1
  1282  0000F3                     vfpfcnvrt@f:
  1283                           	opt callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x73
  1286  0000F3                     	ds	1
  1287  0000F4                     _MQ_Read$2059:
  1288                           	opt callstack 0
  1289                           
  1290                           ; 4 bytes @ 0x74
  1291  0000F4                     	ds	3
  1292  0000F7                     vfpfcnvrt@ct:
  1293                           	opt callstack 0
  1294                           
  1295                           ; 3 bytes @ 0x77
  1296  0000F7                     	ds	3
  1297  0000FA                     vfprintf@cfmt:
  1298                           	opt callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x7A
  1301  0000FA                     	ds	2
  1302                           
  1303                           	psect	cstackCOMRAM
  1304  000001                     __pcstackCOMRAM:
  1305                           	opt callstack 0
  1306  000001                     ?_strlen:
  1307                           	opt callstack 0
  1308  000001                     ?___fpclassifyf:
  1309                           	opt callstack 0
  1310  000001                     ?_isupper:
  1311                           	opt callstack 0
  1312  000001                     ?_isdigit:
  1313                           	opt callstack 0
  1314  000001                     ?_strncmp:
  1315                           	opt callstack 0
  1316  000001                     ?_isspace:
  1317                           	opt callstack 0
  1318  000001                     ?___wmul:
  1319                           	opt callstack 0
  1320  000001                     ?___awdiv:
  1321                           	opt callstack 0
  1322  000001                     ?i2___awmod:
  1323                           	opt callstack 0
  1324  000001                     ?___fladd:
  1325                           	opt callstack 0
  1326  000001                     ?_fabsf:
  1327                           	opt callstack 0
  1328  000001                     ?_nanf:
  1329                           	opt callstack 0
  1330  000001                     ?___flneg:
  1331                           	opt callstack 0
  1332  000001                     ?___xxtofl:
  1333                           	opt callstack 0
  1334  000001                     ?___aodiv:
  1335                           	opt callstack 0
  1336  000001                     ?___aomod:
  1337                           	opt callstack 0
  1338  000001                     ___wmul@multiplier:
  1339                           	opt callstack 0
  1340  000001                     ___awdiv@dividend:
  1341                           	opt callstack 0
  1342  000001                     isdigit@c:
  1343                           	opt callstack 0
  1344  000001                     isspace@c:
  1345                           	opt callstack 0
  1346  000001                     isupper@c:
  1347                           	opt callstack 0
  1348  000001                     memset@dest:
  1349                           	opt callstack 0
  1350  000001                     fputc@c:
  1351                           	opt callstack 0
  1352  000001                     strcpy@dest:
  1353                           	opt callstack 0
  1354  000001                     strlen@s:
  1355                           	opt callstack 0
  1356  000001                     strncmp@_l:
  1357                           	opt callstack 0
  1358  000001                     nanf@s:
  1359                           	opt callstack 0
  1360  000001                     i2Cmd@Value:
  1361                           	opt callstack 0
  1362  000001                     i2Data@Value:
  1363                           	opt callstack 0
  1364  000001                     i2___awmod@dividend:
  1365                           	opt callstack 0
  1366  000001                     ___fleq@ff1:
  1367                           	opt callstack 0
  1368  000001                     ___flneg@f1:
  1369                           	opt callstack 0
  1370  000001                     ___fladd@b:
  1371                           	opt callstack 0
  1372  000001                     ___xxtofl@val:
  1373                           	opt callstack 0
  1374  000001                     ___fpclassifyf@x:
  1375                           	opt callstack 0
  1376  000001                     fabsf@x:
  1377                           	opt callstack 0
  1378  000001                     ___aodiv@dividend:
  1379                           	opt callstack 0
  1380  000001                     ___aomod@dividend:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 8 bytes @ 0x0
  1384  000001                     	ds	2
  1385  000003                     ??_isupper:
  1386  000003                     ??_isdigit:
  1387  000003                     ??_isspace:
  1388  000003                     ??i2_Cmd:
  1389  000003                     ??i2_Data:
  1390  000003                     ___wmul@multiplicand:
  1391                           	opt callstack 0
  1392  000003                     ___awdiv@divisor:
  1393                           	opt callstack 0
  1394  000003                     memset@c:
  1395                           	opt callstack 0
  1396  000003                     fputc@fp:
  1397                           	opt callstack 0
  1398  000003                     strcpy@src:
  1399                           	opt callstack 0
  1400  000003                     strlen@a:
  1401                           	opt callstack 0
  1402  000003                     strncmp@_r:
  1403                           	opt callstack 0
  1404  000003                     i2___awmod@divisor:
  1405                           	opt callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x2
  1408  000003                     	ds	1
  1409  000004                     i2Send2Lcd@Lcd:
  1410                           	opt callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x3
  1413  000004                     	ds	1
  1414  000005                     ??_fputc:
  1415  000005                     ??___fpclassifyf:
  1416  000005                     ??_strcpy:
  1417  000005                     ??___xxtofl:
  1418  000005                     ___awdiv@counter:
  1419                           	opt callstack 0
  1420  000005                     i2___awmod@counter:
  1421                           	opt callstack 0
  1422  000005                     ___wmul@product:
  1423                           	opt callstack 0
  1424  000005                     memset@n:
  1425                           	opt callstack 0
  1426  000005                     strncmp@n:
  1427                           	opt callstack 0
  1428  000005                     ___fleq@ff2:
  1429                           	opt callstack 0
  1430  000005                     ___fladd@a:
  1431                           	opt callstack 0
  1432  000005                     fabsf@u:
  1433                           	opt callstack 0
  1434  000005                     nanf@u:
  1435                           	opt callstack 0
  1436                           
  1437                           ; 4 bytes @ 0x4
  1438  000005                     	ds	1
  1439  000006                     ??i2_Send2Lcd:
  1440  000006                     ___awdiv@sign:
  1441                           	opt callstack 0
  1442  000006                     i2___awmod@sign:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 1 bytes @ 0x5
  1446  000006                     	ds	1
  1447  000007                     ??_memset:
  1448  000007                     ??_strncmp:
  1449  000007                     ?_tolower:
  1450                           	opt callstack 0
  1451  000007                     _isspace$1549:
  1452                           	opt callstack 0
  1453  000007                     i2Send2Lcd@Adr:
  1454                           	opt callstack 0
  1455  000007                     ___awdiv@quotient:
  1456                           	opt callstack 0
  1457  000007                     strcpy@s:
  1458                           	opt callstack 0
  1459  000007                     tolower@c:
  1460                           	opt callstack 0
  1461                           
  1462                           ; 2 bytes @ 0x6
  1463  000007                     	ds	1
  1464  000008                     ?_atoi:
  1465                           	opt callstack 0
  1466  000008                     atoi@s:
  1467                           	opt callstack 0
  1468  000008                     strncmp@l:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x7
  1472  000008                     	ds	1
  1473  000009                     ??_tolower:
  1474  000009                     ??___fladd:
  1475  000009                     ??___fleq:
  1476  000009                     ___xxtofl@sign:
  1477                           	opt callstack 0
  1478  000009                     ___fpclassifyf@e:
  1479                           	opt callstack 0
  1480  000009                     memset@k:
  1481                           	opt callstack 0
  1482  000009                     strcpy@d:
  1483                           	opt callstack 0
  1484  000009                     ___aodiv@divisor:
  1485                           	opt callstack 0
  1486  000009                     ___aomod@divisor:
  1487                           	opt callstack 0
  1488                           
  1489                           ; 8 bytes @ 0x8
  1490  000009                     	ds	1
  1491  00000A                     ??_atoi:
  1492  00000A                     ?_stoa:
  1493                           	opt callstack 0
  1494  00000A                     ___xxtofl@exp:
  1495                           	opt callstack 0
  1496  00000A                     stoa@fp:
  1497                           	opt callstack 0
  1498  00000A                     fputs@s:
  1499                           	opt callstack 0
  1500  00000A                     strncmp@r:
  1501                           	opt callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x9
  1504  00000A                     	ds	1
  1505  00000B                     memset@s:
  1506                           	opt callstack 0
  1507  00000B                     ___xxtofl@arg:
  1508                           	opt callstack 0
  1509  00000B                     ___fpclassifyf@u:
  1510                           	opt callstack 0
  1511                           
  1512                           ; 4 bytes @ 0xA
  1513  00000B                     	ds	1
  1514  00000C                     stoa@s:
  1515                           	opt callstack 0
  1516  00000C                     fputs@fp:
  1517                           	opt callstack 0
  1518                           
  1519                           ; 2 bytes @ 0xB
  1520  00000C                     	ds	1
  1521  00000D                     ___fladd@signs:
  1522                           	opt callstack 0
  1523  00000D                     _tolower$1787:
  1524                           	opt callstack 0
  1525                           
  1526                           ; 2 bytes @ 0xC
  1527  00000D                     	ds	1
  1528  00000E                     ??_stoa:
  1529  00000E                     ___fladd@aexp:
  1530                           	opt callstack 0
  1531  00000E                     fputs@c:
  1532                           	opt callstack 0
  1533  00000E                     atoi@neg:
  1534                           	opt callstack 0
  1535                           
  1536                           ; 2 bytes @ 0xD
  1537  00000E                     	ds	1
  1538  00000F                     ___fladd@bexp:
  1539                           	opt callstack 0
  1540  00000F                     fputs@i:
  1541                           	opt callstack 0
  1542  00000F                     stoa@nuls:
  1543                           	opt callstack 0
  1544                           
  1545                           ; 7 bytes @ 0xE
  1546  00000F                     	ds	1
  1547  000010                     ___fladd@grs:
  1548                           	opt callstack 0
  1549  000010                     _atoi$1518:
  1550                           	opt callstack 0
  1551                           
  1552                           ; 2 bytes @ 0xF
  1553  000010                     	ds	1
  1554  000011                     ?_pad:
  1555                           	opt callstack 0
  1556  000011                     ?___flmul:
  1557                           	opt callstack 0
  1558  000011                     ___aodiv@counter:
  1559                           	opt callstack 0
  1560  000011                     ___aomod@counter:
  1561                           	opt callstack 0
  1562  000011                     pad@fp:
  1563                           	opt callstack 0
  1564  000011                     ___flmul@b:
  1565                           	opt callstack 0
  1566                           
  1567                           ; 4 bytes @ 0x10
  1568  000011                     	ds	1
  1569  000012                     ___aodiv@sign:
  1570                           	opt callstack 0
  1571  000012                     ___aomod@sign:
  1572                           	opt callstack 0
  1573  000012                     _atoi$1520:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x11
  1577  000012                     	ds	1
  1578  000013                     ?_abs:
  1579                           	opt callstack 0
  1580  000013                     pad@buf:
  1581                           	opt callstack 0
  1582  000013                     abs@a:
  1583                           	opt callstack 0
  1584  000013                     ___aodiv@quotient:
  1585                           	opt callstack 0
  1586                           
  1587                           ; 8 bytes @ 0x12
  1588  000013                     	ds	1
  1589  000014                     _atoi$1519:
  1590                           	opt callstack 0
  1591                           
  1592                           ; 1 bytes @ 0x13
  1593  000014                     	ds	1
  1594  000015                     ??_abs:
  1595  000015                     pad@p:
  1596                           	opt callstack 0
  1597  000015                     atoi@n:
  1598                           	opt callstack 0
  1599  000015                     ___flmul@a:
  1600                           	opt callstack 0
  1601                           
  1602                           ; 4 bytes @ 0x14
  1603  000015                     	ds	1
  1604  000016                     stoa@i:
  1605                           	opt callstack 0
  1606                           
  1607                           ; 2 bytes @ 0x15
  1608  000016                     	ds	1
  1609  000017                     ??_pad:
  1610                           
  1611                           ; 1 bytes @ 0x16
  1612  000017                     	ds	1
  1613  000018                     pad@i:
  1614                           	opt callstack 0
  1615  000018                     stoa@w:
  1616                           	opt callstack 0
  1617                           
  1618                           ; 2 bytes @ 0x17
  1619  000018                     	ds	1
  1620  000019                     ??___flmul:
  1621                           
  1622                           ; 1 bytes @ 0x18
  1623  000019                     	ds	1
  1624  00001A                     pad@w:
  1625                           	opt callstack 0
  1626  00001A                     stoa@cp:
  1627                           	opt callstack 0
  1628                           
  1629                           ; 2 bytes @ 0x19
  1630  00001A                     	ds	2
  1631  00001C                     ?_dtoa:
  1632                           	opt callstack 0
  1633  00001C                     dtoa@fp:
  1634                           	opt callstack 0
  1635  00001C                     stoa@p:
  1636                           	opt callstack 0
  1637                           
  1638                           ; 2 bytes @ 0x1B
  1639  00001C                     	ds	1
  1640  00001D                     ___flmul@sign:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 1 bytes @ 0x1C
  1644  00001D                     	ds	1
  1645  00001E                     ___flmul@aexp:
  1646                           	opt callstack 0
  1647  00001E                     stoa@l:
  1648                           	opt callstack 0
  1649  00001E                     dtoa@d:
  1650                           	opt callstack 0
  1651                           
  1652                           ; 8 bytes @ 0x1D
  1653  00001E                     	ds	1
  1654  00001F                     ___flmul@bexp:
  1655                           	opt callstack 0
  1656                           
  1657                           ; 1 bytes @ 0x1E
  1658  00001F                     	ds	1
  1659  000020                     ___flmul@grs:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 4 bytes @ 0x1F
  1663  000020                     	ds	4
  1664  000024                     ___flmul@prod:
  1665                           	opt callstack 0
  1666                           
  1667                           ; 4 bytes @ 0x23
  1668  000024                     	ds	2
  1669  000026                     ??_dtoa:
  1670                           
  1671                           ; 1 bytes @ 0x25
  1672  000026                     	ds	2
  1673  000028                     ___flmul@temp:
  1674                           	opt callstack 0
  1675                           
  1676                           ; 2 bytes @ 0x27
  1677  000028                     	ds	2
  1678  00002A                     ?___flsub:
  1679                           	opt callstack 0
  1680  00002A                     ?_scalbnf:
  1681                           	opt callstack 0
  1682  00002A                     ___flsub@b:
  1683                           	opt callstack 0
  1684  00002A                     scalbnf@x:
  1685                           	opt callstack 0
  1686                           
  1687                           ; 4 bytes @ 0x29
  1688  00002A                     	ds	4
  1689  00002E                     _dtoa$979:
  1690                           	opt callstack 0
  1691  00002E                     scalbnf@n:
  1692                           	opt callstack 0
  1693  00002E                     ___flsub@a:
  1694                           	opt callstack 0
  1695                           
  1696                           ; 4 bytes @ 0x2D
  1697  00002E                     	ds	2
  1698  000030                     ??_scalbnf:
  1699  000030                     dtoa@p:
  1700                           	opt callstack 0
  1701                           
  1702                           ; 2 bytes @ 0x2F
  1703  000030                     	ds	2
  1704  000032                     ?___fldiv:
  1705                           	opt callstack 0
  1706  000032                     dtoa@w:
  1707                           	opt callstack 0
  1708  000032                     ___flge@ff1:
  1709                           	opt callstack 0
  1710  000032                     ___fldiv@b:
  1711                           	opt callstack 0
  1712                           
  1713                           ; 4 bytes @ 0x31
  1714  000032                     	ds	2
  1715  000034                     dtoa@s:
  1716                           	opt callstack 0
  1717  000034                     scalbnf@u:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 4 bytes @ 0x33
  1721  000034                     	ds	2
  1722  000036                     ___flge@ff2:
  1723                           	opt callstack 0
  1724  000036                     ___fldiv@a:
  1725                           	opt callstack 0
  1726  000036                     dtoa@n:
  1727                           	opt callstack 0
  1728                           
  1729                           ; 8 bytes @ 0x35
  1730  000036                     	ds	2
  1731  000038                     scalbnf@y:
  1732                           	opt callstack 0
  1733                           
  1734                           ; 4 bytes @ 0x37
  1735  000038                     	ds	2
  1736  00003A                     ??___fldiv:
  1737  00003A                     ??___flge:
  1738                           
  1739                           ; 1 bytes @ 0x39
  1740  00003A                     	ds	4
  1741  00003E                     ?_sqrtf:
  1742                           	opt callstack 0
  1743  00003E                     dtoa@i:
  1744                           	opt callstack 0
  1745  00003E                     ___fldiv@rem:
  1746                           	opt callstack 0
  1747  00003E                     sqrtf@x:
  1748                           	opt callstack 0
  1749                           
  1750                           ; 4 bytes @ 0x3D
  1751  00003E                     	ds	4
  1752  000042                     ??_sqrtf:
  1753  000042                     ___fldiv@sign:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 1 bytes @ 0x41
  1757  000042                     	ds	1
  1758  000043                     ___fldiv@new_exp:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 2 bytes @ 0x42
  1762  000043                     	ds	2
  1763  000045                     ___fldiv@grs:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 4 bytes @ 0x44
  1767  000045                     	ds	4
  1768  000049                     ___fldiv@bexp:
  1769                           	opt callstack 0
  1770                           
  1771                           ; 1 bytes @ 0x48
  1772  000049                     	ds	1
  1773  00004A                     ___fldiv@aexp:
  1774                           	opt callstack 0
  1775                           
  1776                           ; 1 bytes @ 0x49
  1777  00004A                     	ds	1
  1778  00004B                     ?_logf:
  1779                           	opt callstack 0
  1780  00004B                     ?_floorf:
  1781                           	opt callstack 0
  1782  00004B                     ?_ADC_Read:
  1783                           	opt callstack 0
  1784  00004B                     ADC_Read@channel:
  1785                           	opt callstack 0
  1786  00004B                     floorf@x:
  1787                           	opt callstack 0
  1788  00004B                     logf@x:
  1789                           	opt callstack 0
  1790  00004B                     sqrtf@s:
  1791                           	opt callstack 0
  1792                           
  1793                           ; 4 bytes @ 0x4A
  1794  00004B                     	ds	4
  1795  00004F                     ??_logf:
  1796  00004F                     ??_floorf:
  1797  00004F                     ??_ADC_Read:
  1798  00004F                     sqrtf@i:
  1799                           	opt callstack 0
  1800                           
  1801                           ; 4 bytes @ 0x4E
  1802  00004F                     	ds	1
  1803  000050                     _ADC_Read$2060:
  1804                           	opt callstack 0
  1805                           
  1806                           ; 4 bytes @ 0x4F
  1807  000050                     	ds	3
  1808  000053                     sqrtf@__xc8_float_word:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 4 bytes @ 0x52
  1812  000053                     	ds	1
  1813  000054                     ADC_Read@digital:
  1814                           	opt callstack 0
  1815                           
  1816                           ; 2 bytes @ 0x53
  1817  000054                     	ds	1
  1818  000055                     floorf@m:
  1819                           	opt callstack 0
  1820                           
  1821                           ; 4 bytes @ 0x54
  1822  000055                     	ds	1
  1823  000056                     ADC_Read@result:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 4 bytes @ 0x55
  1827  000056                     	ds	1
  1828  000057                     sqrtf@q:
  1829                           	opt callstack 0
  1830                           
  1831                           ; 4 bytes @ 0x56
  1832  000057                     	ds	2
  1833  000059                     floorf@e:
  1834                           	opt callstack 0
  1835                           
  1836                           ; 2 bytes @ 0x58
  1837  000059                     	ds	2
  1838  00005B                     floorf@u:
  1839                           	opt callstack 0
  1840  00005B                     sqrtf@t:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 4 bytes @ 0x5A
  1844  00005B                     	ds	4
  1845  00005F                     sqrtf@z:
  1846                           	opt callstack 0
  1847                           
  1848                           ; 4 bytes @ 0x5E
  1849  00005F                     	ds	4
  1850  000063                     sqrtf@m:
  1851                           	opt callstack 0
  1852                           
  1853                           ; 4 bytes @ 0x62
  1854  000063                     	ds	4
  1855  000067                     sqrtf@r:
  1856                           	opt callstack 0
  1857                           
  1858                           ; 4 bytes @ 0x66
  1859  000067                     	ds	4
  1860  00006B                     sqrtf@ix:
  1861                           	opt callstack 0
  1862                           
  1863                           ; 4 bytes @ 0x6A
  1864  00006B                     	ds	4
  1865  00006F                     ??_powf:
  1866                           
  1867                           ; 1 bytes @ 0x6E
  1868  00006F                     	ds	9
  1869  000078                     ??___fltol:
  1870                           
  1871                           ; 1 bytes @ 0x77
  1872  000078                     	ds	4
  1873  00007C                     ___fltol@sign1:
  1874                           	opt callstack 0
  1875                           
  1876                           ; 1 bytes @ 0x7B
  1877  00007C                     	ds	1
  1878  00007D                     ___fltol@exp1:
  1879                           	opt callstack 0
  1880                           
  1881                           ; 1 bytes @ 0x7C
  1882  00007D                     	ds	1
  1883  00007E                     
  1884                           ; 1 bytes @ 0x7D
  1885 ;;
  1886 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1887 ;;
  1888 ;; *************** function _main *****************
  1889 ;; Defined at:
  1890 ;;		line 13 in file "main.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1904 ;;      Params:         0       0       0       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0
  1907 ;;      Totals:         0       0       0       0       0       0       0
  1908 ;;Total ram usage:        0 bytes
  1909 ;; Hardware stack levels required when called:   16
  1910 ;; This function calls:
  1911 ;;		_SYSTEM_Initialize
  1912 ;; This function is called by:
  1913 ;;		Startup code after reset
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text0
  1918  0070F8                     __ptext0:
  1919                           	opt callstack 0
  1920  0070F8                     _main:
  1921                           	opt callstack 15
  1922                           
  1923                           ;main.c: 15:     SYSTEM_Initialize() ;
  1924                           
  1925                           ;incstack = 0
  1926  0070F8  EC3A  F038         	call	_SYSTEM_Initialize	;wreg free
  1927  0070FC                     l254:
  1928  0070FC  D7FF               	goto	l254
  1929  0070FE                     __end_of_main:
  1930                           	opt callstack 0
  1931                           
  1932 ;; *************** function _SYSTEM_Initialize *****************
  1933 ;; Defined at:
  1934 ;;		line 73 in file "setting_hardaware/setting.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1948 ;;      Params:         0       0       0       0       0       0       0
  1949 ;;      Locals:         0       0       0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0       0       0
  1951 ;;      Totals:         0       0       0       0       0       0       0
  1952 ;;Total ram usage:        0 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:   15
  1955 ;; This function calls:
  1956 ;;		_ADC_Initialize
  1957 ;;		_INTERRUPT_Initialize
  1958 ;;		_LCD_init
  1959 ;;		_OSCILLATOR_Initialize
  1960 ;;		_PIN_MANAGER_Initialize
  1961 ;;		_TMR1_Initialize
  1962 ;;		_buzzer_init
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text1
  1969  007074                     __ptext1:
  1970                           	opt callstack 0
  1971  007074                     _SYSTEM_Initialize:
  1972                           	opt callstack 15
  1973                           
  1974                           ;setting_hardaware/setting.c: 75:     INTERRUPT_Initialize();
  1975                           
  1976                           ;incstack = 0
  1977  007074  EC7F  F038         	call	_INTERRUPT_Initialize	;wreg free
  1978                           
  1979                           ;setting_hardaware/setting.c: 76:     PIN_MANAGER_Initialize();
  1980  007078  EC57  F038         	call	_PIN_MANAGER_Initialize	;wreg free
  1981                           
  1982                           ;setting_hardaware/setting.c: 77:     OSCILLATOR_Initialize();
  1983  00707C  EC78  F038         	call	_OSCILLATOR_Initialize	;wreg free
  1984                           
  1985                           ;setting_hardaware/setting.c: 78:     LCD_init();
  1986  007080  ECA5  F034         	call	_LCD_init	;wreg free
  1987                           
  1988                           ;setting_hardaware/setting.c: 79:     buzzer_init();
  1989  007084  EC82  F038         	call	_buzzer_init	;wreg free
  1990                           
  1991                           ;setting_hardaware/setting.c: 80:     ADC_Initialize();
  1992  007088  EC61  F038         	call	_ADC_Initialize	;wreg free
  1993                           
  1994                           ;setting_hardaware/setting.c: 81:     TMR1_Initialize();
  1995  00708C  EC49  F038         	call	_TMR1_Initialize	;wreg free
  1996  007090  0012               	return		;funcret
  1997  007092                     __end_of_SYSTEM_Initialize:
  1998                           	opt callstack 0
  1999                           
  2000 ;; *************** function _buzzer_init *****************
  2001 ;; Defined at:
  2002 ;;		line 19 in file "setting_hardaware/buzzer.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		None
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2016 ;;      Params:         0       0       0       0       0       0       0
  2017 ;;      Locals:         0       0       0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0
  2019 ;;      Totals:         0       0       0       0       0       0       0
  2020 ;;Total ram usage:        0 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:   12
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_SYSTEM_Initialize
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text2
  2031  007104                     __ptext2:
  2032                           	opt callstack 0
  2033  007104                     _buzzer_init:
  2034                           	opt callstack 17
  2035                           
  2036                           ;incstack = 0
  2037  007104  0012               	return		;funcret
  2038  007106                     __end_of_buzzer_init:
  2039                           	opt callstack 0
  2040                           
  2041 ;; *************** function _TMR1_Initialize *****************
  2042 ;; Defined at:
  2043 ;;		line 62 in file "setting_hardaware/setting.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2057 ;;      Params:         0       0       0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0
  2060 ;;      Totals:         0       0       0       0       0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:   12
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_SYSTEM_Initialize
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text3
  2072  007092                     __ptext3:
  2073                           	opt callstack 0
  2074  007092                     _TMR1_Initialize:
  2075                           	opt callstack 17
  2076                           
  2077                           ;setting_hardaware/setting.c: 63:     T1CONbits.RD16=1;
  2078                           
  2079                           ;incstack = 0
  2080  007092  8ECD               	bsf	205,7,c	;volatile
  2081                           
  2082                           ;setting_hardaware/setting.c: 64:     T1CONbits.T1CKPS=2;
  2083  007094  50CD               	movf	205,w,c	;volatile
  2084  007096  0BCF               	andlw	-49
  2085  007098  0920               	iorlw	32
  2086  00709A  6ECD               	movwf	205,c	;volatile
  2087                           
  2088                           ;setting_hardaware/setting.c: 65:     T1CONbits.TMR1ON=1;
  2089  00709C  80CD               	bsf	205,0,c	;volatile
  2090                           
  2091                           ;setting_hardaware/setting.c: 66:     PIR1bits.TMR1IF=0;
  2092  00709E  909E               	bcf	158,0,c	;volatile
  2093                           
  2094                           ;setting_hardaware/setting.c: 67:     PIE1bits.TMR1IE=1;
  2095  0070A0  809D               	bsf	157,0,c	;volatile
  2096                           
  2097                           ;setting_hardaware/setting.c: 68:     IPR1bits.TMR1IP=1;
  2098  0070A2  809F               	bsf	159,0,c	;volatile
  2099                           
  2100                           ;setting_hardaware/setting.c: 69:     TMR1=timer_val;
  2101  0070A4  C2A5  FFCE         	movff	_timer_val,4046	;volatile
  2102  0070A8  C2A6  FFCF         	movff	_timer_val+1,4047	;volatile
  2103  0070AC  0012               	return		;funcret
  2104  0070AE                     __end_of_TMR1_Initialize:
  2105                           	opt callstack 0
  2106                           
  2107 ;; *************** function _PIN_MANAGER_Initialize *****************
  2108 ;; Defined at:
  2109 ;;		line 12 in file "setting_hardaware/pin_manager.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2123 ;;      Params:         0       0       0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0
  2126 ;;      Totals:         0       0       0       0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:   12
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_SYSTEM_Initialize
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text4
  2138  0070AE                     __ptext4:
  2139                           	opt callstack 0
  2140  0070AE                     _PIN_MANAGER_Initialize:
  2141                           	opt callstack 17
  2142                           
  2143                           ;setting_hardaware/pin_manager.c: 13:     ADCON1 = 0x0D;
  2144                           
  2145                           ;incstack = 0
  2146  0070AE  0E0D               	movlw	13
  2147  0070B0  6EC1               	movwf	193,c	;volatile
  2148                           
  2149                           ;setting_hardaware/pin_manager.c: 16:     TRISC=0X00;
  2150  0070B2  0E00               	movlw	0
  2151  0070B4  6E94               	movwf	148,c	;volatile
  2152                           
  2153                           ;setting_hardaware/pin_manager.c: 17:     TRISD=0X00;
  2154  0070B6  0E00               	movlw	0
  2155  0070B8  6E95               	movwf	149,c	;volatile
  2156                           
  2157                           ;setting_hardaware/pin_manager.c: 20:     TRISBbits.RB0=0;
  2158  0070BA  9093               	bcf	147,0,c	;volatile
  2159                           
  2160                           ;setting_hardaware/pin_manager.c: 23:     TRISA = 0x03;
  2161  0070BC  0E03               	movlw	3
  2162  0070BE  6E92               	movwf	146,c	;volatile
  2163  0070C0  0012               	return		;funcret
  2164  0070C2                     __end_of_PIN_MANAGER_Initialize:
  2165                           	opt callstack 0
  2166                           
  2167 ;; *************** function _OSCILLATOR_Initialize *****************
  2168 ;; Defined at:
  2169 ;;		line 84 in file "setting_hardaware/setting.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		None
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2183 ;;      Params:         0       0       0       0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0
  2186 ;;      Totals:         0       0       0       0       0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:   12
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_SYSTEM_Initialize
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text5
  2198  0070F0                     __ptext5:
  2199                           	opt callstack 0
  2200  0070F0                     _OSCILLATOR_Initialize:
  2201                           	opt callstack 17
  2202                           
  2203                           ;setting_hardaware/setting.c: 86:     IRCF2 = 1;
  2204                           
  2205                           ;incstack = 0
  2206  0070F0  8CD3               	bsf	4051,6,c	;volatile
  2207                           
  2208                           ;setting_hardaware/setting.c: 87:     IRCF1 = 1;
  2209  0070F2  8AD3               	bsf	4051,5,c	;volatile
  2210                           
  2211                           ;setting_hardaware/setting.c: 88:     IRCF0 = 0;
  2212  0070F4  98D3               	bcf	4051,4,c	;volatile
  2213  0070F6  0012               	return		;funcret
  2214  0070F8                     __end_of_OSCILLATOR_Initialize:
  2215                           	opt callstack 0
  2216                           
  2217 ;; *************** function _LCD_init *****************
  2218 ;; Defined at:
  2219 ;;		line 55 in file "setting_hardaware/LCD.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2233 ;;      Params:         0       0       0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       1       0       0
  2236 ;;      Totals:         0       0       0       0       1       0       0
  2237 ;;Total ram usage:        1 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:   14
  2240 ;; This function calls:
  2241 ;;		_Cmd
  2242 ;;		_Send2Lcd
  2243 ;; This function is called by:
  2244 ;;		_SYSTEM_Initialize
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text6
  2249  00694A                     __ptext6:
  2250                           	opt callstack 0
  2251  00694A                     _LCD_init:
  2252                           	opt callstack 15
  2253                           
  2254                           ;setting_hardaware/LCD.c: 57:     _delay((unsigned long)((15)*(4000000/4000.0)));
  2255                           
  2256                           ;incstack = 0
  2257  00694A  0E14               	movlw	20
  2258  00694C  0103               	movlb	3	; () banked
  2259  00694E  6F76               	movwf	??_LCD_init& (0+255),b
  2260  006950  0E79               	movlw	121
  2261  006952                     u15707:
  2262  006952  2EE8               	decfsz	wreg,f,c
  2263  006954  D7FE               	bra	u15707
  2264  006956  2F76               	decfsz	??_LCD_init& (0+255),f,b
  2265  006958  D7FC               	bra	u15707
  2266  00695A  D000               	nop2	
  2267                           
  2268                           ;setting_hardaware/LCD.c: 58:     Cmd(0X38);
  2269  00695C  0E00               	movlw	0
  2270  00695E  0103               	movlb	3	; () banked
  2271  006960  6F70               	movwf	(Cmd@Value+1)& (0+255),b
  2272  006962  0E38               	movlw	56
  2273  006964  6F6F               	movwf	Cmd@Value& (0+255),b
  2274  006966  EC74  F037         	call	_Cmd	;wreg free
  2275                           
  2276                           ;setting_hardaware/LCD.c: 59:     _delay((unsigned long)((125)*(4000000/4000000.0)));
  2277  00696A  0E29               	movlw	41
  2278  00696C                     u15717:
  2279  00696C  2EE8               	decfsz	wreg,f,c
  2280  00696E  D7FE               	bra	u15717
  2281  006970  D000               	nop2	
  2282                           
  2283                           ;setting_hardaware/LCD.c: 61:     Cmd(0X01);
  2284  006972  0E00               	movlw	0
  2285  006974  0103               	movlb	3	; () banked
  2286  006976  6F70               	movwf	(Cmd@Value+1)& (0+255),b
  2287  006978  0E01               	movlw	1
  2288  00697A  6F6F               	movwf	Cmd@Value& (0+255),b
  2289  00697C  EC74  F037         	call	_Cmd	;wreg free
  2290                           
  2291                           ;setting_hardaware/LCD.c: 62:     Cmd(0X06);
  2292  006980  0E00               	movlw	0
  2293  006982  0103               	movlb	3	; () banked
  2294  006984  6F70               	movwf	(Cmd@Value+1)& (0+255),b
  2295  006986  0E06               	movlw	6
  2296  006988  6F6F               	movwf	Cmd@Value& (0+255),b
  2297  00698A  EC74  F037         	call	_Cmd	;wreg free
  2298                           
  2299                           ;setting_hardaware/LCD.c: 63:     Cmd(0X0C);
  2300  00698E  0E00               	movlw	0
  2301  006990  0103               	movlb	3	; () banked
  2302  006992  6F70               	movwf	(Cmd@Value+1)& (0+255),b
  2303  006994  0E0C               	movlw	12
  2304  006996  6F6F               	movwf	Cmd@Value& (0+255),b
  2305  006998  EC74  F037         	call	_Cmd	;wreg free
  2306                           
  2307                           ;setting_hardaware/LCD.c: 64:     _delay((unsigned long)((125)*(4000000/4000000.0)));
  2308  00699C  0E29               	movlw	41
  2309  00699E                     u15727:
  2310  00699E  2EE8               	decfsz	wreg,f,c
  2311  0069A0  D7FE               	bra	u15727
  2312  0069A2  D000               	nop2	
  2313                           
  2314                           ;setting_hardaware/LCD.c: 65:     Send2Lcd(0x80,"monitor");
  2315  0069A4  0EA9               	movlw	low STR_1
  2316  0069A6  0103               	movlb	3	; () banked
  2317  0069A8  6F72               	movwf	Send2Lcd@Lcd& (0+255),b
  2318  0069AA  0E06               	movlw	high STR_1
  2319  0069AC  6F73               	movwf	(Send2Lcd@Lcd+1)& (0+255),b
  2320  0069AE  0E80               	movlw	128
  2321  0069B0  EC54  F035         	call	_Send2Lcd
  2322                           
  2323                           ;setting_hardaware/LCD.c: 66:     Send2Lcd(0xc0,"start");
  2324  0069B4  0EB1               	movlw	low STR_2
  2325  0069B6  0103               	movlb	3	; () banked
  2326  0069B8  6F72               	movwf	Send2Lcd@Lcd& (0+255),b
  2327  0069BA  0E06               	movlw	high STR_2
  2328  0069BC  6F73               	movwf	(Send2Lcd@Lcd+1)& (0+255),b
  2329  0069BE  0EC0               	movlw	192
  2330  0069C0  EC54  F035         	call	_Send2Lcd
  2331  0069C4  0012               	return		;funcret
  2332  0069C6                     __end_of_LCD_init:
  2333                           	opt callstack 0
  2334                           
  2335 ;; *************** function _Send2Lcd *****************
  2336 ;; Defined at:
  2337 ;;		line 41 in file "setting_hardaware/LCD.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  Adr             1    wreg     const unsigned char 
  2340 ;;  Lcd             2   14[BANK3 ] PTR const unsigned char 
  2341 ;;		 -> r(100), STR_2(6), STR_1(8), 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  Adr             1   17[BANK3 ] const unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2353 ;;      Params:         0       0       0       0       2       0       0
  2354 ;;      Locals:         0       0       0       0       1       0       0
  2355 ;;      Temps:          0       0       0       0       1       0       0
  2356 ;;      Totals:         0       0       0       0       4       0       0
  2357 ;;Total ram usage:        4 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:   13
  2360 ;; This function calls:
  2361 ;;		_Cmd
  2362 ;;		_Data
  2363 ;; This function is called by:
  2364 ;;		_LCD_init
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text7
  2369  006AA8                     __ptext7:
  2370                           	opt callstack 0
  2371  006AA8                     _Send2Lcd:
  2372                           	opt callstack 15
  2373                           
  2374                           ;incstack = 0
  2375                           ;Send2Lcd@Adr stored from wreg
  2376  006AA8  0103               	movlb	3	; () banked
  2377  006AAA  6F75               	movwf	Send2Lcd@Adr& (0+255),b
  2378                           
  2379                           ;setting_hardaware/LCD.c: 41: void Send2Lcd(const char Adr, const char *Lcd);setting_har
      +                          daware/LCD.c: 42: {;setting_hardaware/LCD.c: 43:  Cmd(Adr);
  2380  006AAC  C375  F36F         	movff	Send2Lcd@Adr,Cmd@Value
  2381  006AB0  0103               	movlb	3	; () banked
  2382  006AB2  6B70               	clrf	(Cmd@Value+1)& (0+255),b
  2383  006AB4  EC74  F037         	call	_Cmd	;wreg free
  2384                           
  2385                           ;setting_hardaware/LCD.c: 44:  while(*Lcd!='\0')
  2386  006AB8  D01A               	goto	l11361
  2387  006ABA                     l11357:
  2388                           
  2389                           ;setting_hardaware/LCD.c: 45:  {;setting_hardaware/LCD.c: 46:   Data(*Lcd);
  2390  006ABA  C372  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  2391  006ABE  C373  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  2392  006AC2  6AF8               	clrf	tblptru,c
  2393  006AC4  0E05               	movlw	(high __ramtop+-1)
  2394  006AC6  64F7               	cpfsgt	tblptrh,c
  2395  006AC8  D003               	bra	u15317
  2396  006ACA  0008               	tblrd		*
  2397  006ACC  50F5               	movf	tablat,w,c
  2398  006ACE  D005               	bra	u15310
  2399  006AD0                     u15317:
  2400  006AD0  CFF6 FFE1          	movff	tblptrl,fsr1l
  2401  006AD4  CFF7 FFE2          	movff	tblptrh,fsr1h
  2402  006AD8  50E7               	movf	indf1,w,c
  2403  006ADA                     u15310:
  2404  006ADA  0103               	movlb	3	; () banked
  2405  006ADC  6F74               	movwf	??_Send2Lcd& (0+255),b
  2406  006ADE  5174               	movf	??_Send2Lcd& (0+255),w,b
  2407  006AE0  6F6F               	movwf	Data@Value& (0+255),b
  2408  006AE2  6B70               	clrf	(Data@Value+1)& (0+255),b
  2409  006AE4  EC5C  F037         	call	_Data	;wreg free
  2410                           
  2411                           ;setting_hardaware/LCD.c: 47:   Lcd++;
  2412  006AE8  0103               	movlb	3	; () banked
  2413  006AEA  4B72               	infsnz	Send2Lcd@Lcd& (0+255),f,b
  2414  006AEC  2B73               	incf	(Send2Lcd@Lcd+1)& (0+255),f,b
  2415  006AEE                     l11361:
  2416                           
  2417                           ;setting_hardaware/LCD.c: 44:  while(*Lcd!='\0')
  2418  006AEE  C372  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  2419  006AF2  C373  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  2420  006AF6  6AF8               	clrf	tblptru,c
  2421  006AF8  0E05               	movlw	(high __ramtop+-1)
  2422  006AFA  64F7               	cpfsgt	tblptrh,c
  2423  006AFC  D003               	bra	u15327
  2424  006AFE  0008               	tblrd		*
  2425  006B00  50F5               	movf	tablat,w,c
  2426  006B02  D005               	bra	u15320
  2427  006B04                     u15327:
  2428  006B04  CFF6 FFE1          	movff	tblptrl,fsr1l
  2429  006B08  CFF7 FFE2          	movff	tblptrh,fsr1h
  2430  006B0C  50E7               	movf	indf1,w,c
  2431  006B0E                     u15320:
  2432  006B0E  0900               	iorlw	0
  2433  006B10  B4D8               	btfsc	status,2,c
  2434  006B12  0012               	return	
  2435  006B14  D7D2               	goto	l11357
  2436  006B16                     __end_of_Send2Lcd:
  2437                           	opt callstack 0
  2438                           
  2439 ;; *************** function _Data *****************
  2440 ;; Defined at:
  2441 ;;		line 28 in file "setting_hardaware/LCD.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  Value           2   11[BANK3 ] int 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2455 ;;      Params:         0       0       0       0       2       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       1       0       0
  2458 ;;      Totals:         0       0       0       0       3       0       0
  2459 ;;Total ram usage:        3 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:   12
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_Send2Lcd
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text8
  2470  006EB8                     __ptext8:
  2471                           	opt callstack 0
  2472  006EB8                     _Data:
  2473                           	opt callstack 15
  2474                           
  2475                           ;setting_hardaware/LCD.c: 28: void Data(int Value);setting_hardaware/LCD.c: 29: {;settin
      +                          g_hardaware/LCD.c: 30:  LATD = Value;
  2476                           
  2477                           ;incstack = 0
  2478  006EB8  C36F  FF8C         	movff	Data@Value,3980	;volatile
  2479                           
  2480                           ;setting_hardaware/LCD.c: 31:  LATCbits.LC4=1;
  2481  006EBC  888B               	bsf	139,4,c	;volatile
  2482                           
  2483                           ;setting_hardaware/LCD.c: 33:  LATCbits.LC6=0;
  2484  006EBE  9C8B               	bcf	139,6,c	;volatile
  2485                           
  2486                           ;setting_hardaware/LCD.c: 34:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2487  006EC0  0E08               	movlw	8
  2488  006EC2                     u15737:
  2489  006EC2  2EE8               	decfsz	wreg,f,c
  2490  006EC4  D7FE               	bra	u15737
  2491  006EC6  F000               	nop	
  2492                           
  2493                           ;setting_hardaware/LCD.c: 35:  LATCbits.LC6=1;
  2494  006EC8  8C8B               	bsf	139,6,c	;volatile
  2495                           
  2496                           ;setting_hardaware/LCD.c: 36:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2497  006ECA  0E08               	movlw	8
  2498  006ECC                     u15747:
  2499  006ECC  2EE8               	decfsz	wreg,f,c
  2500  006ECE  D7FE               	bra	u15747
  2501  006ED0  F000               	nop	
  2502                           
  2503                           ;setting_hardaware/LCD.c: 37:  LATCbits.LC6=0;
  2504  006ED2  9C8B               	bcf	139,6,c	;volatile
  2505                           
  2506                           ;setting_hardaware/LCD.c: 38:  _delay((unsigned long)((3)*(4000000/4000.0)));
  2507  006ED4  0E04               	movlw	4
  2508  006ED6  0103               	movlb	3	; () banked
  2509  006ED8  6F71               	movwf	??_Data& (0+255),b
  2510  006EDA  0EE4               	movlw	228
  2511  006EDC                     u15757:
  2512  006EDC  2EE8               	decfsz	wreg,f,c
  2513  006EDE  D7FE               	bra	u15757
  2514  006EE0  2F71               	decfsz	??_Data& (0+255),f,b
  2515  006EE2  D7FC               	bra	u15757
  2516  006EE4  F000               	nop	
  2517  006EE6  0012               	return		;funcret
  2518  006EE8                     __end_of_Data:
  2519                           	opt callstack 0
  2520                           
  2521 ;; *************** function _Cmd *****************
  2522 ;; Defined at:
  2523 ;;		line 15 in file "setting_hardaware/LCD.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  Value           2   11[BANK3 ] int 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2537 ;;      Params:         0       0       0       0       2       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       1       0       0
  2540 ;;      Totals:         0       0       0       0       3       0       0
  2541 ;;Total ram usage:        3 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:   12
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_Send2Lcd
  2548 ;;		_LCD_init
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text9
  2553  006EE8                     __ptext9:
  2554                           	opt callstack 0
  2555  006EE8                     _Cmd:
  2556                           	opt callstack 15
  2557                           
  2558                           ;setting_hardaware/LCD.c: 15: void Cmd(int Value);setting_hardaware/LCD.c: 16: {;setting
      +                          _hardaware/LCD.c: 17:  LATD = Value;
  2559                           
  2560                           ;incstack = 0
  2561  006EE8  C36F  FF8C         	movff	Cmd@Value,3980	;volatile
  2562                           
  2563                           ;setting_hardaware/LCD.c: 18:  LATCbits.LC4=0;
  2564  006EEC  988B               	bcf	139,4,c	;volatile
  2565                           
  2566                           ;setting_hardaware/LCD.c: 20:  LATCbits.LC6=0;
  2567  006EEE  9C8B               	bcf	139,6,c	;volatile
  2568                           
  2569                           ;setting_hardaware/LCD.c: 21:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2570  006EF0  0E08               	movlw	8
  2571  006EF2                     u15767:
  2572  006EF2  2EE8               	decfsz	wreg,f,c
  2573  006EF4  D7FE               	bra	u15767
  2574  006EF6  F000               	nop	
  2575                           
  2576                           ;setting_hardaware/LCD.c: 22:  LATCbits.LC6=1;
  2577  006EF8  8C8B               	bsf	139,6,c	;volatile
  2578                           
  2579                           ;setting_hardaware/LCD.c: 23:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2580  006EFA  0E08               	movlw	8
  2581  006EFC                     u15777:
  2582  006EFC  2EE8               	decfsz	wreg,f,c
  2583  006EFE  D7FE               	bra	u15777
  2584  006F00  F000               	nop	
  2585                           
  2586                           ;setting_hardaware/LCD.c: 24:  LATCbits.LC6=0;
  2587  006F02  9C8B               	bcf	139,6,c	;volatile
  2588                           
  2589                           ;setting_hardaware/LCD.c: 25:  _delay((unsigned long)((3)*(4000000/4000.0)));
  2590  006F04  0E04               	movlw	4
  2591  006F06  0103               	movlb	3	; () banked
  2592  006F08  6F71               	movwf	??_Cmd& (0+255),b
  2593  006F0A  0EE4               	movlw	228
  2594  006F0C                     u15787:
  2595  006F0C  2EE8               	decfsz	wreg,f,c
  2596  006F0E  D7FE               	bra	u15787
  2597  006F10  2F71               	decfsz	??_Cmd& (0+255),f,b
  2598  006F12  D7FC               	bra	u15787
  2599  006F14  F000               	nop	
  2600  006F16  0012               	return		;funcret
  2601  006F18                     __end_of_Cmd:
  2602                           	opt callstack 0
  2603                           
  2604 ;; *************** function _INTERRUPT_Initialize *****************
  2605 ;; Defined at:
  2606 ;;		line 5 in file "setting_hardaware/interrupt_manager.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		None
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2620 ;;      Params:         0       0       0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:   12
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_SYSTEM_Initialize
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text10
  2635  0070FE                     __ptext10:
  2636                           	opt callstack 0
  2637  0070FE                     _INTERRUPT_Initialize:
  2638                           	opt callstack 17
  2639                           
  2640                           ;setting_hardaware/interrupt_manager.c: 7:     RCONbits.IPEN = 1;
  2641                           
  2642                           ;incstack = 0
  2643  0070FE  8ED0               	bsf	208,7,c	;volatile
  2644                           
  2645                           ;setting_hardaware/interrupt_manager.c: 8:     INTCONbits.GIE = 1;
  2646  007100  8EF2               	bsf	242,7,c	;volatile
  2647  007102  0012               	return		;funcret
  2648  007104                     __end_of_INTERRUPT_Initialize:
  2649                           	opt callstack 0
  2650                           
  2651 ;; *************** function _ADC_Initialize *****************
  2652 ;; Defined at:
  2653 ;;		line 39 in file "setting_hardaware/adc.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2667 ;;      Params:         0       0       0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0       0       0
  2669 ;;      Temps:          0       0       0       0       0       0       0
  2670 ;;      Totals:         0       0       0       0       0       0       0
  2671 ;;Total ram usage:        0 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:   12
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_SYSTEM_Initialize
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text11
  2682  0070C2                     __ptext11:
  2683                           	opt callstack 0
  2684  0070C2                     _ADC_Initialize:
  2685                           	opt callstack 17
  2686                           
  2687                           ;setting_hardaware/adc.c: 41:     ADCON1 = 0x0D;
  2688                           
  2689                           ;incstack = 0
  2690  0070C2  0E0D               	movlw	13
  2691  0070C4  6EC1               	movwf	193,c	;volatile
  2692                           
  2693                           ;setting_hardaware/adc.c: 42:     ADCON2=0x94;
  2694  0070C6  0E94               	movlw	148
  2695  0070C8  6EC0               	movwf	192,c	;volatile
  2696                           
  2697                           ;setting_hardaware/adc.c: 43:     ADRES=0;
  2698  0070CA  0E00               	movlw	0
  2699  0070CC  6EC4               	movwf	196,c	;volatile
  2700  0070CE  0E00               	movlw	0
  2701  0070D0  6EC3               	movwf	195,c	;volatile
  2702  0070D2  0012               	return		;funcret
  2703  0070D4                     __end_of_ADC_Initialize:
  2704                           	opt callstack 0
  2705                           
  2706 ;; *************** function _Lo_ISR *****************
  2707 ;; Defined at:
  2708 ;;		line 53 in file "setting_hardaware/uart.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2722 ;;      Params:         0       0       0       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       5       0       0
  2725 ;;      Totals:         0       0       0       0       5       0       0
  2726 ;;Total ram usage:        5 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:   11
  2729 ;; This function calls:
  2730 ;;		_MyusartRead
  2731 ;; This function is called by:
  2732 ;;		Interrupt level 1
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	intcodelo
  2737  000018                     __pintcodelo:
  2738                           	opt callstack 0
  2739  000018                     _Lo_ISR:
  2740                           	opt callstack 15
  2741                           
  2742                           ;incstack = 0
  2743  000018  807E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2744  00001A  CFD8 F36A          	movff	status,??_Lo_ISR
  2745  00001E  CFE8 F36B          	movff	wreg,??_Lo_ISR+1
  2746  000022  CFE0 F36C          	movff	bsr,??_Lo_ISR+2
  2747  000026  CFD9 F36D          	movff	fsr2l,??_Lo_ISR+3
  2748  00002A  CFDA F36E          	movff	fsr2h,??_Lo_ISR+4
  2749                           
  2750                           ;setting_hardaware/uart.c: 55:     if(RCIF)
  2751  00002E  AA9E               	btfss	3998,5,c	;volatile
  2752  000030  D007               	goto	i1l100
  2753                           
  2754                           ;setting_hardaware/uart.c: 56:     {;setting_hardaware/uart.c: 57:         if(RCSTAbits.
      +                          OERR)
  2755  000032  A2AB               	btfss	171,1,c	;volatile
  2756  000034  D003               	goto	i1l11677
  2757                           
  2758                           ;setting_hardaware/uart.c: 58:         {;setting_hardaware/uart.c: 59:             CREN 
      +                          = 0;
  2759  000036  98AB               	bcf	4011,4,c	;volatile
  2760                           
  2761                           ;setting_hardaware/uart.c: 60:             __nop();
  2762  000038  F000               	nop	
  2763                           
  2764                           ;setting_hardaware/uart.c: 61:             CREN = 1;
  2765  00003A  88AB               	bsf	4011,4,c	;volatile
  2766  00003C                     i1l11677:
  2767                           
  2768                           ;setting_hardaware/uart.c: 64:         MyusartRead();
  2769  00003C  EC66  F036         	call	_MyusartRead	;wreg free
  2770  000040                     i1l100:
  2771  000040  C36E  FFDA         	movff	??_Lo_ISR+4,fsr2h
  2772  000044  C36D  FFD9         	movff	??_Lo_ISR+3,fsr2l
  2773  000048  C36C  FFE0         	movff	??_Lo_ISR+2,bsr
  2774  00004C  C36B  FFE8         	movff	??_Lo_ISR+1,wreg
  2775  000050  C36A  FFD8         	movff	??_Lo_ISR,status
  2776  000054  907E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2777  000056  0010               	retfie	
  2778  000058                     __end_of_Lo_ISR:
  2779                           	opt callstack 0
  2780                           
  2781 ;; *************** function _MyusartRead *****************
  2782 ;; Defined at:
  2783 ;;		line 32 in file "setting_hardaware/uart.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2797 ;;      Params:         0       0       0       0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0
  2800 ;;      Totals:         0       0       0       0       0       0       0
  2801 ;;Total ram usage:        0 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:   10
  2804 ;; This function calls:
  2805 ;;		_UART_Write
  2806 ;;		___awmod
  2807 ;; This function is called by:
  2808 ;;		_Lo_ISR
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text13
  2813  006CCC                     __ptext13:
  2814                           	opt callstack 0
  2815  006CCC                     _MyusartRead:
  2816                           	opt callstack 15
  2817                           
  2818                           ;setting_hardaware/uart.c: 34:     mystring[lenStr] = RCREG;
  2819                           
  2820                           ;incstack = 0
  2821  006CCC  0E88               	movlw	low _mystring
  2822  006CCE  0102               	movlb	2	; () banked
  2823  006CD0  252A               	addwf	_lenStr& (0+255),w,b
  2824  006CD2  6ED9               	movwf	fsr2l,c
  2825  006CD4  0E02               	movlw	high _mystring
  2826  006CD6  212B               	addwfc	(_lenStr+1)& (0+255),w,b
  2827  006CD8  6EDA               	movwf	fsr2h,c
  2828  006CDA  CFAE FFDF          	movff	4014,indf2	;volatile
  2829                           
  2830                           ; BSR set to: 2
  2831                           ;setting_hardaware/uart.c: 35:     UART_Write(mystring[lenStr]);
  2832  006CDE  0E88               	movlw	low _mystring
  2833  006CE0  252A               	addwf	_lenStr& (0+255),w,b
  2834  006CE2  6ED9               	movwf	fsr2l,c
  2835  006CE4  0E02               	movlw	high _mystring
  2836  006CE6  212B               	addwfc	(_lenStr+1)& (0+255),w,b
  2837  006CE8  6EDA               	movwf	fsr2h,c
  2838  006CEA  50DF               	movf	indf2,w,c
  2839  006CEC  EC6A  F038         	call	_UART_Write
  2840                           
  2841                           ;setting_hardaware/uart.c: 36:     lenStr++;
  2842  006CF0  0102               	movlb	2	; () banked
  2843  006CF2  4B2A               	infsnz	_lenStr& (0+255),f,b
  2844  006CF4  2B2B               	incf	(_lenStr+1)& (0+255),f,b
  2845                           
  2846                           ; BSR set to: 2
  2847                           ;setting_hardaware/uart.c: 37:     lenStr %= 10;
  2848  006CF6  C22A  F364         	movff	_lenStr,___awmod@dividend
  2849  006CFA  C22B  F365         	movff	_lenStr+1,___awmod@dividend+1
  2850  006CFE  0E00               	movlw	0
  2851  006D00  0103               	movlb	3	; () banked
  2852  006D02  6F67               	movwf	(___awmod@divisor+1)& (0+255),b
  2853  006D04  0E0A               	movlw	10
  2854  006D06  6F66               	movwf	___awmod@divisor& (0+255),b
  2855  006D08  ECE3  F034         	call	___awmod	;wreg free
  2856  006D0C  C364  F22A         	movff	?___awmod,_lenStr
  2857  006D10  C365  F22B         	movff	?___awmod+1,_lenStr+1
  2858  006D14  0012               	return		;funcret
  2859  006D16                     __end_of_MyusartRead:
  2860                           	opt callstack 0
  2861                           
  2862 ;; *************** function ___awmod *****************
  2863 ;; Defined at:
  2864 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  dividend        2    0[BANK3 ] int 
  2867 ;;  divisor         2    2[BANK3 ] int 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  sign            1    5[BANK3 ] unsigned char 
  2870 ;;  counter         1    4[BANK3 ] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  2    0[BANK3 ] int 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2880 ;;      Params:         0       0       0       0       4       0       0
  2881 ;;      Locals:         0       0       0       0       2       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       6       0       0
  2884 ;;Total ram usage:        6 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    9
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_MyusartRead
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text14
  2895  0069C6                     __ptext14:
  2896                           	opt callstack 0
  2897  0069C6                     ___awmod:
  2898                           	opt callstack 15
  2899                           
  2900                           ;incstack = 0
  2901  0069C6  0E00               	movlw	0
  2902  0069C8  0103               	movlb	3	; () banked
  2903  0069CA  6F69               	movwf	___awmod@sign& (0+255),b
  2904                           
  2905                           ; BSR set to: 3
  2906  0069CC  AF65               	btfss	(___awmod@dividend+1)& (0+255),7,b
  2907  0069CE  D006               	goto	i1l11559
  2908                           
  2909                           ; BSR set to: 3
  2910  0069D0  6D64               	negf	___awmod@dividend& (0+255),b
  2911  0069D2  1F65               	comf	(___awmod@dividend+1)& (0+255),f,b
  2912  0069D4  B0D8               	btfsc	status,0,c
  2913  0069D6  2B65               	incf	(___awmod@dividend+1)& (0+255),f,b
  2914                           
  2915                           ; BSR set to: 3
  2916  0069D8  0E01               	movlw	1
  2917  0069DA  6F69               	movwf	___awmod@sign& (0+255),b
  2918  0069DC                     i1l11559:
  2919                           
  2920                           ; BSR set to: 3
  2921  0069DC  AF67               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2922  0069DE  D004               	goto	i1l11563
  2923                           
  2924                           ; BSR set to: 3
  2925  0069E0  6D66               	negf	___awmod@divisor& (0+255),b
  2926  0069E2  1F67               	comf	(___awmod@divisor+1)& (0+255),f,b
  2927  0069E4  B0D8               	btfsc	status,0,c
  2928  0069E6  2B67               	incf	(___awmod@divisor+1)& (0+255),f,b
  2929  0069E8                     i1l11563:
  2930                           
  2931                           ; BSR set to: 3
  2932  0069E8  5166               	movf	___awmod@divisor& (0+255),w,b
  2933  0069EA  1167               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2934  0069EC  B4D8               	btfsc	status,2,c
  2935  0069EE  D018               	goto	i1l11579
  2936                           
  2937                           ; BSR set to: 3
  2938  0069F0  0E01               	movlw	1
  2939  0069F2  6F68               	movwf	___awmod@counter& (0+255),b
  2940  0069F4  D004               	goto	i1l11569
  2941  0069F6                     i1l11567:
  2942                           
  2943                           ; BSR set to: 3
  2944  0069F6  90D8               	bcf	status,0,c
  2945  0069F8  3766               	rlcf	___awmod@divisor& (0+255),f,b
  2946  0069FA  3767               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2947  0069FC  2B68               	incf	___awmod@counter& (0+255),f,b
  2948  0069FE                     i1l11569:
  2949                           
  2950                           ; BSR set to: 3
  2951  0069FE  AF67               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2952  006A00  D7FA               	goto	i1l11567
  2953  006A02                     i1u1559_20:
  2954                           
  2955                           ; BSR set to: 3
  2956  006A02  5166               	movf	___awmod@divisor& (0+255),w,b
  2957  006A04  5D64               	subwf	___awmod@dividend& (0+255),w,b
  2958  006A06  5167               	movf	(___awmod@divisor+1)& (0+255),w,b
  2959  006A08  5965               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2960  006A0A  A0D8               	btfss	status,0,c
  2961  006A0C  D004               	goto	i1l11575
  2962                           
  2963                           ; BSR set to: 3
  2964  006A0E  5166               	movf	___awmod@divisor& (0+255),w,b
  2965  006A10  5F64               	subwf	___awmod@dividend& (0+255),f,b
  2966  006A12  5167               	movf	(___awmod@divisor+1)& (0+255),w,b
  2967  006A14  5B65               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2968  006A16                     i1l11575:
  2969                           
  2970                           ; BSR set to: 3
  2971  006A16  90D8               	bcf	status,0,c
  2972  006A18  3367               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2973  006A1A  3366               	rrcf	___awmod@divisor& (0+255),f,b
  2974                           
  2975                           ; BSR set to: 3
  2976  006A1C  2F68               	decfsz	___awmod@counter& (0+255),f,b
  2977  006A1E  D7F1               	goto	i1u1559_20
  2978  006A20                     i1l11579:
  2979                           
  2980                           ; BSR set to: 3
  2981  006A20  5169               	movf	___awmod@sign& (0+255),w,b
  2982  006A22  B4D8               	btfsc	status,2,c
  2983  006A24  D004               	goto	i1l11583
  2984                           
  2985                           ; BSR set to: 3
  2986  006A26  6D64               	negf	___awmod@dividend& (0+255),b
  2987  006A28  1F65               	comf	(___awmod@dividend+1)& (0+255),f,b
  2988  006A2A  B0D8               	btfsc	status,0,c
  2989  006A2C  2B65               	incf	(___awmod@dividend+1)& (0+255),f,b
  2990  006A2E                     i1l11583:
  2991                           
  2992                           ; BSR set to: 3
  2993  006A2E  C364  F364         	movff	___awmod@dividend,?___awmod
  2994  006A32  C365  F365         	movff	___awmod@dividend+1,?___awmod+1
  2995                           
  2996                           ; BSR set to: 3
  2997  006A36  0012               	return		;funcret
  2998  006A38                     __end_of___awmod:
  2999                           	opt callstack 0
  3000                           
  3001 ;; *************** function _UART_Write *****************
  3002 ;; Defined at:
  3003 ;;		line 11 in file "setting_hardaware/uart.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  data            1    wreg     unsigned char 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  data            1    0[BANK3 ] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3017 ;;      Params:         0       0       0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       1       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0
  3020 ;;      Totals:         0       0       0       0       1       0       0
  3021 ;;Total ram usage:        1 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    9
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_MyusartRead
  3028 ;;		_UART_Write_Text
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text15
  3033  0070D4                     __ptext15:
  3034                           	opt callstack 0
  3035  0070D4                     _UART_Write:
  3036                           	opt callstack 15
  3037                           
  3038                           ; BSR set to: 3
  3039                           ;incstack = 0
  3040                           ;UART_Write@data stored from wreg
  3041  0070D4  0103               	movlb	3	; () banked
  3042  0070D6  6F64               	movwf	UART_Write@data& (0+255),b
  3043  0070D8                     
  3044                           ;setting_hardaware/uart.c: 11: void UART_Write(unsigned char data);setting_hardaware/uar
      +                          t.c: 12: {;setting_hardaware/uart.c: 13:     while(!TXSTAbits.TRMT);
  3045  0070D8  A2AC               	btfss	172,1,c	;volatile
  3046  0070DA  D7FE               	goto	i1l11507
  3047                           
  3048                           ;setting_hardaware/uart.c: 14:     TXREG = data;
  3049  0070DC  C364  FFAD         	movff	UART_Write@data,4013	;volatile
  3050  0070E0  0012               	return		;funcret
  3051  0070E2                     __end_of_UART_Write:
  3052                           	opt callstack 0
  3053                           
  3054 ;; *************** function _Hi_ISR *****************
  3055 ;; Defined at:
  3056 ;;		line 22 in file "main.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3070 ;;      Params:         0       0       0       0       0       0       0
  3071 ;;      Locals:         0       0       6       0       0       0       0
  3072 ;;      Temps:          0       0       0      11       0       0       0
  3073 ;;      Totals:         0       0       6      11       0       0       0
  3074 ;;Total ram usage:       17 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    8
  3077 ;; This function calls:
  3078 ;;		_ADC_Read
  3079 ;;		_LCD_clear
  3080 ;;		_MQ_Read
  3081 ;;		___fltol
  3082 ;;		_memset
  3083 ;;		_sprintf
  3084 ;;		i2_Send2Lcd
  3085 ;; This function is called by:
  3086 ;;		Interrupt level 2
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	intcode
  3091  000008                     __pintcode:
  3092                           	opt callstack 0
  3093  000008                     _Hi_ISR:
  3094                           	opt callstack 15
  3095                           
  3096                           ;incstack = 0
  3097  000008  827E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3098  00000A  EDFD  F02A         	call	int_func,f	;refresh shadow registers
  3099                           
  3100                           	psect	intcode_body
  3101  0055FA                     __pintcode_body:
  3102                           	opt callstack 15
  3103  0055FA                     int_func:
  3104                           	opt callstack 15
  3105  0055FA  0006               	pop		; remove dummy address from shadow register refresh
  3106  0055FC  CFE1 F2E2          	movff	fsr1l,??_Hi_ISR+1
  3107  005600  CFE2 F2E3          	movff	fsr1h,??_Hi_ISR+2
  3108  005604  CFD9 F2E4          	movff	fsr2l,??_Hi_ISR+3
  3109  005608  CFDA F2E5          	movff	fsr2h,??_Hi_ISR+4
  3110  00560C  CFF3 F2E6          	movff	prodl,??_Hi_ISR+5
  3111  005610  CFF4 F2E7          	movff	prodh,??_Hi_ISR+6
  3112  005614  CFF6 F2E8          	movff	tblptrl,??_Hi_ISR+7
  3113  005618  CFF7 F2E9          	movff	tblptrh,??_Hi_ISR+8
  3114  00561C  CFF8 F2EA          	movff	tblptru,??_Hi_ISR+9
  3115  005620  CFF5 F2EB          	movff	tablat,??_Hi_ISR+10
  3116                           
  3117                           ;main.c: 24:     if(PIR1bits.TMR1IF&&PIE1bits.TMR1IE) {
  3118  005624  B09E               	btfsc	158,0,c	;volatile
  3119  005626  A09D               	btfss	157,0,c	;volatile
  3120  005628  D0B4               	goto	i2l265
  3121                           
  3122                           ;main.c: 25:         if(count<cycle){
  3123  00562A  0102               	movlb	2	; () banked
  3124  00562C  519D               	movf	_cycle& (0+255),w,b
  3125  00562E  5D28               	subwf	_count& (0+255),w,b
  3126  005630  5129               	movf	(_count+1)& (0+255),w,b
  3127  005632  0A80               	xorlw	128
  3128  005634  6FE1               	movwf	??_Hi_ISR& (0+255),b
  3129  005636  519E               	movf	(_cycle+1)& (0+255),w,b
  3130  005638  0A80               	xorlw	128
  3131  00563A  59E1               	subwfb	??_Hi_ISR& (0+255),w,b
  3132  00563C  B0D8               	btfsc	status,0,c
  3133  00563E  D003               	goto	i2l11691
  3134                           
  3135                           ; BSR set to: 2
  3136                           ;main.c: 26:             count++;
  3137  005640  4B28               	infsnz	_count& (0+255),f,b
  3138  005642  2B29               	incf	(_count+1)& (0+255),f,b
  3139                           
  3140                           ;main.c: 27:         }
  3141  005644  D0A1               	goto	i2l11719
  3142  005646                     i2l11691:
  3143                           
  3144                           ; BSR set to: 2
  3145                           ;main.c: 31:             count=0;
  3146  005646  0E00               	movlw	0
  3147  005648  6F29               	movwf	(_count+1)& (0+255),b
  3148  00564A  0E00               	movlw	0
  3149  00564C  6F28               	movwf	_count& (0+255),b
  3150                           
  3151                           ; BSR set to: 2
  3152                           ;main.c: 32:             memset(r,'\0',sizeof(r));
  3153  00564E  0E00               	movlw	low _r
  3154  005650  6E01               	movwf	memset@dest^0,c
  3155  005652  0E03               	movlw	high _r
  3156  005654  6E02               	movwf	(memset@dest+1)^0,c
  3157  005656  0E00               	movlw	0
  3158  005658  6E04               	movwf	(memset@c+1)^0,c
  3159  00565A  0E00               	movlw	0
  3160  00565C  6E03               	movwf	memset@c^0,c
  3161  00565E  0E00               	movlw	0
  3162  005660  6E06               	movwf	(memset@n+1)^0,c
  3163  005662  0E64               	movlw	100
  3164  005664  6E05               	movwf	memset@n^0,c
  3165  005666  EC4C  F02F         	call	_memset	;wreg free
  3166                           
  3167                           ;main.c: 34:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  3168  00566A  0E21               	movlw	33
  3169  00566C                     i2u1579_47:
  3170  00566C  2EE8               	decfsz	wreg,f,c
  3171  00566E  D7FE               	bra	i2u1579_47
  3172  005670  F000               	nop	
  3173                           
  3174                           ;main.c: 35:             sprintf(r,"%s%.2f C",r,ADC_Read(0));
  3175  005672  0E00               	movlw	low _r
  3176  005674  0102               	movlb	2	; () banked
  3177  005676  6FCB               	movwf	sprintf@s& (0+255),b
  3178  005678  0E03               	movlw	high _r
  3179  00567A  6FCC               	movwf	(sprintf@s+1)& (0+255),b
  3180  00567C  0EA0               	movlw	low STR_3
  3181  00567E  6FCD               	movwf	sprintf@fmt& (0+255),b
  3182  005680  0E06               	movlw	high STR_3
  3183  005682  6FCE               	movwf	(sprintf@fmt+1)& (0+255),b
  3184  005684  0E00               	movlw	low _r
  3185  005686  6FCF               	movwf	(?_sprintf+4)& (0+255),b
  3186  005688  0E03               	movlw	high _r
  3187  00568A  6FD0               	movwf	(?_sprintf+5)& (0+255),b
  3188  00568C  0E00               	movlw	0
  3189  00568E  6E4C               	movwf	(ADC_Read@channel+1)^0,c
  3190  005690  0E00               	movlw	0
  3191  005692  6E4B               	movwf	ADC_Read@channel^0,c
  3192  005694  EC98  F031         	call	_ADC_Read	;wreg free
  3193  005698  C04B  F2D1         	movff	?_ADC_Read,?_sprintf+6
  3194  00569C  C04C  F2D2         	movff	?_ADC_Read+1,?_sprintf+7
  3195  0056A0  C04D  F2D3         	movff	?_ADC_Read+2,?_sprintf+8
  3196  0056A4  C04E  F2D4         	movff	?_ADC_Read+3,?_sprintf+9
  3197  0056A8  ECED  F035         	call	_sprintf	;wreg free
  3198                           
  3199                           ;main.c: 37:             LCD_clear();
  3200  0056AC  EC71  F038         	call	_LCD_clear	;wreg free
  3201                           
  3202                           ;main.c: 38:             Send2Lcd(0x80,r);
  3203  0056B0  0E00               	movlw	low _r
  3204  0056B2  6E04               	movwf	i2Send2Lcd@Lcd^0,c
  3205  0056B4  0E03               	movlw	high _r
  3206  0056B6  6E05               	movwf	(i2Send2Lcd@Lcd+1)^0,c
  3207  0056B8  0E80               	movlw	128
  3208  0056BA  EC8B  F035         	call	i2_Send2Lcd
  3209                           
  3210                           ;main.c: 41:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  3211  0056BE  0E21               	movlw	33
  3212  0056C0                     i2u1580_47:
  3213  0056C0  2EE8               	decfsz	wreg,f,c
  3214  0056C2  D7FE               	bra	i2u1580_47
  3215  0056C4  F000               	nop	
  3216                           
  3217                           ;main.c: 42:             MQ_Read(value);
  3218  0056C6  0E7C               	movlw	low _value
  3219  0056C8  0100               	movlb	0	; () banked
  3220  0056CA  6FEA               	movwf	MQ_Read@values& (0+255),b
  3221  0056CC  0E02               	movlw	high _value
  3222  0056CE  6FEB               	movwf	(MQ_Read@values+1)& (0+255),b
  3223  0056D0  EC03  F029         	call	_MQ_Read	;wreg free
  3224                           
  3225                           ;main.c: 44:             memset(r,'\0',sizeof(r));
  3226  0056D4  0E00               	movlw	low _r
  3227  0056D6  6E01               	movwf	memset@dest^0,c
  3228  0056D8  0E03               	movlw	high _r
  3229  0056DA  6E02               	movwf	(memset@dest+1)^0,c
  3230  0056DC  0E00               	movlw	0
  3231  0056DE  6E04               	movwf	(memset@c+1)^0,c
  3232  0056E0  0E00               	movlw	0
  3233  0056E2  6E03               	movwf	memset@c^0,c
  3234  0056E4  0E00               	movlw	0
  3235  0056E6  6E06               	movwf	(memset@n+1)^0,c
  3236  0056E8  0E64               	movlw	100
  3237  0056EA  6E05               	movwf	memset@n^0,c
  3238  0056EC  EC4C  F02F         	call	_memset	;wreg free
  3239                           
  3240                           ;main.c: 45:             sprintf(r,"%s%d %d %d",r,(int)value[0],(int)value[1],(int)value
      +                          [2]);
  3241  0056F0  C27C  F0CA         	movff	_value,___fltol@f1
  3242  0056F4  C27D  F0CB         	movff	_value+1,___fltol@f1+1
  3243  0056F8  C27E  F0CC         	movff	_value+2,___fltol@f1+2
  3244  0056FC  C27F  F0CD         	movff	_value+3,___fltol@f1+3
  3245  005700  ECD2  F032         	call	___fltol	;wreg free
  3246  005704  C0CA  F1FA         	movff	?___fltol,_Hi_ISR$2061
  3247  005708  C0CB  F1FB         	movff	?___fltol+1,_Hi_ISR$2061+1
  3248                           
  3249                           ;main.c: 45:             sprintf(r,"%s%d %d %d",r,(int)value[0],(int)value[1],(int)value
      +                          [2]);
  3250  00570C  C280  F0CA         	movff	_value+4,___fltol@f1
  3251  005710  C281  F0CB         	movff	_value+5,___fltol@f1+1
  3252  005714  C282  F0CC         	movff	_value+6,___fltol@f1+2
  3253  005718  C283  F0CD         	movff	_value+7,___fltol@f1+3
  3254  00571C  ECD2  F032         	call	___fltol	;wreg free
  3255  005720  C0CA  F1FC         	movff	?___fltol,_Hi_ISR$2062
  3256  005724  C0CB  F1FD         	movff	?___fltol+1,_Hi_ISR$2062+1
  3257                           
  3258                           ;main.c: 45:             sprintf(r,"%s%d %d %d",r,(int)value[0],(int)value[1],(int)value
      +                          [2]);
  3259  005728  C284  F0CA         	movff	_value+8,___fltol@f1
  3260  00572C  C285  F0CB         	movff	_value+9,___fltol@f1+1
  3261  005730  C286  F0CC         	movff	_value+10,___fltol@f1+2
  3262  005734  C287  F0CD         	movff	_value+11,___fltol@f1+3
  3263  005738  ECD2  F032         	call	___fltol	;wreg free
  3264  00573C  C0CA  F1FE         	movff	?___fltol,_Hi_ISR$2063
  3265  005740  C0CB  F1FF         	movff	?___fltol+1,_Hi_ISR$2063+1
  3266                           
  3267                           ;main.c: 45:             sprintf(r,"%s%d %d %d",r,(int)value[0],(int)value[1],(int)value
      +                          [2]);
  3268  005744  0E00               	movlw	low _r
  3269  005746  0102               	movlb	2	; () banked
  3270  005748  6FCB               	movwf	sprintf@s& (0+255),b
  3271  00574A  0E03               	movlw	high _r
  3272  00574C  6FCC               	movwf	(sprintf@s+1)& (0+255),b
  3273  00574E  0E95               	movlw	low STR_4
  3274  005750  6FCD               	movwf	sprintf@fmt& (0+255),b
  3275  005752  0E06               	movlw	high STR_4
  3276  005754  6FCE               	movwf	(sprintf@fmt+1)& (0+255),b
  3277  005756  0E00               	movlw	low _r
  3278  005758  6FCF               	movwf	(?_sprintf+4)& (0+255),b
  3279  00575A  0E03               	movlw	high _r
  3280  00575C  6FD0               	movwf	(?_sprintf+5)& (0+255),b
  3281  00575E  C1FA  F2D1         	movff	_Hi_ISR$2061,?_sprintf+6
  3282  005762  C1FB  F2D2         	movff	_Hi_ISR$2061+1,?_sprintf+7
  3283  005766  C1FC  F2D3         	movff	_Hi_ISR$2062,?_sprintf+8
  3284  00576A  C1FD  F2D4         	movff	_Hi_ISR$2062+1,?_sprintf+9
  3285  00576E  C1FE  F2D5         	movff	_Hi_ISR$2063,?_sprintf+10
  3286  005772  C1FF  F2D6         	movff	_Hi_ISR$2063+1,?_sprintf+11
  3287  005776  ECED  F035         	call	_sprintf	;wreg free
  3288                           
  3289                           ;main.c: 46:             Send2Lcd(0xc0,r);
  3290  00577A  0E00               	movlw	low _r
  3291  00577C  6E04               	movwf	i2Send2Lcd@Lcd^0,c
  3292  00577E  0E03               	movlw	high _r
  3293  005780  6E05               	movwf	(i2Send2Lcd@Lcd+1)^0,c
  3294  005782  0EC0               	movlw	192
  3295  005784  EC8B  F035         	call	i2_Send2Lcd
  3296  005788                     i2l11719:
  3297                           
  3298                           ;main.c: 60:         PIR1bits.TMR1IF=0;
  3299  005788  909E               	bcf	158,0,c	;volatile
  3300                           
  3301                           ;main.c: 61:         TMR1=timer_val;
  3302  00578A  C2A5  FFCE         	movff	_timer_val,4046	;volatile
  3303  00578E  C2A6  FFCF         	movff	_timer_val+1,4047	;volatile
  3304  005792                     i2l265:
  3305  005792  C2EB  FFF5         	movff	??_Hi_ISR+10,tablat
  3306  005796  C2EA  FFF8         	movff	??_Hi_ISR+9,tblptru
  3307  00579A  C2E9  FFF7         	movff	??_Hi_ISR+8,tblptrh
  3308  00579E  C2E8  FFF6         	movff	??_Hi_ISR+7,tblptrl
  3309  0057A2  C2E7  FFF4         	movff	??_Hi_ISR+6,prodh
  3310  0057A6  C2E6  FFF3         	movff	??_Hi_ISR+5,prodl
  3311  0057AA  C2E5  FFDA         	movff	??_Hi_ISR+4,fsr2h
  3312  0057AE  C2E4  FFD9         	movff	??_Hi_ISR+3,fsr2l
  3313  0057B2  C2E3  FFE2         	movff	??_Hi_ISR+2,fsr1h
  3314  0057B6  C2E2  FFE1         	movff	??_Hi_ISR+1,fsr1l
  3315  0057BA  927E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3316  0057BC  0011               	retfie		f
  3317  0057BE                     __end_of_Hi_ISR:
  3318                           	opt callstack 0
  3319                           
  3320 ;; *************** function i2_Send2Lcd *****************
  3321 ;; Defined at:
  3322 ;;		line 41 in file "setting_hardaware/LCD.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  Adr             1    wreg     const unsigned char 
  3325 ;;  Lcd             2    3[COMRAM] PTR const unsigned char 
  3326 ;;		 -> r(100), STR_2(6), STR_1(8), 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  Adr             1    6[COMRAM] const unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3338 ;;      Params:         2       0       0       0       0       0       0
  3339 ;;      Locals:         1       0       0       0       0       0       0
  3340 ;;      Temps:          1       0       0       0       0       0       0
  3341 ;;      Totals:         4       0       0       0       0       0       0
  3342 ;;Total ram usage:        4 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    1
  3345 ;; This function calls:
  3346 ;;		i2_Cmd
  3347 ;;		i2_Data
  3348 ;; This function is called by:
  3349 ;;		_Hi_ISR
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text17
  3354  006B16                     __ptext17:
  3355                           	opt callstack 0
  3356  006B16                     i2_Send2Lcd:
  3357                           	opt callstack 21
  3358                           
  3359                           ;incstack = 0
  3360                           ;i2Send2Lcd@Adr stored from wreg
  3361  006B16  6E07               	movwf	i2Send2Lcd@Adr^0,c
  3362                           
  3363                           ;setting_hardaware/LCD.c: 41: void Send2Lcd(const char Adr, const char *Lcd);setting_har
      +                          daware/LCD.c: 42: {;setting_hardaware/LCD.c: 43:  Cmd(Adr);
  3364  006B18  C007  F001         	movff	i2Send2Lcd@Adr,i2Cmd@Value
  3365  006B1C  6A02               	clrf	(i2Cmd@Value+1)^0,c
  3366  006B1E  ECEA  F037         	call	i2_Cmd	;wreg free
  3367                           
  3368                           ;setting_hardaware/LCD.c: 44:  while(*Lcd!='\0')
  3369  006B22  D018               	goto	i2l9259
  3370  006B24                     i2l9255:
  3371                           
  3372                           ;setting_hardaware/LCD.c: 45:  {;setting_hardaware/LCD.c: 46:   Data(*Lcd);
  3373  006B24  C004  FFF6         	movff	i2Send2Lcd@Lcd,tblptrl
  3374  006B28  C005  FFF7         	movff	i2Send2Lcd@Lcd+1,tblptrh
  3375  006B2C  6AF8               	clrf	tblptru,c
  3376  006B2E  0E05               	movlw	(high __ramtop+-1)
  3377  006B30  64F7               	cpfsgt	tblptrh,c
  3378  006B32  D003               	bra	i2u1186_47
  3379  006B34  0008               	tblrd		*
  3380  006B36  50F5               	movf	tablat,w,c
  3381  006B38  D005               	bra	i2u1186_40
  3382  006B3A                     i2u1186_47:
  3383  006B3A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3384  006B3E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3385  006B42  50E7               	movf	indf1,w,c
  3386  006B44                     i2u1186_40:
  3387  006B44  6E06               	movwf	??i2_Send2Lcd^0,c
  3388  006B46  5006               	movf	??i2_Send2Lcd^0,w,c
  3389  006B48  6E01               	movwf	i2Data@Value^0,c
  3390  006B4A  6A02               	clrf	(i2Data@Value+1)^0,c
  3391  006B4C  ECBC  F037         	call	i2_Data	;wreg free
  3392                           
  3393                           ;setting_hardaware/LCD.c: 47:   Lcd++;
  3394  006B50  4A04               	infsnz	i2Send2Lcd@Lcd^0,f,c
  3395  006B52  2A05               	incf	(i2Send2Lcd@Lcd+1)^0,f,c
  3396  006B54                     i2l9259:
  3397                           
  3398                           ;setting_hardaware/LCD.c: 44:  while(*Lcd!='\0')
  3399  006B54  C004  FFF6         	movff	i2Send2Lcd@Lcd,tblptrl
  3400  006B58  C005  FFF7         	movff	i2Send2Lcd@Lcd+1,tblptrh
  3401  006B5C  6AF8               	clrf	tblptru,c
  3402  006B5E  0E05               	movlw	(high __ramtop+-1)
  3403  006B60  64F7               	cpfsgt	tblptrh,c
  3404  006B62  D003               	bra	i2u1187_47
  3405  006B64  0008               	tblrd		*
  3406  006B66  50F5               	movf	tablat,w,c
  3407  006B68  D005               	bra	i2u1187_40
  3408  006B6A                     i2u1187_47:
  3409  006B6A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3410  006B6E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3411  006B72  50E7               	movf	indf1,w,c
  3412  006B74                     i2u1187_40:
  3413  006B74  0900               	iorlw	0
  3414  006B76  B4D8               	btfsc	status,2,c
  3415  006B78  0012               	return	
  3416  006B7A  D7D4               	goto	i2l9255
  3417  006B7C                     __end_ofi2_Send2Lcd:
  3418                           	opt callstack 0
  3419                           
  3420 ;; *************** function i2_Data *****************
  3421 ;; Defined at:
  3422 ;;		line 28 in file "setting_hardaware/LCD.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  Value           2    0[COMRAM] int 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		wreg
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3436 ;;      Params:         2       0       0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0
  3438 ;;      Temps:          1       0       0       0       0       0       0
  3439 ;;      Totals:         3       0       0       0       0       0       0
  3440 ;;Total ram usage:        3 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		i2_Send2Lcd
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text18
  3450  006F78                     __ptext18:
  3451                           	opt callstack 0
  3452  006F78                     i2_Data:
  3453                           	opt callstack 21
  3454                           
  3455                           ;setting_hardaware/LCD.c: 28: void Data(int Value);setting_hardaware/LCD.c: 29: {;settin
      +                          g_hardaware/LCD.c: 30:  LATD = Value;
  3456                           
  3457                           ;incstack = 0
  3458  006F78  C001  FF8C         	movff	i2Data@Value,3980	;volatile
  3459                           
  3460                           ;setting_hardaware/LCD.c: 31:  LATCbits.LC4=1;
  3461  006F7C  888B               	bsf	139,4,c	;volatile
  3462                           
  3463                           ;setting_hardaware/LCD.c: 33:  LATCbits.LC6=0;
  3464  006F7E  9C8B               	bcf	139,6,c	;volatile
  3465                           
  3466                           ;setting_hardaware/LCD.c: 34:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  3467  006F80  0E08               	movlw	8
  3468  006F82                     i2u1581_47:
  3469  006F82  2EE8               	decfsz	wreg,f,c
  3470  006F84  D7FE               	bra	i2u1581_47
  3471  006F86  F000               	nop	
  3472                           
  3473                           ;setting_hardaware/LCD.c: 35:  LATCbits.LC6=1;
  3474  006F88  8C8B               	bsf	139,6,c	;volatile
  3475                           
  3476                           ;setting_hardaware/LCD.c: 36:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  3477  006F8A  0E08               	movlw	8
  3478  006F8C                     i2u1582_47:
  3479  006F8C  2EE8               	decfsz	wreg,f,c
  3480  006F8E  D7FE               	bra	i2u1582_47
  3481  006F90  F000               	nop	
  3482                           
  3483                           ;setting_hardaware/LCD.c: 37:  LATCbits.LC6=0;
  3484  006F92  9C8B               	bcf	139,6,c	;volatile
  3485                           
  3486                           ;setting_hardaware/LCD.c: 38:  _delay((unsigned long)((3)*(4000000/4000.0)));
  3487  006F94  0E04               	movlw	4
  3488  006F96  6E03               	movwf	??i2_Data^0,c
  3489  006F98  0EE4               	movlw	228
  3490  006F9A                     i2u1583_47:
  3491  006F9A  2EE8               	decfsz	wreg,f,c
  3492  006F9C  D7FE               	bra	i2u1583_47
  3493  006F9E  2E03               	decfsz	??i2_Data^0,f,c
  3494  006FA0  D7FC               	bra	i2u1583_47
  3495  006FA2  D000               	nop2	
  3496  006FA4  0012               	return		;funcret
  3497  006FA6                     __end_ofi2_Data:
  3498                           	opt callstack 0
  3499                           
  3500 ;; *************** function _sprintf *****************
  3501 ;; Defined at:
  3502 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  s               2    0[BANK2 ] PTR unsigned char 
  3505 ;;		 -> r(100), 
  3506 ;;  fmt             2    2[BANK2 ] PTR const unsigned char 
  3507 ;;		 -> STR_4(11), STR_3(9), 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  f               6   16[BANK2 ] struct _IO_FILE
  3510 ;;  ap              2   14[BANK2 ] PTR void [1]
  3511 ;;		 -> ?_sprintf(2), 
  3512 ;;  ret             2    0        int 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2    0[BANK2 ] int 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3522 ;;      Params:         0       0       0      12       0       0       0
  3523 ;;      Locals:         0       0       0      10       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0
  3525 ;;      Totals:         0       0       0      22       0       0       0
  3526 ;;Total ram usage:       22 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    7
  3529 ;; This function calls:
  3530 ;;		_vfprintf
  3531 ;; This function is called by:
  3532 ;;		_Hi_ISR
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text19
  3537  006BDA                     __ptext19:
  3538                           	opt callstack 0
  3539  006BDA                     _sprintf:
  3540                           	opt callstack 15
  3541                           
  3542                           ;incstack = 0
  3543  006BDA  0ECF               	movlw	low (?_sprintf+4)
  3544  006BDC  0102               	movlb	2	; () banked
  3545  006BDE  6FD9               	movwf	sprintf@ap& (0+255),b
  3546  006BE0  0E02               	movlw	high (?_sprintf+4)
  3547  006BE2  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  3548  006BE4  C2CB  F2DB         	movff	sprintf@s,sprintf@f
  3549  006BE8  C2CC  F2DC         	movff	sprintf@s+1,sprintf@f+1
  3550                           
  3551                           ; BSR set to: 2
  3552  006BEC  0E00               	movlw	0
  3553  006BEE  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  3554  006BF0  0E00               	movlw	0
  3555  006BF2  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  3556                           
  3557                           ; BSR set to: 2
  3558  006BF4  0E00               	movlw	0
  3559  006BF6  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  3560  006BF8  0E00               	movlw	0
  3561  006BFA  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  3562                           
  3563                           ; BSR set to: 2
  3564  006BFC  0EDB               	movlw	low sprintf@f
  3565  006BFE  0101               	movlb	1	; () banked
  3566  006C00  6FF4               	movwf	vfprintf@fp& (0+255),b
  3567  006C02  0E02               	movlw	high sprintf@f
  3568  006C04  6FF5               	movwf	(vfprintf@fp+1)& (0+255),b
  3569  006C06  C2CD  F1F6         	movff	sprintf@fmt,vfprintf@fmt
  3570  006C0A  C2CE  F1F7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3571  006C0E  0ED9               	movlw	low sprintf@ap
  3572  006C10  6FF8               	movwf	vfprintf@ap& (0+255),b
  3573  006C12  0E02               	movlw	high sprintf@ap
  3574  006C14  6FF9               	movwf	(vfprintf@ap+1)& (0+255),b
  3575  006C16  ECBE  F035         	call	_vfprintf	;wreg free
  3576  006C1A  0102               	movlb	2	; () banked
  3577  006C1C  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  3578  006C1E  25CB               	addwf	sprintf@s& (0+255),w,b
  3579  006C20  6ED9               	movwf	fsr2l,c
  3580  006C22  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  3581  006C24  21CC               	addwfc	(sprintf@s+1)& (0+255),w,b
  3582  006C26  6EDA               	movwf	fsr2h,c
  3583  006C28  0E00               	movlw	0
  3584  006C2A  6EDF               	movwf	indf2,c
  3585                           
  3586                           ; BSR set to: 2
  3587  006C2C  0012               	return		;funcret
  3588  006C2E                     __end_of_sprintf:
  3589                           	opt callstack 0
  3590                           
  3591 ;; *************** function _vfprintf *****************
  3592 ;; Defined at:
  3593 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  fp              2  244[BANK1 ] PTR struct _IO_FILE
  3596 ;;		 -> sprintf@f(6), 
  3597 ;;  fmt             2  246[BANK1 ] PTR const unsigned char 
  3598 ;;		 -> STR_4(11), STR_3(9), 
  3599 ;;  ap              2  248[BANK1 ] PTR PTR void 
  3600 ;;		 -> sprintf@ap(2), 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  cfmt            2  122[BANK0 ] PTR unsigned char 
  3603 ;;		 -> STR_4(11), STR_3(9), 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  2  244[BANK1 ] int 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3613 ;;      Params:         0       0       6       0       0       0       0
  3614 ;;      Locals:         0       2       0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0
  3616 ;;      Totals:         0       2       6       0       0       0       0
  3617 ;;Total ram usage:        8 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    6
  3620 ;; This function calls:
  3621 ;;		_vfpfcnvrt
  3622 ;; This function is called by:
  3623 ;;		_sprintf
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text20
  3628  006B7C                     __ptext20:
  3629                           	opt callstack 0
  3630  006B7C                     _vfprintf:
  3631                           	opt callstack 15
  3632                           
  3633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3634                           
  3635                           ; BSR set to: 2
  3636                           ;incstack = 0
  3637  006B7C  C1F6  F0FA         	movff	vfprintf@fmt,vfprintf@cfmt
  3638  006B80  C1F7  F0FB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3639                           
  3640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3641  006B84  0E00               	movlw	0
  3642  006B86  0102               	movlb	2	; () banked
  3643  006B88  6F1F               	movwf	(_nout+1)& (0+255),b
  3644  006B8A  0E00               	movlw	0
  3645  006B8C  6F1E               	movwf	_nout& (0+255),b
  3646                           
  3647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3648  006B8E  D017               	goto	i2l11549
  3649  006B90                     i2l11547:
  3650                           
  3651                           ; BSR set to: 2
  3652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3653  006B90  C1F4  F0DA         	movff	vfprintf@fp,vfpfcnvrt@fp
  3654  006B94  C1F5  F0DB         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3655  006B98  0EFA               	movlw	low vfprintf@cfmt
  3656  006B9A  0100               	movlb	0	; () banked
  3657  006B9C  6FDC               	movwf	vfpfcnvrt@fmt& (0+255),b
  3658  006B9E  0E00               	movlw	high vfprintf@cfmt
  3659  006BA0  6FDD               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3660  006BA2  C1F8  F0DE         	movff	vfprintf@ap,vfpfcnvrt@ap
  3661  006BA6  C1F9  F0DF         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3662  006BAA  ECF1  F01E         	call	_vfpfcnvrt	;wreg free
  3663  006BAE  0100               	movlb	0	; () banked
  3664  006BB0  51DA               	movf	?_vfpfcnvrt& (0+255),w,b
  3665  006BB2  0102               	movlb	2	; () banked
  3666  006BB4  271E               	addwf	_nout& (0+255),f,b
  3667  006BB6  0100               	movlb	0	; () banked
  3668  006BB8  51DB               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3669  006BBA  0102               	movlb	2	; () banked
  3670  006BBC  231F               	addwfc	(_nout+1)& (0+255),f,b
  3671  006BBE                     i2l11549:
  3672                           
  3673                           ; BSR set to: 2
  3674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3675  006BBE  C0FA  FFF6         	movff	vfprintf@cfmt,tblptrl
  3676  006BC2  C0FB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3677  006BC6                     	if	0	;tblptru may be non-zero
  3678  006BC6                     	endif
  3679  006BC6                     	if	0	;tblptru may be non-zero
  3680  006BC6                     	endif
  3681  006BC6  0008               	tblrd		*
  3682  006BC8  50F5               	movf	tablat,w,c
  3683  006BCA  0900               	iorlw	0
  3684  006BCC  A4D8               	btfss	status,2,c
  3685  006BCE  D7E0               	goto	i2l11547
  3686                           
  3687                           ; BSR set to: 2
  3688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3689  006BD0  C21E  F1F4         	movff	_nout,?_vfprintf
  3690  006BD4  C21F  F1F5         	movff	_nout+1,?_vfprintf+1
  3691                           
  3692                           ; BSR set to: 2
  3693  006BD8  0012               	return		;funcret
  3694  006BDA                     __end_of_vfprintf:
  3695                           	opt callstack 0
  3696                           
  3697 ;; *************** function _vfpfcnvrt *****************
  3698 ;; Defined at:
  3699 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  fp              2   90[BANK0 ] PTR struct _IO_FILE
  3702 ;;		 -> sprintf@f(6), 
  3703 ;;  fmt             2   92[BANK0 ] PTR PTR unsigned char 
  3704 ;;		 -> vfprintf@cfmt(2), 
  3705 ;;  ap              2   94[BANK0 ] PTR PTR void 
  3706 ;;		 -> sprintf@ap(2), 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  ll              8  100[BANK0 ] long long 
  3709 ;;  llu             8    0        unsigned long long 
  3710 ;;  f               4  115[BANK0 ] unsigned long long 
  3711 ;;  ct              3  119[BANK0 ] unsigned char [3]
  3712 ;;  vp              3    0        PTR void 
  3713 ;;  cp              2  108[BANK0 ] PTR unsigned char 
  3714 ;;		 -> ?_sprintf(2), r(100), 
  3715 ;;  i               2    0        int 
  3716 ;;  done            2    0        int 
  3717 ;;  c               1  114[BANK0 ] unsigned char 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  2   90[BANK0 ] int 
  3720 ;; Registers used:
  3721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3727 ;;      Params:         0       6       0       0       0       0       0
  3728 ;;      Locals:         0      22       0       0       0       0       0
  3729 ;;      Temps:          0       4       0       0       0       0       0
  3730 ;;      Totals:         0      32       0       0       0       0       0
  3731 ;;Total ram usage:       32 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    5
  3734 ;; This function calls:
  3735 ;;		_atoi
  3736 ;;		_dtoa
  3737 ;;		_efgtoa
  3738 ;;		_fputc
  3739 ;;		_isdigit
  3740 ;;		_isupper
  3741 ;;		_stoa
  3742 ;;		_strncmp
  3743 ;;		_tolower
  3744 ;; This function is called by:
  3745 ;;		_vfprintf
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text21
  3750  003DE2                     __ptext21:
  3751                           	opt callstack 0
  3752  003DE2                     _vfpfcnvrt:
  3753                           	opt callstack 15
  3754                           
  3755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3756                           
  3757                           ; BSR set to: 2
  3758                           ;incstack = 0
  3759  003DE2  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3760  003DE6  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3761  003DEA  CFDE FFF6          	movff	postinc2,tblptrl
  3762  003DEE  CFDD FFF7          	movff	postdec2,tblptrh
  3763  003DF2                     	if	0	;tblptru may be non-zero
  3764  003DF2                     	endif
  3765  003DF2                     	if	0	;tblptru may be non-zero
  3766  003DF2                     	endif
  3767  003DF2  0008               	tblrd		*
  3768  003DF4  50F5               	movf	tablat,w,c
  3769  003DF6  0A25               	xorlw	37
  3770  003DF8  A4D8               	btfss	status,2,c
  3771  003DFA  D242               	goto	i2l11463
  3772                           
  3773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3774  003DFC  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3775  003E00  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3776  003E04  2ADE               	incf	postinc2,f,c
  3777  003E06  0E00               	movlw	0
  3778  003E08  22DD               	addwfc	postdec2,f,c
  3779                           
  3780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3781  003E0A  0E00               	movlw	0
  3782  003E0C  0102               	movlb	2	; () banked
  3783  003E0E  6F21               	movwf	(_width+1)& (0+255),b
  3784  003E10  0E00               	movlw	0
  3785  003E12  6F20               	movwf	_width& (0+255),b
  3786  003E14  C220  F224         	movff	_width,_flags
  3787  003E18  C221  F225         	movff	_width+1,_flags+1
  3788                           
  3789                           ; BSR set to: 2
  3790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3791  003E1C  6922               	setf	_prec& (0+255),b
  3792  003E1E  6923               	setf	(_prec+1)& (0+255),b
  3793                           
  3794                           ; BSR set to: 2
  3795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3796  003E20  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3797  003E24  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3798  003E28  CFDE FFF6          	movff	postinc2,tblptrl
  3799  003E2C  CFDD FFF7          	movff	postdec2,tblptrh
  3800  003E30                     	if	0	;tblptru may be non-zero
  3801  003E30                     	endif
  3802  003E30                     	if	0	;tblptru may be non-zero
  3803  003E30                     	endif
  3804  003E30  0008               	tblrd		*
  3805  003E32  50F5               	movf	tablat,w,c
  3806  003E34  0A2E               	xorlw	46
  3807  003E36  A4D8               	btfss	status,2,c
  3808  003E38  D06E               	goto	i2u1539_40
  3809                           
  3810                           ; BSR set to: 2
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3812  003E3A  0E00               	movlw	0
  3813  003E3C  6F23               	movwf	(_prec+1)& (0+255),b
  3814  003E3E  0E00               	movlw	0
  3815  003E40  6F22               	movwf	_prec& (0+255),b
  3816                           
  3817                           ; BSR set to: 2
  3818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3819  003E42  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3820  003E46  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3821  003E4A  2ADE               	incf	postinc2,f,c
  3822  003E4C  0E00               	movlw	0
  3823  003E4E  22DD               	addwfc	postdec2,f,c
  3824                           
  3825                           ; BSR set to: 2
  3826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3827  003E50  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3828  003E54  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3829  003E58  CFDE FFF6          	movff	postinc2,tblptrl
  3830  003E5C  CFDD FFF7          	movff	postdec2,tblptrh
  3831  003E60                     	if	0	;tblptru may be non-zero
  3832  003E60                     	endif
  3833  003E60                     	if	0	;tblptru may be non-zero
  3834  003E60                     	endif
  3835  003E60  0008               	tblrd		*
  3836  003E62  50F5               	movf	tablat,w,c
  3837  003E64  0A2A               	xorlw	42
  3838  003E66  A4D8               	btfss	status,2,c
  3839  003E68  D01C               	goto	i2l11381
  3840                           
  3841                           ; BSR set to: 2
  3842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3843  003E6A  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3844  003E6E  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3845  003E72  2ADE               	incf	postinc2,f,c
  3846  003E74  0E00               	movlw	0
  3847  003E76  22DD               	addwfc	postdec2,f,c
  3848                           
  3849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3850  003E78  C0DE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3851  003E7C  C0DF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3852  003E80  CFDF F0E0          	movff	indf2,??_vfpfcnvrt
  3853  003E84  0E02               	movlw	2
  3854  003E86  26DE               	addwf	postinc2,f,c
  3855  003E88  CFDF F0E1          	movff	indf2,??_vfpfcnvrt+1
  3856  003E8C  0E00               	movlw	0
  3857  003E8E  22DD               	addwfc	postdec2,f,c
  3858  003E90  C0E0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3859  003E94  C0E1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3860  003E98  CFDE F222          	movff	postinc2,_prec
  3861  003E9C  CFDD F223          	movff	postdec2,_prec+1
  3862                           
  3863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3864  003EA0  D03A               	goto	i2u1539_40
  3865  003EA2                     i2l11381:
  3866                           
  3867                           ; BSR set to: 2
  3868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3869  003EA2  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3870  003EA6  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3871  003EAA  CFDE F008          	movff	postinc2,atoi@s
  3872  003EAE  CFDD F009          	movff	postdec2,atoi@s+1
  3873  003EB2  EC0C  F02E         	call	_atoi	;wreg free
  3874  003EB6  C008  F222         	movff	?_atoi,_prec
  3875  003EBA  C009  F223         	movff	?_atoi+1,_prec+1
  3876                           
  3877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3878  003EBE  D007               	goto	i2l11385
  3879  003EC0                     i2l11383:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3883  003EC0  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3884  003EC4  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3885  003EC8  2ADE               	incf	postinc2,f,c
  3886  003ECA  0E00               	movlw	0
  3887  003ECC  22DD               	addwfc	postdec2,f,c
  3888  003ECE                     i2l11385:
  3889  003ECE  0ED0               	movlw	208
  3890  003ED0  0100               	movlb	0	; () banked
  3891  003ED2  6FE0               	movwf	??_vfpfcnvrt& (0+255),b
  3892  003ED4  0EFF               	movlw	255
  3893  003ED6  6FE1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3894  003ED8  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3895  003EDC  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3896  003EE0  CFDE FFF6          	movff	postinc2,tblptrl
  3897  003EE4  CFDD FFF7          	movff	postdec2,tblptrh
  3898  003EE8                     	if	0	;tblptru may be non-zero
  3899  003EE8                     	endif
  3900  003EE8                     	if	0	;tblptru may be non-zero
  3901  003EE8                     	endif
  3902  003EE8  0008               	tblrd		*
  3903  003EEA  50F5               	movf	tablat,w,c
  3904  003EEC  6FE2               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3905  003EEE  6BE3               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3906  003EF0  51E0               	movf	??_vfpfcnvrt& (0+255),w,b
  3907  003EF2  27E2               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3908  003EF4  51E1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3909  003EF6  23E3               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3910  003EF8  51E3               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3911  003EFA  E106               	bnz	i2u1537_40
  3912  003EFC  0E0A               	movlw	10
  3913  003EFE  5DE2               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3914  003F00  B0D8               	btfsc	status,0,c
  3915  003F02  D002               	goto	i2u1537_40
  3916  003F04  0E01               	movlw	1
  3917  003F06  D001               	goto	i2u1538_40
  3918  003F08                     i2u1537_40:
  3919  003F08  0E00               	movlw	0
  3920  003F0A                     i2u1538_40:
  3921  003F0A  6FEE               	movwf	_vfpfcnvrt$1039& (0+255),b
  3922  003F0C  6BEF               	clrf	(_vfpfcnvrt$1039+1)& (0+255),b
  3923                           
  3924                           ; BSR set to: 0
  3925  003F0E  51EE               	movf	_vfpfcnvrt$1039& (0+255),w,b
  3926  003F10  11EF               	iorwf	(_vfpfcnvrt$1039+1)& (0+255),w,b
  3927  003F12  A4D8               	btfss	status,2,c
  3928  003F14  D7D5               	goto	i2l11383
  3929  003F16                     i2u1539_40:
  3930                           
  3931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3932  003F16  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3933  003F1A  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3934  003F1E  CFDE FFF6          	movff	postinc2,tblptrl
  3935  003F22  CFDD FFF7          	movff	postdec2,tblptrh
  3936  003F26                     	if	0	;tblptru may be non-zero
  3937  003F26                     	endif
  3938  003F26                     	if	0	;tblptru may be non-zero
  3939  003F26                     	endif
  3940  003F26  0008               	tblrd		*
  3941  003F28  50F5               	movf	tablat,w,c
  3942  003F2A  6E07               	movwf	tolower@c^0,c
  3943  003F2C  6A08               	clrf	(tolower@c+1)^0,c
  3944  003F2E  EC40  F036         	call	_tolower	;wreg free
  3945  003F32  5007               	movf	?_tolower^0,w,c
  3946  003F34  0100               	movlb	0	; () banked
  3947  003F36  6FF7               	movwf	vfpfcnvrt@ct& (0+255),b
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3951  003F38  51F7               	movf	vfpfcnvrt@ct& (0+255),w,b
  3952  003F3A  B4D8               	btfsc	status,2,c
  3953  003F3C  D035               	goto	i2l11401
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3957  003F3E  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3958  003F42  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3959  003F46  CFDE F0E0          	movff	postinc2,??_vfpfcnvrt
  3960  003F4A  CFDD F0E1          	movff	postdec2,??_vfpfcnvrt+1
  3961  003F4E  0E01               	movlw	1
  3962  003F50  27E0               	addwf	??_vfpfcnvrt& (0+255),f,b
  3963  003F52  0E00               	movlw	0
  3964  003F54  23E1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3965  003F56  C0E0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3966  003F5A  C0E1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3967  003F5E                     	if	0	;tblptru may be non-zero
  3968  003F5E                     	endif
  3969  003F5E                     	if	0	;tblptru may be non-zero
  3970  003F5E                     	endif
  3971  003F5E  0008               	tblrd		*
  3972  003F60  50F5               	movf	tablat,w,c
  3973  003F62  6E07               	movwf	tolower@c^0,c
  3974  003F64  6A08               	clrf	(tolower@c+1)^0,c
  3975  003F66  EC40  F036         	call	_tolower	;wreg free
  3976  003F6A  5007               	movf	?_tolower^0,w,c
  3977  003F6C  0100               	movlb	0	; () banked
  3978  003F6E  6FF8               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3982  003F70  51F8               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3983  003F72  B4D8               	btfsc	status,2,c
  3984  003F74  D019               	goto	i2l11401
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3988  003F76  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3989  003F7A  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3990  003F7E  CFDE F0E0          	movff	postinc2,??_vfpfcnvrt
  3991  003F82  CFDD F0E1          	movff	postdec2,??_vfpfcnvrt+1
  3992  003F86  0E02               	movlw	2
  3993  003F88  27E0               	addwf	??_vfpfcnvrt& (0+255),f,b
  3994  003F8A  0E00               	movlw	0
  3995  003F8C  23E1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3996  003F8E  C0E0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3997  003F92  C0E1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3998  003F96                     	if	0	;tblptru may be non-zero
  3999  003F96                     	endif
  4000  003F96                     	if	0	;tblptru may be non-zero
  4001  003F96                     	endif
  4002  003F96  0008               	tblrd		*
  4003  003F98  50F5               	movf	tablat,w,c
  4004  003F9A  6E07               	movwf	tolower@c^0,c
  4005  003F9C  6A08               	clrf	(tolower@c+1)^0,c
  4006  003F9E  EC40  F036         	call	_tolower	;wreg free
  4007  003FA2  5007               	movf	?_tolower^0,w,c
  4008  003FA4  0100               	movlb	0	; () banked
  4009  003FA6  6FF9               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4010  003FA8                     i2l11401:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4014  003FA8  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4015  003FAC  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4016  003FB0  CFDE FFF6          	movff	postinc2,tblptrl
  4017  003FB4  CFDD FFF7          	movff	postdec2,tblptrh
  4018  003FB8                     	if	0	;tblptru may be non-zero
  4019  003FB8                     	endif
  4020  003FB8                     	if	0	;tblptru may be non-zero
  4021  003FB8                     	endif
  4022  003FB8  0008               	tblrd		*
  4023  003FBA  50F5               	movf	tablat,w,c
  4024  003FBC  0A64               	xorlw	100
  4025  003FBE  B4D8               	btfsc	status,2,c
  4026  003FC0  D00D               	goto	i2u1543_40
  4027                           
  4028                           ; BSR set to: 0
  4029  003FC2  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4030  003FC6  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4031  003FCA  CFDE FFF6          	movff	postinc2,tblptrl
  4032  003FCE  CFDD FFF7          	movff	postdec2,tblptrh
  4033  003FD2                     	if	0	;tblptru may be non-zero
  4034  003FD2                     	endif
  4035  003FD2                     	if	0	;tblptru may be non-zero
  4036  003FD2                     	endif
  4037  003FD2  0008               	tblrd		*
  4038  003FD4  50F5               	movf	tablat,w,c
  4039  003FD6  0A69               	xorlw	105
  4040  003FD8  A4D8               	btfss	status,2,c
  4041  003FDA  D03F               	goto	i2l11411
  4042  003FDC                     i2u1543_40:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4046  003FDC  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4047  003FE0  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4048  003FE4  2ADE               	incf	postinc2,f,c
  4049  003FE6  0E00               	movlw	0
  4050  003FE8  22DD               	addwfc	postdec2,f,c
  4051                           
  4052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4053  003FEA  C0DE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4054  003FEE  C0DF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4055  003FF2  CFDF F0E0          	movff	indf2,??_vfpfcnvrt
  4056  003FF6  0E02               	movlw	2
  4057  003FF8  26DE               	addwf	postinc2,f,c
  4058  003FFA  CFDF F0E1          	movff	indf2,??_vfpfcnvrt+1
  4059  003FFE  0E00               	movlw	0
  4060  004000  22DD               	addwfc	postdec2,f,c
  4061  004002  C0E0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4062  004006  C0E1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4063  00400A  CFDE F0E4          	movff	postinc2,vfpfcnvrt@ll
  4064  00400E  CFDD F0E5          	movff	postdec2,vfpfcnvrt@ll+1
  4065  004012  0E00               	movlw	0
  4066  004014  BFE5               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4067  004016  0EFF               	movlw	-1
  4068  004018  6FE6               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4069  00401A  6FE7               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4070  00401C  6FE8               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4071  00401E  6FE9               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4072  004020  6FEA               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4073  004022  6FEB               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4077  004024  C0DA  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4078  004028  C0DB  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4079  00402C  C0E4  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4080  004030  C0E5  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4081  004034  C0E6  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4082  004038  C0E7  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4083  00403C  C0E8  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4084  004040  C0E9  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4085  004044  C0EA  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4086  004048  C0EB  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4087  00404C  ECE0  F027         	call	_dtoa	;wreg free
  4088  004050  C01C  F0DA         	movff	?_dtoa,?_vfpfcnvrt
  4089  004054  C01D  F0DB         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4090  004058  0012               	return	
  4091  00405A                     i2l11411:
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  4095  00405A  0E66               	movlw	102
  4096  00405C  19F7               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4097  00405E  A4D8               	btfss	status,2,c
  4098  004060  D03F               	goto	i2l11423
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  4102  004062  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4103  004066  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4104  00406A  CFDE FFF6          	movff	postinc2,tblptrl
  4105  00406E  CFDD FFF7          	movff	postdec2,tblptrh
  4106  004072                     	if	0	;tblptru may be non-zero
  4107  004072                     	endif
  4108  004072                     	if	0	;tblptru may be non-zero
  4109  004072                     	endif
  4110  004072  0008               	tblrd		*
  4111  004074  CFF5 F0F2          	movff	tablat,vfpfcnvrt@c
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  4115  004078  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4116  00407C  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4117  004080  2ADE               	incf	postinc2,f,c
  4118  004082  0E00               	movlw	0
  4119  004084  22DD               	addwfc	postdec2,f,c
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4123  004086  C0DE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4124  00408A  C0DF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4125  00408E  CFDF F0E0          	movff	indf2,??_vfpfcnvrt
  4126  004092  0E04               	movlw	4
  4127  004094  26DE               	addwf	postinc2,f,c
  4128  004096  CFDF F0E1          	movff	indf2,??_vfpfcnvrt+1
  4129  00409A  0E00               	movlw	0
  4130  00409C  22DD               	addwfc	postdec2,f,c
  4131  00409E  C0E0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4132  0040A2  C0E1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4133  0040A6  CFDE F0F3          	movff	postinc2,vfpfcnvrt@f
  4134  0040AA  CFDE F0F4          	movff	postinc2,vfpfcnvrt@f+1
  4135  0040AE  CFDE F0F5          	movff	postinc2,vfpfcnvrt@f+2
  4136  0040B2  CFDE F0F6          	movff	postinc2,vfpfcnvrt@f+3
  4137  0040B6                     i2l11419:
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  4141  0040B6  C0DA  F0CE         	movff	vfpfcnvrt@fp,efgtoa@fp
  4142  0040BA  C0DB  F0CF         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4143  0040BE  C0F3  F0D0         	movff	vfpfcnvrt@f,efgtoa@f
  4144  0040C2  C0F4  F0D1         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4145  0040C6  C0F5  F0D2         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4146  0040CA  C0F6  F0D3         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4147  0040CE  C0F2  F0D4         	movff	vfpfcnvrt@c,efgtoa@c
  4148  0040D2  EC9C  F016         	call	_efgtoa	;wreg free
  4149  0040D6  C0CE  F0DA         	movff	?_efgtoa,?_vfpfcnvrt
  4150  0040DA  C0CF  F0DB         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4151  0040DE  0012               	return	
  4152  0040E0                     i2l11423:
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4156  0040E0  0EF7               	movlw	low vfpfcnvrt@ct
  4157  0040E2  6E01               	movwf	strncmp@_l^0,c
  4158  0040E4  0E00               	movlw	high vfpfcnvrt@ct
  4159  0040E6  6E02               	movwf	(strncmp@_l+1)^0,c
  4160  0040E8  0EC7               	movlw	low STR_13
  4161  0040EA  6E03               	movwf	strncmp@_r^0,c
  4162  0040EC  0E06               	movlw	high STR_13
  4163  0040EE  6E04               	movwf	(strncmp@_r+1)^0,c
  4164  0040F0  0E00               	movlw	0
  4165  0040F2  6E06               	movwf	(strncmp@n+1)^0,c
  4166  0040F4  0E02               	movlw	2
  4167  0040F6  6E05               	movwf	strncmp@n^0,c
  4168  0040F8  EC30  F033         	call	_strncmp	;wreg free
  4169  0040FC  5001               	movf	?_strncmp^0,w,c
  4170  0040FE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4171  004100  A4D8               	btfss	status,2,c
  4172  004102  D056               	goto	i2l11439
  4173                           
  4174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4175  004104  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4176  004108  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4177  00410C  CFDE F0E0          	movff	postinc2,??_vfpfcnvrt
  4178  004110  CFDD F0E1          	movff	postdec2,??_vfpfcnvrt+1
  4179  004114  0E01               	movlw	1
  4180  004116  0100               	movlb	0	; () banked
  4181  004118  27E0               	addwf	??_vfpfcnvrt& (0+255),f,b
  4182  00411A  0E00               	movlw	0
  4183  00411C  23E1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4184  00411E  C0E0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4185  004122  C0E1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4186  004126                     	if	0	;tblptru may be non-zero
  4187  004126                     	endif
  4188  004126                     	if	0	;tblptru may be non-zero
  4189  004126                     	endif
  4190  004126  0008               	tblrd		*
  4191  004128  CFF5 F0F2          	movff	tablat,vfpfcnvrt@c
  4192  00412C  0EBF               	movlw	191
  4193  00412E  6FE0               	movwf	??_vfpfcnvrt& (0+255),b
  4194  004130  0EFF               	movlw	255
  4195  004132  6FE1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4196  004134  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4197  004138  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4198  00413C  CFDE FFF6          	movff	postinc2,tblptrl
  4199  004140  CFDD FFF7          	movff	postdec2,tblptrh
  4200  004144                     	if	0	;tblptru may be non-zero
  4201  004144                     	endif
  4202  004144                     	if	0	;tblptru may be non-zero
  4203  004144                     	endif
  4204  004144  0008               	tblrd		*
  4205  004146  50F5               	movf	tablat,w,c
  4206  004148  6FE2               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4207  00414A  6BE3               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4208  00414C  51E0               	movf	??_vfpfcnvrt& (0+255),w,b
  4209  00414E  27E2               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4210  004150  51E1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4211  004152  23E3               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4212  004154  51E3               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4213  004156  E106               	bnz	i2u1546_40
  4214  004158  0E1A               	movlw	26
  4215  00415A  5DE2               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4216  00415C  B0D8               	btfsc	status,0,c
  4217  00415E  D002               	goto	i2u1546_40
  4218  004160  0E01               	movlw	1
  4219  004162  D001               	goto	i2u1547_40
  4220  004164                     i2u1546_40:
  4221  004164  0E00               	movlw	0
  4222  004166                     i2u1547_40:
  4223  004166  6FF0               	movwf	_vfpfcnvrt$1044& (0+255),b
  4224  004168  6BF1               	clrf	(_vfpfcnvrt$1044+1)& (0+255),b
  4225                           
  4226                           ; BSR set to: 0
  4227  00416A  51F0               	movf	_vfpfcnvrt$1044& (0+255),w,b
  4228  00416C  11F1               	iorwf	(_vfpfcnvrt$1044+1)& (0+255),w,b
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4232                           
  4233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4237  00416E  C0DE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4238  004172  C0DF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4239  004176  CFDF F0E0          	movff	indf2,??_vfpfcnvrt
  4240  00417A  0E04               	movlw	4
  4241  00417C  26DE               	addwf	postinc2,f,c
  4242  00417E  CFDF F0E1          	movff	indf2,??_vfpfcnvrt+1
  4243  004182  0E00               	movlw	0
  4244  004184  22DD               	addwfc	postdec2,f,c
  4245  004186  C0E0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4246  00418A  C0E1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4247  00418E  CFDE F0F3          	movff	postinc2,vfpfcnvrt@f
  4248  004192  CFDE F0F4          	movff	postinc2,vfpfcnvrt@f+1
  4249  004196  CFDE F0F5          	movff	postinc2,vfpfcnvrt@f+2
  4250  00419A  CFDE F0F6          	movff	postinc2,vfpfcnvrt@f+3
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4254                           
  4255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  4256  00419E  0E02               	movlw	2
  4257  0041A0  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4258  0041A4  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4259  0041A8  26DE               	addwf	postinc2,f,c
  4260  0041AA  0E00               	movlw	0
  4261  0041AC  22DD               	addwfc	postdec2,f,c
  4262  0041AE  D783               	goto	i2l11419
  4263  0041B0                     i2l11439:
  4264                           
  4265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  4266  0041B0  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4267  0041B4  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4268  0041B8  CFDE FFF6          	movff	postinc2,tblptrl
  4269  0041BC  CFDD FFF7          	movff	postdec2,tblptrh
  4270  0041C0                     	if	0	;tblptru may be non-zero
  4271  0041C0                     	endif
  4272  0041C0                     	if	0	;tblptru may be non-zero
  4273  0041C0                     	endif
  4274  0041C0  0008               	tblrd		*
  4275  0041C2  50F5               	movf	tablat,w,c
  4276  0041C4  0A73               	xorlw	115
  4277  0041C6  A4D8               	btfss	status,2,c
  4278  0041C8  D02A               	goto	i2l11447
  4279                           
  4280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  4281  0041CA  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4282  0041CE  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4283  0041D2  2ADE               	incf	postinc2,f,c
  4284  0041D4  0E00               	movlw	0
  4285  0041D6  22DD               	addwfc	postdec2,f,c
  4286                           
  4287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4288  0041D8  C0DE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4289  0041DC  C0DF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4290  0041E0  CFDF F0E0          	movff	indf2,??_vfpfcnvrt
  4291  0041E4  0E02               	movlw	2
  4292  0041E6  26DE               	addwf	postinc2,f,c
  4293  0041E8  CFDF F0E1          	movff	indf2,??_vfpfcnvrt+1
  4294  0041EC  0E00               	movlw	0
  4295  0041EE  22DD               	addwfc	postdec2,f,c
  4296  0041F0  C0E0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4297  0041F4  C0E1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4298  0041F8  CFDE F0EC          	movff	postinc2,vfpfcnvrt@cp
  4299  0041FC  CFDD F0ED          	movff	postdec2,vfpfcnvrt@cp+1
  4300                           
  4301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  4302  004200  C0DA  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  4303  004204  C0DB  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4304  004208  C0EC  F00C         	movff	vfpfcnvrt@cp,stoa@s
  4305  00420C  C0ED  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4306  004210  ECE5  F02F         	call	_stoa	;wreg free
  4307  004214  C00A  F0DA         	movff	?_stoa,?_vfpfcnvrt
  4308  004218  C00B  F0DB         	movff	?_stoa+1,?_vfpfcnvrt+1
  4309  00421C  0012               	return	
  4310  00421E                     i2l11447:
  4311                           
  4312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4313  00421E  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4314  004222  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4315  004226  CFDE FFF6          	movff	postinc2,tblptrl
  4316  00422A  CFDD FFF7          	movff	postdec2,tblptrh
  4317  00422E                     	if	0	;tblptru may be non-zero
  4318  00422E                     	endif
  4319  00422E                     	if	0	;tblptru may be non-zero
  4320  00422E                     	endif
  4321  00422E  0008               	tblrd		*
  4322  004230  50F5               	movf	tablat,w,c
  4323  004232  0A25               	xorlw	37
  4324  004234  A4D8               	btfss	status,2,c
  4325  004236  D017               	goto	i2l11457
  4326                           
  4327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4328  004238  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4329  00423C  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4330  004240  2ADE               	incf	postinc2,f,c
  4331  004242  0E00               	movlw	0
  4332  004244  22DD               	addwfc	postdec2,f,c
  4333                           
  4334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4335  004246  0E00               	movlw	0
  4336  004248  6E02               	movwf	(fputc@c+1)^0,c
  4337  00424A  0E25               	movlw	37
  4338  00424C  6E01               	movwf	fputc@c^0,c
  4339  00424E  C0DA  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4340  004252  C0DB  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4341  004256  EC81  F033         	call	_fputc	;wreg free
  4342  00425A                     i2l11453:
  4343                           
  4344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4345  00425A  0E00               	movlw	0
  4346  00425C  0100               	movlb	0	; () banked
  4347  00425E  6FDB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4348  004260  0E01               	movlw	1
  4349  004262  6FDA               	movwf	?_vfpfcnvrt& (0+255),b
  4350  004264  0012               	return	
  4351  004266                     i2l11457:
  4352                           
  4353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4354  004266  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4355  00426A  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4356  00426E  2ADE               	incf	postinc2,f,c
  4357  004270  0E00               	movlw	0
  4358  004272  22DD               	addwfc	postdec2,f,c
  4359                           
  4360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4361  004274  0E00               	movlw	0
  4362  004276  0100               	movlb	0	; () banked
  4363  004278  6FDB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4364  00427A  0E00               	movlw	0
  4365  00427C  6FDA               	movwf	?_vfpfcnvrt& (0+255),b
  4366  00427E  0012               	return	
  4367  004280                     i2l11463:
  4368                           
  4369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4370  004280  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4371  004284  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4372  004288  CFDE FFF6          	movff	postinc2,tblptrl
  4373  00428C  CFDD FFF7          	movff	postdec2,tblptrh
  4374  004290                     	if	0	;tblptru may be non-zero
  4375  004290                     	endif
  4376  004290                     	if	0	;tblptru may be non-zero
  4377  004290                     	endif
  4378  004290  0008               	tblrd		*
  4379  004292  50F5               	movf	tablat,w,c
  4380  004294  6E01               	movwf	fputc@c^0,c
  4381  004296  6A02               	clrf	(fputc@c+1)^0,c
  4382  004298  C0DA  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4383  00429C  C0DB  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4384  0042A0  EC81  F033         	call	_fputc	;wreg free
  4385                           
  4386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4387  0042A4  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4388  0042A8  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4389  0042AC  2ADE               	incf	postinc2,f,c
  4390  0042AE  0E00               	movlw	0
  4391  0042B0  22DD               	addwfc	postdec2,f,c
  4392  0042B2  D7D3               	goto	i2l11453
  4393  0042B4                     __end_of_vfpfcnvrt:
  4394                           	opt callstack 0
  4395                           
  4396 ;; *************** function _strncmp *****************
  4397 ;; Defined at:
  4398 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4401 ;;		 -> vfpfcnvrt@ct(3), 
  4402 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4403 ;;		 -> STR_15(3), 
  4404 ;;  n               2    4[COMRAM] unsigned int 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4407 ;;		 -> STR_15(3), 
  4408 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4409 ;;		 -> vfpfcnvrt@ct(3), 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  2    0[COMRAM] int 
  4412 ;; Registers used:
  4413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4419 ;;      Params:         6       0       0       0       0       0       0
  4420 ;;      Locals:         4       0       0       0       0       0       0
  4421 ;;      Temps:          1       0       0       0       0       0       0
  4422 ;;      Totals:        11       0       0       0       0       0       0
  4423 ;;Total ram usage:       11 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_vfpfcnvrt
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text22
  4433  006660                     __ptext22:
  4434                           	opt callstack 0
  4435  006660                     _strncmp:
  4436                           	opt callstack 19
  4437                           
  4438                           ;incstack = 0
  4439  006660  C001  F008         	movff	strncmp@_l,strncmp@l
  4440  006664  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4441  006668  C003  F00A         	movff	strncmp@_r,strncmp@r
  4442  00666C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4443  006670  0605               	decf	strncmp@n^0,f,c
  4444  006672  A0D8               	btfss	status,0,c
  4445  006674  0606               	decf	(strncmp@n+1)^0,f,c
  4446  006676  2805               	incf	strncmp@n^0,w,c
  4447  006678  E10F               	bnz	i2l11333
  4448  00667A  2806               	incf	(strncmp@n+1)^0,w,c
  4449  00667C  A4D8               	btfss	status,2,c
  4450  00667E  D00C               	goto	i2l11333
  4451  006680  0E00               	movlw	0
  4452  006682  6E02               	movwf	(?_strncmp+1)^0,c
  4453  006684  0E00               	movlw	0
  4454  006686  6E01               	movwf	?_strncmp^0,c
  4455  006688  0012               	return	
  4456  00668A                     i2l11331:
  4457  00668A  4A08               	infsnz	strncmp@l^0,f,c
  4458  00668C  2A09               	incf	(strncmp@l+1)^0,f,c
  4459  00668E  4A0A               	infsnz	strncmp@r^0,f,c
  4460  006690  2A0B               	incf	(strncmp@r+1)^0,f,c
  4461  006692  0605               	decf	strncmp@n^0,f,c
  4462  006694  A0D8               	btfss	status,0,c
  4463  006696  0606               	decf	(strncmp@n+1)^0,f,c
  4464  006698                     i2l11333:
  4465  006698  C008  FFD9         	movff	strncmp@l,fsr2l
  4466  00669C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4467  0066A0  50DF               	movf	indf2,w,c
  4468  0066A2  B4D8               	btfsc	status,2,c
  4469  0066A4  D01C               	goto	i2u1530_40
  4470  0066A6  C00A  FFF6         	movff	strncmp@r,tblptrl
  4471  0066AA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4472  0066AE                     	if	0	;tblptru may be non-zero
  4473  0066AE                     	endif
  4474  0066AE                     	if	0	;tblptru may be non-zero
  4475  0066AE                     	endif
  4476  0066AE  0008               	tblrd		*
  4477  0066B0  50F5               	movf	tablat,w,c
  4478  0066B2  0900               	iorlw	0
  4479  0066B4  B4D8               	btfsc	status,2,c
  4480  0066B6  D013               	goto	i2u1530_40
  4481  0066B8  5005               	movf	strncmp@n^0,w,c
  4482  0066BA  1006               	iorwf	(strncmp@n+1)^0,w,c
  4483  0066BC  B4D8               	btfsc	status,2,c
  4484  0066BE  D00F               	goto	i2u1530_40
  4485  0066C0  C008  FFD9         	movff	strncmp@l,fsr2l
  4486  0066C4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4487  0066C8  50DF               	movf	indf2,w,c
  4488  0066CA  6E07               	movwf	??_strncmp^0,c
  4489  0066CC  C00A  FFF6         	movff	strncmp@r,tblptrl
  4490  0066D0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4491  0066D4                     	if	0	;tblptru may be non-zero
  4492  0066D4                     	endif
  4493  0066D4                     	if	0	;tblptru may be non-zero
  4494  0066D4                     	endif
  4495  0066D4  0008               	tblrd		*
  4496  0066D6  50F5               	movf	tablat,w,c
  4497  0066D8  1807               	xorwf	??_strncmp^0,w,c
  4498  0066DA  B4D8               	btfsc	status,2,c
  4499  0066DC  D7D6               	goto	i2l11331
  4500  0066DE                     i2u1530_40:
  4501  0066DE  C008  FFD9         	movff	strncmp@l,fsr2l
  4502  0066E2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4503  0066E6  50DF               	movf	indf2,w,c
  4504  0066E8  6E07               	movwf	??_strncmp^0,c
  4505  0066EA  C00A  FFF6         	movff	strncmp@r,tblptrl
  4506  0066EE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4507  0066F2                     	if	0	;tblptru may be non-zero
  4508  0066F2                     	endif
  4509  0066F2                     	if	0	;tblptru may be non-zero
  4510  0066F2                     	endif
  4511  0066F2  0008               	tblrd		*
  4512  0066F4  50F5               	movf	tablat,w,c
  4513  0066F6  5C07               	subwf	??_strncmp^0,w,c
  4514  0066F8  6E01               	movwf	?_strncmp^0,c
  4515  0066FA  6A02               	clrf	(?_strncmp+1)^0,c
  4516  0066FC  A0D8               	btfss	status,0,c
  4517  0066FE  0602               	decf	(?_strncmp+1)^0,f,c
  4518  006700  0012               	return		;funcret
  4519  006702                     __end_of_strncmp:
  4520                           	opt callstack 0
  4521                           
  4522 ;; *************** function _stoa *****************
  4523 ;; Defined at:
  4524 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  4527 ;;		 -> sprintf@f(6), 
  4528 ;;  s               2   11[COMRAM] PTR unsigned char 
  4529 ;;		 -> ?_sprintf(2), r(100), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  nuls            7   14[COMRAM] unsigned char [7]
  4532 ;;  l               2   29[COMRAM] int 
  4533 ;;  p               2   27[COMRAM] int 
  4534 ;;  cp              2   25[COMRAM] PTR unsigned char 
  4535 ;;		 -> ?_sprintf(2), stoa@nuls(7), r(100), 
  4536 ;;  w               2   23[COMRAM] int 
  4537 ;;  i               2   21[COMRAM] int 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  2    9[COMRAM] int 
  4540 ;; Registers used:
  4541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4547 ;;      Params:         4       0       0       0       0       0       0
  4548 ;;      Locals:        17       0       0       0       0       0       0
  4549 ;;      Temps:          1       0       0       0       0       0       0
  4550 ;;      Totals:        22       0       0       0       0       0       0
  4551 ;;Total ram usage:       22 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    2
  4554 ;; This function calls:
  4555 ;;		_fputc
  4556 ;;		_strlen
  4557 ;; This function is called by:
  4558 ;;		_vfpfcnvrt
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text23
  4563  005FCA                     __ptext23:
  4564                           	opt callstack 0
  4565  005FCA                     _stoa:
  4566                           	opt callstack 17
  4567                           
  4568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  4569                           
  4570                           ;incstack = 0
  4571  005FCA  EE22  F092         	lfsr	2,stoa@F1161
  4572  005FCE  EE10  F00F         	lfsr	1,stoa@nuls
  4573  005FD2  0E06               	movlw	6
  4574  005FD4                     i2u1510_41:
  4575  005FD4  CFDB FFE3          	movff	plusw2,plusw1
  4576  005FD8  06E8               	decf	wreg,f,c
  4577  005FDA  E2FC               	bc	i2u1510_41
  4578                           
  4579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  4580  005FDC  C00C  F01A         	movff	stoa@s,stoa@cp
  4581  005FE0  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  4582                           
  4583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  4584  005FE4  501A               	movf	stoa@cp^0,w,c
  4585  005FE6  101B               	iorwf	(stoa@cp+1)^0,w,c
  4586  005FE8  A4D8               	btfss	status,2,c
  4587  005FEA  D004               	goto	i2l11249
  4588                           
  4589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  4590  005FEC  0E0F               	movlw	low stoa@nuls
  4591  005FEE  6E1A               	movwf	stoa@cp^0,c
  4592  005FF0  0E00               	movlw	high stoa@nuls
  4593  005FF2  6E1B               	movwf	(stoa@cp+1)^0,c
  4594  005FF4                     i2l11249:
  4595                           
  4596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  4597  005FF4  C01A  F001         	movff	stoa@cp,strlen@s
  4598  005FF8  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  4599  005FFC  EC01  F038         	call	_strlen	;wreg free
  4600  006000  C001  F01E         	movff	?_strlen,stoa@l
  4601  006004  C002  F01F         	movff	?_strlen+1,stoa@l+1
  4602                           
  4603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  4604  006008  C222  F01C         	movff	_prec,stoa@p
  4605  00600C  C223  F01D         	movff	_prec+1,stoa@p+1
  4606                           
  4607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  4608  006010  BE1D               	btfsc	(stoa@p+1)^0,7,c
  4609  006012  D00E               	goto	i2l439
  4610  006014  501E               	movf	stoa@l^0,w,c
  4611  006016  5C1C               	subwf	stoa@p^0,w,c
  4612  006018  501D               	movf	(stoa@p+1)^0,w,c
  4613  00601A  0A80               	xorlw	128
  4614  00601C  6E0E               	movwf	??_stoa^0,c
  4615  00601E  501F               	movf	(stoa@l+1)^0,w,c
  4616  006020  0A80               	xorlw	128
  4617  006022  580E               	subwfb	??_stoa^0,w,c
  4618  006024  B0D8               	btfsc	status,0,c
  4619  006026  D004               	goto	i2l439
  4620  006028  C01C  F01E         	movff	stoa@p,stoa@l
  4621  00602C  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  4622  006030                     i2l439:
  4623                           
  4624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  4625  006030  C01E  F01C         	movff	stoa@l,stoa@p
  4626  006034  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  4627                           
  4628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  4629  006038  C220  F018         	movff	_width,stoa@w
  4630  00603C  C221  F019         	movff	_width+1,stoa@w+1
  4631                           
  4632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  4633  006040  0102               	movlb	2	; () banked
  4634  006042  A124               	btfss	_flags& (0+255),0,b
  4635  006044  D00D               	goto	i2l11263
  4636  006046  D016               	goto	i2u1515_40
  4637  006048                     i2l11259:
  4638                           
  4639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  4640  006048  0E00               	movlw	0
  4641  00604A  6E02               	movwf	(fputc@c+1)^0,c
  4642  00604C  0E20               	movlw	32
  4643  00604E  6E01               	movwf	fputc@c^0,c
  4644  006050  C00A  F003         	movff	stoa@fp,fputc@fp
  4645  006054  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4646  006058  EC81  F033         	call	_fputc	;wreg free
  4647                           
  4648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  4649  00605C  4A1E               	infsnz	stoa@l^0,f,c
  4650  00605E  2A1F               	incf	(stoa@l+1)^0,f,c
  4651  006060                     i2l11263:
  4652                           
  4653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  4654  006060  5018               	movf	stoa@w^0,w,c
  4655  006062  5C1E               	subwf	stoa@l^0,w,c
  4656  006064  501F               	movf	(stoa@l+1)^0,w,c
  4657  006066  0A80               	xorlw	128
  4658  006068  6E0E               	movwf	??_stoa^0,c
  4659  00606A  5019               	movf	(stoa@w+1)^0,w,c
  4660  00606C  0A80               	xorlw	128
  4661  00606E  580E               	subwfb	??_stoa^0,w,c
  4662  006070  A0D8               	btfss	status,0,c
  4663  006072  D7EA               	goto	i2l11259
  4664  006074                     i2u1515_40:
  4665                           
  4666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  4667  006074  0E00               	movlw	0
  4668  006076  6E17               	movwf	(stoa@i+1)^0,c
  4669  006078  0E00               	movlw	0
  4670  00607A  6E16               	movwf	stoa@i^0,c
  4671                           
  4672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4673  00607C  D013               	goto	i2l11273
  4674  00607E                     i2l11267:
  4675                           
  4676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  4677  00607E  C01A  FFD9         	movff	stoa@cp,fsr2l
  4678  006082  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  4679  006086  50DF               	movf	indf2,w,c
  4680  006088  6E0E               	movwf	??_stoa^0,c
  4681  00608A  500E               	movf	??_stoa^0,w,c
  4682  00608C  6E01               	movwf	fputc@c^0,c
  4683  00608E  6A02               	clrf	(fputc@c+1)^0,c
  4684  006090  C00A  F003         	movff	stoa@fp,fputc@fp
  4685  006094  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4686  006098  EC81  F033         	call	_fputc	;wreg free
  4687                           
  4688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  4689  00609C  4A1A               	infsnz	stoa@cp^0,f,c
  4690  00609E  2A1B               	incf	(stoa@cp+1)^0,f,c
  4691                           
  4692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  4693  0060A0  4A16               	infsnz	stoa@i^0,f,c
  4694  0060A2  2A17               	incf	(stoa@i+1)^0,f,c
  4695  0060A4                     i2l11273:
  4696                           
  4697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4698  0060A4  501C               	movf	stoa@p^0,w,c
  4699  0060A6  5C16               	subwf	stoa@i^0,w,c
  4700  0060A8  5017               	movf	(stoa@i+1)^0,w,c
  4701  0060AA  0A80               	xorlw	128
  4702  0060AC  6E0E               	movwf	??_stoa^0,c
  4703  0060AE  501D               	movf	(stoa@p+1)^0,w,c
  4704  0060B0  0A80               	xorlw	128
  4705  0060B2  580E               	subwfb	??_stoa^0,w,c
  4706  0060B4  A0D8               	btfss	status,0,c
  4707  0060B6  D7E3               	goto	i2l11267
  4708                           
  4709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  4710  0060B8  0102               	movlb	2	; () banked
  4711  0060BA  B124               	btfsc	_flags& (0+255),0,b
  4712  0060BC  D00D               	goto	i2l11281
  4713  0060BE  D016               	goto	i2u1518_40
  4714  0060C0                     i2l11277:
  4715                           
  4716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  4717  0060C0  0E00               	movlw	0
  4718  0060C2  6E02               	movwf	(fputc@c+1)^0,c
  4719  0060C4  0E20               	movlw	32
  4720  0060C6  6E01               	movwf	fputc@c^0,c
  4721  0060C8  C00A  F003         	movff	stoa@fp,fputc@fp
  4722  0060CC  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4723  0060D0  EC81  F033         	call	_fputc	;wreg free
  4724                           
  4725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  4726  0060D4  4A1E               	infsnz	stoa@l^0,f,c
  4727  0060D6  2A1F               	incf	(stoa@l+1)^0,f,c
  4728  0060D8                     i2l11281:
  4729                           
  4730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  4731  0060D8  5018               	movf	stoa@w^0,w,c
  4732  0060DA  5C1E               	subwf	stoa@l^0,w,c
  4733  0060DC  501F               	movf	(stoa@l+1)^0,w,c
  4734  0060DE  0A80               	xorlw	128
  4735  0060E0  6E0E               	movwf	??_stoa^0,c
  4736  0060E2  5019               	movf	(stoa@w+1)^0,w,c
  4737  0060E4  0A80               	xorlw	128
  4738  0060E6  580E               	subwfb	??_stoa^0,w,c
  4739  0060E8  A0D8               	btfss	status,0,c
  4740  0060EA  D7EA               	goto	i2l11277
  4741  0060EC                     i2u1518_40:
  4742                           
  4743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  4744                           
  4745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 586:     }
  4746  0060EC  C01E  F00A         	movff	stoa@l,?_stoa
  4747  0060F0  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  4748  0060F4  0012               	return		;funcret
  4749  0060F6                     __end_of_stoa:
  4750                           	opt callstack 0
  4751                           
  4752 ;; *************** function _efgtoa *****************
  4753 ;; Defined at:
  4754 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
  4757 ;;		 -> sprintf@f(6), 
  4758 ;;  f               4   80[BANK0 ] PTR struct _IO_FILE
  4759 ;;  c               1   84[BANK0 ] unsigned char 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;  u               4  240[BANK1 ] unsigned char 
  4762 ;;  g               4  230[BANK1 ] unsigned char 
  4763 ;;  l               4  226[BANK1 ] unsigned char 
  4764 ;;  h               4  222[BANK1 ] unsigned char 
  4765 ;;  ou              4  188[BANK1 ] unsigned char 
  4766 ;;  n               2  238[BANK1 ] int 
  4767 ;;  e               2  236[BANK1 ] int 
  4768 ;;  i               2  234[BANK1 ] int 
  4769 ;;  w               2  219[BANK1 ] int 
  4770 ;;  p               2  216[BANK1 ] int 
  4771 ;;  sign            2  214[BANK1 ] int 
  4772 ;;  d               2  212[BANK1 ] int 
  4773 ;;  ne              2  210[BANK1 ] int 
  4774 ;;  m               2  208[BANK1 ] int 
  4775 ;;  pp              2  206[BANK1 ] int 
  4776 ;;  t               2  204[BANK1 ] int 
  4777 ;;  mode            1  221[BANK1 ] unsigned char 
  4778 ;;  nmode           1  218[BANK1 ] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  2   78[BANK0 ] int 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4788 ;;      Params:         0       7       0       0       0       0       0
  4789 ;;      Locals:         0       0      56       0       0       0       0
  4790 ;;      Temps:          0       5       0       0       0       0       0
  4791 ;;      Totals:         0      12      56       0       0       0       0
  4792 ;;Total ram usage:       68 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    4
  4795 ;; This function calls:
  4796 ;;		___awdiv
  4797 ;;		___fladd
  4798 ;;		___fldiv
  4799 ;;		___fleq
  4800 ;;		___flge
  4801 ;;		___flmul
  4802 ;;		___flneg
  4803 ;;		___flsub
  4804 ;;		___fltol
  4805 ;;		___fpclassifyf
  4806 ;;		_floorf
  4807 ;;		_isupper
  4808 ;;		_pad
  4809 ;;		_strcpy
  4810 ;;		_tolower
  4811 ;;		i2___awmod
  4812 ;; This function is called by:
  4813 ;;		_vfpfcnvrt
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text24
  4818  002D38                     __ptext24:
  4819                           	opt callstack 0
  4820  002D38                     _efgtoa:
  4821                           	opt callstack 15
  4822                           
  4823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  4824                           
  4825                           ;incstack = 0
  4826  002D38  0E00               	movlw	0
  4827  002D3A  0101               	movlb	1	; () banked
  4828  002D3C  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  4829  002D3E  0E00               	movlw	0
  4830  002D40  6FD6               	movwf	efgtoa@sign& (0+255),b
  4831                           
  4832                           ; BSR set to: 1
  4833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  4834  002D42  C0D0  F1E6         	movff	efgtoa@f,efgtoa@g
  4835  002D46  C0D1  F1E7         	movff	efgtoa@f+1,efgtoa@g+1
  4836  002D4A  C0D2  F1E8         	movff	efgtoa@f+2,efgtoa@g+2
  4837  002D4E  C0D3  F1E9         	movff	efgtoa@f+3,efgtoa@g+3
  4838                           
  4839                           ; BSR set to: 1
  4840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  4841  002D52  AFE9               	btfss	(efgtoa@g+3)& (0+255),7,b
  4842  002D54  D016               	goto	i2l10953
  4843                           
  4844                           ; BSR set to: 1
  4845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  4846  002D56  0E00               	movlw	0
  4847  002D58  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  4848  002D5A  0E01               	movlw	1
  4849  002D5C  6FD6               	movwf	efgtoa@sign& (0+255),b
  4850                           
  4851                           ; BSR set to: 1
  4852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  4853  002D5E  C1E6  F001         	movff	efgtoa@g,___flneg@f1
  4854  002D62  C1E7  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4855  002D66  C1E8  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4856  002D6A  C1E9  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4857  002D6E  ECD3  F037         	call	___flneg	;wreg free
  4858  002D72  C001  F1E6         	movff	?___flneg,efgtoa@g
  4859  002D76  C002  F1E7         	movff	?___flneg+1,efgtoa@g+1
  4860  002D7A  C003  F1E8         	movff	?___flneg+2,efgtoa@g+2
  4861  002D7E  C004  F1E9         	movff	?___flneg+3,efgtoa@g+3
  4862  002D82                     i2l10953:
  4863                           
  4864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  4865  002D82  0E00               	movlw	0
  4866  002D84  0101               	movlb	1	; () banked
  4867  002D86  6FEF               	movwf	(efgtoa@n+1)& (0+255),b
  4868  002D88  0E00               	movlw	0
  4869  002D8A  6FEE               	movwf	efgtoa@n& (0+255),b
  4870                           
  4871                           ; BSR set to: 1
  4872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  4873  002D8C  C220  F1DB         	movff	_width,efgtoa@w
  4874  002D90  C221  F1DC         	movff	_width+1,efgtoa@w+1
  4875                           
  4876                           ; BSR set to: 1
  4877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  4878  002D94  51D6               	movf	efgtoa@sign& (0+255),w,b
  4879  002D96  11D7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4880  002D98  A4D8               	btfss	status,2,c
  4881  002D9A  D003               	goto	i2u1460_40
  4882                           
  4883                           ; BSR set to: 1
  4884  002D9C  0102               	movlb	2	; () banked
  4885  002D9E  A524               	btfss	_flags& (0+255),2,b
  4886  002DA0  D014               	goto	i2l10973
  4887  002DA2                     i2u1460_40:
  4888                           
  4889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  4890  002DA2  0101               	movlb	1	; () banked
  4891  002DA4  51D6               	movf	efgtoa@sign& (0+255),w,b
  4892  002DA6  11D7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4893  002DA8  A4D8               	btfss	status,2,c
  4894  002DAA  D004               	goto	i2l10965
  4895                           
  4896                           ; BSR set to: 1
  4897  002DAC  0E00               	movlw	0
  4898  002DAE  6FC1               	movwf	(_efgtoa$1003+1)& (0+255),b
  4899  002DB0  0E2B               	movlw	43
  4900  002DB2  D003               	goto	L1
  4901  002DB4                     i2l10965:
  4902                           
  4903                           ; BSR set to: 1
  4904  002DB4  0E00               	movlw	0
  4905  002DB6  6FC1               	movwf	(_efgtoa$1003+1)& (0+255),b
  4906  002DB8  0E2D               	movlw	45
  4907  002DBA                     L1:
  4908  002DBA  6FC0               	movwf	_efgtoa$1003& (0+255),b
  4909                           
  4910                           ; BSR set to: 1
  4911  002DBC  C1C0  F22C         	movff	_efgtoa$1003,_dbuf
  4912                           
  4913                           ; BSR set to: 1
  4914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  4915  002DC0  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  4916  002DC2  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  4917                           
  4918                           ; BSR set to: 1
  4919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  4920  002DC4  07DB               	decf	efgtoa@w& (0+255),f,b
  4921  002DC6  A0D8               	btfss	status,0,c
  4922  002DC8  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  4923  002DCA                     i2l10973:
  4924                           
  4925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4926  002DCA  C1E6  F001         	movff	efgtoa@g,___fpclassifyf@x
  4927  002DCE  C1E7  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4928  002DD2  C1E8  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4929  002DD6  C1E9  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4930  002DDA  EC6C  F032         	call	___fpclassifyf	;wreg free
  4931  002DDE  0401               	decf	?___fpclassifyf^0,w,c
  4932  002DE0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4933  002DE2  A4D8               	btfss	status,2,c
  4934  002DE4  D04D               	goto	i2l10991
  4935  002DE6  0EBF               	movlw	191
  4936  002DE8  0100               	movlb	0	; () banked
  4937  002DEA  6FD5               	movwf	??_efgtoa& (0+255),b
  4938  002DEC  0EFF               	movlw	255
  4939  002DEE  6FD6               	movwf	(??_efgtoa+1)& (0+255),b
  4940  002DF0  51D4               	movf	efgtoa@c& (0+255),w,b
  4941  002DF2  6FD7               	movwf	(??_efgtoa+2)& (0+255),b
  4942  002DF4  6BD8               	clrf	(??_efgtoa+3)& (0+255),b
  4943  002DF6  51D5               	movf	??_efgtoa& (0+255),w,b
  4944  002DF8  27D7               	addwf	(??_efgtoa+2)& (0+255),f,b
  4945  002DFA  51D6               	movf	(??_efgtoa+1)& (0+255),w,b
  4946  002DFC  23D8               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4947  002DFE  51D8               	movf	(??_efgtoa+3)& (0+255),w,b
  4948  002E00  E106               	bnz	i2u1463_40
  4949  002E02  0E1A               	movlw	26
  4950  002E04  5DD7               	subwf	(??_efgtoa+2)& (0+255),w,b
  4951  002E06  B0D8               	btfsc	status,0,c
  4952  002E08  D002               	goto	i2u1463_40
  4953  002E0A  0E01               	movlw	1
  4954  002E0C  D001               	goto	i2u1464_40
  4955  002E0E                     i2u1463_40:
  4956  002E0E  0E00               	movlw	0
  4957  002E10                     i2u1464_40:
  4958  002E10  0101               	movlb	1	; () banked
  4959  002E12  6FC2               	movwf	_efgtoa$1004& (0+255),b
  4960  002E14  6BC3               	clrf	(_efgtoa$1004+1)& (0+255),b
  4961                           
  4962                           ; BSR set to: 1
  4963  002E16  51C2               	movf	_efgtoa$1004& (0+255),w,b
  4964  002E18  11C3               	iorwf	(_efgtoa$1004+1)& (0+255),w,b
  4965  002E1A  B4D8               	btfsc	status,2,c
  4966  002E1C  D00D               	goto	i2l10983
  4967                           
  4968                           ; BSR set to: 1
  4969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  4970  002E1E  0E2C               	movlw	low _dbuf
  4971  002E20  25EE               	addwf	efgtoa@n& (0+255),w,b
  4972  002E22  6E01               	movwf	strcpy@dest^0,c
  4973  002E24  0E02               	movlw	high _dbuf
  4974  002E26  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4975  002E28  6E02               	movwf	(strcpy@dest+1)^0,c
  4976  002E2A  0EB7               	movlw	low STR_5
  4977  002E2C  6E03               	movwf	strcpy@src^0,c
  4978  002E2E  0E06               	movlw	high STR_5
  4979  002E30  6E04               	movwf	(strcpy@src+1)^0,c
  4980  002E32  EC17  F036         	call	_strcpy	;wreg free
  4981                           
  4982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  4983  002E36  D00C               	goto	i2l10985
  4984  002E38                     i2l10983:
  4985                           
  4986                           ; BSR set to: 1
  4987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  4988  002E38  0E2C               	movlw	low _dbuf
  4989  002E3A  25EE               	addwf	efgtoa@n& (0+255),w,b
  4990  002E3C  6E01               	movwf	strcpy@dest^0,c
  4991  002E3E  0E02               	movlw	high _dbuf
  4992  002E40  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4993  002E42  6E02               	movwf	(strcpy@dest+1)^0,c
  4994  002E44  0EBF               	movlw	low STR_6
  4995  002E46  6E03               	movwf	strcpy@src^0,c
  4996  002E48  0E06               	movlw	high STR_6
  4997  002E4A  6E04               	movwf	(strcpy@src+1)^0,c
  4998  002E4C  EC17  F036         	call	_strcpy	;wreg free
  4999  002E50                     i2l10985:
  5000                           
  5001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  5002  002E50  0101               	movlb	1	; () banked
  5003  002E52  0EFD               	movlw	253
  5004  002E54  27DB               	addwf	efgtoa@w& (0+255),f,b
  5005  002E56  0EFF               	movlw	255
  5006  002E58  23DC               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5007  002E5A                     i2l10987:
  5008                           
  5009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  5010  002E5A  C0CE  F011         	movff	efgtoa@fp,pad@fp
  5011  002E5E  C0CF  F012         	movff	efgtoa@fp+1,pad@fp+1
  5012  002E62  0E2C               	movlw	low _dbuf
  5013  002E64  6E13               	movwf	pad@buf^0,c
  5014  002E66  0E02               	movlw	high _dbuf
  5015  002E68  6E14               	movwf	(pad@buf+1)^0,c
  5016  002E6A  C1DB  F015         	movff	efgtoa@w,pad@p
  5017  002E6E  C1DC  F016         	movff	efgtoa@w+1,pad@p+1
  5018  002E72  ECD1  F033         	call	_pad	;wreg free
  5019  002E76  C011  F0CE         	movff	?_pad,?_efgtoa
  5020  002E7A  C012  F0CF         	movff	?_pad+1,?_efgtoa+1
  5021  002E7E  0012               	return	
  5022  002E80                     i2l10991:
  5023                           
  5024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5025  002E80  C1E6  F001         	movff	efgtoa@g,___fpclassifyf@x
  5026  002E84  C1E7  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5027  002E88  C1E8  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5028  002E8C  C1E9  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5029  002E90  EC6C  F032         	call	___fpclassifyf	;wreg free
  5030  002E94  5001               	movf	?___fpclassifyf^0,w,c
  5031  002E96  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5032  002E98  A4D8               	btfss	status,2,c
  5033  002E9A  D036               	goto	i2l11009
  5034  002E9C  0EBF               	movlw	191
  5035  002E9E  0100               	movlb	0	; () banked
  5036  002EA0  6FD5               	movwf	??_efgtoa& (0+255),b
  5037  002EA2  0EFF               	movlw	255
  5038  002EA4  6FD6               	movwf	(??_efgtoa+1)& (0+255),b
  5039  002EA6  51D4               	movf	efgtoa@c& (0+255),w,b
  5040  002EA8  6FD7               	movwf	(??_efgtoa+2)& (0+255),b
  5041  002EAA  6BD8               	clrf	(??_efgtoa+3)& (0+255),b
  5042  002EAC  51D5               	movf	??_efgtoa& (0+255),w,b
  5043  002EAE  27D7               	addwf	(??_efgtoa+2)& (0+255),f,b
  5044  002EB0  51D6               	movf	(??_efgtoa+1)& (0+255),w,b
  5045  002EB2  23D8               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5046  002EB4  51D8               	movf	(??_efgtoa+3)& (0+255),w,b
  5047  002EB6  E106               	bnz	i2u1467_40
  5048  002EB8  0E1A               	movlw	26
  5049  002EBA  5DD7               	subwf	(??_efgtoa+2)& (0+255),w,b
  5050  002EBC  B0D8               	btfsc	status,0,c
  5051  002EBE  D002               	goto	i2u1467_40
  5052  002EC0  0E01               	movlw	1
  5053  002EC2  D001               	goto	i2u1468_40
  5054  002EC4                     i2u1467_40:
  5055  002EC4  0E00               	movlw	0
  5056  002EC6                     i2u1468_40:
  5057  002EC6  0101               	movlb	1	; () banked
  5058  002EC8  6FC4               	movwf	_efgtoa$1008& (0+255),b
  5059  002ECA  6BC5               	clrf	(_efgtoa$1008+1)& (0+255),b
  5060                           
  5061                           ; BSR set to: 1
  5062  002ECC  51C4               	movf	_efgtoa$1008& (0+255),w,b
  5063  002ECE  11C5               	iorwf	(_efgtoa$1008+1)& (0+255),w,b
  5064  002ED0  B4D8               	btfsc	status,2,c
  5065  002ED2  D00D               	goto	i2l11001
  5066                           
  5067                           ; BSR set to: 1
  5068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  5069  002ED4  0E2C               	movlw	low _dbuf
  5070  002ED6  25EE               	addwf	efgtoa@n& (0+255),w,b
  5071  002ED8  6E01               	movwf	strcpy@dest^0,c
  5072  002EDA  0E02               	movlw	high _dbuf
  5073  002EDC  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5074  002EDE  6E02               	movwf	(strcpy@dest+1)^0,c
  5075  002EE0  0EBB               	movlw	low STR_9
  5076  002EE2  6E03               	movwf	strcpy@src^0,c
  5077  002EE4  0E06               	movlw	high STR_9
  5078  002EE6  6E04               	movwf	(strcpy@src+1)^0,c
  5079  002EE8  EC17  F036         	call	_strcpy	;wreg free
  5080                           
  5081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  5082  002EEC  D7B1               	goto	i2l10985
  5083  002EEE                     i2l11001:
  5084                           
  5085                           ; BSR set to: 1
  5086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  5087  002EEE  0E2C               	movlw	low _dbuf
  5088  002EF0  25EE               	addwf	efgtoa@n& (0+255),w,b
  5089  002EF2  6E01               	movwf	strcpy@dest^0,c
  5090  002EF4  0E02               	movlw	high _dbuf
  5091  002EF6  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5092  002EF8  6E02               	movwf	(strcpy@dest+1)^0,c
  5093  002EFA  0EC3               	movlw	low STR_10
  5094  002EFC  6E03               	movwf	strcpy@src^0,c
  5095  002EFE  0E06               	movlw	high STR_10
  5096  002F00  6E04               	movwf	(strcpy@src+1)^0,c
  5097  002F02  EC17  F036         	call	_strcpy	;wreg free
  5098  002F06  D7A4               	goto	i2l10985
  5099  002F08                     i2l11009:
  5100                           
  5101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  5102  002F08  0E00               	movlw	0
  5103  002F0A  0101               	movlb	1	; () banked
  5104  002F0C  6FF0               	movwf	efgtoa@u& (0+255),b
  5105  002F0E  0E00               	movlw	0
  5106  002F10  6FF1               	movwf	(efgtoa@u+1)& (0+255),b
  5107  002F12  0E80               	movlw	128
  5108  002F14  6FF2               	movwf	(efgtoa@u+2)& (0+255),b
  5109  002F16  0E3F               	movlw	63
  5110  002F18  6FF3               	movwf	(efgtoa@u+3)& (0+255),b
  5111                           
  5112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  5113  002F1A  0E00               	movlw	0
  5114  002F1C  6FED               	movwf	(efgtoa@e+1)& (0+255),b
  5115  002F1E  0E00               	movlw	0
  5116  002F20  6FEC               	movwf	efgtoa@e& (0+255),b
  5117                           
  5118                           ; BSR set to: 1
  5119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  5120  002F22  C1E6  F001         	movff	efgtoa@g,___fleq@ff1
  5121  002F26  C1E7  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5122  002F2A  C1E8  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5123  002F2E  C1E9  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5124  002F32  0E00               	movlw	0
  5125  002F34  6E05               	movwf	___fleq@ff2^0,c
  5126  002F36  0E00               	movlw	0
  5127  002F38  6E06               	movwf	(___fleq@ff2+1)^0,c
  5128  002F3A  0E00               	movlw	0
  5129  002F3C  6E07               	movwf	(___fleq@ff2+2)^0,c
  5130  002F3E  0E00               	movlw	0
  5131  002F40  6E08               	movwf	(___fleq@ff2+3)^0,c
  5132  002F42  EC1E  F034         	call	___fleq	;wreg free
  5133  002F46  A0D8               	btfss	status,0,c
  5134  002F48  D01E               	goto	i2l11019
  5135  002F4A  D076               	goto	i2u1472_40
  5136  002F4C                     i2l11015:
  5137                           
  5138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  5139  002F4C  C1F0  F011         	movff	efgtoa@u,___flmul@b
  5140  002F50  C1F1  F012         	movff	efgtoa@u+1,___flmul@b+1
  5141  002F54  C1F2  F013         	movff	efgtoa@u+2,___flmul@b+2
  5142  002F58  C1F3  F014         	movff	efgtoa@u+3,___flmul@b+3
  5143  002F5C  0E00               	movlw	0
  5144  002F5E  6E15               	movwf	___flmul@a^0,c
  5145  002F60  0E00               	movlw	0
  5146  002F62  6E16               	movwf	(___flmul@a+1)^0,c
  5147  002F64  0E20               	movlw	32
  5148  002F66  6E17               	movwf	(___flmul@a+2)^0,c
  5149  002F68  0E41               	movlw	65
  5150  002F6A  6E18               	movwf	(___flmul@a+3)^0,c
  5151  002F6C  EC6D  F023         	call	___flmul	;wreg free
  5152  002F70  C011  F1F0         	movff	?___flmul,efgtoa@u
  5153  002F74  C012  F1F1         	movff	?___flmul+1,efgtoa@u+1
  5154  002F78  C013  F1F2         	movff	?___flmul+2,efgtoa@u+2
  5155  002F7C  C014  F1F3         	movff	?___flmul+3,efgtoa@u+3
  5156                           
  5157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  5158  002F80  0101               	movlb	1	; () banked
  5159  002F82  4BEC               	infsnz	efgtoa@e& (0+255),f,b
  5160  002F84  2BED               	incf	(efgtoa@e+1)& (0+255),f,b
  5161  002F86                     i2l11019:
  5162                           
  5163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  5164  002F86  C1E6  F032         	movff	efgtoa@g,___flge@ff1
  5165  002F8A  C1E7  F033         	movff	efgtoa@g+1,___flge@ff1+1
  5166  002F8E  C1E8  F034         	movff	efgtoa@g+2,___flge@ff1+2
  5167  002F92  C1E9  F035         	movff	efgtoa@g+3,___flge@ff1+3
  5168  002F96  0E00               	movlw	0
  5169  002F98  6E15               	movwf	___flmul@a^0,c
  5170  002F9A  0E00               	movlw	0
  5171  002F9C  6E16               	movwf	(___flmul@a+1)^0,c
  5172  002F9E  0E20               	movlw	32
  5173  002FA0  6E17               	movwf	(___flmul@a+2)^0,c
  5174  002FA2  0E41               	movlw	65
  5175  002FA4  6E18               	movwf	(___flmul@a+3)^0,c
  5176  002FA6  C1F0  F011         	movff	efgtoa@u,___flmul@b
  5177  002FAA  C1F1  F012         	movff	efgtoa@u+1,___flmul@b+1
  5178  002FAE  C1F2  F013         	movff	efgtoa@u+2,___flmul@b+2
  5179  002FB2  C1F3  F014         	movff	efgtoa@u+3,___flmul@b+3
  5180  002FB6  EC6D  F023         	call	___flmul	;wreg free
  5181  002FBA  C011  F036         	movff	?___flmul,___flge@ff2
  5182  002FBE  C012  F037         	movff	?___flmul+1,___flge@ff2+1
  5183  002FC2  C013  F038         	movff	?___flmul+2,___flge@ff2+2
  5184  002FC6  C014  F039         	movff	?___flmul+3,___flge@ff2+3
  5185  002FCA  EC04  F032         	call	___flge	;wreg free
  5186  002FCE  A0D8               	btfss	status,0,c
  5187  002FD0  D01F               	goto	i2l11025
  5188  002FD2  D7BC               	goto	i2l11015
  5189  002FD4                     i2l11021:
  5190                           
  5191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  5192  002FD4  C1F0  F032         	movff	efgtoa@u,___fldiv@b
  5193  002FD8  C1F1  F033         	movff	efgtoa@u+1,___fldiv@b+1
  5194  002FDC  C1F2  F034         	movff	efgtoa@u+2,___fldiv@b+2
  5195  002FE0  C1F3  F035         	movff	efgtoa@u+3,___fldiv@b+3
  5196  002FE4  0E00               	movlw	0
  5197  002FE6  6E36               	movwf	___fldiv@a^0,c
  5198  002FE8  0E00               	movlw	0
  5199  002FEA  6E37               	movwf	(___fldiv@a+1)^0,c
  5200  002FEC  0E20               	movlw	32
  5201  002FEE  6E38               	movwf	(___fldiv@a+2)^0,c
  5202  002FF0  0E41               	movlw	65
  5203  002FF2  6E39               	movwf	(___fldiv@a+3)^0,c
  5204  002FF4  EC9C  F026         	call	___fldiv	;wreg free
  5205  002FF8  C032  F1F0         	movff	?___fldiv,efgtoa@u
  5206  002FFC  C033  F1F1         	movff	?___fldiv+1,efgtoa@u+1
  5207  003000  C034  F1F2         	movff	?___fldiv+2,efgtoa@u+2
  5208  003004  C035  F1F3         	movff	?___fldiv+3,efgtoa@u+3
  5209                           
  5210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  5211  003008  0101               	movlb	1	; () banked
  5212  00300A  07EC               	decf	efgtoa@e& (0+255),f,b
  5213  00300C  A0D8               	btfss	status,0,c
  5214  00300E  07ED               	decf	(efgtoa@e+1)& (0+255),f,b
  5215  003010                     i2l11025:
  5216                           
  5217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  5218  003010  C1E6  F032         	movff	efgtoa@g,___flge@ff1
  5219  003014  C1E7  F033         	movff	efgtoa@g+1,___flge@ff1+1
  5220  003018  C1E8  F034         	movff	efgtoa@g+2,___flge@ff1+2
  5221  00301C  C1E9  F035         	movff	efgtoa@g+3,___flge@ff1+3
  5222  003020  C1F0  F036         	movff	efgtoa@u,___flge@ff2
  5223  003024  C1F1  F037         	movff	efgtoa@u+1,___flge@ff2+1
  5224  003028  C1F2  F038         	movff	efgtoa@u+2,___flge@ff2+2
  5225  00302C  C1F3  F039         	movff	efgtoa@u+3,___flge@ff2+3
  5226  003030  EC04  F032         	call	___flge	;wreg free
  5227  003034  A0D8               	btfss	status,0,c
  5228  003036  D7CE               	goto	i2l11021
  5229  003038                     i2u1472_40:
  5230                           
  5231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  5232  003038  C0D4  F007         	movff	efgtoa@c,tolower@c
  5233  00303C  6A08               	clrf	(tolower@c+1)^0,c
  5234  00303E  EC40  F036         	call	_tolower	;wreg free
  5235  003042  5007               	movf	?_tolower^0,w,c
  5236  003044  0101               	movlb	1	; () banked
  5237  003046  6FDD               	movwf	efgtoa@mode& (0+255),b
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  5241  003048  C1DD  F1DA         	movff	efgtoa@mode,efgtoa@nmode
  5242                           
  5243                           ; BSR set to: 1
  5244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  5245  00304C  0E67               	movlw	103
  5246  00304E  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  5247  003050  A4D8               	btfss	status,2,c
  5248  003052  D01B               	goto	i2l11041
  5249                           
  5250                           ; BSR set to: 1
  5251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  5252  003054  0102               	movlb	2	; () banked
  5253  003056  5122               	movf	_prec& (0+255),w,b
  5254  003058  1123               	iorwf	(_prec+1)& (0+255),w,b
  5255  00305A  A4D8               	btfss	status,2,c
  5256  00305C  D004               	goto	i2l11037
  5257                           
  5258                           ; BSR set to: 2
  5259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  5260  00305E  0E00               	movlw	0
  5261  003060  6F23               	movwf	(_prec+1)& (0+255),b
  5262  003062  0E01               	movlw	1
  5263  003064  6F22               	movwf	_prec& (0+255),b
  5264  003066                     i2l11037:
  5265                           
  5266                           ; BSR set to: 2
  5267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  5268  003066  BF23               	btfsc	(_prec+1)& (0+255),7,b
  5269  003068  D005               	goto	i2u1475_40
  5270  00306A  5123               	movf	(_prec+1)& (0+255),w,b
  5271  00306C  E109               	bnz	i2l375
  5272  00306E  0522               	decf	_prec& (0+255),w,b
  5273  003070  B0D8               	btfsc	status,0,c
  5274  003072  D006               	goto	i2l375
  5275  003074                     i2u1475_40:
  5276                           
  5277                           ; BSR set to: 2
  5278  003074  0E00               	movlw	0
  5279  003076  0101               	movlb	1	; () banked
  5280  003078  6FD9               	movwf	(efgtoa@p+1)& (0+255),b
  5281  00307A  0E06               	movlw	6
  5282  00307C  6FD8               	movwf	efgtoa@p& (0+255),b
  5283  00307E  D009               	goto	i2l11047
  5284  003080                     i2l375:
  5285                           
  5286                           ; BSR set to: 2
  5287  003080  C222  F1D8         	movff	_prec,efgtoa@p
  5288  003084  C223  F1D9         	movff	_prec+1,efgtoa@p+1
  5289  003088  D004               	goto	i2l11047
  5290  00308A                     i2l11041:
  5291                           
  5292                           ; BSR set to: 1
  5293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  5294  00308A  0102               	movlb	2	; () banked
  5295  00308C  AF23               	btfss	(_prec+1)& (0+255),7,b
  5296  00308E  D7F8               	goto	i2l375
  5297  003090  D7F1               	goto	i2u1475_40
  5298  003092                     i2l11047:
  5299                           
  5300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  5301  003092  0E67               	movlw	103
  5302  003094  0101               	movlb	1	; () banked
  5303  003096  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  5304  003098  A4D8               	btfss	status,2,c
  5305  00309A  D028               	goto	i2l11057
  5306                           
  5307                           ; BSR set to: 1
  5308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  5309  00309C  AFED               	btfss	(efgtoa@e+1)& (0+255),7,b
  5310  00309E  D006               	goto	i2u1478_40
  5311  0030A0  0EFC               	movlw	252
  5312  0030A2  5DEC               	subwf	efgtoa@e& (0+255),w,b
  5313  0030A4  0EFF               	movlw	255
  5314  0030A6  59ED               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5315  0030A8  A0D8               	btfss	status,0,c
  5316  0030AA  D01D               	goto	i2l11055
  5317  0030AC                     i2u1478_40:
  5318                           
  5319                           ; BSR set to: 1
  5320  0030AC  0EFF               	movlw	255
  5321  0030AE  0100               	movlb	0	; () banked
  5322  0030B0  6FD5               	movwf	??_efgtoa& (0+255),b
  5323  0030B2  0EFF               	movlw	255
  5324  0030B4  6FD6               	movwf	(??_efgtoa+1)& (0+255),b
  5325  0030B6  C1D8  F0D7         	movff	efgtoa@p,??_efgtoa+2
  5326  0030BA  C1D9  F0D8         	movff	efgtoa@p+1,??_efgtoa+3
  5327  0030BE  51D5               	movf	??_efgtoa& (0+255),w,b
  5328  0030C0  27D7               	addwf	(??_efgtoa+2)& (0+255),f,b
  5329  0030C2  51D6               	movf	(??_efgtoa+1)& (0+255),w,b
  5330  0030C4  23D8               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5331  0030C6  0101               	movlb	1	; () banked
  5332  0030C8  51EC               	movf	efgtoa@e& (0+255),w,b
  5333  0030CA  0100               	movlb	0	; () banked
  5334  0030CC  5DD7               	subwf	(??_efgtoa+2)& (0+255),w,b
  5335  0030CE  51D8               	movf	(??_efgtoa+3)& (0+255),w,b
  5336  0030D0  0A80               	xorlw	128
  5337  0030D2  6FD9               	movwf	(??_efgtoa+4)& (0+255),b
  5338  0030D4  0101               	movlb	1	; () banked
  5339  0030D6  51ED               	movf	(efgtoa@e+1)& (0+255),w,b
  5340  0030D8  0A80               	xorlw	128
  5341  0030DA  0100               	movlb	0	; () banked
  5342  0030DC  59D9               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5343  0030DE  A0D8               	btfss	status,0,c
  5344  0030E0  D002               	goto	i2l11055
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  5348  0030E2  0E66               	movlw	102
  5349  0030E4  D001               	goto	L2
  5350  0030E6                     i2l11055:
  5351                           
  5352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  5353  0030E6  0E65               	movlw	101
  5354  0030E8                     L2:
  5355  0030E8  0101               	movlb	1	; () banked
  5356  0030EA  6FDA               	movwf	efgtoa@nmode& (0+255),b
  5357  0030EC                     i2l11057:
  5358                           
  5359                           ; BSR set to: 1
  5360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  5361  0030EC  C1D8  F1D0         	movff	efgtoa@p,efgtoa@m
  5362  0030F0  C1D9  F1D1         	movff	efgtoa@p+1,efgtoa@m+1
  5363                           
  5364                           ; BSR set to: 1
  5365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  5366  0030F4  0E67               	movlw	103
  5367  0030F6  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  5368  0030F8  A4D8               	btfss	status,2,c
  5369  0030FA  D005               	goto	i2u1482_40
  5370                           
  5371                           ; BSR set to: 1
  5372  0030FC  0E66               	movlw	102
  5373  0030FE  19DA               	xorwf	efgtoa@nmode& (0+255),w,b
  5374  003100  B4D8               	btfsc	status,2,c
  5375                           
  5376                           ; BSR set to: 1
  5377  003102  AFED               	btfss	(efgtoa@e+1)& (0+255),7,b
  5378  003104  D002               	goto	i2l11067
  5379  003106                     i2u1482_40:
  5380                           
  5381                           ; BSR set to: 1
  5382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  5383  003106  4BD0               	infsnz	efgtoa@m& (0+255),f,b
  5384  003108  2BD1               	incf	(efgtoa@m+1)& (0+255),f,b
  5385  00310A                     i2l11067:
  5386                           
  5387                           ; BSR set to: 1
  5388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  5389  00310A  0E66               	movlw	102
  5390  00310C  19DA               	xorwf	efgtoa@nmode& (0+255),w,b
  5391  00310E  A4D8               	btfss	status,2,c
  5392  003110  D016               	goto	i2l11077
  5393                           
  5394                           ; BSR set to: 1
  5395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  5396  003112  AFED               	btfss	(efgtoa@e+1)& (0+255),7,b
  5397  003114  D00C               	goto	i2l11073
  5398                           
  5399                           ; BSR set to: 1
  5400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  5401  003116  0E00               	movlw	0
  5402  003118  6FF0               	movwf	efgtoa@u& (0+255),b
  5403  00311A  0E00               	movlw	0
  5404  00311C  6FF1               	movwf	(efgtoa@u+1)& (0+255),b
  5405  00311E  0E80               	movlw	128
  5406  003120  6FF2               	movwf	(efgtoa@u+2)& (0+255),b
  5407  003122  0E3F               	movlw	63
  5408  003124  6FF3               	movwf	(efgtoa@u+3)& (0+255),b
  5409                           
  5410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  5411  003126  0E00               	movlw	0
  5412  003128  6FED               	movwf	(efgtoa@e+1)& (0+255),b
  5413  00312A  0E00               	movlw	0
  5414  00312C  6FEC               	movwf	efgtoa@e& (0+255),b
  5415  00312E                     i2l11073:
  5416                           
  5417                           ; BSR set to: 1
  5418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  5419  00312E  0E67               	movlw	103
  5420  003130  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  5421  003132  B4D8               	btfsc	status,2,c
  5422  003134  D004               	goto	i2l11077
  5423                           
  5424                           ; BSR set to: 1
  5425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  5426  003136  51EC               	movf	efgtoa@e& (0+255),w,b
  5427  003138  27D0               	addwf	efgtoa@m& (0+255),f,b
  5428  00313A  51ED               	movf	(efgtoa@e+1)& (0+255),w,b
  5429  00313C  23D1               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5430  00313E                     i2l11077:
  5431                           
  5432                           ; BSR set to: 1
  5433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  5434  00313E  0E00               	movlw	0
  5435  003140  6FEB               	movwf	(efgtoa@i+1)& (0+255),b
  5436  003142  0E00               	movlw	0
  5437  003144  6FEA               	movwf	efgtoa@i& (0+255),b
  5438                           
  5439                           ; BSR set to: 1
  5440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  5441  003146  C1E6  F1DE         	movff	efgtoa@g,efgtoa@h
  5442  00314A  C1E7  F1DF         	movff	efgtoa@g+1,efgtoa@h+1
  5443  00314E  C1E8  F1E0         	movff	efgtoa@g+2,efgtoa@h+2
  5444  003152  C1E9  F1E1         	movff	efgtoa@g+3,efgtoa@h+3
  5445                           
  5446                           ; BSR set to: 1
  5447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  5448  003156  C1F0  F1BC         	movff	efgtoa@u,efgtoa@ou
  5449  00315A  C1F1  F1BD         	movff	efgtoa@u+1,efgtoa@ou+1
  5450  00315E  C1F2  F1BE         	movff	efgtoa@u+2,efgtoa@ou+2
  5451  003162  C1F3  F1BF         	movff	efgtoa@u+3,efgtoa@ou+3
  5452                           
  5453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5454  003166  D07B               	goto	i2l11091
  5455  003168                     i2l11083:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  5459  003168  C1DE  F032         	movff	efgtoa@h,___fldiv@b
  5460  00316C  C1DF  F033         	movff	efgtoa@h+1,___fldiv@b+1
  5461  003170  C1E0  F034         	movff	efgtoa@h+2,___fldiv@b+2
  5462  003174  C1E1  F035         	movff	efgtoa@h+3,___fldiv@b+3
  5463  003178  C1F0  F036         	movff	efgtoa@u,___fldiv@a
  5464  00317C  C1F1  F037         	movff	efgtoa@u+1,___fldiv@a+1
  5465  003180  C1F2  F038         	movff	efgtoa@u+2,___fldiv@a+2
  5466  003184  C1F3  F039         	movff	efgtoa@u+3,___fldiv@a+3
  5467  003188  EC9C  F026         	call	___fldiv	;wreg free
  5468  00318C  C032  F04B         	movff	?___fldiv,floorf@x
  5469  003190  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  5470  003194  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  5471  003198  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  5472  00319C  ECDF  F02B         	call	_floorf	;wreg free
  5473  0031A0  C04B  F1E2         	movff	?_floorf,efgtoa@l
  5474  0031A4  C04C  F1E3         	movff	?_floorf+1,efgtoa@l+1
  5475  0031A8  C04D  F1E4         	movff	?_floorf+2,efgtoa@l+2
  5476  0031AC  C04E  F1E5         	movff	?_floorf+3,efgtoa@l+3
  5477                           
  5478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  5479  0031B0  C1E2  F0CA         	movff	efgtoa@l,___fltol@f1
  5480  0031B4  C1E3  F0CB         	movff	efgtoa@l+1,___fltol@f1+1
  5481  0031B8  C1E4  F0CC         	movff	efgtoa@l+2,___fltol@f1+2
  5482  0031BC  C1E5  F0CD         	movff	efgtoa@l+3,___fltol@f1+3
  5483  0031C0  ECD2  F032         	call	___fltol	;wreg free
  5484  0031C4  C0CA  F1D4         	movff	?___fltol,efgtoa@d
  5485  0031C8  C0CB  F1D5         	movff	?___fltol+1,efgtoa@d+1
  5486                           
  5487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  5488  0031CC  C1DE  F02A         	movff	efgtoa@h,___flsub@b
  5489  0031D0  C1DF  F02B         	movff	efgtoa@h+1,___flsub@b+1
  5490  0031D4  C1E0  F02C         	movff	efgtoa@h+2,___flsub@b+2
  5491  0031D8  C1E1  F02D         	movff	efgtoa@h+3,___flsub@b+3
  5492  0031DC  C1F0  F015         	movff	efgtoa@u,___flmul@a
  5493  0031E0  C1F1  F016         	movff	efgtoa@u+1,___flmul@a+1
  5494  0031E4  C1F2  F017         	movff	efgtoa@u+2,___flmul@a+2
  5495  0031E8  C1F3  F018         	movff	efgtoa@u+3,___flmul@a+3
  5496  0031EC  C1E2  F011         	movff	efgtoa@l,___flmul@b
  5497  0031F0  C1E3  F012         	movff	efgtoa@l+1,___flmul@b+1
  5498  0031F4  C1E4  F013         	movff	efgtoa@l+2,___flmul@b+2
  5499  0031F8  C1E5  F014         	movff	efgtoa@l+3,___flmul@b+3
  5500  0031FC  EC6D  F023         	call	___flmul	;wreg free
  5501  003200  C011  F02E         	movff	?___flmul,___flsub@a
  5502  003204  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  5503  003208  C013  F030         	movff	?___flmul+2,___flsub@a+2
  5504  00320C  C014  F031         	movff	?___flmul+3,___flsub@a+3
  5505  003210  ECAE  F036         	call	___flsub	;wreg free
  5506  003214  C02A  F1DE         	movff	?___flsub,efgtoa@h
  5507  003218  C02B  F1DF         	movff	?___flsub+1,efgtoa@h+1
  5508  00321C  C02C  F1E0         	movff	?___flsub+2,efgtoa@h+2
  5509  003220  C02D  F1E1         	movff	?___flsub+3,efgtoa@h+3
  5510                           
  5511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  5512  003224  C1F0  F032         	movff	efgtoa@u,___fldiv@b
  5513  003228  C1F1  F033         	movff	efgtoa@u+1,___fldiv@b+1
  5514  00322C  C1F2  F034         	movff	efgtoa@u+2,___fldiv@b+2
  5515  003230  C1F3  F035         	movff	efgtoa@u+3,___fldiv@b+3
  5516  003234  0E00               	movlw	0
  5517  003236  6E36               	movwf	___fldiv@a^0,c
  5518  003238  0E00               	movlw	0
  5519  00323A  6E37               	movwf	(___fldiv@a+1)^0,c
  5520  00323C  0E20               	movlw	32
  5521  00323E  6E38               	movwf	(___fldiv@a+2)^0,c
  5522  003240  0E41               	movlw	65
  5523  003242  6E39               	movwf	(___fldiv@a+3)^0,c
  5524  003244  EC9C  F026         	call	___fldiv	;wreg free
  5525  003248  C032  F1F0         	movff	?___fldiv,efgtoa@u
  5526  00324C  C033  F1F1         	movff	?___fldiv+1,efgtoa@u+1
  5527  003250  C034  F1F2         	movff	?___fldiv+2,efgtoa@u+2
  5528  003254  C035  F1F3         	movff	?___fldiv+3,efgtoa@u+3
  5529                           
  5530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  5531  003258  0101               	movlb	1	; () banked
  5532  00325A  4BEA               	infsnz	efgtoa@i& (0+255),f,b
  5533  00325C  2BEB               	incf	(efgtoa@i+1)& (0+255),f,b
  5534  00325E                     i2l11091:
  5535                           
  5536                           ; BSR set to: 1
  5537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5538  00325E  51D0               	movf	efgtoa@m& (0+255),w,b
  5539  003260  5DEA               	subwf	efgtoa@i& (0+255),w,b
  5540  003262  51EB               	movf	(efgtoa@i+1)& (0+255),w,b
  5541  003264  0A80               	xorlw	128
  5542  003266  0100               	movlb	0	; () banked
  5543  003268  6FD5               	movwf	??_efgtoa& (0+255),b
  5544  00326A  0101               	movlb	1	; () banked
  5545  00326C  51D1               	movf	(efgtoa@m+1)& (0+255),w,b
  5546  00326E  0A80               	xorlw	128
  5547  003270  0100               	movlb	0	; () banked
  5548  003272  59D5               	subwfb	??_efgtoa& (0+255),w,b
  5549  003274  A0D8               	btfss	status,0,c
  5550  003276  D778               	goto	i2l11083
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  5554  003278  C1F0  F011         	movff	efgtoa@u,___flmul@b
  5555  00327C  C1F1  F012         	movff	efgtoa@u+1,___flmul@b+1
  5556  003280  C1F2  F013         	movff	efgtoa@u+2,___flmul@b+2
  5557  003284  C1F3  F014         	movff	efgtoa@u+3,___flmul@b+3
  5558  003288  0E00               	movlw	0
  5559  00328A  6E15               	movwf	___flmul@a^0,c
  5560  00328C  0E00               	movlw	0
  5561  00328E  6E16               	movwf	(___flmul@a+1)^0,c
  5562  003290  0EA0               	movlw	160
  5563  003292  6E17               	movwf	(___flmul@a+2)^0,c
  5564  003294  0E40               	movlw	64
  5565  003296  6E18               	movwf	(___flmul@a+3)^0,c
  5566  003298  EC6D  F023         	call	___flmul	;wreg free
  5567  00329C  C011  F1E2         	movff	?___flmul,efgtoa@l
  5568  0032A0  C012  F1E3         	movff	?___flmul+1,efgtoa@l+1
  5569  0032A4  C013  F1E4         	movff	?___flmul+2,efgtoa@l+2
  5570  0032A8  C014  F1E5         	movff	?___flmul+3,efgtoa@l+3
  5571                           
  5572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  5573  0032AC  C1DE  F032         	movff	efgtoa@h,___flge@ff1
  5574  0032B0  C1DF  F033         	movff	efgtoa@h+1,___flge@ff1+1
  5575  0032B4  C1E0  F034         	movff	efgtoa@h+2,___flge@ff1+2
  5576  0032B8  C1E1  F035         	movff	efgtoa@h+3,___flge@ff1+3
  5577  0032BC  C1E2  F036         	movff	efgtoa@l,___flge@ff2
  5578  0032C0  C1E3  F037         	movff	efgtoa@l+1,___flge@ff2+1
  5579  0032C4  C1E4  F038         	movff	efgtoa@l+2,___flge@ff2+2
  5580  0032C8  C1E5  F039         	movff	efgtoa@l+3,___flge@ff2+3
  5581  0032CC  EC04  F032         	call	___flge	;wreg free
  5582  0032D0  B0D8               	btfsc	status,0,c
  5583  0032D2  D003               	goto	i2l11099
  5584                           
  5585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  5586  0032D4  0E00               	movlw	0
  5587  0032D6  0101               	movlb	1	; () banked
  5588  0032D8  D018               	goto	L3
  5589  0032DA                     i2l11099:
  5590                           
  5591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  5592  0032DA  C1DE  F001         	movff	efgtoa@h,___fleq@ff1
  5593  0032DE  C1DF  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5594  0032E2  C1E0  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5595  0032E6  C1E1  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5596  0032EA  C1E2  F005         	movff	efgtoa@l,___fleq@ff2
  5597  0032EE  C1E3  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5598  0032F2  C1E4  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5599  0032F6  C1E5  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5600  0032FA  EC1E  F034         	call	___fleq	;wreg free
  5601  0032FE  A0D8               	btfss	status,0,c
  5602  003300  D00B               	goto	i2l11105
  5603  003302  0101               	movlb	1	; () banked
  5604  003304  B1D4               	btfsc	efgtoa@d& (0+255),0,b
  5605  003306  D008               	goto	i2l11105
  5606                           
  5607                           ; BSR set to: 1
  5608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  5609  003308  0E00               	movlw	0
  5610  00330A                     L3:
  5611  00330A  6FE2               	movwf	efgtoa@l& (0+255),b
  5612  00330C  0E00               	movlw	0
  5613  00330E  6FE3               	movwf	(efgtoa@l+1)& (0+255),b
  5614  003310  0E00               	movlw	0
  5615  003312  6FE4               	movwf	(efgtoa@l+2)& (0+255),b
  5616  003314  0E00               	movlw	0
  5617  003316  6FE5               	movwf	(efgtoa@l+3)& (0+255),b
  5618  003318                     i2l11105:
  5619                           
  5620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  5621  003318  C1E6  F001         	movff	efgtoa@g,___fladd@b
  5622  00331C  C1E7  F002         	movff	efgtoa@g+1,___fladd@b+1
  5623  003320  C1E8  F003         	movff	efgtoa@g+2,___fladd@b+2
  5624  003324  C1E9  F004         	movff	efgtoa@g+3,___fladd@b+3
  5625  003328  C1E2  F005         	movff	efgtoa@l,___fladd@a
  5626  00332C  C1E3  F006         	movff	efgtoa@l+1,___fladd@a+1
  5627  003330  C1E4  F007         	movff	efgtoa@l+2,___fladd@a+2
  5628  003334  C1E5  F008         	movff	efgtoa@l+3,___fladd@a+3
  5629  003338  EC16  F025         	call	___fladd	;wreg free
  5630  00333C  C001  F1DE         	movff	?___fladd,efgtoa@h
  5631  003340  C002  F1DF         	movff	?___fladd+1,efgtoa@h+1
  5632  003344  C003  F1E0         	movff	?___fladd+2,efgtoa@h+2
  5633  003348  C004  F1E1         	movff	?___fladd+3,efgtoa@h+3
  5634                           
  5635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  5636  00334C  C1BC  F1F0         	movff	efgtoa@ou,efgtoa@u
  5637  003350  C1BD  F1F1         	movff	efgtoa@ou+1,efgtoa@u+1
  5638  003354  C1BE  F1F2         	movff	efgtoa@ou+2,efgtoa@u+2
  5639  003358  C1BF  F1F3         	movff	efgtoa@ou+3,efgtoa@u+3
  5640                           
  5641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  5642  00335C  0E65               	movlw	101
  5643  00335E  0101               	movlb	1	; () banked
  5644  003360  19DA               	xorwf	efgtoa@nmode& (0+255),w,b
  5645  003362  B4D8               	btfsc	status,2,c
  5646  003364  D005               	goto	i2l11113
  5647                           
  5648                           ; BSR set to: 1
  5649  003366  C1EC  F1D2         	movff	efgtoa@e,efgtoa@ne
  5650  00336A  C1ED  F1D3         	movff	efgtoa@e+1,efgtoa@ne+1
  5651  00336E  D004               	goto	i2l401
  5652  003370                     i2l11113:
  5653                           
  5654                           ; BSR set to: 1
  5655  003370  0E00               	movlw	0
  5656  003372  6FD3               	movwf	(efgtoa@ne+1)& (0+255),b
  5657  003374  0E00               	movlw	0
  5658  003376  6FD2               	movwf	efgtoa@ne& (0+255),b
  5659  003378                     i2l401:
  5660                           
  5661                           ; BSR set to: 1
  5662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  5663  003378  0E00               	movlw	0
  5664  00337A  6FCF               	movwf	(efgtoa@pp+1)& (0+255),b
  5665  00337C  0E00               	movlw	0
  5666  00337E  6FCE               	movwf	efgtoa@pp& (0+255),b
  5667                           
  5668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  5669  003380  0E00               	movlw	0
  5670  003382  6FCD               	movwf	(efgtoa@t+1)& (0+255),b
  5671  003384  0E00               	movlw	0
  5672  003386  6FCC               	movwf	efgtoa@t& (0+255),b
  5673                           
  5674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  5675  003388  0E00               	movlw	0
  5676  00338A  6FEB               	movwf	(efgtoa@i+1)& (0+255),b
  5677  00338C  0E00               	movlw	0
  5678  00338E  6FEA               	movwf	efgtoa@i& (0+255),b
  5679                           
  5680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5681  003390  D0C8               	goto	i2l11163
  5682  003392                     i2l11115:
  5683                           
  5684                           ; BSR set to: 1
  5685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  5686  003392  C1DE  F032         	movff	efgtoa@h,___fldiv@b
  5687  003396  C1DF  F033         	movff	efgtoa@h+1,___fldiv@b+1
  5688  00339A  C1E0  F034         	movff	efgtoa@h+2,___fldiv@b+2
  5689  00339E  C1E1  F035         	movff	efgtoa@h+3,___fldiv@b+3
  5690  0033A2  C1F0  F036         	movff	efgtoa@u,___fldiv@a
  5691  0033A6  C1F1  F037         	movff	efgtoa@u+1,___fldiv@a+1
  5692  0033AA  C1F2  F038         	movff	efgtoa@u+2,___fldiv@a+2
  5693  0033AE  C1F3  F039         	movff	efgtoa@u+3,___fldiv@a+3
  5694  0033B2  EC9C  F026         	call	___fldiv	;wreg free
  5695  0033B6  C032  F04B         	movff	?___fldiv,floorf@x
  5696  0033BA  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  5697  0033BE  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  5698  0033C2  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  5699  0033C6  ECDF  F02B         	call	_floorf	;wreg free
  5700  0033CA  C04B  F1E2         	movff	?_floorf,efgtoa@l
  5701  0033CE  C04C  F1E3         	movff	?_floorf+1,efgtoa@l+1
  5702  0033D2  C04D  F1E4         	movff	?_floorf+2,efgtoa@l+2
  5703  0033D6  C04E  F1E5         	movff	?_floorf+3,efgtoa@l+3
  5704                           
  5705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  5706  0033DA  C1E2  F0CA         	movff	efgtoa@l,___fltol@f1
  5707  0033DE  C1E3  F0CB         	movff	efgtoa@l+1,___fltol@f1+1
  5708  0033E2  C1E4  F0CC         	movff	efgtoa@l+2,___fltol@f1+2
  5709  0033E6  C1E5  F0CD         	movff	efgtoa@l+3,___fltol@f1+3
  5710  0033EA  ECD2  F032         	call	___fltol	;wreg free
  5711  0033EE  C0CA  F1D4         	movff	?___fltol,efgtoa@d
  5712  0033F2  C0CB  F1D5         	movff	?___fltol+1,efgtoa@d+1
  5713                           
  5714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5715  0033F6  0102               	movlb	2	; () banked
  5716  0033F8  B924               	btfsc	_flags& (0+255),4,b
  5717  0033FA  D00D               	goto	i2l11127
  5718                           
  5719                           ; BSR set to: 2
  5720  0033FC  0101               	movlb	1	; () banked
  5721  0033FE  51D4               	movf	efgtoa@d& (0+255),w,b
  5722  003400  11D5               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5723  003402  A4D8               	btfss	status,2,c
  5724  003404  D008               	goto	i2l11127
  5725                           
  5726                           ; BSR set to: 1
  5727  003406  0E67               	movlw	103
  5728  003408  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  5729  00340A  B4D8               	btfsc	status,2,c
  5730                           
  5731                           ; BSR set to: 1
  5732  00340C  AFD3               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5733  00340E  D003               	goto	i2l11127
  5734                           
  5735                           ; BSR set to: 1
  5736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  5737  003410  4BCC               	infsnz	efgtoa@t& (0+255),f,b
  5738  003412  2BCD               	incf	(efgtoa@t+1)& (0+255),f,b
  5739                           
  5740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  5741  003414  D03A               	goto	i2l11155
  5742  003416                     i2l11127:
  5743                           
  5744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  5745  003416  0101               	movlb	1	; () banked
  5746  003418  51CE               	movf	efgtoa@pp& (0+255),w,b
  5747  00341A  11CF               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5748  00341C  B4D8               	btfsc	status,2,c
  5749                           
  5750                           ; BSR set to: 1
  5751  00341E  AFD3               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5752  003420  D022               	goto	i2l11147
  5753                           
  5754                           ; BSR set to: 1
  5755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  5756  003422  0E2C               	movlw	low _dbuf
  5757  003424  25EE               	addwf	efgtoa@n& (0+255),w,b
  5758  003426  6ED9               	movwf	fsr2l,c
  5759  003428  0E02               	movlw	high _dbuf
  5760  00342A  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5761  00342C  6EDA               	movwf	fsr2h,c
  5762  00342E  0E2E               	movlw	46
  5763  003430  6EDF               	movwf	indf2,c
  5764                           
  5765                           ; BSR set to: 1
  5766  003432  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  5767  003434  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  5768                           
  5769                           ; BSR set to: 1
  5770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  5771  003436  07DB               	decf	efgtoa@w& (0+255),f,b
  5772  003438  A0D8               	btfss	status,0,c
  5773  00343A  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  5774                           
  5775                           ; BSR set to: 1
  5776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  5777  00343C  0E00               	movlw	0
  5778  00343E  6FCF               	movwf	(efgtoa@pp+1)& (0+255),b
  5779  003440  0E01               	movlw	1
  5780  003442  6FCE               	movwf	efgtoa@pp& (0+255),b
  5781  003444  D010               	goto	i2l11147
  5782  003446                     i2l11139:
  5783                           
  5784                           ; BSR set to: 1
  5785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  5786  003446  0E2C               	movlw	low _dbuf
  5787  003448  25EE               	addwf	efgtoa@n& (0+255),w,b
  5788  00344A  6ED9               	movwf	fsr2l,c
  5789  00344C  0E02               	movlw	high _dbuf
  5790  00344E  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5791  003450  6EDA               	movwf	fsr2h,c
  5792  003452  0E30               	movlw	48
  5793  003454  6EDF               	movwf	indf2,c
  5794                           
  5795                           ; BSR set to: 1
  5796  003456  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  5797  003458  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  5798                           
  5799                           ; BSR set to: 1
  5800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  5801  00345A  07DB               	decf	efgtoa@w& (0+255),f,b
  5802  00345C  A0D8               	btfss	status,0,c
  5803  00345E  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  5804                           
  5805                           ; BSR set to: 1
  5806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  5807  003460  07CC               	decf	efgtoa@t& (0+255),f,b
  5808  003462  A0D8               	btfss	status,0,c
  5809  003464  07CD               	decf	(efgtoa@t+1)& (0+255),f,b
  5810  003466                     i2l11147:
  5811                           
  5812                           ; BSR set to: 1
  5813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  5814  003466  51CC               	movf	efgtoa@t& (0+255),w,b
  5815  003468  11CD               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5816  00346A  A4D8               	btfss	status,2,c
  5817  00346C  D7EC               	goto	i2l11139
  5818                           
  5819                           ; BSR set to: 1
  5820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  5821  00346E  0E2C               	movlw	low _dbuf
  5822  003470  25EE               	addwf	efgtoa@n& (0+255),w,b
  5823  003472  6ED9               	movwf	fsr2l,c
  5824  003474  0E02               	movlw	high _dbuf
  5825  003476  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5826  003478  6EDA               	movwf	fsr2h,c
  5827  00347A  51D4               	movf	efgtoa@d& (0+255),w,b
  5828  00347C  0F30               	addlw	48
  5829  00347E  6EDF               	movwf	indf2,c
  5830                           
  5831                           ; BSR set to: 1
  5832  003480  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  5833  003482  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  5834                           
  5835                           ; BSR set to: 1
  5836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  5837  003484  07DB               	decf	efgtoa@w& (0+255),f,b
  5838  003486  A0D8               	btfss	status,0,c
  5839  003488  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  5840  00348A                     i2l11155:
  5841                           
  5842                           ; BSR set to: 1
  5843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  5844  00348A  C1DE  F02A         	movff	efgtoa@h,___flsub@b
  5845  00348E  C1DF  F02B         	movff	efgtoa@h+1,___flsub@b+1
  5846  003492  C1E0  F02C         	movff	efgtoa@h+2,___flsub@b+2
  5847  003496  C1E1  F02D         	movff	efgtoa@h+3,___flsub@b+3
  5848  00349A  C1F0  F015         	movff	efgtoa@u,___flmul@a
  5849  00349E  C1F1  F016         	movff	efgtoa@u+1,___flmul@a+1
  5850  0034A2  C1F2  F017         	movff	efgtoa@u+2,___flmul@a+2
  5851  0034A6  C1F3  F018         	movff	efgtoa@u+3,___flmul@a+3
  5852  0034AA  C1E2  F011         	movff	efgtoa@l,___flmul@b
  5853  0034AE  C1E3  F012         	movff	efgtoa@l+1,___flmul@b+1
  5854  0034B2  C1E4  F013         	movff	efgtoa@l+2,___flmul@b+2
  5855  0034B6  C1E5  F014         	movff	efgtoa@l+3,___flmul@b+3
  5856  0034BA  EC6D  F023         	call	___flmul	;wreg free
  5857  0034BE  C011  F02E         	movff	?___flmul,___flsub@a
  5858  0034C2  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  5859  0034C6  C013  F030         	movff	?___flmul+2,___flsub@a+2
  5860  0034CA  C014  F031         	movff	?___flmul+3,___flsub@a+3
  5861  0034CE  ECAE  F036         	call	___flsub	;wreg free
  5862  0034D2  C02A  F1DE         	movff	?___flsub,efgtoa@h
  5863  0034D6  C02B  F1DF         	movff	?___flsub+1,efgtoa@h+1
  5864  0034DA  C02C  F1E0         	movff	?___flsub+2,efgtoa@h+2
  5865  0034DE  C02D  F1E1         	movff	?___flsub+3,efgtoa@h+3
  5866                           
  5867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  5868  0034E2  C1F0  F032         	movff	efgtoa@u,___fldiv@b
  5869  0034E6  C1F1  F033         	movff	efgtoa@u+1,___fldiv@b+1
  5870  0034EA  C1F2  F034         	movff	efgtoa@u+2,___fldiv@b+2
  5871  0034EE  C1F3  F035         	movff	efgtoa@u+3,___fldiv@b+3
  5872  0034F2  0E00               	movlw	0
  5873  0034F4  6E36               	movwf	___fldiv@a^0,c
  5874  0034F6  0E00               	movlw	0
  5875  0034F8  6E37               	movwf	(___fldiv@a+1)^0,c
  5876  0034FA  0E20               	movlw	32
  5877  0034FC  6E38               	movwf	(___fldiv@a+2)^0,c
  5878  0034FE  0E41               	movlw	65
  5879  003500  6E39               	movwf	(___fldiv@a+3)^0,c
  5880  003502  EC9C  F026         	call	___fldiv	;wreg free
  5881  003506  C032  F1F0         	movff	?___fldiv,efgtoa@u
  5882  00350A  C033  F1F1         	movff	?___fldiv+1,efgtoa@u+1
  5883  00350E  C034  F1F2         	movff	?___fldiv+2,efgtoa@u+2
  5884  003512  C035  F1F3         	movff	?___fldiv+3,efgtoa@u+3
  5885                           
  5886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  5887  003516  0101               	movlb	1	; () banked
  5888  003518  07D2               	decf	efgtoa@ne& (0+255),f,b
  5889  00351A  A0D8               	btfss	status,0,c
  5890  00351C  07D3               	decf	(efgtoa@ne+1)& (0+255),f,b
  5891                           
  5892                           ; BSR set to: 1
  5893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  5894  00351E  4BEA               	infsnz	efgtoa@i& (0+255),f,b
  5895  003520  2BEB               	incf	(efgtoa@i+1)& (0+255),f,b
  5896  003522                     i2l11163:
  5897                           
  5898                           ; BSR set to: 1
  5899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5900  003522  51D0               	movf	efgtoa@m& (0+255),w,b
  5901  003524  5DEA               	subwf	efgtoa@i& (0+255),w,b
  5902  003526  51EB               	movf	(efgtoa@i+1)& (0+255),w,b
  5903  003528  0A80               	xorlw	128
  5904  00352A  0100               	movlb	0	; () banked
  5905  00352C  6FD5               	movwf	??_efgtoa& (0+255),b
  5906  00352E  0101               	movlb	1	; () banked
  5907  003530  51D1               	movf	(efgtoa@m+1)& (0+255),w,b
  5908  003532  0A80               	xorlw	128
  5909  003534  0100               	movlb	0	; () banked
  5910  003536  59D5               	subwfb	??_efgtoa& (0+255),w,b
  5911  003538  B0D8               	btfsc	status,0,c
  5912  00353A  D009               	goto	i2u1499_40
  5913                           
  5914                           ; BSR set to: 0
  5915  00353C  0101               	movlb	1	; () banked
  5916  00353E  BFEF               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5917  003540  D728               	goto	i2l11115
  5918  003542  51EF               	movf	(efgtoa@n+1)& (0+255),w,b
  5919  003544  E104               	bnz	i2u1499_40
  5920  003546  0E4B               	movlw	75
  5921  003548  5DEE               	subwf	efgtoa@n& (0+255),w,b
  5922  00354A  A0D8               	btfss	status,0,c
  5923  00354C  D722               	goto	i2l11115
  5924  00354E                     i2u1499_40:
  5925                           
  5926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  5927  00354E  0101               	movlb	1	; () banked
  5928  003550  51CE               	movf	efgtoa@pp& (0+255),w,b
  5929  003552  11CF               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5930  003554  A4D8               	btfss	status,2,c
  5931  003556  D00E               	goto	i2l11175
  5932                           
  5933                           ; BSR set to: 1
  5934  003558  0102               	movlb	2	; () banked
  5935  00355A  A924               	btfss	_flags& (0+255),4,b
  5936  00355C  D00B               	goto	i2l11175
  5937                           
  5938                           ; BSR set to: 2
  5939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  5940  00355E  0E2C               	movlw	low _dbuf
  5941  003560  0101               	movlb	1	; () banked
  5942  003562  25EE               	addwf	efgtoa@n& (0+255),w,b
  5943  003564  6ED9               	movwf	fsr2l,c
  5944  003566  0E02               	movlw	high _dbuf
  5945  003568  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5946  00356A  6EDA               	movwf	fsr2h,c
  5947  00356C  0E2E               	movlw	46
  5948  00356E  6EDF               	movwf	indf2,c
  5949                           
  5950                           ; BSR set to: 1
  5951  003570  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  5952  003572  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  5953  003574                     i2l11175:
  5954                           
  5955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  5956  003574  0E2C               	movlw	low _dbuf
  5957  003576  0101               	movlb	1	; () banked
  5958  003578  25EE               	addwf	efgtoa@n& (0+255),w,b
  5959  00357A  6ED9               	movwf	fsr2l,c
  5960  00357C  0E02               	movlw	high _dbuf
  5961  00357E  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5962  003580  6EDA               	movwf	fsr2h,c
  5963  003582  0E00               	movlw	0
  5964  003584  6EDF               	movwf	indf2,c
  5965                           
  5966                           ; BSR set to: 1
  5967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  5968  003586  0E65               	movlw	101
  5969  003588  19DA               	xorwf	efgtoa@nmode& (0+255),w,b
  5970  00358A  A4D8               	btfss	status,2,c
  5971  00358C  D466               	goto	i2l10987
  5972                           
  5973                           ; BSR set to: 1
  5974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  5975  00358E  0E00               	movlw	0
  5976  003590  6FEB               	movwf	(efgtoa@i+1)& (0+255),b
  5977  003592  0E4F               	movlw	79
  5978  003594  6FEA               	movwf	efgtoa@i& (0+255),b
  5979                           
  5980                           ; BSR set to: 1
  5981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  5982  003596  0E2C               	movlw	low _dbuf
  5983  003598  25EA               	addwf	efgtoa@i& (0+255),w,b
  5984  00359A  6ED9               	movwf	fsr2l,c
  5985  00359C  0E02               	movlw	high _dbuf
  5986  00359E  21EB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5987  0035A0  6EDA               	movwf	fsr2h,c
  5988  0035A2  0E00               	movlw	0
  5989  0035A4  6EDF               	movwf	indf2,c
  5990                           
  5991                           ; BSR set to: 1
  5992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  5993  0035A6  0E00               	movlw	0
  5994  0035A8  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  5995  0035AA  0E00               	movlw	0
  5996  0035AC  6FD6               	movwf	efgtoa@sign& (0+255),b
  5997                           
  5998                           ; BSR set to: 1
  5999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  6000  0035AE  AFED               	btfss	(efgtoa@e+1)& (0+255),7,b
  6001  0035B0  D008               	goto	i2l11191
  6002                           
  6003                           ; BSR set to: 1
  6004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  6005  0035B2  0E00               	movlw	0
  6006  0035B4  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  6007  0035B6  0E01               	movlw	1
  6008  0035B8  6FD6               	movwf	efgtoa@sign& (0+255),b
  6009                           
  6010                           ; BSR set to: 1
  6011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  6012  0035BA  6DEC               	negf	efgtoa@e& (0+255),b
  6013  0035BC  1FED               	comf	(efgtoa@e+1)& (0+255),f,b
  6014  0035BE  B0D8               	btfsc	status,0,c
  6015  0035C0  2BED               	incf	(efgtoa@e+1)& (0+255),f,b
  6016  0035C2                     i2l11191:
  6017                           
  6018                           ; BSR set to: 1
  6019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  6020  0035C2  0E00               	movlw	0
  6021  0035C4  6FD9               	movwf	(efgtoa@p+1)& (0+255),b
  6022  0035C6  0E02               	movlw	2
  6023  0035C8  6FD8               	movwf	efgtoa@p& (0+255),b
  6024                           
  6025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  6026  0035CA  D02B               	goto	i2l11203
  6027  0035CC                     i2l11193:
  6028                           
  6029                           ; BSR set to: 1
  6030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  6031  0035CC  07EA               	decf	efgtoa@i& (0+255),f,b
  6032  0035CE  A0D8               	btfss	status,0,c
  6033  0035D0  07EB               	decf	(efgtoa@i+1)& (0+255),f,b
  6034                           
  6035                           ; BSR set to: 1
  6036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  6037  0035D2  0E2C               	movlw	low _dbuf
  6038  0035D4  25EA               	addwf	efgtoa@i& (0+255),w,b
  6039  0035D6  6ED9               	movwf	fsr2l,c
  6040  0035D8  0E02               	movlw	high _dbuf
  6041  0035DA  21EB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6042  0035DC  6EDA               	movwf	fsr2h,c
  6043  0035DE  C1EC  F001         	movff	efgtoa@e,i2___awmod@dividend
  6044  0035E2  C1ED  F002         	movff	efgtoa@e+1,i2___awmod@dividend+1
  6045  0035E6  0E00               	movlw	0
  6046  0035E8  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  6047  0035EA  0E0A               	movlw	10
  6048  0035EC  6E03               	movwf	i2___awmod@divisor^0,c
  6049  0035EE  EC1C  F035         	call	i2___awmod	;wreg free
  6050  0035F2  5001               	movf	?i2___awmod^0,w,c
  6051  0035F4  0F30               	addlw	48
  6052  0035F6  6EDF               	movwf	indf2,c
  6053                           
  6054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  6055  0035F8  C1EC  F001         	movff	efgtoa@e,___awdiv@dividend
  6056  0035FC  C1ED  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  6057  003600  0E00               	movlw	0
  6058  003602  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6059  003604  0E0A               	movlw	10
  6060  003606  6E03               	movwf	___awdiv@divisor^0,c
  6061  003608  EC63  F034         	call	___awdiv	;wreg free
  6062  00360C  C001  F1EC         	movff	?___awdiv,efgtoa@e
  6063  003610  C002  F1ED         	movff	?___awdiv+1,efgtoa@e+1
  6064                           
  6065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  6066  003614  0101               	movlb	1	; () banked
  6067  003616  07D8               	decf	efgtoa@p& (0+255),f,b
  6068  003618  A0D8               	btfss	status,0,c
  6069  00361A  07D9               	decf	(efgtoa@p+1)& (0+255),f,b
  6070                           
  6071                           ; BSR set to: 1
  6072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  6073  00361C  07DB               	decf	efgtoa@w& (0+255),f,b
  6074  00361E  A0D8               	btfss	status,0,c
  6075  003620  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  6076  003622                     i2l11203:
  6077                           
  6078                           ; BSR set to: 1
  6079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  6080  003622  51EC               	movf	efgtoa@e& (0+255),w,b
  6081  003624  11ED               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6082  003626  A4D8               	btfss	status,2,c
  6083  003628  D7D1               	goto	i2l11193
  6084                           
  6085                           ; BSR set to: 1
  6086  00362A  BFD9               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6087  00362C  D005               	goto	i2u1505_40
  6088  00362E  51D9               	movf	(efgtoa@p+1)& (0+255),w,b
  6089  003630  E1CD               	bnz	i2l11193
  6090  003632  05D8               	decf	efgtoa@p& (0+255),w,b
  6091  003634  B0D8               	btfsc	status,0,c
  6092  003636  D7CA               	goto	i2l11193
  6093  003638                     i2u1505_40:
  6094                           
  6095                           ; BSR set to: 1
  6096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  6097  003638  07EA               	decf	efgtoa@i& (0+255),f,b
  6098  00363A  A0D8               	btfss	status,0,c
  6099  00363C  07EB               	decf	(efgtoa@i+1)& (0+255),f,b
  6100                           
  6101                           ; BSR set to: 1
  6102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  6103  00363E  51D6               	movf	efgtoa@sign& (0+255),w,b
  6104  003640  11D7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6105  003642  A4D8               	btfss	status,2,c
  6106  003644  D004               	goto	i2l11213
  6107                           
  6108                           ; BSR set to: 1
  6109  003646  0E00               	movlw	0
  6110  003648  6FC7               	movwf	(_efgtoa$1012+1)& (0+255),b
  6111  00364A  0E2B               	movlw	43
  6112  00364C  D003               	goto	L4
  6113  00364E                     i2l11213:
  6114                           
  6115                           ; BSR set to: 1
  6116  00364E  0E00               	movlw	0
  6117  003650  6FC7               	movwf	(_efgtoa$1012+1)& (0+255),b
  6118  003652  0E2D               	movlw	45
  6119  003654                     L4:
  6120  003654  6FC6               	movwf	_efgtoa$1012& (0+255),b
  6121                           
  6122                           ; BSR set to: 1
  6123  003656  0E2C               	movlw	low _dbuf
  6124  003658  25EA               	addwf	efgtoa@i& (0+255),w,b
  6125  00365A  6ED9               	movwf	fsr2l,c
  6126  00365C  0E02               	movlw	high _dbuf
  6127  00365E  21EB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6128  003660  6EDA               	movwf	fsr2h,c
  6129  003662  C1C6  FFDF         	movff	_efgtoa$1012,indf2
  6130                           
  6131                           ; BSR set to: 1
  6132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  6133  003666  07DB               	decf	efgtoa@w& (0+255),f,b
  6134  003668  A0D8               	btfss	status,0,c
  6135  00366A  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  6136                           
  6137                           ; BSR set to: 1
  6138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6139  00366C  07EA               	decf	efgtoa@i& (0+255),f,b
  6140  00366E  A0D8               	btfss	status,0,c
  6141  003670  07EB               	decf	(efgtoa@i+1)& (0+255),f,b
  6142                           
  6143                           ; BSR set to: 1
  6144  003672  0EBF               	movlw	191
  6145  003674  0100               	movlb	0	; () banked
  6146  003676  6FD5               	movwf	??_efgtoa& (0+255),b
  6147  003678  0EFF               	movlw	255
  6148  00367A  6FD6               	movwf	(??_efgtoa+1)& (0+255),b
  6149  00367C  51D4               	movf	efgtoa@c& (0+255),w,b
  6150  00367E  6FD7               	movwf	(??_efgtoa+2)& (0+255),b
  6151  003680  6BD8               	clrf	(??_efgtoa+3)& (0+255),b
  6152  003682  51D5               	movf	??_efgtoa& (0+255),w,b
  6153  003684  27D7               	addwf	(??_efgtoa+2)& (0+255),f,b
  6154  003686  51D6               	movf	(??_efgtoa+1)& (0+255),w,b
  6155  003688  23D8               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6156  00368A  51D8               	movf	(??_efgtoa+3)& (0+255),w,b
  6157  00368C  E106               	bnz	i2u1507_40
  6158  00368E  0E1A               	movlw	26
  6159  003690  5DD7               	subwf	(??_efgtoa+2)& (0+255),w,b
  6160  003692  B0D8               	btfsc	status,0,c
  6161  003694  D002               	goto	i2u1507_40
  6162  003696  0E01               	movlw	1
  6163  003698  D001               	goto	i2u1508_40
  6164  00369A                     i2u1507_40:
  6165  00369A  0E00               	movlw	0
  6166  00369C                     i2u1508_40:
  6167  00369C  0101               	movlb	1	; () banked
  6168  00369E  6FCA               	movwf	_efgtoa$1014& (0+255),b
  6169  0036A0  6BCB               	clrf	(_efgtoa$1014+1)& (0+255),b
  6170                           
  6171                           ; BSR set to: 1
  6172  0036A2  51CA               	movf	_efgtoa$1014& (0+255),w,b
  6173  0036A4  11CB               	iorwf	(_efgtoa$1014+1)& (0+255),w,b
  6174  0036A6  A4D8               	btfss	status,2,c
  6175  0036A8  D004               	goto	i2l11229
  6176                           
  6177                           ; BSR set to: 1
  6178  0036AA  0E00               	movlw	0
  6179  0036AC  6FC9               	movwf	(_efgtoa$1013+1)& (0+255),b
  6180  0036AE  0E65               	movlw	101
  6181  0036B0  D003               	goto	L5
  6182  0036B2                     i2l11229:
  6183                           
  6184                           ; BSR set to: 1
  6185  0036B2  0E00               	movlw	0
  6186  0036B4  6FC9               	movwf	(_efgtoa$1013+1)& (0+255),b
  6187  0036B6  0E45               	movlw	69
  6188  0036B8                     L5:
  6189  0036B8  6FC8               	movwf	_efgtoa$1013& (0+255),b
  6190                           
  6191                           ; BSR set to: 1
  6192  0036BA  0E2C               	movlw	low _dbuf
  6193  0036BC  25EA               	addwf	efgtoa@i& (0+255),w,b
  6194  0036BE  6ED9               	movwf	fsr2l,c
  6195  0036C0  0E02               	movlw	high _dbuf
  6196  0036C2  21EB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6197  0036C4  6EDA               	movwf	fsr2h,c
  6198  0036C6  C1C8  FFDF         	movff	_efgtoa$1013,indf2
  6199                           
  6200                           ; BSR set to: 1
  6201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  6202  0036CA  07DB               	decf	efgtoa@w& (0+255),f,b
  6203  0036CC  A0D8               	btfss	status,0,c
  6204  0036CE  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  6205                           
  6206                           ; BSR set to: 1
  6207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  6208  0036D0  0E2C               	movlw	low _dbuf
  6209  0036D2  25EE               	addwf	efgtoa@n& (0+255),w,b
  6210  0036D4  6E01               	movwf	strcpy@dest^0,c
  6211  0036D6  0E02               	movlw	high _dbuf
  6212  0036D8  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6213  0036DA  6E02               	movwf	(strcpy@dest+1)^0,c
  6214  0036DC  0E2C               	movlw	low _dbuf
  6215  0036DE  25EA               	addwf	efgtoa@i& (0+255),w,b
  6216  0036E0  6E03               	movwf	strcpy@src^0,c
  6217  0036E2  0E02               	movlw	high _dbuf
  6218  0036E4  21EB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6219  0036E6  6E04               	movwf	(strcpy@src+1)^0,c
  6220  0036E8  EC17  F036         	call	_strcpy	;wreg free
  6221  0036EC  EF2D  F017         	goto	i2l10987
  6222  0036F0                     __end_of_efgtoa:
  6223                           	opt callstack 0
  6224                           
  6225 ;; *************** function i2___awmod *****************
  6226 ;; Defined at:
  6227 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  dividend        2    0[COMRAM] int 
  6230 ;;  divisor         2    2[COMRAM] int 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  __awmod         1    5[COMRAM] unsigned char 
  6233 ;;  __awmod         1    4[COMRAM] unsigned char 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  2    0[COMRAM] int 
  6236 ;; Registers used:
  6237 ;;		wreg, status,2, status,0
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6243 ;;      Params:         4       0       0       0       0       0       0
  6244 ;;      Locals:         2       0       0       0       0       0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0
  6246 ;;      Totals:         6       0       0       0       0       0       0
  6247 ;;Total ram usage:        6 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_efgtoa
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text25
  6257  006A38                     __ptext25:
  6258                           	opt callstack 0
  6259  006A38                     i2___awmod:
  6260                           	opt callstack 18
  6261                           
  6262                           ;incstack = 0
  6263  006A38  0E00               	movlw	0
  6264  006A3A  6E06               	movwf	i2___awmod@sign^0,c
  6265  006A3C  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  6266  006A3E  D006               	goto	i2l10307
  6267  006A40  6C01               	negf	i2___awmod@dividend^0,c
  6268  006A42  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6269  006A44  B0D8               	btfsc	status,0,c
  6270  006A46  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6271  006A48  0E01               	movlw	1
  6272  006A4A  6E06               	movwf	i2___awmod@sign^0,c
  6273  006A4C                     i2l10307:
  6274  006A4C  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  6275  006A4E  D004               	goto	i2l10311
  6276  006A50  6C03               	negf	i2___awmod@divisor^0,c
  6277  006A52  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  6278  006A54  B0D8               	btfsc	status,0,c
  6279  006A56  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  6280  006A58                     i2l10311:
  6281  006A58  5003               	movf	i2___awmod@divisor^0,w,c
  6282  006A5A  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  6283  006A5C  B4D8               	btfsc	status,2,c
  6284  006A5E  D018               	goto	i2l10327
  6285  006A60  0E01               	movlw	1
  6286  006A62  6E05               	movwf	i2___awmod@counter^0,c
  6287  006A64  D004               	goto	i2l10317
  6288  006A66                     i2l10315:
  6289  006A66  90D8               	bcf	status,0,c
  6290  006A68  3603               	rlcf	i2___awmod@divisor^0,f,c
  6291  006A6A  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  6292  006A6C  2A05               	incf	i2___awmod@counter^0,f,c
  6293  006A6E                     i2l10317:
  6294  006A6E  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  6295  006A70  D7FA               	goto	i2l10315
  6296  006A72                     i2u1374_40:
  6297  006A72  5003               	movf	i2___awmod@divisor^0,w,c
  6298  006A74  5C01               	subwf	i2___awmod@dividend^0,w,c
  6299  006A76  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6300  006A78  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  6301  006A7A  A0D8               	btfss	status,0,c
  6302  006A7C  D004               	goto	i2l10323
  6303  006A7E  5003               	movf	i2___awmod@divisor^0,w,c
  6304  006A80  5E01               	subwf	i2___awmod@dividend^0,f,c
  6305  006A82  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6306  006A84  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  6307  006A86                     i2l10323:
  6308  006A86  90D8               	bcf	status,0,c
  6309  006A88  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  6310  006A8A  3203               	rrcf	i2___awmod@divisor^0,f,c
  6311  006A8C  2E05               	decfsz	i2___awmod@counter^0,f,c
  6312  006A8E  D7F1               	goto	i2u1374_40
  6313  006A90                     i2l10327:
  6314  006A90  5006               	movf	i2___awmod@sign^0,w,c
  6315  006A92  B4D8               	btfsc	status,2,c
  6316  006A94  D004               	goto	i2l10331
  6317  006A96  6C01               	negf	i2___awmod@dividend^0,c
  6318  006A98  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6319  006A9A  B0D8               	btfsc	status,0,c
  6320  006A9C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6321  006A9E                     i2l10331:
  6322  006A9E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  6323  006AA2  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  6324  006AA6  0012               	return		;funcret
  6325  006AA8                     __end_ofi2___awmod:
  6326                           	opt callstack 0
  6327                           
  6328 ;; *************** function _tolower *****************
  6329 ;; Defined at:
  6330 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  c               2    6[COMRAM] int 
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;		None
  6335 ;; Return value:  Size  Location     Type
  6336 ;;                  2    6[COMRAM] int 
  6337 ;; Registers used:
  6338 ;;		wreg, status,2, status,0
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6344 ;;      Params:         2       0       0       0       0       0       0
  6345 ;;      Locals:         2       0       0       0       0       0       0
  6346 ;;      Temps:          4       0       0       0       0       0       0
  6347 ;;      Totals:         8       0       0       0       0       0       0
  6348 ;;Total ram usage:        8 bytes
  6349 ;; Hardware stack levels used:    1
  6350 ;; Hardware stack levels required when called:    1
  6351 ;; This function calls:
  6352 ;;		_isupper
  6353 ;; This function is called by:
  6354 ;;		_efgtoa
  6355 ;;		_vfpfcnvrt
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359                           	psect	text26
  6360  006C80                     __ptext26:
  6361                           	opt callstack 0
  6362  006C80                     _tolower:
  6363                           	opt callstack 18
  6364                           
  6365                           ;incstack = 0
  6366  006C80  0EBF               	movlw	191
  6367  006C82  6E09               	movwf	??_tolower^0,c
  6368  006C84  0EFF               	movlw	255
  6369  006C86  6E0A               	movwf	(??_tolower+1)^0,c
  6370  006C88  C007  F00B         	movff	tolower@c,??_tolower+2
  6371  006C8C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6372  006C90  5009               	movf	??_tolower^0,w,c
  6373  006C92  260B               	addwf	(??_tolower+2)^0,f,c
  6374  006C94  500A               	movf	(??_tolower+1)^0,w,c
  6375  006C96  220C               	addwfc	(??_tolower+3)^0,f,c
  6376  006C98  500C               	movf	(??_tolower+3)^0,w,c
  6377  006C9A  E106               	bnz	i2u1280_40
  6378  006C9C  0E1A               	movlw	26
  6379  006C9E  5C0B               	subwf	(??_tolower+2)^0,w,c
  6380  006CA0  B0D8               	btfsc	status,0,c
  6381  006CA2  D002               	goto	i2u1280_40
  6382  006CA4  0E01               	movlw	1
  6383  006CA6  D001               	goto	i2u1281_40
  6384  006CA8                     i2u1280_40:
  6385  006CA8  0E00               	movlw	0
  6386  006CAA                     i2u1281_40:
  6387  006CAA  6E0D               	movwf	_tolower$1787^0,c
  6388  006CAC  6A0E               	clrf	(_tolower$1787+1)^0,c
  6389  006CAE  500D               	movf	_tolower$1787^0,w,c
  6390  006CB0  100E               	iorwf	(_tolower$1787+1)^0,w,c
  6391  006CB2  B4D8               	btfsc	status,2,c
  6392  006CB4  D006               	goto	i2l1557
  6393  006CB6  0E20               	movlw	32
  6394  006CB8  1007               	iorwf	tolower@c^0,w,c
  6395  006CBA  6E07               	movwf	?_tolower^0,c
  6396  006CBC  5008               	movf	(tolower@c+1)^0,w,c
  6397  006CBE  6E08               	movwf	(?_tolower+1)^0,c
  6398  006CC0  0012               	return	
  6399  006CC2                     i2l1557:
  6400  006CC2  C007  F007         	movff	tolower@c,?_tolower
  6401  006CC6  C008  F008         	movff	tolower@c+1,?_tolower+1
  6402  006CCA  0012               	return		;funcret
  6403  006CCC                     __end_of_tolower:
  6404                           	opt callstack 0
  6405                           
  6406 ;; *************** function _isupper *****************
  6407 ;; Defined at:
  6408 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;  c               2    0[COMRAM] int 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  2    0[COMRAM] int 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6422 ;;      Params:         2       0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0
  6424 ;;      Temps:          4       0       0       0       0       0       0
  6425 ;;      Totals:         6       0       0       0       0       0       0
  6426 ;;Total ram usage:        6 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		_efgtoa
  6432 ;;		_vfpfcnvrt
  6433 ;;		_tolower
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text27
  6438  006F18                     __ptext27:
  6439                           	opt callstack 0
  6440  006F18                     _isupper:
  6441                           	opt callstack 18
  6442                           
  6443                           ;incstack = 0
  6444  006F18  0EBF               	movlw	191
  6445  006F1A  6E03               	movwf	??_isupper^0,c
  6446  006F1C  0EFF               	movlw	255
  6447  006F1E  6E04               	movwf	(??_isupper+1)^0,c
  6448  006F20  C001  F005         	movff	isupper@c,??_isupper+2
  6449  006F24  C002  F006         	movff	isupper@c+1,??_isupper+3
  6450  006F28  5003               	movf	??_isupper^0,w,c
  6451  006F2A  2605               	addwf	(??_isupper+2)^0,f,c
  6452  006F2C  5004               	movf	(??_isupper+1)^0,w,c
  6453  006F2E  2206               	addwfc	(??_isupper+3)^0,f,c
  6454  006F30  5006               	movf	(??_isupper+3)^0,w,c
  6455  006F32  E106               	bnz	i2u1201_40
  6456  006F34  0E1A               	movlw	26
  6457  006F36  5C05               	subwf	(??_isupper+2)^0,w,c
  6458  006F38  B0D8               	btfsc	status,0,c
  6459  006F3A  D002               	goto	i2u1201_40
  6460  006F3C  0E01               	movlw	1
  6461  006F3E  D001               	goto	i2u1202_40
  6462  006F40                     i2u1201_40:
  6463  006F40  0E00               	movlw	0
  6464  006F42                     i2u1202_40:
  6465  006F42  6E01               	movwf	?_isupper^0,c
  6466  006F44  6A02               	clrf	(?_isupper+1)^0,c
  6467  006F46  0012               	return		;funcret
  6468  006F48                     __end_of_isupper:
  6469                           	opt callstack 0
  6470                           
  6471 ;; *************** function _strcpy *****************
  6472 ;; Defined at:
  6473 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6476 ;;		 -> dbuf(80), 
  6477 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6478 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  6479 ;;		 -> dbuf(80), 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  d               2    8[COMRAM] PTR unsigned char 
  6482 ;;		 -> dbuf(80), 
  6483 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6484 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  6485 ;;		 -> dbuf(80), 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  2    0[COMRAM] PTR unsigned char 
  6488 ;; Registers used:
  6489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6495 ;;      Params:         4       0       0       0       0       0       0
  6496 ;;      Locals:         4       0       0       0       0       0       0
  6497 ;;      Temps:          2       0       0       0       0       0       0
  6498 ;;      Totals:        10       0       0       0       0       0       0
  6499 ;;Total ram usage:       10 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; This function calls:
  6502 ;;		Nothing
  6503 ;; This function is called by:
  6504 ;;		_efgtoa
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text28
  6509  006C2E                     __ptext28:
  6510                           	opt callstack 0
  6511  006C2E                     _strcpy:
  6512                           	opt callstack 18
  6513                           
  6514                           ;incstack = 0
  6515  006C2E  C003  F007         	movff	strcpy@src,strcpy@s
  6516  006C32  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6517  006C36  C001  F009         	movff	strcpy@dest,strcpy@d
  6518  006C3A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6519  006C3E                     i2l9783:
  6520  006C3E  5007               	movf	strcpy@s^0,w,c
  6521  006C40  6E05               	movwf	??_strcpy^0,c
  6522  006C42  5008               	movf	(strcpy@s+1)^0,w,c
  6523  006C44  6E06               	movwf	(??_strcpy+1)^0,c
  6524  006C46  4A07               	infsnz	strcpy@s^0,f,c
  6525  006C48  2A08               	incf	(strcpy@s+1)^0,f,c
  6526  006C4A  C005  FFF6         	movff	??_strcpy,tblptrl
  6527  006C4E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6528  006C52  6AF8               	clrf	tblptru,c
  6529  006C54  C009  FFD9         	movff	strcpy@d,fsr2l
  6530  006C58  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6531  006C5C  4A09               	infsnz	strcpy@d^0,f,c
  6532  006C5E  2A0A               	incf	(strcpy@d+1)^0,f,c
  6533  006C60  0E05               	movlw	(high __ramtop+-1)
  6534  006C62  64F7               	cpfsgt	tblptrh,c
  6535  006C64  D003               	bra	i2u1278_47
  6536  006C66  0008               	tblrd		*
  6537  006C68  50F5               	movf	tablat,w,c
  6538  006C6A  D005               	bra	i2u1278_40
  6539  006C6C                     i2u1278_47:
  6540  006C6C  CFF6 FFE1          	movff	tblptrl,fsr1l
  6541  006C70  CFF7 FFE2          	movff	tblptrh,fsr1h
  6542  006C74  50E7               	movf	indf1,w,c
  6543  006C76                     i2u1278_40:
  6544  006C76  6EDF               	movwf	indf2,c
  6545  006C78  50DF               	movf	indf2,w,c
  6546  006C7A  B4D8               	btfsc	status,2,c
  6547  006C7C  0012               	return	
  6548  006C7E  D7DF               	goto	i2l9783
  6549  006C80                     __end_of_strcpy:
  6550                           	opt callstack 0
  6551                           
  6552 ;; *************** function _floorf *****************
  6553 ;; Defined at:
  6554 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  x               4   74[COMRAM] float 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  u               4   90[COMRAM] struct .
  6559 ;;  m               4   84[COMRAM] unsigned long 
  6560 ;;  e               2   88[COMRAM] int 
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  4   74[COMRAM] float 
  6563 ;; Registers used:
  6564 ;;		wreg, status,2, status,0
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6570 ;;      Params:         4       0       0       0       0       0       0
  6571 ;;      Locals:        10       0       0       0       0       0       0
  6572 ;;      Temps:          6       0       0       0       0       0       0
  6573 ;;      Totals:        20       0       0       0       0       0       0
  6574 ;;Total ram usage:       20 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_efgtoa
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text29
  6584  0057BE                     __ptext29:
  6585                           	opt callstack 0
  6586  0057BE                     _floorf:
  6587                           	opt callstack 18
  6588                           
  6589                           ;incstack = 0
  6590  0057BE  C208  F05B         	movff	floorf@F524,floorf@u
  6591  0057C2  C209  F05C         	movff	floorf@F524+1,floorf@u+1
  6592  0057C6  C20A  F05D         	movff	floorf@F524+2,floorf@u+2
  6593  0057CA  C20B  F05E         	movff	floorf@F524+3,floorf@u+3
  6594  0057CE  C04B  F05B         	movff	floorf@x,floorf@u
  6595  0057D2  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  6596  0057D6  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  6597  0057DA  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  6598  0057DE  0E81               	movlw	129
  6599  0057E0  6E4F               	movwf	??_floorf^0,c
  6600  0057E2  0EFF               	movlw	255
  6601  0057E4  6E50               	movwf	(??_floorf+1)^0,c
  6602  0057E6  C05B  F051         	movff	floorf@u,??_floorf+2
  6603  0057EA  C05C  F052         	movff	floorf@u+1,??_floorf+3
  6604  0057EE  C05D  F053         	movff	floorf@u+2,??_floorf+4
  6605  0057F2  C05E  F054         	movff	floorf@u+3,??_floorf+5
  6606  0057F6  0E18               	movlw	24
  6607  0057F8  D005               	goto	i2u1283_40
  6608  0057FA                     i2u1283_45:
  6609  0057FA  90D8               	bcf	status,0,c
  6610  0057FC  3254               	rrcf	(??_floorf+5)^0,f,c
  6611  0057FE  3253               	rrcf	(??_floorf+4)^0,f,c
  6612  005800  3252               	rrcf	(??_floorf+3)^0,f,c
  6613  005802  3251               	rrcf	(??_floorf+2)^0,f,c
  6614  005804                     i2u1283_40:
  6615  005804  2EE8               	decfsz	wreg,f,c
  6616  005806  D7F9               	goto	i2u1283_45
  6617  005808  5051               	movf	(??_floorf+2)^0,w,c
  6618  00580A  244F               	addwf	??_floorf^0,w,c
  6619  00580C  6E59               	movwf	floorf@e^0,c
  6620  00580E  0E00               	movlw	0
  6621  005810  2050               	addwfc	(??_floorf+1)^0,w,c
  6622  005812  6E5A               	movwf	(floorf@e+1)^0,c
  6623  005814  BE5A               	btfsc	(floorf@e+1)^0,7,c
  6624  005816  D00F               	goto	i2l9801
  6625  005818  505A               	movf	(floorf@e+1)^0,w,c
  6626  00581A  E104               	bnz	i2u1284_40
  6627  00581C  0E17               	movlw	23
  6628  00581E  5C59               	subwf	floorf@e^0,w,c
  6629  005820  A0D8               	btfss	status,0,c
  6630  005822  D009               	goto	i2l9801
  6631  005824                     i2u1284_40:
  6632  005824  C04B  F04B         	movff	floorf@x,?_floorf
  6633  005828  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  6634  00582C  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  6635  005830  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  6636  005834  0012               	return	
  6637  005836                     i2l9801:
  6638  005836  BE5A               	btfsc	(floorf@e+1)^0,7,c
  6639  005838  D05E               	goto	i2l9811
  6640  00583A  C059  F04F         	movff	floorf@e,??_floorf
  6641  00583E  0EFF               	movlw	255
  6642  005840  6E50               	movwf	(??_floorf+1)^0,c
  6643  005842  0EFF               	movlw	255
  6644  005844  6E51               	movwf	(??_floorf+2)^0,c
  6645  005846  0E7F               	movlw	127
  6646  005848  6E52               	movwf	(??_floorf+3)^0,c
  6647  00584A  0E00               	movlw	0
  6648  00584C  6E53               	movwf	(??_floorf+4)^0,c
  6649  00584E                     i2u1286_45:
  6650  00584E  664F               	tstfsz	??_floorf^0,c
  6651  005850  D001               	goto	i2u1286_46
  6652  005852  D007               	goto	i2u1286_47
  6653  005854                     i2u1286_46:
  6654  005854  3453               	rlcf	(??_floorf+4)^0,w,c
  6655  005856  3253               	rrcf	(??_floorf+4)^0,f,c
  6656  005858  3252               	rrcf	(??_floorf+3)^0,f,c
  6657  00585A  3251               	rrcf	(??_floorf+2)^0,f,c
  6658  00585C  3250               	rrcf	(??_floorf+1)^0,f,c
  6659  00585E  2E4F               	decfsz	??_floorf^0,f,c
  6660  005860  D7F6               	goto	i2u1286_45
  6661  005862                     i2u1286_47:
  6662  005862  C050  F055         	movff	??_floorf+1,floorf@m
  6663  005866  C051  F056         	movff	??_floorf+2,floorf@m+1
  6664  00586A  C052  F057         	movff	??_floorf+3,floorf@m+2
  6665  00586E  C053  F058         	movff	??_floorf+4,floorf@m+3
  6666  005872  5055               	movf	floorf@m^0,w,c
  6667  005874  145B               	andwf	floorf@u^0,w,c
  6668  005876  6E4F               	movwf	??_floorf^0,c
  6669  005878  5056               	movf	(floorf@m+1)^0,w,c
  6670  00587A  145C               	andwf	(floorf@u+1)^0,w,c
  6671  00587C  6E50               	movwf	(??_floorf+1)^0,c
  6672  00587E  5057               	movf	(floorf@m+2)^0,w,c
  6673  005880  145D               	andwf	(floorf@u+2)^0,w,c
  6674  005882  6E51               	movwf	(??_floorf+2)^0,c
  6675  005884  5058               	movf	(floorf@m+3)^0,w,c
  6676  005886  145E               	andwf	(floorf@u+3)^0,w,c
  6677  005888  6E52               	movwf	(??_floorf+3)^0,c
  6678  00588A  504F               	movf	??_floorf^0,w,c
  6679  00588C  1050               	iorwf	(??_floorf+1)^0,w,c
  6680  00588E  1051               	iorwf	(??_floorf+2)^0,w,c
  6681  005890  1052               	iorwf	(??_floorf+3)^0,w,c
  6682  005892  B4D8               	btfsc	status,2,c
  6683  005894  D7C7               	goto	i2u1284_40
  6684  005896  C05B  F04F         	movff	floorf@u,??_floorf
  6685  00589A  C05C  F050         	movff	floorf@u+1,??_floorf+1
  6686  00589E  C05D  F051         	movff	floorf@u+2,??_floorf+2
  6687  0058A2  C05E  F052         	movff	floorf@u+3,??_floorf+3
  6688  0058A6  0E20               	movlw	32
  6689  0058A8  D005               	goto	i2u1288_40
  6690  0058AA                     i2u1288_45:
  6691  0058AA  90D8               	bcf	status,0,c
  6692  0058AC  3252               	rrcf	(??_floorf+3)^0,f,c
  6693  0058AE  3251               	rrcf	(??_floorf+2)^0,f,c
  6694  0058B0  3250               	rrcf	(??_floorf+1)^0,f,c
  6695  0058B2  324F               	rrcf	??_floorf^0,f,c
  6696  0058B4                     i2u1288_40:
  6697  0058B4  2EE8               	decfsz	wreg,f,c
  6698  0058B6  D7F9               	goto	i2u1288_45
  6699  0058B8  504F               	movf	??_floorf^0,w,c
  6700  0058BA  1050               	iorwf	(??_floorf+1)^0,w,c
  6701  0058BC  1051               	iorwf	(??_floorf+2)^0,w,c
  6702  0058BE  1052               	iorwf	(??_floorf+3)^0,w,c
  6703  0058C0  B4D8               	btfsc	status,2,c
  6704  0058C2  D008               	goto	i2l1220
  6705  0058C4  5055               	movf	floorf@m^0,w,c
  6706  0058C6  265B               	addwf	floorf@u^0,f,c
  6707  0058C8  5056               	movf	(floorf@m+1)^0,w,c
  6708  0058CA  225C               	addwfc	(floorf@u+1)^0,f,c
  6709  0058CC  5057               	movf	(floorf@m+2)^0,w,c
  6710  0058CE  225D               	addwfc	(floorf@u+2)^0,f,c
  6711  0058D0  5058               	movf	(floorf@m+3)^0,w,c
  6712  0058D2  225E               	addwfc	(floorf@u+3)^0,f,c
  6713  0058D4                     i2l1220:
  6714  0058D4  1C55               	comf	floorf@m^0,w,c
  6715  0058D6  6E4F               	movwf	??_floorf^0,c
  6716  0058D8  1C56               	comf	(floorf@m+1)^0,w,c
  6717  0058DA  6E50               	movwf	(??_floorf+1)^0,c
  6718  0058DC  1C57               	comf	(floorf@m+2)^0,w,c
  6719  0058DE  6E51               	movwf	(??_floorf+2)^0,c
  6720  0058E0  1C58               	comf	(floorf@m+3)^0,w,c
  6721  0058E2  6E52               	movwf	(??_floorf+3)^0,c
  6722  0058E4  504F               	movf	??_floorf^0,w,c
  6723  0058E6  165B               	andwf	floorf@u^0,f,c
  6724  0058E8  5050               	movf	(??_floorf+1)^0,w,c
  6725  0058EA  165C               	andwf	(floorf@u+1)^0,f,c
  6726  0058EC  5051               	movf	(??_floorf+2)^0,w,c
  6727  0058EE  165D               	andwf	(floorf@u+2)^0,f,c
  6728  0058F0  5052               	movf	(??_floorf+3)^0,w,c
  6729  0058F2  165E               	andwf	(floorf@u+3)^0,f,c
  6730  0058F4  D036               	goto	i2l9819
  6731  0058F6                     i2l9811:
  6732  0058F6  C05B  F04F         	movff	floorf@u,??_floorf
  6733  0058FA  C05C  F050         	movff	floorf@u+1,??_floorf+1
  6734  0058FE  C05D  F051         	movff	floorf@u+2,??_floorf+2
  6735  005902  C05E  F052         	movff	floorf@u+3,??_floorf+3
  6736  005906  0E20               	movlw	32
  6737  005908  D005               	goto	i2u1290_40
  6738  00590A                     i2u1290_45:
  6739  00590A  90D8               	bcf	status,0,c
  6740  00590C  3252               	rrcf	(??_floorf+3)^0,f,c
  6741  00590E  3251               	rrcf	(??_floorf+2)^0,f,c
  6742  005910  3250               	rrcf	(??_floorf+1)^0,f,c
  6743  005912  324F               	rrcf	??_floorf^0,f,c
  6744  005914                     i2u1290_40:
  6745  005914  2EE8               	decfsz	wreg,f,c
  6746  005916  D7F9               	goto	i2u1290_45
  6747  005918  504F               	movf	??_floorf^0,w,c
  6748  00591A  1050               	iorwf	(??_floorf+1)^0,w,c
  6749  00591C  1051               	iorwf	(??_floorf+2)^0,w,c
  6750  00591E  1052               	iorwf	(??_floorf+3)^0,w,c
  6751  005920  A4D8               	btfss	status,2,c
  6752  005922  D008               	goto	i2l9815
  6753  005924  0E00               	movlw	0
  6754  005926  6E5B               	movwf	floorf@u^0,c
  6755  005928  0E00               	movlw	0
  6756  00592A  6E5C               	movwf	(floorf@u+1)^0,c
  6757  00592C  0E00               	movlw	0
  6758  00592E  6E5D               	movwf	(floorf@u+2)^0,c
  6759  005930  0E00               	movlw	0
  6760  005932  D016               	goto	L6
  6761  005934                     i2l9815:
  6762  005934  90D8               	bcf	status,0,c
  6763  005936  345B               	rlcf	floorf@u^0,w,c
  6764  005938  6E4F               	movwf	??_floorf^0,c
  6765  00593A  345C               	rlcf	(floorf@u+1)^0,w,c
  6766  00593C  6E50               	movwf	(??_floorf+1)^0,c
  6767  00593E  345D               	rlcf	(floorf@u+2)^0,w,c
  6768  005940  6E51               	movwf	(??_floorf+2)^0,c
  6769  005942  345E               	rlcf	(floorf@u+3)^0,w,c
  6770  005944  6E52               	movwf	(??_floorf+3)^0,c
  6771  005946  504F               	movf	??_floorf^0,w,c
  6772  005948  1050               	iorwf	(??_floorf+1)^0,w,c
  6773  00594A  1051               	iorwf	(??_floorf+2)^0,w,c
  6774  00594C  1052               	iorwf	(??_floorf+3)^0,w,c
  6775  00594E  B4D8               	btfsc	status,2,c
  6776  005950  D008               	goto	i2l9819
  6777  005952  0E00               	movlw	0
  6778  005954  6E5B               	movwf	floorf@u^0,c
  6779  005956  0E00               	movlw	0
  6780  005958  6E5C               	movwf	(floorf@u+1)^0,c
  6781  00595A  0E80               	movlw	128
  6782  00595C  6E5D               	movwf	(floorf@u+2)^0,c
  6783  00595E  0EBF               	movlw	191
  6784  005960                     L6:
  6785  005960  6E5E               	movwf	(floorf@u+3)^0,c
  6786  005962                     i2l9819:
  6787  005962  C05B  F04B         	movff	floorf@u,?_floorf
  6788  005966  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  6789  00596A  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  6790  00596E  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  6791  005972  0012               	return		;funcret
  6792  005974                     __end_of_floorf:
  6793                           	opt callstack 0
  6794                           
  6795 ;; *************** function ___fpclassifyf *****************
  6796 ;; Defined at:
  6797 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;  x               4    0[COMRAM] float 
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;  u               4   10[COMRAM] struct .
  6802 ;;  e               2    8[COMRAM] int 
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  2    0[COMRAM] int 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6812 ;;      Params:         4       0       0       0       0       0       0
  6813 ;;      Locals:         6       0       0       0       0       0       0
  6814 ;;      Temps:          4       0       0       0       0       0       0
  6815 ;;      Totals:        14       0       0       0       0       0       0
  6816 ;;Total ram usage:       14 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_efgtoa
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text30
  6826  0064D8                     __ptext30:
  6827                           	opt callstack 0
  6828  0064D8                     ___fpclassifyf:
  6829                           	opt callstack 18
  6830                           
  6831                           ;incstack = 0
  6832  0064D8  C20C  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6833  0064DC  C20D  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6834  0064E0  C20E  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6835  0064E4  C20F  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6836  0064E8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6837  0064EC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6838  0064F0  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6839  0064F4  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6840  0064F8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6841  0064FC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6842  006500  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6843  006504  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6844  006508  0E18               	movlw	24
  6845  00650A  D005               	goto	i2u1271_40
  6846  00650C                     i2u1271_45:
  6847  00650C  90D8               	bcf	status,0,c
  6848  00650E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6849  006510  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6850  006512  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6851  006514  3205               	rrcf	??___fpclassifyf^0,f,c
  6852  006516                     i2u1271_40:
  6853  006516  2EE8               	decfsz	wreg,f,c
  6854  006518  D7F9               	goto	i2u1271_45
  6855  00651A  5005               	movf	??___fpclassifyf^0,w,c
  6856  00651C  6E09               	movwf	___fpclassifyf@e^0,c
  6857  00651E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6858  006520  5009               	movf	___fpclassifyf@e^0,w,c
  6859  006522  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6860  006524  A4D8               	btfss	status,2,c
  6861  006526  D019               	goto	i2l9771
  6862  006528  90D8               	bcf	status,0,c
  6863  00652A  340B               	rlcf	___fpclassifyf@u^0,w,c
  6864  00652C  6E05               	movwf	??___fpclassifyf^0,c
  6865  00652E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6866  006530  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6867  006532  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6868  006534  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6869  006536  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6870  006538  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6871  00653A  5005               	movf	??___fpclassifyf^0,w,c
  6872  00653C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6873  00653E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6874  006540  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6875  006542  A4D8               	btfss	status,2,c
  6876  006544  D005               	goto	i2l9767
  6877  006546  0E00               	movlw	0
  6878  006548  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6879  00654A  0E02               	movlw	2
  6880  00654C  6E01               	movwf	?___fpclassifyf^0,c
  6881  00654E  0012               	return	
  6882  006550                     i2l9767:
  6883  006550  0E00               	movlw	0
  6884  006552  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6885  006554  0E03               	movlw	3
  6886  006556  6E01               	movwf	?___fpclassifyf^0,c
  6887  006558  0012               	return	
  6888  00655A                     i2l9771:
  6889  00655A  2809               	incf	___fpclassifyf@e^0,w,c
  6890  00655C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6891  00655E  A4D8               	btfss	status,2,c
  6892  006560  D01C               	goto	i2l9777
  6893  006562  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6894  006566  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6895  00656A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6896  00656E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6897  006572  0E09               	movlw	9
  6898  006574                     i2u1275_45:
  6899  006574  90D8               	bcf	status,0,c
  6900  006576  3605               	rlcf	??___fpclassifyf^0,f,c
  6901  006578  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6902  00657A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6903  00657C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6904  00657E  2EE8               	decfsz	wreg,f,c
  6905  006580  D7F9               	goto	i2u1275_45
  6906  006582  5005               	movf	??___fpclassifyf^0,w,c
  6907  006584  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6908  006586  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6909  006588  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6910  00658A  A4D8               	btfss	status,2,c
  6911  00658C  D002               	goto	i2u1276_40
  6912  00658E  0E01               	movlw	1
  6913  006590  D001               	goto	i2u1277_40
  6914  006592                     i2u1276_40:
  6915  006592  0E00               	movlw	0
  6916  006594                     i2u1277_40:
  6917  006594  6E01               	movwf	?___fpclassifyf^0,c
  6918  006596  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6919  006598  0012               	return	
  6920  00659A                     i2l9777:
  6921  00659A  0E00               	movlw	0
  6922  00659C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6923  00659E  0E04               	movlw	4
  6924  0065A0  6E01               	movwf	?___fpclassifyf^0,c
  6925  0065A2  0012               	return		;funcret
  6926  0065A4                     __end_of___fpclassifyf:
  6927                           	opt callstack 0
  6928                           
  6929 ;; *************** function ___fleq *****************
  6930 ;; Defined at:
  6931 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  ff1             4    0[COMRAM] int 
  6934 ;;  ff2             4    4[COMRAM] int 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;		None
  6937 ;; Return value:  Size  Location     Type
  6938 ;;		None               void
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, status,0
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6946 ;;      Params:         8       0       0       0       0       0       0
  6947 ;;      Locals:         0       0       0       0       0       0       0
  6948 ;;      Temps:          4       0       0       0       0       0       0
  6949 ;;      Totals:        12       0       0       0       0       0       0
  6950 ;;Total ram usage:       12 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; This function calls:
  6953 ;;		Nothing
  6954 ;; This function is called by:
  6955 ;;		_efgtoa
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text31
  6960  00683C                     __ptext31:
  6961                           	opt callstack 0
  6962  00683C                     ___fleq:
  6963                           	opt callstack 18
  6964                           
  6965                           ;incstack = 0
  6966  00683C  0E00               	movlw	0
  6967  00683E  1401               	andwf	___fleq@ff1^0,w,c
  6968  006840  6E09               	movwf	??___fleq^0,c
  6969  006842  0E00               	movlw	0
  6970  006844  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6971  006846  6E0A               	movwf	(??___fleq+1)^0,c
  6972  006848  0E80               	movlw	128
  6973  00684A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6974  00684C  6E0B               	movwf	(??___fleq+2)^0,c
  6975  00684E  0E7F               	movlw	127
  6976  006850  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6977  006852  6E0C               	movwf	(??___fleq+3)^0,c
  6978  006854  5009               	movf	??___fleq^0,w,c
  6979  006856  100A               	iorwf	(??___fleq+1)^0,w,c
  6980  006858  100B               	iorwf	(??___fleq+2)^0,w,c
  6981  00685A  100C               	iorwf	(??___fleq+3)^0,w,c
  6982  00685C  A4D8               	btfss	status,2,c
  6983  00685E  D008               	goto	i2l10105
  6984  006860  0E00               	movlw	0
  6985  006862  6E01               	movwf	___fleq@ff1^0,c
  6986  006864  0E00               	movlw	0
  6987  006866  6E02               	movwf	(___fleq@ff1+1)^0,c
  6988  006868  0E00               	movlw	0
  6989  00686A  6E03               	movwf	(___fleq@ff1+2)^0,c
  6990  00686C  0E00               	movlw	0
  6991  00686E  6E04               	movwf	(___fleq@ff1+3)^0,c
  6992  006870                     i2l10105:
  6993  006870  0E00               	movlw	0
  6994  006872  1405               	andwf	___fleq@ff2^0,w,c
  6995  006874  6E09               	movwf	??___fleq^0,c
  6996  006876  0E00               	movlw	0
  6997  006878  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6998  00687A  6E0A               	movwf	(??___fleq+1)^0,c
  6999  00687C  0E80               	movlw	128
  7000  00687E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7001  006880  6E0B               	movwf	(??___fleq+2)^0,c
  7002  006882  0E7F               	movlw	127
  7003  006884  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7004  006886  6E0C               	movwf	(??___fleq+3)^0,c
  7005  006888  5009               	movf	??___fleq^0,w,c
  7006  00688A  100A               	iorwf	(??___fleq+1)^0,w,c
  7007  00688C  100B               	iorwf	(??___fleq+2)^0,w,c
  7008  00688E  100C               	iorwf	(??___fleq+3)^0,w,c
  7009  006890  A4D8               	btfss	status,2,c
  7010  006892  D008               	goto	i2l10109
  7011  006894  0E00               	movlw	0
  7012  006896  6E05               	movwf	___fleq@ff2^0,c
  7013  006898  0E00               	movlw	0
  7014  00689A  6E06               	movwf	(___fleq@ff2+1)^0,c
  7015  00689C  0E00               	movlw	0
  7016  00689E  6E07               	movwf	(___fleq@ff2+2)^0,c
  7017  0068A0  0E00               	movlw	0
  7018  0068A2  6E08               	movwf	(___fleq@ff2+3)^0,c
  7019  0068A4                     i2l10109:
  7020  0068A4  5005               	movf	___fleq@ff2^0,w,c
  7021  0068A6  1801               	xorwf	___fleq@ff1^0,w,c
  7022  0068A8  E10A               	bnz	i2u1339_40
  7023  0068AA  5006               	movf	(___fleq@ff2+1)^0,w,c
  7024  0068AC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7025  0068AE  E107               	bnz	i2u1339_40
  7026  0068B0  5007               	movf	(___fleq@ff2+2)^0,w,c
  7027  0068B2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7028  0068B4  E104               	bnz	i2u1339_40
  7029  0068B6  5008               	movf	(___fleq@ff2+3)^0,w,c
  7030  0068B8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7031  0068BA  B4D8               	btfsc	status,2,c
  7032  0068BC  D002               	goto	i2l10113
  7033  0068BE                     i2u1339_40:
  7034  0068BE  90D8               	bcf	status,0,c
  7035  0068C0  0012               	return	
  7036  0068C2                     i2l10113:
  7037  0068C2  80D8               	bsf	status,0,c
  7038  0068C4  0012               	return		;funcret
  7039  0068C6                     __end_of___fleq:
  7040                           	opt callstack 0
  7041                           
  7042 ;; *************** function ___awdiv *****************
  7043 ;; Defined at:
  7044 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  dividend        2    0[COMRAM] int 
  7047 ;;  divisor         2    2[COMRAM] int 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;  quotient        2    6[COMRAM] int 
  7050 ;;  sign            1    5[COMRAM] unsigned char 
  7051 ;;  counter         1    4[COMRAM] unsigned char 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  2    0[COMRAM] int 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7061 ;;      Params:         4       0       0       0       0       0       0
  7062 ;;      Locals:         4       0       0       0       0       0       0
  7063 ;;      Temps:          0       0       0       0       0       0       0
  7064 ;;      Totals:         8       0       0       0       0       0       0
  7065 ;;Total ram usage:        8 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_efgtoa
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           	psect	text32
  7075  0068C6                     __ptext32:
  7076                           	opt callstack 0
  7077  0068C6                     ___awdiv:
  7078                           	opt callstack 18
  7079                           
  7080                           ;incstack = 0
  7081  0068C6  0E00               	movlw	0
  7082  0068C8  6E06               	movwf	___awdiv@sign^0,c
  7083  0068CA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7084  0068CC  D006               	goto	i2l10065
  7085  0068CE  6C03               	negf	___awdiv@divisor^0,c
  7086  0068D0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7087  0068D2  B0D8               	btfsc	status,0,c
  7088  0068D4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7089  0068D6  0E01               	movlw	1
  7090  0068D8  6E06               	movwf	___awdiv@sign^0,c
  7091  0068DA                     i2l10065:
  7092  0068DA  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  7093  0068DC  D006               	goto	i2l10071
  7094  0068DE  6C01               	negf	___awdiv@dividend^0,c
  7095  0068E0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7096  0068E2  B0D8               	btfsc	status,0,c
  7097  0068E4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7098  0068E6  0E01               	movlw	1
  7099  0068E8  1A06               	xorwf	___awdiv@sign^0,f,c
  7100  0068EA                     i2l10071:
  7101  0068EA  0E00               	movlw	0
  7102  0068EC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7103  0068EE  0E00               	movlw	0
  7104  0068F0  6E07               	movwf	___awdiv@quotient^0,c
  7105  0068F2  5003               	movf	___awdiv@divisor^0,w,c
  7106  0068F4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7107  0068F6  B4D8               	btfsc	status,2,c
  7108  0068F8  D01C               	goto	i2l10093
  7109  0068FA  0E01               	movlw	1
  7110  0068FC  6E05               	movwf	___awdiv@counter^0,c
  7111  0068FE  D004               	goto	i2l10079
  7112  006900                     i2l10077:
  7113  006900  90D8               	bcf	status,0,c
  7114  006902  3603               	rlcf	___awdiv@divisor^0,f,c
  7115  006904  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7116  006906  2A05               	incf	___awdiv@counter^0,f,c
  7117  006908                     i2l10079:
  7118  006908  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7119  00690A  D7FA               	goto	i2l10077
  7120  00690C                     i2u1334_40:
  7121  00690C  90D8               	bcf	status,0,c
  7122  00690E  3607               	rlcf	___awdiv@quotient^0,f,c
  7123  006910  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7124  006912  5003               	movf	___awdiv@divisor^0,w,c
  7125  006914  5C01               	subwf	___awdiv@dividend^0,w,c
  7126  006916  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7127  006918  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7128  00691A  A0D8               	btfss	status,0,c
  7129  00691C  D005               	goto	i2l10089
  7130  00691E  5003               	movf	___awdiv@divisor^0,w,c
  7131  006920  5E01               	subwf	___awdiv@dividend^0,f,c
  7132  006922  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7133  006924  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7134  006926  8007               	bsf	___awdiv@quotient^0,0,c
  7135  006928                     i2l10089:
  7136  006928  90D8               	bcf	status,0,c
  7137  00692A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7138  00692C  3203               	rrcf	___awdiv@divisor^0,f,c
  7139  00692E  2E05               	decfsz	___awdiv@counter^0,f,c
  7140  006930  D7ED               	goto	i2u1334_40
  7141  006932                     i2l10093:
  7142  006932  5006               	movf	___awdiv@sign^0,w,c
  7143  006934  B4D8               	btfsc	status,2,c
  7144  006936  D004               	goto	i2l10097
  7145  006938  6C07               	negf	___awdiv@quotient^0,c
  7146  00693A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7147  00693C  B0D8               	btfsc	status,0,c
  7148  00693E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7149  006940                     i2l10097:
  7150  006940  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7151  006944  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7152  006948  0012               	return		;funcret
  7153  00694A                     __end_of___awdiv:
  7154                           	opt callstack 0
  7155                           
  7156 ;; *************** function _dtoa *****************
  7157 ;; Defined at:
  7158 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7161 ;;		 -> sprintf@f(6), 
  7162 ;;  d               8   29[COMRAM] long long 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  n               8   53[COMRAM] long long 
  7165 ;;  i               2   61[COMRAM] int 
  7166 ;;  s               2   51[COMRAM] int 
  7167 ;;  w               2   49[COMRAM] int 
  7168 ;;  p               2   47[COMRAM] int 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  2   27[COMRAM] int 
  7171 ;; Registers used:
  7172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7178 ;;      Params:        10       0       0       0       0       0       0
  7179 ;;      Locals:        18       0       0       0       0       0       0
  7180 ;;      Temps:          8       0       0       0       0       0       0
  7181 ;;      Totals:        36       0       0       0       0       0       0
  7182 ;;Total ram usage:       36 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    4
  7185 ;; This function calls:
  7186 ;;		___aodiv
  7187 ;;		___aomod
  7188 ;;		_abs
  7189 ;;		_pad
  7190 ;; This function is called by:
  7191 ;;		_vfpfcnvrt
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text33
  7196  004FC0                     __ptext33:
  7197                           	opt callstack 0
  7198  004FC0                     _dtoa:
  7199                           	opt callstack 15
  7200                           
  7201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7202                           
  7203                           ;incstack = 0
  7204  004FC0  C01E  F036         	movff	dtoa@d,dtoa@n
  7205  004FC4  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7206  004FC8  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7207  004FCC  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7208  004FD0  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7209  004FD4  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7210  004FD8  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7211  004FDC  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7212                           
  7213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7214  004FE0  AE3D               	btfss	(dtoa@n+7)^0,7,c
  7215  004FE2  D002               	goto	i2u1443_40
  7216  004FE4  0E01               	movlw	1
  7217  004FE6  D001               	goto	i2u1444_40
  7218  004FE8                     i2u1443_40:
  7219  004FE8  0E00               	movlw	0
  7220  004FEA                     i2u1444_40:
  7221  004FEA  6E34               	movwf	dtoa@s^0,c
  7222  004FEC  6A35               	clrf	(dtoa@s+1)^0,c
  7223                           
  7224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7225  004FEE  5034               	movf	dtoa@s^0,w,c
  7226  004FF0  1035               	iorwf	(dtoa@s+1)^0,w,c
  7227  004FF2  B4D8               	btfsc	status,2,c
  7228  004FF4  D010               	goto	i2l10887
  7229                           
  7230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7231  004FF6  1E3D               	comf	(dtoa@n+7)^0,f,c
  7232  004FF8  1E3C               	comf	(dtoa@n+6)^0,f,c
  7233  004FFA  1E3B               	comf	(dtoa@n+5)^0,f,c
  7234  004FFC  1E3A               	comf	(dtoa@n+4)^0,f,c
  7235  004FFE  1E39               	comf	(dtoa@n+3)^0,f,c
  7236  005000  1E38               	comf	(dtoa@n+2)^0,f,c
  7237  005002  1E37               	comf	(dtoa@n+1)^0,f,c
  7238  005004  6C36               	negf	dtoa@n^0,c
  7239  005006  0E00               	movlw	0
  7240  005008  2237               	addwfc	(dtoa@n+1)^0,f,c
  7241  00500A  2238               	addwfc	(dtoa@n+2)^0,f,c
  7242  00500C  2239               	addwfc	(dtoa@n+3)^0,f,c
  7243  00500E  223A               	addwfc	(dtoa@n+4)^0,f,c
  7244  005010  223B               	addwfc	(dtoa@n+5)^0,f,c
  7245  005012  223C               	addwfc	(dtoa@n+6)^0,f,c
  7246  005014  223D               	addwfc	(dtoa@n+7)^0,f,c
  7247  005016                     i2l10887:
  7248                           
  7249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7250  005016  0102               	movlb	2	; () banked
  7251  005018  AF23               	btfss	(_prec+1)& (0+255),7,b
  7252                           
  7253                           ; BSR set to: 2
  7254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7255  00501A  9324               	bcf	_flags& (0+255),1,b
  7256                           
  7257                           ; BSR set to: 2
  7258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7259  00501C  BF23               	btfsc	(_prec+1)& (0+255),7,b
  7260  00501E  D005               	goto	i2u1447_40
  7261  005020  5123               	movf	(_prec+1)& (0+255),w,b
  7262  005022  E108               	bnz	i2l319
  7263  005024  0522               	decf	_prec& (0+255),w,b
  7264  005026  B0D8               	btfsc	status,0,c
  7265  005028  D005               	goto	i2l319
  7266  00502A                     i2u1447_40:
  7267                           
  7268                           ; BSR set to: 2
  7269  00502A  0E00               	movlw	0
  7270  00502C  6E31               	movwf	(dtoa@p+1)^0,c
  7271  00502E  0E01               	movlw	1
  7272  005030  6E30               	movwf	dtoa@p^0,c
  7273  005032  D004               	goto	i2l321
  7274  005034                     i2l319:
  7275                           
  7276                           ; BSR set to: 2
  7277  005034  C222  F030         	movff	_prec,dtoa@p
  7278  005038  C223  F031         	movff	_prec+1,dtoa@p+1
  7279  00503C                     i2l321:
  7280                           
  7281                           ; BSR set to: 2
  7282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7283  00503C  C220  F032         	movff	_width,dtoa@w
  7284  005040  C221  F033         	movff	_width+1,dtoa@w+1
  7285                           
  7286                           ; BSR set to: 2
  7287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7288  005044  5034               	movf	dtoa@s^0,w,c
  7289  005046  1035               	iorwf	(dtoa@s+1)^0,w,c
  7290  005048  A4D8               	btfss	status,2,c
  7291  00504A  D002               	goto	i2u1449_40
  7292                           
  7293                           ; BSR set to: 2
  7294  00504C  A524               	btfss	_flags& (0+255),2,b
  7295  00504E  D003               	goto	i2l10901
  7296  005050                     i2u1449_40:
  7297                           
  7298                           ; BSR set to: 2
  7299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7300  005050  0632               	decf	dtoa@w^0,f,c
  7301  005052  A0D8               	btfss	status,0,c
  7302  005054  0633               	decf	(dtoa@w+1)^0,f,c
  7303  005056                     i2l10901:
  7304                           
  7305                           ; BSR set to: 2
  7306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7307  005056  0E00               	movlw	0
  7308  005058  6E3F               	movwf	(dtoa@i+1)^0,c
  7309  00505A  0E4F               	movlw	79
  7310  00505C  6E3E               	movwf	dtoa@i^0,c
  7311                           
  7312                           ; BSR set to: 2
  7313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7314  00505E  0E00               	movlw	0
  7315  005060  6F7B               	movwf	(_dbuf+79)& (0+255),b
  7316                           
  7317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7318  005062  D07C               	goto	i2l10915
  7319  005064                     i2l10905:
  7320                           
  7321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7322  005064  063E               	decf	dtoa@i^0,f,c
  7323  005066  A0D8               	btfss	status,0,c
  7324  005068  063F               	decf	(dtoa@i+1)^0,f,c
  7325                           
  7326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7327  00506A  0E2C               	movlw	low _dbuf
  7328  00506C  243E               	addwf	dtoa@i^0,w,c
  7329  00506E  6ED9               	movwf	fsr2l,c
  7330  005070  0E02               	movlw	high _dbuf
  7331  005072  203F               	addwfc	(dtoa@i+1)^0,w,c
  7332  005074  6EDA               	movwf	fsr2h,c
  7333  005076  C036  F001         	movff	dtoa@n,___aomod@dividend
  7334  00507A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7335  00507E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7336  005082  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7337  005086  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7338  00508A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7339  00508E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7340  005092  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7341  005096  0E0A               	movlw	10
  7342  005098  6E09               	movwf	___aomod@divisor^0,c
  7343  00509A  0E00               	movlw	0
  7344  00509C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7345  00509E  0E00               	movlw	0
  7346  0050A0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7347  0050A2  0E00               	movlw	0
  7348  0050A4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7349  0050A6  0E00               	movlw	0
  7350  0050A8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7351  0050AA  0E00               	movlw	0
  7352  0050AC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7353  0050AE  0E00               	movlw	0
  7354  0050B0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7355  0050B2  0E00               	movlw	0
  7356  0050B4  6E10               	movwf	(___aomod@divisor+7)^0,c
  7357  0050B6  EC7B  F030         	call	___aomod	;wreg free
  7358  0050BA  C001  F026         	movff	?___aomod,??_dtoa
  7359  0050BE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7360  0050C2  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7361  0050C6  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7362  0050CA  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7363  0050CE  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7364  0050D2  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7365  0050D6  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7366  0050DA  C026  F013         	movff	??_dtoa,abs@a
  7367  0050DE  C028  F014         	movff	??_dtoa+2,abs@a+1
  7368  0050E2  EC43  F037         	call	_abs	;wreg free
  7369  0050E6  5013               	movf	?_abs^0,w,c
  7370  0050E8  0F30               	addlw	48
  7371  0050EA  6EDF               	movwf	indf2,c
  7372                           
  7373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7374  0050EC  0630               	decf	dtoa@p^0,f,c
  7375  0050EE  A0D8               	btfss	status,0,c
  7376  0050F0  0631               	decf	(dtoa@p+1)^0,f,c
  7377                           
  7378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7379  0050F2  0632               	decf	dtoa@w^0,f,c
  7380  0050F4  A0D8               	btfss	status,0,c
  7381  0050F6  0633               	decf	(dtoa@w+1)^0,f,c
  7382                           
  7383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7384  0050F8  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7385  0050FC  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7386  005100  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7387  005104  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7388  005108  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7389  00510C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7390  005110  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7391  005114  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7392  005118  0E0A               	movlw	10
  7393  00511A  6E09               	movwf	___aodiv@divisor^0,c
  7394  00511C  0E00               	movlw	0
  7395  00511E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7396  005120  0E00               	movlw	0
  7397  005122  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7398  005124  0E00               	movlw	0
  7399  005126  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7400  005128  0E00               	movlw	0
  7401  00512A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7402  00512C  0E00               	movlw	0
  7403  00512E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7404  005130  0E00               	movlw	0
  7405  005132  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7406  005134  0E00               	movlw	0
  7407  005136  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7408  005138  EC68  F02D         	call	___aodiv	;wreg free
  7409  00513C  C001  F036         	movff	?___aodiv,dtoa@n
  7410  005140  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7411  005144  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7412  005148  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7413  00514C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7414  005150  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7415  005154  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7416  005158  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7417  00515C                     i2l10915:
  7418                           
  7419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7420  00515C  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7421  00515E  D020               	goto	i2u1454_40
  7422  005160  503F               	movf	(dtoa@i+1)^0,w,c
  7423  005162  E103               	bnz	i2u1450_40
  7424  005164  043E               	decf	dtoa@i^0,w,c
  7425  005166  A0D8               	btfss	status,0,c
  7426  005168  D01B               	goto	i2u1454_40
  7427  00516A                     i2u1450_40:
  7428  00516A  5036               	movf	dtoa@n^0,w,c
  7429  00516C  1037               	iorwf	(dtoa@n+1)^0,w,c
  7430  00516E  1038               	iorwf	(dtoa@n+2)^0,w,c
  7431  005170  1039               	iorwf	(dtoa@n+3)^0,w,c
  7432  005172  103A               	iorwf	(dtoa@n+4)^0,w,c
  7433  005174  103B               	iorwf	(dtoa@n+5)^0,w,c
  7434  005176  103C               	iorwf	(dtoa@n+6)^0,w,c
  7435  005178  103D               	iorwf	(dtoa@n+7)^0,w,c
  7436  00517A  A4D8               	btfss	status,2,c
  7437  00517C  D773               	goto	i2l10905
  7438  00517E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7439  005180  D005               	goto	i2u1452_40
  7440  005182  5031               	movf	(dtoa@p+1)^0,w,c
  7441  005184  E102               	bnz	i2u1452_41
  7442  005186  0430               	decf	dtoa@p^0,w,c
  7443  005188  B0D8               	btfsc	status,0,c
  7444  00518A                     i2u1452_41:
  7445  00518A  D76C               	goto	i2l10905
  7446  00518C                     i2u1452_40:
  7447  00518C  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7448  00518E  D008               	goto	i2u1454_40
  7449  005190  5033               	movf	(dtoa@w+1)^0,w,c
  7450  005192  E103               	bnz	i2u1453_40
  7451  005194  0432               	decf	dtoa@w^0,w,c
  7452  005196  A0D8               	btfss	status,0,c
  7453  005198  D003               	goto	i2u1454_40
  7454  00519A                     i2u1453_40:
  7455  00519A  0102               	movlb	2	; () banked
  7456  00519C  B324               	btfsc	_flags& (0+255),1,b
  7457  00519E  D762               	goto	i2l10905
  7458  0051A0                     i2u1454_40:
  7459                           
  7460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7461  0051A0  5034               	movf	dtoa@s^0,w,c
  7462  0051A2  1035               	iorwf	(dtoa@s+1)^0,w,c
  7463  0051A4  A4D8               	btfss	status,2,c
  7464  0051A6  D003               	goto	i2u1456_40
  7465  0051A8  0102               	movlb	2	; () banked
  7466  0051AA  A524               	btfss	_flags& (0+255),2,b
  7467  0051AC  D017               	goto	i2l10939
  7468  0051AE                     i2u1456_40:
  7469                           
  7470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7471  0051AE  063E               	decf	dtoa@i^0,f,c
  7472  0051B0  A0D8               	btfss	status,0,c
  7473  0051B2  063F               	decf	(dtoa@i+1)^0,f,c
  7474                           
  7475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7476  0051B4  5034               	movf	dtoa@s^0,w,c
  7477  0051B6  1035               	iorwf	(dtoa@s+1)^0,w,c
  7478  0051B8  A4D8               	btfss	status,2,c
  7479  0051BA  D004               	goto	i2l10935
  7480  0051BC  0E00               	movlw	0
  7481  0051BE  6E2F               	movwf	(_dtoa$979+1)^0,c
  7482  0051C0  0E2B               	movlw	43
  7483  0051C2  D003               	goto	L7
  7484  0051C4                     i2l10935:
  7485  0051C4  0E00               	movlw	0
  7486  0051C6  6E2F               	movwf	(_dtoa$979+1)^0,c
  7487  0051C8  0E2D               	movlw	45
  7488  0051CA                     L7:
  7489  0051CA  6E2E               	movwf	_dtoa$979^0,c
  7490  0051CC  0E2C               	movlw	low _dbuf
  7491  0051CE  243E               	addwf	dtoa@i^0,w,c
  7492  0051D0  6ED9               	movwf	fsr2l,c
  7493  0051D2  0E02               	movlw	high _dbuf
  7494  0051D4  203F               	addwfc	(dtoa@i+1)^0,w,c
  7495  0051D6  6EDA               	movwf	fsr2h,c
  7496  0051D8  C02E  FFDF         	movff	_dtoa$979,indf2
  7497  0051DC                     i2l10939:
  7498                           
  7499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  7500  0051DC  C01C  F011         	movff	dtoa@fp,pad@fp
  7501  0051E0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7502  0051E4  0E2C               	movlw	low _dbuf
  7503  0051E6  243E               	addwf	dtoa@i^0,w,c
  7504  0051E8  6E13               	movwf	pad@buf^0,c
  7505  0051EA  0E02               	movlw	high _dbuf
  7506  0051EC  203F               	addwfc	(dtoa@i+1)^0,w,c
  7507  0051EE  6E14               	movwf	(pad@buf+1)^0,c
  7508  0051F0  C032  F015         	movff	dtoa@w,pad@p
  7509  0051F4  C033  F016         	movff	dtoa@w+1,pad@p+1
  7510  0051F8  ECD1  F033         	call	_pad	;wreg free
  7511  0051FC  C011  F01C         	movff	?_pad,?_dtoa
  7512  005200  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7513  005204  0012               	return		;funcret
  7514  005206                     __end_of_dtoa:
  7515                           	opt callstack 0
  7516                           
  7517 ;; *************** function _pad *****************
  7518 ;; Defined at:
  7519 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7522 ;;		 -> sprintf@f(6), 
  7523 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7524 ;;		 -> dbuf(80), 
  7525 ;;  p               2   20[COMRAM] int 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  w               2   25[COMRAM] int 
  7528 ;;  i               2   23[COMRAM] int 
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  2   16[COMRAM] int 
  7531 ;; Registers used:
  7532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7538 ;;      Params:         6       0       0       0       0       0       0
  7539 ;;      Locals:         4       0       0       0       0       0       0
  7540 ;;      Temps:          1       0       0       0       0       0       0
  7541 ;;      Totals:        11       0       0       0       0       0       0
  7542 ;;Total ram usage:       11 bytes
  7543 ;; Hardware stack levels used:    1
  7544 ;; Hardware stack levels required when called:    3
  7545 ;; This function calls:
  7546 ;;		_fputc
  7547 ;;		_fputs
  7548 ;;		_strlen
  7549 ;; This function is called by:
  7550 ;;		_dtoa
  7551 ;;		_efgtoa
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           	psect	text34
  7556  0067A2                     __ptext34:
  7557                           	opt callstack 0
  7558  0067A2                     _pad:
  7559                           	opt callstack 15
  7560                           
  7561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7562                           
  7563                           ;incstack = 0
  7564  0067A2  0102               	movlb	2	; () banked
  7565  0067A4  A124               	btfss	_flags& (0+255),0,b
  7566  0067A6  D00A               	goto	i2l9737
  7567                           
  7568                           ; BSR set to: 2
  7569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7570  0067A8  C013  F00A         	movff	pad@buf,fputs@s
  7571  0067AC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7572  0067B0  C011  F00C         	movff	pad@fp,fputs@fp
  7573  0067B4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7574  0067B8  EC0D  F037         	call	_fputs	;wreg free
  7575  0067BC                     i2l9737:
  7576                           
  7577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7578  0067BC  BE16               	btfsc	(pad@p+1)^0,7,c
  7579  0067BE  D005               	goto	i2l9741
  7580  0067C0  C015  F01A         	movff	pad@p,pad@w
  7581  0067C4  C016  F01B         	movff	pad@p+1,pad@w+1
  7582  0067C8  D004               	goto	i2l308
  7583  0067CA                     i2l9741:
  7584  0067CA  0E00               	movlw	0
  7585  0067CC  6E1B               	movwf	(pad@w+1)^0,c
  7586  0067CE  0E00               	movlw	0
  7587  0067D0  6E1A               	movwf	pad@w^0,c
  7588  0067D2                     i2l308:
  7589                           
  7590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7591  0067D2  0E00               	movlw	0
  7592  0067D4  6E19               	movwf	(pad@i+1)^0,c
  7593  0067D6  0E00               	movlw	0
  7594  0067D8  6E18               	movwf	pad@i^0,c
  7595                           
  7596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7597  0067DA  D00C               	goto	i2l9747
  7598  0067DC                     i2l9743:
  7599                           
  7600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7601  0067DC  0E00               	movlw	0
  7602  0067DE  6E02               	movwf	(fputc@c+1)^0,c
  7603  0067E0  0E20               	movlw	32
  7604  0067E2  6E01               	movwf	fputc@c^0,c
  7605  0067E4  C011  F003         	movff	pad@fp,fputc@fp
  7606  0067E8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7607  0067EC  EC81  F033         	call	_fputc	;wreg free
  7608                           
  7609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7610  0067F0  4A18               	infsnz	pad@i^0,f,c
  7611  0067F2  2A19               	incf	(pad@i+1)^0,f,c
  7612  0067F4                     i2l9747:
  7613                           
  7614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7615  0067F4  501A               	movf	pad@w^0,w,c
  7616  0067F6  5C18               	subwf	pad@i^0,w,c
  7617  0067F8  5019               	movf	(pad@i+1)^0,w,c
  7618  0067FA  0A80               	xorlw	128
  7619  0067FC  6E17               	movwf	??_pad^0,c
  7620  0067FE  501B               	movf	(pad@w+1)^0,w,c
  7621  006800  0A80               	xorlw	128
  7622  006802  5817               	subwfb	??_pad^0,w,c
  7623  006804  A0D8               	btfss	status,0,c
  7624  006806  D7EA               	goto	i2l9743
  7625                           
  7626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7627  006808  0102               	movlb	2	; () banked
  7628  00680A  B124               	btfsc	_flags& (0+255),0,b
  7629  00680C  D00A               	goto	i2l9751
  7630                           
  7631                           ; BSR set to: 2
  7632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7633  00680E  C013  F00A         	movff	pad@buf,fputs@s
  7634  006812  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7635  006816  C011  F00C         	movff	pad@fp,fputs@fp
  7636  00681A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7637  00681E  EC0D  F037         	call	_fputs	;wreg free
  7638  006822                     i2l9751:
  7639                           
  7640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7641  006822  C013  F001         	movff	pad@buf,strlen@s
  7642  006826  C014  F002         	movff	pad@buf+1,strlen@s+1
  7643  00682A  EC01  F038         	call	_strlen	;wreg free
  7644  00682E  501A               	movf	pad@w^0,w,c
  7645  006830  2401               	addwf	?_strlen^0,w,c
  7646  006832  6E11               	movwf	?_pad^0,c
  7647  006834  501B               	movf	(pad@w+1)^0,w,c
  7648  006836  2002               	addwfc	(?_strlen+1)^0,w,c
  7649  006838  6E12               	movwf	(?_pad+1)^0,c
  7650  00683A  0012               	return		;funcret
  7651  00683C                     __end_of_pad:
  7652                           	opt callstack 0
  7653                           
  7654 ;; *************** function _strlen *****************
  7655 ;; Defined at:
  7656 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7659 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), r(100), 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7662 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), r(100), 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  2    0[COMRAM] unsigned int 
  7665 ;; Registers used:
  7666 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7672 ;;      Params:         2       0       0       0       0       0       0
  7673 ;;      Locals:         2       0       0       0       0       0       0
  7674 ;;      Temps:          0       0       0       0       0       0       0
  7675 ;;      Totals:         4       0       0       0       0       0       0
  7676 ;;Total ram usage:        4 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_pad
  7682 ;;		_stoa
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text35
  7687  007002                     __ptext35:
  7688                           	opt callstack 0
  7689  007002                     _strlen:
  7690                           	opt callstack 18
  7691                           
  7692                           ;incstack = 0
  7693  007002  C001  F003         	movff	strlen@s,strlen@a
  7694  007006  C002  F004         	movff	strlen@s+1,strlen@a+1
  7695  00700A  D002               	goto	i2l9369
  7696  00700C                     i2l9367:
  7697  00700C  4A01               	infsnz	strlen@s^0,f,c
  7698  00700E  2A02               	incf	(strlen@s+1)^0,f,c
  7699  007010                     i2l9369:
  7700  007010  C001  FFD9         	movff	strlen@s,fsr2l
  7701  007014  C002  FFDA         	movff	strlen@s+1,fsr2h
  7702  007018  50DF               	movf	indf2,w,c
  7703  00701A  A4D8               	btfss	status,2,c
  7704  00701C  D7F7               	goto	i2l9367
  7705  00701E  5003               	movf	strlen@a^0,w,c
  7706  007020  5C01               	subwf	strlen@s^0,w,c
  7707  007022  6E01               	movwf	?_strlen^0,c
  7708  007024  5004               	movf	(strlen@a+1)^0,w,c
  7709  007026  5802               	subwfb	(strlen@s+1)^0,w,c
  7710  007028  6E02               	movwf	(?_strlen+1)^0,c
  7711  00702A  0012               	return		;funcret
  7712  00702C                     __end_of_strlen:
  7713                           	opt callstack 0
  7714                           
  7715 ;; *************** function _fputs *****************
  7716 ;; Defined at:
  7717 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7720 ;;		 -> dbuf(80), 
  7721 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7722 ;;		 -> sprintf@f(6), 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  i               2   14[COMRAM] int 
  7725 ;;  c               1   13[COMRAM] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  2    9[COMRAM] int 
  7728 ;; Registers used:
  7729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7735 ;;      Params:         4       0       0       0       0       0       0
  7736 ;;      Locals:         3       0       0       0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0
  7738 ;;      Totals:         7       0       0       0       0       0       0
  7739 ;;Total ram usage:        7 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    2
  7742 ;; This function calls:
  7743 ;;		_fputc
  7744 ;; This function is called by:
  7745 ;;		_pad
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           	psect	text36
  7750  006E1A                     __ptext36:
  7751                           	opt callstack 0
  7752  006E1A                     _fputs:
  7753                           	opt callstack 15
  7754                           
  7755                           ;incstack = 0
  7756  006E1A  0E00               	movlw	0
  7757  006E1C  6E10               	movwf	(fputs@i+1)^0,c
  7758  006E1E  0E00               	movlw	0
  7759  006E20  6E0F               	movwf	fputs@i^0,c
  7760  006E22  D00B               	goto	i2l9363
  7761  006E24                     i2l9359:
  7762  006E24  C00E  F001         	movff	fputs@c,fputc@c
  7763  006E28  6A02               	clrf	(fputc@c+1)^0,c
  7764  006E2A  C00C  F003         	movff	fputs@fp,fputc@fp
  7765  006E2E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7766  006E32  EC81  F033         	call	_fputc	;wreg free
  7767  006E36  4A0F               	infsnz	fputs@i^0,f,c
  7768  006E38  2A10               	incf	(fputs@i+1)^0,f,c
  7769  006E3A                     i2l9363:
  7770  006E3A  500F               	movf	fputs@i^0,w,c
  7771  006E3C  240A               	addwf	fputs@s^0,w,c
  7772  006E3E  6ED9               	movwf	fsr2l,c
  7773  006E40  5010               	movf	(fputs@i+1)^0,w,c
  7774  006E42  200B               	addwfc	(fputs@s+1)^0,w,c
  7775  006E44  6EDA               	movwf	fsr2h,c
  7776  006E46  50DF               	movf	indf2,w,c
  7777  006E48  6E0E               	movwf	fputs@c^0,c
  7778  006E4A  500E               	movf	fputs@c^0,w,c
  7779  006E4C  B4D8               	btfsc	status,2,c
  7780  006E4E  0012               	return	
  7781  006E50  D7E9               	goto	i2l9359
  7782  006E52                     __end_of_fputs:
  7783                           	opt callstack 0
  7784                           
  7785 ;; *************** function _fputc *****************
  7786 ;; Defined at:
  7787 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  c               2    0[COMRAM] int 
  7790 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7791 ;;		 -> sprintf@f(6), 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;		None
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  2    0[COMRAM] int 
  7796 ;; Registers used:
  7797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7803 ;;      Params:         4       0       0       0       0       0       0
  7804 ;;      Locals:         0       0       0       0       0       0       0
  7805 ;;      Temps:          5       0       0       0       0       0       0
  7806 ;;      Totals:         9       0       0       0       0       0       0
  7807 ;;Total ram usage:        9 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:    1
  7810 ;; This function calls:
  7811 ;;		_putch
  7812 ;; This function is called by:
  7813 ;;		_pad
  7814 ;;		_stoa
  7815 ;;		_vfpfcnvrt
  7816 ;;		_fputs
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text37
  7821  006702                     __ptext37:
  7822                           	opt callstack 0
  7823  006702                     _fputc:
  7824                           	opt callstack 17
  7825                           
  7826                           ;incstack = 0
  7827  006702  5003               	movf	fputc@fp^0,w,c
  7828  006704  1004               	iorwf	(fputc@fp+1)^0,w,c
  7829  006706  B4D8               	btfsc	status,2,c
  7830  006708  D004               	goto	i2u1196_40
  7831  00670A  5003               	movf	fputc@fp^0,w,c
  7832  00670C  1004               	iorwf	(fputc@fp+1)^0,w,c
  7833  00670E  A4D8               	btfss	status,2,c
  7834  006710  D004               	goto	i2l9349
  7835  006712                     i2u1196_40:
  7836  006712  5001               	movf	fputc@c^0,w,c
  7837  006714  EC83  F038         	call	_putch
  7838  006718  0012               	return	
  7839  00671A                     i2l9349:
  7840  00671A  EE20 F004          	lfsr	2,4
  7841  00671E  5003               	movf	fputc@fp^0,w,c
  7842  006720  26D9               	addwf	fsr2l,f,c
  7843  006722  5004               	movf	(fputc@fp+1)^0,w,c
  7844  006724  22DA               	addwfc	fsr2h,f,c
  7845  006726  50DE               	movf	postinc2,w,c
  7846  006728  10DE               	iorwf	postinc2,w,c
  7847  00672A  B4D8               	btfsc	status,2,c
  7848  00672C  D016               	goto	i2u1198_40
  7849  00672E  EE20 F004          	lfsr	2,4
  7850  006732  5003               	movf	fputc@fp^0,w,c
  7851  006734  26D9               	addwf	fsr2l,f,c
  7852  006736  5004               	movf	(fputc@fp+1)^0,w,c
  7853  006738  22DA               	addwfc	fsr2h,f,c
  7854  00673A  EE10 F002          	lfsr	1,2
  7855  00673E  5003               	movf	fputc@fp^0,w,c
  7856  006740  26E1               	addwf	fsr1l,f,c
  7857  006742  5004               	movf	(fputc@fp+1)^0,w,c
  7858  006744  22E2               	addwfc	fsr1h,f,c
  7859  006746  50DE               	movf	postinc2,w,c
  7860  006748  5CE6               	subwf	postinc1,w,c
  7861  00674A  50E6               	movf	postinc1,w,c
  7862  00674C  0A80               	xorlw	128
  7863  00674E  6E09               	movwf	(??_fputc+4)^0,c
  7864  006750  50DE               	movf	postinc2,w,c
  7865  006752  0A80               	xorlw	128
  7866  006754  5809               	subwfb	(??_fputc+4)^0,w,c
  7867  006756  B0D8               	btfsc	status,0,c
  7868  006758  0012               	return	
  7869  00675A                     i2u1198_40:
  7870  00675A  EE20 F002          	lfsr	2,2
  7871  00675E  5003               	movf	fputc@fp^0,w,c
  7872  006760  26D9               	addwf	fsr2l,f,c
  7873  006762  5004               	movf	(fputc@fp+1)^0,w,c
  7874  006764  22DA               	addwfc	fsr2h,f,c
  7875  006766  CFDE F005          	movff	postinc2,??_fputc
  7876  00676A  CFDD F006          	movff	postdec2,??_fputc+1
  7877  00676E  C003  FFD9         	movff	fputc@fp,fsr2l
  7878  006772  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7879  006776  CFDE F007          	movff	postinc2,??_fputc+2
  7880  00677A  CFDD F008          	movff	postdec2,??_fputc+3
  7881  00677E  5005               	movf	??_fputc^0,w,c
  7882  006780  2407               	addwf	(??_fputc+2)^0,w,c
  7883  006782  6ED9               	movwf	fsr2l,c
  7884  006784  5006               	movf	(??_fputc+1)^0,w,c
  7885  006786  2008               	addwfc	(??_fputc+3)^0,w,c
  7886  006788  6EDA               	movwf	fsr2h,c
  7887  00678A  C001  FFDF         	movff	fputc@c,indf2
  7888  00678E  EE20 F002          	lfsr	2,2
  7889  006792  5003               	movf	fputc@fp^0,w,c
  7890  006794  26D9               	addwf	fsr2l,f,c
  7891  006796  5004               	movf	(fputc@fp+1)^0,w,c
  7892  006798  22DA               	addwfc	fsr2h,f,c
  7893  00679A  2ADE               	incf	postinc2,f,c
  7894  00679C  0E00               	movlw	0
  7895  00679E  22DD               	addwfc	postdec2,f,c
  7896  0067A0  0012               	return		;funcret
  7897  0067A2                     __end_of_fputc:
  7898                           	opt callstack 0
  7899                           
  7900 ;; *************** function _putch *****************
  7901 ;; Defined at:
  7902 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;  c               1    wreg     unsigned char 
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;  c               1    0[COMRAM] unsigned char 
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  1    wreg      void 
  7909 ;; Registers used:
  7910 ;;		wreg
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7916 ;;      Params:         0       0       0       0       0       0       0
  7917 ;;      Locals:         0       0       0       0       0       0       0
  7918 ;;      Temps:          0       0       0       0       0       0       0
  7919 ;;      Totals:         0       0       0       0       0       0       0
  7920 ;;Total ram usage:        0 bytes
  7921 ;; Hardware stack levels used:    1
  7922 ;; This function calls:
  7923 ;;		Nothing
  7924 ;; This function is called by:
  7925 ;;		_fputc
  7926 ;; This function uses a non-reentrant model
  7927 ;;
  7928                           
  7929                           	psect	text38
  7930  007106                     __ptext38:
  7931                           	opt callstack 0
  7932  007106                     _putch:
  7933                           	opt callstack 17
  7934                           
  7935                           ;incstack = 0
  7936  007106  0012               	return		;funcret
  7937  007108                     __end_of_putch:
  7938                           	opt callstack 0
  7939                           
  7940 ;; *************** function _abs *****************
  7941 ;; Defined at:
  7942 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  a               2   18[COMRAM] int 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;		None
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  2   18[COMRAM] int 
  7949 ;; Registers used:
  7950 ;;		wreg, status,2, status,0
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7956 ;;      Params:         2       0       0       0       0       0       0
  7957 ;;      Locals:         0       0       0       0       0       0       0
  7958 ;;      Temps:          2       0       0       0       0       0       0
  7959 ;;      Totals:         4       0       0       0       0       0       0
  7960 ;;Total ram usage:        4 bytes
  7961 ;; Hardware stack levels used:    1
  7962 ;; This function calls:
  7963 ;;		Nothing
  7964 ;; This function is called by:
  7965 ;;		_dtoa
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text39
  7970  006E86                     __ptext39:
  7971                           	opt callstack 0
  7972  006E86                     _abs:
  7973                           	opt callstack 18
  7974                           
  7975                           ;incstack = 0
  7976  006E86  BE14               	btfsc	(abs@a+1)^0,7,c
  7977  006E88  D005               	goto	i2u1270_40
  7978  006E8A  5014               	movf	(abs@a+1)^0,w,c
  7979  006E8C  E110               	bnz	i2l1177
  7980  006E8E  0413               	decf	abs@a^0,w,c
  7981  006E90  B0D8               	btfsc	status,0,c
  7982  006E92  D00D               	goto	i2l1177
  7983  006E94                     i2u1270_40:
  7984  006E94  C013  F015         	movff	abs@a,??_abs
  7985  006E98  C014  F016         	movff	abs@a+1,??_abs+1
  7986  006E9C  1E15               	comf	??_abs^0,f,c
  7987  006E9E  1E16               	comf	(??_abs+1)^0,f,c
  7988  006EA0  4A15               	infsnz	??_abs^0,f,c
  7989  006EA2  2A16               	incf	(??_abs+1)^0,f,c
  7990  006EA4  C015  F013         	movff	??_abs,?_abs
  7991  006EA8  C016  F014         	movff	??_abs+1,?_abs+1
  7992  006EAC  0012               	return	
  7993  006EAE                     i2l1177:
  7994  006EAE  C013  F013         	movff	abs@a,?_abs
  7995  006EB2  C014  F014         	movff	abs@a+1,?_abs+1
  7996  006EB6  0012               	return		;funcret
  7997  006EB8                     __end_of_abs:
  7998                           	opt callstack 0
  7999                           
  8000 ;; *************** function ___aomod *****************
  8001 ;; Defined at:
  8002 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;  dividend        8    0[COMRAM] long long 
  8005 ;;  divisor         8    8[COMRAM] long long 
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;  sign            1   17[COMRAM] unsigned char 
  8008 ;;  counter         1   16[COMRAM] unsigned char 
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  8    0[COMRAM] long long 
  8011 ;; Registers used:
  8012 ;;		wreg, status,2, status,0
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8018 ;;      Params:        16       0       0       0       0       0       0
  8019 ;;      Locals:         2       0       0       0       0       0       0
  8020 ;;      Temps:          0       0       0       0       0       0       0
  8021 ;;      Totals:        18       0       0       0       0       0       0
  8022 ;;Total ram usage:       18 bytes
  8023 ;; Hardware stack levels used:    1
  8024 ;; This function calls:
  8025 ;;		Nothing
  8026 ;; This function is called by:
  8027 ;;		_dtoa
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text40
  8032  0060F6                     __ptext40:
  8033                           	opt callstack 0
  8034  0060F6                     ___aomod:
  8035                           	opt callstack 18
  8036                           
  8037                           ;incstack = 0
  8038  0060F6  0E00               	movlw	0
  8039  0060F8  6E12               	movwf	___aomod@sign^0,c
  8040  0060FA  AE08               	btfss	(___aomod@dividend+7)^0,7,c
  8041  0060FC  D012               	goto	i2l9885
  8042  0060FE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8043  006100  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8044  006102  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8045  006104  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8046  006106  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8047  006108  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8048  00610A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8049  00610C  6C01               	negf	___aomod@dividend^0,c
  8050  00610E  0E00               	movlw	0
  8051  006110  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8052  006112  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8053  006114  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8054  006116  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8055  006118  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8056  00611A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8057  00611C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8058  00611E  0E01               	movlw	1
  8059  006120  6E12               	movwf	___aomod@sign^0,c
  8060  006122                     i2l9885:
  8061  006122  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8062  006124  D010               	goto	i2l9889
  8063  006126  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8064  006128  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8065  00612A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8066  00612C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8067  00612E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8068  006130  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8069  006132  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8070  006134  6C09               	negf	___aomod@divisor^0,c
  8071  006136  0E00               	movlw	0
  8072  006138  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8073  00613A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8074  00613C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8075  00613E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8076  006140  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8077  006142  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8078  006144  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8079  006146                     i2l9889:
  8080  006146  5009               	movf	___aomod@divisor^0,w,c
  8081  006148  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8082  00614A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8083  00614C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8084  00614E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8085  006150  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8086  006152  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8087  006154  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8088  006156  B4D8               	btfsc	status,2,c
  8089  006158  D03C               	goto	i2l9905
  8090  00615A  0E01               	movlw	1
  8091  00615C  6E11               	movwf	___aomod@counter^0,c
  8092  00615E  D00A               	goto	i2l9895
  8093  006160                     i2l9893:
  8094  006160  90D8               	bcf	status,0,c
  8095  006162  3609               	rlcf	___aomod@divisor^0,f,c
  8096  006164  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8097  006166  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8098  006168  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8099  00616A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8100  00616C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8101  00616E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8102  006170  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8103  006172  2A11               	incf	___aomod@counter^0,f,c
  8104  006174                     i2l9895:
  8105  006174  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8106  006176  D7F4               	goto	i2l9893
  8107  006178                     i2u1305_40:
  8108  006178  5009               	movf	___aomod@divisor^0,w,c
  8109  00617A  5C01               	subwf	___aomod@dividend^0,w,c
  8110  00617C  500A               	movf	(___aomod@divisor+1)^0,w,c
  8111  00617E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8112  006180  500B               	movf	(___aomod@divisor+2)^0,w,c
  8113  006182  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8114  006184  500C               	movf	(___aomod@divisor+3)^0,w,c
  8115  006186  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8116  006188  500D               	movf	(___aomod@divisor+4)^0,w,c
  8117  00618A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8118  00618C  500E               	movf	(___aomod@divisor+5)^0,w,c
  8119  00618E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8120  006190  500F               	movf	(___aomod@divisor+6)^0,w,c
  8121  006192  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8122  006194  5010               	movf	(___aomod@divisor+7)^0,w,c
  8123  006196  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8124  006198  A0D8               	btfss	status,0,c
  8125  00619A  D010               	goto	i2l9901
  8126  00619C  5009               	movf	___aomod@divisor^0,w,c
  8127  00619E  5E01               	subwf	___aomod@dividend^0,f,c
  8128  0061A0  500A               	movf	(___aomod@divisor+1)^0,w,c
  8129  0061A2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8130  0061A4  500B               	movf	(___aomod@divisor+2)^0,w,c
  8131  0061A6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8132  0061A8  500C               	movf	(___aomod@divisor+3)^0,w,c
  8133  0061AA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8134  0061AC  500D               	movf	(___aomod@divisor+4)^0,w,c
  8135  0061AE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8136  0061B0  500E               	movf	(___aomod@divisor+5)^0,w,c
  8137  0061B2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8138  0061B4  500F               	movf	(___aomod@divisor+6)^0,w,c
  8139  0061B6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8140  0061B8  5010               	movf	(___aomod@divisor+7)^0,w,c
  8141  0061BA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8142  0061BC                     i2l9901:
  8143  0061BC  90D8               	bcf	status,0,c
  8144  0061BE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8145  0061C0  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8146  0061C2  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8147  0061C4  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8148  0061C6  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8149  0061C8  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8150  0061CA  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8151  0061CC  3209               	rrcf	___aomod@divisor^0,f,c
  8152  0061CE  2E11               	decfsz	___aomod@counter^0,f,c
  8153  0061D0  D7D3               	goto	i2u1305_40
  8154  0061D2                     i2l9905:
  8155  0061D2  5012               	movf	___aomod@sign^0,w,c
  8156  0061D4  B4D8               	btfsc	status,2,c
  8157  0061D6  D010               	goto	i2l9909
  8158  0061D8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8159  0061DA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8160  0061DC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8161  0061DE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8162  0061E0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8163  0061E2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8164  0061E4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8165  0061E6  6C01               	negf	___aomod@dividend^0,c
  8166  0061E8  0E00               	movlw	0
  8167  0061EA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8168  0061EC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8169  0061EE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8170  0061F0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8171  0061F2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8172  0061F4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8173  0061F6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8174  0061F8                     i2l9909:
  8175  0061F8  C001  F001         	movff	___aomod@dividend,?___aomod
  8176  0061FC  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8177  006200  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8178  006204  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8179  006208  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8180  00620C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8181  006210  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8182  006214  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8183  006218  0012               	return		;funcret
  8184  00621A                     __end_of___aomod:
  8185                           	opt callstack 0
  8186                           
  8187 ;; *************** function ___aodiv *****************
  8188 ;; Defined at:
  8189 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  dividend        8    0[COMRAM] long long 
  8192 ;;  divisor         8    8[COMRAM] long long 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  quotient        8   18[COMRAM] long long 
  8195 ;;  sign            1   17[COMRAM] unsigned char 
  8196 ;;  counter         1   16[COMRAM] unsigned char 
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  8    0[COMRAM] long long 
  8199 ;; Registers used:
  8200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8206 ;;      Params:        16       0       0       0       0       0       0
  8207 ;;      Locals:        10       0       0       0       0       0       0
  8208 ;;      Temps:          0       0       0       0       0       0       0
  8209 ;;      Totals:        26       0       0       0       0       0       0
  8210 ;;Total ram usage:       26 bytes
  8211 ;; Hardware stack levels used:    1
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_dtoa
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text41
  8220  005AD0                     __ptext41:
  8221                           	opt callstack 0
  8222  005AD0                     ___aodiv:
  8223                           	opt callstack 18
  8224                           
  8225                           ;incstack = 0
  8226  005AD0  0E00               	movlw	0
  8227  005AD2  6E12               	movwf	___aodiv@sign^0,c
  8228  005AD4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8229  005AD6  D012               	goto	i2l9841
  8230  005AD8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8231  005ADA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8232  005ADC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8233  005ADE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8234  005AE0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8235  005AE2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8236  005AE4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8237  005AE6  6C09               	negf	___aodiv@divisor^0,c
  8238  005AE8  0E00               	movlw	0
  8239  005AEA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8240  005AEC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8241  005AEE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8242  005AF0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8243  005AF2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8244  005AF4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8245  005AF6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8246  005AF8  0E01               	movlw	1
  8247  005AFA  6E12               	movwf	___aodiv@sign^0,c
  8248  005AFC                     i2l9841:
  8249  005AFC  AE08               	btfss	(___aodiv@dividend+7)^0,7,c
  8250  005AFE  D012               	goto	i2l9847
  8251  005B00  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8252  005B02  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8253  005B04  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8254  005B06  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8255  005B08  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8256  005B0A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8257  005B0C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8258  005B0E  6C01               	negf	___aodiv@dividend^0,c
  8259  005B10  0E00               	movlw	0
  8260  005B12  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8261  005B14  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8262  005B16  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8263  005B18  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8264  005B1A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8265  005B1C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8266  005B1E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8267  005B20  0E01               	movlw	1
  8268  005B22  1A12               	xorwf	___aodiv@sign^0,f,c
  8269  005B24                     i2l9847:
  8270  005B24  EE20  F013         	lfsr	2,___aodiv@quotient
  8271  005B28  0E07               	movlw	7
  8272  005B2A                     i2u1297_41:
  8273  005B2A  6ADE               	clrf	postinc2,c
  8274  005B2C  06E8               	decf	wreg,f,c
  8275  005B2E  E2FD               	bc	i2u1297_41
  8276  005B30  5009               	movf	___aodiv@divisor^0,w,c
  8277  005B32  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8278  005B34  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8279  005B36  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8280  005B38  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8281  005B3A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8282  005B3C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8283  005B3E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8284  005B40  B4D8               	btfsc	status,2,c
  8285  005B42  D046               	goto	i2l9869
  8286  005B44  0E01               	movlw	1
  8287  005B46  6E11               	movwf	___aodiv@counter^0,c
  8288  005B48  D00A               	goto	i2l9855
  8289  005B4A                     i2l9853:
  8290  005B4A  90D8               	bcf	status,0,c
  8291  005B4C  3609               	rlcf	___aodiv@divisor^0,f,c
  8292  005B4E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8293  005B50  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8294  005B52  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8295  005B54  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8296  005B56  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8297  005B58  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8298  005B5A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8299  005B5C  2A11               	incf	___aodiv@counter^0,f,c
  8300  005B5E                     i2l9855:
  8301  005B5E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8302  005B60  D7F4               	goto	i2l9853
  8303  005B62                     i2u1299_40:
  8304  005B62  90D8               	bcf	status,0,c
  8305  005B64  3613               	rlcf	___aodiv@quotient^0,f,c
  8306  005B66  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8307  005B68  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8308  005B6A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8309  005B6C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8310  005B6E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8311  005B70  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8312  005B72  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8313  005B74  5009               	movf	___aodiv@divisor^0,w,c
  8314  005B76  5C01               	subwf	___aodiv@dividend^0,w,c
  8315  005B78  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8316  005B7A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8317  005B7C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8318  005B7E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8319  005B80  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8320  005B82  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8321  005B84  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8322  005B86  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8323  005B88  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8324  005B8A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8325  005B8C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8326  005B8E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8327  005B90  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8328  005B92  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8329  005B94  A0D8               	btfss	status,0,c
  8330  005B96  D011               	goto	i2l9865
  8331  005B98  5009               	movf	___aodiv@divisor^0,w,c
  8332  005B9A  5E01               	subwf	___aodiv@dividend^0,f,c
  8333  005B9C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8334  005B9E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8335  005BA0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8336  005BA2  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8337  005BA4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8338  005BA6  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8339  005BA8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8340  005BAA  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8341  005BAC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8342  005BAE  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8343  005BB0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8344  005BB2  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8345  005BB4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8346  005BB6  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8347  005BB8  8013               	bsf	___aodiv@quotient^0,0,c
  8348  005BBA                     i2l9865:
  8349  005BBA  90D8               	bcf	status,0,c
  8350  005BBC  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8351  005BBE  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8352  005BC0  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8353  005BC2  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8354  005BC4  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8355  005BC6  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8356  005BC8  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8357  005BCA  3209               	rrcf	___aodiv@divisor^0,f,c
  8358  005BCC  2E11               	decfsz	___aodiv@counter^0,f,c
  8359  005BCE  D7C9               	goto	i2u1299_40
  8360  005BD0                     i2l9869:
  8361  005BD0  5012               	movf	___aodiv@sign^0,w,c
  8362  005BD2  B4D8               	btfsc	status,2,c
  8363  005BD4  D010               	goto	i2l9873
  8364  005BD6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8365  005BD8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8366  005BDA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8367  005BDC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8368  005BDE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8369  005BE0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8370  005BE2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8371  005BE4  6C13               	negf	___aodiv@quotient^0,c
  8372  005BE6  0E00               	movlw	0
  8373  005BE8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8374  005BEA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8375  005BEC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8376  005BEE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8377  005BF0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8378  005BF2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8379  005BF4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8380  005BF6                     i2l9873:
  8381  005BF6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8382  005BFA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8383  005BFE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8384  005C02  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8385  005C06  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8386  005C0A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8387  005C0E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8388  005C12  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8389  005C16  0012               	return		;funcret
  8390  005C18                     __end_of___aodiv:
  8391                           	opt callstack 0
  8392                           
  8393 ;; *************** function _atoi *****************
  8394 ;; Defined at:
  8395 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8398 ;;		 -> STR_4(11), STR_3(9), 
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;  n               2   20[COMRAM] int 
  8401 ;;  neg             2   13[COMRAM] int 
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  2    7[COMRAM] int 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8411 ;;      Params:         2       0       0       0       0       0       0
  8412 ;;      Locals:         9       0       0       0       0       0       0
  8413 ;;      Temps:          4       0       0       0       0       0       0
  8414 ;;      Totals:        15       0       0       0       0       0       0
  8415 ;;Total ram usage:       15 bytes
  8416 ;; Hardware stack levels used:    1
  8417 ;; Hardware stack levels required when called:    1
  8418 ;; This function calls:
  8419 ;;		___wmul
  8420 ;;		_isdigit
  8421 ;;		_isspace
  8422 ;; This function is called by:
  8423 ;;		_vfpfcnvrt
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427                           	psect	text42
  8428  005C18                     __ptext42:
  8429                           	opt callstack 0
  8430  005C18                     _atoi:
  8431                           	opt callstack 18
  8432                           
  8433                           ;incstack = 0
  8434  005C18  0E00               	movlw	0
  8435  005C1A  6E16               	movwf	(atoi@n+1)^0,c
  8436  005C1C  0E00               	movlw	0
  8437  005C1E  6E15               	movwf	atoi@n^0,c
  8438  005C20  0E00               	movlw	0
  8439  005C22  6E0F               	movwf	(atoi@neg+1)^0,c
  8440  005C24  0E00               	movlw	0
  8441  005C26  6E0E               	movwf	atoi@neg^0,c
  8442  005C28  D002               	goto	i2l11287
  8443  005C2A                     i2l11285:
  8444  005C2A  4A08               	infsnz	atoi@s^0,f,c
  8445  005C2C  2A09               	incf	(atoi@s+1)^0,f,c
  8446  005C2E                     i2l11287:
  8447  005C2E  0E01               	movlw	1
  8448  005C30  6E14               	movwf	_atoi$1519^0,c
  8449  005C32  C008  FFF6         	movff	atoi@s,tblptrl
  8450  005C36  C009  FFF7         	movff	atoi@s+1,tblptrh
  8451  005C3A                     	if	0	;tblptru may be non-zero
  8452  005C3A                     	endif
  8453  005C3A                     	if	0	;tblptru may be non-zero
  8454  005C3A                     	endif
  8455  005C3A  0008               	tblrd		*
  8456  005C3C  50F5               	movf	tablat,w,c
  8457  005C3E  0A20               	xorlw	32
  8458  005C40  B4D8               	btfsc	status,2,c
  8459  005C42  D018               	goto	i2l11295
  8460  005C44  0EF7               	movlw	247
  8461  005C46  6E0A               	movwf	??_atoi^0,c
  8462  005C48  0EFF               	movlw	255
  8463  005C4A  6E0B               	movwf	(??_atoi+1)^0,c
  8464  005C4C  C008  FFF6         	movff	atoi@s,tblptrl
  8465  005C50  C009  FFF7         	movff	atoi@s+1,tblptrh
  8466  005C54                     	if	0	;tblptru may be non-zero
  8467  005C54                     	endif
  8468  005C54                     	if	0	;tblptru may be non-zero
  8469  005C54                     	endif
  8470  005C54  0008               	tblrd		*
  8471  005C56  50F5               	movf	tablat,w,c
  8472  005C58  6E0C               	movwf	(??_atoi+2)^0,c
  8473  005C5A  6A0D               	clrf	(??_atoi+3)^0,c
  8474  005C5C  500A               	movf	??_atoi^0,w,c
  8475  005C5E  260C               	addwf	(??_atoi+2)^0,f,c
  8476  005C60  500B               	movf	(??_atoi+1)^0,w,c
  8477  005C62  220D               	addwfc	(??_atoi+3)^0,f,c
  8478  005C64  500D               	movf	(??_atoi+3)^0,w,c
  8479  005C66  E104               	bnz	i2u1520_40
  8480  005C68  0E05               	movlw	5
  8481  005C6A  5C0C               	subwf	(??_atoi+2)^0,w,c
  8482  005C6C  A0D8               	btfss	status,0,c
  8483  005C6E  D002               	goto	i2l11295
  8484  005C70                     i2u1520_40:
  8485  005C70  0E00               	movlw	0
  8486  005C72  6E14               	movwf	_atoi$1519^0,c
  8487  005C74                     i2l11295:
  8488  005C74  C014  F010         	movff	_atoi$1519,_atoi$1518
  8489  005C78  6A11               	clrf	(_atoi$1518+1)^0,c
  8490  005C7A  5010               	movf	_atoi$1518^0,w,c
  8491  005C7C  1011               	iorwf	(_atoi$1518+1)^0,w,c
  8492  005C7E  B4D8               	btfsc	status,2,c
  8493  005C80  D008               	goto	i2l11305
  8494  005C82  D7D3               	goto	i2l11285
  8495  005C84                     i2l11301:
  8496  005C84  0E00               	movlw	0
  8497  005C86  6E0F               	movwf	(atoi@neg+1)^0,c
  8498  005C88  0E01               	movlw	1
  8499  005C8A  6E0E               	movwf	atoi@neg^0,c
  8500  005C8C                     i2l11303:
  8501  005C8C  4A08               	infsnz	atoi@s^0,f,c
  8502  005C8E  2A09               	incf	(atoi@s+1)^0,f,c
  8503  005C90  D02E               	goto	i2l11311
  8504  005C92                     i2l11305:
  8505  005C92  C008  FFF6         	movff	atoi@s,tblptrl
  8506  005C96  C009  FFF7         	movff	atoi@s+1,tblptrh
  8507  005C9A                     	if	0	;tblptru may be non-zero
  8508  005C9A                     	endif
  8509  005C9A                     	if	0	;tblptru may be non-zero
  8510  005C9A                     	endif
  8511  005C9A  0008               	tblrd		*
  8512  005C9C  50F5               	movf	tablat,w,c
  8513  005C9E  6E0A               	movwf	??_atoi^0,c
  8514  005CA0  6A0B               	clrf	(??_atoi+1)^0,c
  8515                           
  8516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8517                           ; Switch size 1, requested type "simple"
  8518                           ; Number of cases is 1, Range of values is 0 to 0
  8519                           ; switch strategies available:
  8520                           ; Name         Instructions Cycles
  8521                           ; simple_byte            4     3 (average)
  8522                           ;	Chosen strategy is simple_byte
  8523  005CA2  500B               	movf	(??_atoi+1)^0,w,c
  8524  005CA4  0A00               	xorlw	0	; case 0
  8525  005CA6  A4D8               	btfss	status,2,c
  8526  005CA8  D022               	goto	i2l11311
  8527                           
  8528                           ; Switch size 1, requested type "simple"
  8529                           ; Number of cases is 2, Range of values is 43 to 45
  8530                           ; switch strategies available:
  8531                           ; Name         Instructions Cycles
  8532                           ; simple_byte            7     4 (average)
  8533                           ;	Chosen strategy is simple_byte
  8534  005CAA  500A               	movf	??_atoi^0,w,c
  8535  005CAC  0A2B               	xorlw	43	; case 43
  8536  005CAE  B4D8               	btfsc	status,2,c
  8537  005CB0  D7ED               	goto	i2l11303
  8538  005CB2  0A06               	xorlw	6	; case 45
  8539  005CB4  B4D8               	btfsc	status,2,c
  8540  005CB6  D7E6               	goto	i2l11301
  8541  005CB8  D01A               	goto	i2l11311
  8542  005CBA                     i2l11307:
  8543  005CBA  C015  F001         	movff	atoi@n,___wmul@multiplier
  8544  005CBE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8545  005CC2  0E00               	movlw	0
  8546  005CC4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8547  005CC6  0E0A               	movlw	10
  8548  005CC8  6E03               	movwf	___wmul@multiplicand^0,c
  8549  005CCA  EC16  F038         	call	___wmul	;wreg free
  8550  005CCE  C008  FFF6         	movff	atoi@s,tblptrl
  8551  005CD2  C009  FFF7         	movff	atoi@s+1,tblptrh
  8552  005CD6                     	if	0	;tblptru may be non-zero
  8553  005CD6                     	endif
  8554  005CD6                     	if	0	;tblptru may be non-zero
  8555  005CD6                     	endif
  8556  005CD6  0008               	tblrd		*
  8557  005CD8  50F5               	movf	tablat,w,c
  8558  005CDA  5E01               	subwf	?___wmul^0,f,c
  8559  005CDC  0E00               	movlw	0
  8560  005CDE  5A02               	subwfb	(?___wmul+1)^0,f,c
  8561  005CE0  0E30               	movlw	48
  8562  005CE2  2401               	addwf	?___wmul^0,w,c
  8563  005CE4  6E15               	movwf	atoi@n^0,c
  8564  005CE6  0E00               	movlw	0
  8565  005CE8  2002               	addwfc	(?___wmul+1)^0,w,c
  8566  005CEA  6E16               	movwf	(atoi@n+1)^0,c
  8567  005CEC  D7CF               	goto	i2l11303
  8568  005CEE                     i2l11311:
  8569  005CEE  0ED0               	movlw	208
  8570  005CF0  6E0A               	movwf	??_atoi^0,c
  8571  005CF2  0EFF               	movlw	255
  8572  005CF4  6E0B               	movwf	(??_atoi+1)^0,c
  8573  005CF6  C008  FFF6         	movff	atoi@s,tblptrl
  8574  005CFA  C009  FFF7         	movff	atoi@s+1,tblptrh
  8575  005CFE                     	if	0	;tblptru may be non-zero
  8576  005CFE                     	endif
  8577  005CFE                     	if	0	;tblptru may be non-zero
  8578  005CFE                     	endif
  8579  005CFE  0008               	tblrd		*
  8580  005D00  50F5               	movf	tablat,w,c
  8581  005D02  6E0C               	movwf	(??_atoi+2)^0,c
  8582  005D04  6A0D               	clrf	(??_atoi+3)^0,c
  8583  005D06  500A               	movf	??_atoi^0,w,c
  8584  005D08  260C               	addwf	(??_atoi+2)^0,f,c
  8585  005D0A  500B               	movf	(??_atoi+1)^0,w,c
  8586  005D0C  220D               	addwfc	(??_atoi+3)^0,f,c
  8587  005D0E  500D               	movf	(??_atoi+3)^0,w,c
  8588  005D10  E106               	bnz	i2u1522_40
  8589  005D12  0E0A               	movlw	10
  8590  005D14  5C0C               	subwf	(??_atoi+2)^0,w,c
  8591  005D16  B0D8               	btfsc	status,0,c
  8592  005D18  D002               	goto	i2u1522_40
  8593  005D1A  0E01               	movlw	1
  8594  005D1C  D001               	goto	i2u1523_40
  8595  005D1E                     i2u1522_40:
  8596  005D1E  0E00               	movlw	0
  8597  005D20                     i2u1523_40:
  8598  005D20  6E12               	movwf	_atoi$1520^0,c
  8599  005D22  6A13               	clrf	(_atoi$1520+1)^0,c
  8600  005D24  5012               	movf	_atoi$1520^0,w,c
  8601  005D26  1013               	iorwf	(_atoi$1520+1)^0,w,c
  8602  005D28  A4D8               	btfss	status,2,c
  8603  005D2A  D7C7               	goto	i2l11307
  8604  005D2C  500E               	movf	atoi@neg^0,w,c
  8605  005D2E  100F               	iorwf	(atoi@neg+1)^0,w,c
  8606  005D30  A4D8               	btfss	status,2,c
  8607  005D32  D00D               	goto	i2l1208
  8608  005D34  C015  F00A         	movff	atoi@n,??_atoi
  8609  005D38  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8610  005D3C  1E0A               	comf	??_atoi^0,f,c
  8611  005D3E  1E0B               	comf	(??_atoi+1)^0,f,c
  8612  005D40  4A0A               	infsnz	??_atoi^0,f,c
  8613  005D42  2A0B               	incf	(??_atoi+1)^0,f,c
  8614  005D44  C00A  F008         	movff	??_atoi,?_atoi
  8615  005D48  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8616  005D4C  0012               	return	
  8617  005D4E                     i2l1208:
  8618  005D4E  C015  F008         	movff	atoi@n,?_atoi
  8619  005D52  C016  F009         	movff	atoi@n+1,?_atoi+1
  8620  005D56  0012               	return		;funcret
  8621  005D58                     __end_of_atoi:
  8622                           	opt callstack 0
  8623                           
  8624 ;; *************** function _isspace *****************
  8625 ;; Defined at:
  8626 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;  c               2    0[COMRAM] int 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;		None
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  2    0[COMRAM] int 
  8633 ;; Registers used:
  8634 ;;		wreg, status,2, status,0
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8640 ;;      Params:         2       0       0       0       0       0       0
  8641 ;;      Locals:         1       0       0       0       0       0       0
  8642 ;;      Temps:          4       0       0       0       0       0       0
  8643 ;;      Totals:         7       0       0       0       0       0       0
  8644 ;;Total ram usage:        7 bytes
  8645 ;; Hardware stack levels used:    1
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_atoi
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653                           	psect	text43
  8654  006DA2                     __ptext43:
  8655                           	opt callstack 0
  8656  006DA2                     _isspace:
  8657                           	opt callstack 18
  8658                           
  8659                           ;incstack = 0
  8660  006DA2  0E01               	movlw	1
  8661  006DA4  6E07               	movwf	_isspace$1549^0,c
  8662  006DA6  0E20               	movlw	32
  8663  006DA8  1801               	xorwf	isspace@c^0,w,c
  8664  006DAA  1002               	iorwf	(isspace@c+1)^0,w,c
  8665  006DAC  B4D8               	btfsc	status,2,c
  8666  006DAE  D014               	goto	i2l10177
  8667  006DB0  0EF7               	movlw	247
  8668  006DB2  6E03               	movwf	??_isspace^0,c
  8669  006DB4  0EFF               	movlw	255
  8670  006DB6  6E04               	movwf	(??_isspace+1)^0,c
  8671  006DB8  C001  F005         	movff	isspace@c,??_isspace+2
  8672  006DBC  C002  F006         	movff	isspace@c+1,??_isspace+3
  8673  006DC0  5003               	movf	??_isspace^0,w,c
  8674  006DC2  2605               	addwf	(??_isspace+2)^0,f,c
  8675  006DC4  5004               	movf	(??_isspace+1)^0,w,c
  8676  006DC6  2206               	addwfc	(??_isspace+3)^0,f,c
  8677  006DC8  5006               	movf	(??_isspace+3)^0,w,c
  8678  006DCA  E104               	bnz	i2u1349_40
  8679  006DCC  0E05               	movlw	5
  8680  006DCE  5C05               	subwf	(??_isspace+2)^0,w,c
  8681  006DD0  A0D8               	btfss	status,0,c
  8682  006DD2  D002               	goto	i2l10177
  8683  006DD4                     i2u1349_40:
  8684  006DD4  0E00               	movlw	0
  8685  006DD6  6E07               	movwf	_isspace$1549^0,c
  8686  006DD8                     i2l10177:
  8687  006DD8  C007  F001         	movff	_isspace$1549,?_isspace
  8688  006DDC  6A02               	clrf	(?_isspace+1)^0,c
  8689  006DDE  0012               	return		;funcret
  8690  006DE0                     __end_of_isspace:
  8691                           	opt callstack 0
  8692                           
  8693 ;; *************** function _isdigit *****************
  8694 ;; Defined at:
  8695 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;  c               2    0[COMRAM] int 
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;		None
  8700 ;; Return value:  Size  Location     Type
  8701 ;;                  2    0[COMRAM] int 
  8702 ;; Registers used:
  8703 ;;		wreg, status,2, status,0
  8704 ;; Tracked objects:
  8705 ;;		On entry : 0/0
  8706 ;;		On exit  : 0/0
  8707 ;;		Unchanged: 0/0
  8708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8709 ;;      Params:         2       0       0       0       0       0       0
  8710 ;;      Locals:         0       0       0       0       0       0       0
  8711 ;;      Temps:          4       0       0       0       0       0       0
  8712 ;;      Totals:         6       0       0       0       0       0       0
  8713 ;;Total ram usage:        6 bytes
  8714 ;; Hardware stack levels used:    1
  8715 ;; This function calls:
  8716 ;;		Nothing
  8717 ;; This function is called by:
  8718 ;;		_vfpfcnvrt
  8719 ;;		_atoi
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text44
  8724  006F48                     __ptext44:
  8725                           	opt callstack 0
  8726  006F48                     _isdigit:
  8727                           	opt callstack 19
  8728                           
  8729                           ;incstack = 0
  8730  006F48  0ED0               	movlw	208
  8731  006F4A  6E03               	movwf	??_isdigit^0,c
  8732  006F4C  0EFF               	movlw	255
  8733  006F4E  6E04               	movwf	(??_isdigit+1)^0,c
  8734  006F50  C001  F005         	movff	isdigit@c,??_isdigit+2
  8735  006F54  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8736  006F58  5003               	movf	??_isdigit^0,w,c
  8737  006F5A  2605               	addwf	(??_isdigit+2)^0,f,c
  8738  006F5C  5004               	movf	(??_isdigit+1)^0,w,c
  8739  006F5E  2206               	addwfc	(??_isdigit+3)^0,f,c
  8740  006F60  5006               	movf	(??_isdigit+3)^0,w,c
  8741  006F62  E106               	bnz	i2u1293_40
  8742  006F64  0E0A               	movlw	10
  8743  006F66  5C05               	subwf	(??_isdigit+2)^0,w,c
  8744  006F68  B0D8               	btfsc	status,0,c
  8745  006F6A  D002               	goto	i2u1293_40
  8746  006F6C  0E01               	movlw	1
  8747  006F6E  D001               	goto	i2u1294_40
  8748  006F70                     i2u1293_40:
  8749  006F70  0E00               	movlw	0
  8750  006F72                     i2u1294_40:
  8751  006F72  6E01               	movwf	?_isdigit^0,c
  8752  006F74  6A02               	clrf	(?_isdigit+1)^0,c
  8753  006F76  0012               	return		;funcret
  8754  006F78                     __end_of_isdigit:
  8755                           	opt callstack 0
  8756                           
  8757 ;; *************** function ___wmul *****************
  8758 ;; Defined at:
  8759 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  multiplier      2    0[COMRAM] unsigned int 
  8762 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;  product         2    4[COMRAM] unsigned int 
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  2    0[COMRAM] unsigned int 
  8767 ;; Registers used:
  8768 ;;		wreg, status,2, status,0, prodl, prodh
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8774 ;;      Params:         4       0       0       0       0       0       0
  8775 ;;      Locals:         2       0       0       0       0       0       0
  8776 ;;      Temps:          0       0       0       0       0       0       0
  8777 ;;      Totals:         6       0       0       0       0       0       0
  8778 ;;Total ram usage:        6 bytes
  8779 ;; Hardware stack levels used:    1
  8780 ;; This function calls:
  8781 ;;		Nothing
  8782 ;; This function is called by:
  8783 ;;		_atoi
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text45
  8788  00702C                     __ptext45:
  8789                           	opt callstack 0
  8790  00702C                     ___wmul:
  8791                           	opt callstack 18
  8792                           
  8793                           ;incstack = 0
  8794  00702C  5001               	movf	___wmul@multiplier^0,w,c
  8795  00702E  0203               	mulwf	___wmul@multiplicand^0,c
  8796  007030  CFF3 F005          	movff	prodl,___wmul@product
  8797  007034  CFF4 F006          	movff	prodh,___wmul@product+1
  8798  007038  5001               	movf	___wmul@multiplier^0,w,c
  8799  00703A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8800  00703C  50F3               	movf	243,w,c
  8801  00703E  2606               	addwf	(___wmul@product+1)^0,f,c
  8802  007040  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8803  007042  0203               	mulwf	___wmul@multiplicand^0,c
  8804  007044  50F3               	movf	243,w,c
  8805  007046  2606               	addwf	(___wmul@product+1)^0,f,c
  8806  007048  C005  F001         	movff	___wmul@product,?___wmul
  8807  00704C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8808  007050  0012               	return		;funcret
  8809  007052                     __end_of___wmul:
  8810                           	opt callstack 0
  8811                           
  8812 ;; *************** function _memset *****************
  8813 ;; Defined at:
  8814 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;  dest            2    0[COMRAM] PTR void 
  8817 ;;		 -> r(100), 
  8818 ;;  c               2    2[COMRAM] int 
  8819 ;;  n               2    4[COMRAM] unsigned int 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  s               2   10[COMRAM] PTR unsigned char 
  8822 ;;		 -> r(100), 
  8823 ;;  k               2    8[COMRAM] unsigned int 
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  2    0[COMRAM] PTR void 
  8826 ;; Registers used:
  8827 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8833 ;;      Params:         6       0       0       0       0       0       0
  8834 ;;      Locals:         4       0       0       0       0       0       0
  8835 ;;      Temps:          2       0       0       0       0       0       0
  8836 ;;      Totals:        12       0       0       0       0       0       0
  8837 ;;Total ram usage:       12 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; This function calls:
  8840 ;;		Nothing
  8841 ;; This function is called by:
  8842 ;;		_Hi_ISR
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           	psect	text46
  8847  005E98                     __ptext46:
  8848                           	opt callstack 0
  8849  005E98                     _memset:
  8850                           	opt callstack 22
  8851                           
  8852                           ;incstack = 0
  8853  005E98  C001  F00B         	movff	memset@dest,memset@s
  8854  005E9C  C002  F00C         	movff	memset@dest+1,memset@s+1
  8855  005EA0  5005               	movf	memset@n^0,w,c
  8856  005EA2  1006               	iorwf	(memset@n+1)^0,w,c
  8857  005EA4  B4D8               	btfsc	status,2,c
  8858  005EA6  0012               	return	
  8859  005EA8  C00B  FFD9         	movff	memset@s,fsr2l
  8860  005EAC  C00C  FFDA         	movff	memset@s+1,fsr2h
  8861  005EB0  C003  FFDF         	movff	memset@c,indf2
  8862  005EB4  5005               	movf	memset@n^0,w,c
  8863  005EB6  240B               	addwf	memset@s^0,w,c
  8864  005EB8  6E07               	movwf	??_memset^0,c
  8865  005EBA  5006               	movf	(memset@n+1)^0,w,c
  8866  005EBC  200C               	addwfc	(memset@s+1)^0,w,c
  8867  005EBE  6E08               	movwf	(??_memset+1)^0,c
  8868  005EC0  0EFF               	movlw	255
  8869  005EC2  2407               	addwf	??_memset^0,w,c
  8870  005EC4  6ED9               	movwf	fsr2l,c
  8871  005EC6  0EFF               	movlw	255
  8872  005EC8  2008               	addwfc	(??_memset+1)^0,w,c
  8873  005ECA  6EDA               	movwf	fsr2h,c
  8874  005ECC  C003  FFDF         	movff	memset@c,indf2
  8875  005ED0  5006               	movf	(memset@n+1)^0,w,c
  8876  005ED2  E104               	bnz	i2l9219
  8877  005ED4  0E03               	movlw	3
  8878  005ED6  5C05               	subwf	memset@n^0,w,c
  8879  005ED8  A0D8               	btfss	status,0,c
  8880  005EDA  0012               	return	
  8881  005EDC                     i2l9219:
  8882  005EDC  EE20 F001          	lfsr	2,1
  8883  005EE0  500B               	movf	memset@s^0,w,c
  8884  005EE2  26D9               	addwf	fsr2l,f,c
  8885  005EE4  500C               	movf	(memset@s+1)^0,w,c
  8886  005EE6  22DA               	addwfc	fsr2h,f,c
  8887  005EE8  C003  FFDF         	movff	memset@c,indf2
  8888  005EEC  EE20 F002          	lfsr	2,2
  8889  005EF0  500B               	movf	memset@s^0,w,c
  8890  005EF2  26D9               	addwf	fsr2l,f,c
  8891  005EF4  500C               	movf	(memset@s+1)^0,w,c
  8892  005EF6  22DA               	addwfc	fsr2h,f,c
  8893  005EF8  C003  FFDF         	movff	memset@c,indf2
  8894  005EFC  5005               	movf	memset@n^0,w,c
  8895  005EFE  240B               	addwf	memset@s^0,w,c
  8896  005F00  6E07               	movwf	??_memset^0,c
  8897  005F02  5006               	movf	(memset@n+1)^0,w,c
  8898  005F04  200C               	addwfc	(memset@s+1)^0,w,c
  8899  005F06  6E08               	movwf	(??_memset+1)^0,c
  8900  005F08  0EFE               	movlw	254
  8901  005F0A  2407               	addwf	??_memset^0,w,c
  8902  005F0C  6ED9               	movwf	fsr2l,c
  8903  005F0E  0EFF               	movlw	255
  8904  005F10  2008               	addwfc	(??_memset+1)^0,w,c
  8905  005F12  6EDA               	movwf	fsr2h,c
  8906  005F14  C003  FFDF         	movff	memset@c,indf2
  8907  005F18  5005               	movf	memset@n^0,w,c
  8908  005F1A  240B               	addwf	memset@s^0,w,c
  8909  005F1C  6E07               	movwf	??_memset^0,c
  8910  005F1E  5006               	movf	(memset@n+1)^0,w,c
  8911  005F20  200C               	addwfc	(memset@s+1)^0,w,c
  8912  005F22  6E08               	movwf	(??_memset+1)^0,c
  8913  005F24  0EFD               	movlw	253
  8914  005F26  2407               	addwf	??_memset^0,w,c
  8915  005F28  6ED9               	movwf	fsr2l,c
  8916  005F2A  0EFF               	movlw	255
  8917  005F2C  2008               	addwfc	(??_memset+1)^0,w,c
  8918  005F2E  6EDA               	movwf	fsr2h,c
  8919  005F30  C003  FFDF         	movff	memset@c,indf2
  8920  005F34  5006               	movf	(memset@n+1)^0,w,c
  8921  005F36  E104               	bnz	i2l9225
  8922  005F38  0E07               	movlw	7
  8923  005F3A  5C05               	subwf	memset@n^0,w,c
  8924  005F3C  A0D8               	btfss	status,0,c
  8925  005F3E  0012               	return	
  8926  005F40                     i2l9225:
  8927  005F40  EE20 F003          	lfsr	2,3
  8928  005F44  500B               	movf	memset@s^0,w,c
  8929  005F46  26D9               	addwf	fsr2l,f,c
  8930  005F48  500C               	movf	(memset@s+1)^0,w,c
  8931  005F4A  22DA               	addwfc	fsr2h,f,c
  8932  005F4C  C003  FFDF         	movff	memset@c,indf2
  8933  005F50  5005               	movf	memset@n^0,w,c
  8934  005F52  240B               	addwf	memset@s^0,w,c
  8935  005F54  6E07               	movwf	??_memset^0,c
  8936  005F56  5006               	movf	(memset@n+1)^0,w,c
  8937  005F58  200C               	addwfc	(memset@s+1)^0,w,c
  8938  005F5A  6E08               	movwf	(??_memset+1)^0,c
  8939  005F5C  0EFC               	movlw	252
  8940  005F5E  2407               	addwf	??_memset^0,w,c
  8941  005F60  6ED9               	movwf	fsr2l,c
  8942  005F62  0EFF               	movlw	255
  8943  005F64  2008               	addwfc	(??_memset+1)^0,w,c
  8944  005F66  6EDA               	movwf	fsr2h,c
  8945  005F68  C003  FFDF         	movff	memset@c,indf2
  8946  005F6C  5006               	movf	(memset@n+1)^0,w,c
  8947  005F6E  E104               	bnz	i2l9231
  8948  005F70  0E09               	movlw	9
  8949  005F72  5C05               	subwf	memset@n^0,w,c
  8950  005F74  A0D8               	btfss	status,0,c
  8951  005F76  0012               	return	
  8952  005F78                     i2l9231:
  8953  005F78  C00B  F007         	movff	memset@s,??_memset
  8954  005F7C  C00C  F008         	movff	memset@s+1,??_memset+1
  8955  005F80  1E07               	comf	??_memset^0,f,c
  8956  005F82  1E08               	comf	(??_memset+1)^0,f,c
  8957  005F84  4A07               	infsnz	??_memset^0,f,c
  8958  005F86  2A08               	incf	(??_memset+1)^0,f,c
  8959  005F88  0E03               	movlw	3
  8960  005F8A  1407               	andwf	??_memset^0,w,c
  8961  005F8C  6E09               	movwf	memset@k^0,c
  8962  005F8E  6A0A               	clrf	(memset@k+1)^0,c
  8963  005F90  5009               	movf	memset@k^0,w,c
  8964  005F92  260B               	addwf	memset@s^0,f,c
  8965  005F94  500A               	movf	(memset@k+1)^0,w,c
  8966  005F96  220C               	addwfc	(memset@s+1)^0,f,c
  8967  005F98  5009               	movf	memset@k^0,w,c
  8968  005F9A  5E05               	subwf	memset@n^0,f,c
  8969  005F9C  500A               	movf	(memset@k+1)^0,w,c
  8970  005F9E  5A06               	subwfb	(memset@n+1)^0,f,c
  8971  005FA0  0EFC               	movlw	252
  8972  005FA2  1605               	andwf	memset@n^0,f,c
  8973  005FA4  0EFF               	movlw	255
  8974  005FA6  1606               	andwf	(memset@n+1)^0,f,c
  8975  005FA8  D00B               	goto	i2l9239
  8976  005FAA                     i2l9233:
  8977  005FAA  C00B  FFD9         	movff	memset@s,fsr2l
  8978  005FAE  C00C  FFDA         	movff	memset@s+1,fsr2h
  8979  005FB2  C003  FFDF         	movff	memset@c,indf2
  8980  005FB6  0605               	decf	memset@n^0,f,c
  8981  005FB8  A0D8               	btfss	status,0,c
  8982  005FBA  0606               	decf	(memset@n+1)^0,f,c
  8983  005FBC  4A0B               	infsnz	memset@s^0,f,c
  8984  005FBE  2A0C               	incf	(memset@s+1)^0,f,c
  8985  005FC0                     i2l9239:
  8986  005FC0  5005               	movf	memset@n^0,w,c
  8987  005FC2  1006               	iorwf	(memset@n+1)^0,w,c
  8988  005FC4  B4D8               	btfsc	status,2,c
  8989  005FC6  0012               	return	
  8990  005FC8  D7F0               	goto	i2l9233
  8991  005FCA                     __end_of_memset:
  8992                           	opt callstack 0
  8993                           
  8994 ;; *************** function _MQ_Read *****************
  8995 ;; Defined at:
  8996 ;;		line 47 in file "setting_hardaware/adc.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;  values          2  106[BANK0 ] PTR 
  8999 ;;		 -> value(12), 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  res             4  112[BANK0 ] PTR 
  9002 ;;  digital         2  110[BANK0 ] int 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9012 ;;      Params:         0       2       0       0       0       0       0
  9013 ;;      Locals:         0      10       0       0       0       0       0
  9014 ;;      Temps:          0       2       0       0       0       0       0
  9015 ;;      Totals:         0      14       0       0       0       0       0
  9016 ;;Total ram usage:       14 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; Hardware stack levels required when called:    5
  9019 ;; This function calls:
  9020 ;;		_MQGetGasPercentage
  9021 ;;		___fldiv
  9022 ;;		___flmul
  9023 ;;		___xxtofl
  9024 ;; This function is called by:
  9025 ;;		_Hi_ISR
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	text47
  9030  005206                     __ptext47:
  9031                           	opt callstack 0
  9032  005206                     _MQ_Read:
  9033                           	opt callstack 17
  9034                           
  9035                           ;setting_hardaware/adc.c: 48:     int digital;;setting_hardaware/adc.c: 51:     ADCON0bi
      +                          ts.CHS = 1 ;
  9036                           
  9037                           ;incstack = 0
  9038  005206  50C2               	movf	194,w,c	;volatile
  9039  005208  0BC3               	andlw	-61
  9040  00520A  0904               	iorlw	4
  9041  00520C  6EC2               	movwf	194,c	;volatile
  9042                           
  9043                           ;setting_hardaware/adc.c: 52:     ADCON0bits.ADON = 1;
  9044  00520E  80C2               	bsf	194,0,c	;volatile
  9045                           
  9046                           ;setting_hardaware/adc.c: 53:     ADCON0bits.GO = 1;
  9047  005210  82C2               	bsf	194,1,c	;volatile
  9048  005212                     i2l161:
  9049  005212  B2C2               	btfsc	194,1,c	;volatile
  9050  005214  D7FE               	goto	i2l161
  9051                           
  9052                           ;setting_hardaware/adc.c: 55:     digital = ADRES;
  9053  005216  CFC3 F0EE          	movff	4035,MQ_Read@digital	;volatile
  9054  00521A  CFC4 F0EF          	movff	4036,MQ_Read@digital+1	;volatile
  9055                           
  9056                           ;setting_hardaware/adc.c: 56:     double res=5.00*(1023-digital)/1023;
  9057  00521E  0E00               	movlw	0
  9058  005220  6E15               	movwf	___flmul@a^0,c
  9059  005222  0E00               	movlw	0
  9060  005224  6E16               	movwf	(___flmul@a+1)^0,c
  9061  005226  0EA0               	movlw	160
  9062  005228  6E17               	movwf	(___flmul@a+2)^0,c
  9063  00522A  0E40               	movlw	64
  9064  00522C  6E18               	movwf	(___flmul@a+3)^0,c
  9065  00522E  0EFF               	movlw	255
  9066  005230  0100               	movlb	0	; () banked
  9067  005232  6FEC               	movwf	??_MQ_Read& (0+255),b
  9068  005234  0E03               	movlw	3
  9069  005236  6FED               	movwf	(??_MQ_Read+1)& (0+255),b
  9070  005238  51EE               	movf	MQ_Read@digital& (0+255),w,b
  9071  00523A  5FEC               	subwf	??_MQ_Read& (0+255),f,b
  9072  00523C  51EF               	movf	(MQ_Read@digital+1)& (0+255),w,b
  9073  00523E  5BED               	subwfb	(??_MQ_Read+1)& (0+255),f,b
  9074  005240  C0EC  F001         	movff	??_MQ_Read,___xxtofl@val
  9075  005244  C0ED  F002         	movff	??_MQ_Read+1,___xxtofl@val+1
  9076  005248  0E00               	movlw	0
  9077  00524A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9078  00524C  0EFF               	movlw	-1
  9079  00524E  6E03               	movwf	(___xxtofl@val+2)^0,c
  9080  005250  6E04               	movwf	(___xxtofl@val+3)^0,c
  9081  005252  0E01               	movlw	1
  9082  005254  ECAC  F02E         	call	___xxtofl
  9083  005258  C001  F011         	movff	?___xxtofl,___flmul@b
  9084  00525C  C002  F012         	movff	?___xxtofl+1,___flmul@b+1
  9085  005260  C003  F013         	movff	?___xxtofl+2,___flmul@b+2
  9086  005264  C004  F014         	movff	?___xxtofl+3,___flmul@b+3
  9087  005268  EC6D  F023         	call	___flmul	;wreg free
  9088  00526C  C011  F032         	movff	?___flmul,___fldiv@b
  9089  005270  C012  F033         	movff	?___flmul+1,___fldiv@b+1
  9090  005274  C013  F034         	movff	?___flmul+2,___fldiv@b+2
  9091  005278  C014  F035         	movff	?___flmul+3,___fldiv@b+3
  9092  00527C  0E00               	movlw	0
  9093  00527E  6E36               	movwf	___fldiv@a^0,c
  9094  005280  0EC0               	movlw	192
  9095  005282  6E37               	movwf	(___fldiv@a+1)^0,c
  9096  005284  0E7F               	movlw	127
  9097  005286  6E38               	movwf	(___fldiv@a+2)^0,c
  9098  005288  0E44               	movlw	68
  9099  00528A  6E39               	movwf	(___fldiv@a+3)^0,c
  9100  00528C  EC9C  F026         	call	___fldiv	;wreg free
  9101  005290  C032  F0F0         	movff	?___fldiv,MQ_Read@res
  9102  005294  C033  F0F1         	movff	?___fldiv+1,MQ_Read@res+1
  9103  005298  C034  F0F2         	movff	?___fldiv+2,MQ_Read@res+2
  9104  00529C  C035  F0F3         	movff	?___fldiv+3,MQ_Read@res+3
  9105                           
  9106                           ;setting_hardaware/adc.c: 57:     lpg = MQGetGasPercentage(res/Ro,GAS_LPG);
  9107  0052A0  C0F0  F032         	movff	MQ_Read@res,___fldiv@b
  9108  0052A4  C0F1  F033         	movff	MQ_Read@res+1,___fldiv@b+1
  9109  0052A8  C0F2  F034         	movff	MQ_Read@res+2,___fldiv@b+2
  9110  0052AC  C0F3  F035         	movff	MQ_Read@res+3,___fldiv@b+3
  9111  0052B0  C299  F036         	movff	_Ro,___fldiv@a
  9112  0052B4  C29A  F037         	movff	_Ro+1,___fldiv@a+1
  9113  0052B8  C29B  F038         	movff	_Ro+2,___fldiv@a+2
  9114  0052BC  C29C  F039         	movff	_Ro+3,___fldiv@a+3
  9115  0052C0  EC9C  F026         	call	___fldiv	;wreg free
  9116  0052C4  C032  F0F4         	movff	?___fldiv,_MQ_Read$2059
  9117  0052C8  C033  F0F5         	movff	?___fldiv+1,_MQ_Read$2059+1
  9118  0052CC  C034  F0F6         	movff	?___fldiv+2,_MQ_Read$2059+2
  9119  0052D0  C035  F0F7         	movff	?___fldiv+3,_MQ_Read$2059+3
  9120                           
  9121                           ;setting_hardaware/adc.c: 57:     lpg = MQGetGasPercentage(res/Ro,GAS_LPG);
  9122  0052D4  C0F4  F0E0         	movff	_MQ_Read$2059,MQGetGasPercentage@rs_ro_ratio
  9123  0052D8  C0F5  F0E1         	movff	_MQ_Read$2059+1,MQGetGasPercentage@rs_ro_ratio+1
  9124  0052DC  C0F6  F0E2         	movff	_MQ_Read$2059+2,MQGetGasPercentage@rs_ro_ratio+2
  9125  0052E0  C0F7  F0E3         	movff	_MQ_Read$2059+3,MQGetGasPercentage@rs_ro_ratio+3
  9126  0052E4  C226  F0E4         	movff	_GAS_LPG,MQGetGasPercentage@gas_id
  9127  0052E8  C227  F0E5         	movff	_GAS_LPG+1,MQGetGasPercentage@gas_id+1
  9128  0052EC  ECBA  F02C         	call	_MQGetGasPercentage	;wreg free
  9129  0052F0  C0E0  F218         	movff	?_MQGetGasPercentage,_lpg
  9130  0052F4  C0E1  F219         	movff	?_MQGetGasPercentage+1,_lpg+1
  9131  0052F8  C0E2  F21A         	movff	?_MQGetGasPercentage+2,_lpg+2
  9132  0052FC  C0E3  F21B         	movff	?_MQGetGasPercentage+3,_lpg+3
  9133                           
  9134                           ;setting_hardaware/adc.c: 58:     co = MQGetGasPercentage(res/Ro,GAS_CO);
  9135  005300  C0F0  F032         	movff	MQ_Read@res,___fldiv@b
  9136  005304  C0F1  F033         	movff	MQ_Read@res+1,___fldiv@b+1
  9137  005308  C0F2  F034         	movff	MQ_Read@res+2,___fldiv@b+2
  9138  00530C  C0F3  F035         	movff	MQ_Read@res+3,___fldiv@b+3
  9139  005310  C299  F036         	movff	_Ro,___fldiv@a
  9140  005314  C29A  F037         	movff	_Ro+1,___fldiv@a+1
  9141  005318  C29B  F038         	movff	_Ro+2,___fldiv@a+2
  9142  00531C  C29C  F039         	movff	_Ro+3,___fldiv@a+3
  9143  005320  EC9C  F026         	call	___fldiv	;wreg free
  9144  005324  C032  F0F4         	movff	?___fldiv,_MQ_Read$2059
  9145  005328  C033  F0F5         	movff	?___fldiv+1,_MQ_Read$2059+1
  9146  00532C  C034  F0F6         	movff	?___fldiv+2,_MQ_Read$2059+2
  9147  005330  C035  F0F7         	movff	?___fldiv+3,_MQ_Read$2059+3
  9148                           
  9149                           ;setting_hardaware/adc.c: 58:     co = MQGetGasPercentage(res/Ro,GAS_CO);
  9150  005334  C0F4  F0E0         	movff	_MQ_Read$2059,MQGetGasPercentage@rs_ro_ratio
  9151  005338  C0F5  F0E1         	movff	_MQ_Read$2059+1,MQGetGasPercentage@rs_ro_ratio+1
  9152  00533C  C0F6  F0E2         	movff	_MQ_Read$2059+2,MQGetGasPercentage@rs_ro_ratio+2
  9153  005340  C0F7  F0E3         	movff	_MQ_Read$2059+3,MQGetGasPercentage@rs_ro_ratio+3
  9154  005344  C2A1  F0E4         	movff	_GAS_CO,MQGetGasPercentage@gas_id
  9155  005348  C2A2  F0E5         	movff	_GAS_CO+1,MQGetGasPercentage@gas_id+1
  9156  00534C  ECBA  F02C         	call	_MQGetGasPercentage	;wreg free
  9157  005350  C0E0  F214         	movff	?_MQGetGasPercentage,_co
  9158  005354  C0E1  F215         	movff	?_MQGetGasPercentage+1,_co+1
  9159  005358  C0E2  F216         	movff	?_MQGetGasPercentage+2,_co+2
  9160  00535C  C0E3  F217         	movff	?_MQGetGasPercentage+3,_co+3
  9161                           
  9162                           ;setting_hardaware/adc.c: 59:     smoke = MQGetGasPercentage(res/Ro,GAS_SMOKE);
  9163  005360  C0F0  F032         	movff	MQ_Read@res,___fldiv@b
  9164  005364  C0F1  F033         	movff	MQ_Read@res+1,___fldiv@b+1
  9165  005368  C0F2  F034         	movff	MQ_Read@res+2,___fldiv@b+2
  9166  00536C  C0F3  F035         	movff	MQ_Read@res+3,___fldiv@b+3
  9167  005370  C299  F036         	movff	_Ro,___fldiv@a
  9168  005374  C29A  F037         	movff	_Ro+1,___fldiv@a+1
  9169  005378  C29B  F038         	movff	_Ro+2,___fldiv@a+2
  9170  00537C  C29C  F039         	movff	_Ro+3,___fldiv@a+3
  9171  005380  EC9C  F026         	call	___fldiv	;wreg free
  9172  005384  C032  F0F4         	movff	?___fldiv,_MQ_Read$2059
  9173  005388  C033  F0F5         	movff	?___fldiv+1,_MQ_Read$2059+1
  9174  00538C  C034  F0F6         	movff	?___fldiv+2,_MQ_Read$2059+2
  9175  005390  C035  F0F7         	movff	?___fldiv+3,_MQ_Read$2059+3
  9176                           
  9177                           ;setting_hardaware/adc.c: 59:     smoke = MQGetGasPercentage(res/Ro,GAS_SMOKE);
  9178  005394  C0F4  F0E0         	movff	_MQ_Read$2059,MQGetGasPercentage@rs_ro_ratio
  9179  005398  C0F5  F0E1         	movff	_MQ_Read$2059+1,MQGetGasPercentage@rs_ro_ratio+1
  9180  00539C  C0F6  F0E2         	movff	_MQ_Read$2059+2,MQGetGasPercentage@rs_ro_ratio+2
  9181  0053A0  C0F7  F0E3         	movff	_MQ_Read$2059+3,MQGetGasPercentage@rs_ro_ratio+3
  9182  0053A4  C29F  F0E4         	movff	_GAS_SMOKE,MQGetGasPercentage@gas_id
  9183  0053A8  C2A0  F0E5         	movff	_GAS_SMOKE+1,MQGetGasPercentage@gas_id+1
  9184  0053AC  ECBA  F02C         	call	_MQGetGasPercentage	;wreg free
  9185  0053B0  C0E0  F210         	movff	?_MQGetGasPercentage,_smoke
  9186  0053B4  C0E1  F211         	movff	?_MQGetGasPercentage+1,_smoke+1
  9187  0053B8  C0E2  F212         	movff	?_MQGetGasPercentage+2,_smoke+2
  9188  0053BC  C0E3  F213         	movff	?_MQGetGasPercentage+3,_smoke+3
  9189                           
  9190                           ;setting_hardaware/adc.c: 62:     values[0]=lpg;
  9191  0053C0  C0EA  FFD9         	movff	MQ_Read@values,fsr2l
  9192  0053C4  C0EB  FFDA         	movff	MQ_Read@values+1,fsr2h
  9193  0053C8  C218  FFDE         	movff	_lpg,postinc2
  9194  0053CC  C219  FFDE         	movff	_lpg+1,postinc2
  9195  0053D0  C21A  FFDE         	movff	_lpg+2,postinc2
  9196  0053D4  C21B  FFDE         	movff	_lpg+3,postinc2
  9197                           
  9198                           ;setting_hardaware/adc.c: 63:     values[1]=co;
  9199  0053D8  0100               	movlb	0	; () banked
  9200  0053DA  EE20 F004          	lfsr	2,4
  9201  0053DE  51EA               	movf	MQ_Read@values& (0+255),w,b
  9202  0053E0  26D9               	addwf	fsr2l,f,c
  9203  0053E2  51EB               	movf	(MQ_Read@values+1)& (0+255),w,b
  9204  0053E4  22DA               	addwfc	fsr2h,f,c
  9205  0053E6  C214  FFDE         	movff	_co,postinc2
  9206  0053EA  C215  FFDE         	movff	_co+1,postinc2
  9207  0053EE  C216  FFDE         	movff	_co+2,postinc2
  9208  0053F2  C217  FFDE         	movff	_co+3,postinc2
  9209                           
  9210                           ; BSR set to: 0
  9211                           ;setting_hardaware/adc.c: 64:     values[2]=smoke;
  9212  0053F6  EE20 F008          	lfsr	2,8
  9213  0053FA  51EA               	movf	MQ_Read@values& (0+255),w,b
  9214  0053FC  26D9               	addwf	fsr2l,f,c
  9215  0053FE  51EB               	movf	(MQ_Read@values+1)& (0+255),w,b
  9216  005400  22DA               	addwfc	fsr2h,f,c
  9217  005402  C210  FFDE         	movff	_smoke,postinc2
  9218  005406  C211  FFDE         	movff	_smoke+1,postinc2
  9219  00540A  C212  FFDE         	movff	_smoke+2,postinc2
  9220  00540E  C213  FFDE         	movff	_smoke+3,postinc2
  9221                           
  9222                           ; BSR set to: 0
  9223  005412  0012               	return		;funcret
  9224  005414                     __end_of_MQ_Read:
  9225                           	opt callstack 0
  9226                           
  9227 ;; *************** function _MQGetGasPercentage *****************
  9228 ;; Defined at:
  9229 ;;		line 28 in file "setting_hardaware/adc.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  rs_ro_ratio     4   96[BANK0 ] void 
  9232 ;;  gas_id          2  100[BANK0 ] int 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;		None
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  4   96[BANK0 ] int 
  9237 ;; Registers used:
  9238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9244 ;;      Params:         0       6       0       0       0       0       0
  9245 ;;      Locals:         0       4       0       0       0       0       0
  9246 ;;      Temps:          0       0       0       0       0       0       0
  9247 ;;      Totals:         0      10       0       0       0       0       0
  9248 ;;Total ram usage:       10 bytes
  9249 ;; Hardware stack levels used:    1
  9250 ;; Hardware stack levels required when called:    4
  9251 ;; This function calls:
  9252 ;;		_MQGetPercentage
  9253 ;;		___xxtofl
  9254 ;; This function is called by:
  9255 ;;		_MQ_Read
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text48
  9260  005974                     __ptext48:
  9261                           	opt callstack 0
  9262  005974                     _MQGetGasPercentage:
  9263                           	opt callstack 17
  9264                           
  9265                           ;setting_hardaware/adc.c: 29:   if ( gas_id == GAS_LPG ) {
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;incstack = 0
  9269  005974  0102               	movlb	2	; () banked
  9270  005976  5126               	movf	_GAS_LPG& (0+255),w,b
  9271  005978  0100               	movlb	0	; () banked
  9272  00597A  19E4               	xorwf	MQGetGasPercentage@gas_id& (0+255),w,b
  9273  00597C  E132               	bnz	i2l11521
  9274  00597E  0102               	movlb	2	; () banked
  9275  005980  5127               	movf	(_GAS_LPG+1)& (0+255),w,b
  9276  005982  0100               	movlb	0	; () banked
  9277  005984  19E5               	xorwf	(MQGetGasPercentage@gas_id+1)& (0+255),w,b
  9278  005986  A4D8               	btfss	status,2,c
  9279  005988  D02C               	goto	i2l11521
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;setting_hardaware/adc.c: 30:      return MQGetPercentage(rs_ro_ratio,LPGCurve);
  9283  00598A  0EBF               	movlw	low _LPGCurve
  9284  00598C  6FD2               	movwf	MQGetPercentage@pcurve& (0+255),b
  9285  00598E  0E02               	movlw	high _LPGCurve
  9286  005990  6FD3               	movwf	(MQGetPercentage@pcurve+1)& (0+255),b
  9287  005992  C0E0  F0CE         	movff	MQGetGasPercentage@rs_ro_ratio,MQGetPercentage@rs_ro_ratio
  9288  005996  C0E1  F0CF         	movff	MQGetGasPercentage@rs_ro_ratio+1,MQGetPercentage@rs_ro_ratio+1
  9289  00599A  C0E2  F0D0         	movff	MQGetGasPercentage@rs_ro_ratio+2,MQGetPercentage@rs_ro_ratio+2
  9290  00599E  C0E3  F0D1         	movff	MQGetGasPercentage@rs_ro_ratio+3,MQGetPercentage@rs_ro_ratio+3
  9291  0059A2  EC0D  F031         	call	_MQGetPercentage	;wreg free
  9292  0059A6  0100               	movlb	0	; () banked
  9293  0059A8  C0CE  F0E6         	movff	?_MQGetPercentage,_MQGetGasPercentage$2058
  9294  0059AC  C0CF  F0E7         	movff	?_MQGetPercentage+1,_MQGetGasPercentage$2058+1
  9295  0059B0  0E00               	movlw	0
  9296  0059B2  BFE7               	btfsc	(_MQGetGasPercentage$2058+1)& (0+255),7,b
  9297  0059B4  0EFF               	movlw	-1
  9298  0059B6  6FE8               	movwf	(_MQGetGasPercentage$2058+2)& (0+255),b
  9299  0059B8  6FE9               	movwf	(_MQGetGasPercentage$2058+3)& (0+255),b
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;setting_hardaware/adc.c: 30:      return MQGetPercentage(rs_ro_ratio,LPGCurve);
  9303  0059BA  C0E6  F001         	movff	_MQGetGasPercentage$2058,___xxtofl@val
  9304  0059BE  C0E7  F002         	movff	_MQGetGasPercentage$2058+1,___xxtofl@val+1
  9305  0059C2  C0E8  F003         	movff	_MQGetGasPercentage$2058+2,___xxtofl@val+2
  9306  0059C6  C0E9  F004         	movff	_MQGetGasPercentage$2058+3,___xxtofl@val+3
  9307  0059CA  0E01               	movlw	1
  9308  0059CC  ECAC  F02E         	call	___xxtofl
  9309  0059D0  C001  F0E0         	movff	?___xxtofl,?_MQGetGasPercentage
  9310  0059D4  C002  F0E1         	movff	?___xxtofl+1,?_MQGetGasPercentage+1
  9311  0059D8  C003  F0E2         	movff	?___xxtofl+2,?_MQGetGasPercentage+2
  9312  0059DC  C004  F0E3         	movff	?___xxtofl+3,?_MQGetGasPercentage+3
  9313  0059E0  0012               	return	
  9314  0059E2                     i2l11521:
  9315                           
  9316                           ; BSR set to: 0
  9317  0059E2  0102               	movlb	2	; () banked
  9318  0059E4  51A1               	movf	_GAS_CO& (0+255),w,b
  9319  0059E6  0100               	movlb	0	; () banked
  9320  0059E8  19E4               	xorwf	MQGetGasPercentage@gas_id& (0+255),w,b
  9321  0059EA  E132               	bnz	i2l11531
  9322  0059EC  0102               	movlb	2	; () banked
  9323  0059EE  51A2               	movf	(_GAS_CO+1)& (0+255),w,b
  9324  0059F0  0100               	movlb	0	; () banked
  9325  0059F2  19E5               	xorwf	(MQGetGasPercentage@gas_id+1)& (0+255),w,b
  9326  0059F4  A4D8               	btfss	status,2,c
  9327  0059F6  D02C               	goto	i2l11531
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;setting_hardaware/adc.c: 32:      return MQGetPercentage(rs_ro_ratio,COCurve);
  9331  0059F8  0EB3               	movlw	low _COCurve
  9332  0059FA  6FD2               	movwf	MQGetPercentage@pcurve& (0+255),b
  9333  0059FC  0E02               	movlw	high _COCurve
  9334  0059FE  6FD3               	movwf	(MQGetPercentage@pcurve+1)& (0+255),b
  9335  005A00  C0E0  F0CE         	movff	MQGetGasPercentage@rs_ro_ratio,MQGetPercentage@rs_ro_ratio
  9336  005A04  C0E1  F0CF         	movff	MQGetGasPercentage@rs_ro_ratio+1,MQGetPercentage@rs_ro_ratio+1
  9337  005A08  C0E2  F0D0         	movff	MQGetGasPercentage@rs_ro_ratio+2,MQGetPercentage@rs_ro_ratio+2
  9338  005A0C  C0E3  F0D1         	movff	MQGetGasPercentage@rs_ro_ratio+3,MQGetPercentage@rs_ro_ratio+3
  9339  005A10  EC0D  F031         	call	_MQGetPercentage	;wreg free
  9340  005A14  0100               	movlb	0	; () banked
  9341  005A16  C0CE  F0E6         	movff	?_MQGetPercentage,_MQGetGasPercentage$2058
  9342  005A1A  C0CF  F0E7         	movff	?_MQGetPercentage+1,_MQGetGasPercentage$2058+1
  9343  005A1E  0E00               	movlw	0
  9344  005A20  BFE7               	btfsc	(_MQGetGasPercentage$2058+1)& (0+255),7,b
  9345  005A22  0EFF               	movlw	-1
  9346  005A24  6FE8               	movwf	(_MQGetGasPercentage$2058+2)& (0+255),b
  9347  005A26  6FE9               	movwf	(_MQGetGasPercentage$2058+3)& (0+255),b
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;setting_hardaware/adc.c: 32:      return MQGetPercentage(rs_ro_ratio,COCurve);
  9351  005A28  C0E6  F001         	movff	_MQGetGasPercentage$2058,___xxtofl@val
  9352  005A2C  C0E7  F002         	movff	_MQGetGasPercentage$2058+1,___xxtofl@val+1
  9353  005A30  C0E8  F003         	movff	_MQGetGasPercentage$2058+2,___xxtofl@val+2
  9354  005A34  C0E9  F004         	movff	_MQGetGasPercentage$2058+3,___xxtofl@val+3
  9355  005A38  0E01               	movlw	1
  9356  005A3A  ECAC  F02E         	call	___xxtofl
  9357  005A3E  C001  F0E0         	movff	?___xxtofl,?_MQGetGasPercentage
  9358  005A42  C002  F0E1         	movff	?___xxtofl+1,?_MQGetGasPercentage+1
  9359  005A46  C003  F0E2         	movff	?___xxtofl+2,?_MQGetGasPercentage+2
  9360  005A4A  C004  F0E3         	movff	?___xxtofl+3,?_MQGetGasPercentage+3
  9361  005A4E  0012               	return	
  9362  005A50                     i2l11531:
  9363                           
  9364                           ; BSR set to: 0
  9365  005A50  0102               	movlb	2	; () banked
  9366  005A52  519F               	movf	_GAS_SMOKE& (0+255),w,b
  9367  005A54  0100               	movlb	0	; () banked
  9368  005A56  19E4               	xorwf	MQGetGasPercentage@gas_id& (0+255),w,b
  9369  005A58  E132               	bnz	i2l11539
  9370  005A5A  0102               	movlb	2	; () banked
  9371  005A5C  51A0               	movf	(_GAS_SMOKE+1)& (0+255),w,b
  9372  005A5E  0100               	movlb	0	; () banked
  9373  005A60  19E5               	xorwf	(MQGetGasPercentage@gas_id+1)& (0+255),w,b
  9374  005A62  A4D8               	btfss	status,2,c
  9375  005A64  D02C               	goto	i2l11539
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;setting_hardaware/adc.c: 34:      return MQGetPercentage(rs_ro_ratio,SmokeCurve);
  9379  005A66  0EA7               	movlw	low _SmokeCurve
  9380  005A68  6FD2               	movwf	MQGetPercentage@pcurve& (0+255),b
  9381  005A6A  0E02               	movlw	high _SmokeCurve
  9382  005A6C  6FD3               	movwf	(MQGetPercentage@pcurve+1)& (0+255),b
  9383  005A6E  C0E0  F0CE         	movff	MQGetGasPercentage@rs_ro_ratio,MQGetPercentage@rs_ro_ratio
  9384  005A72  C0E1  F0CF         	movff	MQGetGasPercentage@rs_ro_ratio+1,MQGetPercentage@rs_ro_ratio+1
  9385  005A76  C0E2  F0D0         	movff	MQGetGasPercentage@rs_ro_ratio+2,MQGetPercentage@rs_ro_ratio+2
  9386  005A7A  C0E3  F0D1         	movff	MQGetGasPercentage@rs_ro_ratio+3,MQGetPercentage@rs_ro_ratio+3
  9387  005A7E  EC0D  F031         	call	_MQGetPercentage	;wreg free
  9388  005A82  0100               	movlb	0	; () banked
  9389  005A84  C0CE  F0E6         	movff	?_MQGetPercentage,_MQGetGasPercentage$2058
  9390  005A88  C0CF  F0E7         	movff	?_MQGetPercentage+1,_MQGetGasPercentage$2058+1
  9391  005A8C  0E00               	movlw	0
  9392  005A8E  BFE7               	btfsc	(_MQGetGasPercentage$2058+1)& (0+255),7,b
  9393  005A90  0EFF               	movlw	-1
  9394  005A92  6FE8               	movwf	(_MQGetGasPercentage$2058+2)& (0+255),b
  9395  005A94  6FE9               	movwf	(_MQGetGasPercentage$2058+3)& (0+255),b
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;setting_hardaware/adc.c: 34:      return MQGetPercentage(rs_ro_ratio,SmokeCurve);
  9399  005A96  C0E6  F001         	movff	_MQGetGasPercentage$2058,___xxtofl@val
  9400  005A9A  C0E7  F002         	movff	_MQGetGasPercentage$2058+1,___xxtofl@val+1
  9401  005A9E  C0E8  F003         	movff	_MQGetGasPercentage$2058+2,___xxtofl@val+2
  9402  005AA2  C0E9  F004         	movff	_MQGetGasPercentage$2058+3,___xxtofl@val+3
  9403  005AA6  0E01               	movlw	1
  9404  005AA8  ECAC  F02E         	call	___xxtofl
  9405  005AAC  C001  F0E0         	movff	?___xxtofl,?_MQGetGasPercentage
  9406  005AB0  C002  F0E1         	movff	?___xxtofl+1,?_MQGetGasPercentage+1
  9407  005AB4  C003  F0E2         	movff	?___xxtofl+2,?_MQGetGasPercentage+2
  9408  005AB8  C004  F0E3         	movff	?___xxtofl+3,?_MQGetGasPercentage+3
  9409  005ABC  0012               	return	
  9410  005ABE                     i2l11539:
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;setting_hardaware/adc.c: 36:   return 0;
  9414  005ABE  0E00               	movlw	0
  9415  005AC0  6FE0               	movwf	?_MQGetGasPercentage& (0+255),b
  9416  005AC2  0E00               	movlw	0
  9417  005AC4  6FE1               	movwf	(?_MQGetGasPercentage+1)& (0+255),b
  9418  005AC6  0E00               	movlw	0
  9419  005AC8  6FE2               	movwf	(?_MQGetGasPercentage+2)& (0+255),b
  9420  005ACA  0E00               	movlw	0
  9421  005ACC  6FE3               	movwf	(?_MQGetGasPercentage+3)& (0+255),b
  9422  005ACE  0012               	return		;funcret
  9423  005AD0                     __end_of_MQGetGasPercentage:
  9424                           	opt callstack 0
  9425                           
  9426 ;; *************** function _MQGetPercentage *****************
  9427 ;; Defined at:
  9428 ;;		line 24 in file "setting_hardaware/adc.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  rs_ro_ratio     4   78[BANK0 ] int 
  9431 ;;  pcurve          2   82[BANK0 ] PTR 
  9432 ;;		 -> SmokeCurve(12), COCurve(12), LPGCurve(12), 
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;		None
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  2   78[BANK0 ] int 
  9437 ;; Registers used:
  9438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9444 ;;      Params:         0       6       0       0       0       0       0
  9445 ;;      Locals:         0      12       0       0       0       0       0
  9446 ;;      Temps:          0       0       0       0       0       0       0
  9447 ;;      Totals:         0      18       0       0       0       0       0
  9448 ;;Total ram usage:       18 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    3
  9451 ;; This function calls:
  9452 ;;		___fladd
  9453 ;;		___fldiv
  9454 ;;		___flsub
  9455 ;;		___fltol
  9456 ;;		_logf
  9457 ;;		_powf
  9458 ;; This function is called by:
  9459 ;;		_MQGetGasPercentage
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	text49
  9464  00621A                     __ptext49:
  9465                           	opt callstack 0
  9466  00621A                     _MQGetPercentage:
  9467                           	opt callstack 17
  9468                           
  9469                           ;setting_hardaware/adc.c: 25:   return (powf(10,(((logf(rs_ro_ratio)-pcurve[1])/pcurve[2
      +                          ]) + pcurve[0])));
  9470                           
  9471                           ;incstack = 0
  9472  00621A  C0CE  F04B         	movff	MQGetPercentage@rs_ro_ratio,logf@x
  9473  00621E  C0CF  F04C         	movff	MQGetPercentage@rs_ro_ratio+1,logf@x+1
  9474  006222  C0D0  F04D         	movff	MQGetPercentage@rs_ro_ratio+2,logf@x+2
  9475  006226  C0D1  F04E         	movff	MQGetPercentage@rs_ro_ratio+3,logf@x+3
  9476  00622A  EC78  F01B         	call	_logf	;wreg free
  9477  00622E  C04B  F0D4         	movff	?_logf,_MQGetPercentage$2055
  9478  006232  C04C  F0D5         	movff	?_logf+1,_MQGetPercentage$2055+1
  9479  006236  C04D  F0D6         	movff	?_logf+2,_MQGetPercentage$2055+2
  9480  00623A  C04E  F0D7         	movff	?_logf+3,_MQGetPercentage$2055+3
  9481                           
  9482                           ;setting_hardaware/adc.c: 25:   return (powf(10,(((logf(rs_ro_ratio)-pcurve[1])/pcurve[2
      +                          ]) + pcurve[0])));
  9483  00623E  0100               	movlb	0	; () banked
  9484  006240  EE20 F008          	lfsr	2,8
  9485  006244  51D2               	movf	MQGetPercentage@pcurve& (0+255),w,b
  9486  006246  26D9               	addwf	fsr2l,f,c
  9487  006248  51D3               	movf	(MQGetPercentage@pcurve+1)& (0+255),w,b
  9488  00624A  22DA               	addwfc	fsr2h,f,c
  9489  00624C  CFDE F036          	movff	postinc2,___fldiv@a
  9490  006250  CFDE F037          	movff	postinc2,___fldiv@a+1
  9491  006254  CFDE F038          	movff	postinc2,___fldiv@a+2
  9492  006258  CFDE F039          	movff	postinc2,___fldiv@a+3
  9493  00625C  EE20 F004          	lfsr	2,4
  9494  006260  51D2               	movf	MQGetPercentage@pcurve& (0+255),w,b
  9495  006262  26D9               	addwf	fsr2l,f,c
  9496  006264  51D3               	movf	(MQGetPercentage@pcurve+1)& (0+255),w,b
  9497  006266  22DA               	addwfc	fsr2h,f,c
  9498  006268  CFDE F02E          	movff	postinc2,___flsub@a
  9499  00626C  CFDE F02F          	movff	postinc2,___flsub@a+1
  9500  006270  CFDE F030          	movff	postinc2,___flsub@a+2
  9501  006274  CFDE F031          	movff	postinc2,___flsub@a+3
  9502  006278  C0D4  F02A         	movff	_MQGetPercentage$2055,___flsub@b
  9503  00627C  C0D5  F02B         	movff	_MQGetPercentage$2055+1,___flsub@b+1
  9504  006280  C0D6  F02C         	movff	_MQGetPercentage$2055+2,___flsub@b+2
  9505  006284  C0D7  F02D         	movff	_MQGetPercentage$2055+3,___flsub@b+3
  9506  006288  ECAE  F036         	call	___flsub	;wreg free
  9507  00628C  C02A  F032         	movff	?___flsub,___fldiv@b
  9508  006290  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  9509  006294  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  9510  006298  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  9511  00629C  EC9C  F026         	call	___fldiv	;wreg free
  9512  0062A0  C032  F0D8         	movff	?___fldiv,_MQGetPercentage$2056
  9513  0062A4  C033  F0D9         	movff	?___fldiv+1,_MQGetPercentage$2056+1
  9514  0062A8  C034  F0DA         	movff	?___fldiv+2,_MQGetPercentage$2056+2
  9515  0062AC  C035  F0DB         	movff	?___fldiv+3,_MQGetPercentage$2056+3
  9516                           
  9517                           ;setting_hardaware/adc.c: 25:   return (powf(10,(((logf(rs_ro_ratio)-pcurve[1])/pcurve[2
      +                          ]) + pcurve[0])));
  9518  0062B0  C0D2  FFD9         	movff	MQGetPercentage@pcurve,fsr2l
  9519  0062B4  C0D3  FFDA         	movff	MQGetPercentage@pcurve+1,fsr2h
  9520  0062B8  CFDE F005          	movff	postinc2,___fladd@a
  9521  0062BC  CFDE F006          	movff	postinc2,___fladd@a+1
  9522  0062C0  CFDE F007          	movff	postinc2,___fladd@a+2
  9523  0062C4  CFDE F008          	movff	postinc2,___fladd@a+3
  9524  0062C8  C0D8  F001         	movff	_MQGetPercentage$2056,___fladd@b
  9525  0062CC  C0D9  F002         	movff	_MQGetPercentage$2056+1,___fladd@b+1
  9526  0062D0  C0DA  F003         	movff	_MQGetPercentage$2056+2,___fladd@b+2
  9527  0062D4  C0DB  F004         	movff	_MQGetPercentage$2056+3,___fladd@b+3
  9528  0062D8  EC16  F025         	call	___fladd	;wreg free
  9529  0062DC  C001  F0DC         	movff	?___fladd,_MQGetPercentage$2057
  9530  0062E0  C002  F0DD         	movff	?___fladd+1,_MQGetPercentage$2057+1
  9531  0062E4  C003  F0DE         	movff	?___fladd+2,_MQGetPercentage$2057+2
  9532  0062E8  C004  F0DF         	movff	?___fladd+3,_MQGetPercentage$2057+3
  9533                           
  9534                           ;setting_hardaware/adc.c: 25:   return (powf(10,(((logf(rs_ro_ratio)-pcurve[1])/pcurve[2
      +                          ]) + pcurve[0])));
  9535  0062EC  C0DC  F0C6         	movff	_MQGetPercentage$2057,powf@y
  9536  0062F0  C0DD  F0C7         	movff	_MQGetPercentage$2057+1,powf@y+1
  9537  0062F4  C0DE  F0C8         	movff	_MQGetPercentage$2057+2,powf@y+2
  9538  0062F8  C0DF  F0C9         	movff	_MQGetPercentage$2057+3,powf@y+3
  9539  0062FC  0E00               	movlw	0
  9540  0062FE  0100               	movlb	0	; () banked
  9541  006300  6FC2               	movwf	powf@x& (0+255),b
  9542  006302  0E00               	movlw	0
  9543  006304  6FC3               	movwf	(powf@x+1)& (0+255),b
  9544  006306  0E20               	movlw	32
  9545  006308  6FC4               	movwf	(powf@x+2)& (0+255),b
  9546  00630A  0E41               	movlw	65
  9547  00630C  6FC5               	movwf	(powf@x+3)& (0+255),b
  9548  00630E  EC66  F003         	call	_powf	;wreg free
  9549  006312  C0C2  F0CA         	movff	?_powf,___fltol@f1
  9550  006316  C0C3  F0CB         	movff	?_powf+1,___fltol@f1+1
  9551  00631A  C0C4  F0CC         	movff	?_powf+2,___fltol@f1+2
  9552  00631E  C0C5  F0CD         	movff	?_powf+3,___fltol@f1+3
  9553  006322  ECD2  F032         	call	___fltol	;wreg free
  9554  006326  C0CA  F0CE         	movff	?___fltol,?_MQGetPercentage
  9555  00632A  C0CB  F0CF         	movff	?___fltol+1,?_MQGetPercentage+1
  9556  00632E  0012               	return		;funcret
  9557  006330                     __end_of_MQGetPercentage:
  9558                           	opt callstack 0
  9559                           
  9560 ;; *************** function _powf *****************
  9561 ;; Defined at:
  9562 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\powf.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;  x               4   66[BANK0 ] float 
  9565 ;;  y               4   70[BANK0 ] float 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;  s2              4  140[BANK1 ] float 
  9568 ;;  s_h             4  108[BANK1 ] float 
  9569 ;;  t_h             4  104[BANK1 ] float 
  9570 ;;  t_l             4   52[BANK1 ] float 
  9571 ;;  s_l             4   48[BANK1 ] float 
  9572 ;;  __xc8_float_    4  184[BANK1 ] struct .
  9573 ;;  z               4  180[BANK1 ] float 
  9574 ;;  t               4  176[BANK1 ] float 
  9575 ;;  j               4  172[BANK1 ] long 
  9576 ;;  ix              4  168[BANK1 ] long 
  9577 ;;  k               4  160[BANK1 ] long 
  9578 ;;  p_h             4  156[BANK1 ] float 
  9579 ;;  is              4  148[BANK1 ] long 
  9580 ;;  iy              4  144[BANK1 ] long 
  9581 ;;  n               4  136[BANK1 ] long 
  9582 ;;  sn              4  132[BANK1 ] float 
  9583 ;;  t1              4  128[BANK1 ] float 
  9584 ;;  hy              4  124[BANK1 ] long 
  9585 ;;  v               4  120[BANK1 ] float 
  9586 ;;  u               4  116[BANK1 ] float 
  9587 ;;  ax              4  112[BANK1 ] float 
  9588 ;;  p_l             4  100[BANK1 ] float 
  9589 ;;  hx              4   96[BANK1 ] long 
  9590 ;;  s               4   84[BANK1 ] float 
  9591 ;;  yisint          4   80[BANK1 ] long 
  9592 ;;  r               4   76[BANK1 ] float 
  9593 ;;  w               4   68[BANK1 ] float 
  9594 ;;  i               4   44[BANK1 ] long 
  9595 ;;  y1              4   40[BANK1 ] float 
  9596 ;;  z_l             4   36[BANK1 ] float 
  9597 ;;  z_h             4   32[BANK1 ] float 
  9598 ;;  t2              4   28[BANK1 ] float 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  4   66[BANK0 ] float 
  9601 ;; Registers used:
  9602 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9608 ;;      Params:         0       8       0       0       0       0       0
  9609 ;;      Locals:         0       0     188       0       0       0       0
  9610 ;;      Temps:          9       0       0       0       0       0       0
  9611 ;;      Totals:         9       8     188       0       0       0       0
  9612 ;;Total ram usage:      205 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:    2
  9615 ;; This function calls:
  9616 ;;		___fladd
  9617 ;;		___fldiv
  9618 ;;		___flge
  9619 ;;		___flmul
  9620 ;;		___flneg
  9621 ;;		___flsub
  9622 ;;		___xxtofl
  9623 ;;		_fabsf
  9624 ;;		_scalbnf
  9625 ;;		_sqrtf
  9626 ;; This function is called by:
  9627 ;;		_MQGetPercentage
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text50
  9632  0006CC                     __ptext50:
  9633                           	opt callstack 0
  9634  0006CC                     _powf:
  9635                           	opt callstack 17
  9636                           
  9637                           ;incstack = 0
  9638  0006CC  C0C2  F1B8         	movff	powf@x,powf@__xc8_float_word
  9639  0006D0  C0C3  F1B9         	movff	powf@x+1,powf@__xc8_float_word+1
  9640  0006D4  C0C4  F1BA         	movff	powf@x+2,powf@__xc8_float_word+2
  9641  0006D8  C0C5  F1BB         	movff	powf@x+3,powf@__xc8_float_word+3
  9642  0006DC  C1B8  F160         	movff	powf@__xc8_float_word,powf@hx
  9643  0006E0  C1B9  F161         	movff	powf@__xc8_float_word+1,powf@hx+1
  9644  0006E4  C1BA  F162         	movff	powf@__xc8_float_word+2,powf@hx+2
  9645  0006E8  C1BB  F163         	movff	powf@__xc8_float_word+3,powf@hx+3
  9646  0006EC  C0C6  F1B8         	movff	powf@y,powf@__xc8_float_word
  9647  0006F0  C0C7  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  9648  0006F4  C0C8  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  9649  0006F8  C0C9  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  9650  0006FC  C1B8  F17C         	movff	powf@__xc8_float_word,powf@hy
  9651  000700  C1B9  F17D         	movff	powf@__xc8_float_word+1,powf@hy+1
  9652  000704  C1BA  F17E         	movff	powf@__xc8_float_word+2,powf@hy+2
  9653  000708  C1BB  F17F         	movff	powf@__xc8_float_word+3,powf@hy+3
  9654  00070C  0EFF               	movlw	255
  9655  00070E  0101               	movlb	1	; () banked
  9656  000710  1560               	andwf	powf@hx& (0+255),w,b
  9657  000712  6FA8               	movwf	powf@ix& (0+255),b
  9658  000714  0EFF               	movlw	255
  9659  000716  1561               	andwf	(powf@hx+1)& (0+255),w,b
  9660  000718  6FA9               	movwf	(powf@ix+1)& (0+255),b
  9661  00071A  0EFF               	movlw	255
  9662  00071C  1562               	andwf	(powf@hx+2)& (0+255),w,b
  9663  00071E  6FAA               	movwf	(powf@ix+2)& (0+255),b
  9664  000720  0E7F               	movlw	127
  9665  000722  1563               	andwf	(powf@hx+3)& (0+255),w,b
  9666  000724  6FAB               	movwf	(powf@ix+3)& (0+255),b
  9667  000726  0EFF               	movlw	255
  9668  000728  157C               	andwf	powf@hy& (0+255),w,b
  9669  00072A  6F90               	movwf	powf@iy& (0+255),b
  9670  00072C  0EFF               	movlw	255
  9671  00072E  157D               	andwf	(powf@hy+1)& (0+255),w,b
  9672  000730  6F91               	movwf	(powf@iy+1)& (0+255),b
  9673  000732  0EFF               	movlw	255
  9674  000734  157E               	andwf	(powf@hy+2)& (0+255),w,b
  9675  000736  6F92               	movwf	(powf@iy+2)& (0+255),b
  9676  000738  0E7F               	movlw	127
  9677  00073A  157F               	andwf	(powf@hy+3)& (0+255),w,b
  9678  00073C  6F93               	movwf	(powf@iy+3)& (0+255),b
  9679  00073E  5190               	movf	powf@iy& (0+255),w,b
  9680  000740  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  9681  000742  1192               	iorwf	(powf@iy+2)& (0+255),w,b
  9682  000744  1193               	iorwf	(powf@iy+3)& (0+255),w,b
  9683  000746  A4D8               	btfss	status,2,c
  9684  000748  D00A               	goto	i2l10423
  9685                           
  9686                           ; BSR set to: 1
  9687  00074A  0E00               	movlw	0
  9688  00074C  0100               	movlb	0	; () banked
  9689  00074E  6FC2               	movwf	?_powf& (0+255),b
  9690  000750  0E00               	movlw	0
  9691  000752  6FC3               	movwf	(?_powf+1)& (0+255),b
  9692  000754  0E80               	movlw	128
  9693  000756  6FC4               	movwf	(?_powf+2)& (0+255),b
  9694  000758  0E3F               	movlw	63
  9695  00075A  6FC5               	movwf	(?_powf+3)& (0+255),b
  9696  00075C  0012               	return	
  9697  00075E                     i2l10423:
  9698                           
  9699                           ; BSR set to: 1
  9700  00075E  0E80               	movlw	128
  9701  000760  1962               	xorwf	(powf@hx+2)& (0+255),w,b
  9702  000762  E110               	bnz	i2l10429
  9703  000764  0E3F               	movlw	63
  9704  000766  1963               	xorwf	(powf@hx+3)& (0+255),w,b
  9705  000768  1160               	iorwf	powf@hx& (0+255),w,b
  9706  00076A  1161               	iorwf	(powf@hx+1)& (0+255),w,b
  9707  00076C  A4D8               	btfss	status,2,c
  9708  00076E  D00A               	goto	i2l10429
  9709                           
  9710                           ; BSR set to: 1
  9711  000770  0E00               	movlw	0
  9712  000772  0100               	movlb	0	; () banked
  9713  000774  6FC2               	movwf	?_powf& (0+255),b
  9714  000776  0E00               	movlw	0
  9715  000778  6FC3               	movwf	(?_powf+1)& (0+255),b
  9716  00077A  0E80               	movlw	128
  9717  00077C  6FC4               	movwf	(?_powf+2)& (0+255),b
  9718  00077E  0E3F               	movlw	63
  9719  000780  6FC5               	movwf	(?_powf+3)& (0+255),b
  9720  000782  0012               	return	
  9721  000784                     i2l10429:
  9722                           
  9723                           ; BSR set to: 1
  9724  000784  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9725  000786  D009               	goto	i2u1388_40
  9726  000788  05A8               	decf	powf@ix& (0+255),w,b
  9727  00078A  0E00               	movlw	0
  9728  00078C  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  9729  00078E  0E80               	movlw	128
  9730  000790  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  9731  000792  0E7F               	movlw	127
  9732  000794  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  9733  000796  B0D8               	btfsc	status,0,c
  9734  000798  D00B               	goto	i2u1389_40
  9735  00079A                     i2u1388_40:
  9736                           
  9737                           ; BSR set to: 1
  9738  00079A  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  9739  00079C  D024               	goto	i2l10437
  9740  00079E  0590               	decf	powf@iy& (0+255),w,b
  9741  0007A0  0E00               	movlw	0
  9742  0007A2  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  9743  0007A4  0E80               	movlw	128
  9744  0007A6  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  9745  0007A8  0E7F               	movlw	127
  9746  0007AA  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  9747  0007AC  A0D8               	btfss	status,0,c
  9748  0007AE  D01B               	goto	i2l10437
  9749  0007B0                     i2u1389_40:
  9750                           
  9751                           ; BSR set to: 1
  9752  0007B0  C0C2  F001         	movff	powf@x,___fladd@b
  9753  0007B4  C0C3  F002         	movff	powf@x+1,___fladd@b+1
  9754  0007B8  C0C4  F003         	movff	powf@x+2,___fladd@b+2
  9755  0007BC  C0C5  F004         	movff	powf@x+3,___fladd@b+3
  9756  0007C0  C0C6  F005         	movff	powf@y,___fladd@a
  9757  0007C4  C0C7  F006         	movff	powf@y+1,___fladd@a+1
  9758  0007C8  C0C8  F007         	movff	powf@y+2,___fladd@a+2
  9759  0007CC  C0C9  F008         	movff	powf@y+3,___fladd@a+3
  9760  0007D0  EC16  F025         	call	___fladd	;wreg free
  9761  0007D4  C001  F0C2         	movff	?___fladd,?_powf
  9762  0007D8  C002  F0C3         	movff	?___fladd+1,?_powf+1
  9763  0007DC  C003  F0C4         	movff	?___fladd+2,?_powf+2
  9764  0007E0  C004  F0C5         	movff	?___fladd+3,?_powf+3
  9765  0007E4  0012               	return	
  9766  0007E6                     i2l10437:
  9767                           
  9768                           ; BSR set to: 1
  9769  0007E6  0E00               	movlw	0
  9770  0007E8  6F50               	movwf	powf@yisint& (0+255),b
  9771  0007EA  0E00               	movlw	0
  9772  0007EC  6F51               	movwf	(powf@yisint+1)& (0+255),b
  9773  0007EE  0E00               	movlw	0
  9774  0007F0  6F52               	movwf	(powf@yisint+2)& (0+255),b
  9775  0007F2  0E00               	movlw	0
  9776  0007F4  6F53               	movwf	(powf@yisint+3)& (0+255),b
  9777                           
  9778                           ; BSR set to: 1
  9779  0007F6  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  9780  0007F8  D090               	goto	i2l1380
  9781                           
  9782                           ; BSR set to: 1
  9783  0007FA  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  9784  0007FC  D00E               	goto	i2l10445
  9785  0007FE  0E80               	movlw	128
  9786  000800  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  9787  000802  0E4B               	movlw	75
  9788  000804  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  9789  000806  A0D8               	btfss	status,0,c
  9790  000808  D008               	goto	i2l10445
  9791                           
  9792                           ; BSR set to: 1
  9793  00080A  0E02               	movlw	2
  9794  00080C  6F50               	movwf	powf@yisint& (0+255),b
  9795  00080E  0E00               	movlw	0
  9796  000810  6F51               	movwf	(powf@yisint+1)& (0+255),b
  9797  000812  0E00               	movlw	0
  9798  000814  6F52               	movwf	(powf@yisint+2)& (0+255),b
  9799  000816  0E00               	movlw	0
  9800  000818  D07F               	goto	L8
  9801  00081A                     i2l10445:
  9802                           
  9803                           ; BSR set to: 1
  9804  00081A  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  9805  00081C  D07E               	goto	i2l1380
  9806  00081E  0E80               	movlw	128
  9807  000820  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  9808  000822  0E3F               	movlw	63
  9809  000824  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  9810  000826  A0D8               	btfss	status,0,c
  9811  000828  D078               	goto	i2l1380
  9812                           
  9813                           ; BSR set to: 1
  9814  00082A  0E17               	movlw	23
  9815  00082C  6E6F               	movwf	??_powf^0,c
  9816  00082E  C190  F070         	movff	powf@iy,??_powf+1
  9817  000832  C191  F071         	movff	powf@iy+1,??_powf+2
  9818  000836  C192  F072         	movff	powf@iy+2,??_powf+3
  9819  00083A  C193  F073         	movff	powf@iy+3,??_powf+4
  9820  00083E                     i2u1393_45:
  9821  00083E  666F               	tstfsz	??_powf^0,c
  9822  000840  D001               	goto	i2u1393_46
  9823  000842  D007               	goto	i2u1393_47
  9824  000844                     i2u1393_46:
  9825  000844  3473               	rlcf	(??_powf+4)^0,w,c
  9826  000846  3273               	rrcf	(??_powf+4)^0,f,c
  9827  000848  3272               	rrcf	(??_powf+3)^0,f,c
  9828  00084A  3271               	rrcf	(??_powf+2)^0,f,c
  9829  00084C  3270               	rrcf	(??_powf+1)^0,f,c
  9830  00084E  2E6F               	decfsz	??_powf^0,f,c
  9831  000850  D7F6               	goto	i2u1393_45
  9832  000852                     i2u1393_47:
  9833  000852  0E81               	movlw	129
  9834  000854  2470               	addwf	(??_powf+1)^0,w,c
  9835  000856  0101               	movlb	1	; () banked
  9836  000858  6FA0               	movwf	powf@k& (0+255),b
  9837  00085A  0EFF               	movlw	255
  9838  00085C  2071               	addwfc	(??_powf+2)^0,w,c
  9839  00085E  6FA1               	movwf	(powf@k+1)& (0+255),b
  9840  000860  0EFF               	movlw	255
  9841  000862  2072               	addwfc	(??_powf+3)^0,w,c
  9842  000864  6FA2               	movwf	(powf@k+2)& (0+255),b
  9843  000866  0EFF               	movlw	255
  9844  000868  2073               	addwfc	(??_powf+4)^0,w,c
  9845  00086A  6FA3               	movwf	(powf@k+3)& (0+255),b
  9846  00086C  51A0               	movf	powf@k& (0+255),w,b
  9847  00086E  0817               	sublw	23
  9848  000870  6E6F               	movwf	??_powf^0,c
  9849  000872  C190  F070         	movff	powf@iy,??_powf+1
  9850  000876  C191  F071         	movff	powf@iy+1,??_powf+2
  9851  00087A  C192  F072         	movff	powf@iy+2,??_powf+3
  9852  00087E  C193  F073         	movff	powf@iy+3,??_powf+4
  9853  000882                     i2u1394_45:
  9854  000882  666F               	tstfsz	??_powf^0,c
  9855  000884  D001               	goto	i2u1394_46
  9856  000886  D007               	goto	i2u1394_47
  9857  000888                     i2u1394_46:
  9858  000888  3473               	rlcf	(??_powf+4)^0,w,c
  9859  00088A  3273               	rrcf	(??_powf+4)^0,f,c
  9860  00088C  3272               	rrcf	(??_powf+3)^0,f,c
  9861  00088E  3271               	rrcf	(??_powf+2)^0,f,c
  9862  000890  3270               	rrcf	(??_powf+1)^0,f,c
  9863  000892  2E6F               	decfsz	??_powf^0,f,c
  9864  000894  D7F6               	goto	i2u1394_45
  9865  000896                     i2u1394_47:
  9866  000896  C070  F1AC         	movff	??_powf+1,powf@j
  9867  00089A  C071  F1AD         	movff	??_powf+2,powf@j+1
  9868  00089E  C072  F1AE         	movff	??_powf+3,powf@j+2
  9869  0008A2  C073  F1AF         	movff	??_powf+4,powf@j+3
  9870  0008A6  0101               	movlb	1	; () banked
  9871  0008A8  51A0               	movf	powf@k& (0+255),w,b
  9872  0008AA  0817               	sublw	23
  9873  0008AC  6E6F               	movwf	??_powf^0,c
  9874  0008AE  C1AC  F070         	movff	powf@j,??_powf+1
  9875  0008B2  C1AD  F071         	movff	powf@j+1,??_powf+2
  9876  0008B6  C1AE  F072         	movff	powf@j+2,??_powf+3
  9877  0008BA  C1AF  F073         	movff	powf@j+3,??_powf+4
  9878  0008BE  2A6F               	incf	??_powf^0,f,c
  9879  0008C0  D005               	goto	i2u1395_40
  9880  0008C2                     i2u1395_45:
  9881  0008C2  90D8               	bcf	status,0,c
  9882  0008C4  3670               	rlcf	(??_powf+1)^0,f,c
  9883  0008C6  3671               	rlcf	(??_powf+2)^0,f,c
  9884  0008C8  3672               	rlcf	(??_powf+3)^0,f,c
  9885  0008CA  3673               	rlcf	(??_powf+4)^0,f,c
  9886  0008CC                     i2u1395_40:
  9887  0008CC  2E6F               	decfsz	??_powf^0,f,c
  9888  0008CE  D7F9               	goto	i2u1395_45
  9889  0008D0  5190               	movf	powf@iy& (0+255),w,b
  9890  0008D2  1870               	xorwf	(??_powf+1)^0,w,c
  9891  0008D4  E122               	bnz	i2l1380
  9892  0008D6  5191               	movf	(powf@iy+1)& (0+255),w,b
  9893  0008D8  1871               	xorwf	(??_powf+2)^0,w,c
  9894  0008DA  E11F               	bnz	i2l1380
  9895  0008DC  5192               	movf	(powf@iy+2)& (0+255),w,b
  9896  0008DE  1872               	xorwf	(??_powf+3)^0,w,c
  9897  0008E0  E11C               	bnz	i2l1380
  9898  0008E2  5193               	movf	(powf@iy+3)& (0+255),w,b
  9899  0008E4  1873               	xorwf	(??_powf+4)^0,w,c
  9900  0008E6  A4D8               	btfss	status,2,c
  9901  0008E8  D018               	goto	i2l1380
  9902                           
  9903                           ; BSR set to: 1
  9904  0008EA  0E01               	movlw	1
  9905  0008EC  15AC               	andwf	powf@j& (0+255),w,b
  9906  0008EE  6E6F               	movwf	??_powf^0,c
  9907  0008F0  0E00               	movlw	0
  9908  0008F2  15AD               	andwf	(powf@j+1)& (0+255),w,b
  9909  0008F4  6E70               	movwf	(??_powf+1)^0,c
  9910  0008F6  0E00               	movlw	0
  9911  0008F8  15AE               	andwf	(powf@j+2)& (0+255),w,b
  9912  0008FA  6E71               	movwf	(??_powf+2)^0,c
  9913  0008FC  0E00               	movlw	0
  9914  0008FE  15AF               	andwf	(powf@j+3)& (0+255),w,b
  9915  000900  6E72               	movwf	(??_powf+3)^0,c
  9916  000902  506F               	movf	??_powf^0,w,c
  9917  000904  0802               	sublw	2
  9918  000906  6F50               	movwf	powf@yisint& (0+255),b
  9919  000908  0E00               	movlw	0
  9920  00090A  5470               	subfwb	(??_powf+1)^0,w,c
  9921  00090C  6F51               	movwf	(powf@yisint+1)& (0+255),b
  9922  00090E  0E00               	movlw	0
  9923  000910  5471               	subfwb	(??_powf+2)^0,w,c
  9924  000912  6F52               	movwf	(powf@yisint+2)& (0+255),b
  9925  000914  0E00               	movlw	0
  9926  000916  5472               	subfwb	(??_powf+3)^0,w,c
  9927  000918                     L8:
  9928  000918  6F53               	movwf	(powf@yisint+3)& (0+255),b
  9929  00091A                     i2l1380:
  9930                           
  9931                           ; BSR set to: 1
  9932  00091A  0E80               	movlw	128
  9933  00091C  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  9934  00091E  E158               	bnz	i2l10475
  9935  000920  0E7F               	movlw	127
  9936  000922  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  9937  000924  1190               	iorwf	powf@iy& (0+255),w,b
  9938  000926  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  9939  000928  A4D8               	btfss	status,2,c
  9940  00092A  D052               	goto	i2l10475
  9941                           
  9942                           ; BSR set to: 1
  9943  00092C  0E80               	movlw	128
  9944  00092E  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  9945  000930  E110               	bnz	i2l10459
  9946  000932  0E3F               	movlw	63
  9947  000934  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  9948  000936  11A8               	iorwf	powf@ix& (0+255),w,b
  9949  000938  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  9950  00093A  A4D8               	btfss	status,2,c
  9951  00093C  D00A               	goto	i2l10459
  9952                           
  9953                           ; BSR set to: 1
  9954  00093E  0E00               	movlw	0
  9955  000940  0100               	movlb	0	; () banked
  9956  000942  6FC2               	movwf	?_powf& (0+255),b
  9957  000944  0E00               	movlw	0
  9958  000946  6FC3               	movwf	(?_powf+1)& (0+255),b
  9959  000948  0E80               	movlw	128
  9960  00094A  6FC4               	movwf	(?_powf+2)& (0+255),b
  9961  00094C  0E3F               	movlw	63
  9962  00094E  6FC5               	movwf	(?_powf+3)& (0+255),b
  9963  000950  0012               	return	
  9964  000952                     i2l10459:
  9965                           
  9966                           ; BSR set to: 1
  9967  000952  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9968  000954  D01E               	goto	i2l10467
  9969  000956  05A8               	decf	powf@ix& (0+255),w,b
  9970  000958  0E00               	movlw	0
  9971  00095A  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  9972  00095C  0E80               	movlw	128
  9973  00095E  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  9974  000960  0E3F               	movlw	63
  9975  000962  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  9976  000964  A0D8               	btfss	status,0,c
  9977  000966  D015               	goto	i2l10467
  9978                           
  9979                           ; BSR set to: 1
  9980  000968  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  9981  00096A  D00A               	goto	i2l1390
  9982                           
  9983                           ; BSR set to: 1
  9984  00096C  0E00               	movlw	0
  9985  00096E  0100               	movlb	0	; () banked
  9986  000970  6FC2               	movwf	?_powf& (0+255),b
  9987  000972  0E00               	movlw	0
  9988  000974  6FC3               	movwf	(?_powf+1)& (0+255),b
  9989  000976  0E00               	movlw	0
  9990  000978  6FC4               	movwf	(?_powf+2)& (0+255),b
  9991  00097A  0E00               	movlw	0
  9992  00097C  6FC5               	movwf	(?_powf+3)& (0+255),b
  9993  00097E  0012               	return	
  9994  000980                     i2l1390:
  9995                           
  9996                           ; BSR set to: 1
  9997  000980  C0C6  F0C2         	movff	powf@y,?_powf
  9998  000984  C0C7  F0C3         	movff	powf@y+1,?_powf+1
  9999  000988  C0C8  F0C4         	movff	powf@y+2,?_powf+2
 10000  00098C  C0C9  F0C5         	movff	powf@y+3,?_powf+3
 10001  000990  0012               	return	
 10002  000992                     i2l10467:
 10003                           
 10004                           ; BSR set to: 1
 10005  000992  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
 10006  000994  D013               	goto	i2l10471
 10007                           
 10008                           ; BSR set to: 1
 10009  000996  C0C6  F001         	movff	powf@y,___flneg@f1
 10010  00099A  C0C7  F002         	movff	powf@y+1,___flneg@f1+1
 10011  00099E  C0C8  F003         	movff	powf@y+2,___flneg@f1+2
 10012  0009A2  C0C9  F004         	movff	powf@y+3,___flneg@f1+3
 10013  0009A6  ECD3  F037         	call	___flneg	;wreg free
 10014  0009AA  C001  F0C2         	movff	?___flneg,?_powf
 10015  0009AE  C002  F0C3         	movff	?___flneg+1,?_powf+1
 10016  0009B2  C003  F0C4         	movff	?___flneg+2,?_powf+2
 10017  0009B6  C004  F0C5         	movff	?___flneg+3,?_powf+3
 10018  0009BA  0012               	return	
 10019  0009BC                     i2l10471:
 10020                           
 10021                           ; BSR set to: 1
 10022  0009BC  0E00               	movlw	0
 10023  0009BE  0100               	movlb	0	; () banked
 10024  0009C0  6FC2               	movwf	?_powf& (0+255),b
 10025  0009C2  0E00               	movlw	0
 10026  0009C4  6FC3               	movwf	(?_powf+1)& (0+255),b
 10027  0009C6  0E00               	movlw	0
 10028  0009C8  6FC4               	movwf	(?_powf+2)& (0+255),b
 10029  0009CA  0E00               	movlw	0
 10030  0009CC  6FC5               	movwf	(?_powf+3)& (0+255),b
 10031  0009CE  0012               	return	
 10032  0009D0                     i2l10475:
 10033                           
 10034                           ; BSR set to: 1
 10035  0009D0  0E80               	movlw	128
 10036  0009D2  1992               	xorwf	(powf@iy+2)& (0+255),w,b
 10037  0009D4  E12C               	bnz	i2l10481
 10038  0009D6  0E3F               	movlw	63
 10039  0009D8  1993               	xorwf	(powf@iy+3)& (0+255),w,b
 10040  0009DA  1190               	iorwf	powf@iy& (0+255),w,b
 10041  0009DC  1191               	iorwf	(powf@iy+1)& (0+255),w,b
 10042  0009DE  A4D8               	btfss	status,2,c
 10043  0009E0  D026               	goto	i2l10481
 10044                           
 10045                           ; BSR set to: 1
 10046  0009E2  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
 10047  0009E4  D01B               	goto	i2l1400
 10048                           
 10049                           ; BSR set to: 1
 10050  0009E6  0E00               	movlw	0
 10051  0009E8  6E32               	movwf	___fldiv@b^0,c
 10052  0009EA  0E00               	movlw	0
 10053  0009EC  6E33               	movwf	(___fldiv@b+1)^0,c
 10054  0009EE  0E80               	movlw	128
 10055  0009F0  6E34               	movwf	(___fldiv@b+2)^0,c
 10056  0009F2  0E3F               	movlw	63
 10057  0009F4  6E35               	movwf	(___fldiv@b+3)^0,c
 10058  0009F6  C0C2  F036         	movff	powf@x,___fldiv@a
 10059  0009FA  C0C3  F037         	movff	powf@x+1,___fldiv@a+1
 10060  0009FE  C0C4  F038         	movff	powf@x+2,___fldiv@a+2
 10061  000A02  C0C5  F039         	movff	powf@x+3,___fldiv@a+3
 10062  000A06  EC9C  F026         	call	___fldiv	;wreg free
 10063  000A0A  C032  F0C2         	movff	?___fldiv,?_powf
 10064  000A0E  C033  F0C3         	movff	?___fldiv+1,?_powf+1
 10065  000A12  C034  F0C4         	movff	?___fldiv+2,?_powf+2
 10066  000A16  C035  F0C5         	movff	?___fldiv+3,?_powf+3
 10067  000A1A  0012               	return	
 10068  000A1C                     i2l1400:
 10069                           
 10070                           ; BSR set to: 1
 10071  000A1C  C0C2  F0C2         	movff	powf@x,?_powf
 10072  000A20  C0C3  F0C3         	movff	powf@x+1,?_powf+1
 10073  000A24  C0C4  F0C4         	movff	powf@x+2,?_powf+2
 10074  000A28  C0C5  F0C5         	movff	powf@x+3,?_powf+3
 10075  000A2C  0012               	return	
 10076  000A2E                     i2l10481:
 10077                           
 10078                           ; BSR set to: 1
 10079  000A2E  0E40               	movlw	64
 10080  000A30  197F               	xorwf	(powf@hy+3)& (0+255),w,b
 10081  000A32  117C               	iorwf	powf@hy& (0+255),w,b
 10082  000A34  117D               	iorwf	(powf@hy+1)& (0+255),w,b
 10083  000A36  117E               	iorwf	(powf@hy+2)& (0+255),w,b
 10084  000A38  A4D8               	btfss	status,2,c
 10085  000A3A  D01B               	goto	i2l10487
 10086                           
 10087                           ; BSR set to: 1
 10088  000A3C  C0C2  F011         	movff	powf@x,___flmul@b
 10089  000A40  C0C3  F012         	movff	powf@x+1,___flmul@b+1
 10090  000A44  C0C4  F013         	movff	powf@x+2,___flmul@b+2
 10091  000A48  C0C5  F014         	movff	powf@x+3,___flmul@b+3
 10092  000A4C  C0C2  F015         	movff	powf@x,___flmul@a
 10093  000A50  C0C3  F016         	movff	powf@x+1,___flmul@a+1
 10094  000A54  C0C4  F017         	movff	powf@x+2,___flmul@a+2
 10095  000A58  C0C5  F018         	movff	powf@x+3,___flmul@a+3
 10096  000A5C  EC6D  F023         	call	___flmul	;wreg free
 10097  000A60  C011  F0C2         	movff	?___flmul,?_powf
 10098  000A64  C012  F0C3         	movff	?___flmul+1,?_powf+1
 10099  000A68  C013  F0C4         	movff	?___flmul+2,?_powf+2
 10100  000A6C  C014  F0C5         	movff	?___flmul+3,?_powf+3
 10101  000A70  0012               	return	
 10102  000A72                     i2l10487:
 10103                           
 10104                           ; BSR set to: 1
 10105  000A72  0E3F               	movlw	63
 10106  000A74  197F               	xorwf	(powf@hy+3)& (0+255),w,b
 10107  000A76  117C               	iorwf	powf@hy& (0+255),w,b
 10108  000A78  117D               	iorwf	(powf@hy+1)& (0+255),w,b
 10109  000A7A  117E               	iorwf	(powf@hy+2)& (0+255),w,b
 10110  000A7C  B4D8               	btfsc	status,2,c
 10111                           
 10112                           ; BSR set to: 1
 10113  000A7E  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
 10114  000A80  D013               	goto	i2l10495
 10115                           
 10116                           ; BSR set to: 1
 10117  000A82  C0C2  F03E         	movff	powf@x,sqrtf@x
 10118  000A86  C0C3  F03F         	movff	powf@x+1,sqrtf@x+1
 10119  000A8A  C0C4  F040         	movff	powf@x+2,sqrtf@x+2
 10120  000A8E  C0C5  F041         	movff	powf@x+3,sqrtf@x+3
 10121  000A92  EC5A  F021         	call	_sqrtf	;wreg free
 10122  000A96  C03E  F0C2         	movff	?_sqrtf,?_powf
 10123  000A9A  C03F  F0C3         	movff	?_sqrtf+1,?_powf+1
 10124  000A9E  C040  F0C4         	movff	?_sqrtf+2,?_powf+2
 10125  000AA2  C041  F0C5         	movff	?_sqrtf+3,?_powf+3
 10126  000AA6  0012               	return	
 10127  000AA8                     i2l10495:
 10128                           
 10129                           ; BSR set to: 1
 10130  000AA8  C0C2  F001         	movff	powf@x,fabsf@x
 10131  000AAC  C0C3  F002         	movff	powf@x+1,fabsf@x+1
 10132  000AB0  C0C4  F003         	movff	powf@x+2,fabsf@x+2
 10133  000AB4  C0C5  F004         	movff	powf@x+3,fabsf@x+3
 10134  000AB8  EC29  F037         	call	_fabsf	;wreg free
 10135  000ABC  C001  F170         	movff	?_fabsf,powf@ax
 10136  000AC0  C002  F171         	movff	?_fabsf+1,powf@ax+1
 10137  000AC4  C003  F172         	movff	?_fabsf+2,powf@ax+2
 10138  000AC8  C004  F173         	movff	?_fabsf+3,powf@ax+3
 10139  000ACC  0E80               	movlw	128
 10140  000ACE  0101               	movlb	1	; () banked
 10141  000AD0  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
 10142  000AD2  E106               	bnz	i2u1407_40
 10143  000AD4  0E7F               	movlw	127
 10144  000AD6  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
 10145  000AD8  11A8               	iorwf	powf@ix& (0+255),w,b
 10146  000ADA  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
 10147  000ADC  B4D8               	btfsc	status,2,c
 10148  000ADE  D00F               	goto	i2u1409_40
 10149  000AE0                     i2u1407_40:
 10150                           
 10151                           ; BSR set to: 1
 10152  000AE0  51A8               	movf	powf@ix& (0+255),w,b
 10153  000AE2  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
 10154  000AE4  11AA               	iorwf	(powf@ix+2)& (0+255),w,b
 10155  000AE6  11AB               	iorwf	(powf@ix+3)& (0+255),w,b
 10156  000AE8  B4D8               	btfsc	status,2,c
 10157  000AEA  D009               	goto	i2u1409_40
 10158                           
 10159                           ; BSR set to: 1
 10160  000AEC  0E80               	movlw	128
 10161  000AEE  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
 10162  000AF0  E105               	bnz	i2u1409_41
 10163  000AF2  0E3F               	movlw	63
 10164  000AF4  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
 10165  000AF6  11A8               	iorwf	powf@ix& (0+255),w,b
 10166  000AF8  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
 10167  000AFA  A4D8               	btfss	status,2,c
 10168  000AFC                     i2u1409_41:
 10169  000AFC  D0A5               	goto	i2l10521
 10170  000AFE                     i2u1409_40:
 10171                           
 10172                           ; BSR set to: 1
 10173  000AFE  C170  F1B4         	movff	powf@ax,powf@z
 10174  000B02  C171  F1B5         	movff	powf@ax+1,powf@z+1
 10175  000B06  C172  F1B6         	movff	powf@ax+2,powf@z+2
 10176  000B0A  C173  F1B7         	movff	powf@ax+3,powf@z+3
 10177                           
 10178                           ; BSR set to: 1
 10179  000B0E  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
 10180  000B10  D01A               	goto	i2l10507
 10181                           
 10182                           ; BSR set to: 1
 10183  000B12  0E00               	movlw	0
 10184  000B14  6E32               	movwf	___fldiv@b^0,c
 10185  000B16  0E00               	movlw	0
 10186  000B18  6E33               	movwf	(___fldiv@b+1)^0,c
 10187  000B1A  0E80               	movlw	128
 10188  000B1C  6E34               	movwf	(___fldiv@b+2)^0,c
 10189  000B1E  0E3F               	movlw	63
 10190  000B20  6E35               	movwf	(___fldiv@b+3)^0,c
 10191  000B22  C1B4  F036         	movff	powf@z,___fldiv@a
 10192  000B26  C1B5  F037         	movff	powf@z+1,___fldiv@a+1
 10193  000B2A  C1B6  F038         	movff	powf@z+2,___fldiv@a+2
 10194  000B2E  C1B7  F039         	movff	powf@z+3,___fldiv@a+3
 10195  000B32  EC9C  F026         	call	___fldiv	;wreg free
 10196  000B36  C032  F1B4         	movff	?___fldiv,powf@z
 10197  000B3A  C033  F1B5         	movff	?___fldiv+1,powf@z+1
 10198  000B3E  C034  F1B6         	movff	?___fldiv+2,powf@z+2
 10199  000B42  C035  F1B7         	movff	?___fldiv+3,powf@z+3
 10200  000B46                     i2l10507:
 10201  000B46  0101               	movlb	1	; () banked
 10202  000B48  AF63               	btfss	(powf@hx+3)& (0+255),7,b
 10203  000B4A  D075               	goto	i2l10517
 10204                           
 10205                           ; BSR set to: 1
 10206  000B4C  0E00               	movlw	0
 10207  000B4E  25A8               	addwf	powf@ix& (0+255),w,b
 10208  000B50  6E6F               	movwf	??_powf^0,c
 10209  000B52  0E00               	movlw	0
 10210  000B54  21A9               	addwfc	(powf@ix+1)& (0+255),w,b
 10211  000B56  6E70               	movwf	(??_powf+1)^0,c
 10212  000B58  0E80               	movlw	128
 10213  000B5A  21AA               	addwfc	(powf@ix+2)& (0+255),w,b
 10214  000B5C  6E71               	movwf	(??_powf+2)^0,c
 10215  000B5E  0EC0               	movlw	192
 10216  000B60  21AB               	addwfc	(powf@ix+3)& (0+255),w,b
 10217  000B62  6E72               	movwf	(??_powf+3)^0,c
 10218  000B64  5150               	movf	powf@yisint& (0+255),w,b
 10219  000B66  106F               	iorwf	??_powf^0,w,c
 10220  000B68  6E73               	movwf	(??_powf+4)^0,c
 10221  000B6A  5151               	movf	(powf@yisint+1)& (0+255),w,b
 10222  000B6C  1070               	iorwf	(??_powf+1)^0,w,c
 10223  000B6E  6E74               	movwf	(??_powf+5)^0,c
 10224  000B70  5152               	movf	(powf@yisint+2)& (0+255),w,b
 10225  000B72  1071               	iorwf	(??_powf+2)^0,w,c
 10226  000B74  6E75               	movwf	(??_powf+6)^0,c
 10227  000B76  5153               	movf	(powf@yisint+3)& (0+255),w,b
 10228  000B78  1072               	iorwf	(??_powf+3)^0,w,c
 10229  000B7A  6E76               	movwf	(??_powf+7)^0,c
 10230  000B7C  5073               	movf	(??_powf+4)^0,w,c
 10231  000B7E  1074               	iorwf	(??_powf+5)^0,w,c
 10232  000B80  1075               	iorwf	(??_powf+6)^0,w,c
 10233  000B82  1076               	iorwf	(??_powf+7)^0,w,c
 10234  000B84  A4D8               	btfss	status,2,c
 10235  000B86  D03F               	goto	i2l10513
 10236                           
 10237                           ; BSR set to: 1
 10238  000B88  C1B4  F02E         	movff	powf@z,___flsub@a
 10239  000B8C  C1B5  F02F         	movff	powf@z+1,___flsub@a+1
 10240  000B90  C1B6  F030         	movff	powf@z+2,___flsub@a+2
 10241  000B94  C1B7  F031         	movff	powf@z+3,___flsub@a+3
 10242  000B98  C1B4  F02A         	movff	powf@z,___flsub@b
 10243  000B9C  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
 10244  000BA0  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
 10245  000BA4  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
 10246  000BA8  ECAE  F036         	call	___flsub	;wreg free
 10247  000BAC  C02A  F032         	movff	?___flsub,___fldiv@b
 10248  000BB0  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 10249  000BB4  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 10250  000BB8  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 10251  000BBC  C1B4  F02E         	movff	powf@z,___flsub@a
 10252  000BC0  C1B5  F02F         	movff	powf@z+1,___flsub@a+1
 10253  000BC4  C1B6  F030         	movff	powf@z+2,___flsub@a+2
 10254  000BC8  C1B7  F031         	movff	powf@z+3,___flsub@a+3
 10255  000BCC  C1B4  F02A         	movff	powf@z,___flsub@b
 10256  000BD0  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
 10257  000BD4  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
 10258  000BD8  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
 10259  000BDC  ECAE  F036         	call	___flsub	;wreg free
 10260  000BE0  C02A  F036         	movff	?___flsub,___fldiv@a
 10261  000BE4  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 10262  000BE8  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 10263  000BEC  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 10264  000BF0  EC9C  F026         	call	___fldiv	;wreg free
 10265  000BF4  C032  F1B4         	movff	?___fldiv,powf@z
 10266  000BF8  C033  F1B5         	movff	?___fldiv+1,powf@z+1
 10267  000BFC  C034  F1B6         	movff	?___fldiv+2,powf@z+2
 10268  000C00  C035  F1B7         	movff	?___fldiv+3,powf@z+3
 10269  000C04  D018               	goto	i2l10517
 10270  000C06                     i2l10513:
 10271                           
 10272                           ; BSR set to: 1
 10273  000C06  0550               	decf	powf@yisint& (0+255),w,b
 10274  000C08  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
 10275  000C0A  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
 10276  000C0C  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
 10277  000C0E  A4D8               	btfss	status,2,c
 10278  000C10  D012               	goto	i2l10517
 10279                           
 10280                           ; BSR set to: 1
 10281  000C12  C1B4  F001         	movff	powf@z,___flneg@f1
 10282  000C16  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
 10283  000C1A  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
 10284  000C1E  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
 10285  000C22  ECD3  F037         	call	___flneg	;wreg free
 10286  000C26  C001  F1B4         	movff	?___flneg,powf@z
 10287  000C2A  C002  F1B5         	movff	?___flneg+1,powf@z+1
 10288  000C2E  C003  F1B6         	movff	?___flneg+2,powf@z+2
 10289  000C32  C004  F1B7         	movff	?___flneg+3,powf@z+3
 10290  000C36                     i2l10517:
 10291  000C36  C1B4  F0C2         	movff	powf@z,?_powf
 10292  000C3A  C1B5  F0C3         	movff	powf@z+1,?_powf+1
 10293  000C3E  C1B6  F0C4         	movff	powf@z+2,?_powf+2
 10294  000C42  C1B7  F0C5         	movff	powf@z+3,?_powf+3
 10295  000C46  0012               	return	
 10296  000C48                     i2l10521:
 10297                           
 10298                           ; BSR set to: 1
 10299  000C48  0E00               	movlw	0
 10300  000C4A  6F84               	movwf	powf@sn& (0+255),b
 10301  000C4C  0E00               	movlw	0
 10302  000C4E  6F85               	movwf	(powf@sn+1)& (0+255),b
 10303  000C50  0E80               	movlw	128
 10304  000C52  6F86               	movwf	(powf@sn+2)& (0+255),b
 10305  000C54  0E3F               	movlw	63
 10306  000C56  6F87               	movwf	(powf@sn+3)& (0+255),b
 10307                           
 10308                           ; BSR set to: 1
 10309  000C58  AF63               	btfss	(powf@hx+3)& (0+255),7,b
 10310  000C5A  D053               	goto	i2l10535
 10311                           
 10312                           ; BSR set to: 1
 10313  000C5C  5150               	movf	powf@yisint& (0+255),w,b
 10314  000C5E  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
 10315  000C60  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
 10316  000C62  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
 10317  000C64  A4D8               	btfss	status,2,c
 10318  000C66  D03F               	goto	i2l10531
 10319                           
 10320                           ; BSR set to: 1
 10321  000C68  C0C2  F02E         	movff	powf@x,___flsub@a
 10322  000C6C  C0C3  F02F         	movff	powf@x+1,___flsub@a+1
 10323  000C70  C0C4  F030         	movff	powf@x+2,___flsub@a+2
 10324  000C74  C0C5  F031         	movff	powf@x+3,___flsub@a+3
 10325  000C78  C0C2  F02A         	movff	powf@x,___flsub@b
 10326  000C7C  C0C3  F02B         	movff	powf@x+1,___flsub@b+1
 10327  000C80  C0C4  F02C         	movff	powf@x+2,___flsub@b+2
 10328  000C84  C0C5  F02D         	movff	powf@x+3,___flsub@b+3
 10329  000C88  ECAE  F036         	call	___flsub	;wreg free
 10330  000C8C  C02A  F032         	movff	?___flsub,___fldiv@b
 10331  000C90  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 10332  000C94  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 10333  000C98  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 10334  000C9C  C0C2  F02E         	movff	powf@x,___flsub@a
 10335  000CA0  C0C3  F02F         	movff	powf@x+1,___flsub@a+1
 10336  000CA4  C0C4  F030         	movff	powf@x+2,___flsub@a+2
 10337  000CA8  C0C5  F031         	movff	powf@x+3,___flsub@a+3
 10338  000CAC  C0C2  F02A         	movff	powf@x,___flsub@b
 10339  000CB0  C0C3  F02B         	movff	powf@x+1,___flsub@b+1
 10340  000CB4  C0C4  F02C         	movff	powf@x+2,___flsub@b+2
 10341  000CB8  C0C5  F02D         	movff	powf@x+3,___flsub@b+3
 10342  000CBC  ECAE  F036         	call	___flsub	;wreg free
 10343  000CC0  C02A  F036         	movff	?___flsub,___fldiv@a
 10344  000CC4  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 10345  000CC8  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 10346  000CCC  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 10347  000CD0  EC9C  F026         	call	___fldiv	;wreg free
 10348  000CD4  C032  F0C2         	movff	?___fldiv,?_powf
 10349  000CD8  C033  F0C3         	movff	?___fldiv+1,?_powf+1
 10350  000CDC  C034  F0C4         	movff	?___fldiv+2,?_powf+2
 10351  000CE0  C035  F0C5         	movff	?___fldiv+3,?_powf+3
 10352  000CE4  0012               	return	
 10353  000CE6                     i2l10531:
 10354                           
 10355                           ; BSR set to: 1
 10356  000CE6  0550               	decf	powf@yisint& (0+255),w,b
 10357  000CE8  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
 10358  000CEA  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
 10359  000CEC  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
 10360  000CEE  A4D8               	btfss	status,2,c
 10361  000CF0  D008               	goto	i2l10535
 10362                           
 10363                           ; BSR set to: 1
 10364  000CF2  0E00               	movlw	0
 10365  000CF4  6F84               	movwf	powf@sn& (0+255),b
 10366  000CF6  0E00               	movlw	0
 10367  000CF8  6F85               	movwf	(powf@sn+1)& (0+255),b
 10368  000CFA  0E80               	movlw	128
 10369  000CFC  6F86               	movwf	(powf@sn+2)& (0+255),b
 10370  000CFE  0EBF               	movlw	191
 10371  000D00  6F87               	movwf	(powf@sn+3)& (0+255),b
 10372  000D02                     i2l10535:
 10373                           
 10374                           ; BSR set to: 1
 10375  000D02  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
 10376  000D04  D26B               	goto	i2l10583
 10377  000D06  0590               	decf	powf@iy& (0+255),w,b
 10378  000D08  0E00               	movlw	0
 10379  000D0A  5991               	subwfb	(powf@iy+1)& (0+255),w,b
 10380  000D0C  0E00               	movlw	0
 10381  000D0E  5992               	subwfb	(powf@iy+2)& (0+255),w,b
 10382  000D10  0E4D               	movlw	77
 10383  000D12  5993               	subwfb	(powf@iy+3)& (0+255),w,b
 10384  000D14  A0D8               	btfss	status,0,c
 10385  000D16  D262               	goto	i2l10583
 10386                           
 10387                           ; BSR set to: 1
 10388  000D18  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
 10389  000D1A  D00A               	goto	i2u1418_40
 10390  000D1C  0EF8               	movlw	248
 10391  000D1E  5DA8               	subwf	powf@ix& (0+255),w,b
 10392  000D20  0EFF               	movlw	255
 10393  000D22  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
 10394  000D24  0E7F               	movlw	127
 10395  000D26  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
 10396  000D28  0E3F               	movlw	63
 10397  000D2A  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
 10398  000D2C  B0D8               	btfsc	status,0,c
 10399  000D2E  D06C               	goto	i2l10547
 10400  000D30                     i2u1418_40:
 10401                           
 10402                           ; BSR set to: 1
 10403  000D30  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
 10404  000D32  D035               	goto	i2l10543
 10405                           
 10406                           ; BSR set to: 1
 10407  000D34  0E60               	movlw	96
 10408  000D36  6E15               	movwf	___flmul@a^0,c
 10409  000D38  0E42               	movlw	66
 10410  000D3A  6E16               	movwf	(___flmul@a+1)^0,c
 10411  000D3C  0EA2               	movlw	162
 10412  000D3E  6E17               	movwf	(___flmul@a+2)^0,c
 10413  000D40  0E0D               	movlw	13
 10414  000D42  6E18               	movwf	(___flmul@a+3)^0,c
 10415  000D44  C184  F011         	movff	powf@sn,___flmul@b
 10416  000D48  C185  F012         	movff	powf@sn+1,___flmul@b+1
 10417  000D4C  C186  F013         	movff	powf@sn+2,___flmul@b+2
 10418  000D50  C187  F014         	movff	powf@sn+3,___flmul@b+3
 10419  000D54  EC6D  F023         	call	___flmul	;wreg free
 10420  000D58  C011  F1A4         	movff	?___flmul,_powf$2069
 10421  000D5C  C012  F1A5         	movff	?___flmul+1,_powf$2069+1
 10422  000D60  C013  F1A6         	movff	?___flmul+2,_powf$2069+2
 10423  000D64  C014  F1A7         	movff	?___flmul+3,_powf$2069+3
 10424  000D68  C1A4  F011         	movff	_powf$2069,___flmul@b
 10425  000D6C  C1A5  F012         	movff	_powf$2069+1,___flmul@b+1
 10426  000D70  C1A6  F013         	movff	_powf$2069+2,___flmul@b+2
 10427  000D74  C1A7  F014         	movff	_powf$2069+3,___flmul@b+3
 10428  000D78  0E60               	movlw	96
 10429  000D7A  6E15               	movwf	___flmul@a^0,c
 10430  000D7C  0E42               	movlw	66
 10431  000D7E  6E16               	movwf	(___flmul@a+1)^0,c
 10432  000D80  0EA2               	movlw	162
 10433  000D82  6E17               	movwf	(___flmul@a+2)^0,c
 10434  000D84  0E0D               	movlw	13
 10435  000D86  6E18               	movwf	(___flmul@a+3)^0,c
 10436  000D88  EC6D  F023         	call	___flmul	;wreg free
 10437  000D8C  C011  F0C2         	movff	?___flmul,?_powf
 10438  000D90  C012  F0C3         	movff	?___flmul+1,?_powf+1
 10439  000D94  C013  F0C4         	movff	?___flmul+2,?_powf+2
 10440  000D98  C014  F0C5         	movff	?___flmul+3,?_powf+3
 10441  000D9C  0012               	return	
 10442  000D9E                     i2l10543:
 10443                           
 10444                           ; BSR set to: 1
 10445  000D9E  0ECA               	movlw	202
 10446  000DA0  6E15               	movwf	___flmul@a^0,c
 10447  000DA2  0EF2               	movlw	242
 10448  000DA4  6E16               	movwf	(___flmul@a+1)^0,c
 10449  000DA6  0E49               	movlw	73
 10450  000DA8  6E17               	movwf	(___flmul@a+2)^0,c
 10451  000DAA  0E71               	movlw	113
 10452  000DAC  6E18               	movwf	(___flmul@a+3)^0,c
 10453  000DAE  C184  F011         	movff	powf@sn,___flmul@b
 10454  000DB2  C185  F012         	movff	powf@sn+1,___flmul@b+1
 10455  000DB6  C186  F013         	movff	powf@sn+2,___flmul@b+2
 10456  000DBA  C187  F014         	movff	powf@sn+3,___flmul@b+3
 10457  000DBE  EC6D  F023         	call	___flmul	;wreg free
 10458  000DC2  C011  F1A4         	movff	?___flmul,_powf$2069
 10459  000DC6  C012  F1A5         	movff	?___flmul+1,_powf$2069+1
 10460  000DCA  C013  F1A6         	movff	?___flmul+2,_powf$2069+2
 10461  000DCE  C014  F1A7         	movff	?___flmul+3,_powf$2069+3
 10462  000DD2  C1A4  F011         	movff	_powf$2069,___flmul@b
 10463  000DD6  C1A5  F012         	movff	_powf$2069+1,___flmul@b+1
 10464  000DDA  C1A6  F013         	movff	_powf$2069+2,___flmul@b+2
 10465  000DDE  C1A7  F014         	movff	_powf$2069+3,___flmul@b+3
 10466  000DE2  0ECA               	movlw	202
 10467  000DE4  6E15               	movwf	___flmul@a^0,c
 10468  000DE6  0EF2               	movlw	242
 10469  000DE8  6E16               	movwf	(___flmul@a+1)^0,c
 10470  000DEA  0E49               	movlw	73
 10471  000DEC  6E17               	movwf	(___flmul@a+2)^0,c
 10472  000DEE  0E71               	movlw	113
 10473  000DF0  6E18               	movwf	(___flmul@a+3)^0,c
 10474  000DF2  EC6D  F023         	call	___flmul	;wreg free
 10475  000DF6  C011  F0C2         	movff	?___flmul,?_powf
 10476  000DFA  C012  F0C3         	movff	?___flmul+1,?_powf+1
 10477  000DFE  C013  F0C4         	movff	?___flmul+2,?_powf+2
 10478  000E02  C014  F0C5         	movff	?___flmul+3,?_powf+3
 10479  000E06  0012               	return	
 10480  000E08                     i2l10547:
 10481                           
 10482                           ; BSR set to: 1
 10483  000E08  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
 10484  000E0A  D07D               	goto	i2l10557
 10485  000E0C  0E08               	movlw	8
 10486  000E0E  5DA8               	subwf	powf@ix& (0+255),w,b
 10487  000E10  0E00               	movlw	0
 10488  000E12  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
 10489  000E14  0E80               	movlw	128
 10490  000E16  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
 10491  000E18  0E3F               	movlw	63
 10492  000E1A  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
 10493  000E1C  A0D8               	btfss	status,0,c
 10494  000E1E  D073               	goto	i2l10557
 10495                           
 10496                           ; BSR set to: 1
 10497  000E20  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
 10498  000E22  D007               	goto	i2u1421_40
 10499  000E24  517F               	movf	(powf@hy+3)& (0+255),w,b
 10500  000E26  117E               	iorwf	(powf@hy+2)& (0+255),w,b
 10501  000E28  117D               	iorwf	(powf@hy+1)& (0+255),w,b
 10502  000E2A  E138               	bnz	i2l10553
 10503  000E2C  057C               	decf	powf@hy& (0+255),w,b
 10504  000E2E  B0D8               	btfsc	status,0,c
 10505  000E30  D035               	goto	i2l10553
 10506  000E32                     i2u1421_40:
 10507                           
 10508                           ; BSR set to: 1
 10509  000E32  0E60               	movlw	96
 10510  000E34  6E15               	movwf	___flmul@a^0,c
 10511  000E36  0E42               	movlw	66
 10512  000E38  6E16               	movwf	(___flmul@a+1)^0,c
 10513  000E3A  0EA2               	movlw	162
 10514  000E3C  6E17               	movwf	(___flmul@a+2)^0,c
 10515  000E3E  0E0D               	movlw	13
 10516  000E40  6E18               	movwf	(___flmul@a+3)^0,c
 10517  000E42  C184  F011         	movff	powf@sn,___flmul@b
 10518  000E46  C185  F012         	movff	powf@sn+1,___flmul@b+1
 10519  000E4A  C186  F013         	movff	powf@sn+2,___flmul@b+2
 10520  000E4E  C187  F014         	movff	powf@sn+3,___flmul@b+3
 10521  000E52  EC6D  F023         	call	___flmul	;wreg free
 10522  000E56  C011  F1A4         	movff	?___flmul,_powf$2069
 10523  000E5A  C012  F1A5         	movff	?___flmul+1,_powf$2069+1
 10524  000E5E  C013  F1A6         	movff	?___flmul+2,_powf$2069+2
 10525  000E62  C014  F1A7         	movff	?___flmul+3,_powf$2069+3
 10526  000E66  C1A4  F011         	movff	_powf$2069,___flmul@b
 10527  000E6A  C1A5  F012         	movff	_powf$2069+1,___flmul@b+1
 10528  000E6E  C1A6  F013         	movff	_powf$2069+2,___flmul@b+2
 10529  000E72  C1A7  F014         	movff	_powf$2069+3,___flmul@b+3
 10530  000E76  0E60               	movlw	96
 10531  000E78  6E15               	movwf	___flmul@a^0,c
 10532  000E7A  0E42               	movlw	66
 10533  000E7C  6E16               	movwf	(___flmul@a+1)^0,c
 10534  000E7E  0EA2               	movlw	162
 10535  000E80  6E17               	movwf	(___flmul@a+2)^0,c
 10536  000E82  0E0D               	movlw	13
 10537  000E84  6E18               	movwf	(___flmul@a+3)^0,c
 10538  000E86  EC6D  F023         	call	___flmul	;wreg free
 10539  000E8A  C011  F0C2         	movff	?___flmul,?_powf
 10540  000E8E  C012  F0C3         	movff	?___flmul+1,?_powf+1
 10541  000E92  C013  F0C4         	movff	?___flmul+2,?_powf+2
 10542  000E96  C014  F0C5         	movff	?___flmul+3,?_powf+3
 10543  000E9A  0012               	return	
 10544  000E9C                     i2l10553:
 10545                           
 10546                           ; BSR set to: 1
 10547  000E9C  0ECA               	movlw	202
 10548  000E9E  6E15               	movwf	___flmul@a^0,c
 10549  000EA0  0EF2               	movlw	242
 10550  000EA2  6E16               	movwf	(___flmul@a+1)^0,c
 10551  000EA4  0E49               	movlw	73
 10552  000EA6  6E17               	movwf	(___flmul@a+2)^0,c
 10553  000EA8  0E71               	movlw	113
 10554  000EAA  6E18               	movwf	(___flmul@a+3)^0,c
 10555  000EAC  C184  F011         	movff	powf@sn,___flmul@b
 10556  000EB0  C185  F012         	movff	powf@sn+1,___flmul@b+1
 10557  000EB4  C186  F013         	movff	powf@sn+2,___flmul@b+2
 10558  000EB8  C187  F014         	movff	powf@sn+3,___flmul@b+3
 10559  000EBC  EC6D  F023         	call	___flmul	;wreg free
 10560  000EC0  C011  F1A4         	movff	?___flmul,_powf$2069
 10561  000EC4  C012  F1A5         	movff	?___flmul+1,_powf$2069+1
 10562  000EC8  C013  F1A6         	movff	?___flmul+2,_powf$2069+2
 10563  000ECC  C014  F1A7         	movff	?___flmul+3,_powf$2069+3
 10564  000ED0  C1A4  F011         	movff	_powf$2069,___flmul@b
 10565  000ED4  C1A5  F012         	movff	_powf$2069+1,___flmul@b+1
 10566  000ED8  C1A6  F013         	movff	_powf$2069+2,___flmul@b+2
 10567  000EDC  C1A7  F014         	movff	_powf$2069+3,___flmul@b+3
 10568  000EE0  0ECA               	movlw	202
 10569  000EE2  6E15               	movwf	___flmul@a^0,c
 10570  000EE4  0EF2               	movlw	242
 10571  000EE6  6E16               	movwf	(___flmul@a+1)^0,c
 10572  000EE8  0E49               	movlw	73
 10573  000EEA  6E17               	movwf	(___flmul@a+2)^0,c
 10574  000EEC  0E71               	movlw	113
 10575  000EEE  6E18               	movwf	(___flmul@a+3)^0,c
 10576  000EF0  EC6D  F023         	call	___flmul	;wreg free
 10577  000EF4  C011  F0C2         	movff	?___flmul,?_powf
 10578  000EF8  C012  F0C3         	movff	?___flmul+1,?_powf+1
 10579  000EFC  C013  F0C4         	movff	?___flmul+2,?_powf+2
 10580  000F00  C014  F0C5         	movff	?___flmul+3,?_powf+3
 10581  000F04  0012               	return	
 10582  000F06                     i2l10557:
 10583                           
 10584                           ; BSR set to: 1
 10585  000F06  C170  F001         	movff	powf@ax,___fladd@b
 10586  000F0A  C171  F002         	movff	powf@ax+1,___fladd@b+1
 10587  000F0E  C172  F003         	movff	powf@ax+2,___fladd@b+2
 10588  000F12  C173  F004         	movff	powf@ax+3,___fladd@b+3
 10589  000F16  0E00               	movlw	0
 10590  000F18  6E05               	movwf	___fladd@a^0,c
 10591  000F1A  0E00               	movlw	0
 10592  000F1C  6E06               	movwf	(___fladd@a+1)^0,c
 10593  000F1E  0E80               	movlw	128
 10594  000F20  6E07               	movwf	(___fladd@a+2)^0,c
 10595  000F22  0EBF               	movlw	191
 10596  000F24  6E08               	movwf	(___fladd@a+3)^0,c
 10597  000F26  EC16  F025         	call	___fladd	;wreg free
 10598  000F2A  C001  F1B0         	movff	?___fladd,powf@t
 10599  000F2E  C002  F1B1         	movff	?___fladd+1,powf@t+1
 10600  000F32  C003  F1B2         	movff	?___fladd+2,powf@t+2
 10601  000F36  C004  F1B3         	movff	?___fladd+3,powf@t+3
 10602  000F3A  0E00               	movlw	0
 10603  000F3C  6E15               	movwf	___flmul@a^0,c
 10604  000F3E  0E00               	movlw	0
 10605  000F40  6E16               	movwf	(___flmul@a+1)^0,c
 10606  000F42  0E80               	movlw	128
 10607  000F44  6E17               	movwf	(___flmul@a+2)^0,c
 10608  000F46  0E3E               	movlw	62
 10609  000F48  6E18               	movwf	(___flmul@a+3)^0,c
 10610  000F4A  C1B0  F011         	movff	powf@t,___flmul@b
 10611  000F4E  C1B1  F012         	movff	powf@t+1,___flmul@b+1
 10612  000F52  C1B2  F013         	movff	powf@t+2,___flmul@b+2
 10613  000F56  C1B3  F014         	movff	powf@t+3,___flmul@b+3
 10614  000F5A  EC6D  F023         	call	___flmul	;wreg free
 10615  000F5E  C011  F02E         	movff	?___flmul,___flsub@a
 10616  000F62  C012  F02F         	movff	?___flmul+1,___flsub@a+1
 10617  000F66  C013  F030         	movff	?___flmul+2,___flsub@a+2
 10618  000F6A  C014  F031         	movff	?___flmul+3,___flsub@a+3
 10619  000F6E  0EAB               	movlw	171
 10620  000F70  6E2A               	movwf	___flsub@b^0,c
 10621  000F72  0EAA               	movlw	170
 10622  000F74  6E2B               	movwf	(___flsub@b+1)^0,c
 10623  000F76  0EAA               	movlw	170
 10624  000F78  6E2C               	movwf	(___flsub@b+2)^0,c
 10625  000F7A  0E3E               	movlw	62
 10626  000F7C  6E2D               	movwf	(___flsub@b+3)^0,c
 10627  000F7E  ECAE  F036         	call	___flsub	;wreg free
 10628  000F82  C02A  F1A4         	movff	?___flsub,_powf$2069
 10629  000F86  C02B  F1A5         	movff	?___flsub+1,_powf$2069+1
 10630  000F8A  C02C  F1A6         	movff	?___flsub+2,_powf$2069+2
 10631  000F8E  C02D  F1A7         	movff	?___flsub+3,_powf$2069+3
 10632  000F92  C1B0  F015         	movff	powf@t,___flmul@a
 10633  000F96  C1B1  F016         	movff	powf@t+1,___flmul@a+1
 10634  000F9A  C1B2  F017         	movff	powf@t+2,___flmul@a+2
 10635  000F9E  C1B3  F018         	movff	powf@t+3,___flmul@a+3
 10636  000FA2  C1B0  F011         	movff	powf@t,___flmul@b
 10637  000FA6  C1B1  F012         	movff	powf@t+1,___flmul@b+1
 10638  000FAA  C1B2  F013         	movff	powf@t+2,___flmul@b+2
 10639  000FAE  C1B3  F014         	movff	powf@t+3,___flmul@b+3
 10640  000FB2  EC6D  F023         	call	___flmul	;wreg free
 10641  000FB6  C011  F158         	movff	?___flmul,_powf$2070
 10642  000FBA  C012  F159         	movff	?___flmul+1,_powf$2070+1
 10643  000FBE  C013  F15A         	movff	?___flmul+2,_powf$2070+2
 10644  000FC2  C014  F15B         	movff	?___flmul+3,_powf$2070+3
 10645  000FC6  C1B0  F015         	movff	powf@t,___flmul@a
 10646  000FCA  C1B1  F016         	movff	powf@t+1,___flmul@a+1
 10647  000FCE  C1B2  F017         	movff	powf@t+2,___flmul@a+2
 10648  000FD2  C1B3  F018         	movff	powf@t+3,___flmul@a+3
 10649  000FD6  C1A4  F011         	movff	_powf$2069,___flmul@b
 10650  000FDA  C1A5  F012         	movff	_powf$2069+1,___flmul@b+1
 10651  000FDE  C1A6  F013         	movff	_powf$2069+2,___flmul@b+2
 10652  000FE2  C1A7  F014         	movff	_powf$2069+3,___flmul@b+3
 10653  000FE6  EC6D  F023         	call	___flmul	;wreg free
 10654  000FEA  C011  F02E         	movff	?___flmul,___flsub@a
 10655  000FEE  C012  F02F         	movff	?___flmul+1,___flsub@a+1
 10656  000FF2  C013  F030         	movff	?___flmul+2,___flsub@a+2
 10657  000FF6  C014  F031         	movff	?___flmul+3,___flsub@a+3
 10658  000FFA  0E00               	movlw	0
 10659  000FFC  6E2A               	movwf	___flsub@b^0,c
 10660  000FFE  0E00               	movlw	0
 10661  001000  6E2B               	movwf	(___flsub@b+1)^0,c
 10662  001002  0E00               	movlw	0
 10663  001004  6E2C               	movwf	(___flsub@b+2)^0,c
 10664  001006  0E3F               	movlw	63
 10665  001008  6E2D               	movwf	(___flsub@b+3)^0,c
 10666  00100A  ECAE  F036         	call	___flsub	;wreg free
 10667  00100E  C02A  F148         	movff	?___flsub,_powf$2071
 10668  001012  C02B  F149         	movff	?___flsub+1,_powf$2071+1
 10669  001016  C02C  F14A         	movff	?___flsub+2,_powf$2071+2
 10670  00101A  C02D  F14B         	movff	?___flsub+3,_powf$2071+3
 10671  00101E  C158  F011         	movff	_powf$2070,___flmul@b
 10672  001022  C159  F012         	movff	_powf$2070+1,___flmul@b+1
 10673  001026  C15A  F013         	movff	_powf$2070+2,___flmul@b+2
 10674  00102A  C15B  F014         	movff	_powf$2070+3,___flmul@b+3
 10675  00102E  C148  F015         	movff	_powf$2071,___flmul@a
 10676  001032  C149  F016         	movff	_powf$2071+1,___flmul@a+1
 10677  001036  C14A  F017         	movff	_powf$2071+2,___flmul@a+2
 10678  00103A  C14B  F018         	movff	_powf$2071+3,___flmul@a+3
 10679  00103E  EC6D  F023         	call	___flmul	;wreg free
 10680  001042  C011  F144         	movff	?___flmul,powf@w
 10681  001046  C012  F145         	movff	?___flmul+1,powf@w+1
 10682  00104A  C013  F146         	movff	?___flmul+2,powf@w+2
 10683  00104E  C014  F147         	movff	?___flmul+3,powf@w+3
 10684  001052  C1B0  F011         	movff	powf@t,___flmul@b
 10685  001056  C1B1  F012         	movff	powf@t+1,___flmul@b+1
 10686  00105A  C1B2  F013         	movff	powf@t+2,___flmul@b+2
 10687  00105E  C1B3  F014         	movff	powf@t+3,___flmul@b+3
 10688  001062  0E00               	movlw	0
 10689  001064  6E15               	movwf	___flmul@a^0,c
 10690  001066  0EAA               	movlw	170
 10691  001068  6E16               	movwf	(___flmul@a+1)^0,c
 10692  00106A  0EB8               	movlw	184
 10693  00106C  6E17               	movwf	(___flmul@a+2)^0,c
 10694  00106E  0E3F               	movlw	63
 10695  001070  6E18               	movwf	(___flmul@a+3)^0,c
 10696  001072  EC6D  F023         	call	___flmul	;wreg free
 10697  001076  C011  F174         	movff	?___flmul,powf@u
 10698  00107A  C012  F175         	movff	?___flmul+1,powf@u+1
 10699  00107E  C013  F176         	movff	?___flmul+2,powf@u+2
 10700  001082  C014  F177         	movff	?___flmul+3,powf@u+3
 10701  001086  0E70               	movlw	112
 10702  001088  6E15               	movwf	___flmul@a^0,c
 10703  00108A  0EA5               	movlw	165
 10704  00108C  6E16               	movwf	(___flmul@a+1)^0,c
 10705  00108E  0EEC               	movlw	236
 10706  001090  6E17               	movwf	(___flmul@a+2)^0,c
 10707  001092  0E36               	movlw	54
 10708  001094  6E18               	movwf	(___flmul@a+3)^0,c
 10709  001096  C1B0  F011         	movff	powf@t,___flmul@b
 10710  00109A  C1B1  F012         	movff	powf@t+1,___flmul@b+1
 10711  00109E  C1B2  F013         	movff	powf@t+2,___flmul@b+2
 10712  0010A2  C1B3  F014         	movff	powf@t+3,___flmul@b+3
 10713  0010A6  EC6D  F023         	call	___flmul	;wreg free
 10714  0010AA  C011  F02A         	movff	?___flmul,___flsub@b
 10715  0010AE  C012  F02B         	movff	?___flmul+1,___flsub@b+1
 10716  0010B2  C013  F02C         	movff	?___flmul+2,___flsub@b+2
 10717  0010B6  C014  F02D         	movff	?___flmul+3,___flsub@b+3
 10718  0010BA  0E3B               	movlw	59
 10719  0010BC  6E15               	movwf	___flmul@a^0,c
 10720  0010BE  0EAA               	movlw	170
 10721  0010C0  6E16               	movwf	(___flmul@a+1)^0,c
 10722  0010C2  0EB8               	movlw	184
 10723  0010C4  6E17               	movwf	(___flmul@a+2)^0,c
 10724  0010C6  0E3F               	movlw	63
 10725  0010C8  6E18               	movwf	(___flmul@a+3)^0,c
 10726  0010CA  C144  F011         	movff	powf@w,___flmul@b
 10727  0010CE  C145  F012         	movff	powf@w+1,___flmul@b+1
 10728  0010D2  C146  F013         	movff	powf@w+2,___flmul@b+2
 10729  0010D6  C147  F014         	movff	powf@w+3,___flmul@b+3
 10730  0010DA  EC6D  F023         	call	___flmul	;wreg free
 10731  0010DE  C011  F02E         	movff	?___flmul,___flsub@a
 10732  0010E2  C012  F02F         	movff	?___flmul+1,___flsub@a+1
 10733  0010E6  C013  F030         	movff	?___flmul+2,___flsub@a+2
 10734  0010EA  C014  F031         	movff	?___flmul+3,___flsub@a+3
 10735  0010EE  ECAE  F036         	call	___flsub	;wreg free
 10736  0010F2  C02A  F178         	movff	?___flsub,powf@v
 10737  0010F6  C02B  F179         	movff	?___flsub+1,powf@v+1
 10738  0010FA  C02C  F17A         	movff	?___flsub+2,powf@v+2
 10739  0010FE  C02D  F17B         	movff	?___flsub+3,powf@v+3
 10740  001102  C174  F001         	movff	powf@u,___fladd@b
 10741  001106  C175  F002         	movff	powf@u+1,___fladd@b+1
 10742  00110A  C176  F003         	movff	powf@u+2,___fladd@b+2
 10743  00110E  C177  F004         	movff	powf@u+3,___fladd@b+3
 10744  001112  C178  F005         	movff	powf@v,___fladd@a
 10745  001116  C179  F006         	movff	powf@v+1,___fladd@a+1
 10746  00111A  C17A  F007         	movff	powf@v+2,___fladd@a+2
 10747  00111E  C17B  F008         	movff	powf@v+3,___fladd@a+3
 10748  001122  EC16  F025         	call	___fladd	;wreg free
 10749  001126  C001  F180         	movff	?___fladd,powf@t1
 10750  00112A  C002  F181         	movff	?___fladd+1,powf@t1+1
 10751  00112E  C003  F182         	movff	?___fladd+2,powf@t1+2
 10752  001132  C004  F183         	movff	?___fladd+3,powf@t1+3
 10753  001136  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
 10754  00113A  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
 10755  00113E  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
 10756  001142  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
 10757  001146  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10758  00114A  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10759  00114E  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10760  001152  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10761  001156  0E00               	movlw	0
 10762  001158  0101               	movlb	1	; () banked
 10763  00115A  1594               	andwf	powf@is& (0+255),w,b
 10764  00115C  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10765  00115E  0EF0               	movlw	240
 10766  001160  1595               	andwf	(powf@is+1)& (0+255),w,b
 10767  001162  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10768  001164  0EFF               	movlw	255
 10769  001166  1596               	andwf	(powf@is+2)& (0+255),w,b
 10770  001168  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10771  00116A  0EFF               	movlw	255
 10772  00116C  1597               	andwf	(powf@is+3)& (0+255),w,b
 10773  00116E  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10774                           
 10775                           ; BSR set to: 1
 10776  001170  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
 10777  001174  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
 10778  001178  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
 10779  00117C  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
 10780                           
 10781                           ; BSR set to: 1
 10782  001180  C174  F02E         	movff	powf@u,___flsub@a
 10783  001184  C175  F02F         	movff	powf@u+1,___flsub@a+1
 10784  001188  C176  F030         	movff	powf@u+2,___flsub@a+2
 10785  00118C  C177  F031         	movff	powf@u+3,___flsub@a+3
 10786  001190  C180  F02A         	movff	powf@t1,___flsub@b
 10787  001194  C181  F02B         	movff	powf@t1+1,___flsub@b+1
 10788  001198  C182  F02C         	movff	powf@t1+2,___flsub@b+2
 10789  00119C  C183  F02D         	movff	powf@t1+3,___flsub@b+3
 10790  0011A0  ECAE  F036         	call	___flsub	;wreg free
 10791  0011A4  C02A  F198         	movff	?___flsub,_powf$2072
 10792  0011A8  C02B  F199         	movff	?___flsub+1,_powf$2072+1
 10793  0011AC  C02C  F19A         	movff	?___flsub+2,_powf$2072+2
 10794  0011B0  C02D  F19B         	movff	?___flsub+3,_powf$2072+3
 10795  0011B4  C178  F02A         	movff	powf@v,___flsub@b
 10796  0011B8  C179  F02B         	movff	powf@v+1,___flsub@b+1
 10797  0011BC  C17A  F02C         	movff	powf@v+2,___flsub@b+2
 10798  0011C0  C17B  F02D         	movff	powf@v+3,___flsub@b+3
 10799  0011C4  C198  F02E         	movff	_powf$2072,___flsub@a
 10800  0011C8  C199  F02F         	movff	_powf$2072+1,___flsub@a+1
 10801  0011CC  C19A  F030         	movff	_powf$2072+2,___flsub@a+2
 10802  0011D0  C19B  F031         	movff	_powf$2072+3,___flsub@a+3
 10803  0011D4  ECAE  F036         	call	___flsub	;wreg free
 10804  0011D8  EF0F  F010         	goto	L9
 10805  0011DC                     i2l10583:
 10806                           
 10807                           ; BSR set to: 1
 10808  0011DC  0E00               	movlw	0
 10809  0011DE  6F88               	movwf	powf@n& (0+255),b
 10810  0011E0  0E00               	movlw	0
 10811  0011E2  6F89               	movwf	(powf@n+1)& (0+255),b
 10812  0011E4  0E00               	movlw	0
 10813  0011E6  6F8A               	movwf	(powf@n+2)& (0+255),b
 10814  0011E8  0E00               	movlw	0
 10815  0011EA  6F8B               	movwf	(powf@n+3)& (0+255),b
 10816                           
 10817                           ; BSR set to: 1
 10818  0011EC  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
 10819  0011EE  D006               	goto	i2u1422_40
 10820  0011F0  51AB               	movf	(powf@ix+3)& (0+255),w,b
 10821  0011F2  E137               	bnz	i2l10595
 10822  0011F4  0E80               	movlw	128
 10823  0011F6  5DAA               	subwf	(powf@ix+2)& (0+255),w,b
 10824  0011F8  B0D8               	btfsc	status,0,c
 10825  0011FA  D033               	goto	i2l10595
 10826  0011FC                     i2u1422_40:
 10827                           
 10828                           ; BSR set to: 1
 10829  0011FC  C170  F011         	movff	powf@ax,___flmul@b
 10830  001200  C171  F012         	movff	powf@ax+1,___flmul@b+1
 10831  001204  C172  F013         	movff	powf@ax+2,___flmul@b+2
 10832  001208  C173  F014         	movff	powf@ax+3,___flmul@b+3
 10833  00120C  0E00               	movlw	0
 10834  00120E  6E15               	movwf	___flmul@a^0,c
 10835  001210  0E00               	movlw	0
 10836  001212  6E16               	movwf	(___flmul@a+1)^0,c
 10837  001214  0E80               	movlw	128
 10838  001216  6E17               	movwf	(___flmul@a+2)^0,c
 10839  001218  0E4B               	movlw	75
 10840  00121A  6E18               	movwf	(___flmul@a+3)^0,c
 10841  00121C  EC6D  F023         	call	___flmul	;wreg free
 10842  001220  C011  F170         	movff	?___flmul,powf@ax
 10843  001224  C012  F171         	movff	?___flmul+1,powf@ax+1
 10844  001228  C013  F172         	movff	?___flmul+2,powf@ax+2
 10845  00122C  C014  F173         	movff	?___flmul+3,powf@ax+3
 10846  001230  0EE8               	movlw	232
 10847  001232  0101               	movlb	1	; () banked
 10848  001234  2788               	addwf	powf@n& (0+255),f,b
 10849  001236  0EFF               	movlw	255
 10850  001238  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10851  00123A  0EFF               	movlw	255
 10852  00123C  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10853  00123E  0EFF               	movlw	255
 10854  001240  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10855                           
 10856                           ; BSR set to: 1
 10857  001242  C170  F1B8         	movff	powf@ax,powf@__xc8_float_word
 10858  001246  C171  F1B9         	movff	powf@ax+1,powf@__xc8_float_word+1
 10859  00124A  C172  F1BA         	movff	powf@ax+2,powf@__xc8_float_word+2
 10860  00124E  C173  F1BB         	movff	powf@ax+3,powf@__xc8_float_word+3
 10861                           
 10862                           ; BSR set to: 1
 10863  001252  C1B8  F1A8         	movff	powf@__xc8_float_word,powf@ix
 10864  001256  C1B9  F1A9         	movff	powf@__xc8_float_word+1,powf@ix+1
 10865  00125A  C1BA  F1AA         	movff	powf@__xc8_float_word+2,powf@ix+2
 10866  00125E  C1BB  F1AB         	movff	powf@__xc8_float_word+3,powf@ix+3
 10867  001262                     i2l10595:
 10868                           
 10869                           ; BSR set to: 1
 10870  001262  0E17               	movlw	23
 10871  001264  6E6F               	movwf	??_powf^0,c
 10872  001266  C1A8  F070         	movff	powf@ix,??_powf+1
 10873  00126A  C1A9  F071         	movff	powf@ix+1,??_powf+2
 10874  00126E  C1AA  F072         	movff	powf@ix+2,??_powf+3
 10875  001272  C1AB  F073         	movff	powf@ix+3,??_powf+4
 10876  001276                     i2u1423_45:
 10877  001276  666F               	tstfsz	??_powf^0,c
 10878  001278  D001               	goto	i2u1423_46
 10879  00127A  D007               	goto	i2u1423_47
 10880  00127C                     i2u1423_46:
 10881  00127C  3473               	rlcf	(??_powf+4)^0,w,c
 10882  00127E  3273               	rrcf	(??_powf+4)^0,f,c
 10883  001280  3272               	rrcf	(??_powf+3)^0,f,c
 10884  001282  3271               	rrcf	(??_powf+2)^0,f,c
 10885  001284  3270               	rrcf	(??_powf+1)^0,f,c
 10886  001286  2E6F               	decfsz	??_powf^0,f,c
 10887  001288  D7F6               	goto	i2u1423_45
 10888  00128A                     i2u1423_47:
 10889  00128A  0E81               	movlw	129
 10890  00128C  2470               	addwf	(??_powf+1)^0,w,c
 10891  00128E  6E74               	movwf	(??_powf+5)^0,c
 10892  001290  0EFF               	movlw	255
 10893  001292  2071               	addwfc	(??_powf+2)^0,w,c
 10894  001294  6E75               	movwf	(??_powf+6)^0,c
 10895  001296  0EFF               	movlw	255
 10896  001298  2072               	addwfc	(??_powf+3)^0,w,c
 10897  00129A  6E76               	movwf	(??_powf+7)^0,c
 10898  00129C  0EFF               	movlw	255
 10899  00129E  2073               	addwfc	(??_powf+4)^0,w,c
 10900  0012A0  6E77               	movwf	(??_powf+8)^0,c
 10901  0012A2  5074               	movf	(??_powf+5)^0,w,c
 10902  0012A4  0101               	movlb	1	; () banked
 10903  0012A6  2788               	addwf	powf@n& (0+255),f,b
 10904  0012A8  5075               	movf	(??_powf+6)^0,w,c
 10905  0012AA  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10906  0012AC  5076               	movf	(??_powf+7)^0,w,c
 10907  0012AE  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10908  0012B0  5077               	movf	(??_powf+8)^0,w,c
 10909  0012B2  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10910                           
 10911                           ; BSR set to: 1
 10912  0012B4  0EFF               	movlw	255
 10913  0012B6  15A8               	andwf	powf@ix& (0+255),w,b
 10914  0012B8  6FAC               	movwf	powf@j& (0+255),b
 10915  0012BA  0EFF               	movlw	255
 10916  0012BC  15A9               	andwf	(powf@ix+1)& (0+255),w,b
 10917  0012BE  6FAD               	movwf	(powf@j+1)& (0+255),b
 10918  0012C0  0E7F               	movlw	127
 10919  0012C2  15AA               	andwf	(powf@ix+2)& (0+255),w,b
 10920  0012C4  6FAE               	movwf	(powf@j+2)& (0+255),b
 10921  0012C6  0E00               	movlw	0
 10922  0012C8  15AB               	andwf	(powf@ix+3)& (0+255),w,b
 10923  0012CA  6FAF               	movwf	(powf@j+3)& (0+255),b
 10924                           
 10925                           ; BSR set to: 1
 10926  0012CC  0E00               	movlw	0
 10927  0012CE  11AC               	iorwf	powf@j& (0+255),w,b
 10928  0012D0  6FA8               	movwf	powf@ix& (0+255),b
 10929  0012D2  0E00               	movlw	0
 10930  0012D4  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 10931  0012D6  6FA9               	movwf	(powf@ix+1)& (0+255),b
 10932  0012D8  0E80               	movlw	128
 10933  0012DA  11AE               	iorwf	(powf@j+2)& (0+255),w,b
 10934  0012DC  6FAA               	movwf	(powf@ix+2)& (0+255),b
 10935  0012DE  0E3F               	movlw	63
 10936  0012E0  11AF               	iorwf	(powf@j+3)& (0+255),w,b
 10937  0012E2  6FAB               	movwf	(powf@ix+3)& (0+255),b
 10938                           
 10939                           ; BSR set to: 1
 10940  0012E4  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
 10941  0012E6  D00A               	goto	i2u1424_40
 10942  0012E8  51AF               	movf	(powf@j+3)& (0+255),w,b
 10943  0012EA  E10A               	bnz	i2l10605
 10944  0012EC  0E72               	movlw	114
 10945  0012EE  5DAC               	subwf	powf@j& (0+255),w,b
 10946  0012F0  0EC4               	movlw	196
 10947  0012F2  59AD               	subwfb	(powf@j+1)& (0+255),w,b
 10948  0012F4  0E1C               	movlw	28
 10949  0012F6  59AE               	subwfb	(powf@j+2)& (0+255),w,b
 10950  0012F8  B0D8               	btfsc	status,0,c
 10951  0012FA  D002               	goto	i2l10605
 10952  0012FC                     i2u1424_40:
 10953                           
 10954                           ; BSR set to: 1
 10955  0012FC  0E00               	movlw	0
 10956  0012FE  D00D               	goto	L10
 10957  001300                     i2l10605:
 10958                           
 10959                           ; BSR set to: 1
 10960  001300  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
 10961  001302  D00A               	goto	i2u1425_40
 10962  001304  51AF               	movf	(powf@j+3)& (0+255),w,b
 10963  001306  E111               	bnz	i2l10609
 10964  001308  0ED7               	movlw	215
 10965  00130A  5DAC               	subwf	powf@j& (0+255),w,b
 10966  00130C  0EB3               	movlw	179
 10967  00130E  59AD               	subwfb	(powf@j+1)& (0+255),w,b
 10968  001310  0E5D               	movlw	93
 10969  001312  59AE               	subwfb	(powf@j+2)& (0+255),w,b
 10970  001314  B0D8               	btfsc	status,0,c
 10971  001316  D009               	goto	i2l10609
 10972  001318                     i2u1425_40:
 10973                           
 10974                           ; BSR set to: 1
 10975  001318  0E01               	movlw	1
 10976  00131A                     L10:
 10977  00131A  6FA0               	movwf	powf@k& (0+255),b
 10978  00131C  0E00               	movlw	0
 10979  00131E  6FA1               	movwf	(powf@k+1)& (0+255),b
 10980  001320  0E00               	movlw	0
 10981  001322  6FA2               	movwf	(powf@k+2)& (0+255),b
 10982  001324  0E00               	movlw	0
 10983  001326  6FA3               	movwf	(powf@k+3)& (0+255),b
 10984  001328  D016               	goto	i2l10615
 10985  00132A                     i2l10609:
 10986                           
 10987                           ; BSR set to: 1
 10988  00132A  0E00               	movlw	0
 10989  00132C  6FA0               	movwf	powf@k& (0+255),b
 10990  00132E  0E00               	movlw	0
 10991  001330  6FA1               	movwf	(powf@k+1)& (0+255),b
 10992  001332  0E00               	movlw	0
 10993  001334  6FA2               	movwf	(powf@k+2)& (0+255),b
 10994  001336  0E00               	movlw	0
 10995  001338  6FA3               	movwf	(powf@k+3)& (0+255),b
 10996                           
 10997                           ; BSR set to: 1
 10998  00133A  0E01               	movlw	1
 10999  00133C  2788               	addwf	powf@n& (0+255),f,b
 11000  00133E  0E00               	movlw	0
 11001  001340  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11002  001342  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11003  001344  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11004                           
 11005                           ; BSR set to: 1
 11006  001346  0E00               	movlw	0
 11007  001348  27A8               	addwf	powf@ix& (0+255),f,b
 11008  00134A  0E00               	movlw	0
 11009  00134C  23A9               	addwfc	(powf@ix+1)& (0+255),f,b
 11010  00134E  0E80               	movlw	128
 11011  001350  23AA               	addwfc	(powf@ix+2)& (0+255),f,b
 11012  001352  0EFF               	movlw	255
 11013  001354  23AB               	addwfc	(powf@ix+3)& (0+255),f,b
 11014  001356                     i2l10615:
 11015                           
 11016                           ; BSR set to: 1
 11017  001356  C1A8  F1B8         	movff	powf@ix,powf@__xc8_float_word
 11018  00135A  C1A9  F1B9         	movff	powf@ix+1,powf@__xc8_float_word+1
 11019  00135E  C1AA  F1BA         	movff	powf@ix+2,powf@__xc8_float_word+2
 11020  001362  C1AB  F1BB         	movff	powf@ix+3,powf@__xc8_float_word+3
 11021                           
 11022                           ; BSR set to: 1
 11023  001366  C1B8  F170         	movff	powf@__xc8_float_word,powf@ax
 11024  00136A  C1B9  F171         	movff	powf@__xc8_float_word+1,powf@ax+1
 11025  00136E  C1BA  F172         	movff	powf@__xc8_float_word+2,powf@ax+2
 11026  001372  C1BB  F173         	movff	powf@__xc8_float_word+3,powf@ax+3
 11027                           
 11028                           ; BSR set to: 1
 11029  001376  C170  F02A         	movff	powf@ax,___flsub@b
 11030  00137A  C171  F02B         	movff	powf@ax+1,___flsub@b+1
 11031  00137E  C172  F02C         	movff	powf@ax+2,___flsub@b+2
 11032  001382  C173  F02D         	movff	powf@ax+3,___flsub@b+3
 11033  001386  C1A0  F06F         	movff	powf@k,??_powf
 11034  00138A  C1A1  F070         	movff	powf@k+1,??_powf+1
 11035  00138E  90D8               	bcf	status,0,c
 11036  001390  366F               	rlcf	??_powf^0,f,c
 11037  001392  3670               	rlcf	(??_powf+1)^0,f,c
 11038  001394  90D8               	bcf	status,0,c
 11039  001396  366F               	rlcf	??_powf^0,f,c
 11040  001398  3670               	rlcf	(??_powf+1)^0,f,c
 11041  00139A  0E81               	movlw	low _bp
 11042  00139C  246F               	addwf	??_powf^0,w,c
 11043  00139E  6EF6               	movwf	tblptrl,c
 11044  0013A0  0E06               	movlw	high _bp
 11045  0013A2  2070               	addwfc	(??_powf+1)^0,w,c
 11046  0013A4  6EF7               	movwf	tblptrh,c
 11047  0013A6                     	if	0	;There are less than 3 active tblptr bytes
 11048  0013A6                     	endif
 11049  0013A6  0009               	tblrd		*+
 11050  0013A8  CFF5 F02E          	movff	tablat,___flsub@a
 11051  0013AC  0009               	tblrd		*+
 11052  0013AE  CFF5 F02F          	movff	tablat,___flsub@a+1
 11053  0013B2  0009               	tblrd		*+
 11054  0013B4  CFF5 F030          	movff	tablat,___flsub@a+2
 11055  0013B8  000A               	tblrd		*-
 11056  0013BA  CFF5 F031          	movff	tablat,___flsub@a+3
 11057  0013BE  ECAE  F036         	call	___flsub	;wreg free
 11058  0013C2  C02A  F174         	movff	?___flsub,powf@u
 11059  0013C6  C02B  F175         	movff	?___flsub+1,powf@u+1
 11060  0013CA  C02C  F176         	movff	?___flsub+2,powf@u+2
 11061  0013CE  C02D  F177         	movff	?___flsub+3,powf@u+3
 11062  0013D2  0E00               	movlw	0
 11063  0013D4  6E32               	movwf	___fldiv@b^0,c
 11064  0013D6  0E00               	movlw	0
 11065  0013D8  6E33               	movwf	(___fldiv@b+1)^0,c
 11066  0013DA  0E80               	movlw	128
 11067  0013DC  6E34               	movwf	(___fldiv@b+2)^0,c
 11068  0013DE  0E3F               	movlw	63
 11069  0013E0  6E35               	movwf	(___fldiv@b+3)^0,c
 11070  0013E2  C170  F005         	movff	powf@ax,___fladd@a
 11071  0013E6  C171  F006         	movff	powf@ax+1,___fladd@a+1
 11072  0013EA  C172  F007         	movff	powf@ax+2,___fladd@a+2
 11073  0013EE  C173  F008         	movff	powf@ax+3,___fladd@a+3
 11074  0013F2  C1A0  F06F         	movff	powf@k,??_powf
 11075  0013F6  C1A1  F070         	movff	powf@k+1,??_powf+1
 11076  0013FA  90D8               	bcf	status,0,c
 11077  0013FC  366F               	rlcf	??_powf^0,f,c
 11078  0013FE  3670               	rlcf	(??_powf+1)^0,f,c
 11079  001400  90D8               	bcf	status,0,c
 11080  001402  366F               	rlcf	??_powf^0,f,c
 11081  001404  3670               	rlcf	(??_powf+1)^0,f,c
 11082  001406  0E81               	movlw	low _bp
 11083  001408  246F               	addwf	??_powf^0,w,c
 11084  00140A  6EF6               	movwf	tblptrl,c
 11085  00140C  0E06               	movlw	high _bp
 11086  00140E  2070               	addwfc	(??_powf+1)^0,w,c
 11087  001410  6EF7               	movwf	tblptrh,c
 11088  001412                     	if	0	;There are less than 3 active tblptr bytes
 11089  001412                     	endif
 11090  001412  0009               	tblrd		*+
 11091  001414  CFF5 F001          	movff	tablat,___fladd@b
 11092  001418  0009               	tblrd		*+
 11093  00141A  CFF5 F002          	movff	tablat,___fladd@b+1
 11094  00141E  0009               	tblrd		*+
 11095  001420  CFF5 F003          	movff	tablat,___fladd@b+2
 11096  001424  000A               	tblrd		*-
 11097  001426  CFF5 F004          	movff	tablat,___fladd@b+3
 11098  00142A  EC16  F025         	call	___fladd	;wreg free
 11099  00142E  C001  F036         	movff	?___fladd,___fldiv@a
 11100  001432  C002  F037         	movff	?___fladd+1,___fldiv@a+1
 11101  001436  C003  F038         	movff	?___fladd+2,___fldiv@a+2
 11102  00143A  C004  F039         	movff	?___fladd+3,___fldiv@a+3
 11103  00143E  EC9C  F026         	call	___fldiv	;wreg free
 11104  001442  C032  F178         	movff	?___fldiv,powf@v
 11105  001446  C033  F179         	movff	?___fldiv+1,powf@v+1
 11106  00144A  C034  F17A         	movff	?___fldiv+2,powf@v+2
 11107  00144E  C035  F17B         	movff	?___fldiv+3,powf@v+3
 11108  001452  C174  F011         	movff	powf@u,___flmul@b
 11109  001456  C175  F012         	movff	powf@u+1,___flmul@b+1
 11110  00145A  C176  F013         	movff	powf@u+2,___flmul@b+2
 11111  00145E  C177  F014         	movff	powf@u+3,___flmul@b+3
 11112  001462  C178  F015         	movff	powf@v,___flmul@a
 11113  001466  C179  F016         	movff	powf@v+1,___flmul@a+1
 11114  00146A  C17A  F017         	movff	powf@v+2,___flmul@a+2
 11115  00146E  C17B  F018         	movff	powf@v+3,___flmul@a+3
 11116  001472  EC6D  F023         	call	___flmul	;wreg free
 11117  001476  C011  F154         	movff	?___flmul,powf@s
 11118  00147A  C012  F155         	movff	?___flmul+1,powf@s+1
 11119  00147E  C013  F156         	movff	?___flmul+2,powf@s+2
 11120  001482  C014  F157         	movff	?___flmul+3,powf@s+3
 11121  001486  C154  F16C         	movff	powf@s,powf@s_h
 11122  00148A  C155  F16D         	movff	powf@s+1,powf@s_h+1
 11123  00148E  C156  F16E         	movff	powf@s+2,powf@s_h+2
 11124  001492  C157  F16F         	movff	powf@s+3,powf@s_h+3
 11125  001496  C16C  F1B8         	movff	powf@s_h,powf@__xc8_float_word
 11126  00149A  C16D  F1B9         	movff	powf@s_h+1,powf@__xc8_float_word+1
 11127  00149E  C16E  F1BA         	movff	powf@s_h+2,powf@__xc8_float_word+2
 11128  0014A2  C16F  F1BB         	movff	powf@s_h+3,powf@__xc8_float_word+3
 11129  0014A6  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 11130  0014AA  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 11131  0014AE  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 11132  0014B2  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 11133  0014B6  0E00               	movlw	0
 11134  0014B8  0101               	movlb	1	; () banked
 11135  0014BA  1594               	andwf	powf@is& (0+255),w,b
 11136  0014BC  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11137  0014BE  0EF0               	movlw	240
 11138  0014C0  1595               	andwf	(powf@is+1)& (0+255),w,b
 11139  0014C2  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11140  0014C4  0EFF               	movlw	255
 11141  0014C6  1596               	andwf	(powf@is+2)& (0+255),w,b
 11142  0014C8  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11143  0014CA  0EFF               	movlw	255
 11144  0014CC  1597               	andwf	(powf@is+3)& (0+255),w,b
 11145  0014CE  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11146                           
 11147                           ; BSR set to: 1
 11148  0014D0  C1B8  F16C         	movff	powf@__xc8_float_word,powf@s_h
 11149  0014D4  C1B9  F16D         	movff	powf@__xc8_float_word+1,powf@s_h+1
 11150  0014D8  C1BA  F16E         	movff	powf@__xc8_float_word+2,powf@s_h+2
 11151  0014DC  C1BB  F16F         	movff	powf@__xc8_float_word+3,powf@s_h+3
 11152                           
 11153                           ; BSR set to: 1
 11154  0014E0  C1A8  F06F         	movff	powf@ix,??_powf
 11155  0014E4  C1A9  F070         	movff	powf@ix+1,??_powf+1
 11156  0014E8  C1AA  F071         	movff	powf@ix+2,??_powf+2
 11157  0014EC  C1AB  F072         	movff	powf@ix+3,??_powf+3
 11158  0014F0  3472               	rlcf	(??_powf+3)^0,w,c
 11159  0014F2  3272               	rrcf	(??_powf+3)^0,f,c
 11160  0014F4  3271               	rrcf	(??_powf+2)^0,f,c
 11161  0014F6  3270               	rrcf	(??_powf+1)^0,f,c
 11162  0014F8  326F               	rrcf	??_powf^0,f,c
 11163  0014FA  0E00               	movlw	0
 11164  0014FC  146F               	andwf	??_powf^0,w,c
 11165  0014FE  6E73               	movwf	(??_powf+4)^0,c
 11166  001500  0EF0               	movlw	240
 11167  001502  1470               	andwf	(??_powf+1)^0,w,c
 11168  001504  6E74               	movwf	(??_powf+5)^0,c
 11169  001506  0EFF               	movlw	255
 11170  001508  1471               	andwf	(??_powf+2)^0,w,c
 11171  00150A  6E75               	movwf	(??_powf+6)^0,c
 11172  00150C  0EFF               	movlw	255
 11173  00150E  1472               	andwf	(??_powf+3)^0,w,c
 11174  001510  6E76               	movwf	(??_powf+7)^0,c
 11175  001512  0E00               	movlw	0
 11176  001514  1073               	iorwf	(??_powf+4)^0,w,c
 11177  001516  6F94               	movwf	powf@is& (0+255),b
 11178  001518  0E00               	movlw	0
 11179  00151A  1074               	iorwf	(??_powf+5)^0,w,c
 11180  00151C  6F95               	movwf	(powf@is+1)& (0+255),b
 11181  00151E  0E00               	movlw	0
 11182  001520  1075               	iorwf	(??_powf+6)^0,w,c
 11183  001522  6F96               	movwf	(powf@is+2)& (0+255),b
 11184  001524  0E20               	movlw	32
 11185  001526  1076               	iorwf	(??_powf+7)^0,w,c
 11186  001528  6F97               	movwf	(powf@is+3)& (0+255),b
 11187                           
 11188                           ; BSR set to: 1
 11189  00152A  C1A0  F06F         	movff	powf@k,??_powf
 11190  00152E  C1A1  F070         	movff	powf@k+1,??_powf+1
 11191  001532  C1A2  F071         	movff	powf@k+2,??_powf+2
 11192  001536  C1A3  F072         	movff	powf@k+3,??_powf+3
 11193  00153A  0E15               	movlw	21
 11194  00153C                     i2u1426_45:
 11195  00153C  90D8               	bcf	status,0,c
 11196  00153E  366F               	rlcf	??_powf^0,f,c
 11197  001540  3670               	rlcf	(??_powf+1)^0,f,c
 11198  001542  3671               	rlcf	(??_powf+2)^0,f,c
 11199  001544  3672               	rlcf	(??_powf+3)^0,f,c
 11200  001546  2EE8               	decfsz	wreg,f,c
 11201  001548  D7F9               	goto	i2u1426_45
 11202  00154A  5194               	movf	powf@is& (0+255),w,b
 11203  00154C  246F               	addwf	??_powf^0,w,c
 11204  00154E  6E73               	movwf	(??_powf+4)^0,c
 11205  001550  5195               	movf	(powf@is+1)& (0+255),w,b
 11206  001552  2070               	addwfc	(??_powf+1)^0,w,c
 11207  001554  6E74               	movwf	(??_powf+5)^0,c
 11208  001556  5196               	movf	(powf@is+2)& (0+255),w,b
 11209  001558  2071               	addwfc	(??_powf+2)^0,w,c
 11210  00155A  6E75               	movwf	(??_powf+6)^0,c
 11211  00155C  5197               	movf	(powf@is+3)& (0+255),w,b
 11212  00155E  2072               	addwfc	(??_powf+3)^0,w,c
 11213  001560  6E76               	movwf	(??_powf+7)^0,c
 11214  001562  0E00               	movlw	0
 11215  001564  2473               	addwf	(??_powf+4)^0,w,c
 11216  001566  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11217  001568  0E00               	movlw	0
 11218  00156A  2074               	addwfc	(??_powf+5)^0,w,c
 11219  00156C  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11220  00156E  0E40               	movlw	64
 11221  001570  2075               	addwfc	(??_powf+6)^0,w,c
 11222  001572  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11223  001574  0E00               	movlw	0
 11224  001576  2076               	addwfc	(??_powf+7)^0,w,c
 11225  001578  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11226                           
 11227                           ; BSR set to: 1
 11228  00157A  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
 11229  00157E  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
 11230  001582  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
 11231  001586  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
 11232                           
 11233                           ; BSR set to: 1
 11234  00158A  C1A0  F06F         	movff	powf@k,??_powf
 11235  00158E  C1A1  F070         	movff	powf@k+1,??_powf+1
 11236  001592  90D8               	bcf	status,0,c
 11237  001594  366F               	rlcf	??_powf^0,f,c
 11238  001596  3670               	rlcf	(??_powf+1)^0,f,c
 11239  001598  90D8               	bcf	status,0,c
 11240  00159A  366F               	rlcf	??_powf^0,f,c
 11241  00159C  3670               	rlcf	(??_powf+1)^0,f,c
 11242  00159E  0E81               	movlw	low _bp
 11243  0015A0  246F               	addwf	??_powf^0,w,c
 11244  0015A2  6EF6               	movwf	tblptrl,c
 11245  0015A4  0E06               	movlw	high _bp
 11246  0015A6  2070               	addwfc	(??_powf+1)^0,w,c
 11247  0015A8  6EF7               	movwf	tblptrh,c
 11248  0015AA                     	if	0	;There are less than 3 active tblptr bytes
 11249  0015AA                     	endif
 11250  0015AA  0009               	tblrd		*+
 11251  0015AC  CFF5 F02E          	movff	tablat,___flsub@a
 11252  0015B0  0009               	tblrd		*+
 11253  0015B2  CFF5 F02F          	movff	tablat,___flsub@a+1
 11254  0015B6  0009               	tblrd		*+
 11255  0015B8  CFF5 F030          	movff	tablat,___flsub@a+2
 11256  0015BC  000A               	tblrd		*-
 11257  0015BE  CFF5 F031          	movff	tablat,___flsub@a+3
 11258  0015C2  C168  F02A         	movff	powf@t_h,___flsub@b
 11259  0015C6  C169  F02B         	movff	powf@t_h+1,___flsub@b+1
 11260  0015CA  C16A  F02C         	movff	powf@t_h+2,___flsub@b+2
 11261  0015CE  C16B  F02D         	movff	powf@t_h+3,___flsub@b+3
 11262  0015D2  ECAE  F036         	call	___flsub	;wreg free
 11263  0015D6  C02A  F198         	movff	?___flsub,_powf$2072
 11264  0015DA  C02B  F199         	movff	?___flsub+1,_powf$2072+1
 11265  0015DE  C02C  F19A         	movff	?___flsub+2,_powf$2072+2
 11266  0015E2  C02D  F19B         	movff	?___flsub+3,_powf$2072+3
 11267  0015E6  C170  F02A         	movff	powf@ax,___flsub@b
 11268  0015EA  C171  F02B         	movff	powf@ax+1,___flsub@b+1
 11269  0015EE  C172  F02C         	movff	powf@ax+2,___flsub@b+2
 11270  0015F2  C173  F02D         	movff	powf@ax+3,___flsub@b+3
 11271  0015F6  C198  F02E         	movff	_powf$2072,___flsub@a
 11272  0015FA  C199  F02F         	movff	_powf$2072+1,___flsub@a+1
 11273  0015FE  C19A  F030         	movff	_powf$2072+2,___flsub@a+2
 11274  001602  C19B  F031         	movff	_powf$2072+3,___flsub@a+3
 11275  001606  ECAE  F036         	call	___flsub	;wreg free
 11276  00160A  C02A  F134         	movff	?___flsub,powf@t_l
 11277  00160E  C02B  F135         	movff	?___flsub+1,powf@t_l+1
 11278  001612  C02C  F136         	movff	?___flsub+2,powf@t_l+2
 11279  001616  C02D  F137         	movff	?___flsub+3,powf@t_l+3
 11280  00161A  C168  F015         	movff	powf@t_h,___flmul@a
 11281  00161E  C169  F016         	movff	powf@t_h+1,___flmul@a+1
 11282  001622  C16A  F017         	movff	powf@t_h+2,___flmul@a+2
 11283  001626  C16B  F018         	movff	powf@t_h+3,___flmul@a+3
 11284  00162A  C16C  F011         	movff	powf@s_h,___flmul@b
 11285  00162E  C16D  F012         	movff	powf@s_h+1,___flmul@b+1
 11286  001632  C16E  F013         	movff	powf@s_h+2,___flmul@b+2
 11287  001636  C16F  F014         	movff	powf@s_h+3,___flmul@b+3
 11288  00163A  EC6D  F023         	call	___flmul	;wreg free
 11289  00163E  C011  F02E         	movff	?___flmul,___flsub@a
 11290  001642  C012  F02F         	movff	?___flmul+1,___flsub@a+1
 11291  001646  C013  F030         	movff	?___flmul+2,___flsub@a+2
 11292  00164A  C014  F031         	movff	?___flmul+3,___flsub@a+3
 11293  00164E  C174  F02A         	movff	powf@u,___flsub@b
 11294  001652  C175  F02B         	movff	powf@u+1,___flsub@b+1
 11295  001656  C176  F02C         	movff	powf@u+2,___flsub@b+2
 11296  00165A  C177  F02D         	movff	powf@u+3,___flsub@b+3
 11297  00165E  ECAE  F036         	call	___flsub	;wreg free
 11298  001662  C02A  F198         	movff	?___flsub,_powf$2072
 11299  001666  C02B  F199         	movff	?___flsub+1,_powf$2072+1
 11300  00166A  C02C  F19A         	movff	?___flsub+2,_powf$2072+2
 11301  00166E  C02D  F19B         	movff	?___flsub+3,_powf$2072+3
 11302  001672  C134  F015         	movff	powf@t_l,___flmul@a
 11303  001676  C135  F016         	movff	powf@t_l+1,___flmul@a+1
 11304  00167A  C136  F017         	movff	powf@t_l+2,___flmul@a+2
 11305  00167E  C137  F018         	movff	powf@t_l+3,___flmul@a+3
 11306  001682  C16C  F011         	movff	powf@s_h,___flmul@b
 11307  001686  C16D  F012         	movff	powf@s_h+1,___flmul@b+1
 11308  00168A  C16E  F013         	movff	powf@s_h+2,___flmul@b+2
 11309  00168E  C16F  F014         	movff	powf@s_h+3,___flmul@b+3
 11310  001692  EC6D  F023         	call	___flmul	;wreg free
 11311  001696  C011  F02E         	movff	?___flmul,___flsub@a
 11312  00169A  C012  F02F         	movff	?___flmul+1,___flsub@a+1
 11313  00169E  C013  F030         	movff	?___flmul+2,___flsub@a+2
 11314  0016A2  C014  F031         	movff	?___flmul+3,___flsub@a+3
 11315  0016A6  C198  F02A         	movff	_powf$2072,___flsub@b
 11316  0016AA  C199  F02B         	movff	_powf$2072+1,___flsub@b+1
 11317  0016AE  C19A  F02C         	movff	_powf$2072+2,___flsub@b+2
 11318  0016B2  C19B  F02D         	movff	_powf$2072+3,___flsub@b+3
 11319  0016B6  ECAE  F036         	call	___flsub	;wreg free
 11320  0016BA  C02A  F158         	movff	?___flsub,_powf$2070
 11321  0016BE  C02B  F159         	movff	?___flsub+1,_powf$2070+1
 11322  0016C2  C02C  F15A         	movff	?___flsub+2,_powf$2070+2
 11323  0016C6  C02D  F15B         	movff	?___flsub+3,_powf$2070+3
 11324  0016CA  C158  F011         	movff	_powf$2070,___flmul@b
 11325  0016CE  C159  F012         	movff	_powf$2070+1,___flmul@b+1
 11326  0016D2  C15A  F013         	movff	_powf$2070+2,___flmul@b+2
 11327  0016D6  C15B  F014         	movff	_powf$2070+3,___flmul@b+3
 11328  0016DA  C178  F015         	movff	powf@v,___flmul@a
 11329  0016DE  C179  F016         	movff	powf@v+1,___flmul@a+1
 11330  0016E2  C17A  F017         	movff	powf@v+2,___flmul@a+2
 11331  0016E6  C17B  F018         	movff	powf@v+3,___flmul@a+3
 11332  0016EA  EC6D  F023         	call	___flmul	;wreg free
 11333  0016EE  C011  F130         	movff	?___flmul,powf@s_l
 11334  0016F2  C012  F131         	movff	?___flmul+1,powf@s_l+1
 11335  0016F6  C013  F132         	movff	?___flmul+2,powf@s_l+2
 11336  0016FA  C014  F133         	movff	?___flmul+3,powf@s_l+3
 11337  0016FE  C154  F011         	movff	powf@s,___flmul@b
 11338  001702  C155  F012         	movff	powf@s+1,___flmul@b+1
 11339  001706  C156  F013         	movff	powf@s+2,___flmul@b+2
 11340  00170A  C157  F014         	movff	powf@s+3,___flmul@b+3
 11341  00170E  C154  F015         	movff	powf@s,___flmul@a
 11342  001712  C155  F016         	movff	powf@s+1,___flmul@a+1
 11343  001716  C156  F017         	movff	powf@s+2,___flmul@a+2
 11344  00171A  C157  F018         	movff	powf@s+3,___flmul@a+3
 11345  00171E  EC6D  F023         	call	___flmul	;wreg free
 11346  001722  C011  F18C         	movff	?___flmul,powf@s2
 11347  001726  C012  F18D         	movff	?___flmul+1,powf@s2+1
 11348  00172A  C013  F18E         	movff	?___flmul+2,powf@s2+2
 11349  00172E  C014  F18F         	movff	?___flmul+3,powf@s2+3
 11350  001732  0E55               	movlw	85
 11351  001734  6E05               	movwf	___fladd@a^0,c
 11352  001736  0E32               	movlw	50
 11353  001738  6E06               	movwf	(___fladd@a+1)^0,c
 11354  00173A  0E6C               	movlw	108
 11355  00173C  6E07               	movwf	(___fladd@a+2)^0,c
 11356  00173E  0E3E               	movlw	62
 11357  001740  6E08               	movwf	(___fladd@a+3)^0,c
 11358  001742  0E42               	movlw	66
 11359  001744  6E15               	movwf	___flmul@a^0,c
 11360  001746  0EF1               	movlw	241
 11361  001748  6E16               	movwf	(___flmul@a+1)^0,c
 11362  00174A  0E53               	movlw	83
 11363  00174C  6E17               	movwf	(___flmul@a+2)^0,c
 11364  00174E  0E3E               	movlw	62
 11365  001750  6E18               	movwf	(___flmul@a+3)^0,c
 11366  001752  C18C  F011         	movff	powf@s2,___flmul@b
 11367  001756  C18D  F012         	movff	powf@s2+1,___flmul@b+1
 11368  00175A  C18E  F013         	movff	powf@s2+2,___flmul@b+2
 11369  00175E  C18F  F014         	movff	powf@s2+3,___flmul@b+3
 11370  001762  EC6D  F023         	call	___flmul	;wreg free
 11371  001766  C011  F001         	movff	?___flmul,___fladd@b
 11372  00176A  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11373  00176E  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11374  001772  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11375  001776  EC16  F025         	call	___fladd	;wreg free
 11376  00177A  C001  F1A4         	movff	?___fladd,_powf$2069
 11377  00177E  C002  F1A5         	movff	?___fladd+1,_powf$2069+1
 11378  001782  C003  F1A6         	movff	?___fladd+2,_powf$2069+2
 11379  001786  C004  F1A7         	movff	?___fladd+3,_powf$2069+3
 11380  00178A  0E05               	movlw	5
 11381  00178C  6E05               	movwf	___fladd@a^0,c
 11382  00178E  0EA3               	movlw	163
 11383  001790  6E06               	movwf	(___fladd@a+1)^0,c
 11384  001792  0E8B               	movlw	139
 11385  001794  6E07               	movwf	(___fladd@a+2)^0,c
 11386  001796  0E3E               	movlw	62
 11387  001798  6E08               	movwf	(___fladd@a+3)^0,c
 11388  00179A  C18C  F015         	movff	powf@s2,___flmul@a
 11389  00179E  C18D  F016         	movff	powf@s2+1,___flmul@a+1
 11390  0017A2  C18E  F017         	movff	powf@s2+2,___flmul@a+2
 11391  0017A6  C18F  F018         	movff	powf@s2+3,___flmul@a+3
 11392  0017AA  C1A4  F011         	movff	_powf$2069,___flmul@b
 11393  0017AE  C1A5  F012         	movff	_powf$2069+1,___flmul@b+1
 11394  0017B2  C1A6  F013         	movff	_powf$2069+2,___flmul@b+2
 11395  0017B6  C1A7  F014         	movff	_powf$2069+3,___flmul@b+3
 11396  0017BA  EC6D  F023         	call	___flmul	;wreg free
 11397  0017BE  C011  F001         	movff	?___flmul,___fladd@b
 11398  0017C2  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11399  0017C6  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11400  0017CA  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11401  0017CE  EC16  F025         	call	___fladd	;wreg free
 11402  0017D2  C001  F158         	movff	?___fladd,_powf$2070
 11403  0017D6  C002  F159         	movff	?___fladd+1,_powf$2070+1
 11404  0017DA  C003  F15A         	movff	?___fladd+2,_powf$2070+2
 11405  0017DE  C004  F15B         	movff	?___fladd+3,_powf$2070+3
 11406  0017E2  0EAB               	movlw	171
 11407  0017E4  6E05               	movwf	___fladd@a^0,c
 11408  0017E6  0EAA               	movlw	170
 11409  0017E8  6E06               	movwf	(___fladd@a+1)^0,c
 11410  0017EA  0EAA               	movlw	170
 11411  0017EC  6E07               	movwf	(___fladd@a+2)^0,c
 11412  0017EE  0E3E               	movlw	62
 11413  0017F0  6E08               	movwf	(___fladd@a+3)^0,c
 11414  0017F2  C18C  F015         	movff	powf@s2,___flmul@a
 11415  0017F6  C18D  F016         	movff	powf@s2+1,___flmul@a+1
 11416  0017FA  C18E  F017         	movff	powf@s2+2,___flmul@a+2
 11417  0017FE  C18F  F018         	movff	powf@s2+3,___flmul@a+3
 11418  001802  C158  F011         	movff	_powf$2070,___flmul@b
 11419  001806  C159  F012         	movff	_powf$2070+1,___flmul@b+1
 11420  00180A  C15A  F013         	movff	_powf$2070+2,___flmul@b+2
 11421  00180E  C15B  F014         	movff	_powf$2070+3,___flmul@b+3
 11422  001812  EC6D  F023         	call	___flmul	;wreg free
 11423  001816  C011  F001         	movff	?___flmul,___fladd@b
 11424  00181A  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11425  00181E  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11426  001822  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11427  001826  EC16  F025         	call	___fladd	;wreg free
 11428  00182A  C001  F148         	movff	?___fladd,_powf$2071
 11429  00182E  C002  F149         	movff	?___fladd+1,_powf$2071+1
 11430  001832  C003  F14A         	movff	?___fladd+2,_powf$2071+2
 11431  001836  C004  F14B         	movff	?___fladd+3,_powf$2071+3
 11432  00183A  0EB7               	movlw	183
 11433  00183C  6E05               	movwf	___fladd@a^0,c
 11434  00183E  0E6D               	movlw	109
 11435  001840  6E06               	movwf	(___fladd@a+1)^0,c
 11436  001842  0EDB               	movlw	219
 11437  001844  6E07               	movwf	(___fladd@a+2)^0,c
 11438  001846  0E3E               	movlw	62
 11439  001848  6E08               	movwf	(___fladd@a+3)^0,c
 11440  00184A  C18C  F015         	movff	powf@s2,___flmul@a
 11441  00184E  C18D  F016         	movff	powf@s2+1,___flmul@a+1
 11442  001852  C18E  F017         	movff	powf@s2+2,___flmul@a+2
 11443  001856  C18F  F018         	movff	powf@s2+3,___flmul@a+3
 11444  00185A  C148  F011         	movff	_powf$2071,___flmul@b
 11445  00185E  C149  F012         	movff	_powf$2071+1,___flmul@b+1
 11446  001862  C14A  F013         	movff	_powf$2071+2,___flmul@b+2
 11447  001866  C14B  F014         	movff	_powf$2071+3,___flmul@b+3
 11448  00186A  EC6D  F023         	call	___flmul	;wreg free
 11449  00186E  C011  F001         	movff	?___flmul,___fladd@b
 11450  001872  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11451  001876  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11452  00187A  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11453  00187E  EC16  F025         	call	___fladd	;wreg free
 11454  001882  C001  F138         	movff	?___fladd,_powf$2073
 11455  001886  C002  F139         	movff	?___fladd+1,_powf$2073+1
 11456  00188A  C003  F13A         	movff	?___fladd+2,_powf$2073+2
 11457  00188E  C004  F13B         	movff	?___fladd+3,_powf$2073+3
 11458  001892  0E9A               	movlw	154
 11459  001894  6E05               	movwf	___fladd@a^0,c
 11460  001896  0E99               	movlw	153
 11461  001898  6E06               	movwf	(___fladd@a+1)^0,c
 11462  00189A  0E19               	movlw	25
 11463  00189C  6E07               	movwf	(___fladd@a+2)^0,c
 11464  00189E  0E3F               	movlw	63
 11465  0018A0  6E08               	movwf	(___fladd@a+3)^0,c
 11466  0018A2  C18C  F015         	movff	powf@s2,___flmul@a
 11467  0018A6  C18D  F016         	movff	powf@s2+1,___flmul@a+1
 11468  0018AA  C18E  F017         	movff	powf@s2+2,___flmul@a+2
 11469  0018AE  C18F  F018         	movff	powf@s2+3,___flmul@a+3
 11470  0018B2  C138  F011         	movff	_powf$2073,___flmul@b
 11471  0018B6  C139  F012         	movff	_powf$2073+1,___flmul@b+1
 11472  0018BA  C13A  F013         	movff	_powf$2073+2,___flmul@b+2
 11473  0018BE  C13B  F014         	movff	_powf$2073+3,___flmul@b+3
 11474  0018C2  EC6D  F023         	call	___flmul	;wreg free
 11475  0018C6  C011  F001         	movff	?___flmul,___fladd@b
 11476  0018CA  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11477  0018CE  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11478  0018D2  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11479  0018D6  EC16  F025         	call	___fladd	;wreg free
 11480  0018DA  C001  F100         	movff	?___fladd,_powf$2074
 11481  0018DE  C002  F101         	movff	?___fladd+1,_powf$2074+1
 11482  0018E2  C003  F102         	movff	?___fladd+2,_powf$2074+2
 11483  0018E6  C004  F103         	movff	?___fladd+3,_powf$2074+3
 11484  0018EA  C18C  F015         	movff	powf@s2,___flmul@a
 11485  0018EE  C18D  F016         	movff	powf@s2+1,___flmul@a+1
 11486  0018F2  C18E  F017         	movff	powf@s2+2,___flmul@a+2
 11487  0018F6  C18F  F018         	movff	powf@s2+3,___flmul@a+3
 11488  0018FA  C18C  F011         	movff	powf@s2,___flmul@b
 11489  0018FE  C18D  F012         	movff	powf@s2+1,___flmul@b+1
 11490  001902  C18E  F013         	movff	powf@s2+2,___flmul@b+2
 11491  001906  C18F  F014         	movff	powf@s2+3,___flmul@b+3
 11492  00190A  EC6D  F023         	call	___flmul	;wreg free
 11493  00190E  C011  F104         	movff	?___flmul,_powf$2075
 11494  001912  C012  F105         	movff	?___flmul+1,_powf$2075+1
 11495  001916  C013  F106         	movff	?___flmul+2,_powf$2075+2
 11496  00191A  C014  F107         	movff	?___flmul+3,_powf$2075+3
 11497  00191E  C100  F011         	movff	_powf$2074,___flmul@b
 11498  001922  C101  F012         	movff	_powf$2074+1,___flmul@b+1
 11499  001926  C102  F013         	movff	_powf$2074+2,___flmul@b+2
 11500  00192A  C103  F014         	movff	_powf$2074+3,___flmul@b+3
 11501  00192E  C104  F015         	movff	_powf$2075,___flmul@a
 11502  001932  C105  F016         	movff	_powf$2075+1,___flmul@a+1
 11503  001936  C106  F017         	movff	_powf$2075+2,___flmul@a+2
 11504  00193A  C107  F018         	movff	_powf$2075+3,___flmul@a+3
 11505  00193E  EC6D  F023         	call	___flmul	;wreg free
 11506  001942  C011  F14C         	movff	?___flmul,powf@r
 11507  001946  C012  F14D         	movff	?___flmul+1,powf@r+1
 11508  00194A  C013  F14E         	movff	?___flmul+2,powf@r+2
 11509  00194E  C014  F14F         	movff	?___flmul+3,powf@r+3
 11510  001952  C130  F015         	movff	powf@s_l,___flmul@a
 11511  001956  C131  F016         	movff	powf@s_l+1,___flmul@a+1
 11512  00195A  C132  F017         	movff	powf@s_l+2,___flmul@a+2
 11513  00195E  C133  F018         	movff	powf@s_l+3,___flmul@a+3
 11514  001962  C154  F005         	movff	powf@s,___fladd@a
 11515  001966  C155  F006         	movff	powf@s+1,___fladd@a+1
 11516  00196A  C156  F007         	movff	powf@s+2,___fladd@a+2
 11517  00196E  C157  F008         	movff	powf@s+3,___fladd@a+3
 11518  001972  C16C  F001         	movff	powf@s_h,___fladd@b
 11519  001976  C16D  F002         	movff	powf@s_h+1,___fladd@b+1
 11520  00197A  C16E  F003         	movff	powf@s_h+2,___fladd@b+2
 11521  00197E  C16F  F004         	movff	powf@s_h+3,___fladd@b+3
 11522  001982  EC16  F025         	call	___fladd	;wreg free
 11523  001986  C001  F011         	movff	?___fladd,___flmul@b
 11524  00198A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11525  00198E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11526  001992  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11527  001996  EC6D  F023         	call	___flmul	;wreg free
 11528  00199A  C011  F15C         	movff	?___flmul,_powf$2076
 11529  00199E  C012  F15D         	movff	?___flmul+1,_powf$2076+1
 11530  0019A2  C013  F15E         	movff	?___flmul+2,_powf$2076+2
 11531  0019A6  C014  F15F         	movff	?___flmul+3,_powf$2076+3
 11532  0019AA  C14C  F001         	movff	powf@r,___fladd@b
 11533  0019AE  C14D  F002         	movff	powf@r+1,___fladd@b+1
 11534  0019B2  C14E  F003         	movff	powf@r+2,___fladd@b+2
 11535  0019B6  C14F  F004         	movff	powf@r+3,___fladd@b+3
 11536  0019BA  C15C  F005         	movff	_powf$2076,___fladd@a
 11537  0019BE  C15D  F006         	movff	_powf$2076+1,___fladd@a+1
 11538  0019C2  C15E  F007         	movff	_powf$2076+2,___fladd@a+2
 11539  0019C6  C15F  F008         	movff	_powf$2076+3,___fladd@a+3
 11540  0019CA  EC16  F025         	call	___fladd	;wreg free
 11541  0019CE  C001  F14C         	movff	?___fladd,powf@r
 11542  0019D2  C002  F14D         	movff	?___fladd+1,powf@r+1
 11543  0019D6  C003  F14E         	movff	?___fladd+2,powf@r+2
 11544  0019DA  C004  F14F         	movff	?___fladd+3,powf@r+3
 11545  0019DE  C16C  F011         	movff	powf@s_h,___flmul@b
 11546  0019E2  C16D  F012         	movff	powf@s_h+1,___flmul@b+1
 11547  0019E6  C16E  F013         	movff	powf@s_h+2,___flmul@b+2
 11548  0019EA  C16F  F014         	movff	powf@s_h+3,___flmul@b+3
 11549  0019EE  C16C  F015         	movff	powf@s_h,___flmul@a
 11550  0019F2  C16D  F016         	movff	powf@s_h+1,___flmul@a+1
 11551  0019F6  C16E  F017         	movff	powf@s_h+2,___flmul@a+2
 11552  0019FA  C16F  F018         	movff	powf@s_h+3,___flmul@a+3
 11553  0019FE  EC6D  F023         	call	___flmul	;wreg free
 11554  001A02  C011  F18C         	movff	?___flmul,powf@s2
 11555  001A06  C012  F18D         	movff	?___flmul+1,powf@s2+1
 11556  001A0A  C013  F18E         	movff	?___flmul+2,powf@s2+2
 11557  001A0E  C014  F18F         	movff	?___flmul+3,powf@s2+3
 11558  001A12  0E00               	movlw	0
 11559  001A14  6E05               	movwf	___fladd@a^0,c
 11560  001A16  0E00               	movlw	0
 11561  001A18  6E06               	movwf	(___fladd@a+1)^0,c
 11562  001A1A  0E40               	movlw	64
 11563  001A1C  6E07               	movwf	(___fladd@a+2)^0,c
 11564  001A1E  0E40               	movlw	64
 11565  001A20  6E08               	movwf	(___fladd@a+3)^0,c
 11566  001A22  C18C  F001         	movff	powf@s2,___fladd@b
 11567  001A26  C18D  F002         	movff	powf@s2+1,___fladd@b+1
 11568  001A2A  C18E  F003         	movff	powf@s2+2,___fladd@b+2
 11569  001A2E  C18F  F004         	movff	powf@s2+3,___fladd@b+3
 11570  001A32  EC16  F025         	call	___fladd	;wreg free
 11571  001A36  C001  F15C         	movff	?___fladd,_powf$2076
 11572  001A3A  C002  F15D         	movff	?___fladd+1,_powf$2076+1
 11573  001A3E  C003  F15E         	movff	?___fladd+2,_powf$2076+2
 11574  001A42  C004  F15F         	movff	?___fladd+3,_powf$2076+3
 11575  001A46  C15C  F001         	movff	_powf$2076,___fladd@b
 11576  001A4A  C15D  F002         	movff	_powf$2076+1,___fladd@b+1
 11577  001A4E  C15E  F003         	movff	_powf$2076+2,___fladd@b+2
 11578  001A52  C15F  F004         	movff	_powf$2076+3,___fladd@b+3
 11579  001A56  C14C  F005         	movff	powf@r,___fladd@a
 11580  001A5A  C14D  F006         	movff	powf@r+1,___fladd@a+1
 11581  001A5E  C14E  F007         	movff	powf@r+2,___fladd@a+2
 11582  001A62  C14F  F008         	movff	powf@r+3,___fladd@a+3
 11583  001A66  EC16  F025         	call	___fladd	;wreg free
 11584  001A6A  C001  F168         	movff	?___fladd,powf@t_h
 11585  001A6E  C002  F169         	movff	?___fladd+1,powf@t_h+1
 11586  001A72  C003  F16A         	movff	?___fladd+2,powf@t_h+2
 11587  001A76  C004  F16B         	movff	?___fladd+3,powf@t_h+3
 11588  001A7A  C168  F1B8         	movff	powf@t_h,powf@__xc8_float_word
 11589  001A7E  C169  F1B9         	movff	powf@t_h+1,powf@__xc8_float_word+1
 11590  001A82  C16A  F1BA         	movff	powf@t_h+2,powf@__xc8_float_word+2
 11591  001A86  C16B  F1BB         	movff	powf@t_h+3,powf@__xc8_float_word+3
 11592  001A8A  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 11593  001A8E  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 11594  001A92  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 11595  001A96  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 11596  001A9A  0E00               	movlw	0
 11597  001A9C  0101               	movlb	1	; () banked
 11598  001A9E  1594               	andwf	powf@is& (0+255),w,b
 11599  001AA0  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11600  001AA2  0EF0               	movlw	240
 11601  001AA4  1595               	andwf	(powf@is+1)& (0+255),w,b
 11602  001AA6  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11603  001AA8  0EFF               	movlw	255
 11604  001AAA  1596               	andwf	(powf@is+2)& (0+255),w,b
 11605  001AAC  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11606  001AAE  0EFF               	movlw	255
 11607  001AB0  1597               	andwf	(powf@is+3)& (0+255),w,b
 11608  001AB2  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11609                           
 11610                           ; BSR set to: 1
 11611  001AB4  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
 11612  001AB8  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
 11613  001ABC  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
 11614  001AC0  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
 11615                           
 11616                           ; BSR set to: 1
 11617  001AC4  0E00               	movlw	0
 11618  001AC6  6E05               	movwf	___fladd@a^0,c
 11619  001AC8  0E00               	movlw	0
 11620  001ACA  6E06               	movwf	(___fladd@a+1)^0,c
 11621  001ACC  0E40               	movlw	64
 11622  001ACE  6E07               	movwf	(___fladd@a+2)^0,c
 11623  001AD0  0EC0               	movlw	192
 11624  001AD2  6E08               	movwf	(___fladd@a+3)^0,c
 11625  001AD4  C168  F001         	movff	powf@t_h,___fladd@b
 11626  001AD8  C169  F002         	movff	powf@t_h+1,___fladd@b+1
 11627  001ADC  C16A  F003         	movff	powf@t_h+2,___fladd@b+2
 11628  001AE0  C16B  F004         	movff	powf@t_h+3,___fladd@b+3
 11629  001AE4  EC16  F025         	call	___fladd	;wreg free
 11630  001AE8  C001  F13C         	movff	?___fladd,_powf$2077
 11631  001AEC  C002  F13D         	movff	?___fladd+1,_powf$2077+1
 11632  001AF0  C003  F13E         	movff	?___fladd+2,_powf$2077+2
 11633  001AF4  C004  F13F         	movff	?___fladd+3,_powf$2077+3
 11634  001AF8  C18C  F02E         	movff	powf@s2,___flsub@a
 11635  001AFC  C18D  F02F         	movff	powf@s2+1,___flsub@a+1
 11636  001B00  C18E  F030         	movff	powf@s2+2,___flsub@a+2
 11637  001B04  C18F  F031         	movff	powf@s2+3,___flsub@a+3
 11638  001B08  C13C  F02A         	movff	_powf$2077,___flsub@b
 11639  001B0C  C13D  F02B         	movff	_powf$2077+1,___flsub@b+1
 11640  001B10  C13E  F02C         	movff	_powf$2077+2,___flsub@b+2
 11641  001B14  C13F  F02D         	movff	_powf$2077+3,___flsub@b+3
 11642  001B18  ECAE  F036         	call	___flsub	;wreg free
 11643  001B1C  C02A  F140         	movff	?___flsub,_powf$2078
 11644  001B20  C02B  F141         	movff	?___flsub+1,_powf$2078+1
 11645  001B24  C02C  F142         	movff	?___flsub+2,_powf$2078+2
 11646  001B28  C02D  F143         	movff	?___flsub+3,_powf$2078+3
 11647  001B2C  C14C  F02A         	movff	powf@r,___flsub@b
 11648  001B30  C14D  F02B         	movff	powf@r+1,___flsub@b+1
 11649  001B34  C14E  F02C         	movff	powf@r+2,___flsub@b+2
 11650  001B38  C14F  F02D         	movff	powf@r+3,___flsub@b+3
 11651  001B3C  C140  F02E         	movff	_powf$2078,___flsub@a
 11652  001B40  C141  F02F         	movff	_powf$2078+1,___flsub@a+1
 11653  001B44  C142  F030         	movff	_powf$2078+2,___flsub@a+2
 11654  001B48  C143  F031         	movff	_powf$2078+3,___flsub@a+3
 11655  001B4C  ECAE  F036         	call	___flsub	;wreg free
 11656  001B50  C02A  F134         	movff	?___flsub,powf@t_l
 11657  001B54  C02B  F135         	movff	?___flsub+1,powf@t_l+1
 11658  001B58  C02C  F136         	movff	?___flsub+2,powf@t_l+2
 11659  001B5C  C02D  F137         	movff	?___flsub+3,powf@t_l+3
 11660  001B60  C16C  F011         	movff	powf@s_h,___flmul@b
 11661  001B64  C16D  F012         	movff	powf@s_h+1,___flmul@b+1
 11662  001B68  C16E  F013         	movff	powf@s_h+2,___flmul@b+2
 11663  001B6C  C16F  F014         	movff	powf@s_h+3,___flmul@b+3
 11664  001B70  C168  F015         	movff	powf@t_h,___flmul@a
 11665  001B74  C169  F016         	movff	powf@t_h+1,___flmul@a+1
 11666  001B78  C16A  F017         	movff	powf@t_h+2,___flmul@a+2
 11667  001B7C  C16B  F018         	movff	powf@t_h+3,___flmul@a+3
 11668  001B80  EC6D  F023         	call	___flmul	;wreg free
 11669  001B84  C011  F174         	movff	?___flmul,powf@u
 11670  001B88  C012  F175         	movff	?___flmul+1,powf@u+1
 11671  001B8C  C013  F176         	movff	?___flmul+2,powf@u+2
 11672  001B90  C014  F177         	movff	?___flmul+3,powf@u+3
 11673  001B94  C168  F015         	movff	powf@t_h,___flmul@a
 11674  001B98  C169  F016         	movff	powf@t_h+1,___flmul@a+1
 11675  001B9C  C16A  F017         	movff	powf@t_h+2,___flmul@a+2
 11676  001BA0  C16B  F018         	movff	powf@t_h+3,___flmul@a+3
 11677  001BA4  C130  F011         	movff	powf@s_l,___flmul@b
 11678  001BA8  C131  F012         	movff	powf@s_l+1,___flmul@b+1
 11679  001BAC  C132  F013         	movff	powf@s_l+2,___flmul@b+2
 11680  001BB0  C133  F014         	movff	powf@s_l+3,___flmul@b+3
 11681  001BB4  EC6D  F023         	call	___flmul	;wreg free
 11682  001BB8  C011  F001         	movff	?___flmul,___fladd@b
 11683  001BBC  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11684  001BC0  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11685  001BC4  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11686  001BC8  C154  F015         	movff	powf@s,___flmul@a
 11687  001BCC  C155  F016         	movff	powf@s+1,___flmul@a+1
 11688  001BD0  C156  F017         	movff	powf@s+2,___flmul@a+2
 11689  001BD4  C157  F018         	movff	powf@s+3,___flmul@a+3
 11690  001BD8  C134  F011         	movff	powf@t_l,___flmul@b
 11691  001BDC  C135  F012         	movff	powf@t_l+1,___flmul@b+1
 11692  001BE0  C136  F013         	movff	powf@t_l+2,___flmul@b+2
 11693  001BE4  C137  F014         	movff	powf@t_l+3,___flmul@b+3
 11694  001BE8  EC6D  F023         	call	___flmul	;wreg free
 11695  001BEC  C011  F005         	movff	?___flmul,___fladd@a
 11696  001BF0  C012  F006         	movff	?___flmul+1,___fladd@a+1
 11697  001BF4  C013  F007         	movff	?___flmul+2,___fladd@a+2
 11698  001BF8  C014  F008         	movff	?___flmul+3,___fladd@a+3
 11699  001BFC  EC16  F025         	call	___fladd	;wreg free
 11700  001C00  C001  F178         	movff	?___fladd,powf@v
 11701  001C04  C002  F179         	movff	?___fladd+1,powf@v+1
 11702  001C08  C003  F17A         	movff	?___fladd+2,powf@v+2
 11703  001C0C  C004  F17B         	movff	?___fladd+3,powf@v+3
 11704  001C10  C174  F001         	movff	powf@u,___fladd@b
 11705  001C14  C175  F002         	movff	powf@u+1,___fladd@b+1
 11706  001C18  C176  F003         	movff	powf@u+2,___fladd@b+2
 11707  001C1C  C177  F004         	movff	powf@u+3,___fladd@b+3
 11708  001C20  C178  F005         	movff	powf@v,___fladd@a
 11709  001C24  C179  F006         	movff	powf@v+1,___fladd@a+1
 11710  001C28  C17A  F007         	movff	powf@v+2,___fladd@a+2
 11711  001C2C  C17B  F008         	movff	powf@v+3,___fladd@a+3
 11712  001C30  EC16  F025         	call	___fladd	;wreg free
 11713  001C34  C001  F19C         	movff	?___fladd,powf@p_h
 11714  001C38  C002  F19D         	movff	?___fladd+1,powf@p_h+1
 11715  001C3C  C003  F19E         	movff	?___fladd+2,powf@p_h+2
 11716  001C40  C004  F19F         	movff	?___fladd+3,powf@p_h+3
 11717  001C44  C19C  F1B8         	movff	powf@p_h,powf@__xc8_float_word
 11718  001C48  C19D  F1B9         	movff	powf@p_h+1,powf@__xc8_float_word+1
 11719  001C4C  C19E  F1BA         	movff	powf@p_h+2,powf@__xc8_float_word+2
 11720  001C50  C19F  F1BB         	movff	powf@p_h+3,powf@__xc8_float_word+3
 11721  001C54  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 11722  001C58  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 11723  001C5C  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 11724  001C60  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 11725  001C64  0E00               	movlw	0
 11726  001C66  0101               	movlb	1	; () banked
 11727  001C68  1594               	andwf	powf@is& (0+255),w,b
 11728  001C6A  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11729  001C6C  0EF0               	movlw	240
 11730  001C6E  1595               	andwf	(powf@is+1)& (0+255),w,b
 11731  001C70  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11732  001C72  0EFF               	movlw	255
 11733  001C74  1596               	andwf	(powf@is+2)& (0+255),w,b
 11734  001C76  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11735  001C78  0EFF               	movlw	255
 11736  001C7A  1597               	andwf	(powf@is+3)& (0+255),w,b
 11737  001C7C  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11738                           
 11739                           ; BSR set to: 1
 11740  001C7E  C1B8  F19C         	movff	powf@__xc8_float_word,powf@p_h
 11741  001C82  C1B9  F19D         	movff	powf@__xc8_float_word+1,powf@p_h+1
 11742  001C86  C1BA  F19E         	movff	powf@__xc8_float_word+2,powf@p_h+2
 11743  001C8A  C1BB  F19F         	movff	powf@__xc8_float_word+3,powf@p_h+3
 11744                           
 11745                           ; BSR set to: 1
 11746  001C8E  C174  F02E         	movff	powf@u,___flsub@a
 11747  001C92  C175  F02F         	movff	powf@u+1,___flsub@a+1
 11748  001C96  C176  F030         	movff	powf@u+2,___flsub@a+2
 11749  001C9A  C177  F031         	movff	powf@u+3,___flsub@a+3
 11750  001C9E  C19C  F02A         	movff	powf@p_h,___flsub@b
 11751  001CA2  C19D  F02B         	movff	powf@p_h+1,___flsub@b+1
 11752  001CA6  C19E  F02C         	movff	powf@p_h+2,___flsub@b+2
 11753  001CAA  C19F  F02D         	movff	powf@p_h+3,___flsub@b+3
 11754  001CAE  ECAE  F036         	call	___flsub	;wreg free
 11755  001CB2  C02A  F198         	movff	?___flsub,_powf$2072
 11756  001CB6  C02B  F199         	movff	?___flsub+1,_powf$2072+1
 11757  001CBA  C02C  F19A         	movff	?___flsub+2,_powf$2072+2
 11758  001CBE  C02D  F19B         	movff	?___flsub+3,_powf$2072+3
 11759  001CC2  C178  F02A         	movff	powf@v,___flsub@b
 11760  001CC6  C179  F02B         	movff	powf@v+1,___flsub@b+1
 11761  001CCA  C17A  F02C         	movff	powf@v+2,___flsub@b+2
 11762  001CCE  C17B  F02D         	movff	powf@v+3,___flsub@b+3
 11763  001CD2  C198  F02E         	movff	_powf$2072,___flsub@a
 11764  001CD6  C199  F02F         	movff	_powf$2072+1,___flsub@a+1
 11765  001CDA  C19A  F030         	movff	_powf$2072+2,___flsub@a+2
 11766  001CDE  C19B  F031         	movff	_powf$2072+3,___flsub@a+3
 11767  001CE2  ECAE  F036         	call	___flsub	;wreg free
 11768  001CE6  C02A  F164         	movff	?___flsub,powf@p_l
 11769  001CEA  C02B  F165         	movff	?___flsub+1,powf@p_l+1
 11770  001CEE  C02C  F166         	movff	?___flsub+2,powf@p_l+2
 11771  001CF2  C02D  F167         	movff	?___flsub+3,powf@p_l+3
 11772  001CF6  C19C  F011         	movff	powf@p_h,___flmul@b
 11773  001CFA  C19D  F012         	movff	powf@p_h+1,___flmul@b+1
 11774  001CFE  C19E  F013         	movff	powf@p_h+2,___flmul@b+2
 11775  001D02  C19F  F014         	movff	powf@p_h+3,___flmul@b+3
 11776  001D06  0E00               	movlw	0
 11777  001D08  6E15               	movwf	___flmul@a^0,c
 11778  001D0A  0E40               	movlw	64
 11779  001D0C  6E16               	movwf	(___flmul@a+1)^0,c
 11780  001D0E  0E76               	movlw	118
 11781  001D10  6E17               	movwf	(___flmul@a+2)^0,c
 11782  001D12  0E3F               	movlw	63
 11783  001D14  6E18               	movwf	(___flmul@a+3)^0,c
 11784  001D16  EC6D  F023         	call	___flmul	;wreg free
 11785  001D1A  C011  F120         	movff	?___flmul,powf@z_h
 11786  001D1E  C012  F121         	movff	?___flmul+1,powf@z_h+1
 11787  001D22  C013  F122         	movff	?___flmul+2,powf@z_h+2
 11788  001D26  C014  F123         	movff	?___flmul+3,powf@z_h+3
 11789  001D2A  0E4F               	movlw	79
 11790  001D2C  6E15               	movwf	___flmul@a^0,c
 11791  001D2E  0E38               	movlw	56
 11792  001D30  6E16               	movwf	(___flmul@a+1)^0,c
 11793  001D32  0E76               	movlw	118
 11794  001D34  6E17               	movwf	(___flmul@a+2)^0,c
 11795  001D36  0E3F               	movlw	63
 11796  001D38  6E18               	movwf	(___flmul@a+3)^0,c
 11797  001D3A  C164  F011         	movff	powf@p_l,___flmul@b
 11798  001D3E  C165  F012         	movff	powf@p_l+1,___flmul@b+1
 11799  001D42  C166  F013         	movff	powf@p_l+2,___flmul@b+2
 11800  001D46  C167  F014         	movff	powf@p_l+3,___flmul@b+3
 11801  001D4A  EC6D  F023         	call	___flmul	;wreg free
 11802  001D4E  C011  F005         	movff	?___flmul,___fladd@a
 11803  001D52  C012  F006         	movff	?___flmul+1,___fladd@a+1
 11804  001D56  C013  F007         	movff	?___flmul+2,___fladd@a+2
 11805  001D5A  C014  F008         	movff	?___flmul+3,___fladd@a+3
 11806  001D5E  0EC6               	movlw	198
 11807  001D60  6E15               	movwf	___flmul@a^0,c
 11808  001D62  0E23               	movlw	35
 11809  001D64  6E16               	movwf	(___flmul@a+1)^0,c
 11810  001D66  0EF6               	movlw	246
 11811  001D68  6E17               	movwf	(___flmul@a+2)^0,c
 11812  001D6A  0EB8               	movlw	184
 11813  001D6C  6E18               	movwf	(___flmul@a+3)^0,c
 11814  001D6E  C19C  F011         	movff	powf@p_h,___flmul@b
 11815  001D72  C19D  F012         	movff	powf@p_h+1,___flmul@b+1
 11816  001D76  C19E  F013         	movff	powf@p_h+2,___flmul@b+2
 11817  001D7A  C19F  F014         	movff	powf@p_h+3,___flmul@b+3
 11818  001D7E  EC6D  F023         	call	___flmul	;wreg free
 11819  001D82  C011  F001         	movff	?___flmul,___fladd@b
 11820  001D86  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11821  001D8A  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11822  001D8E  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11823  001D92  EC16  F025         	call	___fladd	;wreg free
 11824  001D96  C001  F15C         	movff	?___fladd,_powf$2076
 11825  001D9A  C002  F15D         	movff	?___fladd+1,_powf$2076+1
 11826  001D9E  C003  F15E         	movff	?___fladd+2,_powf$2076+2
 11827  001DA2  C004  F15F         	movff	?___fladd+3,_powf$2076+3
 11828  001DA6  C15C  F001         	movff	_powf$2076,___fladd@b
 11829  001DAA  C15D  F002         	movff	_powf$2076+1,___fladd@b+1
 11830  001DAE  C15E  F003         	movff	_powf$2076+2,___fladd@b+2
 11831  001DB2  C15F  F004         	movff	_powf$2076+3,___fladd@b+3
 11832  001DB6  C1A0  F06F         	movff	powf@k,??_powf
 11833  001DBA  C1A1  F070         	movff	powf@k+1,??_powf+1
 11834  001DBE  90D8               	bcf	status,0,c
 11835  001DC0  366F               	rlcf	??_powf^0,f,c
 11836  001DC2  3670               	rlcf	(??_powf+1)^0,f,c
 11837  001DC4  90D8               	bcf	status,0,c
 11838  001DC6  366F               	rlcf	??_powf^0,f,c
 11839  001DC8  3670               	rlcf	(??_powf+1)^0,f,c
 11840  001DCA  0E01               	movlw	low _dp_l
 11841  001DCC  246F               	addwf	??_powf^0,w,c
 11842  001DCE  6EF6               	movwf	tblptrl,c
 11843  001DD0  0E06               	movlw	high _dp_l
 11844  001DD2  2070               	addwfc	(??_powf+1)^0,w,c
 11845  001DD4  6EF7               	movwf	tblptrh,c
 11846  001DD6                     	if	0	;There are less than 3 active tblptr bytes
 11847  001DD6                     	endif
 11848  001DD6  0009               	tblrd		*+
 11849  001DD8  CFF5 F005          	movff	tablat,___fladd@a
 11850  001DDC  0009               	tblrd		*+
 11851  001DDE  CFF5 F006          	movff	tablat,___fladd@a+1
 11852  001DE2  0009               	tblrd		*+
 11853  001DE4  CFF5 F007          	movff	tablat,___fladd@a+2
 11854  001DE8  000A               	tblrd		*-
 11855  001DEA  CFF5 F008          	movff	tablat,___fladd@a+3
 11856  001DEE  EC16  F025         	call	___fladd	;wreg free
 11857  001DF2  C001  F124         	movff	?___fladd,powf@z_l
 11858  001DF6  C002  F125         	movff	?___fladd+1,powf@z_l+1
 11859  001DFA  C003  F126         	movff	?___fladd+2,powf@z_l+2
 11860  001DFE  C004  F127         	movff	?___fladd+3,powf@z_l+3
 11861  001E02  C188  F001         	movff	powf@n,___xxtofl@val
 11862  001E06  C189  F002         	movff	powf@n+1,___xxtofl@val+1
 11863  001E0A  C18A  F003         	movff	powf@n+2,___xxtofl@val+2
 11864  001E0E  C18B  F004         	movff	powf@n+3,___xxtofl@val+3
 11865  001E12  0E01               	movlw	1
 11866  001E14  ECAC  F02E         	call	___xxtofl
 11867  001E18  C001  F1B0         	movff	?___xxtofl,powf@t
 11868  001E1C  C002  F1B1         	movff	?___xxtofl+1,powf@t+1
 11869  001E20  C003  F1B2         	movff	?___xxtofl+2,powf@t+2
 11870  001E24  C004  F1B3         	movff	?___xxtofl+3,powf@t+3
 11871  001E28  C124  F005         	movff	powf@z_l,___fladd@a
 11872  001E2C  C125  F006         	movff	powf@z_l+1,___fladd@a+1
 11873  001E30  C126  F007         	movff	powf@z_l+2,___fladd@a+2
 11874  001E34  C127  F008         	movff	powf@z_l+3,___fladd@a+3
 11875  001E38  C120  F001         	movff	powf@z_h,___fladd@b
 11876  001E3C  C121  F002         	movff	powf@z_h+1,___fladd@b+1
 11877  001E40  C122  F003         	movff	powf@z_h+2,___fladd@b+2
 11878  001E44  C123  F004         	movff	powf@z_h+3,___fladd@b+3
 11879  001E48  EC16  F025         	call	___fladd	;wreg free
 11880  001E4C  C001  F15C         	movff	?___fladd,_powf$2076
 11881  001E50  C002  F15D         	movff	?___fladd+1,_powf$2076+1
 11882  001E54  C003  F15E         	movff	?___fladd+2,_powf$2076+2
 11883  001E58  C004  F15F         	movff	?___fladd+3,_powf$2076+3
 11884  001E5C  C1A0  F06F         	movff	powf@k,??_powf
 11885  001E60  C1A1  F070         	movff	powf@k+1,??_powf+1
 11886  001E64  90D8               	bcf	status,0,c
 11887  001E66  366F               	rlcf	??_powf^0,f,c
 11888  001E68  3670               	rlcf	(??_powf+1)^0,f,c
 11889  001E6A  90D8               	bcf	status,0,c
 11890  001E6C  366F               	rlcf	??_powf^0,f,c
 11891  001E6E  3670               	rlcf	(??_powf+1)^0,f,c
 11892  001E70  0E09               	movlw	low _dp_h
 11893  001E72  246F               	addwf	??_powf^0,w,c
 11894  001E74  6EF6               	movwf	tblptrl,c
 11895  001E76  0E06               	movlw	high _dp_h
 11896  001E78  2070               	addwfc	(??_powf+1)^0,w,c
 11897  001E7A  6EF7               	movwf	tblptrh,c
 11898  001E7C                     	if	0	;There are less than 3 active tblptr bytes
 11899  001E7C                     	endif
 11900  001E7C  0009               	tblrd		*+
 11901  001E7E  CFF5 F005          	movff	tablat,___fladd@a
 11902  001E82  0009               	tblrd		*+
 11903  001E84  CFF5 F006          	movff	tablat,___fladd@a+1
 11904  001E88  0009               	tblrd		*+
 11905  001E8A  CFF5 F007          	movff	tablat,___fladd@a+2
 11906  001E8E  000A               	tblrd		*-
 11907  001E90  CFF5 F008          	movff	tablat,___fladd@a+3
 11908  001E94  C15C  F001         	movff	_powf$2076,___fladd@b
 11909  001E98  C15D  F002         	movff	_powf$2076+1,___fladd@b+1
 11910  001E9C  C15E  F003         	movff	_powf$2076+2,___fladd@b+2
 11911  001EA0  C15F  F004         	movff	_powf$2076+3,___fladd@b+3
 11912  001EA4  EC16  F025         	call	___fladd	;wreg free
 11913  001EA8  C001  F108         	movff	?___fladd,_powf$2079
 11914  001EAC  C002  F109         	movff	?___fladd+1,_powf$2079+1
 11915  001EB0  C003  F10A         	movff	?___fladd+2,_powf$2079+2
 11916  001EB4  C004  F10B         	movff	?___fladd+3,_powf$2079+3
 11917  001EB8  C108  F001         	movff	_powf$2079,___fladd@b
 11918  001EBC  C109  F002         	movff	_powf$2079+1,___fladd@b+1
 11919  001EC0  C10A  F003         	movff	_powf$2079+2,___fladd@b+2
 11920  001EC4  C10B  F004         	movff	_powf$2079+3,___fladd@b+3
 11921  001EC8  C1B0  F005         	movff	powf@t,___fladd@a
 11922  001ECC  C1B1  F006         	movff	powf@t+1,___fladd@a+1
 11923  001ED0  C1B2  F007         	movff	powf@t+2,___fladd@a+2
 11924  001ED4  C1B3  F008         	movff	powf@t+3,___fladd@a+3
 11925  001ED8  EC16  F025         	call	___fladd	;wreg free
 11926  001EDC  C001  F180         	movff	?___fladd,powf@t1
 11927  001EE0  C002  F181         	movff	?___fladd+1,powf@t1+1
 11928  001EE4  C003  F182         	movff	?___fladd+2,powf@t1+2
 11929  001EE8  C004  F183         	movff	?___fladd+3,powf@t1+3
 11930  001EEC  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
 11931  001EF0  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
 11932  001EF4  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
 11933  001EF8  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
 11934  001EFC  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 11935  001F00  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 11936  001F04  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 11937  001F08  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 11938  001F0C  0E00               	movlw	0
 11939  001F0E  0101               	movlb	1	; () banked
 11940  001F10  1594               	andwf	powf@is& (0+255),w,b
 11941  001F12  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11942  001F14  0EF0               	movlw	240
 11943  001F16  1595               	andwf	(powf@is+1)& (0+255),w,b
 11944  001F18  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11945  001F1A  0EFF               	movlw	255
 11946  001F1C  1596               	andwf	(powf@is+2)& (0+255),w,b
 11947  001F1E  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11948  001F20  0EFF               	movlw	255
 11949  001F22  1597               	andwf	(powf@is+3)& (0+255),w,b
 11950  001F24  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11951                           
 11952                           ; BSR set to: 1
 11953  001F26  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
 11954  001F2A  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
 11955  001F2E  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
 11956  001F32  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
 11957                           
 11958                           ; BSR set to: 1
 11959  001F36  C1B0  F02E         	movff	powf@t,___flsub@a
 11960  001F3A  C1B1  F02F         	movff	powf@t+1,___flsub@a+1
 11961  001F3E  C1B2  F030         	movff	powf@t+2,___flsub@a+2
 11962  001F42  C1B3  F031         	movff	powf@t+3,___flsub@a+3
 11963  001F46  C180  F02A         	movff	powf@t1,___flsub@b
 11964  001F4A  C181  F02B         	movff	powf@t1+1,___flsub@b+1
 11965  001F4E  C182  F02C         	movff	powf@t1+2,___flsub@b+2
 11966  001F52  C183  F02D         	movff	powf@t1+3,___flsub@b+3
 11967  001F56  ECAE  F036         	call	___flsub	;wreg free
 11968  001F5A  C02A  F198         	movff	?___flsub,_powf$2072
 11969  001F5E  C02B  F199         	movff	?___flsub+1,_powf$2072+1
 11970  001F62  C02C  F19A         	movff	?___flsub+2,_powf$2072+2
 11971  001F66  C02D  F19B         	movff	?___flsub+3,_powf$2072+3
 11972  001F6A  C1A0  F06F         	movff	powf@k,??_powf
 11973  001F6E  C1A1  F070         	movff	powf@k+1,??_powf+1
 11974  001F72  90D8               	bcf	status,0,c
 11975  001F74  366F               	rlcf	??_powf^0,f,c
 11976  001F76  3670               	rlcf	(??_powf+1)^0,f,c
 11977  001F78  90D8               	bcf	status,0,c
 11978  001F7A  366F               	rlcf	??_powf^0,f,c
 11979  001F7C  3670               	rlcf	(??_powf+1)^0,f,c
 11980  001F7E  0E09               	movlw	low _dp_h
 11981  001F80  246F               	addwf	??_powf^0,w,c
 11982  001F82  6EF6               	movwf	tblptrl,c
 11983  001F84  0E06               	movlw	high _dp_h
 11984  001F86  2070               	addwfc	(??_powf+1)^0,w,c
 11985  001F88  6EF7               	movwf	tblptrh,c
 11986  001F8A                     	if	0	;There are less than 3 active tblptr bytes
 11987  001F8A                     	endif
 11988  001F8A  0009               	tblrd		*+
 11989  001F8C  CFF5 F02E          	movff	tablat,___flsub@a
 11990  001F90  0009               	tblrd		*+
 11991  001F92  CFF5 F02F          	movff	tablat,___flsub@a+1
 11992  001F96  0009               	tblrd		*+
 11993  001F98  CFF5 F030          	movff	tablat,___flsub@a+2
 11994  001F9C  000A               	tblrd		*-
 11995  001F9E  CFF5 F031          	movff	tablat,___flsub@a+3
 11996  001FA2  C198  F02A         	movff	_powf$2072,___flsub@b
 11997  001FA6  C199  F02B         	movff	_powf$2072+1,___flsub@b+1
 11998  001FAA  C19A  F02C         	movff	_powf$2072+2,___flsub@b+2
 11999  001FAE  C19B  F02D         	movff	_powf$2072+3,___flsub@b+3
 12000  001FB2  ECAE  F036         	call	___flsub	;wreg free
 12001  001FB6  C02A  F140         	movff	?___flsub,_powf$2078
 12002  001FBA  C02B  F141         	movff	?___flsub+1,_powf$2078+1
 12003  001FBE  C02C  F142         	movff	?___flsub+2,_powf$2078+2
 12004  001FC2  C02D  F143         	movff	?___flsub+3,_powf$2078+3
 12005  001FC6  C120  F02E         	movff	powf@z_h,___flsub@a
 12006  001FCA  C121  F02F         	movff	powf@z_h+1,___flsub@a+1
 12007  001FCE  C122  F030         	movff	powf@z_h+2,___flsub@a+2
 12008  001FD2  C123  F031         	movff	powf@z_h+3,___flsub@a+3
 12009  001FD6  C140  F02A         	movff	_powf$2078,___flsub@b
 12010  001FDA  C141  F02B         	movff	_powf$2078+1,___flsub@b+1
 12011  001FDE  C142  F02C         	movff	_powf$2078+2,___flsub@b+2
 12012  001FE2  C143  F02D         	movff	_powf$2078+3,___flsub@b+3
 12013  001FE6  ECAE  F036         	call	___flsub	;wreg free
 12014  001FEA  C02A  F10C         	movff	?___flsub,_powf$2080
 12015  001FEE  C02B  F10D         	movff	?___flsub+1,_powf$2080+1
 12016  001FF2  C02C  F10E         	movff	?___flsub+2,_powf$2080+2
 12017  001FF6  C02D  F10F         	movff	?___flsub+3,_powf$2080+3
 12018  001FFA  C124  F02A         	movff	powf@z_l,___flsub@b
 12019  001FFE  C125  F02B         	movff	powf@z_l+1,___flsub@b+1
 12020  002002  C126  F02C         	movff	powf@z_l+2,___flsub@b+2
 12021  002006  C127  F02D         	movff	powf@z_l+3,___flsub@b+3
 12022  00200A  C10C  F02E         	movff	_powf$2080,___flsub@a
 12023  00200E  C10D  F02F         	movff	_powf$2080+1,___flsub@a+1
 12024  002012  C10E  F030         	movff	_powf$2080+2,___flsub@a+2
 12025  002016  C10F  F031         	movff	_powf$2080+3,___flsub@a+3
 12026  00201A  ECAE  F036         	call	___flsub	;wreg free
 12027  00201E                     L9:
 12028  00201E  C02A  F11C         	movff	?___flsub,powf@t2
 12029  002022  C02B  F11D         	movff	?___flsub+1,powf@t2+1
 12030  002026  C02C  F11E         	movff	?___flsub+2,powf@t2+2
 12031  00202A  C02D  F11F         	movff	?___flsub+3,powf@t2+3
 12032  00202E  C0C6  F1B8         	movff	powf@y,powf@__xc8_float_word
 12033  002032  C0C7  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
 12034  002036  C0C8  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
 12035  00203A  C0C9  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
 12036  00203E  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 12037  002042  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 12038  002046  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 12039  00204A  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 12040  00204E  0E00               	movlw	0
 12041  002050  0101               	movlb	1	; () banked
 12042  002052  1594               	andwf	powf@is& (0+255),w,b
 12043  002054  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 12044  002056  0EF0               	movlw	240
 12045  002058  1595               	andwf	(powf@is+1)& (0+255),w,b
 12046  00205A  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 12047  00205C  0EFF               	movlw	255
 12048  00205E  1596               	andwf	(powf@is+2)& (0+255),w,b
 12049  002060  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 12050  002062  0EFF               	movlw	255
 12051  002064  1597               	andwf	(powf@is+3)& (0+255),w,b
 12052  002066  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 12053                           
 12054                           ; BSR set to: 1
 12055  002068  C1B8  F128         	movff	powf@__xc8_float_word,powf@y1
 12056  00206C  C1B9  F129         	movff	powf@__xc8_float_word+1,powf@y1+1
 12057  002070  C1BA  F12A         	movff	powf@__xc8_float_word+2,powf@y1+2
 12058  002074  C1BB  F12B         	movff	powf@__xc8_float_word+3,powf@y1+3
 12059                           
 12060                           ; BSR set to: 1
 12061  002078  C180  F015         	movff	powf@t1,___flmul@a
 12062  00207C  C181  F016         	movff	powf@t1+1,___flmul@a+1
 12063  002080  C182  F017         	movff	powf@t1+2,___flmul@a+2
 12064  002084  C183  F018         	movff	powf@t1+3,___flmul@a+3
 12065  002088  C128  F02E         	movff	powf@y1,___flsub@a
 12066  00208C  C129  F02F         	movff	powf@y1+1,___flsub@a+1
 12067  002090  C12A  F030         	movff	powf@y1+2,___flsub@a+2
 12068  002094  C12B  F031         	movff	powf@y1+3,___flsub@a+3
 12069  002098  C0C6  F02A         	movff	powf@y,___flsub@b
 12070  00209C  C0C7  F02B         	movff	powf@y+1,___flsub@b+1
 12071  0020A0  C0C8  F02C         	movff	powf@y+2,___flsub@b+2
 12072  0020A4  C0C9  F02D         	movff	powf@y+3,___flsub@b+3
 12073  0020A8  ECAE  F036         	call	___flsub	;wreg free
 12074  0020AC  C02A  F011         	movff	?___flsub,___flmul@b
 12075  0020B0  C02B  F012         	movff	?___flsub+1,___flmul@b+1
 12076  0020B4  C02C  F013         	movff	?___flsub+2,___flmul@b+2
 12077  0020B8  C02D  F014         	movff	?___flsub+3,___flmul@b+3
 12078  0020BC  EC6D  F023         	call	___flmul	;wreg free
 12079  0020C0  C011  F110         	movff	?___flmul,_powf$2081
 12080  0020C4  C012  F111         	movff	?___flmul+1,_powf$2081+1
 12081  0020C8  C013  F112         	movff	?___flmul+2,_powf$2081+2
 12082  0020CC  C014  F113         	movff	?___flmul+3,_powf$2081+3
 12083  0020D0  C110  F001         	movff	_powf$2081,___fladd@b
 12084  0020D4  C111  F002         	movff	_powf$2081+1,___fladd@b+1
 12085  0020D8  C112  F003         	movff	_powf$2081+2,___fladd@b+2
 12086  0020DC  C113  F004         	movff	_powf$2081+3,___fladd@b+3
 12087  0020E0  C11C  F015         	movff	powf@t2,___flmul@a
 12088  0020E4  C11D  F016         	movff	powf@t2+1,___flmul@a+1
 12089  0020E8  C11E  F017         	movff	powf@t2+2,___flmul@a+2
 12090  0020EC  C11F  F018         	movff	powf@t2+3,___flmul@a+3
 12091  0020F0  C0C6  F011         	movff	powf@y,___flmul@b
 12092  0020F4  C0C7  F012         	movff	powf@y+1,___flmul@b+1
 12093  0020F8  C0C8  F013         	movff	powf@y+2,___flmul@b+2
 12094  0020FC  C0C9  F014         	movff	powf@y+3,___flmul@b+3
 12095  002100  EC6D  F023         	call	___flmul	;wreg free
 12096  002104  C011  F005         	movff	?___flmul,___fladd@a
 12097  002108  C012  F006         	movff	?___flmul+1,___fladd@a+1
 12098  00210C  C013  F007         	movff	?___flmul+2,___fladd@a+2
 12099  002110  C014  F008         	movff	?___flmul+3,___fladd@a+3
 12100  002114  EC16  F025         	call	___fladd	;wreg free
 12101  002118  C001  F164         	movff	?___fladd,powf@p_l
 12102  00211C  C002  F165         	movff	?___fladd+1,powf@p_l+1
 12103  002120  C003  F166         	movff	?___fladd+2,powf@p_l+2
 12104  002124  C004  F167         	movff	?___fladd+3,powf@p_l+3
 12105  002128  C128  F011         	movff	powf@y1,___flmul@b
 12106  00212C  C129  F012         	movff	powf@y1+1,___flmul@b+1
 12107  002130  C12A  F013         	movff	powf@y1+2,___flmul@b+2
 12108  002134  C12B  F014         	movff	powf@y1+3,___flmul@b+3
 12109  002138  C180  F015         	movff	powf@t1,___flmul@a
 12110  00213C  C181  F016         	movff	powf@t1+1,___flmul@a+1
 12111  002140  C182  F017         	movff	powf@t1+2,___flmul@a+2
 12112  002144  C183  F018         	movff	powf@t1+3,___flmul@a+3
 12113  002148  EC6D  F023         	call	___flmul	;wreg free
 12114  00214C  C011  F19C         	movff	?___flmul,powf@p_h
 12115  002150  C012  F19D         	movff	?___flmul+1,powf@p_h+1
 12116  002154  C013  F19E         	movff	?___flmul+2,powf@p_h+2
 12117  002158  C014  F19F         	movff	?___flmul+3,powf@p_h+3
 12118  00215C  C164  F001         	movff	powf@p_l,___fladd@b
 12119  002160  C165  F002         	movff	powf@p_l+1,___fladd@b+1
 12120  002164  C166  F003         	movff	powf@p_l+2,___fladd@b+2
 12121  002168  C167  F004         	movff	powf@p_l+3,___fladd@b+3
 12122  00216C  C19C  F005         	movff	powf@p_h,___fladd@a
 12123  002170  C19D  F006         	movff	powf@p_h+1,___fladd@a+1
 12124  002174  C19E  F007         	movff	powf@p_h+2,___fladd@a+2
 12125  002178  C19F  F008         	movff	powf@p_h+3,___fladd@a+3
 12126  00217C  EC16  F025         	call	___fladd	;wreg free
 12127  002180  C001  F1B4         	movff	?___fladd,powf@z
 12128  002184  C002  F1B5         	movff	?___fladd+1,powf@z+1
 12129  002188  C003  F1B6         	movff	?___fladd+2,powf@z+2
 12130  00218C  C004  F1B7         	movff	?___fladd+3,powf@z+3
 12131  002190  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 12132  002194  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 12133  002198  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 12134  00219C  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 12135  0021A0  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 12136  0021A4  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 12137  0021A8  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 12138  0021AC  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 12139  0021B0  0101               	movlb	1	; () banked
 12140  0021B2  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
 12141  0021B4  D03E               	goto	i2l10767
 12142  0021B6  05AC               	decf	powf@j& (0+255),w,b
 12143  0021B8  0E00               	movlw	0
 12144  0021BA  59AD               	subwfb	(powf@j+1)& (0+255),w,b
 12145  0021BC  0E00               	movlw	0
 12146  0021BE  59AE               	subwfb	(powf@j+2)& (0+255),w,b
 12147  0021C0  0E43               	movlw	67
 12148  0021C2  59AF               	subwfb	(powf@j+3)& (0+255),w,b
 12149  0021C4  A0D8               	btfss	status,0,c
 12150  0021C6  D035               	goto	i2l10767
 12151                           
 12152                           ; BSR set to: 1
 12153  0021C8  0ECA               	movlw	202
 12154  0021CA  6E15               	movwf	___flmul@a^0,c
 12155  0021CC  0EF2               	movlw	242
 12156  0021CE  6E16               	movwf	(___flmul@a+1)^0,c
 12157  0021D0  0E49               	movlw	73
 12158  0021D2  6E17               	movwf	(___flmul@a+2)^0,c
 12159  0021D4  0E71               	movlw	113
 12160  0021D6  6E18               	movwf	(___flmul@a+3)^0,c
 12161  0021D8  C184  F011         	movff	powf@sn,___flmul@b
 12162  0021DC  C185  F012         	movff	powf@sn+1,___flmul@b+1
 12163  0021E0  C186  F013         	movff	powf@sn+2,___flmul@b+2
 12164  0021E4  C187  F014         	movff	powf@sn+3,___flmul@b+3
 12165  0021E8  EC6D  F023         	call	___flmul	;wreg free
 12166  0021EC  C011  F1A4         	movff	?___flmul,_powf$2069
 12167  0021F0  C012  F1A5         	movff	?___flmul+1,_powf$2069+1
 12168  0021F4  C013  F1A6         	movff	?___flmul+2,_powf$2069+2
 12169  0021F8  C014  F1A7         	movff	?___flmul+3,_powf$2069+3
 12170  0021FC  C1A4  F011         	movff	_powf$2069,___flmul@b
 12171  002200  C1A5  F012         	movff	_powf$2069+1,___flmul@b+1
 12172  002204  C1A6  F013         	movff	_powf$2069+2,___flmul@b+2
 12173  002208  C1A7  F014         	movff	_powf$2069+3,___flmul@b+3
 12174  00220C  0ECA               	movlw	202
 12175  00220E  6E15               	movwf	___flmul@a^0,c
 12176  002210  0EF2               	movlw	242
 12177  002212  6E16               	movwf	(___flmul@a+1)^0,c
 12178  002214  0E49               	movlw	73
 12179  002216  6E17               	movwf	(___flmul@a+2)^0,c
 12180  002218  0E71               	movlw	113
 12181  00221A  6E18               	movwf	(___flmul@a+3)^0,c
 12182  00221C  EC6D  F023         	call	___flmul	;wreg free
 12183  002220  C011  F0C2         	movff	?___flmul,?_powf
 12184  002224  C012  F0C3         	movff	?___flmul+1,?_powf+1
 12185  002228  C013  F0C4         	movff	?___flmul+2,?_powf+2
 12186  00222C  C014  F0C5         	movff	?___flmul+3,?_powf+3
 12187  002230  0012               	return	
 12188  002232                     i2l10767:
 12189                           
 12190                           ; BSR set to: 1
 12191  002232  0E43               	movlw	67
 12192  002234  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 12193  002236  11AC               	iorwf	powf@j& (0+255),w,b
 12194  002238  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 12195  00223A  11AE               	iorwf	(powf@j+2)& (0+255),w,b
 12196  00223C  A4D8               	btfss	status,2,c
 12197  00223E  D06D               	goto	i2l10775
 12198                           
 12199                           ; BSR set to: 1
 12200  002240  C19C  F02E         	movff	powf@p_h,___flsub@a
 12201  002244  C19D  F02F         	movff	powf@p_h+1,___flsub@a+1
 12202  002248  C19E  F030         	movff	powf@p_h+2,___flsub@a+2
 12203  00224C  C19F  F031         	movff	powf@p_h+3,___flsub@a+3
 12204  002250  C1B4  F02A         	movff	powf@z,___flsub@b
 12205  002254  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
 12206  002258  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
 12207  00225C  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
 12208  002260  ECAE  F036         	call	___flsub	;wreg free
 12209  002264  C02A  F032         	movff	?___flsub,___flge@ff1
 12210  002268  C02B  F033         	movff	?___flsub+1,___flge@ff1+1
 12211  00226C  C02C  F034         	movff	?___flsub+2,___flge@ff1+2
 12212  002270  C02D  F035         	movff	?___flsub+3,___flge@ff1+3
 12213  002274  0E3C               	movlw	60
 12214  002276  6E05               	movwf	___fladd@a^0,c
 12215  002278  0EAA               	movlw	170
 12216  00227A  6E06               	movwf	(___fladd@a+1)^0,c
 12217  00227C  0E38               	movlw	56
 12218  00227E  6E07               	movwf	(___fladd@a+2)^0,c
 12219  002280  0E33               	movlw	51
 12220  002282  6E08               	movwf	(___fladd@a+3)^0,c
 12221  002284  C164  F001         	movff	powf@p_l,___fladd@b
 12222  002288  C165  F002         	movff	powf@p_l+1,___fladd@b+1
 12223  00228C  C166  F003         	movff	powf@p_l+2,___fladd@b+2
 12224  002290  C167  F004         	movff	powf@p_l+3,___fladd@b+3
 12225  002294  EC16  F025         	call	___fladd	;wreg free
 12226  002298  C001  F036         	movff	?___fladd,___flge@ff2
 12227  00229C  C002  F037         	movff	?___fladd+1,___flge@ff2+1
 12228  0022A0  C003  F038         	movff	?___fladd+2,___flge@ff2+2
 12229  0022A4  C004  F039         	movff	?___fladd+3,___flge@ff2+3
 12230  0022A8  EC04  F032         	call	___flge	;wreg free
 12231  0022AC  B0D8               	btfsc	status,0,c
 12232  0022AE  D0E5               	goto	i2l10791
 12233  0022B0  0ECA               	movlw	202
 12234  0022B2  6E15               	movwf	___flmul@a^0,c
 12235  0022B4  0EF2               	movlw	242
 12236  0022B6  6E16               	movwf	(___flmul@a+1)^0,c
 12237  0022B8  0E49               	movlw	73
 12238  0022BA  6E17               	movwf	(___flmul@a+2)^0,c
 12239  0022BC  0E71               	movlw	113
 12240  0022BE  6E18               	movwf	(___flmul@a+3)^0,c
 12241  0022C0  C184  F011         	movff	powf@sn,___flmul@b
 12242  0022C4  C185  F012         	movff	powf@sn+1,___flmul@b+1
 12243  0022C8  C186  F013         	movff	powf@sn+2,___flmul@b+2
 12244  0022CC  C187  F014         	movff	powf@sn+3,___flmul@b+3
 12245  0022D0  EC6D  F023         	call	___flmul	;wreg free
 12246  0022D4  C011  F1A4         	movff	?___flmul,_powf$2069
 12247  0022D8  C012  F1A5         	movff	?___flmul+1,_powf$2069+1
 12248  0022DC  C013  F1A6         	movff	?___flmul+2,_powf$2069+2
 12249  0022E0  C014  F1A7         	movff	?___flmul+3,_powf$2069+3
 12250  0022E4  C1A4  F011         	movff	_powf$2069,___flmul@b
 12251  0022E8  C1A5  F012         	movff	_powf$2069+1,___flmul@b+1
 12252  0022EC  C1A6  F013         	movff	_powf$2069+2,___flmul@b+2
 12253  0022F0  C1A7  F014         	movff	_powf$2069+3,___flmul@b+3
 12254  0022F4  0ECA               	movlw	202
 12255  0022F6  6E15               	movwf	___flmul@a^0,c
 12256  0022F8  0EF2               	movlw	242
 12257  0022FA  6E16               	movwf	(___flmul@a+1)^0,c
 12258  0022FC  0E49               	movlw	73
 12259  0022FE  6E17               	movwf	(___flmul@a+2)^0,c
 12260  002300  0E71               	movlw	113
 12261  002302  6E18               	movwf	(___flmul@a+3)^0,c
 12262  002304  EC6D  F023         	call	___flmul	;wreg free
 12263  002308  C011  F0C2         	movff	?___flmul,?_powf
 12264  00230C  C012  F0C3         	movff	?___flmul+1,?_powf+1
 12265  002310  C013  F0C4         	movff	?___flmul+2,?_powf+2
 12266  002314  C014  F0C5         	movff	?___flmul+3,?_powf+3
 12267  002318  0012               	return	
 12268  00231A                     i2l10775:
 12269                           
 12270                           ; BSR set to: 1
 12271  00231A  0EFF               	movlw	255
 12272  00231C  15AC               	andwf	powf@j& (0+255),w,b
 12273  00231E  6E6F               	movwf	??_powf^0,c
 12274  002320  0EFF               	movlw	255
 12275  002322  15AD               	andwf	(powf@j+1)& (0+255),w,b
 12276  002324  6E70               	movwf	(??_powf+1)^0,c
 12277  002326  0EFF               	movlw	255
 12278  002328  15AE               	andwf	(powf@j+2)& (0+255),w,b
 12279  00232A  6E71               	movwf	(??_powf+2)^0,c
 12280  00232C  0E7F               	movlw	127
 12281  00232E  15AF               	andwf	(powf@j+3)& (0+255),w,b
 12282  002330  6E72               	movwf	(??_powf+3)^0,c
 12283  002332  BE72               	btfsc	(??_powf+3)^0,7,c
 12284  002334  D03E               	goto	i2l10783
 12285  002336  046F               	decf	??_powf^0,w,c
 12286  002338  0E00               	movlw	0
 12287  00233A  5870               	subwfb	(??_powf+1)^0,w,c
 12288  00233C  0E16               	movlw	22
 12289  00233E  5871               	subwfb	(??_powf+2)^0,w,c
 12290  002340  0E43               	movlw	67
 12291  002342  5872               	subwfb	(??_powf+3)^0,w,c
 12292  002344  A0D8               	btfss	status,0,c
 12293  002346  D035               	goto	i2l10783
 12294                           
 12295                           ; BSR set to: 1
 12296  002348  0E60               	movlw	96
 12297  00234A  6E15               	movwf	___flmul@a^0,c
 12298  00234C  0E42               	movlw	66
 12299  00234E  6E16               	movwf	(___flmul@a+1)^0,c
 12300  002350  0EA2               	movlw	162
 12301  002352  6E17               	movwf	(___flmul@a+2)^0,c
 12302  002354  0E0D               	movlw	13
 12303  002356  6E18               	movwf	(___flmul@a+3)^0,c
 12304  002358  C184  F011         	movff	powf@sn,___flmul@b
 12305  00235C  C185  F012         	movff	powf@sn+1,___flmul@b+1
 12306  002360  C186  F013         	movff	powf@sn+2,___flmul@b+2
 12307  002364  C187  F014         	movff	powf@sn+3,___flmul@b+3
 12308  002368  EC6D  F023         	call	___flmul	;wreg free
 12309  00236C  C011  F1A4         	movff	?___flmul,_powf$2069
 12310  002370  C012  F1A5         	movff	?___flmul+1,_powf$2069+1
 12311  002374  C013  F1A6         	movff	?___flmul+2,_powf$2069+2
 12312  002378  C014  F1A7         	movff	?___flmul+3,_powf$2069+3
 12313  00237C  C1A4  F011         	movff	_powf$2069,___flmul@b
 12314  002380  C1A5  F012         	movff	_powf$2069+1,___flmul@b+1
 12315  002384  C1A6  F013         	movff	_powf$2069+2,___flmul@b+2
 12316  002388  C1A7  F014         	movff	_powf$2069+3,___flmul@b+3
 12317  00238C  0E60               	movlw	96
 12318  00238E  6E15               	movwf	___flmul@a^0,c
 12319  002390  0E42               	movlw	66
 12320  002392  6E16               	movwf	(___flmul@a+1)^0,c
 12321  002394  0EA2               	movlw	162
 12322  002396  6E17               	movwf	(___flmul@a+2)^0,c
 12323  002398  0E0D               	movlw	13
 12324  00239A  6E18               	movwf	(___flmul@a+3)^0,c
 12325  00239C  EC6D  F023         	call	___flmul	;wreg free
 12326  0023A0  C011  F0C2         	movff	?___flmul,?_powf
 12327  0023A4  C012  F0C3         	movff	?___flmul+1,?_powf+1
 12328  0023A8  C013  F0C4         	movff	?___flmul+2,?_powf+2
 12329  0023AC  C014  F0C5         	movff	?___flmul+3,?_powf+3
 12330  0023B0  0012               	return	
 12331  0023B2                     i2l10783:
 12332                           
 12333                           ; BSR set to: 1
 12334  0023B2  0E16               	movlw	22
 12335  0023B4  19AE               	xorwf	(powf@j+2)& (0+255),w,b
 12336  0023B6  E161               	bnz	i2l10791
 12337  0023B8  0EC3               	movlw	195
 12338  0023BA  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 12339  0023BC  11AC               	iorwf	powf@j& (0+255),w,b
 12340  0023BE  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 12341  0023C0  A4D8               	btfss	status,2,c
 12342  0023C2  D05B               	goto	i2l10791
 12343                           
 12344                           ; BSR set to: 1
 12345  0023C4  C19C  F02E         	movff	powf@p_h,___flsub@a
 12346  0023C8  C19D  F02F         	movff	powf@p_h+1,___flsub@a+1
 12347  0023CC  C19E  F030         	movff	powf@p_h+2,___flsub@a+2
 12348  0023D0  C19F  F031         	movff	powf@p_h+3,___flsub@a+3
 12349  0023D4  C1B4  F02A         	movff	powf@z,___flsub@b
 12350  0023D8  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
 12351  0023DC  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
 12352  0023E0  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
 12353  0023E4  ECAE  F036         	call	___flsub	;wreg free
 12354  0023E8  C02A  F032         	movff	?___flsub,___flge@ff1
 12355  0023EC  C02B  F033         	movff	?___flsub+1,___flge@ff1+1
 12356  0023F0  C02C  F034         	movff	?___flsub+2,___flge@ff1+2
 12357  0023F4  C02D  F035         	movff	?___flsub+3,___flge@ff1+3
 12358  0023F8  C164  F036         	movff	powf@p_l,___flge@ff2
 12359  0023FC  C165  F037         	movff	powf@p_l+1,___flge@ff2+1
 12360  002400  C166  F038         	movff	powf@p_l+2,___flge@ff2+2
 12361  002404  C167  F039         	movff	powf@p_l+3,___flge@ff2+3
 12362  002408  EC04  F032         	call	___flge	;wreg free
 12363  00240C  A0D8               	btfss	status,0,c
 12364  00240E  D035               	goto	i2l10791
 12365  002410  0E60               	movlw	96
 12366  002412  6E15               	movwf	___flmul@a^0,c
 12367  002414  0E42               	movlw	66
 12368  002416  6E16               	movwf	(___flmul@a+1)^0,c
 12369  002418  0EA2               	movlw	162
 12370  00241A  6E17               	movwf	(___flmul@a+2)^0,c
 12371  00241C  0E0D               	movlw	13
 12372  00241E  6E18               	movwf	(___flmul@a+3)^0,c
 12373  002420  C184  F011         	movff	powf@sn,___flmul@b
 12374  002424  C185  F012         	movff	powf@sn+1,___flmul@b+1
 12375  002428  C186  F013         	movff	powf@sn+2,___flmul@b+2
 12376  00242C  C187  F014         	movff	powf@sn+3,___flmul@b+3
 12377  002430  EC6D  F023         	call	___flmul	;wreg free
 12378  002434  C011  F1A4         	movff	?___flmul,_powf$2069
 12379  002438  C012  F1A5         	movff	?___flmul+1,_powf$2069+1
 12380  00243C  C013  F1A6         	movff	?___flmul+2,_powf$2069+2
 12381  002440  C014  F1A7         	movff	?___flmul+3,_powf$2069+3
 12382  002444  C1A4  F011         	movff	_powf$2069,___flmul@b
 12383  002448  C1A5  F012         	movff	_powf$2069+1,___flmul@b+1
 12384  00244C  C1A6  F013         	movff	_powf$2069+2,___flmul@b+2
 12385  002450  C1A7  F014         	movff	_powf$2069+3,___flmul@b+3
 12386  002454  0E60               	movlw	96
 12387  002456  6E15               	movwf	___flmul@a^0,c
 12388  002458  0E42               	movlw	66
 12389  00245A  6E16               	movwf	(___flmul@a+1)^0,c
 12390  00245C  0EA2               	movlw	162
 12391  00245E  6E17               	movwf	(___flmul@a+2)^0,c
 12392  002460  0E0D               	movlw	13
 12393  002462  6E18               	movwf	(___flmul@a+3)^0,c
 12394  002464  EC6D  F023         	call	___flmul	;wreg free
 12395  002468  C011  F0C2         	movff	?___flmul,?_powf
 12396  00246C  C012  F0C3         	movff	?___flmul+1,?_powf+1
 12397  002470  C013  F0C4         	movff	?___flmul+2,?_powf+2
 12398  002474  C014  F0C5         	movff	?___flmul+3,?_powf+3
 12399  002478  0012               	return	
 12400  00247A                     i2l10791:
 12401  00247A  0EFF               	movlw	255
 12402  00247C  0101               	movlb	1	; () banked
 12403  00247E  15AC               	andwf	powf@j& (0+255),w,b
 12404  002480  6F2C               	movwf	powf@i& (0+255),b
 12405  002482  0EFF               	movlw	255
 12406  002484  15AD               	andwf	(powf@j+1)& (0+255),w,b
 12407  002486  6F2D               	movwf	(powf@i+1)& (0+255),b
 12408  002488  0EFF               	movlw	255
 12409  00248A  15AE               	andwf	(powf@j+2)& (0+255),w,b
 12410  00248C  6F2E               	movwf	(powf@i+2)& (0+255),b
 12411  00248E  0E7F               	movlw	127
 12412  002490  15AF               	andwf	(powf@j+3)& (0+255),w,b
 12413  002492  6F2F               	movwf	(powf@i+3)& (0+255),b
 12414  002494  0E17               	movlw	23
 12415  002496  6E6F               	movwf	??_powf^0,c
 12416  002498  C12C  F070         	movff	powf@i,??_powf+1
 12417  00249C  C12D  F071         	movff	powf@i+1,??_powf+2
 12418  0024A0  C12E  F072         	movff	powf@i+2,??_powf+3
 12419  0024A4  C12F  F073         	movff	powf@i+3,??_powf+4
 12420  0024A8                     i2u1433_45:
 12421  0024A8  666F               	tstfsz	??_powf^0,c
 12422  0024AA  D001               	goto	i2u1433_46
 12423  0024AC  D007               	goto	i2u1433_47
 12424  0024AE                     i2u1433_46:
 12425  0024AE  3473               	rlcf	(??_powf+4)^0,w,c
 12426  0024B0  3273               	rrcf	(??_powf+4)^0,f,c
 12427  0024B2  3272               	rrcf	(??_powf+3)^0,f,c
 12428  0024B4  3271               	rrcf	(??_powf+2)^0,f,c
 12429  0024B6  3270               	rrcf	(??_powf+1)^0,f,c
 12430  0024B8  2E6F               	decfsz	??_powf^0,f,c
 12431  0024BA  D7F6               	goto	i2u1433_45
 12432  0024BC                     i2u1433_47:
 12433  0024BC  0E81               	movlw	129
 12434  0024BE  2470               	addwf	(??_powf+1)^0,w,c
 12435  0024C0  0101               	movlb	1	; () banked
 12436  0024C2  6FA0               	movwf	powf@k& (0+255),b
 12437  0024C4  0EFF               	movlw	255
 12438  0024C6  2071               	addwfc	(??_powf+2)^0,w,c
 12439  0024C8  6FA1               	movwf	(powf@k+1)& (0+255),b
 12440  0024CA  0EFF               	movlw	255
 12441  0024CC  2072               	addwfc	(??_powf+3)^0,w,c
 12442  0024CE  6FA2               	movwf	(powf@k+2)& (0+255),b
 12443  0024D0  0EFF               	movlw	255
 12444  0024D2  2073               	addwfc	(??_powf+4)^0,w,c
 12445  0024D4  6FA3               	movwf	(powf@k+3)& (0+255),b
 12446                           
 12447                           ; BSR set to: 1
 12448  0024D6  0E00               	movlw	0
 12449  0024D8  6F88               	movwf	powf@n& (0+255),b
 12450  0024DA  0E00               	movlw	0
 12451  0024DC  6F89               	movwf	(powf@n+1)& (0+255),b
 12452  0024DE  0E00               	movlw	0
 12453  0024E0  6F8A               	movwf	(powf@n+2)& (0+255),b
 12454  0024E2  0E00               	movlw	0
 12455  0024E4  6F8B               	movwf	(powf@n+3)& (0+255),b
 12456                           
 12457                           ; BSR set to: 1
 12458  0024E6  BF2F               	btfsc	(powf@i+3)& (0+255),7,b
 12459  0024E8  D0D8               	goto	i2l10805
 12460  0024EA  052C               	decf	powf@i& (0+255),w,b
 12461  0024EC  0E00               	movlw	0
 12462  0024EE  592D               	subwfb	(powf@i+1)& (0+255),w,b
 12463  0024F0  0E00               	movlw	0
 12464  0024F2  592E               	subwfb	(powf@i+2)& (0+255),w,b
 12465  0024F4  0E3F               	movlw	63
 12466  0024F6  592F               	subwfb	(powf@i+3)& (0+255),w,b
 12467  0024F8  A0D8               	btfss	status,0,c
 12468  0024FA  D0CF               	goto	i2l10805
 12469                           
 12470                           ; BSR set to: 1
 12471  0024FC  C1A0  F06F         	movff	powf@k,??_powf
 12472  002500  0E01               	movlw	1
 12473  002502  266F               	addwf	??_powf^0,f,c
 12474  002504  0E00               	movlw	0
 12475  002506  6E70               	movwf	(??_powf+1)^0,c
 12476  002508  0E00               	movlw	0
 12477  00250A  6E71               	movwf	(??_powf+2)^0,c
 12478  00250C  0E80               	movlw	128
 12479  00250E  6E72               	movwf	(??_powf+3)^0,c
 12480  002510  0E00               	movlw	0
 12481  002512  6E73               	movwf	(??_powf+4)^0,c
 12482  002514                     i2u1435_45:
 12483  002514  666F               	tstfsz	??_powf^0,c
 12484  002516  D001               	goto	i2u1435_46
 12485  002518  D007               	goto	i2u1435_47
 12486  00251A                     i2u1435_46:
 12487  00251A  3473               	rlcf	(??_powf+4)^0,w,c
 12488  00251C  3273               	rrcf	(??_powf+4)^0,f,c
 12489  00251E  3272               	rrcf	(??_powf+3)^0,f,c
 12490  002520  3271               	rrcf	(??_powf+2)^0,f,c
 12491  002522  3270               	rrcf	(??_powf+1)^0,f,c
 12492  002524  2E6F               	decfsz	??_powf^0,f,c
 12493  002526  D7F6               	goto	i2u1435_45
 12494  002528                     i2u1435_47:
 12495  002528  0101               	movlb	1	; () banked
 12496  00252A  51AC               	movf	powf@j& (0+255),w,b
 12497  00252C  2470               	addwf	(??_powf+1)^0,w,c
 12498  00252E  6F88               	movwf	powf@n& (0+255),b
 12499  002530  51AD               	movf	(powf@j+1)& (0+255),w,b
 12500  002532  2071               	addwfc	(??_powf+2)^0,w,c
 12501  002534  6F89               	movwf	(powf@n+1)& (0+255),b
 12502  002536  51AE               	movf	(powf@j+2)& (0+255),w,b
 12503  002538  2072               	addwfc	(??_powf+3)^0,w,c
 12504  00253A  6F8A               	movwf	(powf@n+2)& (0+255),b
 12505  00253C  51AF               	movf	(powf@j+3)& (0+255),w,b
 12506  00253E  2073               	addwfc	(??_powf+4)^0,w,c
 12507  002540  6F8B               	movwf	(powf@n+3)& (0+255),b
 12508  002542  0E81               	movlw	129
 12509  002544  6E6F               	movwf	??_powf^0,c
 12510  002546  0EFF               	movlw	255
 12511  002548  6E70               	movwf	(??_powf+1)^0,c
 12512  00254A  0EFF               	movlw	255
 12513  00254C  6E71               	movwf	(??_powf+2)^0,c
 12514  00254E  0EFF               	movlw	255
 12515  002550  6E72               	movwf	(??_powf+3)^0,c
 12516  002552  0E17               	movlw	23
 12517  002554  6E73               	movwf	(??_powf+4)^0,c
 12518  002556  C188  F074         	movff	powf@n,??_powf+5
 12519  00255A  C189  F075         	movff	powf@n+1,??_powf+6
 12520  00255E  C18A  F076         	movff	powf@n+2,??_powf+7
 12521  002562  C18B  F077         	movff	powf@n+3,??_powf+8
 12522  002566                     i2u1436_45:
 12523  002566  6673               	tstfsz	(??_powf+4)^0,c
 12524  002568  D001               	goto	i2u1436_46
 12525  00256A  D007               	goto	i2u1436_47
 12526  00256C                     i2u1436_46:
 12527  00256C  3477               	rlcf	(??_powf+8)^0,w,c
 12528  00256E  3277               	rrcf	(??_powf+8)^0,f,c
 12529  002570  3276               	rrcf	(??_powf+7)^0,f,c
 12530  002572  3275               	rrcf	(??_powf+6)^0,f,c
 12531  002574  3274               	rrcf	(??_powf+5)^0,f,c
 12532  002576  2E73               	decfsz	(??_powf+4)^0,f,c
 12533  002578  D7F6               	goto	i2u1436_45
 12534  00257A                     i2u1436_47:
 12535  00257A  5074               	movf	(??_powf+5)^0,w,c
 12536  00257C  246F               	addwf	??_powf^0,w,c
 12537  00257E  0101               	movlb	1	; () banked
 12538  002580  6FA0               	movwf	powf@k& (0+255),b
 12539  002582  0E00               	movlw	0
 12540  002584  2070               	addwfc	(??_powf+1)^0,w,c
 12541  002586  6FA1               	movwf	(powf@k+1)& (0+255),b
 12542  002588  0E00               	movlw	0
 12543  00258A  2071               	addwfc	(??_powf+2)^0,w,c
 12544  00258C  6FA2               	movwf	(powf@k+2)& (0+255),b
 12545  00258E  0E00               	movlw	0
 12546  002590  2072               	addwfc	(??_powf+3)^0,w,c
 12547  002592  6FA3               	movwf	(powf@k+3)& (0+255),b
 12548                           
 12549                           ; BSR set to: 1
 12550  002594  C1A0  F06F         	movff	powf@k,??_powf
 12551  002598  0EFF               	movlw	255
 12552  00259A  6E70               	movwf	(??_powf+1)^0,c
 12553  00259C  0EFF               	movlw	255
 12554  00259E  6E71               	movwf	(??_powf+2)^0,c
 12555  0025A0  0E7F               	movlw	127
 12556  0025A2  6E72               	movwf	(??_powf+3)^0,c
 12557  0025A4  0E00               	movlw	0
 12558  0025A6  6E73               	movwf	(??_powf+4)^0,c
 12559  0025A8                     i2u1437_45:
 12560  0025A8  666F               	tstfsz	??_powf^0,c
 12561  0025AA  D001               	goto	i2u1437_46
 12562  0025AC  D007               	goto	i2u1437_47
 12563  0025AE                     i2u1437_46:
 12564  0025AE  3473               	rlcf	(??_powf+4)^0,w,c
 12565  0025B0  3273               	rrcf	(??_powf+4)^0,f,c
 12566  0025B2  3272               	rrcf	(??_powf+3)^0,f,c
 12567  0025B4  3271               	rrcf	(??_powf+2)^0,f,c
 12568  0025B6  3270               	rrcf	(??_powf+1)^0,f,c
 12569  0025B8  2E6F               	decfsz	??_powf^0,f,c
 12570  0025BA  D7F6               	goto	i2u1437_45
 12571  0025BC                     i2u1437_47:
 12572  0025BC  1C70               	comf	(??_powf+1)^0,w,c
 12573  0025BE  6E74               	movwf	(??_powf+5)^0,c
 12574  0025C0  1C71               	comf	(??_powf+2)^0,w,c
 12575  0025C2  6E75               	movwf	(??_powf+6)^0,c
 12576  0025C4  1C72               	comf	(??_powf+3)^0,w,c
 12577  0025C6  6E76               	movwf	(??_powf+7)^0,c
 12578  0025C8  1C73               	comf	(??_powf+4)^0,w,c
 12579  0025CA  6E77               	movwf	(??_powf+8)^0,c
 12580  0025CC  0101               	movlb	1	; () banked
 12581  0025CE  5188               	movf	powf@n& (0+255),w,b
 12582  0025D0  1474               	andwf	(??_powf+5)^0,w,c
 12583  0025D2  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 12584  0025D4  5189               	movf	(powf@n+1)& (0+255),w,b
 12585  0025D6  1475               	andwf	(??_powf+6)^0,w,c
 12586  0025D8  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 12587  0025DA  518A               	movf	(powf@n+2)& (0+255),w,b
 12588  0025DC  1476               	andwf	(??_powf+7)^0,w,c
 12589  0025DE  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 12590  0025E0  518B               	movf	(powf@n+3)& (0+255),w,b
 12591  0025E2  1477               	andwf	(??_powf+8)^0,w,c
 12592  0025E4  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 12593                           
 12594                           ; BSR set to: 1
 12595  0025E6  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 12596  0025EA  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 12597  0025EE  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 12598  0025F2  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 12599                           
 12600                           ; BSR set to: 1
 12601  0025F6  51A0               	movf	powf@k& (0+255),w,b
 12602  0025F8  0817               	sublw	23
 12603  0025FA  6E6F               	movwf	??_powf^0,c
 12604  0025FC  0EFF               	movlw	255
 12605  0025FE  1588               	andwf	powf@n& (0+255),w,b
 12606  002600  6E70               	movwf	(??_powf+1)^0,c
 12607  002602  0EFF               	movlw	255
 12608  002604  1589               	andwf	(powf@n+1)& (0+255),w,b
 12609  002606  6E71               	movwf	(??_powf+2)^0,c
 12610  002608  0E7F               	movlw	127
 12611  00260A  158A               	andwf	(powf@n+2)& (0+255),w,b
 12612  00260C  6E72               	movwf	(??_powf+3)^0,c
 12613  00260E  0E00               	movlw	0
 12614  002610  158B               	andwf	(powf@n+3)& (0+255),w,b
 12615  002612  6E73               	movwf	(??_powf+4)^0,c
 12616  002614  0E00               	movlw	0
 12617  002616  1070               	iorwf	(??_powf+1)^0,w,c
 12618  002618  6E74               	movwf	(??_powf+5)^0,c
 12619  00261A  0E00               	movlw	0
 12620  00261C  1071               	iorwf	(??_powf+2)^0,w,c
 12621  00261E  6E75               	movwf	(??_powf+6)^0,c
 12622  002620  0E80               	movlw	128
 12623  002622  1072               	iorwf	(??_powf+3)^0,w,c
 12624  002624  6E76               	movwf	(??_powf+7)^0,c
 12625  002626  0E00               	movlw	0
 12626  002628  1073               	iorwf	(??_powf+4)^0,w,c
 12627  00262A  6E77               	movwf	(??_powf+8)^0,c
 12628  00262C                     i2u1438_45:
 12629  00262C  666F               	tstfsz	??_powf^0,c
 12630  00262E  D001               	goto	i2u1438_46
 12631  002630  D007               	goto	i2u1438_47
 12632  002632                     i2u1438_46:
 12633  002632  3477               	rlcf	(??_powf+8)^0,w,c
 12634  002634  3277               	rrcf	(??_powf+8)^0,f,c
 12635  002636  3276               	rrcf	(??_powf+7)^0,f,c
 12636  002638  3275               	rrcf	(??_powf+6)^0,f,c
 12637  00263A  3274               	rrcf	(??_powf+5)^0,f,c
 12638  00263C  2E6F               	decfsz	??_powf^0,f,c
 12639  00263E  D7F6               	goto	i2u1438_45
 12640  002640                     i2u1438_47:
 12641  002640  C074  F188         	movff	??_powf+5,powf@n
 12642  002644  C075  F189         	movff	??_powf+6,powf@n+1
 12643  002648  C076  F18A         	movff	??_powf+7,powf@n+2
 12644  00264C  C077  F18B         	movff	??_powf+8,powf@n+3
 12645  002650  0101               	movlb	1	; () banked
 12646  002652  AFAF               	btfss	(powf@j+3)& (0+255),7,b
 12647  002654  D008               	goto	i2l10803
 12648                           
 12649                           ; BSR set to: 1
 12650  002656  1F8B               	comf	(powf@n+3)& (0+255),f,b
 12651  002658  1F8A               	comf	(powf@n+2)& (0+255),f,b
 12652  00265A  1F89               	comf	(powf@n+1)& (0+255),f,b
 12653  00265C  6D88               	negf	powf@n& (0+255),b
 12654  00265E  0E00               	movlw	0
 12655  002660  2389               	addwfc	(powf@n+1)& (0+255),f,b
 12656  002662  238A               	addwfc	(powf@n+2)& (0+255),f,b
 12657  002664  238B               	addwfc	(powf@n+3)& (0+255),f,b
 12658  002666                     i2l10803:
 12659                           
 12660                           ; BSR set to: 1
 12661  002666  C19C  F02A         	movff	powf@p_h,___flsub@b
 12662  00266A  C19D  F02B         	movff	powf@p_h+1,___flsub@b+1
 12663  00266E  C19E  F02C         	movff	powf@p_h+2,___flsub@b+2
 12664  002672  C19F  F02D         	movff	powf@p_h+3,___flsub@b+3
 12665  002676  C1B0  F02E         	movff	powf@t,___flsub@a
 12666  00267A  C1B1  F02F         	movff	powf@t+1,___flsub@a+1
 12667  00267E  C1B2  F030         	movff	powf@t+2,___flsub@a+2
 12668  002682  C1B3  F031         	movff	powf@t+3,___flsub@a+3
 12669  002686  ECAE  F036         	call	___flsub	;wreg free
 12670  00268A  C02A  F19C         	movff	?___flsub,powf@p_h
 12671  00268E  C02B  F19D         	movff	?___flsub+1,powf@p_h+1
 12672  002692  C02C  F19E         	movff	?___flsub+2,powf@p_h+2
 12673  002696  C02D  F19F         	movff	?___flsub+3,powf@p_h+3
 12674  00269A                     i2l10805:
 12675  00269A  C164  F001         	movff	powf@p_l,___fladd@b
 12676  00269E  C165  F002         	movff	powf@p_l+1,___fladd@b+1
 12677  0026A2  C166  F003         	movff	powf@p_l+2,___fladd@b+2
 12678  0026A6  C167  F004         	movff	powf@p_l+3,___fladd@b+3
 12679  0026AA  C19C  F005         	movff	powf@p_h,___fladd@a
 12680  0026AE  C19D  F006         	movff	powf@p_h+1,___fladd@a+1
 12681  0026B2  C19E  F007         	movff	powf@p_h+2,___fladd@a+2
 12682  0026B6  C19F  F008         	movff	powf@p_h+3,___fladd@a+3
 12683  0026BA  EC16  F025         	call	___fladd	;wreg free
 12684  0026BE  C001  F1B0         	movff	?___fladd,powf@t
 12685  0026C2  C002  F1B1         	movff	?___fladd+1,powf@t+1
 12686  0026C6  C003  F1B2         	movff	?___fladd+2,powf@t+2
 12687  0026CA  C004  F1B3         	movff	?___fladd+3,powf@t+3
 12688  0026CE  C1B0  F1B8         	movff	powf@t,powf@__xc8_float_word
 12689  0026D2  C1B1  F1B9         	movff	powf@t+1,powf@__xc8_float_word+1
 12690  0026D6  C1B2  F1BA         	movff	powf@t+2,powf@__xc8_float_word+2
 12691  0026DA  C1B3  F1BB         	movff	powf@t+3,powf@__xc8_float_word+3
 12692  0026DE  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 12693  0026E2  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 12694  0026E6  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 12695  0026EA  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 12696  0026EE  0E00               	movlw	0
 12697  0026F0  0101               	movlb	1	; () banked
 12698  0026F2  1594               	andwf	powf@is& (0+255),w,b
 12699  0026F4  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 12700  0026F6  0E80               	movlw	128
 12701  0026F8  1595               	andwf	(powf@is+1)& (0+255),w,b
 12702  0026FA  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 12703  0026FC  0EFF               	movlw	255
 12704  0026FE  1596               	andwf	(powf@is+2)& (0+255),w,b
 12705  002700  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 12706  002702  0EFF               	movlw	255
 12707  002704  1597               	andwf	(powf@is+3)& (0+255),w,b
 12708  002706  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 12709                           
 12710                           ; BSR set to: 1
 12711  002708  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 12712  00270C  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 12713  002710  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 12714  002714  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 12715                           
 12716                           ; BSR set to: 1
 12717  002718  C1B0  F011         	movff	powf@t,___flmul@b
 12718  00271C  C1B1  F012         	movff	powf@t+1,___flmul@b+1
 12719  002720  C1B2  F013         	movff	powf@t+2,___flmul@b+2
 12720  002724  C1B3  F014         	movff	powf@t+3,___flmul@b+3
 12721  002728  0E00               	movlw	0
 12722  00272A  6E15               	movwf	___flmul@a^0,c
 12723  00272C  0E72               	movlw	114
 12724  00272E  6E16               	movwf	(___flmul@a+1)^0,c
 12725  002730  0E31               	movlw	49
 12726  002732  6E17               	movwf	(___flmul@a+2)^0,c
 12727  002734  0E3F               	movlw	63
 12728  002736  6E18               	movwf	(___flmul@a+3)^0,c
 12729  002738  EC6D  F023         	call	___flmul	;wreg free
 12730  00273C  C011  F174         	movff	?___flmul,powf@u
 12731  002740  C012  F175         	movff	?___flmul+1,powf@u+1
 12732  002744  C013  F176         	movff	?___flmul+2,powf@u+2
 12733  002748  C014  F177         	movff	?___flmul+3,powf@u+3
 12734  00274C  C19C  F02E         	movff	powf@p_h,___flsub@a
 12735  002750  C19D  F02F         	movff	powf@p_h+1,___flsub@a+1
 12736  002754  C19E  F030         	movff	powf@p_h+2,___flsub@a+2
 12737  002758  C19F  F031         	movff	powf@p_h+3,___flsub@a+3
 12738  00275C  C1B0  F02A         	movff	powf@t,___flsub@b
 12739  002760  C1B1  F02B         	movff	powf@t+1,___flsub@b+1
 12740  002764  C1B2  F02C         	movff	powf@t+2,___flsub@b+2
 12741  002768  C1B3  F02D         	movff	powf@t+3,___flsub@b+3
 12742  00276C  ECAE  F036         	call	___flsub	;wreg free
 12743  002770  C02A  F198         	movff	?___flsub,_powf$2072
 12744  002774  C02B  F199         	movff	?___flsub+1,_powf$2072+1
 12745  002778  C02C  F19A         	movff	?___flsub+2,_powf$2072+2
 12746  00277C  C02D  F19B         	movff	?___flsub+3,_powf$2072+3
 12747  002780  0E18               	movlw	24
 12748  002782  6E15               	movwf	___flmul@a^0,c
 12749  002784  0E72               	movlw	114
 12750  002786  6E16               	movwf	(___flmul@a+1)^0,c
 12751  002788  0E31               	movlw	49
 12752  00278A  6E17               	movwf	(___flmul@a+2)^0,c
 12753  00278C  0E3F               	movlw	63
 12754  00278E  6E18               	movwf	(___flmul@a+3)^0,c
 12755  002790  C198  F02E         	movff	_powf$2072,___flsub@a
 12756  002794  C199  F02F         	movff	_powf$2072+1,___flsub@a+1
 12757  002798  C19A  F030         	movff	_powf$2072+2,___flsub@a+2
 12758  00279C  C19B  F031         	movff	_powf$2072+3,___flsub@a+3
 12759  0027A0  C164  F02A         	movff	powf@p_l,___flsub@b
 12760  0027A4  C165  F02B         	movff	powf@p_l+1,___flsub@b+1
 12761  0027A8  C166  F02C         	movff	powf@p_l+2,___flsub@b+2
 12762  0027AC  C167  F02D         	movff	powf@p_l+3,___flsub@b+3
 12763  0027B0  ECAE  F036         	call	___flsub	;wreg free
 12764  0027B4  C02A  F011         	movff	?___flsub,___flmul@b
 12765  0027B8  C02B  F012         	movff	?___flsub+1,___flmul@b+1
 12766  0027BC  C02C  F013         	movff	?___flsub+2,___flmul@b+2
 12767  0027C0  C02D  F014         	movff	?___flsub+3,___flmul@b+3
 12768  0027C4  EC6D  F023         	call	___flmul	;wreg free
 12769  0027C8  C011  F114         	movff	?___flmul,_powf$2082
 12770  0027CC  C012  F115         	movff	?___flmul+1,_powf$2082+1
 12771  0027D0  C013  F116         	movff	?___flmul+2,_powf$2082+2
 12772  0027D4  C014  F117         	movff	?___flmul+3,_powf$2082+3
 12773  0027D8  C114  F001         	movff	_powf$2082,___fladd@b
 12774  0027DC  C115  F002         	movff	_powf$2082+1,___fladd@b+1
 12775  0027E0  C116  F003         	movff	_powf$2082+2,___fladd@b+2
 12776  0027E4  C117  F004         	movff	_powf$2082+3,___fladd@b+3
 12777  0027E8  0E8C               	movlw	140
 12778  0027EA  6E15               	movwf	___flmul@a^0,c
 12779  0027EC  0EBE               	movlw	190
 12780  0027EE  6E16               	movwf	(___flmul@a+1)^0,c
 12781  0027F0  0EBF               	movlw	191
 12782  0027F2  6E17               	movwf	(___flmul@a+2)^0,c
 12783  0027F4  0E35               	movlw	53
 12784  0027F6  6E18               	movwf	(___flmul@a+3)^0,c
 12785  0027F8  C1B0  F011         	movff	powf@t,___flmul@b
 12786  0027FC  C1B1  F012         	movff	powf@t+1,___flmul@b+1
 12787  002800  C1B2  F013         	movff	powf@t+2,___flmul@b+2
 12788  002804  C1B3  F014         	movff	powf@t+3,___flmul@b+3
 12789  002808  EC6D  F023         	call	___flmul	;wreg free
 12790  00280C  C011  F005         	movff	?___flmul,___fladd@a
 12791  002810  C012  F006         	movff	?___flmul+1,___fladd@a+1
 12792  002814  C013  F007         	movff	?___flmul+2,___fladd@a+2
 12793  002818  C014  F008         	movff	?___flmul+3,___fladd@a+3
 12794  00281C  EC16  F025         	call	___fladd	;wreg free
 12795  002820  C001  F178         	movff	?___fladd,powf@v
 12796  002824  C002  F179         	movff	?___fladd+1,powf@v+1
 12797  002828  C003  F17A         	movff	?___fladd+2,powf@v+2
 12798  00282C  C004  F17B         	movff	?___fladd+3,powf@v+3
 12799  002830  C174  F001         	movff	powf@u,___fladd@b
 12800  002834  C175  F002         	movff	powf@u+1,___fladd@b+1
 12801  002838  C176  F003         	movff	powf@u+2,___fladd@b+2
 12802  00283C  C177  F004         	movff	powf@u+3,___fladd@b+3
 12803  002840  C178  F005         	movff	powf@v,___fladd@a
 12804  002844  C179  F006         	movff	powf@v+1,___fladd@a+1
 12805  002848  C17A  F007         	movff	powf@v+2,___fladd@a+2
 12806  00284C  C17B  F008         	movff	powf@v+3,___fladd@a+3
 12807  002850  EC16  F025         	call	___fladd	;wreg free
 12808  002854  C001  F1B4         	movff	?___fladd,powf@z
 12809  002858  C002  F1B5         	movff	?___fladd+1,powf@z+1
 12810  00285C  C003  F1B6         	movff	?___fladd+2,powf@z+2
 12811  002860  C004  F1B7         	movff	?___fladd+3,powf@z+3
 12812  002864  C174  F02E         	movff	powf@u,___flsub@a
 12813  002868  C175  F02F         	movff	powf@u+1,___flsub@a+1
 12814  00286C  C176  F030         	movff	powf@u+2,___flsub@a+2
 12815  002870  C177  F031         	movff	powf@u+3,___flsub@a+3
 12816  002874  C1B4  F02A         	movff	powf@z,___flsub@b
 12817  002878  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
 12818  00287C  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
 12819  002880  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
 12820  002884  ECAE  F036         	call	___flsub	;wreg free
 12821  002888  C02A  F198         	movff	?___flsub,_powf$2072
 12822  00288C  C02B  F199         	movff	?___flsub+1,_powf$2072+1
 12823  002890  C02C  F19A         	movff	?___flsub+2,_powf$2072+2
 12824  002894  C02D  F19B         	movff	?___flsub+3,_powf$2072+3
 12825  002898  C178  F02A         	movff	powf@v,___flsub@b
 12826  00289C  C179  F02B         	movff	powf@v+1,___flsub@b+1
 12827  0028A0  C17A  F02C         	movff	powf@v+2,___flsub@b+2
 12828  0028A4  C17B  F02D         	movff	powf@v+3,___flsub@b+3
 12829  0028A8  C198  F02E         	movff	_powf$2072,___flsub@a
 12830  0028AC  C199  F02F         	movff	_powf$2072+1,___flsub@a+1
 12831  0028B0  C19A  F030         	movff	_powf$2072+2,___flsub@a+2
 12832  0028B4  C19B  F031         	movff	_powf$2072+3,___flsub@a+3
 12833  0028B8  ECAE  F036         	call	___flsub	;wreg free
 12834  0028BC  C02A  F144         	movff	?___flsub,powf@w
 12835  0028C0  C02B  F145         	movff	?___flsub+1,powf@w+1
 12836  0028C4  C02C  F146         	movff	?___flsub+2,powf@w+2
 12837  0028C8  C02D  F147         	movff	?___flsub+3,powf@w+3
 12838  0028CC  C1B4  F011         	movff	powf@z,___flmul@b
 12839  0028D0  C1B5  F012         	movff	powf@z+1,___flmul@b+1
 12840  0028D4  C1B6  F013         	movff	powf@z+2,___flmul@b+2
 12841  0028D8  C1B7  F014         	movff	powf@z+3,___flmul@b+3
 12842  0028DC  C1B4  F015         	movff	powf@z,___flmul@a
 12843  0028E0  C1B5  F016         	movff	powf@z+1,___flmul@a+1
 12844  0028E4  C1B6  F017         	movff	powf@z+2,___flmul@a+2
 12845  0028E8  C1B7  F018         	movff	powf@z+3,___flmul@a+3
 12846  0028EC  EC6D  F023         	call	___flmul	;wreg free
 12847  0028F0  C011  F1B0         	movff	?___flmul,powf@t
 12848  0028F4  C012  F1B1         	movff	?___flmul+1,powf@t+1
 12849  0028F8  C013  F1B2         	movff	?___flmul+2,powf@t+2
 12850  0028FC  C014  F1B3         	movff	?___flmul+3,powf@t+3
 12851  002900  0E0E               	movlw	14
 12852  002902  6E05               	movwf	___fladd@a^0,c
 12853  002904  0EEA               	movlw	234
 12854  002906  6E06               	movwf	(___fladd@a+1)^0,c
 12855  002908  0EDD               	movlw	221
 12856  00290A  6E07               	movwf	(___fladd@a+2)^0,c
 12857  00290C  0EB5               	movlw	181
 12858  00290E  6E08               	movwf	(___fladd@a+3)^0,c
 12859  002910  0E4C               	movlw	76
 12860  002912  6E15               	movwf	___flmul@a^0,c
 12861  002914  0EBB               	movlw	187
 12862  002916  6E16               	movwf	(___flmul@a+1)^0,c
 12863  002918  0E31               	movlw	49
 12864  00291A  6E17               	movwf	(___flmul@a+2)^0,c
 12865  00291C  0E33               	movlw	51
 12866  00291E  6E18               	movwf	(___flmul@a+3)^0,c
 12867  002920  C1B0  F011         	movff	powf@t,___flmul@b
 12868  002924  C1B1  F012         	movff	powf@t+1,___flmul@b+1
 12869  002928  C1B2  F013         	movff	powf@t+2,___flmul@b+2
 12870  00292C  C1B3  F014         	movff	powf@t+3,___flmul@b+3
 12871  002930  EC6D  F023         	call	___flmul	;wreg free
 12872  002934  C011  F001         	movff	?___flmul,___fladd@b
 12873  002938  C012  F002         	movff	?___flmul+1,___fladd@b+1
 12874  00293C  C013  F003         	movff	?___flmul+2,___fladd@b+2
 12875  002940  C014  F004         	movff	?___flmul+3,___fladd@b+3
 12876  002944  EC16  F025         	call	___fladd	;wreg free
 12877  002948  C001  F1A4         	movff	?___fladd,_powf$2069
 12878  00294C  C002  F1A5         	movff	?___fladd+1,_powf$2069+1
 12879  002950  C003  F1A6         	movff	?___fladd+2,_powf$2069+2
 12880  002954  C004  F1A7         	movff	?___fladd+3,_powf$2069+3
 12881  002958  0E55               	movlw	85
 12882  00295A  6E05               	movwf	___fladd@a^0,c
 12883  00295C  0EB3               	movlw	179
 12884  00295E  6E06               	movwf	(___fladd@a+1)^0,c
 12885  002960  0E8A               	movlw	138
 12886  002962  6E07               	movwf	(___fladd@a+2)^0,c
 12887  002964  0E38               	movlw	56
 12888  002966  6E08               	movwf	(___fladd@a+3)^0,c
 12889  002968  C1B0  F015         	movff	powf@t,___flmul@a
 12890  00296C  C1B1  F016         	movff	powf@t+1,___flmul@a+1
 12891  002970  C1B2  F017         	movff	powf@t+2,___flmul@a+2
 12892  002974  C1B3  F018         	movff	powf@t+3,___flmul@a+3
 12893  002978  C1A4  F011         	movff	_powf$2069,___flmul@b
 12894  00297C  C1A5  F012         	movff	_powf$2069+1,___flmul@b+1
 12895  002980  C1A6  F013         	movff	_powf$2069+2,___flmul@b+2
 12896  002984  C1A7  F014         	movff	_powf$2069+3,___flmul@b+3
 12897  002988  EC6D  F023         	call	___flmul	;wreg free
 12898  00298C  C011  F001         	movff	?___flmul,___fladd@b
 12899  002990  C012  F002         	movff	?___flmul+1,___fladd@b+1
 12900  002994  C013  F003         	movff	?___flmul+2,___fladd@b+2
 12901  002998  C014  F004         	movff	?___flmul+3,___fladd@b+3
 12902  00299C  EC16  F025         	call	___fladd	;wreg free
 12903  0029A0  C001  F158         	movff	?___fladd,_powf$2070
 12904  0029A4  C002  F159         	movff	?___fladd+1,_powf$2070+1
 12905  0029A8  C003  F15A         	movff	?___fladd+2,_powf$2070+2
 12906  0029AC  C004  F15B         	movff	?___fladd+3,_powf$2070+3
 12907  0029B0  0E61               	movlw	97
 12908  0029B2  6E05               	movwf	___fladd@a^0,c
 12909  0029B4  0E0B               	movlw	11
 12910  0029B6  6E06               	movwf	(___fladd@a+1)^0,c
 12911  0029B8  0E36               	movlw	54
 12912  0029BA  6E07               	movwf	(___fladd@a+2)^0,c
 12913  0029BC  0EBB               	movlw	187
 12914  0029BE  6E08               	movwf	(___fladd@a+3)^0,c
 12915  0029C0  C1B0  F015         	movff	powf@t,___flmul@a
 12916  0029C4  C1B1  F016         	movff	powf@t+1,___flmul@a+1
 12917  0029C8  C1B2  F017         	movff	powf@t+2,___flmul@a+2
 12918  0029CC  C1B3  F018         	movff	powf@t+3,___flmul@a+3
 12919  0029D0  C158  F011         	movff	_powf$2070,___flmul@b
 12920  0029D4  C159  F012         	movff	_powf$2070+1,___flmul@b+1
 12921  0029D8  C15A  F013         	movff	_powf$2070+2,___flmul@b+2
 12922  0029DC  C15B  F014         	movff	_powf$2070+3,___flmul@b+3
 12923  0029E0  EC6D  F023         	call	___flmul	;wreg free
 12924  0029E4  C011  F001         	movff	?___flmul,___fladd@b
 12925  0029E8  C012  F002         	movff	?___flmul+1,___fladd@b+1
 12926  0029EC  C013  F003         	movff	?___flmul+2,___fladd@b+2
 12927  0029F0  C014  F004         	movff	?___flmul+3,___fladd@b+3
 12928  0029F4  EC16  F025         	call	___fladd	;wreg free
 12929  0029F8  C001  F148         	movff	?___fladd,_powf$2071
 12930  0029FC  C002  F149         	movff	?___fladd+1,_powf$2071+1
 12931  002A00  C003  F14A         	movff	?___fladd+2,_powf$2071+2
 12932  002A04  C004  F14B         	movff	?___fladd+3,_powf$2071+3
 12933  002A08  0EAB               	movlw	171
 12934  002A0A  6E05               	movwf	___fladd@a^0,c
 12935  002A0C  0EAA               	movlw	170
 12936  002A0E  6E06               	movwf	(___fladd@a+1)^0,c
 12937  002A10  0E2A               	movlw	42
 12938  002A12  6E07               	movwf	(___fladd@a+2)^0,c
 12939  002A14  0E3E               	movlw	62
 12940  002A16  6E08               	movwf	(___fladd@a+3)^0,c
 12941  002A18  C1B0  F015         	movff	powf@t,___flmul@a
 12942  002A1C  C1B1  F016         	movff	powf@t+1,___flmul@a+1
 12943  002A20  C1B2  F017         	movff	powf@t+2,___flmul@a+2
 12944  002A24  C1B3  F018         	movff	powf@t+3,___flmul@a+3
 12945  002A28  C148  F011         	movff	_powf$2071,___flmul@b
 12946  002A2C  C149  F012         	movff	_powf$2071+1,___flmul@b+1
 12947  002A30  C14A  F013         	movff	_powf$2071+2,___flmul@b+2
 12948  002A34  C14B  F014         	movff	_powf$2071+3,___flmul@b+3
 12949  002A38  EC6D  F023         	call	___flmul	;wreg free
 12950  002A3C  C011  F001         	movff	?___flmul,___fladd@b
 12951  002A40  C012  F002         	movff	?___flmul+1,___fladd@b+1
 12952  002A44  C013  F003         	movff	?___flmul+2,___fladd@b+2
 12953  002A48  C014  F004         	movff	?___flmul+3,___fladd@b+3
 12954  002A4C  EC16  F025         	call	___fladd	;wreg free
 12955  002A50  C001  F138         	movff	?___fladd,_powf$2073
 12956  002A54  C002  F139         	movff	?___fladd+1,_powf$2073+1
 12957  002A58  C003  F13A         	movff	?___fladd+2,_powf$2073+2
 12958  002A5C  C004  F13B         	movff	?___fladd+3,_powf$2073+3
 12959  002A60  C1B4  F02A         	movff	powf@z,___flsub@b
 12960  002A64  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
 12961  002A68  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
 12962  002A6C  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
 12963  002A70  C1B0  F015         	movff	powf@t,___flmul@a
 12964  002A74  C1B1  F016         	movff	powf@t+1,___flmul@a+1
 12965  002A78  C1B2  F017         	movff	powf@t+2,___flmul@a+2
 12966  002A7C  C1B3  F018         	movff	powf@t+3,___flmul@a+3
 12967  002A80  C138  F011         	movff	_powf$2073,___flmul@b
 12968  002A84  C139  F012         	movff	_powf$2073+1,___flmul@b+1
 12969  002A88  C13A  F013         	movff	_powf$2073+2,___flmul@b+2
 12970  002A8C  C13B  F014         	movff	_powf$2073+3,___flmul@b+3
 12971  002A90  EC6D  F023         	call	___flmul	;wreg free
 12972  002A94  C011  F02E         	movff	?___flmul,___flsub@a
 12973  002A98  C012  F02F         	movff	?___flmul+1,___flsub@a+1
 12974  002A9C  C013  F030         	movff	?___flmul+2,___flsub@a+2
 12975  002AA0  C014  F031         	movff	?___flmul+3,___flsub@a+3
 12976  002AA4  ECAE  F036         	call	___flsub	;wreg free
 12977  002AA8  C02A  F180         	movff	?___flsub,powf@t1
 12978  002AAC  C02B  F181         	movff	?___flsub+1,powf@t1+1
 12979  002AB0  C02C  F182         	movff	?___flsub+2,powf@t1+2
 12980  002AB4  C02D  F183         	movff	?___flsub+3,powf@t1+3
 12981  002AB8  0E00               	movlw	0
 12982  002ABA  6E05               	movwf	___fladd@a^0,c
 12983  002ABC  0E00               	movlw	0
 12984  002ABE  6E06               	movwf	(___fladd@a+1)^0,c
 12985  002AC0  0E00               	movlw	0
 12986  002AC2  6E07               	movwf	(___fladd@a+2)^0,c
 12987  002AC4  0EC0               	movlw	192
 12988  002AC6  6E08               	movwf	(___fladd@a+3)^0,c
 12989  002AC8  C180  F001         	movff	powf@t1,___fladd@b
 12990  002ACC  C181  F002         	movff	powf@t1+1,___fladd@b+1
 12991  002AD0  C182  F003         	movff	powf@t1+2,___fladd@b+2
 12992  002AD4  C183  F004         	movff	powf@t1+3,___fladd@b+3
 12993  002AD8  EC16  F025         	call	___fladd	;wreg free
 12994  002ADC  C001  F036         	movff	?___fladd,___fldiv@a
 12995  002AE0  C002  F037         	movff	?___fladd+1,___fldiv@a+1
 12996  002AE4  C003  F038         	movff	?___fladd+2,___fldiv@a+2
 12997  002AE8  C004  F039         	movff	?___fladd+3,___fldiv@a+3
 12998  002AEC  C180  F015         	movff	powf@t1,___flmul@a
 12999  002AF0  C181  F016         	movff	powf@t1+1,___flmul@a+1
 13000  002AF4  C182  F017         	movff	powf@t1+2,___flmul@a+2
 13001  002AF8  C183  F018         	movff	powf@t1+3,___flmul@a+3
 13002  002AFC  C1B4  F011         	movff	powf@z,___flmul@b
 13003  002B00  C1B5  F012         	movff	powf@z+1,___flmul@b+1
 13004  002B04  C1B6  F013         	movff	powf@z+2,___flmul@b+2
 13005  002B08  C1B7  F014         	movff	powf@z+3,___flmul@b+3
 13006  002B0C  EC6D  F023         	call	___flmul	;wreg free
 13007  002B10  C011  F032         	movff	?___flmul,___fldiv@b
 13008  002B14  C012  F033         	movff	?___flmul+1,___fldiv@b+1
 13009  002B18  C013  F034         	movff	?___flmul+2,___fldiv@b+2
 13010  002B1C  C014  F035         	movff	?___flmul+3,___fldiv@b+3
 13011  002B20  EC9C  F026         	call	___fldiv	;wreg free
 13012  002B24  C032  F13C         	movff	?___fldiv,_powf$2077
 13013  002B28  C033  F13D         	movff	?___fldiv+1,_powf$2077+1
 13014  002B2C  C034  F13E         	movff	?___fldiv+2,_powf$2077+2
 13015  002B30  C035  F13F         	movff	?___fldiv+3,_powf$2077+3
 13016  002B34  C144  F005         	movff	powf@w,___fladd@a
 13017  002B38  C145  F006         	movff	powf@w+1,___fladd@a+1
 13018  002B3C  C146  F007         	movff	powf@w+2,___fladd@a+2
 13019  002B40  C147  F008         	movff	powf@w+3,___fladd@a+3
 13020  002B44  C144  F015         	movff	powf@w,___flmul@a
 13021  002B48  C145  F016         	movff	powf@w+1,___flmul@a+1
 13022  002B4C  C146  F017         	movff	powf@w+2,___flmul@a+2
 13023  002B50  C147  F018         	movff	powf@w+3,___flmul@a+3
 13024  002B54  C1B4  F011         	movff	powf@z,___flmul@b
 13025  002B58  C1B5  F012         	movff	powf@z+1,___flmul@b+1
 13026  002B5C  C1B6  F013         	movff	powf@z+2,___flmul@b+2
 13027  002B60  C1B7  F014         	movff	powf@z+3,___flmul@b+3
 13028  002B64  EC6D  F023         	call	___flmul	;wreg free
 13029  002B68  C011  F001         	movff	?___flmul,___fladd@b
 13030  002B6C  C012  F002         	movff	?___flmul+1,___fladd@b+1
 13031  002B70  C013  F003         	movff	?___flmul+2,___fladd@b+2
 13032  002B74  C014  F004         	movff	?___flmul+3,___fladd@b+3
 13033  002B78  EC16  F025         	call	___fladd	;wreg free
 13034  002B7C  C001  F118         	movff	?___fladd,_powf$2083
 13035  002B80  C002  F119         	movff	?___fladd+1,_powf$2083+1
 13036  002B84  C003  F11A         	movff	?___fladd+2,_powf$2083+2
 13037  002B88  C004  F11B         	movff	?___fladd+3,_powf$2083+3
 13038  002B8C  C13C  F02A         	movff	_powf$2077,___flsub@b
 13039  002B90  C13D  F02B         	movff	_powf$2077+1,___flsub@b+1
 13040  002B94  C13E  F02C         	movff	_powf$2077+2,___flsub@b+2
 13041  002B98  C13F  F02D         	movff	_powf$2077+3,___flsub@b+3
 13042  002B9C  C118  F02E         	movff	_powf$2083,___flsub@a
 13043  002BA0  C119  F02F         	movff	_powf$2083+1,___flsub@a+1
 13044  002BA4  C11A  F030         	movff	_powf$2083+2,___flsub@a+2
 13045  002BA8  C11B  F031         	movff	_powf$2083+3,___flsub@a+3
 13046  002BAC  ECAE  F036         	call	___flsub	;wreg free
 13047  002BB0  C02A  F14C         	movff	?___flsub,powf@r
 13048  002BB4  C02B  F14D         	movff	?___flsub+1,powf@r+1
 13049  002BB8  C02C  F14E         	movff	?___flsub+2,powf@r+2
 13050  002BBC  C02D  F14F         	movff	?___flsub+3,powf@r+3
 13051  002BC0  C1B4  F02E         	movff	powf@z,___flsub@a
 13052  002BC4  C1B5  F02F         	movff	powf@z+1,___flsub@a+1
 13053  002BC8  C1B6  F030         	movff	powf@z+2,___flsub@a+2
 13054  002BCC  C1B7  F031         	movff	powf@z+3,___flsub@a+3
 13055  002BD0  C14C  F02A         	movff	powf@r,___flsub@b
 13056  002BD4  C14D  F02B         	movff	powf@r+1,___flsub@b+1
 13057  002BD8  C14E  F02C         	movff	powf@r+2,___flsub@b+2
 13058  002BDC  C14F  F02D         	movff	powf@r+3,___flsub@b+3
 13059  002BE0  ECAE  F036         	call	___flsub	;wreg free
 13060  002BE4  C02A  F198         	movff	?___flsub,_powf$2072
 13061  002BE8  C02B  F199         	movff	?___flsub+1,_powf$2072+1
 13062  002BEC  C02C  F19A         	movff	?___flsub+2,_powf$2072+2
 13063  002BF0  C02D  F19B         	movff	?___flsub+3,_powf$2072+3
 13064  002BF4  0E00               	movlw	0
 13065  002BF6  6E2A               	movwf	___flsub@b^0,c
 13066  002BF8  0E00               	movlw	0
 13067  002BFA  6E2B               	movwf	(___flsub@b+1)^0,c
 13068  002BFC  0E80               	movlw	128
 13069  002BFE  6E2C               	movwf	(___flsub@b+2)^0,c
 13070  002C00  0E3F               	movlw	63
 13071  002C02  6E2D               	movwf	(___flsub@b+3)^0,c
 13072  002C04  C198  F02E         	movff	_powf$2072,___flsub@a
 13073  002C08  C199  F02F         	movff	_powf$2072+1,___flsub@a+1
 13074  002C0C  C19A  F030         	movff	_powf$2072+2,___flsub@a+2
 13075  002C10  C19B  F031         	movff	_powf$2072+3,___flsub@a+3
 13076  002C14  ECAE  F036         	call	___flsub	;wreg free
 13077  002C18  C02A  F1B4         	movff	?___flsub,powf@z
 13078  002C1C  C02B  F1B5         	movff	?___flsub+1,powf@z+1
 13079  002C20  C02C  F1B6         	movff	?___flsub+2,powf@z+2
 13080  002C24  C02D  F1B7         	movff	?___flsub+3,powf@z+3
 13081  002C28  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 13082  002C2C  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 13083  002C30  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 13084  002C34  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 13085  002C38  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 13086  002C3C  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 13087  002C40  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 13088  002C44  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 13089  002C48  C188  F06F         	movff	powf@n,??_powf
 13090  002C4C  C189  F070         	movff	powf@n+1,??_powf+1
 13091  002C50  C18A  F071         	movff	powf@n+2,??_powf+2
 13092  002C54  C18B  F072         	movff	powf@n+3,??_powf+3
 13093  002C58  0E17               	movlw	23
 13094  002C5A                     i2u1440_45:
 13095  002C5A  90D8               	bcf	status,0,c
 13096  002C5C  366F               	rlcf	??_powf^0,f,c
 13097  002C5E  3670               	rlcf	(??_powf+1)^0,f,c
 13098  002C60  3671               	rlcf	(??_powf+2)^0,f,c
 13099  002C62  3672               	rlcf	(??_powf+3)^0,f,c
 13100  002C64  2EE8               	decfsz	wreg,f,c
 13101  002C66  D7F9               	goto	i2u1440_45
 13102  002C68  506F               	movf	??_powf^0,w,c
 13103  002C6A  0101               	movlb	1	; () banked
 13104  002C6C  27AC               	addwf	powf@j& (0+255),f,b
 13105  002C6E  5070               	movf	(??_powf+1)^0,w,c
 13106  002C70  23AD               	addwfc	(powf@j+1)& (0+255),f,b
 13107  002C72  5071               	movf	(??_powf+2)^0,w,c
 13108  002C74  23AE               	addwfc	(powf@j+2)& (0+255),f,b
 13109  002C76  5072               	movf	(??_powf+3)^0,w,c
 13110  002C78  23AF               	addwfc	(powf@j+3)& (0+255),f,b
 13111                           
 13112                           ; BSR set to: 1
 13113  002C7A  0E17               	movlw	23
 13114  002C7C  6E6F               	movwf	??_powf^0,c
 13115  002C7E  C1AC  F070         	movff	powf@j,??_powf+1
 13116  002C82  C1AD  F071         	movff	powf@j+1,??_powf+2
 13117  002C86  C1AE  F072         	movff	powf@j+2,??_powf+3
 13118  002C8A  C1AF  F073         	movff	powf@j+3,??_powf+4
 13119  002C8E                     i2u1441_45:
 13120  002C8E  666F               	tstfsz	??_powf^0,c
 13121  002C90  D001               	goto	i2u1441_46
 13122  002C92  D007               	goto	i2u1441_47
 13123  002C94                     i2u1441_46:
 13124  002C94  3473               	rlcf	(??_powf+4)^0,w,c
 13125  002C96  3273               	rrcf	(??_powf+4)^0,f,c
 13126  002C98  3272               	rrcf	(??_powf+3)^0,f,c
 13127  002C9A  3271               	rrcf	(??_powf+2)^0,f,c
 13128  002C9C  3270               	rrcf	(??_powf+1)^0,f,c
 13129  002C9E  2E6F               	decfsz	??_powf^0,f,c
 13130  002CA0  D7F6               	goto	i2u1441_45
 13131  002CA2                     i2u1441_47:
 13132  002CA2  BE73               	btfsc	(??_powf+4)^0,7,c
 13133  002CA4  D007               	goto	i2u1442_40
 13134  002CA6  5073               	movf	(??_powf+4)^0,w,c
 13135  002CA8  1072               	iorwf	(??_powf+3)^0,w,c
 13136  002CAA  1071               	iorwf	(??_powf+2)^0,w,c
 13137  002CAC  E11A               	bnz	i2l1487
 13138  002CAE  0470               	decf	(??_powf+1)^0,w,c
 13139  002CB0  B0D8               	btfsc	status,0,c
 13140  002CB2  D017               	goto	i2l1487
 13141  002CB4                     i2u1442_40:
 13142  002CB4  C1B4  F02A         	movff	powf@z,scalbnf@x
 13143  002CB8  C1B5  F02B         	movff	powf@z+1,scalbnf@x+1
 13144  002CBC  C1B6  F02C         	movff	powf@z+2,scalbnf@x+2
 13145  002CC0  C1B7  F02D         	movff	powf@z+3,scalbnf@x+3
 13146  002CC4  C188  F02E         	movff	powf@n,scalbnf@n
 13147  002CC8  C189  F02F         	movff	powf@n+1,scalbnf@n+1
 13148  002CCC  EC0A  F02A         	call	_scalbnf	;wreg free
 13149  002CD0  C02A  F1B4         	movff	?_scalbnf,powf@z
 13150  002CD4  C02B  F1B5         	movff	?_scalbnf+1,powf@z+1
 13151  002CD8  C02C  F1B6         	movff	?_scalbnf+2,powf@z+2
 13152  002CDC  C02D  F1B7         	movff	?_scalbnf+3,powf@z+3
 13153  002CE0  D010               	goto	i2l10861
 13154  002CE2                     i2l1487:
 13155  002CE2  C1AC  F1B8         	movff	powf@j,powf@__xc8_float_word
 13156  002CE6  C1AD  F1B9         	movff	powf@j+1,powf@__xc8_float_word+1
 13157  002CEA  C1AE  F1BA         	movff	powf@j+2,powf@__xc8_float_word+2
 13158  002CEE  C1AF  F1BB         	movff	powf@j+3,powf@__xc8_float_word+3
 13159  002CF2  C1B8  F1B4         	movff	powf@__xc8_float_word,powf@z
 13160  002CF6  C1B9  F1B5         	movff	powf@__xc8_float_word+1,powf@z+1
 13161  002CFA  C1BA  F1B6         	movff	powf@__xc8_float_word+2,powf@z+2
 13162  002CFE  C1BB  F1B7         	movff	powf@__xc8_float_word+3,powf@z+3
 13163  002D02                     i2l10861:
 13164  002D02  C184  F011         	movff	powf@sn,___flmul@b
 13165  002D06  C185  F012         	movff	powf@sn+1,___flmul@b+1
 13166  002D0A  C186  F013         	movff	powf@sn+2,___flmul@b+2
 13167  002D0E  C187  F014         	movff	powf@sn+3,___flmul@b+3
 13168  002D12  C1B4  F015         	movff	powf@z,___flmul@a
 13169  002D16  C1B5  F016         	movff	powf@z+1,___flmul@a+1
 13170  002D1A  C1B6  F017         	movff	powf@z+2,___flmul@a+2
 13171  002D1E  C1B7  F018         	movff	powf@z+3,___flmul@a+3
 13172  002D22  EC6D  F023         	call	___flmul	;wreg free
 13173  002D26  C011  F0C2         	movff	?___flmul,?_powf
 13174  002D2A  C012  F0C3         	movff	?___flmul+1,?_powf+1
 13175  002D2E  C013  F0C4         	movff	?___flmul+2,?_powf+2
 13176  002D32  C014  F0C5         	movff	?___flmul+3,?_powf+3
 13177  002D36  0012               	return		;funcret
 13178  002D38                     __end_of_powf:
 13179                           	opt callstack 0
 13180                           
 13181 ;; *************** function _sqrtf *****************
 13182 ;; Defined at:
 13183 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sqrtf.c"
 13184 ;; Parameters:    Size  Location     Type
 13185 ;;  x               4   61[COMRAM] float 
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;  ix              4  106[COMRAM] long 
 13188 ;;  r               4  102[COMRAM] unsigned long 
 13189 ;;  m               4   98[COMRAM] long 
 13190 ;;  z               4   94[COMRAM] float 
 13191 ;;  t               4   90[COMRAM] long 
 13192 ;;  q               4   86[COMRAM] long 
 13193 ;;  __xc8_float_    4   82[COMRAM] struct .
 13194 ;;  i               4   78[COMRAM] long 
 13195 ;;  s               4   74[COMRAM] long 
 13196 ;;  sign            4    0        long 
 13197 ;; Return value:  Size  Location     Type
 13198 ;;                  4   61[COMRAM] float 
 13199 ;; Registers used:
 13200 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13201 ;; Tracked objects:
 13202 ;;		On entry : 0/0
 13203 ;;		On exit  : 0/0
 13204 ;;		Unchanged: 0/0
 13205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13206 ;;      Params:         4       0       0       0       0       0       0
 13207 ;;      Locals:        40       0       0       0       0       0       0
 13208 ;;      Temps:          5       0       0       0       0       0       0
 13209 ;;      Totals:        49       0       0       0       0       0       0
 13210 ;;Total ram usage:       49 bytes
 13211 ;; Hardware stack levels used:    1
 13212 ;; Hardware stack levels required when called:    1
 13213 ;; This function calls:
 13214 ;;		___fladd
 13215 ;;		___flge
 13216 ;;		___flmul
 13217 ;;		_nanf
 13218 ;; This function is called by:
 13219 ;;		_powf
 13220 ;; This function uses a non-reentrant model
 13221 ;;
 13222                           
 13223                           	psect	text51
 13224  0042B4                     __ptext51:
 13225                           	opt callstack 0
 13226  0042B4                     _sqrtf:
 13227                           	opt callstack 17
 13228                           
 13229                           ;incstack = 0
 13230  0042B4  C03E  F053         	movff	sqrtf@x,sqrtf@__xc8_float_word
 13231  0042B8  C03F  F054         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
 13232  0042BC  C040  F055         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
 13233  0042C0  C041  F056         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
 13234  0042C4  C053  F06B         	movff	sqrtf@__xc8_float_word,sqrtf@ix
 13235  0042C8  C054  F06C         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
 13236  0042CC  C055  F06D         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
 13237  0042D0  C056  F06E         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
 13238  0042D4  0E00               	movlw	0
 13239  0042D6  146B               	andwf	sqrtf@ix^0,w,c
 13240  0042D8  6E42               	movwf	??_sqrtf^0,c
 13241  0042DA  0E00               	movlw	0
 13242  0042DC  146C               	andwf	(sqrtf@ix+1)^0,w,c
 13243  0042DE  6E43               	movwf	(??_sqrtf+1)^0,c
 13244  0042E0  0E80               	movlw	128
 13245  0042E2  146D               	andwf	(sqrtf@ix+2)^0,w,c
 13246  0042E4  6E44               	movwf	(??_sqrtf+2)^0,c
 13247  0042E6  0E7F               	movlw	127
 13248  0042E8  146E               	andwf	(sqrtf@ix+3)^0,w,c
 13249  0042EA  6E45               	movwf	(??_sqrtf+3)^0,c
 13250  0042EC  0E80               	movlw	128
 13251  0042EE  1844               	xorwf	(??_sqrtf+2)^0,w,c
 13252  0042F0  E133               	bnz	i2l10193
 13253  0042F2  0E7F               	movlw	127
 13254  0042F4  1845               	xorwf	(??_sqrtf+3)^0,w,c
 13255  0042F6  1042               	iorwf	??_sqrtf^0,w,c
 13256  0042F8  1043               	iorwf	(??_sqrtf+1)^0,w,c
 13257  0042FA  A4D8               	btfss	status,2,c
 13258  0042FC  D02D               	goto	i2l10193
 13259  0042FE  C03E  F015         	movff	sqrtf@x,___flmul@a
 13260  004302  C03F  F016         	movff	sqrtf@x+1,___flmul@a+1
 13261  004306  C040  F017         	movff	sqrtf@x+2,___flmul@a+2
 13262  00430A  C041  F018         	movff	sqrtf@x+3,___flmul@a+3
 13263  00430E  C03E  F011         	movff	sqrtf@x,___flmul@b
 13264  004312  C03F  F012         	movff	sqrtf@x+1,___flmul@b+1
 13265  004316  C040  F013         	movff	sqrtf@x+2,___flmul@b+2
 13266  00431A  C041  F014         	movff	sqrtf@x+3,___flmul@b+3
 13267  00431E  EC6D  F023         	call	___flmul	;wreg free
 13268  004322  C011  F001         	movff	?___flmul,___fladd@b
 13269  004326  C012  F002         	movff	?___flmul+1,___fladd@b+1
 13270  00432A  C013  F003         	movff	?___flmul+2,___fladd@b+2
 13271  00432E  C014  F004         	movff	?___flmul+3,___fladd@b+3
 13272  004332  C03E  F005         	movff	sqrtf@x,___fladd@a
 13273  004336  C03F  F006         	movff	sqrtf@x+1,___fladd@a+1
 13274  00433A  C040  F007         	movff	sqrtf@x+2,___fladd@a+2
 13275  00433E  C041  F008         	movff	sqrtf@x+3,___fladd@a+3
 13276  004342  EC16  F025         	call	___fladd	;wreg free
 13277  004346  C001  F03E         	movff	?___fladd,?_sqrtf
 13278  00434A  C002  F03F         	movff	?___fladd+1,?_sqrtf+1
 13279  00434E  C003  F040         	movff	?___fladd+2,?_sqrtf+2
 13280  004352  C004  F041         	movff	?___fladd+3,?_sqrtf+3
 13281  004356  0012               	return	
 13282  004358                     i2l10193:
 13283  004358  BE6E               	btfsc	(sqrtf@ix+3)^0,7,c
 13284  00435A  D007               	goto	i2u1351_40
 13285  00435C  506E               	movf	(sqrtf@ix+3)^0,w,c
 13286  00435E  106D               	iorwf	(sqrtf@ix+2)^0,w,c
 13287  004360  106C               	iorwf	(sqrtf@ix+1)^0,w,c
 13288  004362  E134               	bnz	i2l10207
 13289  004364  046B               	decf	sqrtf@ix^0,w,c
 13290  004366  B0D8               	btfsc	status,0,c
 13291  004368  D031               	goto	i2l10207
 13292  00436A                     i2u1351_40:
 13293  00436A  0EFF               	movlw	255
 13294  00436C  146B               	andwf	sqrtf@ix^0,w,c
 13295  00436E  6E42               	movwf	??_sqrtf^0,c
 13296  004370  0EFF               	movlw	255
 13297  004372  146C               	andwf	(sqrtf@ix+1)^0,w,c
 13298  004374  6E43               	movwf	(??_sqrtf+1)^0,c
 13299  004376  0EFF               	movlw	255
 13300  004378  146D               	andwf	(sqrtf@ix+2)^0,w,c
 13301  00437A  6E44               	movwf	(??_sqrtf+2)^0,c
 13302  00437C  0E7F               	movlw	127
 13303  00437E  146E               	andwf	(sqrtf@ix+3)^0,w,c
 13304  004380  6E45               	movwf	(??_sqrtf+3)^0,c
 13305  004382  5042               	movf	??_sqrtf^0,w,c
 13306  004384  1043               	iorwf	(??_sqrtf+1)^0,w,c
 13307  004386  1044               	iorwf	(??_sqrtf+2)^0,w,c
 13308  004388  1045               	iorwf	(??_sqrtf+3)^0,w,c
 13309  00438A  A4D8               	btfss	status,2,c
 13310  00438C  D009               	goto	i2l10199
 13311  00438E  C03E  F03E         	movff	sqrtf@x,?_sqrtf
 13312  004392  C03F  F03F         	movff	sqrtf@x+1,?_sqrtf+1
 13313  004396  C040  F040         	movff	sqrtf@x+2,?_sqrtf+2
 13314  00439A  C041  F041         	movff	sqrtf@x+3,?_sqrtf+3
 13315  00439E  0012               	return	
 13316  0043A0                     i2l10199:
 13317  0043A0  AE6E               	btfss	(sqrtf@ix+3)^0,7,c
 13318  0043A2  D014               	goto	i2l10207
 13319  0043A4  0E00               	movlw	0
 13320  0043A6  0102               	movlb	2	; () banked
 13321  0043A8  6F1D               	movwf	(_errno+1)& (0+255),b
 13322  0043AA  0E21               	movlw	33
 13323  0043AC  6F1C               	movwf	_errno& (0+255),b
 13324                           
 13325                           ; BSR set to: 2
 13326  0043AE  0EA8               	movlw	low (STR_3+8)
 13327  0043B0  6E01               	movwf	nanf@s^0,c
 13328  0043B2  0E06               	movlw	high (STR_3+8)
 13329  0043B4  6E02               	movwf	(nanf@s+1)^0,c
 13330  0043B6  EC29  F038         	call	_nanf	;wreg free
 13331  0043BA  C001  F03E         	movff	?_nanf,?_sqrtf
 13332  0043BE  C002  F03F         	movff	?_nanf+1,?_sqrtf+1
 13333  0043C2  C003  F040         	movff	?_nanf+2,?_sqrtf+2
 13334  0043C6  C004  F041         	movff	?_nanf+3,?_sqrtf+3
 13335  0043CA  0012               	return	
 13336  0043CC                     i2l10207:
 13337  0043CC  0E17               	movlw	23
 13338  0043CE  6E42               	movwf	??_sqrtf^0,c
 13339  0043D0  C06B  F043         	movff	sqrtf@ix,??_sqrtf+1
 13340  0043D4  C06C  F044         	movff	sqrtf@ix+1,??_sqrtf+2
 13341  0043D8  C06D  F045         	movff	sqrtf@ix+2,??_sqrtf+3
 13342  0043DC  C06E  F046         	movff	sqrtf@ix+3,??_sqrtf+4
 13343  0043E0                     i2u1354_45:
 13344  0043E0  6642               	tstfsz	??_sqrtf^0,c
 13345  0043E2  D001               	goto	i2u1354_46
 13346  0043E4  D007               	goto	i2u1354_47
 13347  0043E6                     i2u1354_46:
 13348  0043E6  3446               	rlcf	(??_sqrtf+4)^0,w,c
 13349  0043E8  3246               	rrcf	(??_sqrtf+4)^0,f,c
 13350  0043EA  3245               	rrcf	(??_sqrtf+3)^0,f,c
 13351  0043EC  3244               	rrcf	(??_sqrtf+2)^0,f,c
 13352  0043EE  3243               	rrcf	(??_sqrtf+1)^0,f,c
 13353  0043F0  2E42               	decfsz	??_sqrtf^0,f,c
 13354  0043F2  D7F6               	goto	i2u1354_45
 13355  0043F4                     i2u1354_47:
 13356  0043F4  C043  F063         	movff	??_sqrtf+1,sqrtf@m
 13357  0043F8  C044  F064         	movff	??_sqrtf+2,sqrtf@m+1
 13358  0043FC  C045  F065         	movff	??_sqrtf+3,sqrtf@m+2
 13359  004400  C046  F066         	movff	??_sqrtf+4,sqrtf@m+3
 13360  004404  5063               	movf	sqrtf@m^0,w,c
 13361  004406  1064               	iorwf	(sqrtf@m+1)^0,w,c
 13362  004408  1065               	iorwf	(sqrtf@m+2)^0,w,c
 13363  00440A  1066               	iorwf	(sqrtf@m+3)^0,w,c
 13364  00440C  A4D8               	btfss	status,2,c
 13365  00440E  D02A               	goto	i2l1517
 13366  004410  0E00               	movlw	0
 13367  004412  6E4F               	movwf	sqrtf@i^0,c
 13368  004414  0E00               	movlw	0
 13369  004416  6E50               	movwf	(sqrtf@i+1)^0,c
 13370  004418  0E00               	movlw	0
 13371  00441A  6E51               	movwf	(sqrtf@i+2)^0,c
 13372  00441C  0E00               	movlw	0
 13373  00441E  6E52               	movwf	(sqrtf@i+3)^0,c
 13374  004420  D00B               	goto	i2l10215
 13375  004422                     i2l10211:
 13376  004422  90D8               	bcf	status,0,c
 13377  004424  366B               	rlcf	sqrtf@ix^0,f,c
 13378  004426  366C               	rlcf	(sqrtf@ix+1)^0,f,c
 13379  004428  366D               	rlcf	(sqrtf@ix+2)^0,f,c
 13380  00442A  366E               	rlcf	(sqrtf@ix+3)^0,f,c
 13381  00442C  0E01               	movlw	1
 13382  00442E  264F               	addwf	sqrtf@i^0,f,c
 13383  004430  0E00               	movlw	0
 13384  004432  2250               	addwfc	(sqrtf@i+1)^0,f,c
 13385  004434  2251               	addwfc	(sqrtf@i+2)^0,f,c
 13386  004436  2252               	addwfc	(sqrtf@i+3)^0,f,c
 13387  004438                     i2l10215:
 13388  004438  AE6D               	btfss	(sqrtf@ix+2)^0,7,c
 13389  00443A  D7F3               	goto	i2l10211
 13390  00443C  0EFF               	movlw	255
 13391  00443E  244F               	addwf	sqrtf@i^0,w,c
 13392  004440  6E42               	movwf	??_sqrtf^0,c
 13393  004442  0EFF               	movlw	255
 13394  004444  2050               	addwfc	(sqrtf@i+1)^0,w,c
 13395  004446  6E43               	movwf	(??_sqrtf+1)^0,c
 13396  004448  0EFF               	movlw	255
 13397  00444A  2051               	addwfc	(sqrtf@i+2)^0,w,c
 13398  00444C  6E44               	movwf	(??_sqrtf+2)^0,c
 13399  00444E  0EFF               	movlw	255
 13400  004450  2052               	addwfc	(sqrtf@i+3)^0,w,c
 13401  004452  6E45               	movwf	(??_sqrtf+3)^0,c
 13402  004454  5042               	movf	??_sqrtf^0,w,c
 13403  004456  5E63               	subwf	sqrtf@m^0,f,c
 13404  004458  5043               	movf	(??_sqrtf+1)^0,w,c
 13405  00445A  5A64               	subwfb	(sqrtf@m+1)^0,f,c
 13406  00445C  5044               	movf	(??_sqrtf+2)^0,w,c
 13407  00445E  5A65               	subwfb	(sqrtf@m+2)^0,f,c
 13408  004460  5045               	movf	(??_sqrtf+3)^0,w,c
 13409  004462  5A66               	subwfb	(sqrtf@m+3)^0,f,c
 13410  004464                     i2l1517:
 13411  004464  0E81               	movlw	129
 13412  004466  2663               	addwf	sqrtf@m^0,f,c
 13413  004468  0EFF               	movlw	255
 13414  00446A  2264               	addwfc	(sqrtf@m+1)^0,f,c
 13415  00446C  0EFF               	movlw	255
 13416  00446E  2265               	addwfc	(sqrtf@m+2)^0,f,c
 13417  004470  0EFF               	movlw	255
 13418  004472  2266               	addwfc	(sqrtf@m+3)^0,f,c
 13419  004474  0EFF               	movlw	255
 13420  004476  146B               	andwf	sqrtf@ix^0,w,c
 13421  004478  6E42               	movwf	??_sqrtf^0,c
 13422  00447A  0EFF               	movlw	255
 13423  00447C  146C               	andwf	(sqrtf@ix+1)^0,w,c
 13424  00447E  6E43               	movwf	(??_sqrtf+1)^0,c
 13425  004480  0E7F               	movlw	127
 13426  004482  146D               	andwf	(sqrtf@ix+2)^0,w,c
 13427  004484  6E44               	movwf	(??_sqrtf+2)^0,c
 13428  004486  0E00               	movlw	0
 13429  004488  146E               	andwf	(sqrtf@ix+3)^0,w,c
 13430  00448A  6E45               	movwf	(??_sqrtf+3)^0,c
 13431  00448C  0E00               	movlw	0
 13432  00448E  1042               	iorwf	??_sqrtf^0,w,c
 13433  004490  6E6B               	movwf	sqrtf@ix^0,c
 13434  004492  0E00               	movlw	0
 13435  004494  1043               	iorwf	(??_sqrtf+1)^0,w,c
 13436  004496  6E6C               	movwf	(sqrtf@ix+1)^0,c
 13437  004498  0E80               	movlw	128
 13438  00449A  1044               	iorwf	(??_sqrtf+2)^0,w,c
 13439  00449C  6E6D               	movwf	(sqrtf@ix+2)^0,c
 13440  00449E  0E00               	movlw	0
 13441  0044A0  1045               	iorwf	(??_sqrtf+3)^0,w,c
 13442  0044A2  6E6E               	movwf	(sqrtf@ix+3)^0,c
 13443  0044A4  A063               	btfss	sqrtf@m^0,0,c
 13444  0044A6  D008               	goto	i2l1521
 13445  0044A8  506B               	movf	sqrtf@ix^0,w,c
 13446  0044AA  266B               	addwf	sqrtf@ix^0,f,c
 13447  0044AC  506C               	movf	(sqrtf@ix+1)^0,w,c
 13448  0044AE  226C               	addwfc	(sqrtf@ix+1)^0,f,c
 13449  0044B0  506D               	movf	(sqrtf@ix+2)^0,w,c
 13450  0044B2  226D               	addwfc	(sqrtf@ix+2)^0,f,c
 13451  0044B4  506E               	movf	(sqrtf@ix+3)^0,w,c
 13452  0044B6  226E               	addwfc	(sqrtf@ix+3)^0,f,c
 13453  0044B8                     i2l1521:
 13454  0044B8  3466               	rlcf	(sqrtf@m+3)^0,w,c
 13455  0044BA  3266               	rrcf	(sqrtf@m+3)^0,f,c
 13456  0044BC  3265               	rrcf	(sqrtf@m+2)^0,f,c
 13457  0044BE  3264               	rrcf	(sqrtf@m+1)^0,f,c
 13458  0044C0  3263               	rrcf	sqrtf@m^0,f,c
 13459  0044C2  506B               	movf	sqrtf@ix^0,w,c
 13460  0044C4  266B               	addwf	sqrtf@ix^0,f,c
 13461  0044C6  506C               	movf	(sqrtf@ix+1)^0,w,c
 13462  0044C8  226C               	addwfc	(sqrtf@ix+1)^0,f,c
 13463  0044CA  506D               	movf	(sqrtf@ix+2)^0,w,c
 13464  0044CC  226D               	addwfc	(sqrtf@ix+2)^0,f,c
 13465  0044CE  506E               	movf	(sqrtf@ix+3)^0,w,c
 13466  0044D0  226E               	addwfc	(sqrtf@ix+3)^0,f,c
 13467  0044D2  0E00               	movlw	0
 13468  0044D4  6E4B               	movwf	sqrtf@s^0,c
 13469  0044D6  0E00               	movlw	0
 13470  0044D8  6E4C               	movwf	(sqrtf@s+1)^0,c
 13471  0044DA  0E00               	movlw	0
 13472  0044DC  6E4D               	movwf	(sqrtf@s+2)^0,c
 13473  0044DE  0E00               	movlw	0
 13474  0044E0  6E4E               	movwf	(sqrtf@s+3)^0,c
 13475  0044E2  C04B  F057         	movff	sqrtf@s,sqrtf@q
 13476  0044E6  C04C  F058         	movff	sqrtf@s+1,sqrtf@q+1
 13477  0044EA  C04D  F059         	movff	sqrtf@s+2,sqrtf@q+2
 13478  0044EE  C04E  F05A         	movff	sqrtf@s+3,sqrtf@q+3
 13479  0044F2  0E00               	movlw	0
 13480  0044F4  6E67               	movwf	sqrtf@r^0,c
 13481  0044F6  0E00               	movlw	0
 13482  0044F8  6E68               	movwf	(sqrtf@r+1)^0,c
 13483  0044FA  0E00               	movlw	0
 13484  0044FC  6E69               	movwf	(sqrtf@r+2)^0,c
 13485  0044FE  0E01               	movlw	1
 13486  004500  6E6A               	movwf	(sqrtf@r+3)^0,c
 13487  004502  D043               	goto	i2l10233
 13488  004504                     i2l10227:
 13489  004504  5067               	movf	sqrtf@r^0,w,c
 13490  004506  244B               	addwf	sqrtf@s^0,w,c
 13491  004508  6E5B               	movwf	sqrtf@t^0,c
 13492  00450A  5068               	movf	(sqrtf@r+1)^0,w,c
 13493  00450C  204C               	addwfc	(sqrtf@s+1)^0,w,c
 13494  00450E  6E5C               	movwf	(sqrtf@t+1)^0,c
 13495  004510  5069               	movf	(sqrtf@r+2)^0,w,c
 13496  004512  204D               	addwfc	(sqrtf@s+2)^0,w,c
 13497  004514  6E5D               	movwf	(sqrtf@t+2)^0,c
 13498  004516  506A               	movf	(sqrtf@r+3)^0,w,c
 13499  004518  204E               	addwfc	(sqrtf@s+3)^0,w,c
 13500  00451A  6E5E               	movwf	(sqrtf@t+3)^0,c
 13501  00451C  505B               	movf	sqrtf@t^0,w,c
 13502  00451E  5C6B               	subwf	sqrtf@ix^0,w,c
 13503  004520  505C               	movf	(sqrtf@t+1)^0,w,c
 13504  004522  586C               	subwfb	(sqrtf@ix+1)^0,w,c
 13505  004524  505D               	movf	(sqrtf@t+2)^0,w,c
 13506  004526  586D               	subwfb	(sqrtf@ix+2)^0,w,c
 13507  004528  506E               	movf	(sqrtf@ix+3)^0,w,c
 13508  00452A  0A80               	xorlw	128
 13509  00452C  6E42               	movwf	??_sqrtf^0,c
 13510  00452E  505E               	movf	(sqrtf@t+3)^0,w,c
 13511  004530  0A80               	xorlw	128
 13512  004532  5842               	subwfb	??_sqrtf^0,w,c
 13513  004534  A0D8               	btfss	status,0,c
 13514  004536  D01C               	goto	i2l1524
 13515  004538  5067               	movf	sqrtf@r^0,w,c
 13516  00453A  245B               	addwf	sqrtf@t^0,w,c
 13517  00453C  6E4B               	movwf	sqrtf@s^0,c
 13518  00453E  5068               	movf	(sqrtf@r+1)^0,w,c
 13519  004540  205C               	addwfc	(sqrtf@t+1)^0,w,c
 13520  004542  6E4C               	movwf	(sqrtf@s+1)^0,c
 13521  004544  5069               	movf	(sqrtf@r+2)^0,w,c
 13522  004546  205D               	addwfc	(sqrtf@t+2)^0,w,c
 13523  004548  6E4D               	movwf	(sqrtf@s+2)^0,c
 13524  00454A  506A               	movf	(sqrtf@r+3)^0,w,c
 13525  00454C  205E               	addwfc	(sqrtf@t+3)^0,w,c
 13526  00454E  6E4E               	movwf	(sqrtf@s+3)^0,c
 13527  004550  505B               	movf	sqrtf@t^0,w,c
 13528  004552  5E6B               	subwf	sqrtf@ix^0,f,c
 13529  004554  505C               	movf	(sqrtf@t+1)^0,w,c
 13530  004556  5A6C               	subwfb	(sqrtf@ix+1)^0,f,c
 13531  004558  505D               	movf	(sqrtf@t+2)^0,w,c
 13532  00455A  5A6D               	subwfb	(sqrtf@ix+2)^0,f,c
 13533  00455C  505E               	movf	(sqrtf@t+3)^0,w,c
 13534  00455E  5A6E               	subwfb	(sqrtf@ix+3)^0,f,c
 13535  004560  5067               	movf	sqrtf@r^0,w,c
 13536  004562  2657               	addwf	sqrtf@q^0,f,c
 13537  004564  5068               	movf	(sqrtf@r+1)^0,w,c
 13538  004566  2258               	addwfc	(sqrtf@q+1)^0,f,c
 13539  004568  5069               	movf	(sqrtf@r+2)^0,w,c
 13540  00456A  2259               	addwfc	(sqrtf@q+2)^0,f,c
 13541  00456C  506A               	movf	(sqrtf@r+3)^0,w,c
 13542  00456E  225A               	addwfc	(sqrtf@q+3)^0,f,c
 13543  004570                     i2l1524:
 13544  004570  506B               	movf	sqrtf@ix^0,w,c
 13545  004572  266B               	addwf	sqrtf@ix^0,f,c
 13546  004574  506C               	movf	(sqrtf@ix+1)^0,w,c
 13547  004576  226C               	addwfc	(sqrtf@ix+1)^0,f,c
 13548  004578  506D               	movf	(sqrtf@ix+2)^0,w,c
 13549  00457A  226D               	addwfc	(sqrtf@ix+2)^0,f,c
 13550  00457C  506E               	movf	(sqrtf@ix+3)^0,w,c
 13551  00457E  226E               	addwfc	(sqrtf@ix+3)^0,f,c
 13552  004580  90D8               	bcf	status,0,c
 13553  004582  326A               	rrcf	(sqrtf@r+3)^0,f,c
 13554  004584  3269               	rrcf	(sqrtf@r+2)^0,f,c
 13555  004586  3268               	rrcf	(sqrtf@r+1)^0,f,c
 13556  004588  3267               	rrcf	sqrtf@r^0,f,c
 13557  00458A                     i2l10233:
 13558  00458A  5067               	movf	sqrtf@r^0,w,c
 13559  00458C  1068               	iorwf	(sqrtf@r+1)^0,w,c
 13560  00458E  1069               	iorwf	(sqrtf@r+2)^0,w,c
 13561  004590  106A               	iorwf	(sqrtf@r+3)^0,w,c
 13562  004592  A4D8               	btfss	status,2,c
 13563  004594  D7B7               	goto	i2l10227
 13564  004596  506B               	movf	sqrtf@ix^0,w,c
 13565  004598  106C               	iorwf	(sqrtf@ix+1)^0,w,c
 13566  00459A  106D               	iorwf	(sqrtf@ix+2)^0,w,c
 13567  00459C  106E               	iorwf	(sqrtf@ix+3)^0,w,c
 13568  00459E  B4D8               	btfsc	status,2,c
 13569  0045A0  D052               	goto	i2l1526
 13570  0045A2  0E00               	movlw	0
 13571  0045A4  6E5F               	movwf	sqrtf@z^0,c
 13572  0045A6  0E00               	movlw	0
 13573  0045A8  6E60               	movwf	(sqrtf@z+1)^0,c
 13574  0045AA  0E80               	movlw	128
 13575  0045AC  6E61               	movwf	(sqrtf@z+2)^0,c
 13576  0045AE  0E3F               	movlw	63
 13577  0045B0  6E62               	movwf	(sqrtf@z+3)^0,c
 13578  0045B2  C05F  F032         	movff	sqrtf@z,___flge@ff1
 13579  0045B6  C060  F033         	movff	sqrtf@z+1,___flge@ff1+1
 13580  0045BA  C061  F034         	movff	sqrtf@z+2,___flge@ff1+2
 13581  0045BE  C062  F035         	movff	sqrtf@z+3,___flge@ff1+3
 13582  0045C2  0E00               	movlw	0
 13583  0045C4  6E36               	movwf	___flge@ff2^0,c
 13584  0045C6  0E00               	movlw	0
 13585  0045C8  6E37               	movwf	(___flge@ff2+1)^0,c
 13586  0045CA  0E80               	movlw	128
 13587  0045CC  6E38               	movwf	(___flge@ff2+2)^0,c
 13588  0045CE  0E3F               	movlw	63
 13589  0045D0  6E39               	movwf	(___flge@ff2+3)^0,c
 13590  0045D2  EC04  F032         	call	___flge	;wreg free
 13591  0045D6  A0D8               	btfss	status,0,c
 13592  0045D8  D036               	goto	i2l1526
 13593  0045DA  0E00               	movlw	0
 13594  0045DC  6E5F               	movwf	sqrtf@z^0,c
 13595  0045DE  0E00               	movlw	0
 13596  0045E0  6E60               	movwf	(sqrtf@z+1)^0,c
 13597  0045E2  0E80               	movlw	128
 13598  0045E4  6E61               	movwf	(sqrtf@z+2)^0,c
 13599  0045E6  0E3F               	movlw	63
 13600  0045E8  6E62               	movwf	(sqrtf@z+3)^0,c
 13601  0045EA  0E00               	movlw	0
 13602  0045EC  6E32               	movwf	___flge@ff1^0,c
 13603  0045EE  0E00               	movlw	0
 13604  0045F0  6E33               	movwf	(___flge@ff1+1)^0,c
 13605  0045F2  0E80               	movlw	128
 13606  0045F4  6E34               	movwf	(___flge@ff1+2)^0,c
 13607  0045F6  0E3F               	movlw	63
 13608  0045F8  6E35               	movwf	(___flge@ff1+3)^0,c
 13609  0045FA  C05F  F036         	movff	sqrtf@z,___flge@ff2
 13610  0045FE  C060  F037         	movff	sqrtf@z+1,___flge@ff2+1
 13611  004602  C061  F038         	movff	sqrtf@z+2,___flge@ff2+2
 13612  004606  C062  F039         	movff	sqrtf@z+3,___flge@ff2+3
 13613  00460A  EC04  F032         	call	___flge	;wreg free
 13614  00460E  B0D8               	btfsc	status,0,c
 13615  004610  D006               	goto	i2l10247
 13616  004612  0E02               	movlw	2
 13617  004614  2657               	addwf	sqrtf@q^0,f,c
 13618  004616  0E00               	movlw	0
 13619  004618  2258               	addwfc	(sqrtf@q+1)^0,f,c
 13620  00461A  2259               	addwfc	(sqrtf@q+2)^0,f,c
 13621  00461C  D013               	goto	L11
 13622  00461E                     i2l10247:
 13623  00461E  0E01               	movlw	1
 13624  004620  1457               	andwf	sqrtf@q^0,w,c
 13625  004622  6E42               	movwf	??_sqrtf^0,c
 13626  004624  0E00               	movlw	0
 13627  004626  1458               	andwf	(sqrtf@q+1)^0,w,c
 13628  004628  6E43               	movwf	(??_sqrtf+1)^0,c
 13629  00462A  0E00               	movlw	0
 13630  00462C  1459               	andwf	(sqrtf@q+2)^0,w,c
 13631  00462E  6E44               	movwf	(??_sqrtf+2)^0,c
 13632  004630  0E00               	movlw	0
 13633  004632  145A               	andwf	(sqrtf@q+3)^0,w,c
 13634  004634  6E45               	movwf	(??_sqrtf+3)^0,c
 13635  004636  5042               	movf	??_sqrtf^0,w,c
 13636  004638  2657               	addwf	sqrtf@q^0,f,c
 13637  00463A  5043               	movf	(??_sqrtf+1)^0,w,c
 13638  00463C  2258               	addwfc	(sqrtf@q+1)^0,f,c
 13639  00463E  5044               	movf	(??_sqrtf+2)^0,w,c
 13640  004640  2259               	addwfc	(sqrtf@q+2)^0,f,c
 13641  004642  5045               	movf	(??_sqrtf+3)^0,w,c
 13642  004644                     L11:
 13643  004644  225A               	addwfc	(sqrtf@q+3)^0,f,c
 13644  004646                     i2l1526:
 13645  004646  C057  F042         	movff	sqrtf@q,??_sqrtf
 13646  00464A  C058  F043         	movff	sqrtf@q+1,??_sqrtf+1
 13647  00464E  C059  F044         	movff	sqrtf@q+2,??_sqrtf+2
 13648  004652  C05A  F045         	movff	sqrtf@q+3,??_sqrtf+3
 13649  004656  3445               	rlcf	(??_sqrtf+3)^0,w,c
 13650  004658  3245               	rrcf	(??_sqrtf+3)^0,f,c
 13651  00465A  3244               	rrcf	(??_sqrtf+2)^0,f,c
 13652  00465C  3243               	rrcf	(??_sqrtf+1)^0,f,c
 13653  00465E  3242               	rrcf	??_sqrtf^0,f,c
 13654  004660  0E00               	movlw	0
 13655  004662  2442               	addwf	??_sqrtf^0,w,c
 13656  004664  6E6B               	movwf	sqrtf@ix^0,c
 13657  004666  0E00               	movlw	0
 13658  004668  2043               	addwfc	(??_sqrtf+1)^0,w,c
 13659  00466A  6E6C               	movwf	(sqrtf@ix+1)^0,c
 13660  00466C  0E00               	movlw	0
 13661  00466E  2044               	addwfc	(??_sqrtf+2)^0,w,c
 13662  004670  6E6D               	movwf	(sqrtf@ix+2)^0,c
 13663  004672  0E3F               	movlw	63
 13664  004674  2045               	addwfc	(??_sqrtf+3)^0,w,c
 13665  004676  6E6E               	movwf	(sqrtf@ix+3)^0,c
 13666  004678  C063  F042         	movff	sqrtf@m,??_sqrtf
 13667  00467C  C064  F043         	movff	sqrtf@m+1,??_sqrtf+1
 13668  004680  C065  F044         	movff	sqrtf@m+2,??_sqrtf+2
 13669  004684  C066  F045         	movff	sqrtf@m+3,??_sqrtf+3
 13670  004688  0E17               	movlw	23
 13671  00468A                     i2u1363_45:
 13672  00468A  90D8               	bcf	status,0,c
 13673  00468C  3642               	rlcf	??_sqrtf^0,f,c
 13674  00468E  3643               	rlcf	(??_sqrtf+1)^0,f,c
 13675  004690  3644               	rlcf	(??_sqrtf+2)^0,f,c
 13676  004692  3645               	rlcf	(??_sqrtf+3)^0,f,c
 13677  004694  2EE8               	decfsz	wreg,f,c
 13678  004696  D7F9               	goto	i2u1363_45
 13679  004698  5042               	movf	??_sqrtf^0,w,c
 13680  00469A  266B               	addwf	sqrtf@ix^0,f,c
 13681  00469C  5043               	movf	(??_sqrtf+1)^0,w,c
 13682  00469E  226C               	addwfc	(sqrtf@ix+1)^0,f,c
 13683  0046A0  5044               	movf	(??_sqrtf+2)^0,w,c
 13684  0046A2  226D               	addwfc	(sqrtf@ix+2)^0,f,c
 13685  0046A4  5045               	movf	(??_sqrtf+3)^0,w,c
 13686  0046A6  226E               	addwfc	(sqrtf@ix+3)^0,f,c
 13687  0046A8  C06B  F053         	movff	sqrtf@ix,sqrtf@__xc8_float_word
 13688  0046AC  C06C  F054         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
 13689  0046B0  C06D  F055         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
 13690  0046B4  C06E  F056         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
 13691  0046B8  C053  F05F         	movff	sqrtf@__xc8_float_word,sqrtf@z
 13692  0046BC  C054  F060         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
 13693  0046C0  C055  F061         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
 13694  0046C4  C056  F062         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
 13695  0046C8  C05F  F03E         	movff	sqrtf@z,?_sqrtf
 13696  0046CC  C060  F03F         	movff	sqrtf@z+1,?_sqrtf+1
 13697  0046D0  C061  F040         	movff	sqrtf@z+2,?_sqrtf+2
 13698  0046D4  C062  F041         	movff	sqrtf@z+3,?_sqrtf+3
 13699  0046D8  0012               	return		;funcret
 13700  0046DA                     __end_of_sqrtf:
 13701                           	opt callstack 0
 13702                           
 13703 ;; *************** function _nanf *****************
 13704 ;; Defined at:
 13705 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nanf.c"
 13706 ;; Parameters:    Size  Location     Type
 13707 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13708 ;;		 -> STR_18(1), 
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;  u               4    4[COMRAM] struct .
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  4    0[COMRAM] float 
 13713 ;; Registers used:
 13714 ;;		wreg, status,2
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13720 ;;      Params:         4       0       0       0       0       0       0
 13721 ;;      Locals:         4       0       0       0       0       0       0
 13722 ;;      Temps:          0       0       0       0       0       0       0
 13723 ;;      Totals:         8       0       0       0       0       0       0
 13724 ;;Total ram usage:        8 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; This function calls:
 13727 ;;		Nothing
 13728 ;; This function is called by:
 13729 ;;		_sqrtf
 13730 ;; This function uses a non-reentrant model
 13731 ;;
 13732                           
 13733                           	psect	text52
 13734  007052                     __ptext52:
 13735                           	opt callstack 0
 13736  007052                     _nanf:
 13737                           	opt callstack 17
 13738                           
 13739                           ;incstack = 0
 13740  007052  0EFF               	movlw	255
 13741  007054  6E05               	movwf	nanf@u^0,c
 13742  007056  0EFF               	movlw	255
 13743  007058  6E06               	movwf	(nanf@u+1)^0,c
 13744  00705A  0EFF               	movlw	255
 13745  00705C  6E07               	movwf	(nanf@u+2)^0,c
 13746  00705E  0E7F               	movlw	127
 13747  007060  6E08               	movwf	(nanf@u+3)^0,c
 13748  007062  C005  F001         	movff	nanf@u,?_nanf
 13749  007066  C006  F002         	movff	nanf@u+1,?_nanf+1
 13750  00706A  C007  F003         	movff	nanf@u+2,?_nanf+2
 13751  00706E  C008  F004         	movff	nanf@u+3,?_nanf+3
 13752  007072  0012               	return		;funcret
 13753  007074                     __end_of_nanf:
 13754                           	opt callstack 0
 13755                           
 13756 ;; *************** function ___flge *****************
 13757 ;; Defined at:
 13758 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 13759 ;; Parameters:    Size  Location     Type
 13760 ;;  ff1             4   49[COMRAM] float 
 13761 ;;  ff2             4   53[COMRAM] float 
 13762 ;; Auto vars:     Size  Location     Type
 13763 ;;		None
 13764 ;; Return value:  Size  Location     Type
 13765 ;;		None               void
 13766 ;; Registers used:
 13767 ;;		wreg, status,2, status,0
 13768 ;; Tracked objects:
 13769 ;;		On entry : 0/0
 13770 ;;		On exit  : 0/0
 13771 ;;		Unchanged: 0/0
 13772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13773 ;;      Params:         8       0       0       0       0       0       0
 13774 ;;      Locals:         0       0       0       0       0       0       0
 13775 ;;      Temps:          4       0       0       0       0       0       0
 13776 ;;      Totals:        12       0       0       0       0       0       0
 13777 ;;Total ram usage:       12 bytes
 13778 ;; Hardware stack levels used:    1
 13779 ;; This function calls:
 13780 ;;		Nothing
 13781 ;; This function is called by:
 13782 ;;		_efgtoa
 13783 ;;		_powf
 13784 ;;		_sqrtf
 13785 ;; This function uses a non-reentrant model
 13786 ;;
 13787                           
 13788                           	psect	text53
 13789  006408                     __ptext53:
 13790                           	opt callstack 0
 13791  006408                     ___flge:
 13792                           	opt callstack 18
 13793                           
 13794                           ;incstack = 0
 13795  006408  0E00               	movlw	0
 13796  00640A  1432               	andwf	___flge@ff1^0,w,c
 13797  00640C  6E3A               	movwf	??___flge^0,c
 13798  00640E  0E00               	movlw	0
 13799  006410  1433               	andwf	(___flge@ff1+1)^0,w,c
 13800  006412  6E3B               	movwf	(??___flge+1)^0,c
 13801  006414  0E80               	movlw	128
 13802  006416  1434               	andwf	(___flge@ff1+2)^0,w,c
 13803  006418  6E3C               	movwf	(??___flge+2)^0,c
 13804  00641A  0E7F               	movlw	127
 13805  00641C  1435               	andwf	(___flge@ff1+3)^0,w,c
 13806  00641E  6E3D               	movwf	(??___flge+3)^0,c
 13807  006420  503A               	movf	??___flge^0,w,c
 13808  006422  103B               	iorwf	(??___flge+1)^0,w,c
 13809  006424  103C               	iorwf	(??___flge+2)^0,w,c
 13810  006426  103D               	iorwf	(??___flge+3)^0,w,c
 13811  006428  A4D8               	btfss	status,2,c
 13812  00642A  D008               	goto	i2l9715
 13813  00642C  0E00               	movlw	0
 13814  00642E  6E32               	movwf	___flge@ff1^0,c
 13815  006430  0E00               	movlw	0
 13816  006432  6E33               	movwf	(___flge@ff1+1)^0,c
 13817  006434  0E00               	movlw	0
 13818  006436  6E34               	movwf	(___flge@ff1+2)^0,c
 13819  006438  0E00               	movlw	0
 13820  00643A  6E35               	movwf	(___flge@ff1+3)^0,c
 13821  00643C                     i2l9715:
 13822  00643C  0E00               	movlw	0
 13823  00643E  1436               	andwf	___flge@ff2^0,w,c
 13824  006440  6E3A               	movwf	??___flge^0,c
 13825  006442  0E00               	movlw	0
 13826  006444  1437               	andwf	(___flge@ff2+1)^0,w,c
 13827  006446  6E3B               	movwf	(??___flge+1)^0,c
 13828  006448  0E80               	movlw	128
 13829  00644A  1438               	andwf	(___flge@ff2+2)^0,w,c
 13830  00644C  6E3C               	movwf	(??___flge+2)^0,c
 13831  00644E  0E7F               	movlw	127
 13832  006450  1439               	andwf	(___flge@ff2+3)^0,w,c
 13833  006452  6E3D               	movwf	(??___flge+3)^0,c
 13834  006454  503A               	movf	??___flge^0,w,c
 13835  006456  103B               	iorwf	(??___flge+1)^0,w,c
 13836  006458  103C               	iorwf	(??___flge+2)^0,w,c
 13837  00645A  103D               	iorwf	(??___flge+3)^0,w,c
 13838  00645C  A4D8               	btfss	status,2,c
 13839  00645E  D008               	goto	i2l9719
 13840  006460  0E00               	movlw	0
 13841  006462  6E36               	movwf	___flge@ff2^0,c
 13842  006464  0E00               	movlw	0
 13843  006466  6E37               	movwf	(___flge@ff2+1)^0,c
 13844  006468  0E00               	movlw	0
 13845  00646A  6E38               	movwf	(___flge@ff2+2)^0,c
 13846  00646C  0E00               	movlw	0
 13847  00646E  6E39               	movwf	(___flge@ff2+3)^0,c
 13848  006470                     i2l9719:
 13849  006470  AE35               	btfss	(___flge@ff1+3)^0,7,c
 13850  006472  D009               	goto	i2l9723
 13851  006474  6C32               	negf	___flge@ff1^0,c
 13852  006476  1E33               	comf	(___flge@ff1+1)^0,f,c
 13853  006478  B0D8               	btfsc	status,0,c
 13854  00647A  2A33               	incf	(___flge@ff1+1)^0,f,c
 13855  00647C  1E34               	comf	(___flge@ff1+2)^0,f,c
 13856  00647E  B0D8               	btfsc	status,0,c
 13857  006480  2A34               	incf	(___flge@ff1+2)^0,f,c
 13858  006482  0E80               	movlw	128
 13859  006484  5635               	subfwb	(___flge@ff1+3)^0,f,c
 13860  006486                     i2l9723:
 13861  006486  AE39               	btfss	(___flge@ff2+3)^0,7,c
 13862  006488  D009               	goto	i2l756
 13863  00648A  6C36               	negf	___flge@ff2^0,c
 13864  00648C  1E37               	comf	(___flge@ff2+1)^0,f,c
 13865  00648E  B0D8               	btfsc	status,0,c
 13866  006490  2A37               	incf	(___flge@ff2+1)^0,f,c
 13867  006492  1E38               	comf	(___flge@ff2+2)^0,f,c
 13868  006494  B0D8               	btfsc	status,0,c
 13869  006496  2A38               	incf	(___flge@ff2+2)^0,f,c
 13870  006498  0E80               	movlw	128
 13871  00649A  5639               	subfwb	(___flge@ff2+3)^0,f,c
 13872  00649C                     i2l756:
 13873  00649C  0E00               	movlw	0
 13874  00649E  1A32               	xorwf	___flge@ff1^0,f,c
 13875  0064A0  0E00               	movlw	0
 13876  0064A2  1A33               	xorwf	(___flge@ff1+1)^0,f,c
 13877  0064A4  0E00               	movlw	0
 13878  0064A6  1A34               	xorwf	(___flge@ff1+2)^0,f,c
 13879  0064A8  0E80               	movlw	128
 13880  0064AA  1A35               	xorwf	(___flge@ff1+3)^0,f,c
 13881  0064AC  0E00               	movlw	0
 13882  0064AE  1A36               	xorwf	___flge@ff2^0,f,c
 13883  0064B0  0E00               	movlw	0
 13884  0064B2  1A37               	xorwf	(___flge@ff2+1)^0,f,c
 13885  0064B4  0E00               	movlw	0
 13886  0064B6  1A38               	xorwf	(___flge@ff2+2)^0,f,c
 13887  0064B8  0E80               	movlw	128
 13888  0064BA  1A39               	xorwf	(___flge@ff2+3)^0,f,c
 13889  0064BC  5036               	movf	___flge@ff2^0,w,c
 13890  0064BE  5C32               	subwf	___flge@ff1^0,w,c
 13891  0064C0  5037               	movf	(___flge@ff2+1)^0,w,c
 13892  0064C2  5833               	subwfb	(___flge@ff1+1)^0,w,c
 13893  0064C4  5038               	movf	(___flge@ff2+2)^0,w,c
 13894  0064C6  5834               	subwfb	(___flge@ff1+2)^0,w,c
 13895  0064C8  5039               	movf	(___flge@ff2+3)^0,w,c
 13896  0064CA  5835               	subwfb	(___flge@ff1+3)^0,w,c
 13897  0064CC  B0D8               	btfsc	status,0,c
 13898  0064CE  D002               	goto	i2l9729
 13899  0064D0  90D8               	bcf	status,0,c
 13900  0064D2  0012               	return	
 13901  0064D4                     i2l9729:
 13902  0064D4  80D8               	bsf	status,0,c
 13903  0064D6  0012               	return		;funcret
 13904  0064D8                     __end_of___flge:
 13905                           	opt callstack 0
 13906                           
 13907 ;; *************** function _scalbnf *****************
 13908 ;; Defined at:
 13909 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\scalbnf.c"
 13910 ;; Parameters:    Size  Location     Type
 13911 ;;  x               4   41[COMRAM] float 
 13912 ;;  n               2   45[COMRAM] int 
 13913 ;; Auto vars:     Size  Location     Type
 13914 ;;  y               4   55[COMRAM] float 
 13915 ;;  u               4   51[COMRAM] struct .
 13916 ;; Return value:  Size  Location     Type
 13917 ;;                  4   41[COMRAM] float 
 13918 ;; Registers used:
 13919 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13920 ;; Tracked objects:
 13921 ;;		On entry : 0/0
 13922 ;;		On exit  : 0/0
 13923 ;;		Unchanged: 0/0
 13924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13925 ;;      Params:         6       0       0       0       0       0       0
 13926 ;;      Locals:         8       0       0       0       0       0       0
 13927 ;;      Temps:          4       0       0       0       0       0       0
 13928 ;;      Totals:        18       0       0       0       0       0       0
 13929 ;;Total ram usage:       18 bytes
 13930 ;; Hardware stack levels used:    1
 13931 ;; Hardware stack levels required when called:    1
 13932 ;; This function calls:
 13933 ;;		___flmul
 13934 ;; This function is called by:
 13935 ;;		_powf
 13936 ;; This function uses a non-reentrant model
 13937 ;;
 13938                           
 13939                           	psect	text54
 13940  005414                     __ptext54:
 13941                           	opt callstack 0
 13942  005414                     _scalbnf:
 13943                           	opt callstack 17
 13944                           
 13945                           ;incstack = 0
 13946  005414  C02A  F038         	movff	scalbnf@x,scalbnf@y
 13947  005418  C02B  F039         	movff	scalbnf@x+1,scalbnf@y+1
 13948  00541C  C02C  F03A         	movff	scalbnf@x+2,scalbnf@y+2
 13949  005420  C02D  F03B         	movff	scalbnf@x+3,scalbnf@y+3
 13950  005424  BE2F               	btfsc	(scalbnf@n+1)^0,7,c
 13951  005426  D056               	goto	i2l10275
 13952  005428  502F               	movf	(scalbnf@n+1)^0,w,c
 13953  00542A  E104               	bnz	i2u1364_40
 13954  00542C  0E80               	movlw	128
 13955  00542E  5C2E               	subwf	scalbnf@n^0,w,c
 13956  005430  A0D8               	btfss	status,0,c
 13957  005432  D050               	goto	i2l10275
 13958  005434                     i2u1364_40:
 13959  005434  C038  F011         	movff	scalbnf@y,___flmul@b
 13960  005438  C039  F012         	movff	scalbnf@y+1,___flmul@b+1
 13961  00543C  C03A  F013         	movff	scalbnf@y+2,___flmul@b+2
 13962  005440  C03B  F014         	movff	scalbnf@y+3,___flmul@b+3
 13963  005444  0E00               	movlw	0
 13964  005446  6E15               	movwf	___flmul@a^0,c
 13965  005448  0E00               	movlw	0
 13966  00544A  6E16               	movwf	(___flmul@a+1)^0,c
 13967  00544C  0E00               	movlw	0
 13968  00544E  6E17               	movwf	(___flmul@a+2)^0,c
 13969  005450  0E7F               	movlw	127
 13970  005452  6E18               	movwf	(___flmul@a+3)^0,c
 13971  005454  EC6D  F023         	call	___flmul	;wreg free
 13972  005458  C011  F038         	movff	?___flmul,scalbnf@y
 13973  00545C  C012  F039         	movff	?___flmul+1,scalbnf@y+1
 13974  005460  C013  F03A         	movff	?___flmul+2,scalbnf@y+2
 13975  005464  C014  F03B         	movff	?___flmul+3,scalbnf@y+3
 13976  005468  0E81               	movlw	129
 13977  00546A  262E               	addwf	scalbnf@n^0,f,c
 13978  00546C  0EFF               	movlw	255
 13979  00546E  222F               	addwfc	(scalbnf@n+1)^0,f,c
 13980  005470  BE2F               	btfsc	(scalbnf@n+1)^0,7,c
 13981  005472  D088               	goto	i2l10291
 13982  005474  502F               	movf	(scalbnf@n+1)^0,w,c
 13983  005476  E104               	bnz	i2u1365_40
 13984  005478  0E80               	movlw	128
 13985  00547A  5C2E               	subwf	scalbnf@n^0,w,c
 13986  00547C  A0D8               	btfss	status,0,c
 13987  00547E  D082               	goto	i2l10291
 13988  005480                     i2u1365_40:
 13989  005480  C038  F011         	movff	scalbnf@y,___flmul@b
 13990  005484  C039  F012         	movff	scalbnf@y+1,___flmul@b+1
 13991  005488  C03A  F013         	movff	scalbnf@y+2,___flmul@b+2
 13992  00548C  C03B  F014         	movff	scalbnf@y+3,___flmul@b+3
 13993  005490  0E00               	movlw	0
 13994  005492  6E15               	movwf	___flmul@a^0,c
 13995  005494  0E00               	movlw	0
 13996  005496  6E16               	movwf	(___flmul@a+1)^0,c
 13997  005498  0E00               	movlw	0
 13998  00549A  6E17               	movwf	(___flmul@a+2)^0,c
 13999  00549C  0E7F               	movlw	127
 14000  00549E  6E18               	movwf	(___flmul@a+3)^0,c
 14001  0054A0  EC6D  F023         	call	___flmul	;wreg free
 14002  0054A4  C011  F038         	movff	?___flmul,scalbnf@y
 14003  0054A8  C012  F039         	movff	?___flmul+1,scalbnf@y+1
 14004  0054AC  C013  F03A         	movff	?___flmul+2,scalbnf@y+2
 14005  0054B0  C014  F03B         	movff	?___flmul+3,scalbnf@y+3
 14006  0054B4  0E81               	movlw	129
 14007  0054B6  262E               	addwf	scalbnf@n^0,f,c
 14008  0054B8  0EFF               	movlw	255
 14009  0054BA  222F               	addwfc	(scalbnf@n+1)^0,f,c
 14010  0054BC  BE2F               	btfsc	(scalbnf@n+1)^0,7,c
 14011  0054BE  D062               	goto	i2l10291
 14012  0054C0  502F               	movf	(scalbnf@n+1)^0,w,c
 14013  0054C2  E104               	bnz	i2u1366_40
 14014  0054C4  0E80               	movlw	128
 14015  0054C6  5C2E               	subwf	scalbnf@n^0,w,c
 14016  0054C8  A0D8               	btfss	status,0,c
 14017  0054CA  D05C               	goto	i2l10291
 14018  0054CC                     i2u1366_40:
 14019  0054CC  0E00               	movlw	0
 14020  0054CE  6E2F               	movwf	(scalbnf@n+1)^0,c
 14021  0054D0  0E7F               	movlw	127
 14022  0054D2  D057               	goto	L12
 14023  0054D4                     i2l10275:
 14024  0054D4  AE2F               	btfss	(scalbnf@n+1)^0,7,c
 14025  0054D6  D056               	goto	i2l10291
 14026  0054D8  0E82               	movlw	130
 14027  0054DA  5C2E               	subwf	scalbnf@n^0,w,c
 14028  0054DC  0EFF               	movlw	255
 14029  0054DE  582F               	subwfb	(scalbnf@n+1)^0,w,c
 14030  0054E0  B0D8               	btfsc	status,0,c
 14031  0054E2  D050               	goto	i2l10291
 14032  0054E4  C038  F011         	movff	scalbnf@y,___flmul@b
 14033  0054E8  C039  F012         	movff	scalbnf@y+1,___flmul@b+1
 14034  0054EC  C03A  F013         	movff	scalbnf@y+2,___flmul@b+2
 14035  0054F0  C03B  F014         	movff	scalbnf@y+3,___flmul@b+3
 14036  0054F4  0E00               	movlw	0
 14037  0054F6  6E15               	movwf	___flmul@a^0,c
 14038  0054F8  0E00               	movlw	0
 14039  0054FA  6E16               	movwf	(___flmul@a+1)^0,c
 14040  0054FC  0E80               	movlw	128
 14041  0054FE  6E17               	movwf	(___flmul@a+2)^0,c
 14042  005500  0E0C               	movlw	12
 14043  005502  6E18               	movwf	(___flmul@a+3)^0,c
 14044  005504  EC6D  F023         	call	___flmul	;wreg free
 14045  005508  C011  F038         	movff	?___flmul,scalbnf@y
 14046  00550C  C012  F039         	movff	?___flmul+1,scalbnf@y+1
 14047  005510  C013  F03A         	movff	?___flmul+2,scalbnf@y+2
 14048  005514  C014  F03B         	movff	?___flmul+3,scalbnf@y+3
 14049  005518  0E66               	movlw	102
 14050  00551A  262E               	addwf	scalbnf@n^0,f,c
 14051  00551C  0E00               	movlw	0
 14052  00551E  222F               	addwfc	(scalbnf@n+1)^0,f,c
 14053  005520  AE2F               	btfss	(scalbnf@n+1)^0,7,c
 14054  005522  D030               	goto	i2l10291
 14055  005524  0E82               	movlw	130
 14056  005526  5C2E               	subwf	scalbnf@n^0,w,c
 14057  005528  0EFF               	movlw	255
 14058  00552A  582F               	subwfb	(scalbnf@n+1)^0,w,c
 14059  00552C  B0D8               	btfsc	status,0,c
 14060  00552E  D02A               	goto	i2l10291
 14061  005530  C038  F011         	movff	scalbnf@y,___flmul@b
 14062  005534  C039  F012         	movff	scalbnf@y+1,___flmul@b+1
 14063  005538  C03A  F013         	movff	scalbnf@y+2,___flmul@b+2
 14064  00553C  C03B  F014         	movff	scalbnf@y+3,___flmul@b+3
 14065  005540  0E00               	movlw	0
 14066  005542  6E15               	movwf	___flmul@a^0,c
 14067  005544  0E00               	movlw	0
 14068  005546  6E16               	movwf	(___flmul@a+1)^0,c
 14069  005548  0E80               	movlw	128
 14070  00554A  6E17               	movwf	(___flmul@a+2)^0,c
 14071  00554C  0E0C               	movlw	12
 14072  00554E  6E18               	movwf	(___flmul@a+3)^0,c
 14073  005550  EC6D  F023         	call	___flmul	;wreg free
 14074  005554  C011  F038         	movff	?___flmul,scalbnf@y
 14075  005558  C012  F039         	movff	?___flmul+1,scalbnf@y+1
 14076  00555C  C013  F03A         	movff	?___flmul+2,scalbnf@y+2
 14077  005560  C014  F03B         	movff	?___flmul+3,scalbnf@y+3
 14078  005564  0E66               	movlw	102
 14079  005566  262E               	addwf	scalbnf@n^0,f,c
 14080  005568  0E00               	movlw	0
 14081  00556A  222F               	addwfc	(scalbnf@n+1)^0,f,c
 14082  00556C  AE2F               	btfss	(scalbnf@n+1)^0,7,c
 14083  00556E  D00A               	goto	i2l10291
 14084  005570  0E82               	movlw	130
 14085  005572  5C2E               	subwf	scalbnf@n^0,w,c
 14086  005574  0EFF               	movlw	255
 14087  005576  582F               	subwfb	(scalbnf@n+1)^0,w,c
 14088  005578  B0D8               	btfsc	status,0,c
 14089  00557A  D004               	goto	i2l10291
 14090  00557C  0EFF               	movlw	255
 14091  00557E  6E2F               	movwf	(scalbnf@n+1)^0,c
 14092  005580  0E82               	movlw	130
 14093  005582                     L12:
 14094  005582  6E2E               	movwf	scalbnf@n^0,c
 14095  005584                     i2l10291:
 14096  005584  0E7F               	movlw	127
 14097  005586  242E               	addwf	scalbnf@n^0,w,c
 14098  005588  6E30               	movwf	??_scalbnf^0,c
 14099  00558A  0E00               	movlw	0
 14100  00558C  202F               	addwfc	(scalbnf@n+1)^0,w,c
 14101  00558E  6E31               	movwf	(??_scalbnf+1)^0,c
 14102  005590  6A32               	clrf	(??_scalbnf+2)^0,c
 14103  005592  6A33               	clrf	(??_scalbnf+3)^0,c
 14104  005594  0E17               	movlw	23
 14105  005596                     i2u1370_45:
 14106  005596  90D8               	bcf	status,0,c
 14107  005598  3630               	rlcf	??_scalbnf^0,f,c
 14108  00559A  3631               	rlcf	(??_scalbnf+1)^0,f,c
 14109  00559C  3632               	rlcf	(??_scalbnf+2)^0,f,c
 14110  00559E  3633               	rlcf	(??_scalbnf+3)^0,f,c
 14111  0055A0  2EE8               	decfsz	wreg,f,c
 14112  0055A2  D7F9               	goto	i2u1370_45
 14113  0055A4  C030  F034         	movff	??_scalbnf,scalbnf@u
 14114  0055A8  C031  F035         	movff	??_scalbnf+1,scalbnf@u+1
 14115  0055AC  C032  F036         	movff	??_scalbnf+2,scalbnf@u+2
 14116  0055B0  C033  F037         	movff	??_scalbnf+3,scalbnf@u+3
 14117  0055B4  C034  F011         	movff	scalbnf@u,___flmul@b
 14118  0055B8  C035  F012         	movff	scalbnf@u+1,___flmul@b+1
 14119  0055BC  C036  F013         	movff	scalbnf@u+2,___flmul@b+2
 14120  0055C0  C037  F014         	movff	scalbnf@u+3,___flmul@b+3
 14121  0055C4  C038  F015         	movff	scalbnf@y,___flmul@a
 14122  0055C8  C039  F016         	movff	scalbnf@y+1,___flmul@a+1
 14123  0055CC  C03A  F017         	movff	scalbnf@y+2,___flmul@a+2
 14124  0055D0  C03B  F018         	movff	scalbnf@y+3,___flmul@a+3
 14125  0055D4  EC6D  F023         	call	___flmul	;wreg free
 14126  0055D8  C011  F02A         	movff	?___flmul,scalbnf@x
 14127  0055DC  C012  F02B         	movff	?___flmul+1,scalbnf@x+1
 14128  0055E0  C013  F02C         	movff	?___flmul+2,scalbnf@x+2
 14129  0055E4  C014  F02D         	movff	?___flmul+3,scalbnf@x+3
 14130  0055E8  C02A  F02A         	movff	scalbnf@x,?_scalbnf
 14131  0055EC  C02B  F02B         	movff	scalbnf@x+1,?_scalbnf+1
 14132  0055F0  C02C  F02C         	movff	scalbnf@x+2,?_scalbnf+2
 14133  0055F4  C02D  F02D         	movff	scalbnf@x+3,?_scalbnf+3
 14134  0055F8  0012               	return		;funcret
 14135  0055FA                     __end_of_scalbnf:
 14136                           	opt callstack 0
 14137                           
 14138 ;; *************** function _fabsf *****************
 14139 ;; Defined at:
 14140 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fabsf.c"
 14141 ;; Parameters:    Size  Location     Type
 14142 ;;  x               4    0[COMRAM] float 
 14143 ;; Auto vars:     Size  Location     Type
 14144 ;;  u               4    4[COMRAM] struct .
 14145 ;; Return value:  Size  Location     Type
 14146 ;;                  4    0[COMRAM] float 
 14147 ;; Registers used:
 14148 ;;		status,2, status,0
 14149 ;; Tracked objects:
 14150 ;;		On entry : 0/0
 14151 ;;		On exit  : 0/0
 14152 ;;		Unchanged: 0/0
 14153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14154 ;;      Params:         4       0       0       0       0       0       0
 14155 ;;      Locals:         4       0       0       0       0       0       0
 14156 ;;      Temps:          0       0       0       0       0       0       0
 14157 ;;      Totals:         8       0       0       0       0       0       0
 14158 ;;Total ram usage:        8 bytes
 14159 ;; Hardware stack levels used:    1
 14160 ;; This function calls:
 14161 ;;		Nothing
 14162 ;; This function is called by:
 14163 ;;		_powf
 14164 ;; This function uses a non-reentrant model
 14165 ;;
 14166                           
 14167                           	psect	text55
 14168  006E52                     __ptext55:
 14169                           	opt callstack 0
 14170  006E52                     _fabsf:
 14171                           	opt callstack 18
 14172                           
 14173                           ;incstack = 0
 14174  006E52  C200  F005         	movff	fabsf@F463,fabsf@u
 14175  006E56  C201  F006         	movff	fabsf@F463+1,fabsf@u+1
 14176  006E5A  C202  F007         	movff	fabsf@F463+2,fabsf@u+2
 14177  006E5E  C203  F008         	movff	fabsf@F463+3,fabsf@u+3
 14178  006E62  C001  F005         	movff	fabsf@x,fabsf@u
 14179  006E66  C002  F006         	movff	fabsf@x+1,fabsf@u+1
 14180  006E6A  C003  F007         	movff	fabsf@x+2,fabsf@u+2
 14181  006E6E  C004  F008         	movff	fabsf@x+3,fabsf@u+3
 14182  006E72  9E08               	bcf	(fabsf@u+3)^0,7,c
 14183  006E74  C005  F001         	movff	fabsf@u,?_fabsf
 14184  006E78  C006  F002         	movff	fabsf@u+1,?_fabsf+1
 14185  006E7C  C007  F003         	movff	fabsf@u+2,?_fabsf+2
 14186  006E80  C008  F004         	movff	fabsf@u+3,?_fabsf+3
 14187  006E84  0012               	return		;funcret
 14188  006E86                     __end_of_fabsf:
 14189                           	opt callstack 0
 14190                           
 14191 ;; *************** function ___flneg *****************
 14192 ;; Defined at:
 14193 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 14194 ;; Parameters:    Size  Location     Type
 14195 ;;  f1              4    0[COMRAM] float 
 14196 ;; Auto vars:     Size  Location     Type
 14197 ;;		None
 14198 ;; Return value:  Size  Location     Type
 14199 ;;                  4    0[COMRAM] float 
 14200 ;; Registers used:
 14201 ;;		wreg, status,2, status,0
 14202 ;; Tracked objects:
 14203 ;;		On entry : 0/0
 14204 ;;		On exit  : 0/0
 14205 ;;		Unchanged: 0/0
 14206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14207 ;;      Params:         4       0       0       0       0       0       0
 14208 ;;      Locals:         0       0       0       0       0       0       0
 14209 ;;      Temps:          0       0       0       0       0       0       0
 14210 ;;      Totals:         4       0       0       0       0       0       0
 14211 ;;Total ram usage:        4 bytes
 14212 ;; Hardware stack levels used:    1
 14213 ;; This function calls:
 14214 ;;		Nothing
 14215 ;; This function is called by:
 14216 ;;		_efgtoa
 14217 ;;		_powf
 14218 ;; This function uses a non-reentrant model
 14219 ;;
 14220                           
 14221                           	psect	text56
 14222  006FA6                     __ptext56:
 14223                           	opt callstack 0
 14224  006FA6                     ___flneg:
 14225                           	opt callstack 18
 14226                           
 14227                           ;incstack = 0
 14228  006FA6  5001               	movf	___flneg@f1^0,w,c
 14229  006FA8  1002               	iorwf	(___flneg@f1+1)^0,w,c
 14230  006FAA  1003               	iorwf	(___flneg@f1+2)^0,w,c
 14231  006FAC  1004               	iorwf	(___flneg@f1+3)^0,w,c
 14232  006FAE  B4D8               	btfsc	status,2,c
 14233  006FB0  D008               	goto	i2l10121
 14234  006FB2  0E00               	movlw	0
 14235  006FB4  1A01               	xorwf	___flneg@f1^0,f,c
 14236  006FB6  0E00               	movlw	0
 14237  006FB8  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 14238  006FBA  0E00               	movlw	0
 14239  006FBC  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 14240  006FBE  0E80               	movlw	128
 14241  006FC0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 14242  006FC2                     i2l10121:
 14243  006FC2  C001  F001         	movff	___flneg@f1,?___flneg
 14244  006FC6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 14245  006FCA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 14246  006FCE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 14247  006FD2  0012               	return		;funcret
 14248  006FD4                     __end_of___flneg:
 14249                           	opt callstack 0
 14250                           
 14251 ;; *************** function _logf *****************
 14252 ;; Defined at:
 14253 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\logf.c"
 14254 ;; Parameters:    Size  Location     Type
 14255 ;;  x               4   74[COMRAM] float 
 14256 ;; Auto vars:     Size  Location     Type
 14257 ;;  ix              4   62[BANK0 ] unsigned long 
 14258 ;;  f               4   58[BANK0 ] float 
 14259 ;;  u               4   54[BANK0 ] struct .
 14260 ;;  w               4   46[BANK0 ] float 
 14261 ;;  z               4   42[BANK0 ] float 
 14262 ;;  s               4   38[BANK0 ] float 
 14263 ;;  dk              4   34[BANK0 ] float 
 14264 ;;  hfsq            4   30[BANK0 ] float 
 14265 ;;  t2              4    8[BANK0 ] float 
 14266 ;;  t1              4    4[BANK0 ] float 
 14267 ;;  R               4    0[BANK0 ] float 
 14268 ;;  k               2   28[BANK0 ] int 
 14269 ;; Return value:  Size  Location     Type
 14270 ;;                  4   74[COMRAM] float 
 14271 ;; Registers used:
 14272 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14273 ;; Tracked objects:
 14274 ;;		On entry : 0/0
 14275 ;;		On exit  : 0/0
 14276 ;;		Unchanged: 0/0
 14277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14278 ;;      Params:         4       0       0       0       0       0       0
 14279 ;;      Locals:         0      66       0       0       0       0       0
 14280 ;;      Temps:          6       0       0       0       0       0       0
 14281 ;;      Totals:        10      66       0       0       0       0       0
 14282 ;;Total ram usage:       76 bytes
 14283 ;; Hardware stack levels used:    1
 14284 ;; Hardware stack levels required when called:    2
 14285 ;; This function calls:
 14286 ;;		___fladd
 14287 ;;		___fldiv
 14288 ;;		___flmul
 14289 ;;		___flsub
 14290 ;;		___xxtofl
 14291 ;; This function is called by:
 14292 ;;		_MQGetPercentage
 14293 ;; This function uses a non-reentrant model
 14294 ;;
 14295                           
 14296                           	psect	text57
 14297  0036F0                     __ptext57:
 14298                           	opt callstack 0
 14299  0036F0                     _logf:
 14300                           	opt callstack 17
 14301                           
 14302                           ;incstack = 0
 14303  0036F0  C204  F0B6         	movff	logf@F469,logf@u
 14304  0036F4  C205  F0B7         	movff	logf@F469+1,logf@u+1
 14305  0036F8  C206  F0B8         	movff	logf@F469+2,logf@u+2
 14306  0036FC  C207  F0B9         	movff	logf@F469+3,logf@u+3
 14307  003700  C04B  F0B6         	movff	logf@x,logf@u
 14308  003704  C04C  F0B7         	movff	logf@x+1,logf@u+1
 14309  003708  C04D  F0B8         	movff	logf@x+2,logf@u+2
 14310  00370C  C04E  F0B9         	movff	logf@x+3,logf@u+3
 14311  003710  C0B6  F0BE         	movff	logf@u,logf@ix
 14312  003714  C0B7  F0BF         	movff	logf@u+1,logf@ix+1
 14313  003718  C0B8  F0C0         	movff	logf@u+2,logf@ix+2
 14314  00371C  C0B9  F0C1         	movff	logf@u+3,logf@ix+3
 14315  003720  0E00               	movlw	0
 14316  003722  0100               	movlb	0	; () banked
 14317  003724  6F9D               	movwf	(logf@k+1)& (0+255),b
 14318  003726  0E00               	movlw	0
 14319  003728  6F9C               	movwf	logf@k& (0+255),b
 14320                           
 14321                           ; BSR set to: 0
 14322  00372A  51C1               	movf	(logf@ix+3)& (0+255),w,b
 14323  00372C  E104               	bnz	i2u1377_40
 14324  00372E  0E80               	movlw	128
 14325  003730  5DC0               	subwf	(logf@ix+2)& (0+255),w,b
 14326  003732  A0D8               	btfss	status,0,c
 14327  003734  D017               	goto	i2u1379_40
 14328  003736                     i2u1377_40:
 14329                           
 14330                           ; BSR set to: 0
 14331  003736  C0BE  F04F         	movff	logf@ix,??_logf
 14332  00373A  C0BF  F050         	movff	logf@ix+1,??_logf+1
 14333  00373E  C0C0  F051         	movff	logf@ix+2,??_logf+2
 14334  003742  C0C1  F052         	movff	logf@ix+3,??_logf+3
 14335  003746  0E20               	movlw	32
 14336  003748  D005               	goto	i2u1378_40
 14337  00374A                     i2u1378_45:
 14338  00374A  90D8               	bcf	status,0,c
 14339  00374C  3252               	rrcf	(??_logf+3)^0,f,c
 14340  00374E  3251               	rrcf	(??_logf+2)^0,f,c
 14341  003750  3250               	rrcf	(??_logf+1)^0,f,c
 14342  003752  324F               	rrcf	??_logf^0,f,c
 14343  003754                     i2u1378_40:
 14344  003754  2EE8               	decfsz	wreg,f,c
 14345  003756  D7F9               	goto	i2u1378_45
 14346  003758  504F               	movf	??_logf^0,w,c
 14347  00375A  1050               	iorwf	(??_logf+1)^0,w,c
 14348  00375C  1051               	iorwf	(??_logf+2)^0,w,c
 14349  00375E  1052               	iorwf	(??_logf+3)^0,w,c
 14350  003760  B4D8               	btfsc	status,2,c
 14351  003762  D0AF               	goto	i2l10363
 14352  003764                     i2u1379_40:
 14353                           
 14354                           ; BSR set to: 0
 14355  003764  90D8               	bcf	status,0,c
 14356  003766  35BE               	rlcf	logf@ix& (0+255),w,b
 14357  003768  6E4F               	movwf	??_logf^0,c
 14358  00376A  35BF               	rlcf	(logf@ix+1)& (0+255),w,b
 14359  00376C  6E50               	movwf	(??_logf+1)^0,c
 14360  00376E  35C0               	rlcf	(logf@ix+2)& (0+255),w,b
 14361  003770  6E51               	movwf	(??_logf+2)^0,c
 14362  003772  35C1               	rlcf	(logf@ix+3)& (0+255),w,b
 14363  003774  6E52               	movwf	(??_logf+3)^0,c
 14364  003776  504F               	movf	??_logf^0,w,c
 14365  003778  1050               	iorwf	(??_logf+1)^0,w,c
 14366  00377A  1051               	iorwf	(??_logf+2)^0,w,c
 14367  00377C  1052               	iorwf	(??_logf+3)^0,w,c
 14368  00377E  A4D8               	btfss	status,2,c
 14369  003780  D02D               	goto	i2l10349
 14370                           
 14371                           ; BSR set to: 0
 14372  003782  0E00               	movlw	0
 14373  003784  6E32               	movwf	___fldiv@b^0,c
 14374  003786  0E00               	movlw	0
 14375  003788  6E33               	movwf	(___fldiv@b+1)^0,c
 14376  00378A  0E80               	movlw	128
 14377  00378C  6E34               	movwf	(___fldiv@b+2)^0,c
 14378  00378E  0EBF               	movlw	191
 14379  003790  6E35               	movwf	(___fldiv@b+3)^0,c
 14380  003792  C04B  F015         	movff	logf@x,___flmul@a
 14381  003796  C04C  F016         	movff	logf@x+1,___flmul@a+1
 14382  00379A  C04D  F017         	movff	logf@x+2,___flmul@a+2
 14383  00379E  C04E  F018         	movff	logf@x+3,___flmul@a+3
 14384  0037A2  C04B  F011         	movff	logf@x,___flmul@b
 14385  0037A6  C04C  F012         	movff	logf@x+1,___flmul@b+1
 14386  0037AA  C04D  F013         	movff	logf@x+2,___flmul@b+2
 14387  0037AE  C04E  F014         	movff	logf@x+3,___flmul@b+3
 14388  0037B2  EC6D  F023         	call	___flmul	;wreg free
 14389  0037B6  C011  F036         	movff	?___flmul,___fldiv@a
 14390  0037BA  C012  F037         	movff	?___flmul+1,___fldiv@a+1
 14391  0037BE  C013  F038         	movff	?___flmul+2,___fldiv@a+2
 14392  0037C2  C014  F039         	movff	?___flmul+3,___fldiv@a+3
 14393  0037C6  EC9C  F026         	call	___fldiv	;wreg free
 14394  0037CA  C032  F04B         	movff	?___fldiv,?_logf
 14395  0037CE  C033  F04C         	movff	?___fldiv+1,?_logf+1
 14396  0037D2  C034  F04D         	movff	?___fldiv+2,?_logf+2
 14397  0037D6  C035  F04E         	movff	?___fldiv+3,?_logf+3
 14398  0037DA  0012               	return	
 14399  0037DC                     i2l10349:
 14400                           
 14401                           ; BSR set to: 0
 14402  0037DC  C0BE  F04F         	movff	logf@ix,??_logf
 14403  0037E0  C0BF  F050         	movff	logf@ix+1,??_logf+1
 14404  0037E4  C0C0  F051         	movff	logf@ix+2,??_logf+2
 14405  0037E8  C0C1  F052         	movff	logf@ix+3,??_logf+3
 14406  0037EC  0E20               	movlw	32
 14407  0037EE  D005               	goto	i2u1381_40
 14408  0037F0                     i2u1381_45:
 14409  0037F0  90D8               	bcf	status,0,c
 14410  0037F2  3252               	rrcf	(??_logf+3)^0,f,c
 14411  0037F4  3251               	rrcf	(??_logf+2)^0,f,c
 14412  0037F6  3250               	rrcf	(??_logf+1)^0,f,c
 14413  0037F8  324F               	rrcf	??_logf^0,f,c
 14414  0037FA                     i2u1381_40:
 14415  0037FA  2EE8               	decfsz	wreg,f,c
 14416  0037FC  D7F9               	goto	i2u1381_45
 14417  0037FE  504F               	movf	??_logf^0,w,c
 14418  003800  1050               	iorwf	(??_logf+1)^0,w,c
 14419  003802  1051               	iorwf	(??_logf+2)^0,w,c
 14420  003804  1052               	iorwf	(??_logf+3)^0,w,c
 14421  003806  B4D8               	btfsc	status,2,c
 14422  003808  D02D               	goto	i2l10355
 14423                           
 14424                           ; BSR set to: 0
 14425  00380A  C04B  F02E         	movff	logf@x,___flsub@a
 14426  00380E  C04C  F02F         	movff	logf@x+1,___flsub@a+1
 14427  003812  C04D  F030         	movff	logf@x+2,___flsub@a+2
 14428  003816  C04E  F031         	movff	logf@x+3,___flsub@a+3
 14429  00381A  C04B  F02A         	movff	logf@x,___flsub@b
 14430  00381E  C04C  F02B         	movff	logf@x+1,___flsub@b+1
 14431  003822  C04D  F02C         	movff	logf@x+2,___flsub@b+2
 14432  003826  C04E  F02D         	movff	logf@x+3,___flsub@b+3
 14433  00382A  ECAE  F036         	call	___flsub	;wreg free
 14434  00382E  C02A  F032         	movff	?___flsub,___fldiv@b
 14435  003832  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 14436  003836  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 14437  00383A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 14438  00383E  0E00               	movlw	0
 14439  003840  6E36               	movwf	___fldiv@a^0,c
 14440  003842  0E00               	movlw	0
 14441  003844  6E37               	movwf	(___fldiv@a+1)^0,c
 14442  003846  0E00               	movlw	0
 14443  003848  6E38               	movwf	(___fldiv@a+2)^0,c
 14444  00384A  0E00               	movlw	0
 14445  00384C  6E39               	movwf	(___fldiv@a+3)^0,c
 14446  00384E  EC9C  F026         	call	___fldiv	;wreg free
 14447  003852  C032  F04B         	movff	?___fldiv,?_logf
 14448  003856  C033  F04C         	movff	?___fldiv+1,?_logf+1
 14449  00385A  C034  F04D         	movff	?___fldiv+2,?_logf+2
 14450  00385E  C035  F04E         	movff	?___fldiv+3,?_logf+3
 14451  003862  0012               	return	
 14452  003864                     i2l10355:
 14453                           
 14454                           ; BSR set to: 0
 14455  003864  0EE7               	movlw	231
 14456  003866  279C               	addwf	logf@k& (0+255),f,b
 14457  003868  0EFF               	movlw	255
 14458  00386A  239D               	addwfc	(logf@k+1)& (0+255),f,b
 14459                           
 14460                           ; BSR set to: 0
 14461  00386C  C04B  F011         	movff	logf@x,___flmul@b
 14462  003870  C04C  F012         	movff	logf@x+1,___flmul@b+1
 14463  003874  C04D  F013         	movff	logf@x+2,___flmul@b+2
 14464  003878  C04E  F014         	movff	logf@x+3,___flmul@b+3
 14465  00387C  0E00               	movlw	0
 14466  00387E  6E15               	movwf	___flmul@a^0,c
 14467  003880  0E00               	movlw	0
 14468  003882  6E16               	movwf	(___flmul@a+1)^0,c
 14469  003884  0E00               	movlw	0
 14470  003886  6E17               	movwf	(___flmul@a+2)^0,c
 14471  003888  0E4C               	movlw	76
 14472  00388A  6E18               	movwf	(___flmul@a+3)^0,c
 14473  00388C  EC6D  F023         	call	___flmul	;wreg free
 14474  003890  C011  F04B         	movff	?___flmul,logf@x
 14475  003894  C012  F04C         	movff	?___flmul+1,logf@x+1
 14476  003898  C013  F04D         	movff	?___flmul+2,logf@x+2
 14477  00389C  C014  F04E         	movff	?___flmul+3,logf@x+3
 14478  0038A0  C04B  F0B6         	movff	logf@x,logf@u
 14479  0038A4  C04C  F0B7         	movff	logf@x+1,logf@u+1
 14480  0038A8  C04D  F0B8         	movff	logf@x+2,logf@u+2
 14481  0038AC  C04E  F0B9         	movff	logf@x+3,logf@u+3
 14482  0038B0  C0B6  F0BE         	movff	logf@u,logf@ix
 14483  0038B4  C0B7  F0BF         	movff	logf@u+1,logf@ix+1
 14484  0038B8  C0B8  F0C0         	movff	logf@u+2,logf@ix+2
 14485  0038BC  C0B9  F0C1         	movff	logf@u+3,logf@ix+3
 14486  0038C0  D021               	goto	i2l10375
 14487  0038C2                     i2l10363:
 14488                           
 14489                           ; BSR set to: 0
 14490  0038C2  0E80               	movlw	128
 14491  0038C4  5DC0               	subwf	(logf@ix+2)& (0+255),w,b
 14492  0038C6  0E7F               	movlw	127
 14493  0038C8  59C1               	subwfb	(logf@ix+3)& (0+255),w,b
 14494  0038CA  A0D8               	btfss	status,0,c
 14495  0038CC  D009               	goto	i2l10369
 14496                           
 14497                           ; BSR set to: 0
 14498  0038CE  C04B  F04B         	movff	logf@x,?_logf
 14499  0038D2  C04C  F04C         	movff	logf@x+1,?_logf+1
 14500  0038D6  C04D  F04D         	movff	logf@x+2,?_logf+2
 14501  0038DA  C04E  F04E         	movff	logf@x+3,?_logf+3
 14502  0038DE  0012               	return	
 14503  0038E0                     i2l10369:
 14504                           
 14505                           ; BSR set to: 0
 14506  0038E0  0E80               	movlw	128
 14507  0038E2  19C0               	xorwf	(logf@ix+2)& (0+255),w,b
 14508  0038E4  E10F               	bnz	i2l10375
 14509  0038E6  0E3F               	movlw	63
 14510  0038E8  19C1               	xorwf	(logf@ix+3)& (0+255),w,b
 14511  0038EA  11BE               	iorwf	logf@ix& (0+255),w,b
 14512  0038EC  11BF               	iorwf	(logf@ix+1)& (0+255),w,b
 14513  0038EE  A4D8               	btfss	status,2,c
 14514  0038F0  D009               	goto	i2l10375
 14515                           
 14516                           ; BSR set to: 0
 14517  0038F2  0E00               	movlw	0
 14518  0038F4  6E4B               	movwf	?_logf^0,c
 14519  0038F6  0E00               	movlw	0
 14520  0038F8  6E4C               	movwf	(?_logf+1)^0,c
 14521  0038FA  0E00               	movlw	0
 14522  0038FC  6E4D               	movwf	(?_logf+2)^0,c
 14523  0038FE  0E00               	movlw	0
 14524  003900  6E4E               	movwf	(?_logf+3)^0,c
 14525  003902  0012               	return	
 14526  003904                     i2l10375:
 14527  003904  0E0D               	movlw	13
 14528  003906  0100               	movlb	0	; () banked
 14529  003908  27BE               	addwf	logf@ix& (0+255),f,b
 14530  00390A  0EFB               	movlw	251
 14531  00390C  23BF               	addwfc	(logf@ix+1)& (0+255),f,b
 14532  00390E  0E4A               	movlw	74
 14533  003910  23C0               	addwfc	(logf@ix+2)& (0+255),f,b
 14534  003912  0E00               	movlw	0
 14535  003914  23C1               	addwfc	(logf@ix+3)& (0+255),f,b
 14536  003916  0E81               	movlw	129
 14537  003918  6E4F               	movwf	??_logf^0,c
 14538  00391A  0EFF               	movlw	255
 14539  00391C  6E50               	movwf	(??_logf+1)^0,c
 14540  00391E  C0BE  F051         	movff	logf@ix,??_logf+2
 14541  003922  C0BF  F052         	movff	logf@ix+1,??_logf+3
 14542  003926  C0C0  F053         	movff	logf@ix+2,??_logf+4
 14543  00392A  C0C1  F054         	movff	logf@ix+3,??_logf+5
 14544  00392E  0E18               	movlw	24
 14545  003930  D005               	goto	i2u1385_40
 14546  003932                     i2u1385_45:
 14547  003932  90D8               	bcf	status,0,c
 14548  003934  3254               	rrcf	(??_logf+5)^0,f,c
 14549  003936  3253               	rrcf	(??_logf+4)^0,f,c
 14550  003938  3252               	rrcf	(??_logf+3)^0,f,c
 14551  00393A  3251               	rrcf	(??_logf+2)^0,f,c
 14552  00393C                     i2u1385_40:
 14553  00393C  2EE8               	decfsz	wreg,f,c
 14554  00393E  D7F9               	goto	i2u1385_45
 14555  003940  504F               	movf	??_logf^0,w,c
 14556  003942  2651               	addwf	(??_logf+2)^0,f,c
 14557  003944  5050               	movf	(??_logf+1)^0,w,c
 14558  003946  2252               	addwfc	(??_logf+3)^0,f,c
 14559  003948  5051               	movf	(??_logf+2)^0,w,c
 14560  00394A  279C               	addwf	logf@k& (0+255),f,b
 14561  00394C  5052               	movf	(??_logf+3)^0,w,c
 14562  00394E  239D               	addwfc	(logf@k+1)& (0+255),f,b
 14563  003950  0EFF               	movlw	255
 14564  003952  15BE               	andwf	logf@ix& (0+255),w,b
 14565  003954  6E4F               	movwf	??_logf^0,c
 14566  003956  0EFF               	movlw	255
 14567  003958  15BF               	andwf	(logf@ix+1)& (0+255),w,b
 14568  00395A  6E50               	movwf	(??_logf+1)^0,c
 14569  00395C  0E7F               	movlw	127
 14570  00395E  15C0               	andwf	(logf@ix+2)& (0+255),w,b
 14571  003960  6E51               	movwf	(??_logf+2)^0,c
 14572  003962  0E00               	movlw	0
 14573  003964  15C1               	andwf	(logf@ix+3)& (0+255),w,b
 14574  003966  6E52               	movwf	(??_logf+3)^0,c
 14575  003968  0EF3               	movlw	243
 14576  00396A  244F               	addwf	??_logf^0,w,c
 14577  00396C  6FBE               	movwf	logf@ix& (0+255),b
 14578  00396E  0E04               	movlw	4
 14579  003970  2050               	addwfc	(??_logf+1)^0,w,c
 14580  003972  6FBF               	movwf	(logf@ix+1)& (0+255),b
 14581  003974  0E35               	movlw	53
 14582  003976  2051               	addwfc	(??_logf+2)^0,w,c
 14583  003978  6FC0               	movwf	(logf@ix+2)& (0+255),b
 14584  00397A  0E3F               	movlw	63
 14585  00397C  2052               	addwfc	(??_logf+3)^0,w,c
 14586  00397E  6FC1               	movwf	(logf@ix+3)& (0+255),b
 14587                           
 14588                           ; BSR set to: 0
 14589  003980  C0BE  F0B6         	movff	logf@ix,logf@u
 14590  003984  C0BF  F0B7         	movff	logf@ix+1,logf@u+1
 14591  003988  C0C0  F0B8         	movff	logf@ix+2,logf@u+2
 14592  00398C  C0C1  F0B9         	movff	logf@ix+3,logf@u+3
 14593                           
 14594                           ; BSR set to: 0
 14595  003990  C0B6  F04B         	movff	logf@u,logf@x
 14596  003994  C0B7  F04C         	movff	logf@u+1,logf@x+1
 14597  003998  C0B8  F04D         	movff	logf@u+2,logf@x+2
 14598  00399C  C0B9  F04E         	movff	logf@u+3,logf@x+3
 14599                           
 14600                           ; BSR set to: 0
 14601  0039A0  C04B  F001         	movff	logf@x,___fladd@b
 14602  0039A4  C04C  F002         	movff	logf@x+1,___fladd@b+1
 14603  0039A8  C04D  F003         	movff	logf@x+2,___fladd@b+2
 14604  0039AC  C04E  F004         	movff	logf@x+3,___fladd@b+3
 14605  0039B0  0E00               	movlw	0
 14606  0039B2  6E05               	movwf	___fladd@a^0,c
 14607  0039B4  0E00               	movlw	0
 14608  0039B6  6E06               	movwf	(___fladd@a+1)^0,c
 14609  0039B8  0E80               	movlw	128
 14610  0039BA  6E07               	movwf	(___fladd@a+2)^0,c
 14611  0039BC  0EBF               	movlw	191
 14612  0039BE  6E08               	movwf	(___fladd@a+3)^0,c
 14613  0039C0  EC16  F025         	call	___fladd	;wreg free
 14614  0039C4  C001  F0BA         	movff	?___fladd,logf@f
 14615  0039C8  C002  F0BB         	movff	?___fladd+1,logf@f+1
 14616  0039CC  C003  F0BC         	movff	?___fladd+2,logf@f+2
 14617  0039D0  C004  F0BD         	movff	?___fladd+3,logf@f+3
 14618  0039D4  C0BA  F032         	movff	logf@f,___fldiv@b
 14619  0039D8  C0BB  F033         	movff	logf@f+1,___fldiv@b+1
 14620  0039DC  C0BC  F034         	movff	logf@f+2,___fldiv@b+2
 14621  0039E0  C0BD  F035         	movff	logf@f+3,___fldiv@b+3
 14622  0039E4  0E00               	movlw	0
 14623  0039E6  6E05               	movwf	___fladd@a^0,c
 14624  0039E8  0E00               	movlw	0
 14625  0039EA  6E06               	movwf	(___fladd@a+1)^0,c
 14626  0039EC  0E00               	movlw	0
 14627  0039EE  6E07               	movwf	(___fladd@a+2)^0,c
 14628  0039F0  0E40               	movlw	64
 14629  0039F2  6E08               	movwf	(___fladd@a+3)^0,c
 14630  0039F4  C0BA  F001         	movff	logf@f,___fladd@b
 14631  0039F8  C0BB  F002         	movff	logf@f+1,___fladd@b+1
 14632  0039FC  C0BC  F003         	movff	logf@f+2,___fladd@b+2
 14633  003A00  C0BD  F004         	movff	logf@f+3,___fladd@b+3
 14634  003A04  EC16  F025         	call	___fladd	;wreg free
 14635  003A08  C001  F036         	movff	?___fladd,___fldiv@a
 14636  003A0C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
 14637  003A10  C003  F038         	movff	?___fladd+2,___fldiv@a+2
 14638  003A14  C004  F039         	movff	?___fladd+3,___fldiv@a+3
 14639  003A18  EC9C  F026         	call	___fldiv	;wreg free
 14640  003A1C  C032  F0A6         	movff	?___fldiv,logf@s
 14641  003A20  C033  F0A7         	movff	?___fldiv+1,logf@s+1
 14642  003A24  C034  F0A8         	movff	?___fldiv+2,logf@s+2
 14643  003A28  C035  F0A9         	movff	?___fldiv+3,logf@s+3
 14644  003A2C  C0A6  F011         	movff	logf@s,___flmul@b
 14645  003A30  C0A7  F012         	movff	logf@s+1,___flmul@b+1
 14646  003A34  C0A8  F013         	movff	logf@s+2,___flmul@b+2
 14647  003A38  C0A9  F014         	movff	logf@s+3,___flmul@b+3
 14648  003A3C  C0A6  F015         	movff	logf@s,___flmul@a
 14649  003A40  C0A7  F016         	movff	logf@s+1,___flmul@a+1
 14650  003A44  C0A8  F017         	movff	logf@s+2,___flmul@a+2
 14651  003A48  C0A9  F018         	movff	logf@s+3,___flmul@a+3
 14652  003A4C  EC6D  F023         	call	___flmul	;wreg free
 14653  003A50  C011  F0AA         	movff	?___flmul,logf@z
 14654  003A54  C012  F0AB         	movff	?___flmul+1,logf@z+1
 14655  003A58  C013  F0AC         	movff	?___flmul+2,logf@z+2
 14656  003A5C  C014  F0AD         	movff	?___flmul+3,logf@z+3
 14657  003A60  C0AA  F011         	movff	logf@z,___flmul@b
 14658  003A64  C0AB  F012         	movff	logf@z+1,___flmul@b+1
 14659  003A68  C0AC  F013         	movff	logf@z+2,___flmul@b+2
 14660  003A6C  C0AD  F014         	movff	logf@z+3,___flmul@b+3
 14661  003A70  C0AA  F015         	movff	logf@z,___flmul@a
 14662  003A74  C0AB  F016         	movff	logf@z+1,___flmul@a+1
 14663  003A78  C0AC  F017         	movff	logf@z+2,___flmul@a+2
 14664  003A7C  C0AD  F018         	movff	logf@z+3,___flmul@a+3
 14665  003A80  EC6D  F023         	call	___flmul	;wreg free
 14666  003A84  C011  F0AE         	movff	?___flmul,logf@w
 14667  003A88  C012  F0AF         	movff	?___flmul+1,logf@w+1
 14668  003A8C  C013  F0B0         	movff	?___flmul+2,logf@w+2
 14669  003A90  C014  F0B1         	movff	?___flmul+3,logf@w+3
 14670  003A94  0E13               	movlw	19
 14671  003A96  6E05               	movwf	___fladd@a^0,c
 14672  003A98  0ECE               	movlw	206
 14673  003A9A  6E06               	movwf	(___fladd@a+1)^0,c
 14674  003A9C  0ECC               	movlw	204
 14675  003A9E  6E07               	movwf	(___fladd@a+2)^0,c
 14676  003AA0  0E3E               	movlw	62
 14677  003AA2  6E08               	movwf	(___fladd@a+3)^0,c
 14678  003AA4  0E26               	movlw	38
 14679  003AA6  6E15               	movwf	___flmul@a^0,c
 14680  003AA8  0E9E               	movlw	158
 14681  003AAA  6E16               	movwf	(___flmul@a+1)^0,c
 14682  003AAC  0E78               	movlw	120
 14683  003AAE  6E17               	movwf	(___flmul@a+2)^0,c
 14684  003AB0  0E3E               	movlw	62
 14685  003AB2  6E18               	movwf	(___flmul@a+3)^0,c
 14686  003AB4  C0AE  F011         	movff	logf@w,___flmul@b
 14687  003AB8  C0AF  F012         	movff	logf@w+1,___flmul@b+1
 14688  003ABC  C0B0  F013         	movff	logf@w+2,___flmul@b+2
 14689  003AC0  C0B1  F014         	movff	logf@w+3,___flmul@b+3
 14690  003AC4  EC6D  F023         	call	___flmul	;wreg free
 14691  003AC8  C011  F001         	movff	?___flmul,___fladd@b
 14692  003ACC  C012  F002         	movff	?___flmul+1,___fladd@b+1
 14693  003AD0  C013  F003         	movff	?___flmul+2,___fladd@b+2
 14694  003AD4  C014  F004         	movff	?___flmul+3,___fladd@b+3
 14695  003AD8  EC16  F025         	call	___fladd	;wreg free
 14696  003ADC  C001  F0B2         	movff	?___fladd,_logf$2064
 14697  003AE0  C002  F0B3         	movff	?___fladd+1,_logf$2064+1
 14698  003AE4  C003  F0B4         	movff	?___fladd+2,_logf$2064+2
 14699  003AE8  C004  F0B5         	movff	?___fladd+3,_logf$2064+3
 14700  003AEC  C0B2  F011         	movff	_logf$2064,___flmul@b
 14701  003AF0  C0B3  F012         	movff	_logf$2064+1,___flmul@b+1
 14702  003AF4  C0B4  F013         	movff	_logf$2064+2,___flmul@b+2
 14703  003AF8  C0B5  F014         	movff	_logf$2064+3,___flmul@b+3
 14704  003AFC  C0AE  F015         	movff	logf@w,___flmul@a
 14705  003B00  C0AF  F016         	movff	logf@w+1,___flmul@a+1
 14706  003B04  C0B0  F017         	movff	logf@w+2,___flmul@a+2
 14707  003B08  C0B1  F018         	movff	logf@w+3,___flmul@a+3
 14708  003B0C  EC6D  F023         	call	___flmul	;wreg free
 14709  003B10  C011  F084         	movff	?___flmul,logf@t1
 14710  003B14  C012  F085         	movff	?___flmul+1,logf@t1+1
 14711  003B18  C013  F086         	movff	?___flmul+2,logf@t1+2
 14712  003B1C  C014  F087         	movff	?___flmul+3,logf@t1+3
 14713  003B20  0EAA               	movlw	170
 14714  003B22  6E05               	movwf	___fladd@a^0,c
 14715  003B24  0EAA               	movlw	170
 14716  003B26  6E06               	movwf	(___fladd@a+1)^0,c
 14717  003B28  0E2A               	movlw	42
 14718  003B2A  6E07               	movwf	(___fladd@a+2)^0,c
 14719  003B2C  0E3F               	movlw	63
 14720  003B2E  6E08               	movwf	(___fladd@a+3)^0,c
 14721  003B30  0EEE               	movlw	238
 14722  003B32  6E15               	movwf	___flmul@a^0,c
 14723  003B34  0EE9               	movlw	233
 14724  003B36  6E16               	movwf	(___flmul@a+1)^0,c
 14725  003B38  0E91               	movlw	145
 14726  003B3A  6E17               	movwf	(___flmul@a+2)^0,c
 14727  003B3C  0E3E               	movlw	62
 14728  003B3E  6E18               	movwf	(___flmul@a+3)^0,c
 14729  003B40  C0AE  F011         	movff	logf@w,___flmul@b
 14730  003B44  C0AF  F012         	movff	logf@w+1,___flmul@b+1
 14731  003B48  C0B0  F013         	movff	logf@w+2,___flmul@b+2
 14732  003B4C  C0B1  F014         	movff	logf@w+3,___flmul@b+3
 14733  003B50  EC6D  F023         	call	___flmul	;wreg free
 14734  003B54  C011  F001         	movff	?___flmul,___fladd@b
 14735  003B58  C012  F002         	movff	?___flmul+1,___fladd@b+1
 14736  003B5C  C013  F003         	movff	?___flmul+2,___fladd@b+2
 14737  003B60  C014  F004         	movff	?___flmul+3,___fladd@b+3
 14738  003B64  EC16  F025         	call	___fladd	;wreg free
 14739  003B68  C001  F0B2         	movff	?___fladd,_logf$2064
 14740  003B6C  C002  F0B3         	movff	?___fladd+1,_logf$2064+1
 14741  003B70  C003  F0B4         	movff	?___fladd+2,_logf$2064+2
 14742  003B74  C004  F0B5         	movff	?___fladd+3,_logf$2064+3
 14743  003B78  C0B2  F011         	movff	_logf$2064,___flmul@b
 14744  003B7C  C0B3  F012         	movff	_logf$2064+1,___flmul@b+1
 14745  003B80  C0B4  F013         	movff	_logf$2064+2,___flmul@b+2
 14746  003B84  C0B5  F014         	movff	_logf$2064+3,___flmul@b+3
 14747  003B88  C0AA  F015         	movff	logf@z,___flmul@a
 14748  003B8C  C0AB  F016         	movff	logf@z+1,___flmul@a+1
 14749  003B90  C0AC  F017         	movff	logf@z+2,___flmul@a+2
 14750  003B94  C0AD  F018         	movff	logf@z+3,___flmul@a+3
 14751  003B98  EC6D  F023         	call	___flmul	;wreg free
 14752  003B9C  C011  F088         	movff	?___flmul,logf@t2
 14753  003BA0  C012  F089         	movff	?___flmul+1,logf@t2+1
 14754  003BA4  C013  F08A         	movff	?___flmul+2,logf@t2+2
 14755  003BA8  C014  F08B         	movff	?___flmul+3,logf@t2+3
 14756  003BAC  C088  F001         	movff	logf@t2,___fladd@b
 14757  003BB0  C089  F002         	movff	logf@t2+1,___fladd@b+1
 14758  003BB4  C08A  F003         	movff	logf@t2+2,___fladd@b+2
 14759  003BB8  C08B  F004         	movff	logf@t2+3,___fladd@b+3
 14760  003BBC  C084  F005         	movff	logf@t1,___fladd@a
 14761  003BC0  C085  F006         	movff	logf@t1+1,___fladd@a+1
 14762  003BC4  C086  F007         	movff	logf@t1+2,___fladd@a+2
 14763  003BC8  C087  F008         	movff	logf@t1+3,___fladd@a+3
 14764  003BCC  EC16  F025         	call	___fladd	;wreg free
 14765  003BD0  C001  F080         	movff	?___fladd,logf@R
 14766  003BD4  C002  F081         	movff	?___fladd+1,logf@R+1
 14767  003BD8  C003  F082         	movff	?___fladd+2,logf@R+2
 14768  003BDC  C004  F083         	movff	?___fladd+3,logf@R+3
 14769  003BE0  0E00               	movlw	0
 14770  003BE2  6E15               	movwf	___flmul@a^0,c
 14771  003BE4  0E00               	movlw	0
 14772  003BE6  6E16               	movwf	(___flmul@a+1)^0,c
 14773  003BE8  0E00               	movlw	0
 14774  003BEA  6E17               	movwf	(___flmul@a+2)^0,c
 14775  003BEC  0E3F               	movlw	63
 14776  003BEE  6E18               	movwf	(___flmul@a+3)^0,c
 14777  003BF0  C0BA  F011         	movff	logf@f,___flmul@b
 14778  003BF4  C0BB  F012         	movff	logf@f+1,___flmul@b+1
 14779  003BF8  C0BC  F013         	movff	logf@f+2,___flmul@b+2
 14780  003BFC  C0BD  F014         	movff	logf@f+3,___flmul@b+3
 14781  003C00  EC6D  F023         	call	___flmul	;wreg free
 14782  003C04  C011  F0B2         	movff	?___flmul,_logf$2064
 14783  003C08  C012  F0B3         	movff	?___flmul+1,_logf$2064+1
 14784  003C0C  C013  F0B4         	movff	?___flmul+2,_logf$2064+2
 14785  003C10  C014  F0B5         	movff	?___flmul+3,_logf$2064+3
 14786  003C14  C0B2  F011         	movff	_logf$2064,___flmul@b
 14787  003C18  C0B3  F012         	movff	_logf$2064+1,___flmul@b+1
 14788  003C1C  C0B4  F013         	movff	_logf$2064+2,___flmul@b+2
 14789  003C20  C0B5  F014         	movff	_logf$2064+3,___flmul@b+3
 14790  003C24  C0BA  F015         	movff	logf@f,___flmul@a
 14791  003C28  C0BB  F016         	movff	logf@f+1,___flmul@a+1
 14792  003C2C  C0BC  F017         	movff	logf@f+2,___flmul@a+2
 14793  003C30  C0BD  F018         	movff	logf@f+3,___flmul@a+3
 14794  003C34  EC6D  F023         	call	___flmul	;wreg free
 14795  003C38  C011  F09E         	movff	?___flmul,logf@hfsq
 14796  003C3C  C012  F09F         	movff	?___flmul+1,logf@hfsq+1
 14797  003C40  C013  F0A0         	movff	?___flmul+2,logf@hfsq+2
 14798  003C44  C014  F0A1         	movff	?___flmul+3,logf@hfsq+3
 14799  003C48  C09C  F001         	movff	logf@k,___xxtofl@val
 14800  003C4C  C09D  F002         	movff	logf@k+1,___xxtofl@val+1
 14801  003C50  0E00               	movlw	0
 14802  003C52  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 14803  003C54  0EFF               	movlw	-1
 14804  003C56  6E03               	movwf	(___xxtofl@val+2)^0,c
 14805  003C58  6E04               	movwf	(___xxtofl@val+3)^0,c
 14806  003C5A  0E01               	movlw	1
 14807  003C5C  ECAC  F02E         	call	___xxtofl
 14808  003C60  C001  F0A2         	movff	?___xxtofl,logf@dk
 14809  003C64  C002  F0A3         	movff	?___xxtofl+1,logf@dk+1
 14810  003C68  C003  F0A4         	movff	?___xxtofl+2,logf@dk+2
 14811  003C6C  C004  F0A5         	movff	?___xxtofl+3,logf@dk+3
 14812  003C70  C0A6  F015         	movff	logf@s,___flmul@a
 14813  003C74  C0A7  F016         	movff	logf@s+1,___flmul@a+1
 14814  003C78  C0A8  F017         	movff	logf@s+2,___flmul@a+2
 14815  003C7C  C0A9  F018         	movff	logf@s+3,___flmul@a+3
 14816  003C80  C080  F005         	movff	logf@R,___fladd@a
 14817  003C84  C081  F006         	movff	logf@R+1,___fladd@a+1
 14818  003C88  C082  F007         	movff	logf@R+2,___fladd@a+2
 14819  003C8C  C083  F008         	movff	logf@R+3,___fladd@a+3
 14820  003C90  C09E  F001         	movff	logf@hfsq,___fladd@b
 14821  003C94  C09F  F002         	movff	logf@hfsq+1,___fladd@b+1
 14822  003C98  C0A0  F003         	movff	logf@hfsq+2,___fladd@b+2
 14823  003C9C  C0A1  F004         	movff	logf@hfsq+3,___fladd@b+3
 14824  003CA0  EC16  F025         	call	___fladd	;wreg free
 14825  003CA4  C001  F011         	movff	?___fladd,___flmul@b
 14826  003CA8  C002  F012         	movff	?___fladd+1,___flmul@b+1
 14827  003CAC  C003  F013         	movff	?___fladd+2,___flmul@b+2
 14828  003CB0  C004  F014         	movff	?___fladd+3,___flmul@b+3
 14829  003CB4  EC6D  F023         	call	___flmul	;wreg free
 14830  003CB8  C011  F08C         	movff	?___flmul,_logf$2065
 14831  003CBC  C012  F08D         	movff	?___flmul+1,_logf$2065+1
 14832  003CC0  C013  F08E         	movff	?___flmul+2,_logf$2065+2
 14833  003CC4  C014  F08F         	movff	?___flmul+3,_logf$2065+3
 14834  003CC8  0ED1               	movlw	209
 14835  003CCA  6E15               	movwf	___flmul@a^0,c
 14836  003CCC  0EF7               	movlw	247
 14837  003CCE  6E16               	movwf	(___flmul@a+1)^0,c
 14838  003CD0  0E17               	movlw	23
 14839  003CD2  6E17               	movwf	(___flmul@a+2)^0,c
 14840  003CD4  0E37               	movlw	55
 14841  003CD6  6E18               	movwf	(___flmul@a+3)^0,c
 14842  003CD8  C0A2  F011         	movff	logf@dk,___flmul@b
 14843  003CDC  C0A3  F012         	movff	logf@dk+1,___flmul@b+1
 14844  003CE0  C0A4  F013         	movff	logf@dk+2,___flmul@b+2
 14845  003CE4  C0A5  F014         	movff	logf@dk+3,___flmul@b+3
 14846  003CE8  EC6D  F023         	call	___flmul	;wreg free
 14847  003CEC  C011  F005         	movff	?___flmul,___fladd@a
 14848  003CF0  C012  F006         	movff	?___flmul+1,___fladd@a+1
 14849  003CF4  C013  F007         	movff	?___flmul+2,___fladd@a+2
 14850  003CF8  C014  F008         	movff	?___flmul+3,___fladd@a+3
 14851  003CFC  C08C  F001         	movff	_logf$2065,___fladd@b
 14852  003D00  C08D  F002         	movff	_logf$2065+1,___fladd@b+1
 14853  003D04  C08E  F003         	movff	_logf$2065+2,___fladd@b+2
 14854  003D08  C08F  F004         	movff	_logf$2065+3,___fladd@b+3
 14855  003D0C  EC16  F025         	call	___fladd	;wreg free
 14856  003D10  C001  F090         	movff	?___fladd,_logf$2066
 14857  003D14  C002  F091         	movff	?___fladd+1,_logf$2066+1
 14858  003D18  C003  F092         	movff	?___fladd+2,_logf$2066+2
 14859  003D1C  C004  F093         	movff	?___fladd+3,_logf$2066+3
 14860  003D20  C09E  F02E         	movff	logf@hfsq,___flsub@a
 14861  003D24  C09F  F02F         	movff	logf@hfsq+1,___flsub@a+1
 14862  003D28  C0A0  F030         	movff	logf@hfsq+2,___flsub@a+2
 14863  003D2C  C0A1  F031         	movff	logf@hfsq+3,___flsub@a+3
 14864  003D30  C090  F02A         	movff	_logf$2066,___flsub@b
 14865  003D34  C091  F02B         	movff	_logf$2066+1,___flsub@b+1
 14866  003D38  C092  F02C         	movff	_logf$2066+2,___flsub@b+2
 14867  003D3C  C093  F02D         	movff	_logf$2066+3,___flsub@b+3
 14868  003D40  ECAE  F036         	call	___flsub	;wreg free
 14869  003D44  C02A  F094         	movff	?___flsub,_logf$2067
 14870  003D48  C02B  F095         	movff	?___flsub+1,_logf$2067+1
 14871  003D4C  C02C  F096         	movff	?___flsub+2,_logf$2067+2
 14872  003D50  C02D  F097         	movff	?___flsub+3,_logf$2067+3
 14873  003D54  C0BA  F005         	movff	logf@f,___fladd@a
 14874  003D58  C0BB  F006         	movff	logf@f+1,___fladd@a+1
 14875  003D5C  C0BC  F007         	movff	logf@f+2,___fladd@a+2
 14876  003D60  C0BD  F008         	movff	logf@f+3,___fladd@a+3
 14877  003D64  C094  F001         	movff	_logf$2067,___fladd@b
 14878  003D68  C095  F002         	movff	_logf$2067+1,___fladd@b+1
 14879  003D6C  C096  F003         	movff	_logf$2067+2,___fladd@b+2
 14880  003D70  C097  F004         	movff	_logf$2067+3,___fladd@b+3
 14881  003D74  EC16  F025         	call	___fladd	;wreg free
 14882  003D78  C001  F098         	movff	?___fladd,_logf$2068
 14883  003D7C  C002  F099         	movff	?___fladd+1,_logf$2068+1
 14884  003D80  C003  F09A         	movff	?___fladd+2,_logf$2068+2
 14885  003D84  C004  F09B         	movff	?___fladd+3,_logf$2068+3
 14886  003D88  C098  F001         	movff	_logf$2068,___fladd@b
 14887  003D8C  C099  F002         	movff	_logf$2068+1,___fladd@b+1
 14888  003D90  C09A  F003         	movff	_logf$2068+2,___fladd@b+2
 14889  003D94  C09B  F004         	movff	_logf$2068+3,___fladd@b+3
 14890  003D98  0E80               	movlw	128
 14891  003D9A  6E15               	movwf	___flmul@a^0,c
 14892  003D9C  0E71               	movlw	113
 14893  003D9E  6E16               	movwf	(___flmul@a+1)^0,c
 14894  003DA0  0E31               	movlw	49
 14895  003DA2  6E17               	movwf	(___flmul@a+2)^0,c
 14896  003DA4  0E3F               	movlw	63
 14897  003DA6  6E18               	movwf	(___flmul@a+3)^0,c
 14898  003DA8  C0A2  F011         	movff	logf@dk,___flmul@b
 14899  003DAC  C0A3  F012         	movff	logf@dk+1,___flmul@b+1
 14900  003DB0  C0A4  F013         	movff	logf@dk+2,___flmul@b+2
 14901  003DB4  C0A5  F014         	movff	logf@dk+3,___flmul@b+3
 14902  003DB8  EC6D  F023         	call	___flmul	;wreg free
 14903  003DBC  C011  F005         	movff	?___flmul,___fladd@a
 14904  003DC0  C012  F006         	movff	?___flmul+1,___fladd@a+1
 14905  003DC4  C013  F007         	movff	?___flmul+2,___fladd@a+2
 14906  003DC8  C014  F008         	movff	?___flmul+3,___fladd@a+3
 14907  003DCC  EC16  F025         	call	___fladd	;wreg free
 14908  003DD0  C001  F04B         	movff	?___fladd,?_logf
 14909  003DD4  C002  F04C         	movff	?___fladd+1,?_logf+1
 14910  003DD8  C003  F04D         	movff	?___fladd+2,?_logf+2
 14911  003DDC  C004  F04E         	movff	?___fladd+3,?_logf+3
 14912  003DE0  0012               	return		;funcret
 14913  003DE2                     __end_of_logf:
 14914                           	opt callstack 0
 14915                           
 14916 ;; *************** function ___flsub *****************
 14917 ;; Defined at:
 14918 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 14919 ;; Parameters:    Size  Location     Type
 14920 ;;  b               4   41[COMRAM] float 
 14921 ;;  a               4   45[COMRAM] float 
 14922 ;; Auto vars:     Size  Location     Type
 14923 ;;		None
 14924 ;; Return value:  Size  Location     Type
 14925 ;;                  4   41[COMRAM] float 
 14926 ;; Registers used:
 14927 ;;		wreg, status,2, status,0, cstack
 14928 ;; Tracked objects:
 14929 ;;		On entry : 0/0
 14930 ;;		On exit  : 0/0
 14931 ;;		Unchanged: 0/0
 14932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14933 ;;      Params:         8       0       0       0       0       0       0
 14934 ;;      Locals:         0       0       0       0       0       0       0
 14935 ;;      Temps:          0       0       0       0       0       0       0
 14936 ;;      Totals:         8       0       0       0       0       0       0
 14937 ;;Total ram usage:        8 bytes
 14938 ;; Hardware stack levels used:    1
 14939 ;; Hardware stack levels required when called:    1
 14940 ;; This function calls:
 14941 ;;		___fladd
 14942 ;; This function is called by:
 14943 ;;		_MQGetPercentage
 14944 ;;		_efgtoa
 14945 ;;		_logf
 14946 ;;		_powf
 14947 ;; This function uses a non-reentrant model
 14948 ;;
 14949                           
 14950                           	psect	text58
 14951  006D5C                     __ptext58:
 14952                           	opt callstack 0
 14953  006D5C                     ___flsub:
 14954                           	opt callstack 17
 14955                           
 14956                           ;incstack = 0
 14957  006D5C  0E00               	movlw	0
 14958  006D5E  1A2E               	xorwf	___flsub@a^0,f,c
 14959  006D60  0E00               	movlw	0
 14960  006D62  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 14961  006D64  0E00               	movlw	0
 14962  006D66  1A30               	xorwf	(___flsub@a+2)^0,f,c
 14963  006D68  0E80               	movlw	128
 14964  006D6A  1A31               	xorwf	(___flsub@a+3)^0,f,c
 14965  006D6C  C02A  F001         	movff	___flsub@b,___fladd@b
 14966  006D70  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 14967  006D74  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 14968  006D78  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 14969  006D7C  C02E  F005         	movff	___flsub@a,___fladd@a
 14970  006D80  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 14971  006D84  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 14972  006D88  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 14973  006D8C  EC16  F025         	call	___fladd	;wreg free
 14974  006D90  C001  F02A         	movff	?___fladd,?___flsub
 14975  006D94  C002  F02B         	movff	?___fladd+1,?___flsub+1
 14976  006D98  C003  F02C         	movff	?___fladd+2,?___flsub+2
 14977  006D9C  C004  F02D         	movff	?___fladd+3,?___flsub+3
 14978  006DA0  0012               	return		;funcret
 14979  006DA2                     __end_of___flsub:
 14980                           	opt callstack 0
 14981                           
 14982 ;; *************** function ___fladd *****************
 14983 ;; Defined at:
 14984 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 14985 ;; Parameters:    Size  Location     Type
 14986 ;;  b               4    0[COMRAM] float 
 14987 ;;  a               4    4[COMRAM] float 
 14988 ;; Auto vars:     Size  Location     Type
 14989 ;;  grs             1   15[COMRAM] unsigned char 
 14990 ;;  bexp            1   14[COMRAM] unsigned char 
 14991 ;;  aexp            1   13[COMRAM] unsigned char 
 14992 ;;  signs           1   12[COMRAM] unsigned char 
 14993 ;; Return value:  Size  Location     Type
 14994 ;;                  4    0[COMRAM] unsigned char 
 14995 ;; Registers used:
 14996 ;;		wreg, status,2, status,0
 14997 ;; Tracked objects:
 14998 ;;		On entry : 0/0
 14999 ;;		On exit  : 0/0
 15000 ;;		Unchanged: 0/0
 15001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15002 ;;      Params:         8       0       0       0       0       0       0
 15003 ;;      Locals:         4       0       0       0       0       0       0
 15004 ;;      Temps:          4       0       0       0       0       0       0
 15005 ;;      Totals:        16       0       0       0       0       0       0
 15006 ;;Total ram usage:       16 bytes
 15007 ;; Hardware stack levels used:    1
 15008 ;; This function calls:
 15009 ;;		Nothing
 15010 ;; This function is called by:
 15011 ;;		_MQGetPercentage
 15012 ;;		_efgtoa
 15013 ;;		___flsub
 15014 ;;		_logf
 15015 ;;		_powf
 15016 ;;		_sqrtf
 15017 ;; This function uses a non-reentrant model
 15018 ;;
 15019                           
 15020                           	psect	text59
 15021  004A2C                     __ptext59:
 15022                           	opt callstack 0
 15023  004A2C                     ___fladd:
 15024                           	opt callstack 17
 15025                           
 15026                           ;incstack = 0
 15027  004A2C  5004               	movf	(___fladd@b+3)^0,w,c
 15028  004A2E  0B80               	andlw	128
 15029  004A30  6E0D               	movwf	___fladd@signs^0,c
 15030  004A32  5004               	movf	(___fladd@b+3)^0,w,c
 15031  004A34  2404               	addwf	(___fladd@b+3)^0,w,c
 15032  004A36  6E0F               	movwf	___fladd@bexp^0,c
 15033  004A38  BE03               	btfsc	(___fladd@b+2)^0,7,c
 15034  004A3A  800F               	bsf	___fladd@bexp^0,0,c
 15035  004A3C  500F               	movf	___fladd@bexp^0,w,c
 15036  004A3E  B4D8               	btfsc	status,2,c
 15037  004A40  D00D               	goto	i2l9395
 15038  004A42  280F               	incf	___fladd@bexp^0,w,c
 15039  004A44  A4D8               	btfss	status,2,c
 15040  004A46  D008               	goto	i2l9391
 15041  004A48  0E00               	movlw	0
 15042  004A4A  6E01               	movwf	___fladd@b^0,c
 15043  004A4C  0E00               	movlw	0
 15044  004A4E  6E02               	movwf	(___fladd@b+1)^0,c
 15045  004A50  0E00               	movlw	0
 15046  004A52  6E03               	movwf	(___fladd@b+2)^0,c
 15047  004A54  0E00               	movlw	0
 15048  004A56  6E04               	movwf	(___fladd@b+3)^0,c
 15049  004A58                     i2l9391:
 15050  004A58  8E03               	bsf	(___fladd@b+2)^0,7,c
 15051  004A5A  D006               	goto	L13
 15052  004A5C                     i2l9395:
 15053  004A5C  0E00               	movlw	0
 15054  004A5E  6E01               	movwf	___fladd@b^0,c
 15055  004A60  0E00               	movlw	0
 15056  004A62  6E02               	movwf	(___fladd@b+1)^0,c
 15057  004A64  0E00               	movlw	0
 15058  004A66  6E03               	movwf	(___fladd@b+2)^0,c
 15059  004A68                     L13:
 15060  004A68  0E00               	movlw	0
 15061  004A6A  6E04               	movwf	(___fladd@b+3)^0,c
 15062  004A6C  5008               	movf	(___fladd@a+3)^0,w,c
 15063  004A6E  0B80               	andlw	128
 15064  004A70  6E0E               	movwf	___fladd@aexp^0,c
 15065  004A72  500D               	movf	___fladd@signs^0,w,c
 15066  004A74  180E               	xorwf	___fladd@aexp^0,w,c
 15067  004A76  A4D8               	btfss	status,2,c
 15068  004A78  8C0D               	bsf	___fladd@signs^0,6,c
 15069  004A7A  5008               	movf	(___fladd@a+3)^0,w,c
 15070  004A7C  2408               	addwf	(___fladd@a+3)^0,w,c
 15071  004A7E  6E0E               	movwf	___fladd@aexp^0,c
 15072  004A80  BE07               	btfsc	(___fladd@a+2)^0,7,c
 15073  004A82  800E               	bsf	___fladd@aexp^0,0,c
 15074  004A84  500E               	movf	___fladd@aexp^0,w,c
 15075  004A86  B4D8               	btfsc	status,2,c
 15076  004A88  D00D               	goto	i2l9419
 15077  004A8A  280E               	incf	___fladd@aexp^0,w,c
 15078  004A8C  A4D8               	btfss	status,2,c
 15079  004A8E  D008               	goto	i2l9415
 15080  004A90  0E00               	movlw	0
 15081  004A92  6E05               	movwf	___fladd@a^0,c
 15082  004A94  0E00               	movlw	0
 15083  004A96  6E06               	movwf	(___fladd@a+1)^0,c
 15084  004A98  0E00               	movlw	0
 15085  004A9A  6E07               	movwf	(___fladd@a+2)^0,c
 15086  004A9C  0E00               	movlw	0
 15087  004A9E  6E08               	movwf	(___fladd@a+3)^0,c
 15088  004AA0                     i2l9415:
 15089  004AA0  8E07               	bsf	(___fladd@a+2)^0,7,c
 15090  004AA2  D006               	goto	L14
 15091  004AA4                     i2l9419:
 15092  004AA4  0E00               	movlw	0
 15093  004AA6  6E05               	movwf	___fladd@a^0,c
 15094  004AA8  0E00               	movlw	0
 15095  004AAA  6E06               	movwf	(___fladd@a+1)^0,c
 15096  004AAC  0E00               	movlw	0
 15097  004AAE  6E07               	movwf	(___fladd@a+2)^0,c
 15098  004AB0                     L14:
 15099  004AB0  0E00               	movlw	0
 15100  004AB2  6E08               	movwf	(___fladd@a+3)^0,c
 15101  004AB4  500F               	movf	___fladd@bexp^0,w,c
 15102  004AB6  5C0E               	subwf	___fladd@aexp^0,w,c
 15103  004AB8  B0D8               	btfsc	status,0,c
 15104  004ABA  D022               	goto	i2l9457
 15105  004ABC  AC0D               	btfss	___fladd@signs^0,6,c
 15106  004ABE  D002               	goto	i2l9427
 15107  004AC0  0E80               	movlw	128
 15108  004AC2  1A0D               	xorwf	___fladd@signs^0,f,c
 15109  004AC4                     i2l9427:
 15110  004AC4  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 15111  004AC8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 15112  004ACC  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 15113  004AD0  C001  F010         	movff	___fladd@b,___fladd@grs
 15114  004AD4  C005  F001         	movff	___fladd@a,___fladd@b
 15115  004AD8  C010  F005         	movff	___fladd@grs,___fladd@a
 15116  004ADC  C002  F010         	movff	___fladd@b+1,___fladd@grs
 15117  004AE0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 15118  004AE4  C010  F006         	movff	___fladd@grs,___fladd@a+1
 15119  004AE8  C003  F010         	movff	___fladd@b+2,___fladd@grs
 15120  004AEC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 15121  004AF0  C010  F007         	movff	___fladd@grs,___fladd@a+2
 15122  004AF4  C004  F010         	movff	___fladd@b+3,___fladd@grs
 15123  004AF8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 15124  004AFC  C010  F008         	movff	___fladd@grs,___fladd@a+3
 15125  004B00                     i2l9457:
 15126  004B00  0E00               	movlw	0
 15127  004B02  6E10               	movwf	___fladd@grs^0,c
 15128  004B04  500F               	movf	___fladd@bexp^0,w,c
 15129  004B06  C00E  F009         	movff	___fladd@aexp,??___fladd
 15130  004B0A  6A0A               	clrf	(??___fladd+1)^0,c
 15131  004B0C  5E09               	subwf	??___fladd^0,f,c
 15132  004B0E  0E00               	movlw	0
 15133  004B10  5A0A               	subwfb	(??___fladd+1)^0,f,c
 15134  004B12  BE0A               	btfsc	(??___fladd+1)^0,7,c
 15135  004B14  D02C               	goto	i2l1020
 15136  004B16  500A               	movf	(??___fladd+1)^0,w,c
 15137  004B18  E104               	bnz	i2u1212_40
 15138  004B1A  0E1A               	movlw	26
 15139  004B1C  5C09               	subwf	??___fladd^0,w,c
 15140  004B1E  A0D8               	btfss	status,0,c
 15141  004B20  D026               	goto	i2l1020
 15142  004B22                     i2u1212_40:
 15143  004B22  5001               	movf	___fladd@b^0,w,c
 15144  004B24  1002               	iorwf	(___fladd@b+1)^0,w,c
 15145  004B26  1003               	iorwf	(___fladd@b+2)^0,w,c
 15146  004B28  1004               	iorwf	(___fladd@b+3)^0,w,c
 15147  004B2A  B4D8               	btfsc	status,2,c
 15148  004B2C  D002               	goto	i2u1213_40
 15149  004B2E  0E01               	movlw	1
 15150  004B30  D001               	goto	i2u1214_40
 15151  004B32                     i2u1213_40:
 15152  004B32  0E00               	movlw	0
 15153  004B34                     i2u1214_40:
 15154  004B34  6E10               	movwf	___fladd@grs^0,c
 15155  004B36  0E00               	movlw	0
 15156  004B38  6E01               	movwf	___fladd@b^0,c
 15157  004B3A  0E00               	movlw	0
 15158  004B3C  6E02               	movwf	(___fladd@b+1)^0,c
 15159  004B3E  0E00               	movlw	0
 15160  004B40  6E03               	movwf	(___fladd@b+2)^0,c
 15161  004B42  0E00               	movlw	0
 15162  004B44  6E04               	movwf	(___fladd@b+3)^0,c
 15163  004B46  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 15164  004B4A  D015               	goto	i2u1217_40
 15165  004B4C                     i2l1021:
 15166  004B4C  A010               	btfss	___fladd@grs^0,0,c
 15167  004B4E  D005               	goto	i2l9469
 15168  004B50  90D8               	bcf	status,0,c
 15169  004B52  3010               	rrcf	___fladd@grs^0,w,c
 15170  004B54  0901               	iorlw	1
 15171  004B56  6E10               	movwf	___fladd@grs^0,c
 15172  004B58  D002               	goto	i2l9471
 15173  004B5A                     i2l9469:
 15174  004B5A  90D8               	bcf	status,0,c
 15175  004B5C  3210               	rrcf	___fladd@grs^0,f,c
 15176  004B5E                     i2l9471:
 15177  004B5E  B001               	btfsc	___fladd@b^0,0,c
 15178  004B60  8E10               	bsf	___fladd@grs^0,7,c
 15179  004B62  3404               	rlcf	(___fladd@b+3)^0,w,c
 15180  004B64  3204               	rrcf	(___fladd@b+3)^0,f,c
 15181  004B66  3203               	rrcf	(___fladd@b+2)^0,f,c
 15182  004B68  3202               	rrcf	(___fladd@b+1)^0,f,c
 15183  004B6A  3201               	rrcf	___fladd@b^0,f,c
 15184  004B6C  2A0F               	incf	___fladd@bexp^0,f,c
 15185  004B6E                     i2l1020:
 15186  004B6E  500E               	movf	___fladd@aexp^0,w,c
 15187  004B70  5C0F               	subwf	___fladd@bexp^0,w,c
 15188  004B72  A0D8               	btfss	status,0,c
 15189  004B74  D7EB               	goto	i2l1021
 15190  004B76                     i2u1217_40:
 15191  004B76  BC0D               	btfsc	___fladd@signs^0,6,c
 15192  004B78  D028               	goto	i2l9503
 15193  004B7A  500F               	movf	___fladd@bexp^0,w,c
 15194  004B7C  A4D8               	btfss	status,2,c
 15195  004B7E  D009               	goto	i2l9485
 15196  004B80  0E00               	movlw	0
 15197  004B82  6E01               	movwf	?___fladd^0,c
 15198  004B84  0E00               	movlw	0
 15199  004B86  6E02               	movwf	(?___fladd+1)^0,c
 15200  004B88  0E00               	movlw	0
 15201  004B8A  6E03               	movwf	(?___fladd+2)^0,c
 15202  004B8C  0E00               	movlw	0
 15203  004B8E  6E04               	movwf	(?___fladd+3)^0,c
 15204  004B90  0012               	return	
 15205  004B92                     i2l9485:
 15206  004B92  5005               	movf	___fladd@a^0,w,c
 15207  004B94  2601               	addwf	___fladd@b^0,f,c
 15208  004B96  5006               	movf	(___fladd@a+1)^0,w,c
 15209  004B98  2202               	addwfc	(___fladd@b+1)^0,f,c
 15210  004B9A  5007               	movf	(___fladd@a+2)^0,w,c
 15211  004B9C  2203               	addwfc	(___fladd@b+2)^0,f,c
 15212  004B9E  5008               	movf	(___fladd@a+3)^0,w,c
 15213  004BA0  2204               	addwfc	(___fladd@b+3)^0,f,c
 15214  004BA2  A004               	btfss	(___fladd@b+3)^0,0,c
 15215  004BA4  D071               	goto	i2u1230_40
 15216  004BA6  A010               	btfss	___fladd@grs^0,0,c
 15217  004BA8  D005               	goto	i2l9493
 15218  004BAA  90D8               	bcf	status,0,c
 15219  004BAC  3010               	rrcf	___fladd@grs^0,w,c
 15220  004BAE  0901               	iorlw	1
 15221  004BB0  6E10               	movwf	___fladd@grs^0,c
 15222  004BB2  D002               	goto	i2l9495
 15223  004BB4                     i2l9493:
 15224  004BB4  90D8               	bcf	status,0,c
 15225  004BB6  3210               	rrcf	___fladd@grs^0,f,c
 15226  004BB8                     i2l9495:
 15227  004BB8  B001               	btfsc	___fladd@b^0,0,c
 15228  004BBA  8E10               	bsf	___fladd@grs^0,7,c
 15229  004BBC  3404               	rlcf	(___fladd@b+3)^0,w,c
 15230  004BBE  3204               	rrcf	(___fladd@b+3)^0,f,c
 15231  004BC0  3203               	rrcf	(___fladd@b+2)^0,f,c
 15232  004BC2  3202               	rrcf	(___fladd@b+1)^0,f,c
 15233  004BC4  3201               	rrcf	___fladd@b^0,f,c
 15234  004BC6  2A0F               	incf	___fladd@bexp^0,f,c
 15235  004BC8  D05F               	goto	i2u1230_40
 15236  004BCA                     i2l9503:
 15237  004BCA  5005               	movf	___fladd@a^0,w,c
 15238  004BCC  5C01               	subwf	___fladd@b^0,w,c
 15239  004BCE  5006               	movf	(___fladd@a+1)^0,w,c
 15240  004BD0  5802               	subwfb	(___fladd@b+1)^0,w,c
 15241  004BD2  5007               	movf	(___fladd@a+2)^0,w,c
 15242  004BD4  5803               	subwfb	(___fladd@b+2)^0,w,c
 15243  004BD6  5004               	movf	(___fladd@b+3)^0,w,c
 15244  004BD8  0A80               	xorlw	128
 15245  004BDA  6E09               	movwf	??___fladd^0,c
 15246  004BDC  5008               	movf	(___fladd@a+3)^0,w,c
 15247  004BDE  0A80               	xorlw	128
 15248  004BE0  5809               	subwfb	??___fladd^0,w,c
 15249  004BE2  B0D8               	btfsc	status,0,c
 15250  004BE4  D025               	goto	i2l9513
 15251  004BE6  5001               	movf	___fladd@b^0,w,c
 15252  004BE8  5C05               	subwf	___fladd@a^0,w,c
 15253  004BEA  6E09               	movwf	??___fladd^0,c
 15254  004BEC  5002               	movf	(___fladd@b+1)^0,w,c
 15255  004BEE  5806               	subwfb	(___fladd@a+1)^0,w,c
 15256  004BF0  6E0A               	movwf	(??___fladd+1)^0,c
 15257  004BF2  5003               	movf	(___fladd@b+2)^0,w,c
 15258  004BF4  5807               	subwfb	(___fladd@a+2)^0,w,c
 15259  004BF6  6E0B               	movwf	(??___fladd+2)^0,c
 15260  004BF8  5004               	movf	(___fladd@b+3)^0,w,c
 15261  004BFA  5808               	subwfb	(___fladd@a+3)^0,w,c
 15262  004BFC  6E0C               	movwf	(??___fladd+3)^0,c
 15263  004BFE  0EFF               	movlw	255
 15264  004C00  2409               	addwf	??___fladd^0,w,c
 15265  004C02  6E01               	movwf	___fladd@b^0,c
 15266  004C04  0EFF               	movlw	255
 15267  004C06  200A               	addwfc	(??___fladd+1)^0,w,c
 15268  004C08  6E02               	movwf	(___fladd@b+1)^0,c
 15269  004C0A  0EFF               	movlw	255
 15270  004C0C  200B               	addwfc	(??___fladd+2)^0,w,c
 15271  004C0E  6E03               	movwf	(___fladd@b+2)^0,c
 15272  004C10  0EFF               	movlw	255
 15273  004C12  200C               	addwfc	(??___fladd+3)^0,w,c
 15274  004C14  6E04               	movwf	(___fladd@b+3)^0,c
 15275  004C16  0E80               	movlw	128
 15276  004C18  1A0D               	xorwf	___fladd@signs^0,f,c
 15277  004C1A  6C10               	negf	___fladd@grs^0,c
 15278  004C1C  5010               	movf	___fladd@grs^0,w,c
 15279  004C1E  A4D8               	btfss	status,2,c
 15280  004C20  D00F               	goto	i2l1036
 15281  004C22  0E01               	movlw	1
 15282  004C24  2601               	addwf	___fladd@b^0,f,c
 15283  004C26  0E00               	movlw	0
 15284  004C28  2202               	addwfc	(___fladd@b+1)^0,f,c
 15285  004C2A  2203               	addwfc	(___fladd@b+2)^0,f,c
 15286  004C2C  2204               	addwfc	(___fladd@b+3)^0,f,c
 15287  004C2E  D008               	goto	i2l1036
 15288  004C30                     i2l9513:
 15289  004C30  5005               	movf	___fladd@a^0,w,c
 15290  004C32  5E01               	subwf	___fladd@b^0,f,c
 15291  004C34  5006               	movf	(___fladd@a+1)^0,w,c
 15292  004C36  5A02               	subwfb	(___fladd@b+1)^0,f,c
 15293  004C38  5007               	movf	(___fladd@a+2)^0,w,c
 15294  004C3A  5A03               	subwfb	(___fladd@b+2)^0,f,c
 15295  004C3C  5008               	movf	(___fladd@a+3)^0,w,c
 15296  004C3E  5A04               	subwfb	(___fladd@b+3)^0,f,c
 15297  004C40                     i2l1036:
 15298  004C40  5001               	movf	___fladd@b^0,w,c
 15299  004C42  1002               	iorwf	(___fladd@b+1)^0,w,c
 15300  004C44  1003               	iorwf	(___fladd@b+2)^0,w,c
 15301  004C46  1004               	iorwf	(___fladd@b+3)^0,w,c
 15302  004C48  A4D8               	btfss	status,2,c
 15303  004C4A  D01C               	goto	i2l9537
 15304  004C4C  5010               	movf	___fladd@grs^0,w,c
 15305  004C4E  A4D8               	btfss	status,2,c
 15306  004C50  D019               	goto	i2l9537
 15307  004C52  0E00               	movlw	0
 15308  004C54  6E01               	movwf	?___fladd^0,c
 15309  004C56  0E00               	movlw	0
 15310  004C58  6E02               	movwf	(?___fladd+1)^0,c
 15311  004C5A  0E00               	movlw	0
 15312  004C5C  6E03               	movwf	(?___fladd+2)^0,c
 15313  004C5E  0E00               	movlw	0
 15314  004C60  6E04               	movwf	(?___fladd+3)^0,c
 15315  004C62  0012               	return	
 15316  004C64                     i2l9521:
 15317  004C64  90D8               	bcf	status,0,c
 15318  004C66  3601               	rlcf	___fladd@b^0,f,c
 15319  004C68  3602               	rlcf	(___fladd@b+1)^0,f,c
 15320  004C6A  3603               	rlcf	(___fladd@b+2)^0,f,c
 15321  004C6C  3604               	rlcf	(___fladd@b+3)^0,f,c
 15322  004C6E  BE10               	btfsc	___fladd@grs^0,7,c
 15323  004C70  8001               	bsf	___fladd@b^0,0,c
 15324  004C72  A010               	btfss	___fladd@grs^0,0,c
 15325  004C74  D002               	goto	i2l9531
 15326  004C76  80D8               	bsf	status,0,c
 15327  004C78  D001               	goto	L15
 15328  004C7A                     i2l9531:
 15329  004C7A  90D8               	bcf	status,0,c
 15330  004C7C                     L15:
 15331  004C7C  3610               	rlcf	___fladd@grs^0,f,c
 15332  004C7E  500F               	movf	___fladd@bexp^0,w,c
 15333  004C80  A4D8               	btfss	status,2,c
 15334  004C82  060F               	decf	___fladd@bexp^0,f,c
 15335  004C84                     i2l9537:
 15336  004C84  AE03               	btfss	(___fladd@b+2)^0,7,c
 15337  004C86  D7EE               	goto	i2l9521
 15338  004C88                     i2u1230_40:
 15339  004C88  0E00               	movlw	0
 15340  004C8A  6E0E               	movwf	___fladd@aexp^0,c
 15341  004C8C  AE10               	btfss	___fladd@grs^0,7,c
 15342  004C8E  D00B               	goto	i2l1045
 15343  004C90  C010  F009         	movff	___fladd@grs,??___fladd
 15344  004C94  0E7F               	movlw	127
 15345  004C96  1609               	andwf	??___fladd^0,f,c
 15346  004C98  B4D8               	btfsc	status,2,c
 15347  004C9A  D003               	goto	i2l1046
 15348  004C9C                     i2u1232_40:
 15349  004C9C  0E01               	movlw	1
 15350  004C9E  6E0E               	movwf	___fladd@aexp^0,c
 15351  004CA0  D002               	goto	i2l1045
 15352  004CA2                     i2l1046:
 15353  004CA2  B001               	btfsc	___fladd@b^0,0,c
 15354  004CA4  D7FB               	goto	i2u1232_40
 15355  004CA6                     i2l1045:
 15356  004CA6  500E               	movf	___fladd@aexp^0,w,c
 15357  004CA8  B4D8               	btfsc	status,2,c
 15358  004CAA  D020               	goto	i2l9557
 15359  004CAC  0E01               	movlw	1
 15360  004CAE  2601               	addwf	___fladd@b^0,f,c
 15361  004CB0  0E00               	movlw	0
 15362  004CB2  2202               	addwfc	(___fladd@b+1)^0,f,c
 15363  004CB4  2203               	addwfc	(___fladd@b+2)^0,f,c
 15364  004CB6  2204               	addwfc	(___fladd@b+3)^0,f,c
 15365  004CB8  A004               	btfss	(___fladd@b+3)^0,0,c
 15366  004CBA  D018               	goto	i2l9557
 15367  004CBC  C001  F009         	movff	___fladd@b,??___fladd
 15368  004CC0  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 15369  004CC4  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 15370  004CC8  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 15371  004CCC  340C               	rlcf	(??___fladd+3)^0,w,c
 15372  004CCE  320C               	rrcf	(??___fladd+3)^0,f,c
 15373  004CD0  320B               	rrcf	(??___fladd+2)^0,f,c
 15374  004CD2  320A               	rrcf	(??___fladd+1)^0,f,c
 15375  004CD4  3209               	rrcf	??___fladd^0,f,c
 15376  004CD6  C009  F001         	movff	??___fladd,___fladd@b
 15377  004CDA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 15378  004CDE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 15379  004CE2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 15380  004CE6  280F               	incf	___fladd@bexp^0,w,c
 15381  004CE8  A4D8               	btfss	status,2,c
 15382  004CEA  2A0F               	incf	___fladd@bexp^0,f,c
 15383  004CEC                     i2l9557:
 15384  004CEC  280F               	incf	___fladd@bexp^0,w,c
 15385  004CEE  B4D8               	btfsc	status,2,c
 15386  004CF0  D003               	goto	i2u1238_40
 15387  004CF2  500F               	movf	___fladd@bexp^0,w,c
 15388  004CF4  A4D8               	btfss	status,2,c
 15389  004CF6  D00D               	goto	i2l9565
 15390  004CF8                     i2u1238_40:
 15391  004CF8  0E00               	movlw	0
 15392  004CFA  6E01               	movwf	___fladd@b^0,c
 15393  004CFC  0E00               	movlw	0
 15394  004CFE  6E02               	movwf	(___fladd@b+1)^0,c
 15395  004D00  0E00               	movlw	0
 15396  004D02  6E03               	movwf	(___fladd@b+2)^0,c
 15397  004D04  0E00               	movlw	0
 15398  004D06  6E04               	movwf	(___fladd@b+3)^0,c
 15399  004D08  500F               	movf	___fladd@bexp^0,w,c
 15400  004D0A  A4D8               	btfss	status,2,c
 15401  004D0C  D002               	goto	i2l9565
 15402  004D0E  0E00               	movlw	0
 15403  004D10  6E0D               	movwf	___fladd@signs^0,c
 15404  004D12                     i2l9565:
 15405  004D12  A00F               	btfss	___fladd@bexp^0,0,c
 15406  004D14  D002               	goto	i2l9569
 15407  004D16  8E03               	bsf	(___fladd@b+2)^0,7,c
 15408  004D18  D001               	goto	i2l9571
 15409  004D1A                     i2l9569:
 15410  004D1A  9E03               	bcf	(___fladd@b+2)^0,7,c
 15411  004D1C                     i2l9571:
 15412  004D1C  90D8               	bcf	status,0,c
 15413  004D1E  300F               	rrcf	___fladd@bexp^0,w,c
 15414  004D20  6E04               	movwf	(___fladd@b+3)^0,c
 15415  004D22  BE0D               	btfsc	___fladd@signs^0,7,c
 15416  004D24  8E04               	bsf	(___fladd@b+3)^0,7,c
 15417  004D26  C001  F001         	movff	___fladd@b,?___fladd
 15418  004D2A  C002  F002         	movff	___fladd@b+1,?___fladd+1
 15419  004D2E  C003  F003         	movff	___fladd@b+2,?___fladd+2
 15420  004D32  C004  F004         	movff	___fladd@b+3,?___fladd+3
 15421  004D36  0012               	return		;funcret
 15422  004D38                     __end_of___fladd:
 15423                           	opt callstack 0
 15424                           
 15425 ;; *************** function ___fltol *****************
 15426 ;; Defined at:
 15427 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 15428 ;; Parameters:    Size  Location     Type
 15429 ;;  f1              4   74[BANK0 ] unsigned char 
 15430 ;; Auto vars:     Size  Location     Type
 15431 ;;  exp1            1  124[COMRAM] unsigned char 
 15432 ;;  sign1           1  123[COMRAM] unsigned char 
 15433 ;; Return value:  Size  Location     Type
 15434 ;;                  4   74[BANK0 ] long 
 15435 ;; Registers used:
 15436 ;;		wreg, status,2, status,0
 15437 ;; Tracked objects:
 15438 ;;		On entry : 0/0
 15439 ;;		On exit  : 0/0
 15440 ;;		Unchanged: 0/0
 15441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15442 ;;      Params:         0       4       0       0       0       0       0
 15443 ;;      Locals:         2       0       0       0       0       0       0
 15444 ;;      Temps:          4       0       0       0       0       0       0
 15445 ;;      Totals:         6       4       0       0       0       0       0
 15446 ;;Total ram usage:       10 bytes
 15447 ;; Hardware stack levels used:    1
 15448 ;; This function calls:
 15449 ;;		Nothing
 15450 ;; This function is called by:
 15451 ;;		_MQGetPercentage
 15452 ;;		_Hi_ISR
 15453 ;;		_efgtoa
 15454 ;; This function uses a non-reentrant model
 15455 ;;
 15456                           
 15457                           	psect	text60
 15458  0065A4                     __ptext60:
 15459                           	opt callstack 0
 15460  0065A4                     ___fltol:
 15461                           	opt callstack 18
 15462                           
 15463                           ;incstack = 0
 15464  0065A4  0100               	movlb	0	; () banked
 15465  0065A6  35CC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 15466  0065A8  35CD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 15467  0065AA  6E7D               	movwf	___fltol@exp1^0,c
 15468  0065AC  507D               	movf	___fltol@exp1^0,w,c
 15469  0065AE  A4D8               	btfss	status,2,c
 15470  0065B0  D009               	goto	i2l10131
 15471  0065B2                     i2u1341_40:
 15472                           
 15473                           ; BSR set to: 0
 15474  0065B2  0E00               	movlw	0
 15475  0065B4  6FCA               	movwf	?___fltol& (0+255),b
 15476  0065B6  0E00               	movlw	0
 15477  0065B8  6FCB               	movwf	(?___fltol+1)& (0+255),b
 15478  0065BA  0E00               	movlw	0
 15479  0065BC  6FCC               	movwf	(?___fltol+2)& (0+255),b
 15480  0065BE  0E00               	movlw	0
 15481  0065C0  6FCD               	movwf	(?___fltol+3)& (0+255),b
 15482  0065C2  0012               	return	
 15483  0065C4                     i2l10131:
 15484                           
 15485                           ; BSR set to: 0
 15486  0065C4  C0CA  F078         	movff	___fltol@f1,??___fltol
 15487  0065C8  C0CB  F079         	movff	___fltol@f1+1,??___fltol+1
 15488  0065CC  C0CC  F07A         	movff	___fltol@f1+2,??___fltol+2
 15489  0065D0  C0CD  F07B         	movff	___fltol@f1+3,??___fltol+3
 15490  0065D4  0E20               	movlw	32
 15491  0065D6  D005               	goto	i2u1342_40
 15492  0065D8                     i2u1342_45:
 15493  0065D8  90D8               	bcf	status,0,c
 15494  0065DA  327B               	rrcf	(??___fltol+3)^0,f,c
 15495  0065DC  327A               	rrcf	(??___fltol+2)^0,f,c
 15496  0065DE  3279               	rrcf	(??___fltol+1)^0,f,c
 15497  0065E0  3278               	rrcf	??___fltol^0,f,c
 15498  0065E2                     i2u1342_40:
 15499  0065E2  2EE8               	decfsz	wreg,f,c
 15500  0065E4  D7F9               	goto	i2u1342_45
 15501  0065E6  5078               	movf	??___fltol^0,w,c
 15502  0065E8  6E7C               	movwf	___fltol@sign1^0,c
 15503                           
 15504                           ; BSR set to: 0
 15505  0065EA  8FCC               	bsf	(___fltol@f1+2)& (0+255),7,b
 15506                           
 15507                           ; BSR set to: 0
 15508  0065EC  0EFF               	movlw	255
 15509  0065EE  17CA               	andwf	___fltol@f1& (0+255),f,b
 15510  0065F0  0EFF               	movlw	255
 15511  0065F2  17CB               	andwf	(___fltol@f1+1)& (0+255),f,b
 15512  0065F4  0EFF               	movlw	255
 15513  0065F6  17CC               	andwf	(___fltol@f1+2)& (0+255),f,b
 15514  0065F8  0E00               	movlw	0
 15515  0065FA  17CD               	andwf	(___fltol@f1+3)& (0+255),f,b
 15516                           
 15517                           ; BSR set to: 0
 15518  0065FC  0E96               	movlw	150
 15519  0065FE  5E7D               	subwf	___fltol@exp1^0,f,c
 15520                           
 15521                           ; BSR set to: 0
 15522  006600  AE7D               	btfss	___fltol@exp1^0,7,c
 15523  006602  D00D               	goto	i2l10151
 15524                           
 15525                           ; BSR set to: 0
 15526  006604  507D               	movf	___fltol@exp1^0,w,c
 15527  006606  0A80               	xorlw	128
 15528  006608  0F97               	addlw	151
 15529  00660A  A0D8               	btfss	status,0,c
 15530  00660C  D7D2               	goto	i2u1341_40
 15531  00660E                     i2l10147:
 15532                           
 15533                           ; BSR set to: 0
 15534  00660E  90D8               	bcf	status,0,c
 15535  006610  33CD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 15536  006612  33CC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 15537  006614  33CB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 15538  006616  33CA               	rrcf	___fltol@f1& (0+255),f,b
 15539                           
 15540                           ; BSR set to: 0
 15541  006618  3E7D               	incfsz	___fltol@exp1^0,f,c
 15542  00661A  D7F9               	goto	i2l10147
 15543  00661C  D00D               	goto	i2u1346_40
 15544  00661E                     i2l10151:
 15545                           
 15546                           ; BSR set to: 0
 15547  00661E  0E1F               	movlw	31
 15548  006620  647D               	cpfsgt	___fltol@exp1^0,c
 15549  006622  D007               	goto	i2l10159
 15550  006624  D7C6               	goto	i2u1341_40
 15551  006626                     i2l10157:
 15552                           
 15553                           ; BSR set to: 0
 15554  006626  90D8               	bcf	status,0,c
 15555  006628  37CA               	rlcf	___fltol@f1& (0+255),f,b
 15556  00662A  37CB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 15557  00662C  37CC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 15558  00662E  37CD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 15559  006630  067D               	decf	___fltol@exp1^0,f,c
 15560  006632                     i2l10159:
 15561                           
 15562                           ; BSR set to: 0
 15563  006632  507D               	movf	___fltol@exp1^0,w,c
 15564  006634  A4D8               	btfss	status,2,c
 15565  006636  D7F7               	goto	i2l10157
 15566  006638                     i2u1346_40:
 15567                           
 15568                           ; BSR set to: 0
 15569  006638  507C               	movf	___fltol@sign1^0,w,c
 15570  00663A  B4D8               	btfsc	status,2,c
 15571  00663C  D008               	goto	i2l10165
 15572                           
 15573                           ; BSR set to: 0
 15574  00663E  1FCD               	comf	(___fltol@f1+3)& (0+255),f,b
 15575  006640  1FCC               	comf	(___fltol@f1+2)& (0+255),f,b
 15576  006642  1FCB               	comf	(___fltol@f1+1)& (0+255),f,b
 15577  006644  6DCA               	negf	___fltol@f1& (0+255),b
 15578  006646  0E00               	movlw	0
 15579  006648  23CB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 15580  00664A  23CC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 15581  00664C  23CD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 15582  00664E                     i2l10165:
 15583                           
 15584                           ; BSR set to: 0
 15585  00664E  C0CA  F0CA         	movff	___fltol@f1,?___fltol
 15586  006652  C0CB  F0CB         	movff	___fltol@f1+1,?___fltol+1
 15587  006656  C0CC  F0CC         	movff	___fltol@f1+2,?___fltol+2
 15588  00665A  C0CD  F0CD         	movff	___fltol@f1+3,?___fltol+3
 15589                           
 15590                           ; BSR set to: 0
 15591  00665E  0012               	return		;funcret
 15592  006660                     __end_of___fltol:
 15593                           	opt callstack 0
 15594                           
 15595 ;; *************** function _LCD_clear *****************
 15596 ;; Defined at:
 15597 ;;		line 51 in file "setting_hardaware/LCD.c"
 15598 ;; Parameters:    Size  Location     Type
 15599 ;;		None
 15600 ;; Auto vars:     Size  Location     Type
 15601 ;;		None
 15602 ;; Return value:  Size  Location     Type
 15603 ;;                  1    wreg      void 
 15604 ;; Registers used:
 15605 ;;		wreg, status,2, cstack
 15606 ;; Tracked objects:
 15607 ;;		On entry : 0/0
 15608 ;;		On exit  : 0/0
 15609 ;;		Unchanged: 0/0
 15610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15611 ;;      Params:         0       0       0       0       0       0       0
 15612 ;;      Locals:         0       0       0       0       0       0       0
 15613 ;;      Temps:          0       0       0       0       0       0       0
 15614 ;;      Totals:         0       0       0       0       0       0       0
 15615 ;;Total ram usage:        0 bytes
 15616 ;; Hardware stack levels used:    1
 15617 ;; Hardware stack levels required when called:    1
 15618 ;; This function calls:
 15619 ;;		i2_Cmd
 15620 ;; This function is called by:
 15621 ;;		_Hi_ISR
 15622 ;; This function uses a non-reentrant model
 15623 ;;
 15624                           
 15625                           	psect	text61
 15626  0070E2                     __ptext61:
 15627                           	opt callstack 0
 15628  0070E2                     _LCD_clear:
 15629                           	opt callstack 21
 15630                           
 15631                           ;setting_hardaware/LCD.c: 52:     Cmd(0X01);
 15632                           
 15633                           ; BSR set to: 0
 15634                           ;incstack = 0
 15635  0070E2  0E00               	movlw	0
 15636  0070E4  6E02               	movwf	(i2Cmd@Value+1)^0,c
 15637  0070E6  0E01               	movlw	1
 15638  0070E8  6E01               	movwf	i2Cmd@Value^0,c
 15639  0070EA  ECEA  F037         	call	i2_Cmd	;wreg free
 15640  0070EE  0012               	return		;funcret
 15641  0070F0                     __end_of_LCD_clear:
 15642                           	opt callstack 0
 15643                           
 15644 ;; *************** function i2_Cmd *****************
 15645 ;; Defined at:
 15646 ;;		line 15 in file "setting_hardaware/LCD.c"
 15647 ;; Parameters:    Size  Location     Type
 15648 ;;  Value           2    0[COMRAM] int 
 15649 ;; Auto vars:     Size  Location     Type
 15650 ;;		None
 15651 ;; Return value:  Size  Location     Type
 15652 ;;                  1    wreg      void 
 15653 ;; Registers used:
 15654 ;;		wreg
 15655 ;; Tracked objects:
 15656 ;;		On entry : 0/0
 15657 ;;		On exit  : 0/0
 15658 ;;		Unchanged: 0/0
 15659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15660 ;;      Params:         2       0       0       0       0       0       0
 15661 ;;      Locals:         0       0       0       0       0       0       0
 15662 ;;      Temps:          1       0       0       0       0       0       0
 15663 ;;      Totals:         3       0       0       0       0       0       0
 15664 ;;Total ram usage:        3 bytes
 15665 ;; Hardware stack levels used:    1
 15666 ;; This function calls:
 15667 ;;		Nothing
 15668 ;; This function is called by:
 15669 ;;		_LCD_clear
 15670 ;;		i2_Send2Lcd
 15671 ;; This function uses a non-reentrant model
 15672 ;;
 15673                           
 15674                           	psect	text62
 15675  006FD4                     __ptext62:
 15676                           	opt callstack 0
 15677  006FD4                     i2_Cmd:
 15678                           	opt callstack 21
 15679                           
 15680                           ;setting_hardaware/LCD.c: 15: void Cmd(int Value);setting_hardaware/LCD.c: 16: {;setting
      +                          _hardaware/LCD.c: 17:  LATD = Value;
 15681                           
 15682                           ;incstack = 0
 15683  006FD4  C001  FF8C         	movff	i2Cmd@Value,3980	;volatile
 15684                           
 15685                           ;setting_hardaware/LCD.c: 18:  LATCbits.LC4=0;
 15686  006FD8  988B               	bcf	139,4,c	;volatile
 15687                           
 15688                           ;setting_hardaware/LCD.c: 20:  LATCbits.LC6=0;
 15689  006FDA  9C8B               	bcf	139,6,c	;volatile
 15690                           
 15691                           ;setting_hardaware/LCD.c: 21:  _delay((unsigned long)((25)*(4000000/4000000.0)));
 15692  006FDC  0E08               	movlw	8
 15693  006FDE                     i2u1584_47:
 15694  006FDE  2EE8               	decfsz	wreg,f,c
 15695  006FE0  D7FE               	bra	i2u1584_47
 15696  006FE2  F000               	nop	
 15697                           
 15698                           ;setting_hardaware/LCD.c: 22:  LATCbits.LC6=1;
 15699  006FE4  8C8B               	bsf	139,6,c	;volatile
 15700                           
 15701                           ;setting_hardaware/LCD.c: 23:  _delay((unsigned long)((25)*(4000000/4000000.0)));
 15702  006FE6  0E08               	movlw	8
 15703  006FE8                     i2u1585_47:
 15704  006FE8  2EE8               	decfsz	wreg,f,c
 15705  006FEA  D7FE               	bra	i2u1585_47
 15706  006FEC  F000               	nop	
 15707                           
 15708                           ;setting_hardaware/LCD.c: 24:  LATCbits.LC6=0;
 15709  006FEE  9C8B               	bcf	139,6,c	;volatile
 15710                           
 15711                           ;setting_hardaware/LCD.c: 25:  _delay((unsigned long)((3)*(4000000/4000.0)));
 15712  006FF0  0E04               	movlw	4
 15713  006FF2  6E03               	movwf	??i2_Cmd^0,c
 15714  006FF4  0EE4               	movlw	228
 15715  006FF6                     i2u1586_47:
 15716  006FF6  2EE8               	decfsz	wreg,f,c
 15717  006FF8  D7FE               	bra	i2u1586_47
 15718  006FFA  2E03               	decfsz	??i2_Cmd^0,f,c
 15719  006FFC  D7FC               	bra	i2u1586_47
 15720  006FFE  D000               	nop2	
 15721  007000  0012               	return		;funcret
 15722  007002                     __end_ofi2_Cmd:
 15723                           	opt callstack 0
 15724                           
 15725 ;; *************** function _ADC_Read *****************
 15726 ;; Defined at:
 15727 ;;		line 67 in file "setting_hardaware/adc.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;  channel         2   74[COMRAM] int 
 15730 ;; Auto vars:     Size  Location     Type
 15731 ;;  result          4   85[COMRAM] int 
 15732 ;;  digital         2   83[COMRAM] int 
 15733 ;; Return value:  Size  Location     Type
 15734 ;;                  4   74[COMRAM] int 
 15735 ;; Registers used:
 15736 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15737 ;; Tracked objects:
 15738 ;;		On entry : 0/0
 15739 ;;		On exit  : 0/0
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15742 ;;      Params:         4       0       0       0       0       0       0
 15743 ;;      Locals:        10       0       0       0       0       0       0
 15744 ;;      Temps:          1       0       0       0       0       0       0
 15745 ;;      Totals:        15       0       0       0       0       0       0
 15746 ;;Total ram usage:       15 bytes
 15747 ;; Hardware stack levels used:    1
 15748 ;; Hardware stack levels required when called:    1
 15749 ;; This function calls:
 15750 ;;		___fldiv
 15751 ;;		___flmul
 15752 ;;		___xxtofl
 15753 ;; This function is called by:
 15754 ;;		_Hi_ISR
 15755 ;; This function uses a non-reentrant model
 15756 ;;
 15757                           
 15758                           	psect	text63
 15759  006330                     __ptext63:
 15760                           	opt callstack 0
 15761  006330                     _ADC_Read:
 15762                           	opt callstack 21
 15763                           
 15764                           ;setting_hardaware/adc.c: 73:     ADCON0bits.CHS = channel ;
 15765                           
 15766                           ;incstack = 0
 15767  006330  C04B  F04F         	movff	ADC_Read@channel,??_ADC_Read
 15768  006334  464F               	rlncf	??_ADC_Read^0,f,c
 15769  006336  464F               	rlncf	??_ADC_Read^0,f,c
 15770  006338  50C2               	movf	194,w,c	;volatile
 15771  00633A  184F               	xorwf	??_ADC_Read^0,w,c
 15772  00633C  0BC3               	andlw	-61
 15773  00633E  184F               	xorwf	??_ADC_Read^0,w,c
 15774  006340  6EC2               	movwf	194,c	;volatile
 15775                           
 15776                           ;setting_hardaware/adc.c: 74:     ADCON0bits.ADON = 1;
 15777  006342  80C2               	bsf	194,0,c	;volatile
 15778                           
 15779                           ;setting_hardaware/adc.c: 75:     ADCON0bits.GO = 1;
 15780  006344  82C2               	bsf	194,1,c	;volatile
 15781  006346                     i2l167:
 15782  006346  B2C2               	btfsc	194,1,c	;volatile
 15783  006348  D7FE               	goto	i2l167
 15784                           
 15785                           ;setting_hardaware/adc.c: 78:     digital = ADRES;
 15786  00634A  CFC3 F054          	movff	4035,ADC_Read@digital	;volatile
 15787  00634E  CFC4 F055          	movff	4036,ADC_Read@digital+1	;volatile
 15788                           
 15789                           ;setting_hardaware/adc.c: 80:     result=digital*5.0/1024.0*100.0;
 15790  006352  0E00               	movlw	0
 15791  006354  6E36               	movwf	___fldiv@a^0,c
 15792  006356  0E00               	movlw	0
 15793  006358  6E37               	movwf	(___fldiv@a+1)^0,c
 15794  00635A  0E80               	movlw	128
 15795  00635C  6E38               	movwf	(___fldiv@a+2)^0,c
 15796  00635E  0E44               	movlw	68
 15797  006360  6E39               	movwf	(___fldiv@a+3)^0,c
 15798  006362  0E00               	movlw	0
 15799  006364  6E15               	movwf	___flmul@a^0,c
 15800  006366  0E00               	movlw	0
 15801  006368  6E16               	movwf	(___flmul@a+1)^0,c
 15802  00636A  0EA0               	movlw	160
 15803  00636C  6E17               	movwf	(___flmul@a+2)^0,c
 15804  00636E  0E40               	movlw	64
 15805  006370  6E18               	movwf	(___flmul@a+3)^0,c
 15806  006372  C054  F001         	movff	ADC_Read@digital,___xxtofl@val
 15807  006376  C055  F002         	movff	ADC_Read@digital+1,___xxtofl@val+1
 15808  00637A  0E00               	movlw	0
 15809  00637C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 15810  00637E  0EFF               	movlw	-1
 15811  006380  6E03               	movwf	(___xxtofl@val+2)^0,c
 15812  006382  6E04               	movwf	(___xxtofl@val+3)^0,c
 15813  006384  0E01               	movlw	1
 15814  006386  ECAC  F02E         	call	___xxtofl
 15815  00638A  C001  F011         	movff	?___xxtofl,___flmul@b
 15816  00638E  C002  F012         	movff	?___xxtofl+1,___flmul@b+1
 15817  006392  C003  F013         	movff	?___xxtofl+2,___flmul@b+2
 15818  006396  C004  F014         	movff	?___xxtofl+3,___flmul@b+3
 15819  00639A  EC6D  F023         	call	___flmul	;wreg free
 15820  00639E  C011  F032         	movff	?___flmul,___fldiv@b
 15821  0063A2  C012  F033         	movff	?___flmul+1,___fldiv@b+1
 15822  0063A6  C013  F034         	movff	?___flmul+2,___fldiv@b+2
 15823  0063AA  C014  F035         	movff	?___flmul+3,___fldiv@b+3
 15824  0063AE  EC9C  F026         	call	___fldiv	;wreg free
 15825  0063B2  C032  F050         	movff	?___fldiv,_ADC_Read$2060
 15826  0063B6  C033  F051         	movff	?___fldiv+1,_ADC_Read$2060+1
 15827  0063BA  C034  F052         	movff	?___fldiv+2,_ADC_Read$2060+2
 15828  0063BE  C035  F053         	movff	?___fldiv+3,_ADC_Read$2060+3
 15829                           
 15830                           ;setting_hardaware/adc.c: 80:     result=digital*5.0/1024.0*100.0;
 15831  0063C2  C050  F011         	movff	_ADC_Read$2060,___flmul@b
 15832  0063C6  C051  F012         	movff	_ADC_Read$2060+1,___flmul@b+1
 15833  0063CA  C052  F013         	movff	_ADC_Read$2060+2,___flmul@b+2
 15834  0063CE  C053  F014         	movff	_ADC_Read$2060+3,___flmul@b+3
 15835  0063D2  0E00               	movlw	0
 15836  0063D4  6E15               	movwf	___flmul@a^0,c
 15837  0063D6  0E00               	movlw	0
 15838  0063D8  6E16               	movwf	(___flmul@a+1)^0,c
 15839  0063DA  0EC8               	movlw	200
 15840  0063DC  6E17               	movwf	(___flmul@a+2)^0,c
 15841  0063DE  0E42               	movlw	66
 15842  0063E0  6E18               	movwf	(___flmul@a+3)^0,c
 15843  0063E2  EC6D  F023         	call	___flmul	;wreg free
 15844  0063E6  C011  F056         	movff	?___flmul,ADC_Read@result
 15845  0063EA  C012  F057         	movff	?___flmul+1,ADC_Read@result+1
 15846  0063EE  C013  F058         	movff	?___flmul+2,ADC_Read@result+2
 15847  0063F2  C014  F059         	movff	?___flmul+3,ADC_Read@result+3
 15848                           
 15849                           ;setting_hardaware/adc.c: 82:     return result;
 15850  0063F6  C056  F04B         	movff	ADC_Read@result,?_ADC_Read
 15851  0063FA  C057  F04C         	movff	ADC_Read@result+1,?_ADC_Read+1
 15852  0063FE  C058  F04D         	movff	ADC_Read@result+2,?_ADC_Read+2
 15853  006402  C059  F04E         	movff	ADC_Read@result+3,?_ADC_Read+3
 15854  006406  0012               	return		;funcret
 15855  006408                     __end_of_ADC_Read:
 15856                           	opt callstack 0
 15857                           
 15858 ;; *************** function ___xxtofl *****************
 15859 ;; Defined at:
 15860 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 15861 ;; Parameters:    Size  Location     Type
 15862 ;;  sign            1    wreg     unsigned char 
 15863 ;;  val             4    0[COMRAM] long 
 15864 ;; Auto vars:     Size  Location     Type
 15865 ;;  sign            1    8[COMRAM] unsigned char 
 15866 ;;  arg             4   10[COMRAM] unsigned long 
 15867 ;;  exp             1    9[COMRAM] unsigned char 
 15868 ;; Return value:  Size  Location     Type
 15869 ;;                  4    0[COMRAM] unsigned char 
 15870 ;; Registers used:
 15871 ;;		wreg, status,2, status,0
 15872 ;; Tracked objects:
 15873 ;;		On entry : 0/0
 15874 ;;		On exit  : 0/0
 15875 ;;		Unchanged: 0/0
 15876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15877 ;;      Params:         4       0       0       0       0       0       0
 15878 ;;      Locals:         6       0       0       0       0       0       0
 15879 ;;      Temps:          4       0       0       0       0       0       0
 15880 ;;      Totals:        14       0       0       0       0       0       0
 15881 ;;Total ram usage:       14 bytes
 15882 ;; Hardware stack levels used:    1
 15883 ;; This function calls:
 15884 ;;		Nothing
 15885 ;; This function is called by:
 15886 ;;		_MQGetGasPercentage
 15887 ;;		_MQ_Read
 15888 ;;		_ADC_Read
 15889 ;;		_logf
 15890 ;;		_powf
 15891 ;; This function uses a non-reentrant model
 15892 ;;
 15893                           
 15894                           	psect	text64
 15895  005D58                     __ptext64:
 15896                           	opt callstack 0
 15897  005D58                     ___xxtofl:
 15898                           	opt callstack 21
 15899                           
 15900                           ;incstack = 0
 15901                           ;___xxtofl@sign stored from wreg
 15902  005D58  6E09               	movwf	___xxtofl@sign^0,c
 15903  005D5A  5009               	movf	___xxtofl@sign^0,w,c
 15904  005D5C  A4D8               	btfss	status,2,c
 15905  005D5E  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 15906  005D60  D01A               	goto	i2l1146
 15907  005D62  C001  F005         	movff	___xxtofl@val,??___xxtofl
 15908  005D66  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 15909  005D6A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 15910  005D6E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 15911  005D72  1E05               	comf	??___xxtofl^0,f,c
 15912  005D74  1E06               	comf	(??___xxtofl+1)^0,f,c
 15913  005D76  1E07               	comf	(??___xxtofl+2)^0,f,c
 15914  005D78  1E08               	comf	(??___xxtofl+3)^0,f,c
 15915  005D7A  2A05               	incf	??___xxtofl^0,f,c
 15916  005D7C  0E00               	movlw	0
 15917  005D7E  2206               	addwfc	(??___xxtofl+1)^0,f,c
 15918  005D80  2207               	addwfc	(??___xxtofl+2)^0,f,c
 15919  005D82  2208               	addwfc	(??___xxtofl+3)^0,f,c
 15920  005D84  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 15921  005D88  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 15922  005D8C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 15923  005D90  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 15924  005D94  D008               	goto	i2l7661
 15925  005D96                     i2l1146:
 15926  005D96  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 15927  005D9A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15928  005D9E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15929  005DA2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15930  005DA6                     i2l7661:
 15931  005DA6  5001               	movf	___xxtofl@val^0,w,c
 15932  005DA8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 15933  005DAA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 15934  005DAC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 15935  005DAE  A4D8               	btfss	status,2,c
 15936  005DB0  D009               	goto	i2l7667
 15937  005DB2  0E00               	movlw	0
 15938  005DB4  6E01               	movwf	?___xxtofl^0,c
 15939  005DB6  0E00               	movlw	0
 15940  005DB8  6E02               	movwf	(?___xxtofl+1)^0,c
 15941  005DBA  0E00               	movlw	0
 15942  005DBC  6E03               	movwf	(?___xxtofl+2)^0,c
 15943  005DBE  0E00               	movlw	0
 15944  005DC0  6E04               	movwf	(?___xxtofl+3)^0,c
 15945  005DC2  0012               	return	
 15946  005DC4                     i2l7667:
 15947  005DC4  0E96               	movlw	150
 15948  005DC6  6E0A               	movwf	___xxtofl@exp^0,c
 15949  005DC8  D006               	goto	i2l7671
 15950  005DCA                     i2l7669:
 15951  005DCA  2A0A               	incf	___xxtofl@exp^0,f,c
 15952  005DCC  90D8               	bcf	status,0,c
 15953  005DCE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 15954  005DD0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 15955  005DD2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 15956  005DD4  320B               	rrcf	___xxtofl@arg^0,f,c
 15957  005DD6                     i2l7671:
 15958  005DD6  0E00               	movlw	0
 15959  005DD8  140B               	andwf	___xxtofl@arg^0,w,c
 15960  005DDA  6E05               	movwf	??___xxtofl^0,c
 15961  005DDC  0E00               	movlw	0
 15962  005DDE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 15963  005DE0  6E06               	movwf	(??___xxtofl+1)^0,c
 15964  005DE2  0E00               	movlw	0
 15965  005DE4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 15966  005DE6  6E07               	movwf	(??___xxtofl+2)^0,c
 15967  005DE8  0EFE               	movlw	254
 15968  005DEA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 15969  005DEC  6E08               	movwf	(??___xxtofl+3)^0,c
 15970  005DEE  5005               	movf	??___xxtofl^0,w,c
 15971  005DF0  1006               	iorwf	(??___xxtofl+1)^0,w,c
 15972  005DF2  1007               	iorwf	(??___xxtofl+2)^0,w,c
 15973  005DF4  1008               	iorwf	(??___xxtofl+3)^0,w,c
 15974  005DF6  B4D8               	btfsc	status,2,c
 15975  005DF8  D00D               	goto	i2l1153
 15976  005DFA  D7E7               	goto	i2l7669
 15977  005DFC                     i2l7673:
 15978  005DFC  2A0A               	incf	___xxtofl@exp^0,f,c
 15979  005DFE  0E01               	movlw	1
 15980  005E00  260B               	addwf	___xxtofl@arg^0,f,c
 15981  005E02  0E00               	movlw	0
 15982  005E04  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 15983  005E06  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 15984  005E08  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 15985  005E0A  90D8               	bcf	status,0,c
 15986  005E0C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 15987  005E0E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 15988  005E10  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 15989  005E12  320B               	rrcf	___xxtofl@arg^0,f,c
 15990  005E14                     i2l1153:
 15991  005E14  0E00               	movlw	0
 15992  005E16  140B               	andwf	___xxtofl@arg^0,w,c
 15993  005E18  6E05               	movwf	??___xxtofl^0,c
 15994  005E1A  0E00               	movlw	0
 15995  005E1C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 15996  005E1E  6E06               	movwf	(??___xxtofl+1)^0,c
 15997  005E20  0E00               	movlw	0
 15998  005E22  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 15999  005E24  6E07               	movwf	(??___xxtofl+2)^0,c
 16000  005E26  0EFF               	movlw	255
 16001  005E28  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 16002  005E2A  6E08               	movwf	(??___xxtofl+3)^0,c
 16003  005E2C  5005               	movf	??___xxtofl^0,w,c
 16004  005E2E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 16005  005E30  1007               	iorwf	(??___xxtofl+2)^0,w,c
 16006  005E32  1008               	iorwf	(??___xxtofl+3)^0,w,c
 16007  005E34  B4D8               	btfsc	status,2,c
 16008  005E36  D007               	goto	i2l7681
 16009  005E38  D7E1               	goto	i2l7673
 16010  005E3A                     i2l7679:
 16011  005E3A  060A               	decf	___xxtofl@exp^0,f,c
 16012  005E3C  90D8               	bcf	status,0,c
 16013  005E3E  360B               	rlcf	___xxtofl@arg^0,f,c
 16014  005E40  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 16015  005E42  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 16016  005E44  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 16017  005E46                     i2l7681:
 16018  005E46  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 16019  005E48  D003               	goto	i2u961_40
 16020  005E4A  0E02               	movlw	2
 16021  005E4C  600A               	cpfslt	___xxtofl@exp^0,c
 16022  005E4E  D7F5               	goto	i2l7679
 16023  005E50                     i2u961_40:
 16024  005E50  A00A               	btfss	___xxtofl@exp^0,0,c
 16025  005E52  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 16026  005E54  90D8               	bcf	status,0,c
 16027  005E56  320A               	rrcf	___xxtofl@exp^0,f,c
 16028  005E58  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 16029  005E5C  6A06               	clrf	(??___xxtofl+1)^0,c
 16030  005E5E  6A07               	clrf	(??___xxtofl+2)^0,c
 16031  005E60  6A08               	clrf	(??___xxtofl+3)^0,c
 16032  005E62  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 16033  005E66  6A07               	clrf	(??___xxtofl+2)^0,c
 16034  005E68  6A06               	clrf	(??___xxtofl+1)^0,c
 16035  005E6A  6A05               	clrf	??___xxtofl^0,c
 16036  005E6C  5005               	movf	??___xxtofl^0,w,c
 16037  005E6E  120B               	iorwf	___xxtofl@arg^0,f,c
 16038  005E70  5006               	movf	(??___xxtofl+1)^0,w,c
 16039  005E72  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 16040  005E74  5007               	movf	(??___xxtofl+2)^0,w,c
 16041  005E76  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 16042  005E78  5008               	movf	(??___xxtofl+3)^0,w,c
 16043  005E7A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 16044  005E7C  5009               	movf	___xxtofl@sign^0,w,c
 16045  005E7E  A4D8               	btfss	status,2,c
 16046  005E80  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 16047  005E82  D001               	goto	i2l7697
 16048  005E84  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 16049  005E86                     i2l7697:
 16050  005E86  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 16051  005E8A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 16052  005E8E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 16053  005E92  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 16054  005E96  0012               	return		;funcret
 16055  005E98                     __end_of___xxtofl:
 16056                           	opt callstack 0
 16057                           
 16058 ;; *************** function ___flmul *****************
 16059 ;; Defined at:
 16060 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 16061 ;; Parameters:    Size  Location     Type
 16062 ;;  b               4   16[COMRAM] unsigned char 
 16063 ;;  a               4   20[COMRAM] unsigned char 
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;  prod            4   35[COMRAM] struct .
 16066 ;;  grs             4   31[COMRAM] unsigned long 
 16067 ;;  temp            2   39[COMRAM] struct .
 16068 ;;  bexp            1   30[COMRAM] unsigned char 
 16069 ;;  aexp            1   29[COMRAM] unsigned char 
 16070 ;;  sign            1   28[COMRAM] unsigned char 
 16071 ;; Return value:  Size  Location     Type
 16072 ;;                  4   16[COMRAM] unsigned char 
 16073 ;; Registers used:
 16074 ;;		wreg, status,2, status,0, prodl, prodh
 16075 ;; Tracked objects:
 16076 ;;		On entry : 0/0
 16077 ;;		On exit  : 0/0
 16078 ;;		Unchanged: 0/0
 16079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16080 ;;      Params:         8       0       0       0       0       0       0
 16081 ;;      Locals:        13       0       0       0       0       0       0
 16082 ;;      Temps:          4       0       0       0       0       0       0
 16083 ;;      Totals:        25       0       0       0       0       0       0
 16084 ;;Total ram usage:       25 bytes
 16085 ;; Hardware stack levels used:    1
 16086 ;; This function calls:
 16087 ;;		Nothing
 16088 ;; This function is called by:
 16089 ;;		_MQ_Read
 16090 ;;		_ADC_Read
 16091 ;;		_efgtoa
 16092 ;;		_logf
 16093 ;;		_powf
 16094 ;;		_scalbnf
 16095 ;;		_sqrtf
 16096 ;; This function uses a non-reentrant model
 16097 ;;
 16098                           
 16099                           	psect	text65
 16100  0046DA                     __ptext65:
 16101                           	opt callstack 0
 16102  0046DA                     ___flmul:
 16103                           	opt callstack 18
 16104                           
 16105                           ;incstack = 0
 16106  0046DA  5014               	movf	(___flmul@b+3)^0,w,c
 16107  0046DC  0B80               	andlw	128
 16108  0046DE  6E1D               	movwf	___flmul@sign^0,c
 16109  0046E0  5014               	movf	(___flmul@b+3)^0,w,c
 16110  0046E2  2414               	addwf	(___flmul@b+3)^0,w,c
 16111  0046E4  6E1F               	movwf	___flmul@bexp^0,c
 16112  0046E6  BE13               	btfsc	(___flmul@b+2)^0,7,c
 16113  0046E8  801F               	bsf	___flmul@bexp^0,0,c
 16114  0046EA  501F               	movf	___flmul@bexp^0,w,c
 16115  0046EC  B4D8               	btfsc	status,2,c
 16116  0046EE  D00D               	goto	i2l9595
 16117  0046F0  281F               	incf	___flmul@bexp^0,w,c
 16118  0046F2  A4D8               	btfss	status,2,c
 16119  0046F4  D008               	goto	i2l9593
 16120  0046F6  0E00               	movlw	0
 16121  0046F8  6E11               	movwf	___flmul@b^0,c
 16122  0046FA  0E00               	movlw	0
 16123  0046FC  6E12               	movwf	(___flmul@b+1)^0,c
 16124  0046FE  0E00               	movlw	0
 16125  004700  6E13               	movwf	(___flmul@b+2)^0,c
 16126  004702  0E00               	movlw	0
 16127  004704  6E14               	movwf	(___flmul@b+3)^0,c
 16128  004706                     i2l9593:
 16129  004706  8E13               	bsf	(___flmul@b+2)^0,7,c
 16130  004708  D008               	goto	i2l9597
 16131  00470A                     i2l9595:
 16132  00470A  0E00               	movlw	0
 16133  00470C  6E11               	movwf	___flmul@b^0,c
 16134  00470E  0E00               	movlw	0
 16135  004710  6E12               	movwf	(___flmul@b+1)^0,c
 16136  004712  0E00               	movlw	0
 16137  004714  6E13               	movwf	(___flmul@b+2)^0,c
 16138  004716  0E00               	movlw	0
 16139  004718  6E14               	movwf	(___flmul@b+3)^0,c
 16140  00471A                     i2l9597:
 16141  00471A  5018               	movf	(___flmul@a+3)^0,w,c
 16142  00471C  0B80               	andlw	128
 16143  00471E  1A1D               	xorwf	___flmul@sign^0,f,c
 16144  004720  5018               	movf	(___flmul@a+3)^0,w,c
 16145  004722  2418               	addwf	(___flmul@a+3)^0,w,c
 16146  004724  6E1E               	movwf	___flmul@aexp^0,c
 16147  004726  BE17               	btfsc	(___flmul@a+2)^0,7,c
 16148  004728  801E               	bsf	___flmul@aexp^0,0,c
 16149  00472A  501E               	movf	___flmul@aexp^0,w,c
 16150  00472C  B4D8               	btfsc	status,2,c
 16151  00472E  D00D               	goto	i2l9613
 16152  004730  281E               	incf	___flmul@aexp^0,w,c
 16153  004732  A4D8               	btfss	status,2,c
 16154  004734  D008               	goto	i2l9611
 16155  004736  0E00               	movlw	0
 16156  004738  6E15               	movwf	___flmul@a^0,c
 16157  00473A  0E00               	movlw	0
 16158  00473C  6E16               	movwf	(___flmul@a+1)^0,c
 16159  00473E  0E00               	movlw	0
 16160  004740  6E17               	movwf	(___flmul@a+2)^0,c
 16161  004742  0E00               	movlw	0
 16162  004744  6E18               	movwf	(___flmul@a+3)^0,c
 16163  004746                     i2l9611:
 16164  004746  8E17               	bsf	(___flmul@a+2)^0,7,c
 16165  004748  D008               	goto	i2l1105
 16166  00474A                     i2l9613:
 16167  00474A  0E00               	movlw	0
 16168  00474C  6E15               	movwf	___flmul@a^0,c
 16169  00474E  0E00               	movlw	0
 16170  004750  6E16               	movwf	(___flmul@a+1)^0,c
 16171  004752  0E00               	movlw	0
 16172  004754  6E17               	movwf	(___flmul@a+2)^0,c
 16173  004756  0E00               	movlw	0
 16174  004758  6E18               	movwf	(___flmul@a+3)^0,c
 16175  00475A                     i2l1105:
 16176  00475A  501E               	movf	___flmul@aexp^0,w,c
 16177  00475C  B4D8               	btfsc	status,2,c
 16178  00475E  D003               	goto	i2u1249_40
 16179  004760  501F               	movf	___flmul@bexp^0,w,c
 16180  004762  A4D8               	btfss	status,2,c
 16181  004764  D009               	goto	i2l9621
 16182  004766                     i2u1249_40:
 16183  004766  0E00               	movlw	0
 16184  004768  6E11               	movwf	?___flmul^0,c
 16185  00476A  0E00               	movlw	0
 16186  00476C  6E12               	movwf	(?___flmul+1)^0,c
 16187  00476E  0E00               	movlw	0
 16188  004770  6E13               	movwf	(?___flmul+2)^0,c
 16189  004772  0E00               	movlw	0
 16190  004774  6E14               	movwf	(?___flmul+3)^0,c
 16191  004776  0012               	return	
 16192  004778                     i2l9621:
 16193  004778  5017               	movf	(___flmul@a+2)^0,w,c
 16194  00477A  0211               	mulwf	___flmul@b^0,c
 16195  00477C  CFF3 F028          	movff	prodl,___flmul@temp
 16196  004780  CFF4 F029          	movff	prodh,___flmul@temp+1
 16197  004784  5028               	movf	___flmul@temp^0,w,c
 16198  004786  6E20               	movwf	___flmul@grs^0,c
 16199  004788  6A21               	clrf	(___flmul@grs+1)^0,c
 16200  00478A  6A22               	clrf	(___flmul@grs+2)^0,c
 16201  00478C  6A23               	clrf	(___flmul@grs+3)^0,c
 16202  00478E  5029               	movf	(___flmul@temp+1)^0,w,c
 16203  004790  6E24               	movwf	___flmul@prod^0,c
 16204  004792  6A25               	clrf	(___flmul@prod+1)^0,c
 16205  004794  6A26               	clrf	(___flmul@prod+2)^0,c
 16206  004796  6A27               	clrf	(___flmul@prod+3)^0,c
 16207  004798  5016               	movf	(___flmul@a+1)^0,w,c
 16208  00479A  0212               	mulwf	(___flmul@b+1)^0,c
 16209  00479C  CFF3 F028          	movff	prodl,___flmul@temp
 16210  0047A0  CFF4 F029          	movff	prodh,___flmul@temp+1
 16211  0047A4  5028               	movf	___flmul@temp^0,w,c
 16212  0047A6  2620               	addwf	___flmul@grs^0,f,c
 16213  0047A8  0E00               	movlw	0
 16214  0047AA  2221               	addwfc	(___flmul@grs+1)^0,f,c
 16215  0047AC  2222               	addwfc	(___flmul@grs+2)^0,f,c
 16216  0047AE  2223               	addwfc	(___flmul@grs+3)^0,f,c
 16217  0047B0  5029               	movf	(___flmul@temp+1)^0,w,c
 16218  0047B2  2624               	addwf	___flmul@prod^0,f,c
 16219  0047B4  0E00               	movlw	0
 16220  0047B6  2225               	addwfc	(___flmul@prod+1)^0,f,c
 16221  0047B8  2226               	addwfc	(___flmul@prod+2)^0,f,c
 16222  0047BA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 16223  0047BC  5015               	movf	___flmul@a^0,w,c
 16224  0047BE  0213               	mulwf	(___flmul@b+2)^0,c
 16225  0047C0  CFF3 F028          	movff	prodl,___flmul@temp
 16226  0047C4  CFF4 F029          	movff	prodh,___flmul@temp+1
 16227  0047C8  5028               	movf	___flmul@temp^0,w,c
 16228  0047CA  2620               	addwf	___flmul@grs^0,f,c
 16229  0047CC  0E00               	movlw	0
 16230  0047CE  2221               	addwfc	(___flmul@grs+1)^0,f,c
 16231  0047D0  2222               	addwfc	(___flmul@grs+2)^0,f,c
 16232  0047D2  2223               	addwfc	(___flmul@grs+3)^0,f,c
 16233  0047D4  5029               	movf	(___flmul@temp+1)^0,w,c
 16234  0047D6  2624               	addwf	___flmul@prod^0,f,c
 16235  0047D8  0E00               	movlw	0
 16236  0047DA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 16237  0047DC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 16238  0047DE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 16239  0047E0  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 16240  0047E4  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 16241  0047E8  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 16242  0047EC  6A20               	clrf	___flmul@grs^0,c
 16243  0047EE  5015               	movf	___flmul@a^0,w,c
 16244  0047F0  0212               	mulwf	(___flmul@b+1)^0,c
 16245  0047F2  CFF3 F028          	movff	prodl,___flmul@temp
 16246  0047F6  CFF4 F029          	movff	prodh,___flmul@temp+1
 16247  0047FA  5028               	movf	___flmul@temp^0,w,c
 16248  0047FC  2620               	addwf	___flmul@grs^0,f,c
 16249  0047FE  5029               	movf	(___flmul@temp+1)^0,w,c
 16250  004800  2221               	addwfc	(___flmul@grs+1)^0,f,c
 16251  004802  0E00               	movlw	0
 16252  004804  2222               	addwfc	(___flmul@grs+2)^0,f,c
 16253  004806  0E00               	movlw	0
 16254  004808  2223               	addwfc	(___flmul@grs+3)^0,f,c
 16255  00480A  5016               	movf	(___flmul@a+1)^0,w,c
 16256  00480C  0211               	mulwf	___flmul@b^0,c
 16257  00480E  CFF3 F028          	movff	prodl,___flmul@temp
 16258  004812  CFF4 F029          	movff	prodh,___flmul@temp+1
 16259  004816  5028               	movf	___flmul@temp^0,w,c
 16260  004818  2620               	addwf	___flmul@grs^0,f,c
 16261  00481A  5029               	movf	(___flmul@temp+1)^0,w,c
 16262  00481C  2221               	addwfc	(___flmul@grs+1)^0,f,c
 16263  00481E  0E00               	movlw	0
 16264  004820  2222               	addwfc	(___flmul@grs+2)^0,f,c
 16265  004822  0E00               	movlw	0
 16266  004824  2223               	addwfc	(___flmul@grs+3)^0,f,c
 16267  004826  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 16268  00482A  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 16269  00482E  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 16270  004832  6A20               	clrf	___flmul@grs^0,c
 16271  004834  5015               	movf	___flmul@a^0,w,c
 16272  004836  0211               	mulwf	___flmul@b^0,c
 16273  004838  CFF3 F028          	movff	prodl,___flmul@temp
 16274  00483C  CFF4 F029          	movff	prodh,___flmul@temp+1
 16275  004840  5028               	movf	___flmul@temp^0,w,c
 16276  004842  2620               	addwf	___flmul@grs^0,f,c
 16277  004844  5029               	movf	(___flmul@temp+1)^0,w,c
 16278  004846  2221               	addwfc	(___flmul@grs+1)^0,f,c
 16279  004848  0E00               	movlw	0
 16280  00484A  2222               	addwfc	(___flmul@grs+2)^0,f,c
 16281  00484C  0E00               	movlw	0
 16282  00484E  2223               	addwfc	(___flmul@grs+3)^0,f,c
 16283  004850  5017               	movf	(___flmul@a+2)^0,w,c
 16284  004852  0212               	mulwf	(___flmul@b+1)^0,c
 16285  004854  CFF3 F028          	movff	prodl,___flmul@temp
 16286  004858  CFF4 F029          	movff	prodh,___flmul@temp+1
 16287  00485C  5028               	movf	___flmul@temp^0,w,c
 16288  00485E  2624               	addwf	___flmul@prod^0,f,c
 16289  004860  5029               	movf	(___flmul@temp+1)^0,w,c
 16290  004862  2225               	addwfc	(___flmul@prod+1)^0,f,c
 16291  004864  0E00               	movlw	0
 16292  004866  2226               	addwfc	(___flmul@prod+2)^0,f,c
 16293  004868  0E00               	movlw	0
 16294  00486A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 16295  00486C  5016               	movf	(___flmul@a+1)^0,w,c
 16296  00486E  0213               	mulwf	(___flmul@b+2)^0,c
 16297  004870  CFF3 F028          	movff	prodl,___flmul@temp
 16298  004874  CFF4 F029          	movff	prodh,___flmul@temp+1
 16299  004878  5028               	movf	___flmul@temp^0,w,c
 16300  00487A  2624               	addwf	___flmul@prod^0,f,c
 16301  00487C  5029               	movf	(___flmul@temp+1)^0,w,c
 16302  00487E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 16303  004880  0E00               	movlw	0
 16304  004882  2226               	addwfc	(___flmul@prod+2)^0,f,c
 16305  004884  0E00               	movlw	0
 16306  004886  2227               	addwfc	(___flmul@prod+3)^0,f,c
 16307  004888  5017               	movf	(___flmul@a+2)^0,w,c
 16308  00488A  0213               	mulwf	(___flmul@b+2)^0,c
 16309  00488C  CFF3 F028          	movff	prodl,___flmul@temp
 16310  004890  CFF4 F029          	movff	prodh,___flmul@temp+1
 16311  004894  5028               	movf	___flmul@temp^0,w,c
 16312  004896  6E19               	movwf	??___flmul^0,c
 16313  004898  5029               	movf	(___flmul@temp+1)^0,w,c
 16314  00489A  6E1A               	movwf	(??___flmul+1)^0,c
 16315  00489C  6A1B               	clrf	(??___flmul+2)^0,c
 16316  00489E  6A1C               	clrf	(??___flmul+3)^0,c
 16317  0048A0  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 16318  0048A4  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 16319  0048A8  C019  F01A         	movff	??___flmul,??___flmul+1
 16320  0048AC  6A19               	clrf	??___flmul^0,c
 16321  0048AE  5019               	movf	??___flmul^0,w,c
 16322  0048B0  2624               	addwf	___flmul@prod^0,f,c
 16323  0048B2  501A               	movf	(??___flmul+1)^0,w,c
 16324  0048B4  2225               	addwfc	(___flmul@prod+1)^0,f,c
 16325  0048B6  501B               	movf	(??___flmul+2)^0,w,c
 16326  0048B8  2226               	addwfc	(___flmul@prod+2)^0,f,c
 16327  0048BA  501C               	movf	(??___flmul+3)^0,w,c
 16328  0048BC  2227               	addwfc	(___flmul@prod+3)^0,f,c
 16329  0048BE  C020  F019         	movff	___flmul@grs,??___flmul
 16330  0048C2  C021  F01A         	movff	___flmul@grs+1,??___flmul+1
 16331  0048C6  C022  F01B         	movff	___flmul@grs+2,??___flmul+2
 16332  0048CA  C023  F01C         	movff	___flmul@grs+3,??___flmul+3
 16333  0048CE  0E19               	movlw	25
 16334  0048D0  D005               	goto	i2u1250_40
 16335  0048D2                     i2u1250_45:
 16336  0048D2  90D8               	bcf	status,0,c
 16337  0048D4  321C               	rrcf	(??___flmul+3)^0,f,c
 16338  0048D6  321B               	rrcf	(??___flmul+2)^0,f,c
 16339  0048D8  321A               	rrcf	(??___flmul+1)^0,f,c
 16340  0048DA  3219               	rrcf	??___flmul^0,f,c
 16341  0048DC                     i2u1250_40:
 16342  0048DC  2EE8               	decfsz	wreg,f,c
 16343  0048DE  D7F9               	goto	i2u1250_45
 16344  0048E0  5019               	movf	??___flmul^0,w,c
 16345  0048E2  2624               	addwf	___flmul@prod^0,f,c
 16346  0048E4  501A               	movf	(??___flmul+1)^0,w,c
 16347  0048E6  2225               	addwfc	(___flmul@prod+1)^0,f,c
 16348  0048E8  501B               	movf	(??___flmul+2)^0,w,c
 16349  0048EA  2226               	addwfc	(___flmul@prod+2)^0,f,c
 16350  0048EC  501C               	movf	(??___flmul+3)^0,w,c
 16351  0048EE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 16352  0048F0  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 16353  0048F4  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 16354  0048F8  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 16355  0048FC  6A20               	clrf	___flmul@grs^0,c
 16356  0048FE  501E               	movf	___flmul@aexp^0,w,c
 16357  004900  C01F  F019         	movff	___flmul@bexp,??___flmul
 16358  004904  6A1A               	clrf	(??___flmul+1)^0,c
 16359  004906  2619               	addwf	??___flmul^0,f,c
 16360  004908  0E00               	movlw	0
 16361  00490A  221A               	addwfc	(??___flmul+1)^0,f,c
 16362  00490C  0E82               	movlw	130
 16363  00490E  2419               	addwf	??___flmul^0,w,c
 16364  004910  6E28               	movwf	___flmul@temp^0,c
 16365  004912  0EFF               	movlw	255
 16366  004914  201A               	addwfc	(??___flmul+1)^0,w,c
 16367  004916  6E29               	movwf	(___flmul@temp+1)^0,c
 16368  004918  D00F               	goto	i2l9669
 16369  00491A                     i2l9663:
 16370  00491A  90D8               	bcf	status,0,c
 16371  00491C  3624               	rlcf	___flmul@prod^0,f,c
 16372  00491E  3625               	rlcf	(___flmul@prod+1)^0,f,c
 16373  004920  3626               	rlcf	(___flmul@prod+2)^0,f,c
 16374  004922  3627               	rlcf	(___flmul@prod+3)^0,f,c
 16375  004924  BE23               	btfsc	(___flmul@grs+3)^0,7,c
 16376  004926  8024               	bsf	___flmul@prod^0,0,c
 16377  004928  90D8               	bcf	status,0,c
 16378  00492A  3620               	rlcf	___flmul@grs^0,f,c
 16379  00492C  3621               	rlcf	(___flmul@grs+1)^0,f,c
 16380  00492E  3622               	rlcf	(___flmul@grs+2)^0,f,c
 16381  004930  3623               	rlcf	(___flmul@grs+3)^0,f,c
 16382  004932  0628               	decf	___flmul@temp^0,f,c
 16383  004934  A0D8               	btfss	status,0,c
 16384  004936  0629               	decf	(___flmul@temp+1)^0,f,c
 16385  004938                     i2l9669:
 16386  004938  AE26               	btfss	(___flmul@prod+2)^0,7,c
 16387  00493A  D7EF               	goto	i2l9663
 16388  00493C  0E00               	movlw	0
 16389  00493E  6E1E               	movwf	___flmul@aexp^0,c
 16390  004940  AE23               	btfss	(___flmul@grs+3)^0,7,c
 16391  004942  D017               	goto	i2l1114
 16392  004944  0EFF               	movlw	255
 16393  004946  1420               	andwf	___flmul@grs^0,w,c
 16394  004948  6E19               	movwf	??___flmul^0,c
 16395  00494A  0EFF               	movlw	255
 16396  00494C  1421               	andwf	(___flmul@grs+1)^0,w,c
 16397  00494E  6E1A               	movwf	(??___flmul+1)^0,c
 16398  004950  0EFF               	movlw	255
 16399  004952  1422               	andwf	(___flmul@grs+2)^0,w,c
 16400  004954  6E1B               	movwf	(??___flmul+2)^0,c
 16401  004956  0E7F               	movlw	127
 16402  004958  1423               	andwf	(___flmul@grs+3)^0,w,c
 16403  00495A  6E1C               	movwf	(??___flmul+3)^0,c
 16404  00495C  5019               	movf	??___flmul^0,w,c
 16405  00495E  101A               	iorwf	(??___flmul+1)^0,w,c
 16406  004960  101B               	iorwf	(??___flmul+2)^0,w,c
 16407  004962  101C               	iorwf	(??___flmul+3)^0,w,c
 16408  004964  B4D8               	btfsc	status,2,c
 16409  004966  D003               	goto	i2l1115
 16410  004968                     i2u1254_40:
 16411  004968  0E01               	movlw	1
 16412  00496A  6E1E               	movwf	___flmul@aexp^0,c
 16413  00496C  D002               	goto	i2l1114
 16414  00496E                     i2l1115:
 16415  00496E  B024               	btfsc	___flmul@prod^0,0,c
 16416  004970  D7FB               	goto	i2u1254_40
 16417  004972                     i2l1114:
 16418  004972  501E               	movf	___flmul@aexp^0,w,c
 16419  004974  B4D8               	btfsc	status,2,c
 16420  004976  D01F               	goto	i2l9689
 16421  004978  0E01               	movlw	1
 16422  00497A  2624               	addwf	___flmul@prod^0,f,c
 16423  00497C  0E00               	movlw	0
 16424  00497E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 16425  004980  2226               	addwfc	(___flmul@prod+2)^0,f,c
 16426  004982  2227               	addwfc	(___flmul@prod+3)^0,f,c
 16427  004984  A027               	btfss	(___flmul@prod+3)^0,0,c
 16428  004986  D017               	goto	i2l9689
 16429  004988  C024  F019         	movff	___flmul@prod,??___flmul
 16430  00498C  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 16431  004990  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 16432  004994  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 16433  004998  341C               	rlcf	(??___flmul+3)^0,w,c
 16434  00499A  321C               	rrcf	(??___flmul+3)^0,f,c
 16435  00499C  321B               	rrcf	(??___flmul+2)^0,f,c
 16436  00499E  321A               	rrcf	(??___flmul+1)^0,f,c
 16437  0049A0  3219               	rrcf	??___flmul^0,f,c
 16438  0049A2  C019  F024         	movff	??___flmul,___flmul@prod
 16439  0049A6  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 16440  0049AA  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 16441  0049AE  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 16442  0049B2  4A28               	infsnz	___flmul@temp^0,f,c
 16443  0049B4  2A29               	incf	(___flmul@temp+1)^0,f,c
 16444  0049B6                     i2l9689:
 16445  0049B6  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 16446  0049B8  D00D               	goto	i2l9693
 16447  0049BA  5029               	movf	(___flmul@temp+1)^0,w,c
 16448  0049BC  E103               	bnz	i2u1258_40
 16449  0049BE  2828               	incf	___flmul@temp^0,w,c
 16450  0049C0  A0D8               	btfss	status,0,c
 16451  0049C2  D008               	goto	i2l9693
 16452  0049C4                     i2u1258_40:
 16453  0049C4  0E00               	movlw	0
 16454  0049C6  6E24               	movwf	___flmul@prod^0,c
 16455  0049C8  0E00               	movlw	0
 16456  0049CA  6E25               	movwf	(___flmul@prod+1)^0,c
 16457  0049CC  0E80               	movlw	128
 16458  0049CE  6E26               	movwf	(___flmul@prod+2)^0,c
 16459  0049D0  0E7F               	movlw	127
 16460  0049D2  D020               	goto	L16
 16461  0049D4                     i2l9693:
 16462  0049D4  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 16463  0049D6  D005               	goto	i2u1259_40
 16464  0049D8  5029               	movf	(___flmul@temp+1)^0,w,c
 16465  0049DA  E10E               	bnz	i2l1122
 16466  0049DC  0428               	decf	___flmul@temp^0,w,c
 16467  0049DE  B0D8               	btfsc	status,0,c
 16468  0049E0  D00B               	goto	i2l1122
 16469  0049E2                     i2u1259_40:
 16470  0049E2  0E00               	movlw	0
 16471  0049E4  6E24               	movwf	___flmul@prod^0,c
 16472  0049E6  0E00               	movlw	0
 16473  0049E8  6E25               	movwf	(___flmul@prod+1)^0,c
 16474  0049EA  0E00               	movlw	0
 16475  0049EC  6E26               	movwf	(___flmul@prod+2)^0,c
 16476  0049EE  0E00               	movlw	0
 16477  0049F0  6E27               	movwf	(___flmul@prod+3)^0,c
 16478  0049F2  0E00               	movlw	0
 16479  0049F4  6E1D               	movwf	___flmul@sign^0,c
 16480  0049F6  D00F               	goto	i2l9705
 16481  0049F8                     i2l1122:
 16482  0049F8  C028  F01F         	movff	___flmul@temp,___flmul@bexp
 16483  0049FC  0EFF               	movlw	255
 16484  0049FE  1624               	andwf	___flmul@prod^0,f,c
 16485  004A00  0EFF               	movlw	255
 16486  004A02  1625               	andwf	(___flmul@prod+1)^0,f,c
 16487  004A04  0E7F               	movlw	127
 16488  004A06  1626               	andwf	(___flmul@prod+2)^0,f,c
 16489  004A08  0E00               	movlw	0
 16490  004A0A  1627               	andwf	(___flmul@prod+3)^0,f,c
 16491  004A0C  B01F               	btfsc	___flmul@bexp^0,0,c
 16492  004A0E  8E26               	bsf	(___flmul@prod+2)^0,7,c
 16493  004A10  90D8               	bcf	status,0,c
 16494  004A12  301F               	rrcf	___flmul@bexp^0,w,c
 16495  004A14                     L16:
 16496  004A14  6E27               	movwf	(___flmul@prod+3)^0,c
 16497  004A16                     i2l9705:
 16498  004A16  501D               	movf	___flmul@sign^0,w,c
 16499  004A18  1227               	iorwf	(___flmul@prod+3)^0,f,c
 16500  004A1A  C024  F011         	movff	___flmul@prod,?___flmul
 16501  004A1E  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 16502  004A22  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 16503  004A26  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 16504  004A2A  0012               	return		;funcret
 16505  004A2C                     __end_of___flmul:
 16506                           	opt callstack 0
 16507                           
 16508 ;; *************** function ___fldiv *****************
 16509 ;; Defined at:
 16510 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 16511 ;; Parameters:    Size  Location     Type
 16512 ;;  b               4   49[COMRAM] unsigned char 
 16513 ;;  a               4   53[COMRAM] unsigned char 
 16514 ;; Auto vars:     Size  Location     Type
 16515 ;;  grs             4   68[COMRAM] unsigned long 
 16516 ;;  rem             4   61[COMRAM] unsigned long 
 16517 ;;  new_exp         2   66[COMRAM] short 
 16518 ;;  aexp            1   73[COMRAM] unsigned char 
 16519 ;;  bexp            1   72[COMRAM] unsigned char 
 16520 ;;  sign            1   65[COMRAM] unsigned char 
 16521 ;; Return value:  Size  Location     Type
 16522 ;;                  4   49[COMRAM] unsigned char 
 16523 ;; Registers used:
 16524 ;;		wreg, status,2, status,0
 16525 ;; Tracked objects:
 16526 ;;		On entry : 0/0
 16527 ;;		On exit  : 0/0
 16528 ;;		Unchanged: 0/0
 16529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16530 ;;      Params:         8       0       0       0       0       0       0
 16531 ;;      Locals:        13       0       0       0       0       0       0
 16532 ;;      Temps:          4       0       0       0       0       0       0
 16533 ;;      Totals:        25       0       0       0       0       0       0
 16534 ;;Total ram usage:       25 bytes
 16535 ;; Hardware stack levels used:    1
 16536 ;; This function calls:
 16537 ;;		Nothing
 16538 ;; This function is called by:
 16539 ;;		_MQGetPercentage
 16540 ;;		_MQ_Read
 16541 ;;		_ADC_Read
 16542 ;;		_efgtoa
 16543 ;;		_logf
 16544 ;;		_powf
 16545 ;; This function uses a non-reentrant model
 16546 ;;
 16547                           
 16548                           	psect	text66
 16549  004D38                     __ptext66:
 16550                           	opt callstack 0
 16551  004D38                     ___fldiv:
 16552                           	opt callstack 18
 16553                           
 16554                           ;incstack = 0
 16555  004D38  5035               	movf	(___fldiv@b+3)^0,w,c
 16556  004D3A  0B80               	andlw	128
 16557  004D3C  6E42               	movwf	___fldiv@sign^0,c
 16558  004D3E  5035               	movf	(___fldiv@b+3)^0,w,c
 16559  004D40  2435               	addwf	(___fldiv@b+3)^0,w,c
 16560  004D42  6E49               	movwf	___fldiv@bexp^0,c
 16561  004D44  BE34               	btfsc	(___fldiv@b+2)^0,7,c
 16562  004D46  8049               	bsf	___fldiv@bexp^0,0,c
 16563  004D48  5049               	movf	___fldiv@bexp^0,w,c
 16564  004D4A  B4D8               	btfsc	status,2,c
 16565  004D4C  D00D               	goto	i2l9929
 16566  004D4E  2849               	incf	___fldiv@bexp^0,w,c
 16567  004D50  A4D8               	btfss	status,2,c
 16568  004D52  D008               	goto	i2l9925
 16569  004D54  0E00               	movlw	0
 16570  004D56  6E32               	movwf	___fldiv@b^0,c
 16571  004D58  0E00               	movlw	0
 16572  004D5A  6E33               	movwf	(___fldiv@b+1)^0,c
 16573  004D5C  0E00               	movlw	0
 16574  004D5E  6E34               	movwf	(___fldiv@b+2)^0,c
 16575  004D60  0E00               	movlw	0
 16576  004D62  6E35               	movwf	(___fldiv@b+3)^0,c
 16577  004D64                     i2l9925:
 16578  004D64  8E34               	bsf	(___fldiv@b+2)^0,7,c
 16579  004D66  D006               	goto	L17
 16580  004D68                     i2l9929:
 16581  004D68  0E00               	movlw	0
 16582  004D6A  6E32               	movwf	___fldiv@b^0,c
 16583  004D6C  0E00               	movlw	0
 16584  004D6E  6E33               	movwf	(___fldiv@b+1)^0,c
 16585  004D70  0E00               	movlw	0
 16586  004D72  6E34               	movwf	(___fldiv@b+2)^0,c
 16587  004D74                     L17:
 16588  004D74  0E00               	movlw	0
 16589  004D76  6E35               	movwf	(___fldiv@b+3)^0,c
 16590  004D78  5039               	movf	(___fldiv@a+3)^0,w,c
 16591  004D7A  0B80               	andlw	128
 16592  004D7C  1A42               	xorwf	___fldiv@sign^0,f,c
 16593  004D7E  5039               	movf	(___fldiv@a+3)^0,w,c
 16594  004D80  2439               	addwf	(___fldiv@a+3)^0,w,c
 16595  004D82  6E4A               	movwf	___fldiv@aexp^0,c
 16596  004D84  BE38               	btfsc	(___fldiv@a+2)^0,7,c
 16597  004D86  804A               	bsf	___fldiv@aexp^0,0,c
 16598  004D88  504A               	movf	___fldiv@aexp^0,w,c
 16599  004D8A  B4D8               	btfsc	status,2,c
 16600  004D8C  D00D               	goto	i2l9949
 16601  004D8E  284A               	incf	___fldiv@aexp^0,w,c
 16602  004D90  A4D8               	btfss	status,2,c
 16603  004D92  D008               	goto	i2l9945
 16604  004D94  0E00               	movlw	0
 16605  004D96  6E36               	movwf	___fldiv@a^0,c
 16606  004D98  0E00               	movlw	0
 16607  004D9A  6E37               	movwf	(___fldiv@a+1)^0,c
 16608  004D9C  0E00               	movlw	0
 16609  004D9E  6E38               	movwf	(___fldiv@a+2)^0,c
 16610  004DA0  0E00               	movlw	0
 16611  004DA2  6E39               	movwf	(___fldiv@a+3)^0,c
 16612  004DA4                     i2l9945:
 16613  004DA4  8E38               	bsf	(___fldiv@a+2)^0,7,c
 16614  004DA6  D006               	goto	L18
 16615  004DA8                     i2l9949:
 16616  004DA8  0E00               	movlw	0
 16617  004DAA  6E36               	movwf	___fldiv@a^0,c
 16618  004DAC  0E00               	movlw	0
 16619  004DAE  6E37               	movwf	(___fldiv@a+1)^0,c
 16620  004DB0  0E00               	movlw	0
 16621  004DB2  6E38               	movwf	(___fldiv@a+2)^0,c
 16622  004DB4                     L18:
 16623  004DB4  0E00               	movlw	0
 16624  004DB6  6E39               	movwf	(___fldiv@a+3)^0,c
 16625  004DB8  5036               	movf	___fldiv@a^0,w,c
 16626  004DBA  1037               	iorwf	(___fldiv@a+1)^0,w,c
 16627  004DBC  1038               	iorwf	(___fldiv@a+2)^0,w,c
 16628  004DBE  1039               	iorwf	(___fldiv@a+3)^0,w,c
 16629  004DC0  A4D8               	btfss	status,2,c
 16630  004DC2  D017               	goto	i2l9963
 16631  004DC4  0E00               	movlw	0
 16632  004DC6  6E32               	movwf	___fldiv@b^0,c
 16633  004DC8  0E00               	movlw	0
 16634  004DCA  6E33               	movwf	(___fldiv@b+1)^0,c
 16635  004DCC  0E00               	movlw	0
 16636  004DCE  6E34               	movwf	(___fldiv@b+2)^0,c
 16637  004DD0  0E00               	movlw	0
 16638  004DD2  6E35               	movwf	(___fldiv@b+3)^0,c
 16639  004DD4  0E80               	movlw	128
 16640  004DD6  1234               	iorwf	(___fldiv@b+2)^0,f,c
 16641  004DD8  0E7F               	movlw	127
 16642  004DDA  1235               	iorwf	(___fldiv@b+3)^0,f,c
 16643  004DDC                     i2l9957:
 16644  004DDC  5042               	movf	___fldiv@sign^0,w,c
 16645  004DDE  1235               	iorwf	(___fldiv@b+3)^0,f,c
 16646  004DE0  C032  F032         	movff	___fldiv@b,?___fldiv
 16647  004DE4  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 16648  004DE8  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 16649  004DEC  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 16650  004DF0  0012               	return	
 16651  004DF2                     i2l9963:
 16652  004DF2  5049               	movf	___fldiv@bexp^0,w,c
 16653  004DF4  A4D8               	btfss	status,2,c
 16654  004DF6  D009               	goto	i2l9971
 16655  004DF8  0E00               	movlw	0
 16656  004DFA  6E32               	movwf	?___fldiv^0,c
 16657  004DFC  0E00               	movlw	0
 16658  004DFE  6E33               	movwf	(?___fldiv+1)^0,c
 16659  004E00  0E00               	movlw	0
 16660  004E02  6E34               	movwf	(?___fldiv+2)^0,c
 16661  004E04  0E00               	movlw	0
 16662  004E06  6E35               	movwf	(?___fldiv+3)^0,c
 16663  004E08  0012               	return	
 16664  004E0A                     i2l9971:
 16665  004E0A  504A               	movf	___fldiv@aexp^0,w,c
 16666  004E0C  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 16667  004E10  6A3B               	clrf	(??___fldiv+1)^0,c
 16668  004E12  5E3A               	subwf	??___fldiv^0,f,c
 16669  004E14  0E00               	movlw	0
 16670  004E16  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 16671  004E18  0E7F               	movlw	127
 16672  004E1A  243A               	addwf	??___fldiv^0,w,c
 16673  004E1C  6E43               	movwf	___fldiv@new_exp^0,c
 16674  004E1E  0E00               	movlw	0
 16675  004E20  203B               	addwfc	(??___fldiv+1)^0,w,c
 16676  004E22  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 16677  004E24  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 16678  004E28  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 16679  004E2C  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 16680  004E30  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 16681  004E34  0E00               	movlw	0
 16682  004E36  6E32               	movwf	___fldiv@b^0,c
 16683  004E38  0E00               	movlw	0
 16684  004E3A  6E33               	movwf	(___fldiv@b+1)^0,c
 16685  004E3C  0E00               	movlw	0
 16686  004E3E  6E34               	movwf	(___fldiv@b+2)^0,c
 16687  004E40  0E00               	movlw	0
 16688  004E42  6E35               	movwf	(___fldiv@b+3)^0,c
 16689  004E44  0E00               	movlw	0
 16690  004E46  6E45               	movwf	___fldiv@grs^0,c
 16691  004E48  0E00               	movlw	0
 16692  004E4A  6E46               	movwf	(___fldiv@grs+1)^0,c
 16693  004E4C  0E00               	movlw	0
 16694  004E4E  6E47               	movwf	(___fldiv@grs+2)^0,c
 16695  004E50  0E00               	movlw	0
 16696  004E52  6E48               	movwf	(___fldiv@grs+3)^0,c
 16697  004E54  0E00               	movlw	0
 16698  004E56  6E4A               	movwf	___fldiv@aexp^0,c
 16699  004E58  D028               	goto	i2l1075
 16700  004E5A                     i2l9981:
 16701  004E5A  504A               	movf	___fldiv@aexp^0,w,c
 16702  004E5C  B4D8               	btfsc	status,2,c
 16703  004E5E  D011               	goto	i2l9989
 16704  004E60  90D8               	bcf	status,0,c
 16705  004E62  363E               	rlcf	___fldiv@rem^0,f,c
 16706  004E64  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 16707  004E66  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 16708  004E68  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 16709  004E6A  90D8               	bcf	status,0,c
 16710  004E6C  3632               	rlcf	___fldiv@b^0,f,c
 16711  004E6E  3633               	rlcf	(___fldiv@b+1)^0,f,c
 16712  004E70  3634               	rlcf	(___fldiv@b+2)^0,f,c
 16713  004E72  3635               	rlcf	(___fldiv@b+3)^0,f,c
 16714  004E74  BE48               	btfsc	(___fldiv@grs+3)^0,7,c
 16715  004E76  8032               	bsf	___fldiv@b^0,0,c
 16716  004E78  90D8               	bcf	status,0,c
 16717  004E7A  3645               	rlcf	___fldiv@grs^0,f,c
 16718  004E7C  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 16719  004E7E  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 16720  004E80  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 16721  004E82                     i2l9989:
 16722  004E82  5036               	movf	___fldiv@a^0,w,c
 16723  004E84  5C3E               	subwf	___fldiv@rem^0,w,c
 16724  004E86  5037               	movf	(___fldiv@a+1)^0,w,c
 16725  004E88  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 16726  004E8A  5038               	movf	(___fldiv@a+2)^0,w,c
 16727  004E8C  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 16728  004E8E  5039               	movf	(___fldiv@a+3)^0,w,c
 16729  004E90  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 16730  004E92  A0D8               	btfss	status,0,c
 16731  004E94  D009               	goto	i2l9995
 16732  004E96  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 16733  004E98  5036               	movf	___fldiv@a^0,w,c
 16734  004E9A  5E3E               	subwf	___fldiv@rem^0,f,c
 16735  004E9C  5037               	movf	(___fldiv@a+1)^0,w,c
 16736  004E9E  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 16737  004EA0  5038               	movf	(___fldiv@a+2)^0,w,c
 16738  004EA2  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 16739  004EA4  5039               	movf	(___fldiv@a+3)^0,w,c
 16740  004EA6  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 16741  004EA8                     i2l9995:
 16742  004EA8  2A4A               	incf	___fldiv@aexp^0,f,c
 16743  004EAA                     i2l1075:
 16744  004EAA  0E19               	movlw	25
 16745  004EAC  644A               	cpfsgt	___fldiv@aexp^0,c
 16746  004EAE  D7D5               	goto	i2l9981
 16747  004EB0  503E               	movf	___fldiv@rem^0,w,c
 16748  004EB2  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 16749  004EB4  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 16750  004EB6  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 16751  004EB8  B4D8               	btfsc	status,2,c
 16752  004EBA  D011               	goto	i2l10007
 16753  004EBC  8045               	bsf	___fldiv@grs^0,0,c
 16754  004EBE  D00F               	goto	i2l10007
 16755  004EC0                     i2l10001:
 16756  004EC0  90D8               	bcf	status,0,c
 16757  004EC2  3632               	rlcf	___fldiv@b^0,f,c
 16758  004EC4  3633               	rlcf	(___fldiv@b+1)^0,f,c
 16759  004EC6  3634               	rlcf	(___fldiv@b+2)^0,f,c
 16760  004EC8  3635               	rlcf	(___fldiv@b+3)^0,f,c
 16761  004ECA  BE48               	btfsc	(___fldiv@grs+3)^0,7,c
 16762  004ECC  8032               	bsf	___fldiv@b^0,0,c
 16763  004ECE  90D8               	bcf	status,0,c
 16764  004ED0  3645               	rlcf	___fldiv@grs^0,f,c
 16765  004ED2  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 16766  004ED4  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 16767  004ED6  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 16768  004ED8  0643               	decf	___fldiv@new_exp^0,f,c
 16769  004EDA  A0D8               	btfss	status,0,c
 16770  004EDC  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 16771  004EDE                     i2l10007:
 16772  004EDE  AE34               	btfss	(___fldiv@b+2)^0,7,c
 16773  004EE0  D7EF               	goto	i2l10001
 16774  004EE2  0E00               	movlw	0
 16775  004EE4  6E4A               	movwf	___fldiv@aexp^0,c
 16776  004EE6  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 16777  004EE8  D017               	goto	i2l1086
 16778  004EEA  0EFF               	movlw	255
 16779  004EEC  1445               	andwf	___fldiv@grs^0,w,c
 16780  004EEE  6E3A               	movwf	??___fldiv^0,c
 16781  004EF0  0EFF               	movlw	255
 16782  004EF2  1446               	andwf	(___fldiv@grs+1)^0,w,c
 16783  004EF4  6E3B               	movwf	(??___fldiv+1)^0,c
 16784  004EF6  0EFF               	movlw	255
 16785  004EF8  1447               	andwf	(___fldiv@grs+2)^0,w,c
 16786  004EFA  6E3C               	movwf	(??___fldiv+2)^0,c
 16787  004EFC  0E7F               	movlw	127
 16788  004EFE  1448               	andwf	(___fldiv@grs+3)^0,w,c
 16789  004F00  6E3D               	movwf	(??___fldiv+3)^0,c
 16790  004F02  503A               	movf	??___fldiv^0,w,c
 16791  004F04  103B               	iorwf	(??___fldiv+1)^0,w,c
 16792  004F06  103C               	iorwf	(??___fldiv+2)^0,w,c
 16793  004F08  103D               	iorwf	(??___fldiv+3)^0,w,c
 16794  004F0A  B4D8               	btfsc	status,2,c
 16795  004F0C  D003               	goto	i2l1087
 16796  004F0E                     i2u1324_40:
 16797  004F0E  0E01               	movlw	1
 16798  004F10  6E4A               	movwf	___fldiv@aexp^0,c
 16799  004F12  D002               	goto	i2l1086
 16800  004F14                     i2l1087:
 16801  004F14  B032               	btfsc	___fldiv@b^0,0,c
 16802  004F16  D7FB               	goto	i2u1324_40
 16803  004F18                     i2l1086:
 16804  004F18  504A               	movf	___fldiv@aexp^0,w,c
 16805  004F1A  B4D8               	btfsc	status,2,c
 16806  004F1C  D01F               	goto	i2l10027
 16807  004F1E  0E01               	movlw	1
 16808  004F20  2632               	addwf	___fldiv@b^0,f,c
 16809  004F22  0E00               	movlw	0
 16810  004F24  2233               	addwfc	(___fldiv@b+1)^0,f,c
 16811  004F26  2234               	addwfc	(___fldiv@b+2)^0,f,c
 16812  004F28  2235               	addwfc	(___fldiv@b+3)^0,f,c
 16813  004F2A  A035               	btfss	(___fldiv@b+3)^0,0,c
 16814  004F2C  D017               	goto	i2l10027
 16815  004F2E  C032  F03A         	movff	___fldiv@b,??___fldiv
 16816  004F32  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 16817  004F36  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 16818  004F3A  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 16819  004F3E  343D               	rlcf	(??___fldiv+3)^0,w,c
 16820  004F40  323D               	rrcf	(??___fldiv+3)^0,f,c
 16821  004F42  323C               	rrcf	(??___fldiv+2)^0,f,c
 16822  004F44  323B               	rrcf	(??___fldiv+1)^0,f,c
 16823  004F46  323A               	rrcf	??___fldiv^0,f,c
 16824  004F48  C03A  F032         	movff	??___fldiv,___fldiv@b
 16825  004F4C  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 16826  004F50  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 16827  004F54  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 16828  004F58  4A43               	infsnz	___fldiv@new_exp^0,f,c
 16829  004F5A  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 16830  004F5C                     i2l10027:
 16831  004F5C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 16832  004F5E  D010               	goto	i2l10031
 16833  004F60  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 16834  004F62  E103               	bnz	i2u1328_40
 16835  004F64  2843               	incf	___fldiv@new_exp^0,w,c
 16836  004F66  A0D8               	btfss	status,0,c
 16837  004F68  D00B               	goto	i2l10031
 16838  004F6A                     i2u1328_40:
 16839  004F6A  0E00               	movlw	0
 16840  004F6C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 16841  004F6E  6843               	setf	___fldiv@new_exp^0,c
 16842  004F70  0E00               	movlw	0
 16843  004F72  6E32               	movwf	___fldiv@b^0,c
 16844  004F74  0E00               	movlw	0
 16845  004F76  6E33               	movwf	(___fldiv@b+1)^0,c
 16846  004F78  0E00               	movlw	0
 16847  004F7A  6E34               	movwf	(___fldiv@b+2)^0,c
 16848  004F7C  0E00               	movlw	0
 16849  004F7E  6E35               	movwf	(___fldiv@b+3)^0,c
 16850  004F80                     i2l10031:
 16851  004F80  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 16852  004F82  D005               	goto	i2u1329_40
 16853  004F84  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 16854  004F86  E111               	bnz	i2l10035
 16855  004F88  0443               	decf	___fldiv@new_exp^0,w,c
 16856  004F8A  B0D8               	btfsc	status,0,c
 16857  004F8C  D00E               	goto	i2l10035
 16858  004F8E                     i2u1329_40:
 16859  004F8E  0E00               	movlw	0
 16860  004F90  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 16861  004F92  0E00               	movlw	0
 16862  004F94  6E43               	movwf	___fldiv@new_exp^0,c
 16863  004F96  0E00               	movlw	0
 16864  004F98  6E32               	movwf	___fldiv@b^0,c
 16865  004F9A  0E00               	movlw	0
 16866  004F9C  6E33               	movwf	(___fldiv@b+1)^0,c
 16867  004F9E  0E00               	movlw	0
 16868  004FA0  6E34               	movwf	(___fldiv@b+2)^0,c
 16869  004FA2  0E00               	movlw	0
 16870  004FA4  6E35               	movwf	(___fldiv@b+3)^0,c
 16871  004FA6  0E00               	movlw	0
 16872  004FA8  6E42               	movwf	___fldiv@sign^0,c
 16873  004FAA                     i2l10035:
 16874  004FAA  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 16875  004FAE  A049               	btfss	___fldiv@bexp^0,0,c
 16876  004FB0  D002               	goto	i2l10041
 16877  004FB2  8E34               	bsf	(___fldiv@b+2)^0,7,c
 16878  004FB4  D001               	goto	i2l10043
 16879  004FB6                     i2l10041:
 16880  004FB6  9E34               	bcf	(___fldiv@b+2)^0,7,c
 16881  004FB8                     i2l10043:
 16882  004FB8  90D8               	bcf	status,0,c
 16883  004FBA  3049               	rrcf	___fldiv@bexp^0,w,c
 16884  004FBC  6E35               	movwf	(___fldiv@b+3)^0,c
 16885  004FBE  D70E               	goto	i2l9957
 16886  004FC0                     __end_of___fldiv:
 16887                           	opt callstack 0
 16888                           
 16889                           	psect	rparam
 16890  0000                     
 16891                           	psect	temp
 16892  00007E                     btemp:
 16893                           	opt callstack 0
 16894  00007E                     	ds	1
 16895  0000                     int$flags	set	btemp
 16896  0000                     wtemp8	set	btemp+1
 16897  0000                     ttemp5	set	btemp+1
 16898  0000                     ttemp6	set	btemp+4
 16899  0000                     ttemp7	set	btemp+8
 16900                           tosu	equ	0xFFF
 16901                           tosh	equ	0xFFE
 16902                           tosl	equ	0xFFD
 16903                           stkptr	equ	0xFFC
 16904                           pclatu	equ	0xFFB
 16905                           pclath	equ	0xFFA
 16906                           pcl	equ	0xFF9
 16907                           tblptru	equ	0xFF8
 16908                           tblptrh	equ	0xFF7
 16909                           tblptrl	equ	0xFF6
 16910                           tablat	equ	0xFF5
 16911                           prodh	equ	0xFF4
 16912                           prodl	equ	0xFF3
 16913                           indf0	equ	0xFEF
 16914                           postinc0	equ	0xFEE
 16915                           postdec0	equ	0xFED
 16916                           preinc0	equ	0xFEC
 16917                           plusw0	equ	0xFEB
 16918                           fsr0h	equ	0xFEA
 16919                           fsr0l	equ	0xFE9
 16920                           wreg	equ	0xFE8
 16921                           indf1	equ	0xFE7
 16922                           postinc1	equ	0xFE6
 16923                           postdec1	equ	0xFE5
 16924                           preinc1	equ	0xFE4
 16925                           plusw1	equ	0xFE3
 16926                           fsr1h	equ	0xFE2
 16927                           fsr1l	equ	0xFE1
 16928                           bsr	equ	0xFE0
 16929                           indf2	equ	0xFDF
 16930                           postinc2	equ	0xFDE
 16931                           postdec2	equ	0xFDD
 16932                           preinc2	equ	0xFDC
 16933                           plusw2	equ	0xFDB
 16934                           fsr2h	equ	0xFDA
 16935                           fsr2l	equ	0xFD9
 16936                           status	equ	0xFD8


Data Sizes:
    Strings     53
    Constant    148
    Data        57
    BSS         246
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     125
    BANK0           128    124     124
    BANK1           256    256     256
    BANK2           256     33     236
    BANK3           256     19     119
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_18(CODE[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), r(BANK3[100]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), r(BANK3[100]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[11]), STR_3(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    S1597_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    memset@dest	PTR void  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    memset@s	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[11]), STR_3(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[11]), STR_3(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[11]), STR_3(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), r(BANK3[100]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), r(BANK3[100]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK2[2]), stoa@nuls(COMRAM[7]), r(BANK3[100]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    Send2Lcd@Lcd	PTR const unsigned char  size(2) Largest target is 100
		 -> r(BANK3[100]), STR_2(CODE[6]), STR_1(CODE[8]), 

    MQ_Read@values	PTR  size(2) Largest target is 12
		 -> value(BANK2[12]), 

    MQGetPercentage@pcurve	PTR  size(2) Largest target is 12
		 -> SmokeCurve(BANK2[12]), COCurve(BANK2[12]), LPGCurve(BANK2[12]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK2[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->___fltol
    i2_Send2Lcd->i2_Cmd
    i2_Send2Lcd->i2_Data
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _MQGetPercentage->___fltol
    _powf->_sqrtf
    _sqrtf->___flge
    ___flge->___flsub
    _scalbnf->___flmul
    _logf->___fldiv
    ___flsub->___flmul
    ___fltol->_powf
    _LCD_clear->i2_Cmd
    _ADC_Read->___fldiv
    ___flmul->___fladd
    ___fldiv->___flsub

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _MQ_Read->_MQGetGasPercentage
    _MQGetGasPercentage->_MQGetPercentage
    _MQGetPercentage->___fltol
    _powf->_logf
    ___fltol->_powf

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _MQGetPercentage->_powf
    ___fltol->_powf

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    _Hi_ISR->_sprintf

Critical Paths under _main in BANK3

    _SYSTEM_Initialize->_LCD_init
    _LCD_init->_Send2Lcd
    _Send2Lcd->_Cmd
    _Send2Lcd->_Data

Critical Paths under _Lo_ISR in BANK3

    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2212
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2212
                     _ADC_Initialize
               _INTERRUPT_Initialize
                           _LCD_init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                        _buzzer_init
 ---------------------------------------------------------------------------------
 (2) _buzzer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             1     1      0    2212
                                             18 BANK3      1     1      0
                                _Cmd
                           _Send2Lcd
 ---------------------------------------------------------------------------------
 (3) _Send2Lcd                                             4     2      2    1472
                                             14 BANK3      4     2      2
                                _Cmd
                               _Data
 ---------------------------------------------------------------------------------
 (4) _Data                                                 3     1      2     179
                                             11 BANK3      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Cmd                                                  3     1      2     740
                                             11 BANK3      3     1      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Lo_ISR                                               5     5      0    1248
                                              6 BANK3      5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (6) _MyusartRead                                          0     0      0    1248
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1193
                                              0 BANK3      6     2      4
 ---------------------------------------------------------------------------------
 (7) _UART_Write                                           1     1      0      55
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Hi_ISR                                              17    17      0  437631
                                            250 BANK1      6     6      0
                                             22 BANK2     11    11      0
                           _ADC_Read
                          _LCD_clear
                            _MQ_Read
                            ___fltol
                             _memset
                            _sprintf
                         i2_Send2Lcd
 ---------------------------------------------------------------------------------
 (9) i2_Send2Lcd                                           4     2      2     333
                                              3 COMRAM     4     2      2
                              i2_Cmd
                             i2_Data
 ---------------------------------------------------------------------------------
 (10) i2_Data                                              3     1      2      66
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (9) _sprintf                                             22    10     12  112739
                                              0 BANK2     22    10     12
                           _ADC_Read (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (10) _vfprintf                                            8     2      6  111809
                                            122 BANK0      2     2      0
                                            244 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (11) _vfpfcnvrt                                          47    41      6  111035
                                             90 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (12) _strncmp                                            11     5      6     768
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (12) _stoa                                               22    18      4    3446
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (12) _efgtoa                                             68    61      7   88061
                                             78 BANK0     12     5      7
                                            188 BANK1     56    56      0
                            ___awdiv
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
                          i2___awmod
 ---------------------------------------------------------------------------------
 (13) i2___awmod                                           6     2      4     698
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _tolower                                             8     6      2    1372
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (13) _isupper                                             6     4      2     649
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) _strcpy                                             10     6      4    1248
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (13) _floorf                                             20    16      4     890
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fpclassifyf                                      14    10      4     482
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___fleq                                             12     4      8     912
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (13) ___awdiv                                             8     4      4     842
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) _dtoa                                               36    26     10    9626
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (13) _pad                                                11     5      6    6592
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (13) _strlen                                              4     2      2     392
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _fputs                                               7     3      4    2530
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (13) _fputc                                               9     5      4    1912
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (14) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (13) _abs                                                 4     2      2     232
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (13) ___aomod                                            18     2     16     818
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (13) ___aodiv                                            26    10     16     842
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (12) _atoi                                               15    13      2    2122
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (13) _isspace                                             7     5      2     321
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (12) _isdigit                                             6     4      2     331
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     698
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) _memset                                              12     6      6    1557
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (9) _MQ_Read                                             14    12      2  291719
                                            106 BANK0     14    12      2
                 _MQGetGasPercentage
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (10) _MQGetGasPercentage                                 10     4      6  261533
                                             96 BANK0     10     4      6
                    _MQGetPercentage
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (11) _MQGetPercentage                                    18    12      6  259395
                                             78 BANK0     18    12      6
                            ___fladd
                            ___fldiv
                            ___flsub
                            ___fltol
                               _logf
                               _powf
 ---------------------------------------------------------------------------------
 (12) _powf                                              205   197      8  145223
                                            110 COMRAM     9     9      0
                                             66 BANK0      8     0      8
                                              0 BANK1    188   188      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                              _fabsf
                               _logf (ARG)
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (13) _sqrtf                                              49    45      4   39656
                                             61 COMRAM    49    45      4
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (14) _nanf                                                8     4      4     124
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) ___flge                                             12     4      8    1856
                                             49 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (13) _scalbnf                                            18    12      6   22644
                                             41 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (13) _fabsf                                               8     4      4     161
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) ___flneg                                             4     0      4     408
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (12) _logf                                               76    72      4   68662
                                             74 COMRAM    10     6      4
                                              0 BANK0     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (13) ___flsub                                             8     0      8   22582
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___fladd                                            16     8      8   14070
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (13) ___fltol                                            10     6      4    1110
                                            119 COMRAM     6     6      0
                                             74 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                               _logf (ARG)
                               _powf (ARG)
 ---------------------------------------------------------------------------------
 (9) _LCD_clear                                            0     0      0     101
                              i2_Cmd
 ---------------------------------------------------------------------------------
 (10) i2_Cmd                                               3     1      2     101
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (9) _ADC_Read                                            15    11      4   29928
                                             74 COMRAM    15    11      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (10) ___xxtofl                                           14    10      4    1106
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___flmul                                            25    17      8   21724
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fldiv                                            25    17      8    6800
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _LCD_init
       _Cmd
       _Send2Lcd
         _Cmd
         _Data
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _buzzer_init

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod

 _Hi_ISR (ROOT)
   _ADC_Read
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _LCD_clear
     i2_Cmd
   _MQ_Read
     _MQGetGasPercentage
       _MQGetPercentage
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           _logf (ARG)
             ___fladd
             ___fldiv
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _powf (ARG)
             ___fladd
             ___fldiv
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _fabsf
             _logf (ARG)
               ___fladd
               ___fldiv
                 ___fladd (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl
             _scalbnf (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             _sqrtf (ARG)
               ___fladd
               ___flge
                 ___fladd (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               _nanf
         _logf
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl
         _powf
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _fabsf
           _logf (ARG)
             ___fladd
             ___fldiv
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _scalbnf (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
           _sqrtf (ARG)
             ___fladd
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             _nanf
       ___xxtofl
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   ___fltol
     ___fladd (ARG)
     ___fldiv (ARG)
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
     _logf (ARG)
       ___fladd
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _powf (ARG)
       ___fladd
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
       ___xxtofl
       _fabsf
       _logf (ARG)
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _scalbnf (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
       _sqrtf (ARG)
         ___fladd
         ___flge
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         _nanf
   _memset
   _sprintf
     _ADC_Read (ARG)
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             _logf (ARG)
               ___fladd
               ___fldiv
                 ___fladd (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl
             _powf (ARG)
               ___fladd
               ___fldiv
                 ___fladd (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl
               _fabsf
               _logf (ARG)
                 ___fladd
                 ___fldiv
                   ___fladd (ARG)
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___flmul (ARG)
                       ___fladd (ARG)
                       ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl
               _scalbnf (ARG)
                 ___flmul
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               _sqrtf (ARG)
                 ___fladd
                 ___flge
                   ___fladd (ARG)
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___flmul (ARG)
                       ___fladd (ARG)
                       ___xxtofl (ARG)
                 ___flmul
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 _nanf
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
           i2___awmod
         _fputc
           _putch
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
           _strlen
         _strncmp
         _tolower
           _isupper
   i2_Send2Lcd
     i2_Cmd
     i2_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     13      77      11       46.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100     21      EC       9       92.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7C      7C       5       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7D       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     35C      15        0.0%
DATA                 0      0     35C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 22 10:28:15 2019

                   ___fldiv@aexp 004A                     ___fldiv@bexp 0049  
                              _r 0300                     ___fldiv@sign 0042  
                             _L1 0659                               _L2 0655  
                             _L3 0651                               _L4 064D  
                             _L5 0649                               _L6 0645  
                             _P1 0641                               _P2 063D  
                             _P3 0639                               _P4 0635  
                             _P5 0631                     ___awdiv@sign 0006  
                             _Ro 0299                               _bp 0681  
                             _co 0214                               _cp 061D  
                             bsr 000FE0              ___wmul@multiplicand 0003  
                    __CFG_BORV$3 000000                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l254 70FC  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                            _Lg1 0675                              _Lg2 0671  
                            _Lg3 066D                              _Lg4 0669  
                            _Cmd 6EE8                              _lg2 062D  
                            _abs 6E86                              _pad 67A2  
                            _lpg 0218                              _ovt 0621  
                   ___awmod@sign 0369                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ___flmul@aexp 001E  
                   ___flmul@bexp 001F                     ___flmul@sign 001D  
                   ___flmul@temp 0028                      _Hi_ISR$2061 01FA  
                    _Hi_ISR$2062 01FC                     ___flmul@prod 0024  
                    _Hi_ISR$2063 01FE                  _MQGetPercentage 621A  
                   __CFG_LVP$OFF 000000                             ?_Cmd 036F  
                   ___fltol@exp1 007D                     __CFG_WDT$OFF 000000  
                           ?_abs 0013                             ?_pad 0011  
                           STR_1 06A9                             STR_2 06B1  
                           STR_3 06A0                             STR_4 0695  
                           STR_5 06B7                             STR_6 06BF  
                           STR_9 06BB                             _CREN 007D5C  
                           _LATD 000F8C                             _RCIF 007CF5  
                           _TMR1 000FCE                     __CFG_WDTPS$1 000000  
                           _Data 6EB8                             abs@a 0013  
                           _dbuf 022C                             _cp_h 0691  
                           _cp_l 068D                             _dp_h 0609  
                           _dp_l 0601                             _atoi 5C18  
                           _main 70F8                             _dtoa 4FC0  
                           _nanf 7052                             _huge 0661  
                           _logf 36F0                             _prec 0222  
                           _nout 021E                             _powf 06CC  
                           pad@i 0018                  __end_of_MQ_Read 5414  
                           pad@p 0015                             _tiny 065D  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001A  
                           fsr2l 000FD9                             _stoa 5FCA  
                           btemp 007E                 __end_of_ADC_Read 6408  
                  ___fpclassifyf 64D8                             prodh 000FF4  
                           prodl 000FF3                             start 0058  
                ___fldiv@new_exp 0043               __size_of_LCD_clear 000E  
                   _tolower$1787 000D                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                            ??_Cmd 0371  
                          ??_abs 0015                            ??_pad 0017  
                          ?_Data 036F   __size_of_OSCILLATOR_Initialize 0008  
               __end_of_LCD_init 69C6    __end_of_OSCILLATOR_Initialize 70F8  
                          l11361 6AEE                            l11357 6ABA  
                  ___fltol@sign1 007C                  __end_of___aodiv 5C18  
                          ?_atoi 0008                  __end_of___fladd 4D38  
                          ?_main 0001                            ?_dtoa 001C  
                          ?_nanf 0001                  __end_of___aomod 621A  
                          ?_logf 004B                  __end_of___fldiv 4FC0  
                __end_of___awdiv 694A                  __end_of___flneg 6FD4  
                          _ADRES 000FC3                            STR_10 06C3  
                          STR_13 06C7                            STR_15 06C7  
                          STR_18 06A8                  __end_of___awmod 6A38  
                __end_of___flmul 4A2C                            ?_powf 00C2  
                __end_of___flsub 6DA2                  __end_of___fltol 6660  
                          ?_stoa 000A                  ___awdiv@divisor 0003  
                          u15310 6ADA                            u15320 6B0E  
                          u15317 6AD0                            u15327 6B04  
                          _IRCF0 007E9C                            _IRCF1 007E9D  
                          _IRCF2 007E9E                            u15707 6952  
                          u15717 696C                            u15727 699E  
                          u15737 6EC2                            u15747 6ECC  
                          u15757 6EDC                            u15767 6EF2  
                          u15777 6EFC                            u15787 6F0C  
                          i1l100 0040                            i2l161 5212  
                          i2l321 503C                            i2l401 3378  
                          i2l308 67D2                            i2l167 6346  
                          i2l319 5034                            i2l265 5792  
                          i2l375 3080                            i2l439 6030  
                          i2l756 649C                  ___awdiv@counter 0005  
                          _RCREG 000FAE                     vfpfcnvrt@fmt 00DC  
                          i2_Cmd 6FD4                            _TRISA 000F92  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TXREG 000FAD                    __CFG_PWRT$OFF 000000  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000       __end_of_MQGetGasPercentage 5AD0  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                    ?_UART_Write 0001                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                          _lg2_h 0629                            _lg2_l 0625  
                          _fabsf 6E52                   __CFG_EBTRB$OFF 000000  
                          _flags 0224                            _cycle 029D  
                          _count 0228                            _errno 021C  
                          _ivln2 0619                            _fputc 6702  
                          _fputs 6E1A                  __end_of_isdigit 6F78  
                __end_of_ivln2_h 068D                  __end_of_ivln2_l 0619  
                          _two24 0665                  __end_of_scalbnf 55FA  
                          _value 027C             _MQGetPercentage$2055 00D4  
           _MQGetPercentage$2056 00D8             _MQGetPercentage$2057 00DC  
                          atoi@n 0015                            pad@fp 0011  
                          atoi@s 0008                            _smoke 0210  
                          _width 0220                            _putch 7106  
                          dtoa@d 001E                            dtoa@i 003E  
                          dtoa@n 0036                            dtoa@p 0030  
                          _sqrtf 42B4                            dtoa@s 0034  
                          dtoa@w 0032                            nanf@s 0001  
                          nanf@u 0005                  __end_of_isspace 6DE0  
                          logf@R 0080          __end_of_TMR1_Initialize 70AE  
                          logf@f 00BA                            logf@k 009C  
                          logf@s 00A6                            logf@u 00B6  
                          logf@w 00AE                            logf@x 004B  
                          logf@z 00AA                  __end_of_isupper 6F48  
                          tablat 000FF5                            powf@i 012C  
                          powf@j 01AC                            powf@k 01A0  
                          powf@n 0188                            powf@r 014C  
                          powf@s 0154                            powf@t 01B0  
                          powf@u 0174                            powf@v 0178  
                          powf@w 0144                            powf@x 00C2  
                          powf@y 00C6                            powf@z 01B4  
                          plusw1 000FE3                            plusw2 000FDB  
                          stoa@i 0016                            stoa@l 001E  
                          stoa@p 001C                            stoa@s 000C  
                          stoa@w 0018                            ttemp5 007F  
                          ttemp6 0082                            ttemp7 0086  
                          status 000FD8                            wtemp8 007F  
                __end_of_sprintf 6C2E                   ?___fpclassifyf 0001  
                __end_of_tolower 6CCC                      ?i2_Send2Lcd 0004  
                __end_of_strncmp 6702                     ?_buzzer_init 0001  
             __size_ofi2___awmod 0070                   __CFG_PBADEN$ON 000000  
                   __end_of_Data 6EE8                  __initialization 6D16  
                   __end_of_cp_h 0695                     __end_of_cp_l 0691  
                   __end_of_dp_h 0611                     __end_of_dp_l 0609  
                   __end_of_atoi 5D58                     __end_of_main 70FE  
                   __end_of_dtoa 5206                     __end_of_nanf 7074  
                   __end_of_huge 0665                     __end_of_logf 3DE2  
                   __end_of_powf 2D38                     __end_of_tiny 0661  
                   __end_of_stoa 60F6                           ??_Data 0371  
               __end_of_Send2Lcd 6B16          __end_of_MQGetPercentage 6330  
                         ??_atoi 000A                           ??_main 0377  
                         ??_dtoa 0026                           ??_nanf 0005  
                         ??_logf 004F                           ??_powf 006F  
                         ??_stoa 000E                    __activetblptr 000002  
                    Send2Lcd@Adr 0375                      Send2Lcd@Lcd 0372  
                         ?i2_Cmd 0001                __end_of_LCD_clear 70F0  
                         ?_fabsf 0001                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           ?_fputc 0001  
                         ?_fputs 000A                        ??_MQ_Read 00EC  
               ___awdiv@dividend 0001                           ?_putch 0001  
                         ?_sqrtf 003E                           _GAS_CO 02A1  
                  MQ_Read@values 00EA                           i2l1020 4B6E  
                         i2l1021 4B4C                           i2l1105 475A  
                         i2l1122 49F8                           i2l1114 4972  
                         i2l1115 496E                           i2l1036 4C40  
                         i2l1220 58D4                           i2l1045 4CA6  
                         i2l1046 4CA2                           i2l1400 0A1C  
                         i2l1208 5D4E                           i2l1153 5E14  
                         i2l1146 5D96                           i2l1075 4EAA  
                         i2l1086 4F18                           i2l1087 4F14  
                         i2l1521 44B8                           i2l1177 6EAE  
                         i2l1524 4570                           i2l1380 091A  
                         i2l1517 4464                           i2l1526 4646  
                         i2l1390 0980                           i2l1557 6CC2  
                         i2l1487 2CE2                           i2l9231 5F78  
                         i2l9233 5FAA                           i2l9225 5F40  
                         i2l9219 5EDC                           i2l7661 5DA6  
                         i2l7671 5DD6                           i2l9503 4BCA  
                         i2l9415 4AA0                           i2l9239 5FC0  
                         i2l9255 6B24                           i2l7681 5E46  
                         i2l7673 5DFC                           i2l9521 4C64  
                         i2l9513 4C30                           i2l9611 4746  
                         i2l7667 5DC4                           i2l9531 4C7A  
                         i2l9427 4AC4                           i2l9419 4AA4  
                         i2l9363 6E3A                           i2l9259 6B54  
                         i2l9621 4778                           i2l9613 474A  
                         i2l7669 5DCA                           i2l9349 671A  
                         i2l7679 5E3A                           i2l9471 4B5E  
                         i2l9391 4A58                           i2l9359 6E24  
                         i2l9367 700C                           i2l9705 4A16  
                         i2l7697 5E86                           i2l9537 4C84  
                         i2l9457 4B00                           i2l9369 7010  
                         i2l9801 5836                           i2l9571 4D1C  
                         i2l9395 4A5C                           i2l9723 6486  
                         i2l9715 643C                           i2l9811 58F6  
                         i2l9565 4D12                           i2l9557 4CEC  
                         i2l9493 4BB4                           i2l9485 4B92  
                         i2l9469 4B5A                           i2l9901 61BC  
                         i2l9741 67CA                           i2l9663 491A  
                         i2l9495 4BB8                           i2l9719 6470  
                         i2l9751 6822                           i2l9743 67DC  
                         i2l9815 5934                           i2l9593 4706  
                         i2l9569 4D1A                           i2l9729 64D4  
                         i2l9841 5AFC                           i2l9905 61D2  
                         i2l9737 67BC                           i2l9595 470A  
                         i2l9747 67F4                           i2l9771 655A  
                         i2l9819 5962                           i2l9925 4D64  
                         i2l9693 49D4                           i2l9669 4938  
                         i2l9597 471A                           i2l9853 5B4A  
                         i2l9909 61F8                           i2l9855 5B5E  
                         i2l9847 5B24                           i2l9767 6550  
                         i2l9783 6C3E                           i2l9945 4DA4  
                         i2l9929 4D68                           i2l9689 49B6  
                         i2l9873 5BF6                           i2l9865 5BBA  
                         i2l9777 659A                           i2l9971 4E0A  
                         i2l9963 4DF2                           i2l9981 4E5A  
                         i2l9957 4DDC                           i2l9949 4DA8  
                         i2l9869 5BD0                           i2l9893 6160  
                         i2l9885 6122                           i2l9895 6174  
                         i2l9889 6146                           i2l9995 4EA8  
                         i2l9989 4E82                           i2_Data 6F78  
               __end_of___xxtofl 5E98                           _Hi_ISR 0008  
                         _Lo_ISR 0018                   __CFG_XINST$OFF 000000  
                   vfprintf@cfmt 00FA                           ___flge 6408  
                         ___fleq 683C              __size_of_UART_Write 000E  
                      ??___aodiv 0011                        ??___fladd 0009  
                      ??___aomod 0011                           ___wmul 702C  
                         _ln2_hi 067D                        ??___fldiv 003A  
                      ??___awdiv 0005                           _ln2_lo 0679  
                      ??___flneg 0005                   __CFG_STVREN$ON 000000  
                      ??___awmod 0368                        ??___flmul 0019  
                      ??___flsub 0032                        ??___fltol 0078  
                         _efgtoa 2D38                  ADC_Read@channel 004B  
                         _lenStr 022A                           _floorf 57BE  
                         fabsf@u 0005                           fabsf@x 0001  
                         _memset 5E98                  ADC_Read@digital 0054  
                         clear_0 6D3C                           clear_1 6D48  
               ___awdiv@quotient 0007                  ___awmod@divisor 0366  
                ___awmod@counter 0368                           pad@buf 0013  
                         dtoa@fp 001C                           _strcpy 6C2E  
                         _strlen 7002                       _SmokeCurve 02A7  
                         logf@t1 0084                           logf@t2 0088  
                         logf@dk 00A2                           logf@ix 00BE  
                         fputc@c 0001              __size_ofi2_Send2Lcd 0066  
                         fputs@c 000E                           fputs@i 000F  
                         fputs@s 000A                        ??_isdigit 0003  
              __end_ofi2___awmod 6AA8                        ??_scalbnf 0030  
                ___fpclassifyf@e 0009                        ?_ADC_Read 004B  
                ___fpclassifyf@u 000B                  ___fpclassifyf@x 0001  
                   __mediumconst 0000                        ??_isspace 0003  
                         powf@s2 018C                           powf@t1 0180  
                         powf@t2 011C                           tblptrh 000FF7  
                      ??_isupper 0003                           tblptrl 000FF6  
                         powf@y1 0128                           tblptru 000FF8  
                         powf@ax 0170                           powf@is 0194  
                         powf@hx 0160                           powf@hy 017C  
                         powf@ix 01A8                           powf@iy 0190  
                         powf@sn 0184                           stoa@cp 001A  
                         stoa@fp 000A                           putch@c 0001  
               __end_of_vfprintf 6BDA                   i2___awmod@sign 0006  
                         sqrtf@i 004F                           sqrtf@m 0063  
                         sqrtf@q 0057                           sqrtf@r 0067  
                         sqrtf@s 004B                           sqrtf@t 005B  
                         sqrtf@x 003E                           sqrtf@z 005F  
                      ??_sprintf 007E                        ??_tolower 0009  
                      ??_strncmp 0007    __size_of_INTERRUPT_Initialize 0006  
                  _ADC_Read$2060 0050                       ___flge@ff1 0032  
                     ___flge@ff2 0036                  ??___fpclassifyf 0005  
               ?_TMR1_Initialize 0001                     ___xxtofl@arg 000B  
                   ___xxtofl@exp 000A                _SYSTEM_Initialize 7074  
                   ___xxtofl@val 0001                       ___fleq@ff1 0001  
                     ___fleq@ff2 0005                       __accesstop 0080  
        __end_of__initialization 6D4E                       ___flneg@f1 0001  
                      ?_LCD_init 0001               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001                       ___fltol@f1 00CA  
                  __end_ofi2_Cmd 7002                   __pcstackCOMRAM 0001  
                   __pidataBANK2 6DE0                    __end_of_lg2_h 062D  
                  __end_of_lg2_l 0629              ??_SYSTEM_Initialize 0377  
                  __end_of_fabsf 6E86                    __end_of_ivln2 061D  
                  __end_of_fputc 67A2                    __end_of_fputs 6E52  
                  __end_of_two24 0669                    __end_of_putch 7108  
                  __end_of_sqrtf 46DA                       __end_of_L1 065D  
                     __end_of_L2 0659                       __end_of_L3 0655  
                     __end_of_L4 0651                       __end_of_L5 064D  
                     __end_of_L6 0649                       __end_of_P1 0645  
                     __end_of_P2 0641                       __end_of_P3 063D  
                     __end_of_P4 0639                       __end_of_P5 0635  
                     __end_of_bp 0689                       __end_of_cp 0621  
               ?_MQGetPercentage 00CE                          ??i2_Cmd 0003  
                     ??_ADC_Read 004F                    ??_MyusartRead 036A  
       MQGetGasPercentage@gas_id 00E4                          ??_fabsf 0005  
                        ??_fputc 0005        __end_of_SYSTEM_Initialize 7092  
                        ??_fputs 000E                          ??_putch 0001  
                        ??_sqrtf 0042                       __pbssBANK2 0200  
                     __pbssBANK3 0300                          ?i2_Data 0001  
                      ?_Send2Lcd 0372                       ??_LCD_init 0376  
                        ?_Hi_ISR 0001                          ?_Lo_ISR 0001  
           __size_of_buzzer_init 0002                          ?___flge 0032  
                        ?___fleq 0001                   MQ_Read@digital 00EE  
                        ?___wmul 0001                          ?_efgtoa 00CE  
                        ?_floorf 004B                          ?_memset 0001  
        __size_of_ADC_Initialize 0012                          ?_strcpy 0001  
                        ?_strlen 0001                          _GAS_LPG 0226  
                        i1l11507 70D8                          i1l11563 69E8  
                        i1l11583 6A2E                          i1l11575 6A16  
                        i1l11567 69F6                          i1l11559 69DC  
                        i1l11569 69FE                          i1l11579 6A20  
                        i1l11677 003C                          i2l10001 4EC0  
                        i2l10031 4F80                          i2l10007 4EDE  
                        i2l10041 4FB6                          i2l10121 6FC2  
                        i2l10113 68C2                          i2l10105 6870  
                        i2l11001 2EEE                          i2l10043 4FB8  
                        i2l10035 4FAA                          i2l10027 4F5C  
                        i2l10131 65C4                          i2l10211 4422  
                        i2l10109 68A4                          i2l11021 2FD4  
                        i2l10151 661E                          i2l10215 4438  
                        i2l10207 43CC                          i2l10071 68EA  
                        i2l10311 6A58                          i2l11015 2F4C  
                        i2l10233 458A                          i2l10065 68DA  
                        i2l11113 3370                          i2l11105 3318  
                        i2l11041 308A                          i2l11025 3010  
                        i2l11009 2F08                          i2l10147 660E  
                        i2l10227 4504                          i2l10331 6A9E  
                        i2l10323 6A86                          i2l10315 6A66  
                        i2l10307 6A4C                          i2l11203 3622  
                        i2l11115 3392                          i2l11019 2F86  
                        i2l10165 664E                          i2l10157 6626  
                        i2l11301 5C84                          i2l10077 6900  
                        i2l10093 6932                          i2l10317 6A6E  
                        i2l11213 364E                          i2l11037 3066  
                        i2l10159 6632                          i2l10247 461E  
                        i2l10423 075E                          i2l11311 5CEE  
                        i2l11303 5C8C                          i2l10079 6908  
                        i2l10327 6A90                          i2l11127 3416  
                        i2l11055 30E6                          i2l11047 3092  
                        i2l10193 4358                          i2l10513 0C06  
                        i2l10521 0C48                          i2l10177 6DD8  
                        i2l11305 5C92                          i2l10097 6940  
                        i2l10089 6928                          i2l11073 312E  
                        i2l11057 30EC                          i2l11401 3FA8  
                        i2l10355 3864                          i2l10363 38C2  
                        i2l10291 5584                          i2l10275 54D4  
                        i2l10531 0CE6                          i2l10507 0B46  
                        i2l11307 5CBA                          i2l11139 3446  
                        i2l11147 3466                          i2l11155 348A  
                        i2l11163 3522                          i2l11083 3168  
                        i2l11091 325E                          i2l11067 310A  
                        i2l11331 668A                          i2l11411 405A  
                        i2l10349 37DC                          i2l10605 1300  
                        i2l10517 0C36                          i2l10445 081A  
                        i2l10437 07E6                          i2l10429 0784  
                        i2l11229 36B2                          i2l11077 313E  
                        i2l11333 6698                          i2l10375 3904  
                        i2l10199 43A0                          i2l10615 1356  
                        i2l10543 0D9E                          i2l10535 0D02  
                        i2l10471 09BC                          i2l11191 35C2  
                        i2l11175 3574                          i2l11263 6060  
                        i2l11423 40E0                          i2l10369 38E0  
                        i2l10609 132A                          i2l10553 0E9C  
                        i2l10481 0A2E                          i2l11521 59E2  
                        i2l11193 35CC                          i2l11281 60D8  
                        i2l11273 60A4                          i2l11249 5FF4  
                        i2l10803 2666                          i2l10547 0E08  
                        i2l10467 0992                          i2l10459 0952  
                        i2l10475 09D0                          i2l11531 5A50  
                        i2l11099 32DA                          i2l11267 607E  
                        i2l11259 6048                          i2l11419 40B6  
                        i2l10805 269A                          i2l10557 0F06  
                        i2l11285 5C2A                          i2l10901 5056  
                        i2l11277 60C0                          i2l11453 425A  
                        i2l11381 3EA2                          i2l10583 11DC  
                        i2l10495 0AA8                          i2l10487 0A72  
                        i2l11295 5C74                          i2l11287 5C2E  
                        i2l11447 421E                          i2l11439 41B0  
                        i2l11383 3EC0                          i2l11463 4280  
                        i2l10905 5064                          i2l11457 4266  
                        i2l11385 3ECE                          i2l10595 1262  
                        i2l11539 5ABE                          i2l10915 515C  
                        i2l11547 6B90                          i2l10861 2D02  
                        i2l11549 6BBE                          i2l10783 23B2  
                        i2l10791 247A                          i2l10775 231A  
                        i2l10767 2232                          i2l10935 51C4  
                        i2l11719 5788                          i2l10953 2D82  
                        i2l10939 51DC                          i2l11691 5646  
                        i2l10965 2DB4                          i2l10973 2DCA  
                        i2l10887 5016                          i2l10983 2E38  
                        i2l10991 2E80                          i2l10985 2E50  
                        i2l10987 2E5A                        ?___xxtofl 0001  
                        _COCurve 02B3                     ??_UART_Write 0364  
             __size_of_vfpfcnvrt 04D2                          _MQ_Read 5206  
            __end_of_MyusartRead 6D16                     ??i2_Send2Lcd 0006  
                     ??_Send2Lcd 0374                  __size_ofi2_Data 002E  
                __size_of_Hi_ISR 57B6               _MQGetGasPercentage 5974  
                __size_of_Lo_ISR 0040                          __Hparam 0000  
                        __Lparam 0000                  __size_of___flge 00D0  
                __size_of___fleq 008A                          ___aodiv 5AD0  
                        ___fladd 4A2C                          ___aomod 60F6  
                        ___fldiv 4D38                          ___awdiv 68C6  
                        ___flneg 6FA6                          ___awmod 69C6  
                        ___flmul 46DA                          ___flsub 6D5C  
                        ___fltol 65A4              ?_MQGetGasPercentage 00E0  
                __size_of___wmul 0026               __end_of_UART_Write 70E2  
                      ?_vfprintf 01F4                     __psmallconst 0600  
                __size_of_efgtoa 09B8                  __size_of_floorf 01B6  
                        __pcinit 6D16                  __size_of_memset 0132  
                        __ramtop 0600                        Data@Value 036F  
                        __ptext0 70F8                          __ptext1 7074  
                        __ptext2 7104                          __ptext3 7092  
                        __ptext4 70AE                          __ptext5 70F0  
                        __ptext6 694A                          __ptext7 6AA8  
                        __ptext8 6EB8                          __ptext9 6EE8  
                      _GAS_SMOKE 029F                  __size_of_strcpy 0052  
                __size_of_strlen 002A                        _T1CONbits 000FCD  
                   __size_of_Cmd 0030            _OSCILLATOR_Initialize 70F0  
                   __size_of_abs 0032                     __size_of_pad 009A  
                        _isdigit 6F48                          _ivln2_h 0689  
                        _ivln2_l 0615                       ??___xxtofl 0005  
                        _scalbnf 5414                 ___awmod@dividend 0364  
             __end_ofi2_Send2Lcd 6B7C         ??_PIN_MANAGER_Initialize 036F  
                        _isspace 6DA2                          _isupper 6F18  
                        efgtoa@c 00D4                          efgtoa@d 01D4  
                        efgtoa@e 01EC                          efgtoa@f 00D0  
                        efgtoa@g 01E6                          efgtoa@h 01DE  
                        efgtoa@i 01EA                          efgtoa@l 01E2  
                        efgtoa@m 01D0                          efgtoa@n 01EE  
                        efgtoa@p 01D8                          efgtoa@t 01CC  
                        efgtoa@u 01F0                          efgtoa@w 01DB  
                        atoi@neg 000E             ??_MQGetGasPercentage 007E  
     __size_of_SYSTEM_Initialize 001E                          _sprintf 6BDA  
                        _tolower 6C80                          _strncmp 6660  
                 __pintcode_body 55FA                        _LCD_clear 70E2  
           end_of_initialization 6D4E                          floorf@e 0059  
                        floorf@m 0055                          floorf@u 005B  
                        floorf@x 004B                          fputc@fp 0003  
                        memset@c 0003                          memset@k 0009  
                        memset@n 0005                          memset@s 000B  
                  __Lmediumconst 0000                          int_func 55FA  
                        fputs@fp 000C                        i1u1559_20 6A02  
                      i2u1201_40 6F40                        i2u1202_40 6F42  
                      i2u1212_40 4B22                        i2u1213_40 4B32  
                      i2u1230_40 4C88                        i2u1214_40 4B34  
                      i2u1232_40 4C9C                        i2u1217_40 4B76  
                      i2u1305_40 6178                        i2u1250_40 48DC  
                      i2u1250_45 48D2                        i2u1324_40 4F0E  
                      i2u1341_40 65B2                        i2u1421_40 0E32  
                      i2u1254_40 4968                        i2u1342_40 65E2  
                      i2u1238_40 4CF8                        i2u1422_40 11FC  
                      i2u1270_40 6E94                        i2u1334_40 690C  
                      i2u1510_41 5FD4                        i2u1342_45 65D8  
                      i2u1351_40 436A                        i2u1407_40 0AE0  
                      i2u1271_40 6516                        i2u1423_45 1276  
                      i2u1271_45 650C                        i2u1423_46 127C  
                      i2u1423_47 128A                        i2u1328_40 4F6A  
                      i2u1424_40 12FC                        i2u1520_40 5C70  
                      i2u1280_40 6CA8                        i2u1440_45 2C5A  
                      i2u1329_40 4F8E                        i2u1249_40 4766  
                      i2u1425_40 1318                        i2u1409_40 0AFE  
                      i2u1281_40 6CAA                        i2u1505_40 3638  
                      i2u1409_41 0AFC                        i2u1441_45 2C8E  
                      i2u1433_45 24A8                        i2u1441_46 2C94  
                      i2u1433_46 24AE                        i2u1441_47 2CA2  
                      i2u1433_47 24BC                        i2u1258_40 49C4  
                      i2u1346_40 6638                        i2u1442_40 2CB4  
                      i2u1418_40 0D30                        i2u1522_40 5D1E  
                      i2u1450_40 516A                        i2u1290_40 5914  
                      i2u1530_40 66DE                        i2u1186_40 6B44  
                      i2u1370_45 5596                        i2u1354_45 43E0  
                      i2u1426_45 153C                        i2u1290_45 590A  
                      i2u1354_46 43E6                        i2u1354_47 43F4  
                      i2u1186_47 6B3A                        i2u1259_40 49E2  
                      i2u1523_40 5D20                        i2u1443_40 4FE8  
                      i2u1339_40 68BE                        i2u1283_40 5804  
                      i2u1507_40 369A                        i2u1515_40 6074  
                      i2u1187_40 6B74                        i2u1363_45 468A  
                      i2u1435_45 2514                        i2u1275_45 6574  
                      i2u1283_45 57FA                        i2u1435_46 251A  
                      i2u1435_47 2528                        i2u1187_47 6B6A  
                      i2u1364_40 5434                        i2u1196_40 6712  
                      i2u1452_40 518C                        i2u1444_40 4FEA  
                      i2u1276_40 6592                        i2u1284_40 5824  
                      i2u1508_40 369C                        i2u1460_40 2DA2  
                      i2u1452_41 518A                        i2u1436_45 2566  
                      i2u1436_46 256C                        i2u1436_47 257A  
                      i2u1381_40 37FA                        i2u1365_40 5480  
                      i2u1293_40 6F70                        i2u1349_40 6DD4  
                      i2u1453_40 519A                        i2u1277_40 6594  
                      i2u1381_45 37F0                        i2u1437_45 25A8  
                      i2u1437_46 25AE                        i2u1437_47 25BC  
                      i2u1366_40 54CC                        i2u1294_40 6F72  
                      i2u1198_40 675A                        i2u1454_40 51A0  
                      i2u1278_40 6C76                        i2u1374_40 6A72  
                      i2u1518_40 60EC                        i2u1438_45 262C  
                      i2u1286_45 584E                        i2u1438_46 2632  
                      i2u1286_46 5854                        i2u1438_47 2640  
                      i2u1286_47 5862                        i2u1278_47 6C6C  
                      i2u1447_40 502A                        i2u1463_40 2E0E  
                      i2u1543_40 3FDC                        i2u1456_40 51AE  
                      i2u1288_40 58B4                        i2u1472_40 3038  
                      i2u1464_40 2E10                        i2u1288_45 58AA  
                      i2u1385_40 393C                        i2u1377_40 3736  
                      i2u1449_40 5050                        i2u1537_40 3F08  
                      i2u1297_41 5B2A                        i2u1385_45 3932  
                      i2u1393_45 083E                        i2u1393_46 0844  
                      i2u1393_47 0852                        i2u1378_40 3754  
                      i2u1482_40 3106                        i2u1546_40 4164  
                      i2u1538_40 3F0A                        i2u1378_45 374A  
                      i2u1394_45 0882                        i2u1394_46 0888  
                      i2u1394_47 0896                        i2u1379_40 3764  
                      i2u1395_40 08CC                        i2u1299_40 5B62  
                      i2u1475_40 3074                        i2u1467_40 2EC4  
                      i2u1547_40 4166                        i2u1539_40 3F16  
                      i2u1395_45 08C2                        i2u1388_40 079A  
                      i2u1468_40 2EC6                        i2u1580_47 56C0  
                      i2u1389_40 07B0                        i2u1581_47 6F82  
                      i2u1478_40 30AC                        i2u1582_47 6F8C  
                      i2u1583_47 6F9A                        i2u1584_47 6FDE  
                      i2u1585_47 6FE8                        i2u1586_47 6FF6  
                      i2u1499_40 354E                        i2u1579_47 566C  
                        powf@p_h 019C                          powf@p_l 0164  
                        powf@s_h 016C                          powf@t_h 0168  
                        powf@s_l 0130                          powf@t_l 0134  
                        powf@z_h 0120                          powf@z_l 0124  
              __end_of_vfpfcnvrt 42B4                       efgtoa@mode 01DD  
                     efgtoa@sign 01D6                        _RCSTAbits 000FAB  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_vfprintf 007E  
                        sqrtf@ix 006B                          strcpy@d 0009  
                        strlen@a 0003                          strcpy@s 0007  
                        strlen@s 0001                   UART_Write@data 0364  
                    ___fladd@grs 0010                    ___xxtofl@sign 0009  
                      _TRISBbits 000F93                      _MyusartRead 6CCC  
                    ___fldiv@grs 0045                      ___fldiv@rem 003E  
              __size_of_ADC_Read 00D8                        i2___awmod 6A38  
                     ?_LCD_clear 0001                      ___flmul@grs 0020  
                      _TXSTAbits 000FAC          _MQGetGasPercentage$2058 00E6  
                 __end_ofi2_Data 6FA6                   __end_of_Hi_ISR 57BE  
              __size_of_LCD_init 007C                   __end_of_Lo_ISR 0058  
   __end_of_INTERRUPT_Initialize 7104                   __end_of___flge 64D8  
                 __end_of___fleq 68C6                      vfpfcnvrt@ap 00DE  
                    vfpfcnvrt@cp 00EC                      vfpfcnvrt@ct 00F7  
                    vfpfcnvrt@fp 00DA                      vfpfcnvrt@ll 00E4  
                 __end_of___wmul 7052                   __end_of_ln2_hi 0681  
                 __end_of_ln2_lo 067D                   __end_of_efgtoa 36F0  
                 _ADC_Initialize 70C2                   __end_of_floorf 5974  
         ?_OSCILLATOR_Initialize 0001                       floorf@F524 0208  
                 __end_of_memset 5FCA                   __end_of_strcpy 6C80  
                 __end_of_strlen 702C       MQGetPercentage@rs_ro_ratio 00CE  
            start_initialization 6D16                      __end_of_Lg1 0679  
                    __end_of_Lg2 0675                      __end_of_Lg3 0671  
                    __end_of_Lg4 066D                      __end_of_Cmd 6F18  
__size_of_PIN_MANAGER_Initialize 0014                      __end_of_lg2 0631  
                    __end_of_abs 6EB8                      __end_of_pad 683C  
                    __end_of_ovt 0625                       ?i2___awmod 0001  
                       ??i2_Data 0003            __end_of___fpclassifyf 65A4  
               __CFG_OSC$INTIO67 000000                         ??_Hi_ISR 02E1  
                       ??_Lo_ISR 036A                __size_of_Send2Lcd 006E  
       __size_of_TMR1_Initialize 001C                      vfprintf@fmt 01F6  
                       ??___flge 003A                         ??___fleq 0009  
                       ??___wmul 0005                         ??_efgtoa 00D5  
         __end_of_ADC_Initialize 70D4                      __pdataBANK2 0292  
                       ??_floorf 004F                 __CFG_LPT1OSC$OFF 000000  
                       ??_memset 0007                   ADC_Read@result 0056  
                     memset@dest 0001    MQGetGasPercentage@rs_ro_ratio 00E0  
                       ??_strcpy 0005                         ??_strlen 0003  
                      ___fladd@a 0005                        ___fladd@b 0001  
                      ___fldiv@a 0036                        ___fldiv@b 0032  
                      ___flmul@a 0015                        ___flmul@b 0011  
                      ___flsub@a 002E                        ___flsub@b 002A  
                  __pcstackBANK0 0080                    __pcstackBANK1 0100  
                  __pcstackBANK2 02CB                    __pcstackBANK3 0364  
               ___aodiv@dividend 0001                __end_ofsqrtf@tiny 0615  
              __size_of___xxtofl 0140         __size_of_MQGetPercentage 0116  
                       ?_MQ_Read 00EA                      ??_LCD_clear 0004  
                      _atoi$1520 0012                        _atoi$1518 0010  
                      _atoi$1519 0014                    ??_buzzer_init 036F  
                    _efgtoa$1003 01C0                      _efgtoa$1012 01C6  
                    _efgtoa$1004 01C2                      _efgtoa$1013 01C8  
                    _efgtoa$1014 01CA                      _efgtoa$1008 01C4  
         _PIN_MANAGER_Initialize 70AE            MQGetPercentage@pcurve 00D2  
              __CFG_CCP2MX$PORTC 000000                        __pintcode 0008  
                       ?___aodiv 0001                         ?___fladd 0001  
                       ?___aomod 0001                         ?___fldiv 0032  
                       ?___awdiv 0001                 ___aodiv@quotient 0013  
                       ?___flneg 0001                         ?___awmod 0364  
                       ?___flmul 0011                         ?___flsub 002A  
                       ?___fltol 00CA                  ?_ADC_Initialize 0001  
                    __pintcodelo 0018                        _logf$2064 00B2  
                      _logf$2065 008C                        _logf$2066 0090  
                      _logf$2067 0094                        _logf$2068 0098  
              __size_of_vfprintf 005E                        fabsf@F463 0200  
                    __smallconst 0600                         ?_isdigit 0001  
                 __size_ofi2_Cmd 002E                         ?_scalbnf 002A  
                       _ADC_Read 6330                         ?_isspace 0001  
                       ?_isupper 0001                         Cmd@Value 036F  
                 __size_of_fabsf 0034                      ??i2___awmod 0005  
                       ?_sprintf 02CB                         ?_tolower 0007  
                 __size_of_fputc 00A0                   __size_of_fputs 0038  
                       ?_strncmp 0001                   __size_of_putch 0002  
                 __size_of_sqrtf 0426             _INTERRUPT_Initialize 70FE  
                      _powf$2070 0158                        _powf$2071 0148  
                      _powf$2072 0198                        _powf$2080 010C  
                      _powf$2073 0138                        _powf$2081 0110  
                      _powf$2082 0114                        _powf$2074 0100  
                      _powf$2083 0118                        _powf$2075 0104  
                      _powf$2076 015C                        _powf$2069 01A4  
                      _powf$2077 013C                        _powf$2078 0140  
                      _powf$2079 0108                   ___wmul@product 0005  
                       _LATBbits 000F8A                         _LATCbits 000F8B  
                       _LCD_init 694A                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                         _PIR1bits 000F9E  
                       _LPGCurve 02BF                         i2u961_40 5E50  
                       _RCONbits 000FD0              __end_of_buzzer_init 7106  
                      _timer_val 02A5                       powf@yisint 0150  
                      _vfpfcnvrt 3DE2                         _RL_VALUE 02A3  
              ??_TMR1_Initialize 036F                       _ADCON0bits 000FC2  
              ___wmul@multiplier 0001                    i2Send2Lcd@Adr 0007  
                  i2Send2Lcd@Lcd 0004                     ?_MyusartRead 0001  
                   _isspace$1549 0007                       MQ_Read@res 00F0  
                     vfpfcnvrt@c 00F2                       vfpfcnvrt@f 00F3  
    __size_of_MQGetGasPercentage 015C                        copy_data0 6D2A  
          ?_INTERRUPT_Initialize 0001               i2___awmod@dividend 0001  
               __size_of_MQ_Read 020E                         _Send2Lcd 6AA8  
              ??_MQGetPercentage 007E                         __Hrparam 0000  
                     vfprintf@ap 01F8                         __Lrparam 0000  
                     vfprintf@fp 01F4               __CFG_BOREN$SBORDIS 000000  
        ??_OSCILLATOR_Initialize 036F                 __size_of___aodiv 0148  
               __size_of___fladd 030C                 __size_of___aomod 0124  
               __size_of___fldiv 0288                 __size_of___awdiv 0084  
               __size_of___flneg 002E                 __size_of___awmod 0072  
               __size_of___flmul 0352                 __size_of___flsub 0046  
               __size_of___fltol 00BC                       ?_vfpfcnvrt 00DA  
                ___aodiv@divisor 0009                      i2Data@Value 0001  
                ___aodiv@counter 0011               ___fpclassifyf@F463 020C  
                     sprintf@fmt 02CD                         ___xxtofl 5D58  
               __size_of_isdigit 0030                 __size_of_scalbnf 01E6  
                       _dtoa$979 002E                 __size_of_isspace 003E  
                       __ptext10 70FE                         __ptext11 70C2  
                       __ptext20 6B7C                         __ptext21 3DE2  
                       __ptext13 6CCC                         __ptext30 64D8  
                       __ptext22 6660                         __ptext14 69C6  
                       __ptext31 683C                         __ptext23 5FCA  
                       __ptext15 70D4                         __ptext40 60F6  
                       __ptext32 68C6                         __ptext24 2D38  
                       __ptext41 5AD0                         __ptext33 4FC0  
                       __ptext25 6A38                         __ptext17 6B16  
                       __ptext50 06CC                         __ptext42 5C18  
                       __ptext34 67A2                         __ptext26 6C80  
                       __ptext18 6F78                         __ptext51 42B4  
                       __ptext43 6DA2                         __ptext35 7002  
                       __ptext27 6F18                         __ptext19 6BDA  
                       __ptext60 65A4                         __ptext52 7052  
                       __ptext44 6F48                         __ptext36 6E1A  
                       __ptext28 6C2E                         __ptext61 70E2  
                       __ptext53 6408                         __ptext45 702C  
                       __ptext37 6702                         __ptext29 57BE  
                       __ptext62 6FD4                         __ptext54 5414  
                       __ptext46 5E98                         __ptext38 7106  
                       __ptext63 6330                         __ptext55 6E52  
                       __ptext47 5206                         __ptext39 6E86  
                       __ptext64 5D58                         __ptext56 6FA6  
                       __ptext48 5974                         __ptext65 46DA  
                       __ptext57 36F0                         __ptext49 621A  
                       __ptext66 4D38                         __ptext58 6D5C  
                       __ptext59 4A2C                 __size_of_isupper 0030  
               __size_of_sprintf 0054                 __size_of_tolower 004C  
                     strcpy@dest 0001                 __size_of_strncmp 00A2  
                  __size_of_Data 0030                    __size_of_atoi 0140  
                  __size_of_main 0006                    __size_of_dtoa 0246  
                  __size_of_nanf 0022                    __size_of_logf 06F2  
                  __size_of_powf 266C                    __size_of_stoa 012C  
                    _buzzer_init 7104             powf@__xc8_float_word 01B8  
                       efgtoa@fp 00CE                         efgtoa@ne 01D2  
                       efgtoa@pp 01CE                         efgtoa@ou 01BC  
                      stoa@F1161 0292                         int$flags 007E  
                       _vfprintf 6B7C                         _mystring 0288  
               ___aomod@dividend 0001                         logf@F469 0204  
              i2___awmod@divisor 0003                   _vfpfcnvrt$1044 00F0  
                 _vfpfcnvrt$1039 00EE                i2___awmod@counter 0005  
                     _INTCONbits 000FF2                         logf@hfsq 009E  
                       isdigit@c 0001           ??_INTERRUPT_Initialize 036F  
                     i2Cmd@Value 0001                         scalbnf@n 002E  
                       scalbnf@u 0034                         scalbnf@x 002A  
                       scalbnf@y 0038                         intlevel1 0000  
                       intlevel2 0000                        sprintf@ap 02D9  
                      sqrtf@tiny 0611                         isspace@c 0001  
        ?_PIN_MANAGER_Initialize 0001                        strcpy@src 0003  
                       isupper@c 0001                        strncmp@_l 0001  
                      strncmp@_r 0003                 ??_ADC_Initialize 036F  
                    efgtoa@nmode 01DA                  ___aomod@divisor 0009  
                    ??_vfpfcnvrt 00E0                         stoa@nuls 000F  
                ___aomod@counter 0011                     _MQ_Read$2059 00F4  
                       sprintf@f 02DB                         tolower@c 0007  
                       sprintf@s 02CB           __size_of___fpclassifyf 00CC  
                       strncmp@l 0008                         strncmp@n 0005  
                       strncmp@r 000A                       _UART_Write 70D4  
                  ___fladd@signs 000D             __size_of_MyusartRead 004A  
                   ___aodiv@sign 0012   __end_of_PIN_MANAGER_Initialize 70C2  
          sqrtf@__xc8_float_word 0053                     ___fladd@aexp 000E  
                   ___fladd@bexp 000F                       i2_Send2Lcd 6B16  
                   ___aomod@sign 0012                  _TMR1_Initialize 7092  
