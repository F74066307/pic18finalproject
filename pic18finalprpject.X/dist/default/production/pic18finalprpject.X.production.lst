

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 19 21:03:30 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.10
    83                           ; Generated 31/07/2019 GMT
    84                           ; 
    85                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4520 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataBANK1
   118  006A12                     __pidataBANK1:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for _GAS_CO
   122  006A12  0001               	dw	1
   123                           
   124                           	psect	idataBANK2
   125  0067CE                     __pidataBANK2:
   126                           	opt callstack 0
   127                           
   128                           ;initializer for stoa@F1153
   129  0067CE  28                 	db	40
   130  0067CF  6E                 	db	110
   131  0067D0  75                 	db	117
   132  0067D1  6C                 	db	108
   133  0067D2  6C                 	db	108
   134  0067D3  29                 	db	41
   135  0067D4  00                 	db	0
   136                           
   137                           ;initializer for _Ro
   138                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};;setting_hardaware/adc.c: 10: double SmokeC
      +                          urve[3] = {2.3,0.53,-0.44};;setting_hardaware/adc.c: 11: double Ro = 10.0;
   139  0067D5  0000               	dw	0
   140  0067D7  4120               	dw	16672
   141                           
   142                           ;initializer for _cycle
   143  0067D9  0004               	dw	4
   144                           
   145                           ;initializer for _GAS_SMOKE
   146  0067DB  0002               	dw	2
   147                           
   148                           ;initializer for _RL_VALUE
   149  0067DD  0001               	dw	1
   150                           
   151                           ;initializer for _timer_val
   152  0067DF  0BDB               	dw	3035
   153                           
   154                           ;initializer for _SmokeCurve
   155                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};;setting_hardaware/adc.c: 10: double SmokeC
      +                          urve[3] = {2.3,0.53,-0.44};
   156  0067E1  3333               	dw	13107
   157  0067E3  4013               	dw	16403
   158                           
   159                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};;setting_hardaware/adc.c: 10: double SmokeC
      +                          urve[3] = {2.3,0.53,-0.44};
   160  0067E5  AE14               	dw	44564
   161  0067E7  3F07               	dw	16135
   162  0067E9  47AE               	dw	18350
   163  0067EB  BEE1               	dw	48865
   164                           
   165                           ;initializer for _COCurve
   166                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};
   167  0067ED  3333               	dw	13107
   168  0067EF  4013               	dw	16403
   169                           
   170                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};
   171  0067F1  51EC               	dw	20972
   172  0067F3  3F38               	dw	16184
   173  0067F5  147B               	dw	5243
   174  0067F7  BEAE               	dw	48814
   175                           
   176                           ;initializer for _LPGCurve
   177                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};
   178  0067F9  3333               	dw	13107
   179  0067FB  4013               	dw	16403
   180                           
   181                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};
   182  0067FD  0A3D               	dw	2621
   183  0067FF  3E57               	dw	15959
   184  006801  A3D7               	dw	41943
   185  006803  BEF0               	dw	48880
   186                           
   187                           	psect	smallconst
   188  000600                     __psmallconst:
   189                           	opt callstack 0
   190  000600  00                 	db	0
   191  000601                     _dp_l:
   192                           	opt callstack 0
   193  000601  0000               	dw	0
   194  000603  0000               	dw	0
   195  000605  CFDC               	dw	53212
   196  000607  35D1               	dw	13777
   197  000609                     __end_of_dp_l:
   198                           	opt callstack 0
   199  000609                     _dp_h:
   200                           	opt callstack 0
   201  000609  0000               	dw	0
   202  00060B  0000               	dw	0
   203  00060D  C000               	dw	49152
   204  00060F  3F15               	dw	16149
   205  000611                     __end_of_dp_h:
   206                           	opt callstack 0
   207  000611  4260               	dw	16992
   208  000613  0DA2               	dw	3490
   209  000615                     __end_ofsqrtf@tiny:
   210                           	opt callstack 0
   211  000615  A570               	dw	42352
   212  000617  36EC               	dw	14060
   213  000619                     __end_of_ivln2_l:
   214                           	opt callstack 0
   215  000619  AA3B               	dw	43579
   216  00061B  3FB8               	dw	16312
   217  00061D                     __end_of_ivln2:
   218                           	opt callstack 0
   219  00061D  384F               	dw	14415
   220  00061F  3F76               	dw	16246
   221  000621                     __end_of_cp:
   222                           	opt callstack 0
   223  000621  AA3C               	dw	43580
   224  000623  3338               	dw	13112
   225  000625                     __end_of_ovt:
   226                           	opt callstack 0
   227  000625  BE8C               	dw	48780
   228  000627  35BF               	dw	13759
   229  000629                     __end_of_lg2_l:
   230                           	opt callstack 0
   231  000629  7200               	dw	29184
   232  00062B  3F31               	dw	16177
   233  00062D                     __end_of_lg2_h:
   234                           	opt callstack 0
   235  00062D  7218               	dw	29208
   236  00062F  3F31               	dw	16177
   237  000631                     __end_of_lg2:
   238                           	opt callstack 0
   239  000631  BB4C               	dw	47948
   240  000633  3331               	dw	13105
   241  000635                     __end_of_P5:
   242                           	opt callstack 0
   243  000635  EA0E               	dw	59918
   244  000637  B5DD               	dw	46557
   245  000639                     __end_of_P4:
   246                           	opt callstack 0
   247  000639  B355               	dw	45909
   248  00063B  388A               	dw	14474
   249  00063D                     __end_of_P3:
   250                           	opt callstack 0
   251  00063D  0B61               	dw	2913
   252  00063F  BB36               	dw	47926
   253  000641                     __end_of_P2:
   254                           	opt callstack 0
   255  000641  AAAB               	dw	43691
   256  000643  3E2A               	dw	15914
   257  000645                     __end_of_P1:
   258                           	opt callstack 0
   259  000645  F142               	dw	61762
   260  000647  3E53               	dw	15955
   261  000649                     __end_of_L6:
   262                           	opt callstack 0
   263  000649  3255               	dw	12885
   264  00064B  3E6C               	dw	15980
   265  00064D                     __end_of_L5:
   266                           	opt callstack 0
   267  00064D  A305               	dw	41733
   268  00064F  3E8B               	dw	16011
   269  000651                     __end_of_L4:
   270                           	opt callstack 0
   271  000651  AAAB               	dw	43691
   272  000653  3EAA               	dw	16042
   273  000655                     __end_of_L3:
   274                           	opt callstack 0
   275  000655  6DB7               	dw	28087
   276  000657  3EDB               	dw	16091
   277  000659                     __end_of_L2:
   278                           	opt callstack 0
   279  000659  999A               	dw	39322
   280  00065B  3F19               	dw	16153
   281  00065D                     __end_of_L1:
   282                           	opt callstack 0
   283  00065D  4260               	dw	16992
   284  00065F  0DA2               	dw	3490
   285  000661                     __end_of_tiny:
   286                           	opt callstack 0
   287  000661  F2CA               	dw	62154
   288  000663  7149               	dw	29001
   289  000665                     __end_of_huge:
   290                           	opt callstack 0
   291  000665  0000               	dw	0
   292  000667  4B80               	dw	19328
   293  000669                     __end_of_two24:
   294                           	opt callstack 0
   295  000669  9E26               	dw	40486
   296  00066B  3E78               	dw	15992
   297  00066D                     __end_of_Lg4:
   298                           	opt callstack 0
   299  00066D  E9EE               	dw	59886
   300  00066F  3E91               	dw	16017
   301  000671                     __end_of_Lg3:
   302                           	opt callstack 0
   303  000671  CE13               	dw	52755
   304  000673  3ECC               	dw	16076
   305  000675                     __end_of_Lg2:
   306                           	opt callstack 0
   307  000675  AAAA               	dw	43690
   308  000677  3F2A               	dw	16170
   309  000679                     __end_of_Lg1:
   310                           	opt callstack 0
   311  000679  F7D1               	dw	63441
   312  00067B  3717               	dw	14103
   313  00067D                     __end_of_ln2_lo:
   314                           	opt callstack 0
   315  00067D  7180               	dw	29056
   316  00067F  3F31               	dw	16177
   317  000681                     __end_of_ln2_hi:
   318                           	opt callstack 0
   319  000681                     _bp:
   320                           	opt callstack 0
   321  000681  0000               	dw	0
   322  000683  3F80               	dw	16256
   323  000685  0000               	dw	0
   324  000687  3FC0               	dw	16320
   325  000689                     __end_of_bp:
   326                           	opt callstack 0
   327  000689  AA00               	dw	43520
   328  00068B  3FB8               	dw	16312
   329  00068D                     __end_of_ivln2_h:
   330                           	opt callstack 0
   331  00068D  23C6               	dw	9158
   332  00068F  B8F6               	dw	47350
   333  000691                     __end_of_cp_l:
   334                           	opt callstack 0
   335  000691  4000               	dw	16384
   336  000693  3F76               	dw	16246
   337  000695                     __end_of_cp_h:
   338                           	opt callstack 0
   339  0000                     _ADRES	set	4035
   340  0000                     _TMR1	set	4046
   341  0000                     _LATBbits	set	3978
   342  0000                     _LATCbits	set	3979
   343  0000                     _LATD	set	3980
   344  0000                     _TRISA	set	3986
   345  0000                     _TRISBbits	set	3987
   346  0000                     _TRISD	set	3989
   347  0000                     _TRISC	set	3988
   348  0000                     _ADCON0bits	set	4034
   349  0000                     _ADCON2	set	4032
   350  0000                     _ADCON1	set	4033
   351  0000                     _INTCONbits	set	4082
   352  0000                     _RCONbits	set	4048
   353  0000                     _RCSTAbits	set	4011
   354  0000                     _RCREG	set	4014
   355  0000                     _TXREG	set	4013
   356  0000                     _TXSTAbits	set	4012
   357  0000                     _IPR1bits	set	3999
   358  0000                     _PIE1bits	set	3997
   359  0000                     _PIR1bits	set	3998
   360  0000                     _T1CONbits	set	4045
   361  0000                     _CREN	set	32092
   362  0000                     _RCIF	set	31989
   363  0000                     _IRCF0	set	32412
   364  0000                     _IRCF1	set	32413
   365  0000                     _IRCF2	set	32414
   366  000695                     STR_4:
   367  000695  25                 	db	37
   368  000696  73                 	db	115	;'s'
   369  000697  20                 	db	32
   370  000698  6C                 	db	108	;'l'
   371  000699  70                 	db	112	;'p'
   372  00069A  67                 	db	103	;'g'
   373  00069B  3D                 	db	61	;'='
   374  00069C  25                 	db	37
   375  00069D  2E                 	db	46
   376  00069E  31                 	db	49	;'1'
   377  00069F  66                 	db	102	;'f'
   378  0006A0  20                 	db	32
   379  0006A1  70                 	db	112	;'p'
   380  0006A2  70                 	db	112	;'p'
   381  0006A3  6D                 	db	109	;'m'
   382  0006A4  20                 	db	32
   383  0006A5  43                 	db	67	;'C'
   384  0006A6  4F                 	db	79	;'O'
   385  0006A7  3D                 	db	61	;'='
   386  0006A8  25                 	db	37
   387  0006A9  2E                 	db	46
   388  0006AA  31                 	db	49	;'1'
   389  0006AB  66                 	db	102	;'f'
   390  0006AC  20                 	db	32
   391  0006AD  70                 	db	112	;'p'
   392  0006AE  70                 	db	112	;'p'
   393  0006AF  6D                 	db	109	;'m'
   394  0006B0  20                 	db	32
   395  0006B1  73                 	db	115	;'s'
   396  0006B2  6D                 	db	109	;'m'
   397  0006B3  6F                 	db	111	;'o'
   398  0006B4  6B                 	db	107	;'k'
   399  0006B5  65                 	db	101	;'e'
   400  0006B6  3D                 	db	61	;'='
   401  0006B7  25                 	db	37
   402  0006B8  2E                 	db	46
   403  0006B9  31                 	db	49	;'1'
   404  0006BA  66                 	db	102	;'f'
   405  0006BB  20                 	db	32
   406  0006BC  70                 	db	112	;'p'
   407  0006BD  70                 	db	112	;'p'
   408  0006BE  6D                 	db	109	;'m'
   409  0006BF  00                 	db	0
   410  0006C0                     STR_3:
   411  0006C0  25                 	db	37
   412  0006C1  73                 	db	115	;'s'
   413  0006C2  25                 	db	37
   414  0006C3  2E                 	db	46
   415  0006C4  32                 	db	50	;'2'
   416  0006C5  66                 	db	102	;'f'
   417  0006C6  20                 	db	32
   418  0006C7  43                 	db	67	;'C'
   419  0006C8  00                 	db	0
   420  0006C9                     STR_1:
   421  0006C9  6D                 	db	109	;'m'
   422  0006CA  6F                 	db	111	;'o'
   423  0006CB  6E                 	db	110	;'n'
   424  0006CC  69                 	db	105	;'i'
   425  0006CD  74                 	db	116	;'t'
   426  0006CE  6F                 	db	111	;'o'
   427  0006CF  72                 	db	114	;'r'
   428  0006D0  00                 	db	0
   429  0006D1                     STR_2:
   430  0006D1  73                 	db	115	;'s'
   431  0006D2  74                 	db	116	;'t'
   432  0006D3  61                 	db	97	;'a'
   433  0006D4  72                 	db	114	;'r'
   434  0006D5  74                 	db	116	;'t'
   435  0006D6  00                 	db	0
   436  0006D7                     STR_5:
   437  0006D7  49                 	db	73	;'I'
   438  0006D8  4E                 	db	78	;'N'
   439  0006D9  46                 	db	70	;'F'
   440  0006DA  00                 	db	0
   441  0006DB                     STR_9:
   442  0006DB  4E                 	db	78	;'N'
   443  0006DC  41                 	db	65	;'A'
   444  0006DD  4E                 	db	78	;'N'
   445  0006DE  00                 	db	0
   446  0006DF                     STR_6:
   447  0006DF  69                 	db	105	;'i'
   448  0006E0  6E                 	db	110	;'n'
   449  0006E1  66                 	db	102	;'f'
   450  0006E2  00                 	db	0
   451  0006E3                     STR_10:
   452  0006E3  6E                 	db	110	;'n'
   453  0006E4  61                 	db	97	;'a'
   454  0006E5  6E                 	db	110	;'n'
   455  0006E6  00                 	db	0
   456  0006E7                     STR_13:
   457  0006E7  6C                 	db	108	;'l'
   458  0006E8  66                 	db	102	;'f'
   459  0006E9  00                 	db	0
   460  0000                     
   461                           ; #config settings
   462  0006EA  00                 	db	0	; dummy byte at the end
   463  0000                     
   464                           	psect	cinit
   465  0064CA                     __pcinit:
   466                           	opt callstack 0
   467  0064CA                     start_initialization:
   468                           	opt callstack 0
   469  0064CA                     __initialization:
   470                           	opt callstack 0
   471                           
   472                           ; Initialize objects allocated to BANK2 (55 bytes)
   473                           ; load TBLPTR registers with __pidataBANK2
   474  0064CA  0ECE               	movlw	low __pidataBANK2
   475  0064CC  6EF6               	movwf	tblptrl,c
   476  0064CE  0E67               	movlw	high __pidataBANK2
   477  0064D0  6EF7               	movwf	tblptrh,c
   478  0064D2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   479  0064D4  6EF8               	movwf	tblptru,c
   480  0064D6  EE02  F08C         	lfsr	0,__pdataBANK2
   481  0064DA  EE10 F037          	lfsr	1,55
   482  0064DE                     copy_data0:
   483  0064DE  0009               	tblrd		*+
   484  0064E0  CFF5 FFEE          	movff	tablat,postinc0
   485  0064E4  50E5               	movf	postdec1,w,c
   486  0064E6  50E1               	movf	fsr1l,w,c
   487  0064E8  E1FA               	bnz	copy_data0
   488                           
   489                           ; Initialize objects allocated to BANK1 (2 bytes)
   490                           ; load TBLPTR registers with __pidataBANK1
   491  0064EA  0E12               	movlw	low __pidataBANK1
   492  0064EC  6EF6               	movwf	tblptrl,c
   493  0064EE  0E6A               	movlw	high __pidataBANK1
   494  0064F0  6EF7               	movwf	tblptrh,c
   495  0064F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   496  0064F4  6EF8               	movwf	tblptru,c
   497  0064F6  0009               	tblrd		*+	;fetch initializer
   498  0064F8  CFF5 F1FA          	movff	tablat,__pdataBANK1
   499  0064FC  0009               	tblrd		*+	;fetch initializer
   500  0064FE  CFF5 F1FB          	movff	tablat,__pdataBANK1+1
   501                           
   502                           ; Clear objects allocated to BANK3 (100 bytes)
   503  006502  EE03  F000         	lfsr	0,__pbssBANK3
   504  006506  0E64               	movlw	100
   505  006508                     clear_0:
   506  006508  6AEE               	clrf	postinc0,c
   507  00650A  06E8               	decf	wreg,f,c
   508  00650C  E1FD               	bnz	clear_0
   509                           
   510                           ; Clear objects allocated to BANK2 (140 bytes)
   511  00650E  EE02  F000         	lfsr	0,__pbssBANK2
   512  006512  0E8C               	movlw	140
   513  006514                     clear_1:
   514  006514  6AEE               	clrf	postinc0,c
   515  006516  06E8               	decf	wreg,f,c
   516  006518  E1FD               	bnz	clear_1
   517                           
   518                           ; Clear objects allocated to BANK0 (6 bytes)
   519  00651A  0100               	movlb	0
   520  00651C  6BFD               	clrf	(__pbssBANK0+5)& (0+255),b
   521  00651E  6BFC               	clrf	(__pbssBANK0+4)& (0+255),b
   522  006520  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
   523  006522  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
   524  006524  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   525  006526  6BF8               	clrf	__pbssBANK0& (0+255),b
   526  006528                     end_of_initialization:
   527                           	opt callstack 0
   528  006528                     __end_of__initialization:
   529                           	opt callstack 0
   530  006528  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   531  00652A  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   532  00652C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   533  00652E  6EF8               	movwf	tblptru,c
   534  006530  0100               	movlb	0
   535  006532  EF06  F035         	goto	_main	;jump to C main() function
   536                           
   537                           	psect	bssBANK0
   538  0000F8                     __pbssBANK0:
   539                           	opt callstack 0
   540  0000F8                     _prec:
   541                           	opt callstack 0
   542  0000F8                     	ds	2
   543  0000FA                     _flags:
   544                           	opt callstack 0
   545  0000FA                     	ds	2
   546  0000FC                     _GAS_LPG:
   547                           	opt callstack 0
   548  0000FC                     	ds	2
   549                           
   550                           	psect	dataBANK1
   551  0001FA                     __pdataBANK1:
   552                           	opt callstack 0
   553  0001FA                     _GAS_CO:
   554                           	opt callstack 0
   555  0001FA                     	ds	2
   556                           
   557                           	psect	bssBANK2
   558  000200                     __pbssBANK2:
   559                           	opt callstack 0
   560  000200                     fabsf@F463:
   561                           	opt callstack 0
   562  000200                     	ds	4
   563  000204                     logf@F469:
   564                           	opt callstack 0
   565  000204                     	ds	4
   566  000208                     floorf@F524:
   567                           	opt callstack 0
   568  000208                     	ds	4
   569  00020C                     ___fpclassifyf@F463:
   570                           	opt callstack 0
   571  00020C                     	ds	4
   572  000210                     _smoke:
   573                           	opt callstack 0
   574  000210                     	ds	4
   575  000214                     _co:
   576                           	opt callstack 0
   577  000214                     	ds	4
   578  000218                     _lpg:
   579                           	opt callstack 0
   580  000218                     	ds	4
   581  00021C                     _errno:
   582                           	opt callstack 0
   583  00021C                     	ds	2
   584  00021E                     _nout:
   585                           	opt callstack 0
   586  00021E                     	ds	2
   587  000220                     _width:
   588                           	opt callstack 0
   589  000220                     	ds	2
   590  000222                     _count:
   591                           	opt callstack 0
   592  000222                     	ds	2
   593  000224                     _lenStr:
   594                           	opt callstack 0
   595  000224                     	ds	2
   596  000226                     _dbuf:
   597                           	opt callstack 0
   598  000226                     	ds	80
   599  000276                     _value:
   600                           	opt callstack 0
   601  000276                     	ds	12
   602  000282                     _mystring:
   603                           	opt callstack 0
   604  000282                     	ds	10
   605                           
   606                           	psect	dataBANK2
   607  00028C                     __pdataBANK2:
   608                           	opt callstack 0
   609  00028C                     stoa@F1153:
   610                           	opt callstack 0
   611  00028C                     	ds	7
   612  000293                     _Ro:
   613                           	opt callstack 0
   614  000293                     	ds	4
   615  000297                     _cycle:
   616                           	opt callstack 0
   617  000297                     	ds	2
   618  000299                     _GAS_SMOKE:
   619                           	opt callstack 0
   620  000299                     	ds	2
   621  00029B                     _RL_VALUE:
   622                           	opt callstack 0
   623  00029B                     	ds	2
   624  00029D                     _timer_val:
   625                           	opt callstack 0
   626  00029D                     	ds	2
   627  00029F                     _SmokeCurve:
   628                           	opt callstack 0
   629  00029F                     	ds	12
   630  0002AB                     _COCurve:
   631                           	opt callstack 0
   632  0002AB                     	ds	12
   633  0002B7                     _LPGCurve:
   634                           	opt callstack 0
   635  0002B7                     	ds	12
   636                           
   637                           	psect	bssBANK3
   638  000300                     __pbssBANK3:
   639                           	opt callstack 0
   640  000300                     _r:
   641                           	opt callstack 0
   642  000300                     	ds	100
   643                           
   644                           	psect	cstackBANK3
   645  000364                     __pcstackBANK3:
   646                           	opt callstack 0
   647  000364                     ?___awmod:
   648                           	opt callstack 0
   649  000364                     UART_Write@data:
   650                           	opt callstack 0
   651  000364                     ___awmod@dividend:
   652                           	opt callstack 0
   653                           
   654                           ; 2 bytes @ 0x0
   655  000364                     	ds	2
   656  000366                     ___awmod@divisor:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0x2
   660  000366                     	ds	2
   661  000368                     ___awmod@counter:
   662                           	opt callstack 0
   663                           
   664                           ; 1 bytes @ 0x4
   665  000368                     	ds	1
   666  000369                     ___awmod@sign:
   667                           	opt callstack 0
   668                           
   669                           ; 1 bytes @ 0x5
   670  000369                     	ds	1
   671  00036A                     ??_Lo_ISR:
   672                           
   673                           ; 1 bytes @ 0x6
   674  00036A                     	ds	5
   675  00036F                     Cmd@Value:
   676                           	opt callstack 0
   677  00036F                     Data@Value:
   678                           	opt callstack 0
   679                           
   680                           ; 2 bytes @ 0xB
   681  00036F                     	ds	2
   682  000371                     ??_Cmd:
   683  000371                     ??_Data:
   684                           
   685                           ; 1 bytes @ 0xD
   686  000371                     	ds	1
   687  000372                     Send2Lcd@Lcd:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0xE
   691  000372                     	ds	2
   692  000374                     Send2Lcd@Adr:
   693                           	opt callstack 0
   694                           
   695                           ; 1 bytes @ 0x10
   696  000374                     	ds	1
   697  000375                     ??_LCD_init:
   698                           
   699                           ; 1 bytes @ 0x11
   700  000375                     	ds	1
   701  000376                     
   702                           ; 1 bytes @ 0x12
   703                           
   704                           	psect	cstackBANK2
   705  0002C3                     __pcstackBANK2:
   706                           	opt callstack 0
   707  0002C3                     ?_sprintf:
   708                           	opt callstack 0
   709  0002C3                     sprintf@s:
   710                           	opt callstack 0
   711                           
   712                           ; 2 bytes @ 0x0
   713  0002C3                     	ds	2
   714  0002C5                     sprintf@fmt:
   715                           	opt callstack 0
   716                           
   717                           ; 2 bytes @ 0x2
   718  0002C5                     	ds	18
   719  0002D7                     sprintf@ap:
   720                           	opt callstack 0
   721                           
   722                           ; 2 bytes @ 0x14
   723  0002D7                     	ds	2
   724  0002D9                     sprintf@f:
   725                           	opt callstack 0
   726                           
   727                           ; 6 bytes @ 0x16
   728  0002D9                     	ds	6
   729  0002DF                     ??_Hi_ISR:
   730                           
   731                           ; 1 bytes @ 0x1C
   732  0002DF                     	ds	11
   733                           
   734                           	psect	cstackBANK1
   735  000100                     __pcstackBANK1:
   736                           	opt callstack 0
   737  000100                     _powf$2043:
   738                           	opt callstack 0
   739                           
   740                           ; 4 bytes @ 0x0
   741  000100                     	ds	4
   742  000104                     _powf$2044:
   743                           	opt callstack 0
   744                           
   745                           ; 4 bytes @ 0x4
   746  000104                     	ds	4
   747  000108                     _powf$2048:
   748                           	opt callstack 0
   749                           
   750                           ; 4 bytes @ 0x8
   751  000108                     	ds	4
   752  00010C                     _powf$2049:
   753                           	opt callstack 0
   754                           
   755                           ; 4 bytes @ 0xC
   756  00010C                     	ds	4
   757  000110                     _powf$2050:
   758                           	opt callstack 0
   759                           
   760                           ; 4 bytes @ 0x10
   761  000110                     	ds	4
   762  000114                     _powf$2051:
   763                           	opt callstack 0
   764                           
   765                           ; 4 bytes @ 0x14
   766  000114                     	ds	4
   767  000118                     _powf$2052:
   768                           	opt callstack 0
   769                           
   770                           ; 4 bytes @ 0x18
   771  000118                     	ds	4
   772  00011C                     powf@t2:
   773                           	opt callstack 0
   774                           
   775                           ; 4 bytes @ 0x1C
   776  00011C                     	ds	4
   777  000120                     powf@z_h:
   778                           	opt callstack 0
   779                           
   780                           ; 4 bytes @ 0x20
   781  000120                     	ds	4
   782  000124                     powf@z_l:
   783                           	opt callstack 0
   784                           
   785                           ; 4 bytes @ 0x24
   786  000124                     	ds	4
   787  000128                     powf@y1:
   788                           	opt callstack 0
   789                           
   790                           ; 4 bytes @ 0x28
   791  000128                     	ds	4
   792  00012C                     powf@i:
   793                           	opt callstack 0
   794                           
   795                           ; 4 bytes @ 0x2C
   796  00012C                     	ds	4
   797  000130                     powf@s_l:
   798                           	opt callstack 0
   799                           
   800                           ; 4 bytes @ 0x30
   801  000130                     	ds	4
   802  000134                     powf@t_l:
   803                           	opt callstack 0
   804                           
   805                           ; 4 bytes @ 0x34
   806  000134                     	ds	4
   807  000138                     _powf$2042:
   808                           	opt callstack 0
   809                           
   810                           ; 4 bytes @ 0x38
   811  000138                     	ds	4
   812  00013C                     _powf$2046:
   813                           	opt callstack 0
   814                           
   815                           ; 4 bytes @ 0x3C
   816  00013C                     	ds	4
   817  000140                     _powf$2047:
   818                           	opt callstack 0
   819                           
   820                           ; 4 bytes @ 0x40
   821  000140                     	ds	4
   822  000144                     powf@w:
   823                           	opt callstack 0
   824                           
   825                           ; 4 bytes @ 0x44
   826  000144                     	ds	4
   827  000148                     _powf$2040:
   828                           	opt callstack 0
   829                           
   830                           ; 4 bytes @ 0x48
   831  000148                     	ds	4
   832  00014C                     powf@r:
   833                           	opt callstack 0
   834                           
   835                           ; 4 bytes @ 0x4C
   836  00014C                     	ds	4
   837  000150                     powf@yisint:
   838                           	opt callstack 0
   839                           
   840                           ; 4 bytes @ 0x50
   841  000150                     	ds	4
   842  000154                     powf@s:
   843                           	opt callstack 0
   844                           
   845                           ; 4 bytes @ 0x54
   846  000154                     	ds	4
   847  000158                     _powf$2039:
   848                           	opt callstack 0
   849                           
   850                           ; 4 bytes @ 0x58
   851  000158                     	ds	4
   852  00015C                     _powf$2045:
   853                           	opt callstack 0
   854                           
   855                           ; 4 bytes @ 0x5C
   856  00015C                     	ds	4
   857  000160                     powf@hx:
   858                           	opt callstack 0
   859                           
   860                           ; 4 bytes @ 0x60
   861  000160                     	ds	4
   862  000164                     powf@p_l:
   863                           	opt callstack 0
   864                           
   865                           ; 4 bytes @ 0x64
   866  000164                     	ds	4
   867  000168                     powf@t_h:
   868                           	opt callstack 0
   869                           
   870                           ; 4 bytes @ 0x68
   871  000168                     	ds	4
   872  00016C                     powf@s_h:
   873                           	opt callstack 0
   874                           
   875                           ; 4 bytes @ 0x6C
   876  00016C                     	ds	4
   877  000170                     powf@ax:
   878                           	opt callstack 0
   879                           
   880                           ; 4 bytes @ 0x70
   881  000170                     	ds	4
   882  000174                     powf@u:
   883                           	opt callstack 0
   884                           
   885                           ; 4 bytes @ 0x74
   886  000174                     	ds	4
   887  000178                     powf@v:
   888                           	opt callstack 0
   889                           
   890                           ; 4 bytes @ 0x78
   891  000178                     	ds	4
   892  00017C                     powf@hy:
   893                           	opt callstack 0
   894                           
   895                           ; 4 bytes @ 0x7C
   896  00017C                     	ds	4
   897  000180                     powf@t1:
   898                           	opt callstack 0
   899                           
   900                           ; 4 bytes @ 0x80
   901  000180                     	ds	4
   902  000184                     powf@sn:
   903                           	opt callstack 0
   904                           
   905                           ; 4 bytes @ 0x84
   906  000184                     	ds	4
   907  000188                     powf@n:
   908                           	opt callstack 0
   909                           
   910                           ; 4 bytes @ 0x88
   911  000188                     	ds	4
   912  00018C                     powf@s2:
   913                           	opt callstack 0
   914                           
   915                           ; 4 bytes @ 0x8C
   916  00018C                     	ds	4
   917  000190                     powf@iy:
   918                           	opt callstack 0
   919                           
   920                           ; 4 bytes @ 0x90
   921  000190                     	ds	4
   922  000194                     powf@is:
   923                           	opt callstack 0
   924                           
   925                           ; 4 bytes @ 0x94
   926  000194                     	ds	4
   927  000198                     _powf$2041:
   928                           	opt callstack 0
   929                           
   930                           ; 4 bytes @ 0x98
   931  000198                     	ds	4
   932  00019C                     powf@p_h:
   933                           	opt callstack 0
   934                           
   935                           ; 4 bytes @ 0x9C
   936  00019C                     	ds	4
   937  0001A0                     powf@k:
   938                           	opt callstack 0
   939                           
   940                           ; 4 bytes @ 0xA0
   941  0001A0                     	ds	4
   942  0001A4                     _powf$2038:
   943                           	opt callstack 0
   944                           
   945                           ; 4 bytes @ 0xA4
   946  0001A4                     	ds	4
   947  0001A8                     powf@ix:
   948                           	opt callstack 0
   949                           
   950                           ; 4 bytes @ 0xA8
   951  0001A8                     	ds	4
   952  0001AC                     powf@j:
   953                           	opt callstack 0
   954                           
   955                           ; 4 bytes @ 0xAC
   956  0001AC                     	ds	4
   957  0001B0                     powf@t:
   958                           	opt callstack 0
   959                           
   960                           ; 4 bytes @ 0xB0
   961  0001B0                     	ds	4
   962  0001B4                     powf@z:
   963                           	opt callstack 0
   964                           
   965                           ; 4 bytes @ 0xB4
   966  0001B4                     	ds	4
   967  0001B8                     powf@__xc8_float_word:
   968                           	opt callstack 0
   969                           
   970                           ; 4 bytes @ 0xB8
   971  0001B8                     	ds	4
   972  0001BC                     efgtoa@ou:
   973                           	opt callstack 0
   974                           
   975                           ; 4 bytes @ 0xBC
   976  0001BC                     	ds	4
   977  0001C0                     _efgtoa$976:
   978                           	opt callstack 0
   979                           
   980                           ; 2 bytes @ 0xC0
   981  0001C0                     	ds	2
   982  0001C2                     _efgtoa$977:
   983                           	opt callstack 0
   984                           
   985                           ; 2 bytes @ 0xC2
   986  0001C2                     	ds	2
   987  0001C4                     _efgtoa$982:
   988                           	opt callstack 0
   989                           
   990                           ; 2 bytes @ 0xC4
   991  0001C4                     	ds	2
   992  0001C6                     _efgtoa$986:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0xC6
   996  0001C6                     	ds	2
   997  0001C8                     _efgtoa$987:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0xC8
  1001  0001C8                     	ds	2
  1002  0001CA                     _efgtoa$988:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0xCA
  1006  0001CA                     	ds	2
  1007  0001CC                     efgtoa@t:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0xCC
  1011  0001CC                     	ds	2
  1012  0001CE                     efgtoa@pp:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0xCE
  1016  0001CE                     	ds	2
  1017  0001D0                     efgtoa@m:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 2 bytes @ 0xD0
  1021  0001D0                     	ds	2
  1022  0001D2                     efgtoa@ne:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 2 bytes @ 0xD2
  1026  0001D2                     	ds	2
  1027  0001D4                     efgtoa@d:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 2 bytes @ 0xD4
  1031  0001D4                     	ds	2
  1032  0001D6                     efgtoa@sign:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 2 bytes @ 0xD6
  1036  0001D6                     	ds	2
  1037  0001D8                     efgtoa@p:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 2 bytes @ 0xD8
  1041  0001D8                     	ds	2
  1042  0001DA                     efgtoa@nmode:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 1 bytes @ 0xDA
  1046  0001DA                     	ds	1
  1047  0001DB                     efgtoa@w:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0xDB
  1051  0001DB                     	ds	2
  1052  0001DD                     efgtoa@mode:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 1 bytes @ 0xDD
  1056  0001DD                     	ds	1
  1057  0001DE                     efgtoa@h:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 4 bytes @ 0xDE
  1061  0001DE                     	ds	4
  1062  0001E2                     efgtoa@l:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 4 bytes @ 0xE2
  1066  0001E2                     	ds	4
  1067  0001E6                     efgtoa@g:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 4 bytes @ 0xE6
  1071  0001E6                     	ds	4
  1072  0001EA                     efgtoa@i:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0xEA
  1076  0001EA                     	ds	2
  1077  0001EC                     efgtoa@e:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 2 bytes @ 0xEC
  1081  0001EC                     	ds	2
  1082  0001EE                     efgtoa@n:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 2 bytes @ 0xEE
  1086  0001EE                     	ds	2
  1087  0001F0                     efgtoa@u:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 4 bytes @ 0xF0
  1091  0001F0                     	ds	4
  1092  0001F4                     ?_vfprintf:
  1093                           	opt callstack 0
  1094  0001F4                     vfprintf@fp:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 2 bytes @ 0xF4
  1098  0001F4                     	ds	2
  1099  0001F6                     vfprintf@fmt:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 2 bytes @ 0xF6
  1103  0001F6                     	ds	2
  1104  0001F8                     vfprintf@ap:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 2 bytes @ 0xF8
  1108  0001F8                     	ds	2
  1109                           
  1110                           	psect	cstackBANK0
  1111  000080                     __pcstackBANK0:
  1112                           	opt callstack 0
  1113  000080                     logf@R:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x0
  1117  000080                     	ds	4
  1118  000084                     logf@t1:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x4
  1122  000084                     	ds	4
  1123  000088                     logf@t2:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x8
  1127  000088                     	ds	4
  1128  00008C                     _logf$2034:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 4 bytes @ 0xC
  1132  00008C                     	ds	4
  1133  000090                     _logf$2035:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x10
  1137  000090                     	ds	4
  1138  000094                     _logf$2036:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x14
  1142  000094                     	ds	4
  1143  000098                     _logf$2037:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x18
  1147  000098                     	ds	4
  1148  00009C                     logf@k:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x1C
  1152  00009C                     	ds	2
  1153  00009E                     logf@hfsq:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x1E
  1157  00009E                     	ds	4
  1158  0000A2                     logf@dk:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x22
  1162  0000A2                     	ds	4
  1163  0000A6                     logf@s:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 4 bytes @ 0x26
  1167  0000A6                     	ds	4
  1168  0000AA                     logf@z:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x2A
  1172  0000AA                     	ds	4
  1173  0000AE                     logf@w:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x2E
  1177  0000AE                     	ds	4
  1178  0000B2                     _logf$2033:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x32
  1182  0000B2                     	ds	4
  1183  0000B6                     logf@u:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 4 bytes @ 0x36
  1187  0000B6                     	ds	4
  1188  0000BA                     logf@f:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x3A
  1192  0000BA                     	ds	4
  1193  0000BE                     logf@ix:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x3E
  1197  0000BE                     	ds	4
  1198  0000C2                     ?_powf:
  1199                           	opt callstack 0
  1200  0000C2                     powf@x:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x42
  1204  0000C2                     	ds	4
  1205  0000C6                     powf@y:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 4 bytes @ 0x46
  1209  0000C6                     	ds	4
  1210  0000CA                     ?___fltol:
  1211                           	opt callstack 0
  1212  0000CA                     ___fltol@f1:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x4A
  1216  0000CA                     	ds	4
  1217  0000CE                     ?_MQGetPercentage:
  1218                           	opt callstack 0
  1219  0000CE                     ?_efgtoa:
  1220                           	opt callstack 0
  1221  0000CE                     efgtoa@fp:
  1222                           	opt callstack 0
  1223  0000CE                     MQGetPercentage@rs_ro_ratio:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 4 bytes @ 0x4E
  1227  0000CE                     	ds	2
  1228  0000D0                     efgtoa@f:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x50
  1232  0000D0                     	ds	2
  1233  0000D2                     MQGetPercentage@pcurve:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x52
  1237  0000D2                     	ds	2
  1238  0000D4                     efgtoa@c:
  1239                           	opt callstack 0
  1240  0000D4                     _MQGetPercentage$2028:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x54
  1244  0000D4                     	ds	1
  1245  0000D5                     ??_efgtoa:
  1246                           
  1247                           ; 1 bytes @ 0x55
  1248  0000D5                     	ds	3
  1249  0000D8                     _MQGetPercentage$2029:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x58
  1253  0000D8                     	ds	2
  1254  0000DA                     ?_vfpfcnvrt:
  1255                           	opt callstack 0
  1256  0000DA                     vfpfcnvrt@fp:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x5A
  1260  0000DA                     	ds	2
  1261  0000DC                     vfpfcnvrt@fmt:
  1262                           	opt callstack 0
  1263  0000DC                     _MQGetPercentage$2030:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x5C
  1267  0000DC                     	ds	2
  1268  0000DE                     vfpfcnvrt@ap:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x5E
  1272  0000DE                     	ds	2
  1273  0000E0                     ??_vfpfcnvrt:
  1274  0000E0                     ?_MQGetGasPercentage:
  1275                           	opt callstack 0
  1276  0000E0                     MQGetGasPercentage@rs_ro_ratio:
  1277                           	opt callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x60
  1280  0000E0                     	ds	4
  1281  0000E4                     MQGetGasPercentage@gas_id:
  1282                           	opt callstack 0
  1283  0000E4                     vfpfcnvrt@cp:
  1284                           	opt callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x64
  1287  0000E4                     	ds	2
  1288  0000E6                     _vfpfcnvrt$1013:
  1289                           	opt callstack 0
  1290  0000E6                     _MQGetGasPercentage$2031:
  1291                           	opt callstack 0
  1292                           
  1293                           ; 4 bytes @ 0x66
  1294  0000E6                     	ds	2
  1295  0000E8                     _vfpfcnvrt$1017:
  1296                           	opt callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x68
  1299  0000E8                     	ds	2
  1300  0000EA                     MQ_Read@values:
  1301                           	opt callstack 0
  1302  0000EA                     vfpfcnvrt@ct:
  1303                           	opt callstack 0
  1304                           
  1305                           ; 3 bytes @ 0x6A
  1306  0000EA                     	ds	2
  1307  0000EC                     ??_MQ_Read:
  1308                           
  1309                           ; 1 bytes @ 0x6C
  1310  0000EC                     	ds	1
  1311  0000ED                     vfpfcnvrt@c:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 1 bytes @ 0x6D
  1315  0000ED                     	ds	1
  1316  0000EE                     MQ_Read@digital:
  1317                           	opt callstack 0
  1318  0000EE                     vfpfcnvrt@f:
  1319                           	opt callstack 0
  1320                           
  1321                           ; 4 bytes @ 0x6E
  1322  0000EE                     	ds	2
  1323  0000F0                     MQ_Read@res:
  1324                           	opt callstack 0
  1325                           
  1326                           ; 4 bytes @ 0x70
  1327  0000F0                     	ds	2
  1328  0000F2                     vfprintf@cfmt:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x72
  1332  0000F2                     	ds	2
  1333  0000F4                     _MQ_Read$2032:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 4 bytes @ 0x74
  1337  0000F4                     	ds	4
  1338                           
  1339                           	psect	cstackCOMRAM
  1340  000001                     __pcstackCOMRAM:
  1341                           	opt callstack 0
  1342  000001                     ?_strlen:
  1343                           	opt callstack 0
  1344  000001                     ?___fpclassifyf:
  1345                           	opt callstack 0
  1346  000001                     ?_isupper:
  1347                           	opt callstack 0
  1348  000001                     ?_isdigit:
  1349                           	opt callstack 0
  1350  000001                     ?_strncmp:
  1351                           	opt callstack 0
  1352  000001                     ?_isspace:
  1353                           	opt callstack 0
  1354  000001                     ?___wmul:
  1355                           	opt callstack 0
  1356  000001                     ?___awdiv:
  1357                           	opt callstack 0
  1358  000001                     ?i2___awmod:
  1359                           	opt callstack 0
  1360  000001                     ?___fladd:
  1361                           	opt callstack 0
  1362  000001                     ?_fabsf:
  1363                           	opt callstack 0
  1364  000001                     ?_nanf:
  1365                           	opt callstack 0
  1366  000001                     ?___flneg:
  1367                           	opt callstack 0
  1368  000001                     ?___xxtofl:
  1369                           	opt callstack 0
  1370  000001                     ___wmul@multiplier:
  1371                           	opt callstack 0
  1372  000001                     ___awdiv@dividend:
  1373                           	opt callstack 0
  1374  000001                     isdigit@c:
  1375                           	opt callstack 0
  1376  000001                     isspace@c:
  1377                           	opt callstack 0
  1378  000001                     isupper@c:
  1379                           	opt callstack 0
  1380  000001                     memset@dest:
  1381                           	opt callstack 0
  1382  000001                     fputc@c:
  1383                           	opt callstack 0
  1384  000001                     strcpy@dest:
  1385                           	opt callstack 0
  1386  000001                     strlen@s:
  1387                           	opt callstack 0
  1388  000001                     strncmp@_l:
  1389                           	opt callstack 0
  1390  000001                     nanf@s:
  1391                           	opt callstack 0
  1392  000001                     i2___awmod@dividend:
  1393                           	opt callstack 0
  1394  000001                     ___fleq@ff1:
  1395                           	opt callstack 0
  1396  000001                     ___flneg@f1:
  1397                           	opt callstack 0
  1398  000001                     ___fladd@b:
  1399                           	opt callstack 0
  1400  000001                     ___xxtofl@val:
  1401                           	opt callstack 0
  1402  000001                     ___fpclassifyf@x:
  1403                           	opt callstack 0
  1404  000001                     fabsf@x:
  1405                           	opt callstack 0
  1406                           
  1407                           ; 4 bytes @ 0x0
  1408  000001                     	ds	2
  1409  000003                     ??_isupper:
  1410  000003                     ??_isdigit:
  1411  000003                     ??_isspace:
  1412  000003                     ___wmul@multiplicand:
  1413                           	opt callstack 0
  1414  000003                     ___awdiv@divisor:
  1415                           	opt callstack 0
  1416  000003                     memset@c:
  1417                           	opt callstack 0
  1418  000003                     fputc@fp:
  1419                           	opt callstack 0
  1420  000003                     strcpy@src:
  1421                           	opt callstack 0
  1422  000003                     strlen@a:
  1423                           	opt callstack 0
  1424  000003                     strncmp@_r:
  1425                           	opt callstack 0
  1426  000003                     i2___awmod@divisor:
  1427                           	opt callstack 0
  1428                           
  1429                           ; 2 bytes @ 0x2
  1430  000003                     	ds	2
  1431  000005                     ??_fputc:
  1432  000005                     ??___fpclassifyf:
  1433  000005                     ??_strcpy:
  1434  000005                     ??___xxtofl:
  1435  000005                     ___awdiv@counter:
  1436                           	opt callstack 0
  1437  000005                     i2___awmod@counter:
  1438                           	opt callstack 0
  1439  000005                     ___wmul@product:
  1440                           	opt callstack 0
  1441  000005                     memset@n:
  1442                           	opt callstack 0
  1443  000005                     strncmp@n:
  1444                           	opt callstack 0
  1445  000005                     ___fleq@ff2:
  1446                           	opt callstack 0
  1447  000005                     ___fladd@a:
  1448                           	opt callstack 0
  1449  000005                     fabsf@u:
  1450                           	opt callstack 0
  1451  000005                     nanf@u:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 4 bytes @ 0x4
  1455  000005                     	ds	1
  1456  000006                     ___awdiv@sign:
  1457                           	opt callstack 0
  1458  000006                     i2___awmod@sign:
  1459                           	opt callstack 0
  1460                           
  1461                           ; 1 bytes @ 0x5
  1462  000006                     	ds	1
  1463  000007                     ??_memset:
  1464  000007                     ??_strncmp:
  1465  000007                     ?_tolower:
  1466                           	opt callstack 0
  1467  000007                     _isspace$1520:
  1468                           	opt callstack 0
  1469  000007                     ___awdiv@quotient:
  1470                           	opt callstack 0
  1471  000007                     strcpy@s:
  1472                           	opt callstack 0
  1473  000007                     tolower@c:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x6
  1477  000007                     	ds	1
  1478  000008                     ?_atoi:
  1479                           	opt callstack 0
  1480  000008                     atoi@s:
  1481                           	opt callstack 0
  1482  000008                     strncmp@l:
  1483                           	opt callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x7
  1486  000008                     	ds	1
  1487  000009                     ??_tolower:
  1488  000009                     ??___fladd:
  1489  000009                     ??___fleq:
  1490  000009                     ___xxtofl@sign:
  1491                           	opt callstack 0
  1492  000009                     ___fpclassifyf@e:
  1493                           	opt callstack 0
  1494  000009                     memset@k:
  1495                           	opt callstack 0
  1496  000009                     strcpy@d:
  1497                           	opt callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x8
  1500  000009                     	ds	1
  1501  00000A                     ??_atoi:
  1502  00000A                     ?_stoa:
  1503                           	opt callstack 0
  1504  00000A                     ___xxtofl@exp:
  1505                           	opt callstack 0
  1506  00000A                     stoa@fp:
  1507                           	opt callstack 0
  1508  00000A                     fputs@s:
  1509                           	opt callstack 0
  1510  00000A                     strncmp@r:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x9
  1514  00000A                     	ds	1
  1515  00000B                     memset@s:
  1516                           	opt callstack 0
  1517  00000B                     ___xxtofl@arg:
  1518                           	opt callstack 0
  1519  00000B                     ___fpclassifyf@u:
  1520                           	opt callstack 0
  1521                           
  1522                           ; 4 bytes @ 0xA
  1523  00000B                     	ds	1
  1524  00000C                     stoa@s:
  1525                           	opt callstack 0
  1526  00000C                     fputs@fp:
  1527                           	opt callstack 0
  1528                           
  1529                           ; 2 bytes @ 0xB
  1530  00000C                     	ds	1
  1531  00000D                     ___fladd@signs:
  1532                           	opt callstack 0
  1533  00000D                     _tolower$1758:
  1534                           	opt callstack 0
  1535                           
  1536                           ; 2 bytes @ 0xC
  1537  00000D                     	ds	1
  1538  00000E                     ??_stoa:
  1539  00000E                     ___fladd@aexp:
  1540                           	opt callstack 0
  1541  00000E                     fputs@c:
  1542                           	opt callstack 0
  1543  00000E                     atoi@neg:
  1544                           	opt callstack 0
  1545                           
  1546                           ; 2 bytes @ 0xD
  1547  00000E                     	ds	1
  1548  00000F                     ___fladd@bexp:
  1549                           	opt callstack 0
  1550  00000F                     fputs@i:
  1551                           	opt callstack 0
  1552  00000F                     stoa@nuls:
  1553                           	opt callstack 0
  1554                           
  1555                           ; 7 bytes @ 0xE
  1556  00000F                     	ds	1
  1557  000010                     ___fladd@grs:
  1558                           	opt callstack 0
  1559  000010                     _atoi$1489:
  1560                           	opt callstack 0
  1561                           
  1562                           ; 2 bytes @ 0xF
  1563  000010                     	ds	1
  1564  000011                     ?_pad:
  1565                           	opt callstack 0
  1566  000011                     ?___flmul:
  1567                           	opt callstack 0
  1568  000011                     pad@fp:
  1569                           	opt callstack 0
  1570  000011                     ___flmul@b:
  1571                           	opt callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x10
  1574  000011                     	ds	1
  1575  000012                     _atoi$1491:
  1576                           	opt callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x11
  1579  000012                     	ds	1
  1580  000013                     pad@buf:
  1581                           	opt callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x12
  1584  000013                     	ds	1
  1585  000014                     _atoi$1490:
  1586                           	opt callstack 0
  1587                           
  1588                           ; 1 bytes @ 0x13
  1589  000014                     	ds	1
  1590  000015                     pad@p:
  1591                           	opt callstack 0
  1592  000015                     atoi@n:
  1593                           	opt callstack 0
  1594  000015                     ___flmul@a:
  1595                           	opt callstack 0
  1596                           
  1597                           ; 4 bytes @ 0x14
  1598  000015                     	ds	1
  1599  000016                     stoa@i:
  1600                           	opt callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x15
  1603  000016                     	ds	1
  1604  000017                     ??_pad:
  1605                           
  1606                           ; 1 bytes @ 0x16
  1607  000017                     	ds	1
  1608  000018                     pad@i:
  1609                           	opt callstack 0
  1610  000018                     stoa@w:
  1611                           	opt callstack 0
  1612                           
  1613                           ; 2 bytes @ 0x17
  1614  000018                     	ds	1
  1615  000019                     ??___flmul:
  1616                           
  1617                           ; 1 bytes @ 0x18
  1618  000019                     	ds	1
  1619  00001A                     pad@w:
  1620                           	opt callstack 0
  1621  00001A                     stoa@cp:
  1622                           	opt callstack 0
  1623                           
  1624                           ; 2 bytes @ 0x19
  1625  00001A                     	ds	2
  1626  00001C                     stoa@p:
  1627                           	opt callstack 0
  1628                           
  1629                           ; 2 bytes @ 0x1B
  1630  00001C                     	ds	1
  1631  00001D                     ___flmul@sign:
  1632                           	opt callstack 0
  1633                           
  1634                           ; 1 bytes @ 0x1C
  1635  00001D                     	ds	1
  1636  00001E                     ___flmul@aexp:
  1637                           	opt callstack 0
  1638  00001E                     stoa@l:
  1639                           	opt callstack 0
  1640                           
  1641                           ; 2 bytes @ 0x1D
  1642  00001E                     	ds	1
  1643  00001F                     ___flmul@bexp:
  1644                           	opt callstack 0
  1645                           
  1646                           ; 1 bytes @ 0x1E
  1647  00001F                     	ds	1
  1648  000020                     ___flmul@grs:
  1649                           	opt callstack 0
  1650                           
  1651                           ; 4 bytes @ 0x1F
  1652  000020                     	ds	4
  1653  000024                     ___flmul@prod:
  1654                           	opt callstack 0
  1655                           
  1656                           ; 4 bytes @ 0x23
  1657  000024                     	ds	4
  1658  000028                     ___flmul@temp:
  1659                           	opt callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x27
  1662  000028                     	ds	2
  1663  00002A                     ?___flsub:
  1664                           	opt callstack 0
  1665  00002A                     ?_scalbnf:
  1666                           	opt callstack 0
  1667  00002A                     ___flsub@b:
  1668                           	opt callstack 0
  1669  00002A                     scalbnf@x:
  1670                           	opt callstack 0
  1671                           
  1672                           ; 4 bytes @ 0x29
  1673  00002A                     	ds	4
  1674  00002E                     scalbnf@n:
  1675                           	opt callstack 0
  1676  00002E                     ___flsub@a:
  1677                           	opt callstack 0
  1678                           
  1679                           ; 4 bytes @ 0x2D
  1680  00002E                     	ds	2
  1681  000030                     ??_scalbnf:
  1682                           
  1683                           ; 1 bytes @ 0x2F
  1684  000030                     	ds	2
  1685  000032                     ?___fldiv:
  1686                           	opt callstack 0
  1687  000032                     ___flge@ff1:
  1688                           	opt callstack 0
  1689  000032                     ___fldiv@b:
  1690                           	opt callstack 0
  1691                           
  1692                           ; 4 bytes @ 0x31
  1693  000032                     	ds	2
  1694  000034                     scalbnf@u:
  1695                           	opt callstack 0
  1696                           
  1697                           ; 4 bytes @ 0x33
  1698  000034                     	ds	2
  1699  000036                     ___flge@ff2:
  1700                           	opt callstack 0
  1701  000036                     ___fldiv@a:
  1702                           	opt callstack 0
  1703                           
  1704                           ; 4 bytes @ 0x35
  1705  000036                     	ds	2
  1706  000038                     scalbnf@y:
  1707                           	opt callstack 0
  1708                           
  1709                           ; 4 bytes @ 0x37
  1710  000038                     	ds	2
  1711  00003A                     ??___fldiv:
  1712  00003A                     ??___flge:
  1713                           
  1714                           ; 1 bytes @ 0x39
  1715  00003A                     	ds	4
  1716  00003E                     ?_sqrtf:
  1717                           	opt callstack 0
  1718  00003E                     ___fldiv@rem:
  1719                           	opt callstack 0
  1720  00003E                     sqrtf@x:
  1721                           	opt callstack 0
  1722                           
  1723                           ; 4 bytes @ 0x3D
  1724  00003E                     	ds	4
  1725  000042                     ??_sqrtf:
  1726  000042                     ___fldiv@sign:
  1727                           	opt callstack 0
  1728                           
  1729                           ; 1 bytes @ 0x41
  1730  000042                     	ds	1
  1731  000043                     ___fldiv@new_exp:
  1732                           	opt callstack 0
  1733                           
  1734                           ; 2 bytes @ 0x42
  1735  000043                     	ds	2
  1736  000045                     ___fldiv@grs:
  1737                           	opt callstack 0
  1738                           
  1739                           ; 4 bytes @ 0x44
  1740  000045                     	ds	4
  1741  000049                     ___fldiv@bexp:
  1742                           	opt callstack 0
  1743                           
  1744                           ; 1 bytes @ 0x48
  1745  000049                     	ds	1
  1746  00004A                     ___fldiv@aexp:
  1747                           	opt callstack 0
  1748                           
  1749                           ; 1 bytes @ 0x49
  1750  00004A                     	ds	1
  1751  00004B                     ?_logf:
  1752                           	opt callstack 0
  1753  00004B                     ?_floorf:
  1754                           	opt callstack 0
  1755  00004B                     ?_ADC_Read:
  1756                           	opt callstack 0
  1757  00004B                     ADC_Read@channel:
  1758                           	opt callstack 0
  1759  00004B                     floorf@x:
  1760                           	opt callstack 0
  1761  00004B                     logf@x:
  1762                           	opt callstack 0
  1763  00004B                     sqrtf@s:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 4 bytes @ 0x4A
  1767  00004B                     	ds	4
  1768  00004F                     ??_logf:
  1769  00004F                     ??_floorf:
  1770  00004F                     ??_ADC_Read:
  1771  00004F                     sqrtf@i:
  1772                           	opt callstack 0
  1773                           
  1774                           ; 4 bytes @ 0x4E
  1775  00004F                     	ds	1
  1776  000050                     ADC_Read@digital:
  1777                           	opt callstack 0
  1778                           
  1779                           ; 2 bytes @ 0x4F
  1780  000050                     	ds	2
  1781  000052                     ADC_Read@result:
  1782                           	opt callstack 0
  1783                           
  1784                           ; 4 bytes @ 0x51
  1785  000052                     	ds	1
  1786  000053                     sqrtf@__xc8_float_word:
  1787                           	opt callstack 0
  1788                           
  1789                           ; 4 bytes @ 0x52
  1790  000053                     	ds	2
  1791  000055                     floorf@m:
  1792                           	opt callstack 0
  1793                           
  1794                           ; 4 bytes @ 0x54
  1795  000055                     	ds	2
  1796  000057                     sqrtf@q:
  1797                           	opt callstack 0
  1798                           
  1799                           ; 4 bytes @ 0x56
  1800  000057                     	ds	2
  1801  000059                     floorf@e:
  1802                           	opt callstack 0
  1803                           
  1804                           ; 2 bytes @ 0x58
  1805  000059                     	ds	2
  1806  00005B                     floorf@u:
  1807                           	opt callstack 0
  1808  00005B                     sqrtf@t:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 4 bytes @ 0x5A
  1812  00005B                     	ds	4
  1813  00005F                     sqrtf@z:
  1814                           	opt callstack 0
  1815                           
  1816                           ; 4 bytes @ 0x5E
  1817  00005F                     	ds	4
  1818  000063                     sqrtf@m:
  1819                           	opt callstack 0
  1820                           
  1821                           ; 4 bytes @ 0x62
  1822  000063                     	ds	4
  1823  000067                     sqrtf@r:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 4 bytes @ 0x66
  1827  000067                     	ds	4
  1828  00006B                     sqrtf@ix:
  1829                           	opt callstack 0
  1830                           
  1831                           ; 4 bytes @ 0x6A
  1832  00006B                     	ds	4
  1833  00006F                     ??_powf:
  1834                           
  1835                           ; 1 bytes @ 0x6E
  1836  00006F                     	ds	9
  1837  000078                     ??___fltol:
  1838                           
  1839                           ; 1 bytes @ 0x77
  1840  000078                     	ds	4
  1841  00007C                     ___fltol@sign1:
  1842                           	opt callstack 0
  1843                           
  1844                           ; 1 bytes @ 0x7B
  1845  00007C                     	ds	1
  1846  00007D                     ___fltol@exp1:
  1847                           	opt callstack 0
  1848                           
  1849                           ; 1 bytes @ 0x7C
  1850  00007D                     	ds	1
  1851  00007E                     
  1852                           ; 1 bytes @ 0x7D
  1853 ;;
  1854 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1855 ;;
  1856 ;; *************** function _main *****************
  1857 ;; Defined at:
  1858 ;;		line 13 in file "main.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1872 ;;      Params:         0       0       0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0
  1875 ;;      Totals:         0       0       0       0       0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels required when called:   16
  1878 ;; This function calls:
  1879 ;;		_SYSTEM_Initialize
  1880 ;; This function is called by:
  1881 ;;		Startup code after reset
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text0
  1886  006A0C                     __ptext0:
  1887                           	opt callstack 0
  1888  006A0C                     _main:
  1889                           	opt callstack 15
  1890                           
  1891                           ;main.c: 15:     SYSTEM_Initialize() ;
  1892                           
  1893                           ;incstack = 0
  1894  006A0C  ECDB  F034         	call	_SYSTEM_Initialize	;wreg free
  1895  006A10                     l238:
  1896  006A10  D7FF               	goto	l238
  1897  006A12                     __end_of_main:
  1898                           	opt callstack 0
  1899                           
  1900 ;; *************** function _SYSTEM_Initialize *****************
  1901 ;; Defined at:
  1902 ;;		line 73 in file "setting_hardaware/setting.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1916 ;;      Params:         0       0       0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0
  1919 ;;      Totals:         0       0       0       0       0       0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:   15
  1923 ;; This function calls:
  1924 ;;		_ADC_Initialize
  1925 ;;		_LCD_init
  1926 ;;		_OSCILLATOR_Initialize
  1927 ;;		_PIN_MANAGER_Initialize
  1928 ;;		_TMR1_Initialize
  1929 ;;		_buzzer_init
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text1
  1936  0069B6                     __ptext1:
  1937                           	opt callstack 0
  1938  0069B6                     _SYSTEM_Initialize:
  1939                           	opt callstack 15
  1940                           
  1941                           ;setting_hardaware/setting.c: 75:     PIN_MANAGER_Initialize();
  1942                           
  1943                           ;incstack = 0
  1944  0069B6  ECE8  F034         	call	_PIN_MANAGER_Initialize	;wreg free
  1945                           
  1946                           ;setting_hardaware/setting.c: 76:     OSCILLATOR_Initialize();
  1947  0069BA  EC02  F035         	call	_OSCILLATOR_Initialize	;wreg free
  1948                           
  1949                           ;setting_hardaware/setting.c: 77:     LCD_init();
  1950  0069BE  ECB6  F031         	call	_LCD_init	;wreg free
  1951                           
  1952                           ;setting_hardaware/setting.c: 78:     buzzer_init();
  1953  0069C2  EC0A  F035         	call	_buzzer_init	;wreg free
  1954                           
  1955                           ;setting_hardaware/setting.c: 79:     ADC_Initialize();
  1956  0069C6  ECF2  F034         	call	_ADC_Initialize	;wreg free
  1957                           
  1958                           ;setting_hardaware/setting.c: 80:     TMR1_Initialize();
  1959  0069CA  ECCD  F034         	call	_TMR1_Initialize	;wreg free
  1960  0069CE  0012               	return		;funcret
  1961  0069D0                     __end_of_SYSTEM_Initialize:
  1962                           	opt callstack 0
  1963                           
  1964 ;; *************** function _buzzer_init *****************
  1965 ;; Defined at:
  1966 ;;		line 19 in file "setting_hardaware/buzzer.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		None
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1980 ;;      Params:         0       0       0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:   12
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_SYSTEM_Initialize
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text2
  1995  006A14                     __ptext2:
  1996                           	opt callstack 0
  1997  006A14                     _buzzer_init:
  1998                           	opt callstack 17
  1999                           
  2000                           ;incstack = 0
  2001  006A14  0012               	return		;funcret
  2002  006A16                     __end_of_buzzer_init:
  2003                           	opt callstack 0
  2004                           
  2005 ;; *************** function _TMR1_Initialize *****************
  2006 ;; Defined at:
  2007 ;;		line 62 in file "setting_hardaware/setting.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2021 ;;      Params:         0       0       0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0
  2024 ;;      Totals:         0       0       0       0       0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:   12
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_SYSTEM_Initialize
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text3
  2036  00699A                     __ptext3:
  2037                           	opt callstack 0
  2038  00699A                     _TMR1_Initialize:
  2039                           	opt callstack 17
  2040                           
  2041                           ;setting_hardaware/setting.c: 63:     T1CONbits.RD16=1;
  2042                           
  2043                           ;incstack = 0
  2044  00699A  8ECD               	bsf	205,7,c	;volatile
  2045                           
  2046                           ;setting_hardaware/setting.c: 64:     T1CONbits.T1CKPS=2;
  2047  00699C  50CD               	movf	205,w,c	;volatile
  2048  00699E  0BCF               	andlw	-49
  2049  0069A0  0920               	iorlw	32
  2050  0069A2  6ECD               	movwf	205,c	;volatile
  2051                           
  2052                           ;setting_hardaware/setting.c: 65:     T1CONbits.TMR1ON=1;
  2053  0069A4  80CD               	bsf	205,0,c	;volatile
  2054                           
  2055                           ;setting_hardaware/setting.c: 66:     PIR1bits.TMR1IF=0;
  2056  0069A6  909E               	bcf	158,0,c	;volatile
  2057                           
  2058                           ;setting_hardaware/setting.c: 67:     PIE1bits.TMR1IE=1;
  2059  0069A8  809D               	bsf	157,0,c	;volatile
  2060                           
  2061                           ;setting_hardaware/setting.c: 68:     IPR1bits.TMR1IP=1;
  2062  0069AA  809F               	bsf	159,0,c	;volatile
  2063                           
  2064                           ;setting_hardaware/setting.c: 69:     TMR1=timer_val;
  2065  0069AC  C29D  FFCE         	movff	_timer_val,4046	;volatile
  2066  0069B0  C29E  FFCF         	movff	_timer_val+1,4047	;volatile
  2067  0069B4  0012               	return		;funcret
  2068  0069B6                     __end_of_TMR1_Initialize:
  2069                           	opt callstack 0
  2070                           
  2071 ;; *************** function _PIN_MANAGER_Initialize *****************
  2072 ;; Defined at:
  2073 ;;		line 12 in file "setting_hardaware/pin_manager.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2087 ;;      Params:         0       0       0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0
  2090 ;;      Totals:         0       0       0       0       0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:   12
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_SYSTEM_Initialize
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text4
  2102  0069D0                     __ptext4:
  2103                           	opt callstack 0
  2104  0069D0                     _PIN_MANAGER_Initialize:
  2105                           	opt callstack 17
  2106                           
  2107                           ;setting_hardaware/pin_manager.c: 13:     ADCON1 = 0x0D;
  2108                           
  2109                           ;incstack = 0
  2110  0069D0  0E0D               	movlw	13
  2111  0069D2  6EC1               	movwf	193,c	;volatile
  2112                           
  2113                           ;setting_hardaware/pin_manager.c: 16:     TRISC=0X00;
  2114  0069D4  0E00               	movlw	0
  2115  0069D6  6E94               	movwf	148,c	;volatile
  2116                           
  2117                           ;setting_hardaware/pin_manager.c: 17:     TRISD=0X00;
  2118  0069D8  0E00               	movlw	0
  2119  0069DA  6E95               	movwf	149,c	;volatile
  2120                           
  2121                           ;setting_hardaware/pin_manager.c: 20:     TRISBbits.RB0=0;
  2122  0069DC  9093               	bcf	147,0,c	;volatile
  2123                           
  2124                           ;setting_hardaware/pin_manager.c: 23:     TRISA = 0x03;
  2125  0069DE  0E03               	movlw	3
  2126  0069E0  6E92               	movwf	146,c	;volatile
  2127  0069E2  0012               	return		;funcret
  2128  0069E4                     __end_of_PIN_MANAGER_Initialize:
  2129                           	opt callstack 0
  2130                           
  2131 ;; *************** function _OSCILLATOR_Initialize *****************
  2132 ;; Defined at:
  2133 ;;		line 83 in file "setting_hardaware/setting.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		None
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2147 ;;      Params:         0       0       0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0       0       0
  2149 ;;      Temps:          0       0       0       0       0       0       0
  2150 ;;      Totals:         0       0       0       0       0       0       0
  2151 ;;Total ram usage:        0 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:   12
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_SYSTEM_Initialize
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text5
  2162  006A04                     __ptext5:
  2163                           	opt callstack 0
  2164  006A04                     _OSCILLATOR_Initialize:
  2165                           	opt callstack 17
  2166                           
  2167                           ;setting_hardaware/setting.c: 85:     IRCF2 = 1;
  2168                           
  2169                           ;incstack = 0
  2170  006A04  8CD3               	bsf	4051,6,c	;volatile
  2171                           
  2172                           ;setting_hardaware/setting.c: 86:     IRCF1 = 1;
  2173  006A06  8AD3               	bsf	4051,5,c	;volatile
  2174                           
  2175                           ;setting_hardaware/setting.c: 87:     IRCF0 = 0;
  2176  006A08  98D3               	bcf	4051,4,c	;volatile
  2177  006A0A  0012               	return		;funcret
  2178  006A0C                     __end_of_OSCILLATOR_Initialize:
  2179                           	opt callstack 0
  2180                           
  2181 ;; *************** function _LCD_init *****************
  2182 ;; Defined at:
  2183 ;;		line 55 in file "setting_hardaware/LCD.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2197 ;;      Params:         0       0       0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       1       0       0
  2200 ;;      Totals:         0       0       0       0       1       0       0
  2201 ;;Total ram usage:        1 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:   14
  2204 ;; This function calls:
  2205 ;;		_Cmd
  2206 ;;		_Send2Lcd
  2207 ;; This function is called by:
  2208 ;;		_SYSTEM_Initialize
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text6
  2213  00636C                     __ptext6:
  2214                           	opt callstack 0
  2215  00636C                     _LCD_init:
  2216                           	opt callstack 15
  2217                           
  2218                           ;setting_hardaware/LCD.c: 57:     _delay((unsigned long)((15)*(4000000/4000.0)));
  2219                           
  2220                           ;incstack = 0
  2221  00636C  0E14               	movlw	20
  2222  00636E  0103               	movlb	3	; () banked
  2223  006370  6F75               	movwf	??_LCD_init& (0+255),b
  2224  006372  0E79               	movlw	121
  2225  006374                     u13867:
  2226  006374  2EE8               	decfsz	wreg,f,c
  2227  006376  D7FE               	bra	u13867
  2228  006378  2F75               	decfsz	??_LCD_init& (0+255),f,b
  2229  00637A  D7FC               	bra	u13867
  2230  00637C  D000               	nop2	
  2231                           
  2232                           ;setting_hardaware/LCD.c: 58:     Cmd(0X38);
  2233  00637E  0E00               	movlw	0
  2234  006380  0103               	movlb	3	; () banked
  2235  006382  6F70               	movwf	(Cmd@Value+1)& (0+255),b
  2236  006384  0E38               	movlw	56
  2237  006386  6F6F               	movwf	Cmd@Value& (0+255),b
  2238  006388  EC35  F034         	call	_Cmd	;wreg free
  2239                           
  2240                           ;setting_hardaware/LCD.c: 59:     _delay((unsigned long)((125)*(4000000/4000000.0)));
  2241  00638C  0E29               	movlw	41
  2242  00638E                     u13877:
  2243  00638E  2EE8               	decfsz	wreg,f,c
  2244  006390  D7FE               	bra	u13877
  2245  006392  D000               	nop2	
  2246                           
  2247                           ;setting_hardaware/LCD.c: 61:     Cmd(0X01);
  2248  006394  0E00               	movlw	0
  2249  006396  0103               	movlb	3	; () banked
  2250  006398  6F70               	movwf	(Cmd@Value+1)& (0+255),b
  2251  00639A  0E01               	movlw	1
  2252  00639C  6F6F               	movwf	Cmd@Value& (0+255),b
  2253  00639E  EC35  F034         	call	_Cmd	;wreg free
  2254                           
  2255                           ;setting_hardaware/LCD.c: 62:     Cmd(0X06);
  2256  0063A2  0E00               	movlw	0
  2257  0063A4  0103               	movlb	3	; () banked
  2258  0063A6  6F70               	movwf	(Cmd@Value+1)& (0+255),b
  2259  0063A8  0E06               	movlw	6
  2260  0063AA  6F6F               	movwf	Cmd@Value& (0+255),b
  2261  0063AC  EC35  F034         	call	_Cmd	;wreg free
  2262                           
  2263                           ;setting_hardaware/LCD.c: 63:     Cmd(0X0C);
  2264  0063B0  0E00               	movlw	0
  2265  0063B2  0103               	movlb	3	; () banked
  2266  0063B4  6F70               	movwf	(Cmd@Value+1)& (0+255),b
  2267  0063B6  0E0C               	movlw	12
  2268  0063B8  6F6F               	movwf	Cmd@Value& (0+255),b
  2269  0063BA  EC35  F034         	call	_Cmd	;wreg free
  2270                           
  2271                           ;setting_hardaware/LCD.c: 64:     _delay((unsigned long)((125)*(4000000/4000000.0)));
  2272  0063BE  0E29               	movlw	41
  2273  0063C0                     u13887:
  2274  0063C0  2EE8               	decfsz	wreg,f,c
  2275  0063C2  D7FE               	bra	u13887
  2276  0063C4  D000               	nop2	
  2277                           
  2278                           ;setting_hardaware/LCD.c: 65:     Send2Lcd(0x80,"monitor");
  2279  0063C6  0EC9               	movlw	low STR_1
  2280  0063C8  0103               	movlb	3	; () banked
  2281  0063CA  6F72               	movwf	Send2Lcd@Lcd& (0+255),b
  2282  0063CC  0E06               	movlw	high STR_1
  2283  0063CE  6F73               	movwf	(Send2Lcd@Lcd+1)& (0+255),b
  2284  0063D0  0E80               	movlw	128
  2285  0063D2  EC8B  F033         	call	_Send2Lcd
  2286                           
  2287                           ;setting_hardaware/LCD.c: 66:     Send2Lcd(0xc0,"start");
  2288  0063D6  0ED1               	movlw	low STR_2
  2289  0063D8  0103               	movlb	3	; () banked
  2290  0063DA  6F72               	movwf	Send2Lcd@Lcd& (0+255),b
  2291  0063DC  0E06               	movlw	high STR_2
  2292  0063DE  6F73               	movwf	(Send2Lcd@Lcd+1)& (0+255),b
  2293  0063E0  0EC0               	movlw	192
  2294  0063E2  EC8B  F033         	call	_Send2Lcd
  2295  0063E6  0012               	return		;funcret
  2296  0063E8                     __end_of_LCD_init:
  2297                           	opt callstack 0
  2298                           
  2299 ;; *************** function _Send2Lcd *****************
  2300 ;; Defined at:
  2301 ;;		line 41 in file "setting_hardaware/LCD.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  Adr             1    wreg     const unsigned char 
  2304 ;;  Lcd             2   14[BANK3 ] PTR const unsigned char 
  2305 ;;		 -> STR_2(6), STR_1(8), 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  Adr             1   16[BANK3 ] const unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2317 ;;      Params:         0       0       0       0       2       0       0
  2318 ;;      Locals:         0       0       0       0       1       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0
  2320 ;;      Totals:         0       0       0       0       3       0       0
  2321 ;;Total ram usage:        3 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:   13
  2324 ;; This function calls:
  2325 ;;		_Cmd
  2326 ;;		_Data
  2327 ;; This function is called by:
  2328 ;;		_LCD_init
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text7
  2333  006716                     __ptext7:
  2334                           	opt callstack 0
  2335  006716                     _Send2Lcd:
  2336                           	opt callstack 15
  2337                           
  2338                           ;incstack = 0
  2339                           ;Send2Lcd@Adr stored from wreg
  2340  006716  0103               	movlb	3	; () banked
  2341  006718  6F74               	movwf	Send2Lcd@Adr& (0+255),b
  2342                           
  2343                           ;setting_hardaware/LCD.c: 41: void Send2Lcd(const char Adr, const char *Lcd);setting_har
      +                          daware/LCD.c: 42: {;setting_hardaware/LCD.c: 43:  Cmd(Adr);
  2344  00671A  C374  F36F         	movff	Send2Lcd@Adr,Cmd@Value
  2345  00671E  0103               	movlb	3	; () banked
  2346  006720  6B70               	clrf	(Cmd@Value+1)& (0+255),b
  2347  006722  EC35  F034         	call	_Cmd	;wreg free
  2348                           
  2349                           ;setting_hardaware/LCD.c: 44:  while(*Lcd!='\0')
  2350  006726  D00E               	goto	l10349
  2351  006728                     l10345:
  2352                           
  2353                           ;setting_hardaware/LCD.c: 45:  {;setting_hardaware/LCD.c: 46:   Data(*Lcd);
  2354  006728  C372  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  2355  00672C  C373  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  2356  006730                     	if	0	;tblptru may be non-zero
  2357  006730                     	endif
  2358  006730                     	if	0	;tblptru may be non-zero
  2359  006730                     	endif
  2360  006730  0008               	tblrd		*
  2361  006732  50F5               	movf	tablat,w,c
  2362  006734  0103               	movlb	3	; () banked
  2363  006736  6F6F               	movwf	Data@Value& (0+255),b
  2364  006738  6B70               	clrf	(Data@Value+1)& (0+255),b
  2365  00673A  EC1D  F034         	call	_Data	;wreg free
  2366                           
  2367                           ;setting_hardaware/LCD.c: 47:   Lcd++;
  2368  00673E  0103               	movlb	3	; () banked
  2369  006740  4B72               	infsnz	Send2Lcd@Lcd& (0+255),f,b
  2370  006742  2B73               	incf	(Send2Lcd@Lcd+1)& (0+255),f,b
  2371  006744                     l10349:
  2372                           
  2373                           ;setting_hardaware/LCD.c: 44:  while(*Lcd!='\0')
  2374  006744  C372  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  2375  006748  C373  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  2376  00674C                     	if	0	;tblptru may be non-zero
  2377  00674C                     	endif
  2378  00674C                     	if	0	;tblptru may be non-zero
  2379  00674C                     	endif
  2380  00674C  0008               	tblrd		*
  2381  00674E  50F5               	movf	tablat,w,c
  2382  006750  0900               	iorlw	0
  2383  006752  B4D8               	btfsc	status,2,c
  2384  006754  0012               	return	
  2385  006756  D7E8               	goto	l10345
  2386  006758                     __end_of_Send2Lcd:
  2387                           	opt callstack 0
  2388                           
  2389 ;; *************** function _Data *****************
  2390 ;; Defined at:
  2391 ;;		line 28 in file "setting_hardaware/LCD.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  Value           2   11[BANK3 ] int 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2405 ;;      Params:         0       0       0       0       2       0       0
  2406 ;;      Locals:         0       0       0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       1       0       0
  2408 ;;      Totals:         0       0       0       0       3       0       0
  2409 ;;Total ram usage:        3 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:   12
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_Send2Lcd
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text8
  2420  00683A                     __ptext8:
  2421                           	opt callstack 0
  2422  00683A                     _Data:
  2423                           	opt callstack 15
  2424                           
  2425                           ;setting_hardaware/LCD.c: 28: void Data(int Value);setting_hardaware/LCD.c: 29: {;settin
      +                          g_hardaware/LCD.c: 30:  LATD = Value;
  2426                           
  2427                           ;incstack = 0
  2428  00683A  C36F  FF8C         	movff	Data@Value,3980	;volatile
  2429                           
  2430                           ;setting_hardaware/LCD.c: 31:  LATCbits.LC4=1;
  2431  00683E  888B               	bsf	139,4,c	;volatile
  2432                           
  2433                           ;setting_hardaware/LCD.c: 33:  LATCbits.LC6=0;
  2434  006840  9C8B               	bcf	139,6,c	;volatile
  2435                           
  2436                           ;setting_hardaware/LCD.c: 34:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2437  006842  0E08               	movlw	8
  2438  006844                     u13897:
  2439  006844  2EE8               	decfsz	wreg,f,c
  2440  006846  D7FE               	bra	u13897
  2441  006848  F000               	nop	
  2442                           
  2443                           ;setting_hardaware/LCD.c: 35:  LATCbits.LC6=1;
  2444  00684A  8C8B               	bsf	139,6,c	;volatile
  2445                           
  2446                           ;setting_hardaware/LCD.c: 36:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2447  00684C  0E08               	movlw	8
  2448  00684E                     u13907:
  2449  00684E  2EE8               	decfsz	wreg,f,c
  2450  006850  D7FE               	bra	u13907
  2451  006852  F000               	nop	
  2452                           
  2453                           ;setting_hardaware/LCD.c: 37:  LATCbits.LC6=0;
  2454  006854  9C8B               	bcf	139,6,c	;volatile
  2455                           
  2456                           ;setting_hardaware/LCD.c: 38:  _delay((unsigned long)((3)*(4000000/4000.0)));
  2457  006856  0E04               	movlw	4
  2458  006858  0103               	movlb	3	; () banked
  2459  00685A  6F71               	movwf	??_Data& (0+255),b
  2460  00685C  0EE4               	movlw	228
  2461  00685E                     u13917:
  2462  00685E  2EE8               	decfsz	wreg,f,c
  2463  006860  D7FE               	bra	u13917
  2464  006862  2F71               	decfsz	??_Data& (0+255),f,b
  2465  006864  D7FC               	bra	u13917
  2466  006866  F000               	nop	
  2467  006868  0012               	return		;funcret
  2468  00686A                     __end_of_Data:
  2469                           	opt callstack 0
  2470                           
  2471 ;; *************** function _Cmd *****************
  2472 ;; Defined at:
  2473 ;;		line 15 in file "setting_hardaware/LCD.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  Value           2   11[BANK3 ] int 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2487 ;;      Params:         0       0       0       0       2       0       0
  2488 ;;      Locals:         0       0       0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       1       0       0
  2490 ;;      Totals:         0       0       0       0       3       0       0
  2491 ;;Total ram usage:        3 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:   12
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_Send2Lcd
  2498 ;;		_LCD_init
  2499 ;;		_LCD_clear
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text9
  2504  00686A                     __ptext9:
  2505                           	opt callstack 0
  2506  00686A                     _Cmd:
  2507                           	opt callstack 15
  2508                           
  2509                           ;setting_hardaware/LCD.c: 15: void Cmd(int Value);setting_hardaware/LCD.c: 16: {;setting
      +                          _hardaware/LCD.c: 17:  LATD = Value;
  2510                           
  2511                           ;incstack = 0
  2512  00686A  C36F  FF8C         	movff	Cmd@Value,3980	;volatile
  2513                           
  2514                           ;setting_hardaware/LCD.c: 18:  LATCbits.LC4=0;
  2515  00686E  988B               	bcf	139,4,c	;volatile
  2516                           
  2517                           ;setting_hardaware/LCD.c: 20:  LATCbits.LC6=0;
  2518  006870  9C8B               	bcf	139,6,c	;volatile
  2519                           
  2520                           ;setting_hardaware/LCD.c: 21:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2521  006872  0E08               	movlw	8
  2522  006874                     u13927:
  2523  006874  2EE8               	decfsz	wreg,f,c
  2524  006876  D7FE               	bra	u13927
  2525  006878  F000               	nop	
  2526                           
  2527                           ;setting_hardaware/LCD.c: 22:  LATCbits.LC6=1;
  2528  00687A  8C8B               	bsf	139,6,c	;volatile
  2529                           
  2530                           ;setting_hardaware/LCD.c: 23:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2531  00687C  0E08               	movlw	8
  2532  00687E                     u13937:
  2533  00687E  2EE8               	decfsz	wreg,f,c
  2534  006880  D7FE               	bra	u13937
  2535  006882  F000               	nop	
  2536                           
  2537                           ;setting_hardaware/LCD.c: 24:  LATCbits.LC6=0;
  2538  006884  9C8B               	bcf	139,6,c	;volatile
  2539                           
  2540                           ;setting_hardaware/LCD.c: 25:  _delay((unsigned long)((3)*(4000000/4000.0)));
  2541  006886  0E04               	movlw	4
  2542  006888  0103               	movlb	3	; () banked
  2543  00688A  6F71               	movwf	??_Cmd& (0+255),b
  2544  00688C  0EE4               	movlw	228
  2545  00688E                     u13947:
  2546  00688E  2EE8               	decfsz	wreg,f,c
  2547  006890  D7FE               	bra	u13947
  2548  006892  2F71               	decfsz	??_Cmd& (0+255),f,b
  2549  006894  D7FC               	bra	u13947
  2550  006896  F000               	nop	
  2551  006898  0012               	return		;funcret
  2552  00689A                     __end_of_Cmd:
  2553                           	opt callstack 0
  2554                           
  2555 ;; *************** function _ADC_Initialize *****************
  2556 ;; Defined at:
  2557 ;;		line 39 in file "setting_hardaware/adc.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2571 ;;      Params:         0       0       0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:   12
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_SYSTEM_Initialize
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text10
  2586  0069E4                     __ptext10:
  2587                           	opt callstack 0
  2588  0069E4                     _ADC_Initialize:
  2589                           	opt callstack 17
  2590                           
  2591                           ;setting_hardaware/adc.c: 42:     ADCON1 = 0x0D;
  2592                           
  2593                           ;incstack = 0
  2594  0069E4  0E0D               	movlw	13
  2595  0069E6  6EC1               	movwf	193,c	;volatile
  2596                           
  2597                           ;setting_hardaware/adc.c: 43:     ADCON2=0x94;
  2598  0069E8  0E94               	movlw	148
  2599  0069EA  6EC0               	movwf	192,c	;volatile
  2600                           
  2601                           ;setting_hardaware/adc.c: 44:     ADRES=0;
  2602  0069EC  0E00               	movlw	0
  2603  0069EE  6EC4               	movwf	196,c	;volatile
  2604  0069F0  0E00               	movlw	0
  2605  0069F2  6EC3               	movwf	195,c	;volatile
  2606  0069F4  0012               	return		;funcret
  2607  0069F6                     __end_of_ADC_Initialize:
  2608                           	opt callstack 0
  2609                           
  2610 ;; *************** function _Lo_ISR *****************
  2611 ;; Defined at:
  2612 ;;		line 53 in file "setting_hardaware/uart.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2626 ;;      Params:         0       0       0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       5       0       0
  2629 ;;      Totals:         0       0       0       0       5       0       0
  2630 ;;Total ram usage:        5 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:   11
  2633 ;; This function calls:
  2634 ;;		_MyusartRead
  2635 ;; This function is called by:
  2636 ;;		Interrupt level 1
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	intcodelo
  2641  000018                     __pintcodelo:
  2642                           	opt callstack 0
  2643  000018                     _Lo_ISR:
  2644                           	opt callstack 15
  2645                           
  2646                           ;incstack = 0
  2647  000018  807E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2648  00001A  CFD8 F36A          	movff	status,??_Lo_ISR
  2649  00001E  CFE8 F36B          	movff	wreg,??_Lo_ISR+1
  2650  000022  CFE0 F36C          	movff	bsr,??_Lo_ISR+2
  2651  000026  CFD9 F36D          	movff	fsr2l,??_Lo_ISR+3
  2652  00002A  CFDA F36E          	movff	fsr2h,??_Lo_ISR+4
  2653                           
  2654                           ;setting_hardaware/uart.c: 55:     if(RCIF)
  2655  00002E  AA9E               	btfss	3998,5,c	;volatile
  2656  000030  D007               	goto	i1l98
  2657                           
  2658                           ;setting_hardaware/uart.c: 56:     {;setting_hardaware/uart.c: 57:         if(RCSTAbits.
      +                          OERR)
  2659  000032  A2AB               	btfss	171,1,c	;volatile
  2660  000034  D003               	goto	i1l10655
  2661                           
  2662                           ;setting_hardaware/uart.c: 58:         {;setting_hardaware/uart.c: 59:             CREN 
      +                          = 0;
  2663  000036  98AB               	bcf	4011,4,c	;volatile
  2664                           
  2665                           ;setting_hardaware/uart.c: 60:             __nop();
  2666  000038  F000               	nop	
  2667                           
  2668                           ;setting_hardaware/uart.c: 61:             CREN = 1;
  2669  00003A  88AB               	bsf	4011,4,c	;volatile
  2670  00003C                     i1l10655:
  2671                           
  2672                           ;setting_hardaware/uart.c: 64:         MyusartRead();
  2673  00003C  EC43  F033         	call	_MyusartRead	;wreg free
  2674  000040                     i1l98:
  2675  000040  C36E  FFDA         	movff	??_Lo_ISR+4,fsr2h
  2676  000044  C36D  FFD9         	movff	??_Lo_ISR+3,fsr2l
  2677  000048  C36C  FFE0         	movff	??_Lo_ISR+2,bsr
  2678  00004C  C36B  FFE8         	movff	??_Lo_ISR+1,wreg
  2679  000050  C36A  FFD8         	movff	??_Lo_ISR,status
  2680  000054  907E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2681  000056  0010               	retfie	
  2682  000058                     __end_of_Lo_ISR:
  2683                           	opt callstack 0
  2684                           
  2685 ;; *************** function _MyusartRead *****************
  2686 ;; Defined at:
  2687 ;;		line 32 in file "setting_hardaware/uart.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2701 ;;      Params:         0       0       0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0
  2704 ;;      Totals:         0       0       0       0       0       0       0
  2705 ;;Total ram usage:        0 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:   10
  2708 ;; This function calls:
  2709 ;;		_UART_Write
  2710 ;;		___awmod
  2711 ;; This function is called by:
  2712 ;;		_Lo_ISR
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text12
  2717  006686                     __ptext12:
  2718                           	opt callstack 0
  2719  006686                     _MyusartRead:
  2720                           	opt callstack 15
  2721                           
  2722                           ;setting_hardaware/uart.c: 34:     mystring[lenStr] = RCREG;
  2723                           
  2724                           ;incstack = 0
  2725  006686  0E82               	movlw	low _mystring
  2726  006688  0102               	movlb	2	; () banked
  2727  00668A  2524               	addwf	_lenStr& (0+255),w,b
  2728  00668C  6ED9               	movwf	fsr2l,c
  2729  00668E  0E02               	movlw	high _mystring
  2730  006690  2125               	addwfc	(_lenStr+1)& (0+255),w,b
  2731  006692  6EDA               	movwf	fsr2h,c
  2732  006694  CFAE FFDF          	movff	4014,indf2	;volatile
  2733                           
  2734                           ; BSR set to: 2
  2735                           ;setting_hardaware/uart.c: 35:     UART_Write(mystring[lenStr]);
  2736  006698  0E82               	movlw	low _mystring
  2737  00669A  2524               	addwf	_lenStr& (0+255),w,b
  2738  00669C  6ED9               	movwf	fsr2l,c
  2739  00669E  0E02               	movlw	high _mystring
  2740  0066A0  2125               	addwfc	(_lenStr+1)& (0+255),w,b
  2741  0066A2  6EDA               	movwf	fsr2h,c
  2742  0066A4  50DF               	movf	indf2,w,c
  2743  0066A6  ECFB  F034         	call	_UART_Write
  2744                           
  2745                           ;setting_hardaware/uart.c: 36:     lenStr++;
  2746  0066AA  0102               	movlb	2	; () banked
  2747  0066AC  4B24               	infsnz	_lenStr& (0+255),f,b
  2748  0066AE  2B25               	incf	(_lenStr+1)& (0+255),f,b
  2749                           
  2750                           ; BSR set to: 2
  2751                           ;setting_hardaware/uart.c: 37:     lenStr %= 10;
  2752  0066B0  C224  F364         	movff	_lenStr,___awmod@dividend
  2753  0066B4  C225  F365         	movff	_lenStr+1,___awmod@dividend+1
  2754  0066B8  0E00               	movlw	0
  2755  0066BA  0103               	movlb	3	; () banked
  2756  0066BC  6F67               	movwf	(___awmod@divisor+1)& (0+255),b
  2757  0066BE  0E0A               	movlw	10
  2758  0066C0  6F66               	movwf	___awmod@divisor& (0+255),b
  2759  0066C2  ECF4  F031         	call	___awmod	;wreg free
  2760  0066C6  C364  F224         	movff	?___awmod,_lenStr
  2761  0066CA  C365  F225         	movff	?___awmod+1,_lenStr+1
  2762  0066CE  0012               	return		;funcret
  2763  0066D0                     __end_of_MyusartRead:
  2764                           	opt callstack 0
  2765                           
  2766 ;; *************** function ___awmod *****************
  2767 ;; Defined at:
  2768 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  dividend        2    0[BANK3 ] int 
  2771 ;;  divisor         2    2[BANK3 ] int 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  sign            1    5[BANK3 ] unsigned char 
  2774 ;;  counter         1    4[BANK3 ] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  2    0[BANK3 ] int 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2784 ;;      Params:         0       0       0       0       4       0       0
  2785 ;;      Locals:         0       0       0       0       2       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       6       0       0
  2788 ;;Total ram usage:        6 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    9
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_MyusartRead
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text13
  2799  0063E8                     __ptext13:
  2800                           	opt callstack 0
  2801  0063E8                     ___awmod:
  2802                           	opt callstack 15
  2803                           
  2804                           ;incstack = 0
  2805  0063E8  0E00               	movlw	0
  2806  0063EA  0103               	movlb	3	; () banked
  2807  0063EC  6F69               	movwf	___awmod@sign& (0+255),b
  2808                           
  2809                           ; BSR set to: 3
  2810  0063EE  AF65               	btfss	(___awmod@dividend+1)& (0+255),7,b
  2811  0063F0  D006               	goto	i1l10535
  2812                           
  2813                           ; BSR set to: 3
  2814  0063F2  6D64               	negf	___awmod@dividend& (0+255),b
  2815  0063F4  1F65               	comf	(___awmod@dividend+1)& (0+255),f,b
  2816  0063F6  B0D8               	btfsc	status,0,c
  2817  0063F8  2B65               	incf	(___awmod@dividend+1)& (0+255),f,b
  2818                           
  2819                           ; BSR set to: 3
  2820  0063FA  0E01               	movlw	1
  2821  0063FC  6F69               	movwf	___awmod@sign& (0+255),b
  2822  0063FE                     i1l10535:
  2823                           
  2824                           ; BSR set to: 3
  2825  0063FE  AF67               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2826  006400  D004               	goto	i1l10539
  2827                           
  2828                           ; BSR set to: 3
  2829  006402  6D66               	negf	___awmod@divisor& (0+255),b
  2830  006404  1F67               	comf	(___awmod@divisor+1)& (0+255),f,b
  2831  006406  B0D8               	btfsc	status,0,c
  2832  006408  2B67               	incf	(___awmod@divisor+1)& (0+255),f,b
  2833  00640A                     i1l10539:
  2834                           
  2835                           ; BSR set to: 3
  2836  00640A  5166               	movf	___awmod@divisor& (0+255),w,b
  2837  00640C  1167               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2838  00640E  B4D8               	btfsc	status,2,c
  2839  006410  D018               	goto	i1l10555
  2840                           
  2841                           ; BSR set to: 3
  2842  006412  0E01               	movlw	1
  2843  006414  6F68               	movwf	___awmod@counter& (0+255),b
  2844  006416  D004               	goto	i1l10545
  2845  006418                     i1l10543:
  2846                           
  2847                           ; BSR set to: 3
  2848  006418  90D8               	bcf	status,0,c
  2849  00641A  3766               	rlcf	___awmod@divisor& (0+255),f,b
  2850  00641C  3767               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2851  00641E  2B68               	incf	___awmod@counter& (0+255),f,b
  2852  006420                     i1l10545:
  2853                           
  2854                           ; BSR set to: 3
  2855  006420  AF67               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2856  006422  D7FA               	goto	i1l10543
  2857  006424                     i1u1375_20:
  2858                           
  2859                           ; BSR set to: 3
  2860  006424  5166               	movf	___awmod@divisor& (0+255),w,b
  2861  006426  5D64               	subwf	___awmod@dividend& (0+255),w,b
  2862  006428  5167               	movf	(___awmod@divisor+1)& (0+255),w,b
  2863  00642A  5965               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2864  00642C  A0D8               	btfss	status,0,c
  2865  00642E  D004               	goto	i1l10551
  2866                           
  2867                           ; BSR set to: 3
  2868  006430  5166               	movf	___awmod@divisor& (0+255),w,b
  2869  006432  5F64               	subwf	___awmod@dividend& (0+255),f,b
  2870  006434  5167               	movf	(___awmod@divisor+1)& (0+255),w,b
  2871  006436  5B65               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2872  006438                     i1l10551:
  2873                           
  2874                           ; BSR set to: 3
  2875  006438  90D8               	bcf	status,0,c
  2876  00643A  3367               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2877  00643C  3366               	rrcf	___awmod@divisor& (0+255),f,b
  2878                           
  2879                           ; BSR set to: 3
  2880  00643E  2F68               	decfsz	___awmod@counter& (0+255),f,b
  2881  006440  D7F1               	goto	i1u1375_20
  2882  006442                     i1l10555:
  2883                           
  2884                           ; BSR set to: 3
  2885  006442  5169               	movf	___awmod@sign& (0+255),w,b
  2886  006444  B4D8               	btfsc	status,2,c
  2887  006446  D004               	goto	i1l10559
  2888                           
  2889                           ; BSR set to: 3
  2890  006448  6D64               	negf	___awmod@dividend& (0+255),b
  2891  00644A  1F65               	comf	(___awmod@dividend+1)& (0+255),f,b
  2892  00644C  B0D8               	btfsc	status,0,c
  2893  00644E  2B65               	incf	(___awmod@dividend+1)& (0+255),f,b
  2894  006450                     i1l10559:
  2895                           
  2896                           ; BSR set to: 3
  2897  006450  C364  F364         	movff	___awmod@dividend,?___awmod
  2898  006454  C365  F365         	movff	___awmod@dividend+1,?___awmod+1
  2899                           
  2900                           ; BSR set to: 3
  2901  006458  0012               	return		;funcret
  2902  00645A                     __end_of___awmod:
  2903                           	opt callstack 0
  2904                           
  2905 ;; *************** function _UART_Write *****************
  2906 ;; Defined at:
  2907 ;;		line 11 in file "setting_hardaware/uart.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  data            1    wreg     unsigned char 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  data            1    0[BANK3 ] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2921 ;;      Params:         0       0       0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       1       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       1       0       0
  2925 ;;Total ram usage:        1 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    9
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_MyusartRead
  2932 ;;		_UART_Write_Text
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text14
  2937  0069F6                     __ptext14:
  2938                           	opt callstack 0
  2939  0069F6                     _UART_Write:
  2940                           	opt callstack 15
  2941                           
  2942                           ; BSR set to: 3
  2943                           ;incstack = 0
  2944                           ;UART_Write@data stored from wreg
  2945  0069F6  0103               	movlb	3	; () banked
  2946  0069F8  6F64               	movwf	UART_Write@data& (0+255),b
  2947  0069FA                     
  2948                           ;setting_hardaware/uart.c: 11: void UART_Write(unsigned char data);setting_hardaware/uar
      +                          t.c: 12: {;setting_hardaware/uart.c: 13:     while(!TXSTAbits.TRMT);
  2949  0069FA  A2AC               	btfss	172,1,c	;volatile
  2950  0069FC  D7FE               	goto	i1l10483
  2951                           
  2952                           ;setting_hardaware/uart.c: 14:     TXREG = data;
  2953  0069FE  C364  FFAD         	movff	UART_Write@data,4013	;volatile
  2954  006A02  0012               	return		;funcret
  2955  006A04                     __end_of_UART_Write:
  2956                           	opt callstack 0
  2957                           
  2958 ;; *************** function _Hi_ISR *****************
  2959 ;; Defined at:
  2960 ;;		line 22 in file "main.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2974 ;;      Params:         0       0       0       0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0
  2976 ;;      Temps:          0       0       0      11       0       0       0
  2977 ;;      Totals:         0       0       0      11       0       0       0
  2978 ;;Total ram usage:       11 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    8
  2981 ;; This function calls:
  2982 ;;		_ADC_Read
  2983 ;;		_MQ_Read
  2984 ;;		_memset
  2985 ;;		_sprintf
  2986 ;; This function is called by:
  2987 ;;		Interrupt level 2
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	intcode
  2992  000008                     __pintcode:
  2993                           	opt callstack 0
  2994  000008                     _Hi_ISR:
  2995                           	opt callstack 15
  2996                           
  2997                           ;incstack = 0
  2998  000008  827E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2999  00000A  ED69  F02A         	call	int_func,f	;refresh shadow registers
  3000                           
  3001                           	psect	intcode_body
  3002  0054D2                     __pintcode_body:
  3003                           	opt callstack 15
  3004  0054D2                     int_func:
  3005                           	opt callstack 15
  3006  0054D2  0006               	pop		; remove dummy address from shadow register refresh
  3007  0054D4  CFE1 F2E0          	movff	fsr1l,??_Hi_ISR+1
  3008  0054D8  CFE2 F2E1          	movff	fsr1h,??_Hi_ISR+2
  3009  0054DC  CFD9 F2E2          	movff	fsr2l,??_Hi_ISR+3
  3010  0054E0  CFDA F2E3          	movff	fsr2h,??_Hi_ISR+4
  3011  0054E4  CFF3 F2E4          	movff	prodl,??_Hi_ISR+5
  3012  0054E8  CFF4 F2E5          	movff	prodh,??_Hi_ISR+6
  3013  0054EC  CFF6 F2E6          	movff	tblptrl,??_Hi_ISR+7
  3014  0054F0  CFF7 F2E7          	movff	tblptrh,??_Hi_ISR+8
  3015  0054F4  CFF8 F2E8          	movff	tblptru,??_Hi_ISR+9
  3016  0054F8  CFF5 F2E9          	movff	tablat,??_Hi_ISR+10
  3017                           
  3018                           ;main.c: 24:     if(PIR1bits.TMR1IF&&PIE1bits.TMR1IE) {
  3019  0054FC  B09E               	btfsc	158,0,c	;volatile
  3020  0054FE  A09D               	btfss	157,0,c	;volatile
  3021  005500  D086               	goto	i2l249
  3022                           
  3023                           ;main.c: 25:         if(count<cycle){
  3024  005502  0102               	movlb	2	; () banked
  3025  005504  5197               	movf	_cycle& (0+255),w,b
  3026  005506  5D22               	subwf	_count& (0+255),w,b
  3027  005508  5123               	movf	(_count+1)& (0+255),w,b
  3028  00550A  0A80               	xorlw	128
  3029  00550C  6FDF               	movwf	??_Hi_ISR& (0+255),b
  3030  00550E  5198               	movf	(_cycle+1)& (0+255),w,b
  3031  005510  0A80               	xorlw	128
  3032  005512  59DF               	subwfb	??_Hi_ISR& (0+255),w,b
  3033  005514  B0D8               	btfsc	status,0,c
  3034  005516  D003               	goto	i2l10671
  3035                           
  3036                           ; BSR set to: 2
  3037                           ;main.c: 26:             count++;
  3038  005518  4B22               	infsnz	_count& (0+255),f,b
  3039  00551A  2B23               	incf	(_count+1)& (0+255),f,b
  3040                           
  3041                           ;main.c: 27:         }
  3042  00551C  D073               	goto	i2l10687
  3043  00551E                     i2l10671:
  3044                           
  3045                           ; BSR set to: 2
  3046                           ;main.c: 29:             count=0;
  3047  00551E  0E00               	movlw	0
  3048  005520  6F23               	movwf	(_count+1)& (0+255),b
  3049  005522  0E00               	movlw	0
  3050  005524  6F22               	movwf	_count& (0+255),b
  3051                           
  3052                           ; BSR set to: 2
  3053                           ;main.c: 30:             memset(r,'\0',sizeof(r));
  3054  005526  0E00               	movlw	low _r
  3055  005528  6E01               	movwf	memset@dest^0,c
  3056  00552A  0E03               	movlw	high _r
  3057  00552C  6E02               	movwf	(memset@dest+1)^0,c
  3058  00552E  0E00               	movlw	0
  3059  005530  6E04               	movwf	(memset@c+1)^0,c
  3060  005532  0E00               	movlw	0
  3061  005534  6E03               	movwf	memset@c^0,c
  3062  005536  0E00               	movlw	0
  3063  005538  6E06               	movwf	(memset@n+1)^0,c
  3064  00553A  0E64               	movlw	100
  3065  00553C  6E05               	movwf	memset@n^0,c
  3066  00553E  EC08  F02D         	call	_memset	;wreg free
  3067                           
  3068                           ;main.c: 31:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  3069  005542  0E21               	movlw	33
  3070  005544                     i2u1395_47:
  3071  005544  2EE8               	decfsz	wreg,f,c
  3072  005546  D7FE               	bra	i2u1395_47
  3073  005548  F000               	nop	
  3074                           
  3075                           ;main.c: 32:             sprintf(r,"%s%.2f C",r,ADC_Read(0));
  3076  00554A  0E00               	movlw	low _r
  3077  00554C  0102               	movlb	2	; () banked
  3078  00554E  6FC3               	movwf	sprintf@s& (0+255),b
  3079  005550  0E03               	movlw	high _r
  3080  005552  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  3081  005554  0EC0               	movlw	low STR_3
  3082  005556  6FC5               	movwf	sprintf@fmt& (0+255),b
  3083  005558  0E06               	movlw	high STR_3
  3084  00555A  6FC6               	movwf	(sprintf@fmt+1)& (0+255),b
  3085  00555C  0E00               	movlw	low _r
  3086  00555E  6FC7               	movwf	(?_sprintf+4)& (0+255),b
  3087  005560  0E03               	movlw	high _r
  3088  005562  6FC8               	movwf	(?_sprintf+5)& (0+255),b
  3089  005564  0E00               	movlw	0
  3090  005566  6E4C               	movwf	(ADC_Read@channel+1)^0,c
  3091  005568  0E00               	movlw	0
  3092  00556A  6E4B               	movwf	ADC_Read@channel^0,c
  3093  00556C  ECEE  F02F         	call	_ADC_Read	;wreg free
  3094  005570  C04B  F2C9         	movff	?_ADC_Read,?_sprintf+6
  3095  005574  C04C  F2CA         	movff	?_ADC_Read+1,?_sprintf+7
  3096  005578  C04D  F2CB         	movff	?_ADC_Read+2,?_sprintf+8
  3097  00557C  C04E  F2CC         	movff	?_ADC_Read+3,?_sprintf+9
  3098  005580  ECCA  F032         	call	_sprintf	;wreg free
  3099                           
  3100                           ;main.c: 33:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  3101  005584  0E21               	movlw	33
  3102  005586                     i2u1396_47:
  3103  005586  2EE8               	decfsz	wreg,f,c
  3104  005588  D7FE               	bra	i2u1396_47
  3105  00558A  F000               	nop	
  3106                           
  3107                           ;main.c: 34:             MQ_Read(value);
  3108  00558C  0E76               	movlw	low _value
  3109  00558E  0100               	movlb	0	; () banked
  3110  005590  6FEA               	movwf	MQ_Read@values& (0+255),b
  3111  005592  0E02               	movlw	high _value
  3112  005594  6FEB               	movwf	(MQ_Read@values+1)& (0+255),b
  3113  005596  EC98  F027         	call	_MQ_Read	;wreg free
  3114                           
  3115                           ;main.c: 35:             memset(r,'\0',sizeof(r));
  3116  00559A  0E00               	movlw	low _r
  3117  00559C  6E01               	movwf	memset@dest^0,c
  3118  00559E  0E03               	movlw	high _r
  3119  0055A0  6E02               	movwf	(memset@dest+1)^0,c
  3120  0055A2  0E00               	movlw	0
  3121  0055A4  6E04               	movwf	(memset@c+1)^0,c
  3122  0055A6  0E00               	movlw	0
  3123  0055A8  6E03               	movwf	memset@c^0,c
  3124  0055AA  0E00               	movlw	0
  3125  0055AC  6E06               	movwf	(memset@n+1)^0,c
  3126  0055AE  0E64               	movlw	100
  3127  0055B0  6E05               	movwf	memset@n^0,c
  3128  0055B2  EC08  F02D         	call	_memset	;wreg free
  3129                           
  3130                           ;main.c: 36:             sprintf(r,"%s lpg=%.1f ppm CO=%.1f ppm smoke=%.1f ppm",r,value[
      +                          0],value[1],value[2]);
  3131  0055B6  0E00               	movlw	low _r
  3132  0055B8  0102               	movlb	2	; () banked
  3133  0055BA  6FC3               	movwf	sprintf@s& (0+255),b
  3134  0055BC  0E03               	movlw	high _r
  3135  0055BE  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  3136  0055C0  0E95               	movlw	low STR_4
  3137  0055C2  6FC5               	movwf	sprintf@fmt& (0+255),b
  3138  0055C4  0E06               	movlw	high STR_4
  3139  0055C6  6FC6               	movwf	(sprintf@fmt+1)& (0+255),b
  3140  0055C8  0E00               	movlw	low _r
  3141  0055CA  6FC7               	movwf	(?_sprintf+4)& (0+255),b
  3142  0055CC  0E03               	movlw	high _r
  3143  0055CE  6FC8               	movwf	(?_sprintf+5)& (0+255),b
  3144  0055D0  C276  F2C9         	movff	_value,?_sprintf+6
  3145  0055D4  C277  F2CA         	movff	_value+1,?_sprintf+7
  3146  0055D8  C278  F2CB         	movff	_value+2,?_sprintf+8
  3147  0055DC  C279  F2CC         	movff	_value+3,?_sprintf+9
  3148  0055E0  C27A  F2CD         	movff	_value+4,?_sprintf+10
  3149  0055E4  C27B  F2CE         	movff	_value+5,?_sprintf+11
  3150  0055E8  C27C  F2CF         	movff	_value+6,?_sprintf+12
  3151  0055EC  C27D  F2D0         	movff	_value+7,?_sprintf+13
  3152  0055F0  C27E  F2D1         	movff	_value+8,?_sprintf+14
  3153  0055F4  C27F  F2D2         	movff	_value+9,?_sprintf+15
  3154  0055F8  C280  F2D3         	movff	_value+10,?_sprintf+16
  3155  0055FC  C281  F2D4         	movff	_value+11,?_sprintf+17
  3156  005600  ECCA  F032         	call	_sprintf	;wreg free
  3157  005604                     i2l10687:
  3158                           
  3159                           ;main.c: 50:         PIR1bits.TMR1IF=0;
  3160  005604  909E               	bcf	158,0,c	;volatile
  3161                           
  3162                           ;main.c: 51:         TMR1=timer_val;
  3163  005606  C29D  FFCE         	movff	_timer_val,4046	;volatile
  3164  00560A  C29E  FFCF         	movff	_timer_val+1,4047	;volatile
  3165  00560E                     i2l249:
  3166  00560E  C2E9  FFF5         	movff	??_Hi_ISR+10,tablat
  3167  005612  C2E8  FFF8         	movff	??_Hi_ISR+9,tblptru
  3168  005616  C2E7  FFF7         	movff	??_Hi_ISR+8,tblptrh
  3169  00561A  C2E6  FFF6         	movff	??_Hi_ISR+7,tblptrl
  3170  00561E  C2E5  FFF4         	movff	??_Hi_ISR+6,prodh
  3171  005622  C2E4  FFF3         	movff	??_Hi_ISR+5,prodl
  3172  005626  C2E3  FFDA         	movff	??_Hi_ISR+4,fsr2h
  3173  00562A  C2E2  FFD9         	movff	??_Hi_ISR+3,fsr2l
  3174  00562E  C2E1  FFE2         	movff	??_Hi_ISR+2,fsr1h
  3175  005632  C2E0  FFE1         	movff	??_Hi_ISR+1,fsr1l
  3176  005636  927E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3177  005638  0011               	retfie		f
  3178  00563A                     __end_of_Hi_ISR:
  3179                           	opt callstack 0
  3180                           
  3181 ;; *************** function _sprintf *****************
  3182 ;; Defined at:
  3183 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  s               2    0[BANK2 ] PTR unsigned char 
  3186 ;;		 -> r(100), 
  3187 ;;  fmt             2    2[BANK2 ] PTR const unsigned char 
  3188 ;;		 -> STR_4(43), STR_3(9), 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  f               6   22[BANK2 ] struct _IO_FILE
  3191 ;;  ap              2   20[BANK2 ] PTR void [1]
  3192 ;;		 -> ?_sprintf(2), 
  3193 ;;  ret             2    0        int 
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  2    0[BANK2 ] int 
  3196 ;; Registers used:
  3197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3203 ;;      Params:         0       0       0      18       0       0       0
  3204 ;;      Locals:         0       0       0      10       0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0
  3206 ;;      Totals:         0       0       0      28       0       0       0
  3207 ;;Total ram usage:       28 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    7
  3210 ;; This function calls:
  3211 ;;		_vfprintf
  3212 ;; This function is called by:
  3213 ;;		_Hi_ISR
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text16
  3218  006594                     __ptext16:
  3219                           	opt callstack 0
  3220  006594                     _sprintf:
  3221                           	opt callstack 15
  3222                           
  3223                           ;incstack = 0
  3224  006594  0EC7               	movlw	low (?_sprintf+4)
  3225  006596  0102               	movlb	2	; () banked
  3226  006598  6FD7               	movwf	sprintf@ap& (0+255),b
  3227  00659A  0E02               	movlw	high (?_sprintf+4)
  3228  00659C  6FD8               	movwf	(sprintf@ap+1)& (0+255),b
  3229  00659E  C2C3  F2D9         	movff	sprintf@s,sprintf@f
  3230  0065A2  C2C4  F2DA         	movff	sprintf@s+1,sprintf@f+1
  3231                           
  3232                           ; BSR set to: 2
  3233  0065A6  0E00               	movlw	0
  3234  0065A8  6FDC               	movwf	(sprintf@f+3)& (0+255),b
  3235  0065AA  0E00               	movlw	0
  3236  0065AC  6FDB               	movwf	(sprintf@f+2)& (0+255),b
  3237                           
  3238                           ; BSR set to: 2
  3239  0065AE  0E00               	movlw	0
  3240  0065B0  6FDE               	movwf	(sprintf@f+5)& (0+255),b
  3241  0065B2  0E00               	movlw	0
  3242  0065B4  6FDD               	movwf	(sprintf@f+4)& (0+255),b
  3243                           
  3244                           ; BSR set to: 2
  3245  0065B6  0ED9               	movlw	low sprintf@f
  3246  0065B8  0101               	movlb	1	; () banked
  3247  0065BA  6FF4               	movwf	vfprintf@fp& (0+255),b
  3248  0065BC  0E02               	movlw	high sprintf@f
  3249  0065BE  6FF5               	movwf	(vfprintf@fp+1)& (0+255),b
  3250  0065C0  C2C5  F1F6         	movff	sprintf@fmt,vfprintf@fmt
  3251  0065C4  C2C6  F1F7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3252  0065C8  0ED7               	movlw	low sprintf@ap
  3253  0065CA  6FF8               	movwf	vfprintf@ap& (0+255),b
  3254  0065CC  0E02               	movlw	high sprintf@ap
  3255  0065CE  6FF9               	movwf	(vfprintf@ap+1)& (0+255),b
  3256  0065D0  EC9B  F032         	call	_vfprintf	;wreg free
  3257  0065D4  0102               	movlb	2	; () banked
  3258  0065D6  51DB               	movf	(sprintf@f+2)& (0+255),w,b
  3259  0065D8  25C3               	addwf	sprintf@s& (0+255),w,b
  3260  0065DA  6ED9               	movwf	fsr2l,c
  3261  0065DC  51DC               	movf	(sprintf@f+3)& (0+255),w,b
  3262  0065DE  21C4               	addwfc	(sprintf@s+1)& (0+255),w,b
  3263  0065E0  6EDA               	movwf	fsr2h,c
  3264  0065E2  0E00               	movlw	0
  3265  0065E4  6EDF               	movwf	indf2,c
  3266                           
  3267                           ; BSR set to: 2
  3268  0065E6  0012               	return		;funcret
  3269  0065E8                     __end_of_sprintf:
  3270                           	opt callstack 0
  3271                           
  3272 ;; *************** function _vfprintf *****************
  3273 ;; Defined at:
  3274 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  fp              2  244[BANK1 ] PTR struct _IO_FILE
  3277 ;;		 -> sprintf@f(6), 
  3278 ;;  fmt             2  246[BANK1 ] PTR const unsigned char 
  3279 ;;		 -> STR_4(43), STR_3(9), 
  3280 ;;  ap              2  248[BANK1 ] PTR PTR void 
  3281 ;;		 -> sprintf@ap(2), 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  cfmt            2  114[BANK0 ] PTR unsigned char 
  3284 ;;		 -> STR_4(43), STR_3(9), 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  2  244[BANK1 ] int 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3294 ;;      Params:         0       0       6       0       0       0       0
  3295 ;;      Locals:         0       2       0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0
  3297 ;;      Totals:         0       2       6       0       0       0       0
  3298 ;;Total ram usage:        8 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    6
  3301 ;; This function calls:
  3302 ;;		_vfpfcnvrt
  3303 ;; This function is called by:
  3304 ;;		_sprintf
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text17
  3309  006536                     __ptext17:
  3310                           	opt callstack 0
  3311  006536                     _vfprintf:
  3312                           	opt callstack 15
  3313                           
  3314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3315                           
  3316                           ; BSR set to: 2
  3317                           ;incstack = 0
  3318  006536  C1F6  F0F2         	movff	vfprintf@fmt,vfprintf@cfmt
  3319  00653A  C1F7  F0F3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3320                           
  3321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3322  00653E  0E00               	movlw	0
  3323  006540  0102               	movlb	2	; () banked
  3324  006542  6F1F               	movwf	(_nout+1)& (0+255),b
  3325  006544  0E00               	movlw	0
  3326  006546  6F1E               	movwf	_nout& (0+255),b
  3327                           
  3328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3329  006548  D017               	goto	i2l10525
  3330  00654A                     i2l10523:
  3331                           
  3332                           ; BSR set to: 2
  3333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3334  00654A  C1F4  F0DA         	movff	vfprintf@fp,vfpfcnvrt@fp
  3335  00654E  C1F5  F0DB         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3336  006552  0EF2               	movlw	low vfprintf@cfmt
  3337  006554  0100               	movlb	0	; () banked
  3338  006556  6FDC               	movwf	vfpfcnvrt@fmt& (0+255),b
  3339  006558  0E00               	movlw	high vfprintf@cfmt
  3340  00655A  6FDD               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3341  00655C  C1F8  F0DE         	movff	vfprintf@ap,vfpfcnvrt@ap
  3342  006560  C1F9  F0DF         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3343  006564  EC14  F021         	call	_vfpfcnvrt	;wreg free
  3344  006568  0100               	movlb	0	; () banked
  3345  00656A  51DA               	movf	?_vfpfcnvrt& (0+255),w,b
  3346  00656C  0102               	movlb	2	; () banked
  3347  00656E  271E               	addwf	_nout& (0+255),f,b
  3348  006570  0100               	movlb	0	; () banked
  3349  006572  51DB               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3350  006574  0102               	movlb	2	; () banked
  3351  006576  231F               	addwfc	(_nout+1)& (0+255),f,b
  3352  006578                     i2l10525:
  3353                           
  3354                           ; BSR set to: 2
  3355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3356  006578  C0F2  FFF6         	movff	vfprintf@cfmt,tblptrl
  3357  00657C  C0F3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3358  006580                     	if	0	;tblptru may be non-zero
  3359  006580                     	endif
  3360  006580                     	if	0	;tblptru may be non-zero
  3361  006580                     	endif
  3362  006580  0008               	tblrd		*
  3363  006582  50F5               	movf	tablat,w,c
  3364  006584  0900               	iorlw	0
  3365  006586  A4D8               	btfss	status,2,c
  3366  006588  D7E0               	goto	i2l10523
  3367                           
  3368                           ; BSR set to: 2
  3369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3370  00658A  C21E  F1F4         	movff	_nout,?_vfprintf
  3371  00658E  C21F  F1F5         	movff	_nout+1,?_vfprintf+1
  3372                           
  3373                           ; BSR set to: 2
  3374  006592  0012               	return		;funcret
  3375  006594                     __end_of_vfprintf:
  3376                           	opt callstack 0
  3377                           
  3378 ;; *************** function _vfpfcnvrt *****************
  3379 ;; Defined at:
  3380 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  fp              2   90[BANK0 ] PTR struct _IO_FILE
  3383 ;;		 -> sprintf@f(6), 
  3384 ;;  fmt             2   92[BANK0 ] PTR PTR unsigned char 
  3385 ;;		 -> vfprintf@cfmt(2), 
  3386 ;;  ap              2   94[BANK0 ] PTR PTR void 
  3387 ;;		 -> sprintf@ap(2), 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  llu             8    0        unsigned long long 
  3390 ;;  ll              8    0        long long 
  3391 ;;  f               4  110[BANK0 ] long long 
  3392 ;;  ct              3  106[BANK0 ] unsigned char [3]
  3393 ;;  vp              3    0        PTR void 
  3394 ;;  cp              2  100[BANK0 ] PTR unsigned char 
  3395 ;;		 -> ?_sprintf(2), r(100), 
  3396 ;;  i               2    0        int 
  3397 ;;  done            2    0        int 
  3398 ;;  c               1  109[BANK0 ] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  2   90[BANK0 ] int 
  3401 ;; Registers used:
  3402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3408 ;;      Params:         0       6       0       0       0       0       0
  3409 ;;      Locals:         0      14       0       0       0       0       0
  3410 ;;      Temps:          0       4       0       0       0       0       0
  3411 ;;      Totals:         0      24       0       0       0       0       0
  3412 ;;Total ram usage:       24 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    5
  3415 ;; This function calls:
  3416 ;;		_atoi
  3417 ;;		_efgtoa
  3418 ;;		_fputc
  3419 ;;		_isdigit
  3420 ;;		_isupper
  3421 ;;		_stoa
  3422 ;;		_strncmp
  3423 ;;		_tolower
  3424 ;; This function is called by:
  3425 ;;		_vfprintf
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text18
  3430  004228                     __ptext18:
  3431                           	opt callstack 0
  3432  004228                     _vfpfcnvrt:
  3433                           	opt callstack 15
  3434                           
  3435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3436                           
  3437                           ; BSR set to: 2
  3438                           ;incstack = 0
  3439  004228  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3440  00422C  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3441  004230  CFDE FFF6          	movff	postinc2,tblptrl
  3442  004234  CFDD FFF7          	movff	postdec2,tblptrh
  3443  004238                     	if	0	;tblptru may be non-zero
  3444  004238                     	endif
  3445  004238                     	if	0	;tblptru may be non-zero
  3446  004238                     	endif
  3447  004238  0008               	tblrd		*
  3448  00423A  50F5               	movf	tablat,w,c
  3449  00423C  0A25               	xorlw	37
  3450  00423E  A4D8               	btfss	status,2,c
  3451  004240  D1EA               	goto	i2l10441
  3452                           
  3453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3454  004242  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3455  004246  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3456  00424A  2ADE               	incf	postinc2,f,c
  3457  00424C  0E00               	movlw	0
  3458  00424E  22DD               	addwfc	postdec2,f,c
  3459                           
  3460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3461  004250  0E00               	movlw	0
  3462  004252  0102               	movlb	2	; () banked
  3463  004254  6F21               	movwf	(_width+1)& (0+255),b
  3464  004256  0E00               	movlw	0
  3465  004258  6F20               	movwf	_width& (0+255),b
  3466  00425A  C220  F0FA         	movff	_width,_flags
  3467  00425E  C221  F0FB         	movff	_width+1,_flags+1
  3468                           
  3469                           ; BSR set to: 2
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3471  004262  0100               	movlb	0	; () banked
  3472  004264  69F8               	setf	_prec& (0+255),b
  3473  004266  69F9               	setf	(_prec+1)& (0+255),b
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3477  004268  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3478  00426C  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3479  004270  CFDE FFF6          	movff	postinc2,tblptrl
  3480  004274  CFDD FFF7          	movff	postdec2,tblptrh
  3481  004278                     	if	0	;tblptru may be non-zero
  3482  004278                     	endif
  3483  004278                     	if	0	;tblptru may be non-zero
  3484  004278                     	endif
  3485  004278  0008               	tblrd		*
  3486  00427A  50F5               	movf	tablat,w,c
  3487  00427C  0A2E               	xorlw	46
  3488  00427E  A4D8               	btfss	status,2,c
  3489  004280  D06E               	goto	i2u1357_40
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3493  004282  0E00               	movlw	0
  3494  004284  6FF9               	movwf	(_prec+1)& (0+255),b
  3495  004286  0E00               	movlw	0
  3496  004288  6FF8               	movwf	_prec& (0+255),b
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3500  00428A  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3501  00428E  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3502  004292  2ADE               	incf	postinc2,f,c
  3503  004294  0E00               	movlw	0
  3504  004296  22DD               	addwfc	postdec2,f,c
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3508  004298  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3509  00429C  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3510  0042A0  CFDE FFF6          	movff	postinc2,tblptrl
  3511  0042A4  CFDD FFF7          	movff	postdec2,tblptrh
  3512  0042A8                     	if	0	;tblptru may be non-zero
  3513  0042A8                     	endif
  3514  0042A8                     	if	0	;tblptru may be non-zero
  3515  0042A8                     	endif
  3516  0042A8  0008               	tblrd		*
  3517  0042AA  50F5               	movf	tablat,w,c
  3518  0042AC  0A2A               	xorlw	42
  3519  0042AE  A4D8               	btfss	status,2,c
  3520  0042B0  D01C               	goto	i2l10369
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3524  0042B2  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3525  0042B6  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3526  0042BA  2ADE               	incf	postinc2,f,c
  3527  0042BC  0E00               	movlw	0
  3528  0042BE  22DD               	addwfc	postdec2,f,c
  3529                           
  3530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3531  0042C0  C0DE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3532  0042C4  C0DF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3533  0042C8  CFDF F0E0          	movff	indf2,??_vfpfcnvrt
  3534  0042CC  0E02               	movlw	2
  3535  0042CE  26DE               	addwf	postinc2,f,c
  3536  0042D0  CFDF F0E1          	movff	indf2,??_vfpfcnvrt+1
  3537  0042D4  0E00               	movlw	0
  3538  0042D6  22DD               	addwfc	postdec2,f,c
  3539  0042D8  C0E0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3540  0042DC  C0E1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3541  0042E0  CFDE F0F8          	movff	postinc2,_prec
  3542  0042E4  CFDD F0F9          	movff	postdec2,_prec+1
  3543                           
  3544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3545  0042E8  D03A               	goto	i2u1357_40
  3546  0042EA                     i2l10369:
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3550  0042EA  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3551  0042EE  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3552  0042F2  CFDE F008          	movff	postinc2,atoi@s
  3553  0042F6  CFDD F009          	movff	postdec2,atoi@s+1
  3554  0042FA  ECC8  F02B         	call	_atoi	;wreg free
  3555  0042FE  C008  F0F8         	movff	?_atoi,_prec
  3556  004302  C009  F0F9         	movff	?_atoi+1,_prec+1
  3557                           
  3558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3559  004306  D007               	goto	i2l10373
  3560  004308                     i2l10371:
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3564  004308  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3565  00430C  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3566  004310  2ADE               	incf	postinc2,f,c
  3567  004312  0E00               	movlw	0
  3568  004314  22DD               	addwfc	postdec2,f,c
  3569  004316                     i2l10373:
  3570  004316  0ED0               	movlw	208
  3571  004318  0100               	movlb	0	; () banked
  3572  00431A  6FE0               	movwf	??_vfpfcnvrt& (0+255),b
  3573  00431C  0EFF               	movlw	255
  3574  00431E  6FE1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3575  004320  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3576  004324  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3577  004328  CFDE FFF6          	movff	postinc2,tblptrl
  3578  00432C  CFDD FFF7          	movff	postdec2,tblptrh
  3579  004330                     	if	0	;tblptru may be non-zero
  3580  004330                     	endif
  3581  004330                     	if	0	;tblptru may be non-zero
  3582  004330                     	endif
  3583  004330  0008               	tblrd		*
  3584  004332  50F5               	movf	tablat,w,c
  3585  004334  6FE2               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3586  004336  6BE3               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3587  004338  51E0               	movf	??_vfpfcnvrt& (0+255),w,b
  3588  00433A  27E2               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3589  00433C  51E1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3590  00433E  23E3               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3591  004340  51E3               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3592  004342  E106               	bnz	i2u1355_40
  3593  004344  0E0A               	movlw	10
  3594  004346  5DE2               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3595  004348  B0D8               	btfsc	status,0,c
  3596  00434A  D002               	goto	i2u1355_40
  3597  00434C  0E01               	movlw	1
  3598  00434E  D001               	goto	i2u1356_40
  3599  004350                     i2u1355_40:
  3600  004350  0E00               	movlw	0
  3601  004352                     i2u1356_40:
  3602  004352  6FE6               	movwf	_vfpfcnvrt$1013& (0+255),b
  3603  004354  6BE7               	clrf	(_vfpfcnvrt$1013+1)& (0+255),b
  3604                           
  3605                           ; BSR set to: 0
  3606  004356  51E6               	movf	_vfpfcnvrt$1013& (0+255),w,b
  3607  004358  11E7               	iorwf	(_vfpfcnvrt$1013+1)& (0+255),w,b
  3608  00435A  A4D8               	btfss	status,2,c
  3609  00435C  D7D5               	goto	i2l10371
  3610  00435E                     i2u1357_40:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3614  00435E  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3615  004362  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3616  004366  CFDE FFF6          	movff	postinc2,tblptrl
  3617  00436A  CFDD FFF7          	movff	postdec2,tblptrh
  3618  00436E                     	if	0	;tblptru may be non-zero
  3619  00436E                     	endif
  3620  00436E                     	if	0	;tblptru may be non-zero
  3621  00436E                     	endif
  3622  00436E  0008               	tblrd		*
  3623  004370  50F5               	movf	tablat,w,c
  3624  004372  6E07               	movwf	tolower@c^0,c
  3625  004374  6A08               	clrf	(tolower@c+1)^0,c
  3626  004376  EC1D  F033         	call	_tolower	;wreg free
  3627  00437A  5007               	movf	?_tolower^0,w,c
  3628  00437C  0100               	movlb	0	; () banked
  3629  00437E  6FEA               	movwf	vfpfcnvrt@ct& (0+255),b
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3633  004380  51EA               	movf	vfpfcnvrt@ct& (0+255),w,b
  3634  004382  B4D8               	btfsc	status,2,c
  3635  004384  D035               	goto	i2l10389
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3639  004386  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3640  00438A  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3641  00438E  CFDE F0E0          	movff	postinc2,??_vfpfcnvrt
  3642  004392  CFDD F0E1          	movff	postdec2,??_vfpfcnvrt+1
  3643  004396  0E01               	movlw	1
  3644  004398  27E0               	addwf	??_vfpfcnvrt& (0+255),f,b
  3645  00439A  0E00               	movlw	0
  3646  00439C  23E1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3647  00439E  C0E0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3648  0043A2  C0E1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3649  0043A6                     	if	0	;tblptru may be non-zero
  3650  0043A6                     	endif
  3651  0043A6                     	if	0	;tblptru may be non-zero
  3652  0043A6                     	endif
  3653  0043A6  0008               	tblrd		*
  3654  0043A8  50F5               	movf	tablat,w,c
  3655  0043AA  6E07               	movwf	tolower@c^0,c
  3656  0043AC  6A08               	clrf	(tolower@c+1)^0,c
  3657  0043AE  EC1D  F033         	call	_tolower	;wreg free
  3658  0043B2  5007               	movf	?_tolower^0,w,c
  3659  0043B4  0100               	movlb	0	; () banked
  3660  0043B6  6FEB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3664  0043B8  51EB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3665  0043BA  B4D8               	btfsc	status,2,c
  3666  0043BC  D019               	goto	i2l10389
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3670  0043BE  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3671  0043C2  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3672  0043C6  CFDE F0E0          	movff	postinc2,??_vfpfcnvrt
  3673  0043CA  CFDD F0E1          	movff	postdec2,??_vfpfcnvrt+1
  3674  0043CE  0E02               	movlw	2
  3675  0043D0  27E0               	addwf	??_vfpfcnvrt& (0+255),f,b
  3676  0043D2  0E00               	movlw	0
  3677  0043D4  23E1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3678  0043D6  C0E0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3679  0043DA  C0E1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3680  0043DE                     	if	0	;tblptru may be non-zero
  3681  0043DE                     	endif
  3682  0043DE                     	if	0	;tblptru may be non-zero
  3683  0043DE                     	endif
  3684  0043DE  0008               	tblrd		*
  3685  0043E0  50F5               	movf	tablat,w,c
  3686  0043E2  6E07               	movwf	tolower@c^0,c
  3687  0043E4  6A08               	clrf	(tolower@c+1)^0,c
  3688  0043E6  EC1D  F033         	call	_tolower	;wreg free
  3689  0043EA  5007               	movf	?_tolower^0,w,c
  3690  0043EC  0100               	movlb	0	; () banked
  3691  0043EE  6FEC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3692  0043F0                     i2l10389:
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  3696  0043F0  0E66               	movlw	102
  3697  0043F2  19EA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3698  0043F4  A4D8               	btfss	status,2,c
  3699  0043F6  D03F               	goto	i2l10401
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  3703  0043F8  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3704  0043FC  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3705  004400  CFDE FFF6          	movff	postinc2,tblptrl
  3706  004404  CFDD FFF7          	movff	postdec2,tblptrh
  3707  004408                     	if	0	;tblptru may be non-zero
  3708  004408                     	endif
  3709  004408                     	if	0	;tblptru may be non-zero
  3710  004408                     	endif
  3711  004408  0008               	tblrd		*
  3712  00440A  CFF5 F0ED          	movff	tablat,vfpfcnvrt@c
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  3716  00440E  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3717  004412  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3718  004416  2ADE               	incf	postinc2,f,c
  3719  004418  0E00               	movlw	0
  3720  00441A  22DD               	addwfc	postdec2,f,c
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3724  00441C  C0DE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3725  004420  C0DF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3726  004424  CFDF F0E0          	movff	indf2,??_vfpfcnvrt
  3727  004428  0E04               	movlw	4
  3728  00442A  26DE               	addwf	postinc2,f,c
  3729  00442C  CFDF F0E1          	movff	indf2,??_vfpfcnvrt+1
  3730  004430  0E00               	movlw	0
  3731  004432  22DD               	addwfc	postdec2,f,c
  3732  004434  C0E0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3733  004438  C0E1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3734  00443C  CFDE F0EE          	movff	postinc2,vfpfcnvrt@f
  3735  004440  CFDE F0EF          	movff	postinc2,vfpfcnvrt@f+1
  3736  004444  CFDE F0F0          	movff	postinc2,vfpfcnvrt@f+2
  3737  004448  CFDE F0F1          	movff	postinc2,vfpfcnvrt@f+3
  3738  00444C                     i2l10397:
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  3742  00444C  C0DA  F0CE         	movff	vfpfcnvrt@fp,efgtoa@fp
  3743  004450  C0DB  F0CF         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3744  004454  C0EE  F0D0         	movff	vfpfcnvrt@f,efgtoa@f
  3745  004458  C0EF  F0D1         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3746  00445C  C0F0  F0D2         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3747  004460  C0F1  F0D3         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3748  004464  C0ED  F0D4         	movff	vfpfcnvrt@c,efgtoa@c
  3749  004468  ECAC  F016         	call	_efgtoa	;wreg free
  3750  00446C  C0CE  F0DA         	movff	?_efgtoa,?_vfpfcnvrt
  3751  004470  C0CF  F0DB         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3752  004474  0012               	return	
  3753  004476                     i2l10401:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3757  004476  0EEA               	movlw	low vfpfcnvrt@ct
  3758  004478  6E01               	movwf	strncmp@_l^0,c
  3759  00447A  0E00               	movlw	high vfpfcnvrt@ct
  3760  00447C  6E02               	movwf	(strncmp@_l+1)^0,c
  3761  00447E  0EE7               	movlw	low STR_13
  3762  004480  6E03               	movwf	strncmp@_r^0,c
  3763  004482  0E06               	movlw	high STR_13
  3764  004484  6E04               	movwf	(strncmp@_r+1)^0,c
  3765  004486  0E00               	movlw	0
  3766  004488  6E06               	movwf	(strncmp@n+1)^0,c
  3767  00448A  0E02               	movlw	2
  3768  00448C  6E05               	movwf	strncmp@n^0,c
  3769  00448E  EC41  F030         	call	_strncmp	;wreg free
  3770  004492  5001               	movf	?_strncmp^0,w,c
  3771  004494  1002               	iorwf	(?_strncmp+1)^0,w,c
  3772  004496  A4D8               	btfss	status,2,c
  3773  004498  D056               	goto	i2l10417
  3774                           
  3775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3776  00449A  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3777  00449E  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3778  0044A2  CFDE F0E0          	movff	postinc2,??_vfpfcnvrt
  3779  0044A6  CFDD F0E1          	movff	postdec2,??_vfpfcnvrt+1
  3780  0044AA  0E01               	movlw	1
  3781  0044AC  0100               	movlb	0	; () banked
  3782  0044AE  27E0               	addwf	??_vfpfcnvrt& (0+255),f,b
  3783  0044B0  0E00               	movlw	0
  3784  0044B2  23E1               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3785  0044B4  C0E0  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3786  0044B8  C0E1  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3787  0044BC                     	if	0	;tblptru may be non-zero
  3788  0044BC                     	endif
  3789  0044BC                     	if	0	;tblptru may be non-zero
  3790  0044BC                     	endif
  3791  0044BC  0008               	tblrd		*
  3792  0044BE  CFF5 F0ED          	movff	tablat,vfpfcnvrt@c
  3793  0044C2  0EBF               	movlw	191
  3794  0044C4  6FE0               	movwf	??_vfpfcnvrt& (0+255),b
  3795  0044C6  0EFF               	movlw	255
  3796  0044C8  6FE1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3797  0044CA  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3798  0044CE  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3799  0044D2  CFDE FFF6          	movff	postinc2,tblptrl
  3800  0044D6  CFDD FFF7          	movff	postdec2,tblptrh
  3801  0044DA                     	if	0	;tblptru may be non-zero
  3802  0044DA                     	endif
  3803  0044DA                     	if	0	;tblptru may be non-zero
  3804  0044DA                     	endif
  3805  0044DA  0008               	tblrd		*
  3806  0044DC  50F5               	movf	tablat,w,c
  3807  0044DE  6FE2               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3808  0044E0  6BE3               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3809  0044E2  51E0               	movf	??_vfpfcnvrt& (0+255),w,b
  3810  0044E4  27E2               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3811  0044E6  51E1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3812  0044E8  23E3               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3813  0044EA  51E3               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3814  0044EC  E106               	bnz	i2u1362_40
  3815  0044EE  0E1A               	movlw	26
  3816  0044F0  5DE2               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3817  0044F2  B0D8               	btfsc	status,0,c
  3818  0044F4  D002               	goto	i2u1362_40
  3819  0044F6  0E01               	movlw	1
  3820  0044F8  D001               	goto	i2u1363_40
  3821  0044FA                     i2u1362_40:
  3822  0044FA  0E00               	movlw	0
  3823  0044FC                     i2u1363_40:
  3824  0044FC  6FE8               	movwf	_vfpfcnvrt$1017& (0+255),b
  3825  0044FE  6BE9               	clrf	(_vfpfcnvrt$1017+1)& (0+255),b
  3826                           
  3827                           ; BSR set to: 0
  3828  004500  51E8               	movf	_vfpfcnvrt$1017& (0+255),w,b
  3829  004502  11E9               	iorwf	(_vfpfcnvrt$1017+1)& (0+255),w,b
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3833                           
  3834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3838  004504  C0DE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3839  004508  C0DF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3840  00450C  CFDF F0E0          	movff	indf2,??_vfpfcnvrt
  3841  004510  0E04               	movlw	4
  3842  004512  26DE               	addwf	postinc2,f,c
  3843  004514  CFDF F0E1          	movff	indf2,??_vfpfcnvrt+1
  3844  004518  0E00               	movlw	0
  3845  00451A  22DD               	addwfc	postdec2,f,c
  3846  00451C  C0E0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3847  004520  C0E1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3848  004524  CFDE F0EE          	movff	postinc2,vfpfcnvrt@f
  3849  004528  CFDE F0EF          	movff	postinc2,vfpfcnvrt@f+1
  3850  00452C  CFDE F0F0          	movff	postinc2,vfpfcnvrt@f+2
  3851  004530  CFDE F0F1          	movff	postinc2,vfpfcnvrt@f+3
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3855                           
  3856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  3857  004534  0E02               	movlw	2
  3858  004536  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3859  00453A  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3860  00453E  26DE               	addwf	postinc2,f,c
  3861  004540  0E00               	movlw	0
  3862  004542  22DD               	addwfc	postdec2,f,c
  3863  004544  D783               	goto	i2l10397
  3864  004546                     i2l10417:
  3865                           
  3866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  3867  004546  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3868  00454A  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3869  00454E  CFDE FFF6          	movff	postinc2,tblptrl
  3870  004552  CFDD FFF7          	movff	postdec2,tblptrh
  3871  004556                     	if	0	;tblptru may be non-zero
  3872  004556                     	endif
  3873  004556                     	if	0	;tblptru may be non-zero
  3874  004556                     	endif
  3875  004556  0008               	tblrd		*
  3876  004558  50F5               	movf	tablat,w,c
  3877  00455A  0A73               	xorlw	115
  3878  00455C  A4D8               	btfss	status,2,c
  3879  00455E  D02A               	goto	i2l10425
  3880                           
  3881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  3882  004560  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3883  004564  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3884  004568  2ADE               	incf	postinc2,f,c
  3885  00456A  0E00               	movlw	0
  3886  00456C  22DD               	addwfc	postdec2,f,c
  3887                           
  3888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3889  00456E  C0DE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3890  004572  C0DF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3891  004576  CFDF F0E0          	movff	indf2,??_vfpfcnvrt
  3892  00457A  0E02               	movlw	2
  3893  00457C  26DE               	addwf	postinc2,f,c
  3894  00457E  CFDF F0E1          	movff	indf2,??_vfpfcnvrt+1
  3895  004582  0E00               	movlw	0
  3896  004584  22DD               	addwfc	postdec2,f,c
  3897  004586  C0E0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3898  00458A  C0E1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3899  00458E  CFDE F0E4          	movff	postinc2,vfpfcnvrt@cp
  3900  004592  CFDD F0E5          	movff	postdec2,vfpfcnvrt@cp+1
  3901                           
  3902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  3903  004596  C0DA  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3904  00459A  C0DB  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3905  00459E  C0E4  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3906  0045A2  C0E5  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3907  0045A6  ECA1  F02D         	call	_stoa	;wreg free
  3908  0045AA  C00A  F0DA         	movff	?_stoa,?_vfpfcnvrt
  3909  0045AE  C00B  F0DB         	movff	?_stoa+1,?_vfpfcnvrt+1
  3910  0045B2  0012               	return	
  3911  0045B4                     i2l10425:
  3912                           
  3913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3914  0045B4  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3915  0045B8  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3916  0045BC  CFDE FFF6          	movff	postinc2,tblptrl
  3917  0045C0  CFDD FFF7          	movff	postdec2,tblptrh
  3918  0045C4                     	if	0	;tblptru may be non-zero
  3919  0045C4                     	endif
  3920  0045C4                     	if	0	;tblptru may be non-zero
  3921  0045C4                     	endif
  3922  0045C4  0008               	tblrd		*
  3923  0045C6  50F5               	movf	tablat,w,c
  3924  0045C8  0A25               	xorlw	37
  3925  0045CA  A4D8               	btfss	status,2,c
  3926  0045CC  D017               	goto	i2l10435
  3927                           
  3928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3929  0045CE  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3930  0045D2  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3931  0045D6  2ADE               	incf	postinc2,f,c
  3932  0045D8  0E00               	movlw	0
  3933  0045DA  22DD               	addwfc	postdec2,f,c
  3934                           
  3935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3936  0045DC  0E00               	movlw	0
  3937  0045DE  6E02               	movwf	(fputc@c+1)^0,c
  3938  0045E0  0E25               	movlw	37
  3939  0045E2  6E01               	movwf	fputc@c^0,c
  3940  0045E4  C0DA  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3941  0045E8  C0DB  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3942  0045EC  EC92  F030         	call	_fputc	;wreg free
  3943  0045F0                     i2l10431:
  3944                           
  3945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3946  0045F0  0E00               	movlw	0
  3947  0045F2  0100               	movlb	0	; () banked
  3948  0045F4  6FDB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3949  0045F6  0E01               	movlw	1
  3950  0045F8  6FDA               	movwf	?_vfpfcnvrt& (0+255),b
  3951  0045FA  0012               	return	
  3952  0045FC                     i2l10435:
  3953                           
  3954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3955  0045FC  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3956  004600  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3957  004604  2ADE               	incf	postinc2,f,c
  3958  004606  0E00               	movlw	0
  3959  004608  22DD               	addwfc	postdec2,f,c
  3960                           
  3961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3962  00460A  0E00               	movlw	0
  3963  00460C  0100               	movlb	0	; () banked
  3964  00460E  6FDB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3965  004610  0E00               	movlw	0
  3966  004612  6FDA               	movwf	?_vfpfcnvrt& (0+255),b
  3967  004614  0012               	return	
  3968  004616                     i2l10441:
  3969                           
  3970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3971  004616  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3972  00461A  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3973  00461E  CFDE FFF6          	movff	postinc2,tblptrl
  3974  004622  CFDD FFF7          	movff	postdec2,tblptrh
  3975  004626                     	if	0	;tblptru may be non-zero
  3976  004626                     	endif
  3977  004626                     	if	0	;tblptru may be non-zero
  3978  004626                     	endif
  3979  004626  0008               	tblrd		*
  3980  004628  50F5               	movf	tablat,w,c
  3981  00462A  6E01               	movwf	fputc@c^0,c
  3982  00462C  6A02               	clrf	(fputc@c+1)^0,c
  3983  00462E  C0DA  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3984  004632  C0DB  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3985  004636  EC92  F030         	call	_fputc	;wreg free
  3986                           
  3987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3988  00463A  C0DC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3989  00463E  C0DD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3990  004642  2ADE               	incf	postinc2,f,c
  3991  004644  0E00               	movlw	0
  3992  004646  22DD               	addwfc	postdec2,f,c
  3993  004648  D7D3               	goto	i2l10431
  3994  00464A                     __end_of_vfpfcnvrt:
  3995                           	opt callstack 0
  3996                           
  3997 ;; *************** function _strncmp *****************
  3998 ;; Defined at:
  3999 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4002 ;;		 -> vfpfcnvrt@ct(3), 
  4003 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4004 ;;		 -> STR_15(3), 
  4005 ;;  n               2    4[COMRAM] unsigned int 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4008 ;;		 -> STR_15(3), 
  4009 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4010 ;;		 -> vfpfcnvrt@ct(3), 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  2    0[COMRAM] int 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4020 ;;      Params:         6       0       0       0       0       0       0
  4021 ;;      Locals:         4       0       0       0       0       0       0
  4022 ;;      Temps:          1       0       0       0       0       0       0
  4023 ;;      Totals:        11       0       0       0       0       0       0
  4024 ;;Total ram usage:       11 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_vfpfcnvrt
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text19
  4034  006082                     __ptext19:
  4035                           	opt callstack 0
  4036  006082                     _strncmp:
  4037                           	opt callstack 19
  4038                           
  4039                           ;incstack = 0
  4040  006082  C001  F008         	movff	strncmp@_l,strncmp@l
  4041  006086  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4042  00608A  C003  F00A         	movff	strncmp@_r,strncmp@r
  4043  00608E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4044  006092  0605               	decf	strncmp@n^0,f,c
  4045  006094  A0D8               	btfss	status,0,c
  4046  006096  0606               	decf	(strncmp@n+1)^0,f,c
  4047  006098  2805               	incf	strncmp@n^0,w,c
  4048  00609A  E10F               	bnz	i2l10321
  4049  00609C  2806               	incf	(strncmp@n+1)^0,w,c
  4050  00609E  A4D8               	btfss	status,2,c
  4051  0060A0  D00C               	goto	i2l10321
  4052  0060A2  0E00               	movlw	0
  4053  0060A4  6E02               	movwf	(?_strncmp+1)^0,c
  4054  0060A6  0E00               	movlw	0
  4055  0060A8  6E01               	movwf	?_strncmp^0,c
  4056  0060AA  0012               	return	
  4057  0060AC                     i2l10319:
  4058  0060AC  4A08               	infsnz	strncmp@l^0,f,c
  4059  0060AE  2A09               	incf	(strncmp@l+1)^0,f,c
  4060  0060B0  4A0A               	infsnz	strncmp@r^0,f,c
  4061  0060B2  2A0B               	incf	(strncmp@r+1)^0,f,c
  4062  0060B4  0605               	decf	strncmp@n^0,f,c
  4063  0060B6  A0D8               	btfss	status,0,c
  4064  0060B8  0606               	decf	(strncmp@n+1)^0,f,c
  4065  0060BA                     i2l10321:
  4066  0060BA  C008  FFD9         	movff	strncmp@l,fsr2l
  4067  0060BE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4068  0060C2  50DF               	movf	indf2,w,c
  4069  0060C4  B4D8               	btfsc	status,2,c
  4070  0060C6  D01C               	goto	i2u1350_40
  4071  0060C8  C00A  FFF6         	movff	strncmp@r,tblptrl
  4072  0060CC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4073  0060D0                     	if	0	;tblptru may be non-zero
  4074  0060D0                     	endif
  4075  0060D0                     	if	0	;tblptru may be non-zero
  4076  0060D0                     	endif
  4077  0060D0  0008               	tblrd		*
  4078  0060D2  50F5               	movf	tablat,w,c
  4079  0060D4  0900               	iorlw	0
  4080  0060D6  B4D8               	btfsc	status,2,c
  4081  0060D8  D013               	goto	i2u1350_40
  4082  0060DA  5005               	movf	strncmp@n^0,w,c
  4083  0060DC  1006               	iorwf	(strncmp@n+1)^0,w,c
  4084  0060DE  B4D8               	btfsc	status,2,c
  4085  0060E0  D00F               	goto	i2u1350_40
  4086  0060E2  C008  FFD9         	movff	strncmp@l,fsr2l
  4087  0060E6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4088  0060EA  50DF               	movf	indf2,w,c
  4089  0060EC  6E07               	movwf	??_strncmp^0,c
  4090  0060EE  C00A  FFF6         	movff	strncmp@r,tblptrl
  4091  0060F2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4092  0060F6                     	if	0	;tblptru may be non-zero
  4093  0060F6                     	endif
  4094  0060F6                     	if	0	;tblptru may be non-zero
  4095  0060F6                     	endif
  4096  0060F6  0008               	tblrd		*
  4097  0060F8  50F5               	movf	tablat,w,c
  4098  0060FA  1807               	xorwf	??_strncmp^0,w,c
  4099  0060FC  B4D8               	btfsc	status,2,c
  4100  0060FE  D7D6               	goto	i2l10319
  4101  006100                     i2u1350_40:
  4102  006100  C008  FFD9         	movff	strncmp@l,fsr2l
  4103  006104  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4104  006108  50DF               	movf	indf2,w,c
  4105  00610A  6E07               	movwf	??_strncmp^0,c
  4106  00610C  C00A  FFF6         	movff	strncmp@r,tblptrl
  4107  006110  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4108  006114                     	if	0	;tblptru may be non-zero
  4109  006114                     	endif
  4110  006114                     	if	0	;tblptru may be non-zero
  4111  006114                     	endif
  4112  006114  0008               	tblrd		*
  4113  006116  50F5               	movf	tablat,w,c
  4114  006118  5C07               	subwf	??_strncmp^0,w,c
  4115  00611A  6E01               	movwf	?_strncmp^0,c
  4116  00611C  6A02               	clrf	(?_strncmp+1)^0,c
  4117  00611E  A0D8               	btfss	status,0,c
  4118  006120  0602               	decf	(?_strncmp+1)^0,f,c
  4119  006122  0012               	return		;funcret
  4120  006124                     __end_of_strncmp:
  4121                           	opt callstack 0
  4122                           
  4123 ;; *************** function _stoa *****************
  4124 ;; Defined at:
  4125 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  4128 ;;		 -> sprintf@f(6), 
  4129 ;;  s               2   11[COMRAM] PTR unsigned char 
  4130 ;;		 -> ?_sprintf(2), r(100), 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  nuls            7   14[COMRAM] unsigned char [7]
  4133 ;;  l               2   29[COMRAM] int 
  4134 ;;  p               2   27[COMRAM] int 
  4135 ;;  cp              2   25[COMRAM] PTR unsigned char 
  4136 ;;		 -> ?_sprintf(2), stoa@nuls(7), r(100), 
  4137 ;;  w               2   23[COMRAM] int 
  4138 ;;  i               2   21[COMRAM] int 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  2    9[COMRAM] int 
  4141 ;; Registers used:
  4142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4148 ;;      Params:         4       0       0       0       0       0       0
  4149 ;;      Locals:        17       0       0       0       0       0       0
  4150 ;;      Temps:          1       0       0       0       0       0       0
  4151 ;;      Totals:        22       0       0       0       0       0       0
  4152 ;;Total ram usage:       22 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    2
  4155 ;; This function calls:
  4156 ;;		_fputc
  4157 ;;		_strlen
  4158 ;; This function is called by:
  4159 ;;		_vfpfcnvrt
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text20
  4164  005B42                     __ptext20:
  4165                           	opt callstack 0
  4166  005B42                     _stoa:
  4167                           	opt callstack 17
  4168                           
  4169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  4170                           
  4171                           ;incstack = 0
  4172  005B42  EE22  F08C         	lfsr	2,stoa@F1153
  4173  005B46  EE10  F00F         	lfsr	1,stoa@nuls
  4174  005B4A  0E06               	movlw	6
  4175  005B4C                     i2u1330_41:
  4176  005B4C  CFDB FFE3          	movff	plusw2,plusw1
  4177  005B50  06E8               	decf	wreg,f,c
  4178  005B52  E2FC               	bc	i2u1330_41
  4179                           
  4180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  4181  005B54  C00C  F01A         	movff	stoa@s,stoa@cp
  4182  005B58  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  4183                           
  4184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  4185  005B5C  501A               	movf	stoa@cp^0,w,c
  4186  005B5E  101B               	iorwf	(stoa@cp+1)^0,w,c
  4187  005B60  A4D8               	btfss	status,2,c
  4188  005B62  D004               	goto	i2l10237
  4189                           
  4190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  4191  005B64  0E0F               	movlw	low stoa@nuls
  4192  005B66  6E1A               	movwf	stoa@cp^0,c
  4193  005B68  0E00               	movlw	high stoa@nuls
  4194  005B6A  6E1B               	movwf	(stoa@cp+1)^0,c
  4195  005B6C                     i2l10237:
  4196                           
  4197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  4198  005B6C  C01A  F001         	movff	stoa@cp,strlen@s
  4199  005B70  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  4200  005B74  EC94  F034         	call	_strlen	;wreg free
  4201  005B78  C001  F01E         	movff	?_strlen,stoa@l
  4202  005B7C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  4203                           
  4204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  4205  005B80  C0F8  F01C         	movff	_prec,stoa@p
  4206  005B84  C0F9  F01D         	movff	_prec+1,stoa@p+1
  4207                           
  4208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  4209  005B88  BE1D               	btfsc	(stoa@p+1)^0,7,c
  4210  005B8A  D00E               	goto	i2l405
  4211  005B8C  501E               	movf	stoa@l^0,w,c
  4212  005B8E  5C1C               	subwf	stoa@p^0,w,c
  4213  005B90  501D               	movf	(stoa@p+1)^0,w,c
  4214  005B92  0A80               	xorlw	128
  4215  005B94  6E0E               	movwf	??_stoa^0,c
  4216  005B96  501F               	movf	(stoa@l+1)^0,w,c
  4217  005B98  0A80               	xorlw	128
  4218  005B9A  580E               	subwfb	??_stoa^0,w,c
  4219  005B9C  B0D8               	btfsc	status,0,c
  4220  005B9E  D004               	goto	i2l405
  4221  005BA0  C01C  F01E         	movff	stoa@p,stoa@l
  4222  005BA4  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  4223  005BA8                     i2l405:
  4224                           
  4225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  4226  005BA8  C01E  F01C         	movff	stoa@l,stoa@p
  4227  005BAC  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  4228                           
  4229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  4230  005BB0  C220  F018         	movff	_width,stoa@w
  4231  005BB4  C221  F019         	movff	_width+1,stoa@w+1
  4232                           
  4233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  4234  005BB8  0100               	movlb	0	; () banked
  4235  005BBA  A1FA               	btfss	_flags& (0+255),0,b
  4236  005BBC  D00D               	goto	i2l10251
  4237  005BBE  D016               	goto	i2u1335_40
  4238  005BC0                     i2l10247:
  4239                           
  4240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  4241  005BC0  0E00               	movlw	0
  4242  005BC2  6E02               	movwf	(fputc@c+1)^0,c
  4243  005BC4  0E20               	movlw	32
  4244  005BC6  6E01               	movwf	fputc@c^0,c
  4245  005BC8  C00A  F003         	movff	stoa@fp,fputc@fp
  4246  005BCC  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4247  005BD0  EC92  F030         	call	_fputc	;wreg free
  4248                           
  4249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  4250  005BD4  4A1E               	infsnz	stoa@l^0,f,c
  4251  005BD6  2A1F               	incf	(stoa@l+1)^0,f,c
  4252  005BD8                     i2l10251:
  4253                           
  4254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  4255  005BD8  5018               	movf	stoa@w^0,w,c
  4256  005BDA  5C1E               	subwf	stoa@l^0,w,c
  4257  005BDC  501F               	movf	(stoa@l+1)^0,w,c
  4258  005BDE  0A80               	xorlw	128
  4259  005BE0  6E0E               	movwf	??_stoa^0,c
  4260  005BE2  5019               	movf	(stoa@w+1)^0,w,c
  4261  005BE4  0A80               	xorlw	128
  4262  005BE6  580E               	subwfb	??_stoa^0,w,c
  4263  005BE8  A0D8               	btfss	status,0,c
  4264  005BEA  D7EA               	goto	i2l10247
  4265  005BEC                     i2u1335_40:
  4266                           
  4267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  4268  005BEC  0E00               	movlw	0
  4269  005BEE  6E17               	movwf	(stoa@i+1)^0,c
  4270  005BF0  0E00               	movlw	0
  4271  005BF2  6E16               	movwf	stoa@i^0,c
  4272                           
  4273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4274  005BF4  D013               	goto	i2l10261
  4275  005BF6                     i2l10255:
  4276                           
  4277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  4278  005BF6  C01A  FFD9         	movff	stoa@cp,fsr2l
  4279  005BFA  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  4280  005BFE  50DF               	movf	indf2,w,c
  4281  005C00  6E0E               	movwf	??_stoa^0,c
  4282  005C02  500E               	movf	??_stoa^0,w,c
  4283  005C04  6E01               	movwf	fputc@c^0,c
  4284  005C06  6A02               	clrf	(fputc@c+1)^0,c
  4285  005C08  C00A  F003         	movff	stoa@fp,fputc@fp
  4286  005C0C  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4287  005C10  EC92  F030         	call	_fputc	;wreg free
  4288                           
  4289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  4290  005C14  4A1A               	infsnz	stoa@cp^0,f,c
  4291  005C16  2A1B               	incf	(stoa@cp+1)^0,f,c
  4292                           
  4293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  4294  005C18  4A16               	infsnz	stoa@i^0,f,c
  4295  005C1A  2A17               	incf	(stoa@i+1)^0,f,c
  4296  005C1C                     i2l10261:
  4297                           
  4298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4299  005C1C  501C               	movf	stoa@p^0,w,c
  4300  005C1E  5C16               	subwf	stoa@i^0,w,c
  4301  005C20  5017               	movf	(stoa@i+1)^0,w,c
  4302  005C22  0A80               	xorlw	128
  4303  005C24  6E0E               	movwf	??_stoa^0,c
  4304  005C26  501D               	movf	(stoa@p+1)^0,w,c
  4305  005C28  0A80               	xorlw	128
  4306  005C2A  580E               	subwfb	??_stoa^0,w,c
  4307  005C2C  A0D8               	btfss	status,0,c
  4308  005C2E  D7E3               	goto	i2l10255
  4309                           
  4310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  4311  005C30  0100               	movlb	0	; () banked
  4312  005C32  B1FA               	btfsc	_flags& (0+255),0,b
  4313  005C34  D00D               	goto	i2l10269
  4314  005C36  D016               	goto	i2u1338_40
  4315  005C38                     i2l10265:
  4316                           
  4317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  4318  005C38  0E00               	movlw	0
  4319  005C3A  6E02               	movwf	(fputc@c+1)^0,c
  4320  005C3C  0E20               	movlw	32
  4321  005C3E  6E01               	movwf	fputc@c^0,c
  4322  005C40  C00A  F003         	movff	stoa@fp,fputc@fp
  4323  005C44  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  4324  005C48  EC92  F030         	call	_fputc	;wreg free
  4325                           
  4326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  4327  005C4C  4A1E               	infsnz	stoa@l^0,f,c
  4328  005C4E  2A1F               	incf	(stoa@l+1)^0,f,c
  4329  005C50                     i2l10269:
  4330                           
  4331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  4332  005C50  5018               	movf	stoa@w^0,w,c
  4333  005C52  5C1E               	subwf	stoa@l^0,w,c
  4334  005C54  501F               	movf	(stoa@l+1)^0,w,c
  4335  005C56  0A80               	xorlw	128
  4336  005C58  6E0E               	movwf	??_stoa^0,c
  4337  005C5A  5019               	movf	(stoa@w+1)^0,w,c
  4338  005C5C  0A80               	xorlw	128
  4339  005C5E  580E               	subwfb	??_stoa^0,w,c
  4340  005C60  A0D8               	btfss	status,0,c
  4341  005C62  D7EA               	goto	i2l10265
  4342  005C64                     i2u1338_40:
  4343                           
  4344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  4345                           
  4346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 586:     }
  4347  005C64  C01E  F00A         	movff	stoa@l,?_stoa
  4348  005C68  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  4349  005C6C  0012               	return		;funcret
  4350  005C6E                     __end_of_stoa:
  4351                           	opt callstack 0
  4352                           
  4353 ;; *************** function _efgtoa *****************
  4354 ;; Defined at:
  4355 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
  4358 ;;		 -> sprintf@f(6), 
  4359 ;;  f               4   80[BANK0 ] PTR struct _IO_FILE
  4360 ;;  c               1   84[BANK0 ] unsigned char 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  u               4  240[BANK1 ] unsigned char 
  4363 ;;  g               4  230[BANK1 ] unsigned char 
  4364 ;;  l               4  226[BANK1 ] unsigned char 
  4365 ;;  h               4  222[BANK1 ] unsigned char 
  4366 ;;  ou              4  188[BANK1 ] unsigned char 
  4367 ;;  n               2  238[BANK1 ] int 
  4368 ;;  e               2  236[BANK1 ] int 
  4369 ;;  i               2  234[BANK1 ] int 
  4370 ;;  w               2  219[BANK1 ] int 
  4371 ;;  p               2  216[BANK1 ] int 
  4372 ;;  sign            2  214[BANK1 ] int 
  4373 ;;  d               2  212[BANK1 ] int 
  4374 ;;  ne              2  210[BANK1 ] int 
  4375 ;;  m               2  208[BANK1 ] int 
  4376 ;;  pp              2  206[BANK1 ] int 
  4377 ;;  t               2  204[BANK1 ] int 
  4378 ;;  mode            1  221[BANK1 ] unsigned char 
  4379 ;;  nmode           1  218[BANK1 ] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  2   78[BANK0 ] int 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4389 ;;      Params:         0       7       0       0       0       0       0
  4390 ;;      Locals:         0       0      56       0       0       0       0
  4391 ;;      Temps:          0       5       0       0       0       0       0
  4392 ;;      Totals:         0      12      56       0       0       0       0
  4393 ;;Total ram usage:       68 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    4
  4396 ;; This function calls:
  4397 ;;		___awdiv
  4398 ;;		___fladd
  4399 ;;		___fldiv
  4400 ;;		___fleq
  4401 ;;		___flge
  4402 ;;		___flmul
  4403 ;;		___flneg
  4404 ;;		___flsub
  4405 ;;		___fltol
  4406 ;;		___fpclassifyf
  4407 ;;		_floorf
  4408 ;;		_isupper
  4409 ;;		_pad
  4410 ;;		_strcpy
  4411 ;;		_tolower
  4412 ;;		i2___awmod
  4413 ;; This function is called by:
  4414 ;;		_vfpfcnvrt
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text21
  4419  002D58                     __ptext21:
  4420                           	opt callstack 0
  4421  002D58                     _efgtoa:
  4422                           	opt callstack 15
  4423                           
  4424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  4425                           
  4426                           ;incstack = 0
  4427  002D58  0E00               	movlw	0
  4428  002D5A  0101               	movlb	1	; () banked
  4429  002D5C  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  4430  002D5E  0E00               	movlw	0
  4431  002D60  6FD6               	movwf	efgtoa@sign& (0+255),b
  4432                           
  4433                           ; BSR set to: 1
  4434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  4435  002D62  C0D0  F1E6         	movff	efgtoa@f,efgtoa@g
  4436  002D66  C0D1  F1E7         	movff	efgtoa@f+1,efgtoa@g+1
  4437  002D6A  C0D2  F1E8         	movff	efgtoa@f+2,efgtoa@g+2
  4438  002D6E  C0D3  F1E9         	movff	efgtoa@f+3,efgtoa@g+3
  4439                           
  4440                           ; BSR set to: 1
  4441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  4442  002D72  AFE9               	btfss	(efgtoa@g+3)& (0+255),7,b
  4443  002D74  D016               	goto	i2l9941
  4444                           
  4445                           ; BSR set to: 1
  4446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  4447  002D76  0E00               	movlw	0
  4448  002D78  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  4449  002D7A  0E01               	movlw	1
  4450  002D7C  6FD6               	movwf	efgtoa@sign& (0+255),b
  4451                           
  4452                           ; BSR set to: 1
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  4454  002D7E  C1E6  F001         	movff	efgtoa@g,___flneg@f1
  4455  002D82  C1E7  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4456  002D86  C1E8  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4457  002D8A  C1E9  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4458  002D8E  EC7D  F034         	call	___flneg	;wreg free
  4459  002D92  C001  F1E6         	movff	?___flneg,efgtoa@g
  4460  002D96  C002  F1E7         	movff	?___flneg+1,efgtoa@g+1
  4461  002D9A  C003  F1E8         	movff	?___flneg+2,efgtoa@g+2
  4462  002D9E  C004  F1E9         	movff	?___flneg+3,efgtoa@g+3
  4463  002DA2                     i2l9941:
  4464                           
  4465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  4466  002DA2  0E00               	movlw	0
  4467  002DA4  0101               	movlb	1	; () banked
  4468  002DA6  6FEF               	movwf	(efgtoa@n+1)& (0+255),b
  4469  002DA8  0E00               	movlw	0
  4470  002DAA  6FEE               	movwf	efgtoa@n& (0+255),b
  4471                           
  4472                           ; BSR set to: 1
  4473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  4474  002DAC  C220  F1DB         	movff	_width,efgtoa@w
  4475  002DB0  C221  F1DC         	movff	_width+1,efgtoa@w+1
  4476                           
  4477                           ; BSR set to: 1
  4478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  4479  002DB4  51D6               	movf	efgtoa@sign& (0+255),w,b
  4480  002DB6  11D7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4481  002DB8  A4D8               	btfss	status,2,c
  4482  002DBA  D003               	goto	i2u1280_40
  4483                           
  4484                           ; BSR set to: 1
  4485  002DBC  0100               	movlb	0	; () banked
  4486  002DBE  A5FA               	btfss	_flags& (0+255),2,b
  4487  002DC0  D014               	goto	i2l9961
  4488  002DC2                     i2u1280_40:
  4489                           
  4490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  4491  002DC2  0101               	movlb	1	; () banked
  4492  002DC4  51D6               	movf	efgtoa@sign& (0+255),w,b
  4493  002DC6  11D7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4494  002DC8  A4D8               	btfss	status,2,c
  4495  002DCA  D004               	goto	i2l9953
  4496                           
  4497                           ; BSR set to: 1
  4498  002DCC  0E00               	movlw	0
  4499  002DCE  6FC1               	movwf	(_efgtoa$976+1)& (0+255),b
  4500  002DD0  0E2B               	movlw	43
  4501  002DD2  D003               	goto	L1
  4502  002DD4                     i2l9953:
  4503                           
  4504                           ; BSR set to: 1
  4505  002DD4  0E00               	movlw	0
  4506  002DD6  6FC1               	movwf	(_efgtoa$976+1)& (0+255),b
  4507  002DD8  0E2D               	movlw	45
  4508  002DDA                     L1:
  4509  002DDA  6FC0               	movwf	_efgtoa$976& (0+255),b
  4510                           
  4511                           ; BSR set to: 1
  4512  002DDC  C1C0  F226         	movff	_efgtoa$976,_dbuf
  4513                           
  4514                           ; BSR set to: 1
  4515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  4516  002DE0  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  4517  002DE2  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  4518                           
  4519                           ; BSR set to: 1
  4520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  4521  002DE4  07DB               	decf	efgtoa@w& (0+255),f,b
  4522  002DE6  A0D8               	btfss	status,0,c
  4523  002DE8  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  4524  002DEA                     i2l9961:
  4525                           
  4526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4527  002DEA  C1E6  F001         	movff	efgtoa@g,___fpclassifyf@x
  4528  002DEE  C1E7  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4529  002DF2  C1E8  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4530  002DF6  C1E9  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4531  002DFA  EC2A  F02F         	call	___fpclassifyf	;wreg free
  4532  002DFE  0401               	decf	?___fpclassifyf^0,w,c
  4533  002E00  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4534  002E02  A4D8               	btfss	status,2,c
  4535  002E04  D04D               	goto	i2l9979
  4536  002E06  0EBF               	movlw	191
  4537  002E08  0100               	movlb	0	; () banked
  4538  002E0A  6FD5               	movwf	??_efgtoa& (0+255),b
  4539  002E0C  0EFF               	movlw	255
  4540  002E0E  6FD6               	movwf	(??_efgtoa+1)& (0+255),b
  4541  002E10  51D4               	movf	efgtoa@c& (0+255),w,b
  4542  002E12  6FD7               	movwf	(??_efgtoa+2)& (0+255),b
  4543  002E14  6BD8               	clrf	(??_efgtoa+3)& (0+255),b
  4544  002E16  51D5               	movf	??_efgtoa& (0+255),w,b
  4545  002E18  27D7               	addwf	(??_efgtoa+2)& (0+255),f,b
  4546  002E1A  51D6               	movf	(??_efgtoa+1)& (0+255),w,b
  4547  002E1C  23D8               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4548  002E1E  51D8               	movf	(??_efgtoa+3)& (0+255),w,b
  4549  002E20  E106               	bnz	i2u1283_40
  4550  002E22  0E1A               	movlw	26
  4551  002E24  5DD7               	subwf	(??_efgtoa+2)& (0+255),w,b
  4552  002E26  B0D8               	btfsc	status,0,c
  4553  002E28  D002               	goto	i2u1283_40
  4554  002E2A  0E01               	movlw	1
  4555  002E2C  D001               	goto	i2u1284_40
  4556  002E2E                     i2u1283_40:
  4557  002E2E  0E00               	movlw	0
  4558  002E30                     i2u1284_40:
  4559  002E30  0101               	movlb	1	; () banked
  4560  002E32  6FC2               	movwf	_efgtoa$977& (0+255),b
  4561  002E34  6BC3               	clrf	(_efgtoa$977+1)& (0+255),b
  4562                           
  4563                           ; BSR set to: 1
  4564  002E36  51C2               	movf	_efgtoa$977& (0+255),w,b
  4565  002E38  11C3               	iorwf	(_efgtoa$977+1)& (0+255),w,b
  4566  002E3A  B4D8               	btfsc	status,2,c
  4567  002E3C  D00D               	goto	i2l9971
  4568                           
  4569                           ; BSR set to: 1
  4570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  4571  002E3E  0E26               	movlw	low _dbuf
  4572  002E40  25EE               	addwf	efgtoa@n& (0+255),w,b
  4573  002E42  6E01               	movwf	strcpy@dest^0,c
  4574  002E44  0E02               	movlw	high _dbuf
  4575  002E46  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4576  002E48  6E02               	movwf	(strcpy@dest+1)^0,c
  4577  002E4A  0ED7               	movlw	low STR_5
  4578  002E4C  6E03               	movwf	strcpy@src^0,c
  4579  002E4E  0E06               	movlw	high STR_5
  4580  002E50  6E04               	movwf	(strcpy@src+1)^0,c
  4581  002E52  ECF4  F032         	call	_strcpy	;wreg free
  4582                           
  4583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  4584  002E56  D00C               	goto	i2l9973
  4585  002E58                     i2l9971:
  4586                           
  4587                           ; BSR set to: 1
  4588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  4589  002E58  0E26               	movlw	low _dbuf
  4590  002E5A  25EE               	addwf	efgtoa@n& (0+255),w,b
  4591  002E5C  6E01               	movwf	strcpy@dest^0,c
  4592  002E5E  0E02               	movlw	high _dbuf
  4593  002E60  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4594  002E62  6E02               	movwf	(strcpy@dest+1)^0,c
  4595  002E64  0EDF               	movlw	low STR_6
  4596  002E66  6E03               	movwf	strcpy@src^0,c
  4597  002E68  0E06               	movlw	high STR_6
  4598  002E6A  6E04               	movwf	(strcpy@src+1)^0,c
  4599  002E6C  ECF4  F032         	call	_strcpy	;wreg free
  4600  002E70                     i2l9973:
  4601                           
  4602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4603  002E70  0101               	movlb	1	; () banked
  4604  002E72  0EFD               	movlw	253
  4605  002E74  27DB               	addwf	efgtoa@w& (0+255),f,b
  4606  002E76  0EFF               	movlw	255
  4607  002E78  23DC               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4608  002E7A                     i2l9975:
  4609                           
  4610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  4611  002E7A  C0CE  F011         	movff	efgtoa@fp,pad@fp
  4612  002E7E  C0CF  F012         	movff	efgtoa@fp+1,pad@fp+1
  4613  002E82  0E26               	movlw	low _dbuf
  4614  002E84  6E13               	movwf	pad@buf^0,c
  4615  002E86  0E02               	movlw	high _dbuf
  4616  002E88  6E14               	movwf	(pad@buf+1)^0,c
  4617  002E8A  C1DB  F015         	movff	efgtoa@w,pad@p
  4618  002E8E  C1DC  F016         	movff	efgtoa@w+1,pad@p+1
  4619  002E92  ECE2  F030         	call	_pad	;wreg free
  4620  002E96  C011  F0CE         	movff	?_pad,?_efgtoa
  4621  002E9A  C012  F0CF         	movff	?_pad+1,?_efgtoa+1
  4622  002E9E  0012               	return	
  4623  002EA0                     i2l9979:
  4624                           
  4625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4626  002EA0  C1E6  F001         	movff	efgtoa@g,___fpclassifyf@x
  4627  002EA4  C1E7  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4628  002EA8  C1E8  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4629  002EAC  C1E9  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4630  002EB0  EC2A  F02F         	call	___fpclassifyf	;wreg free
  4631  002EB4  5001               	movf	?___fpclassifyf^0,w,c
  4632  002EB6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4633  002EB8  A4D8               	btfss	status,2,c
  4634  002EBA  D036               	goto	i2l9997
  4635  002EBC  0EBF               	movlw	191
  4636  002EBE  0100               	movlb	0	; () banked
  4637  002EC0  6FD5               	movwf	??_efgtoa& (0+255),b
  4638  002EC2  0EFF               	movlw	255
  4639  002EC4  6FD6               	movwf	(??_efgtoa+1)& (0+255),b
  4640  002EC6  51D4               	movf	efgtoa@c& (0+255),w,b
  4641  002EC8  6FD7               	movwf	(??_efgtoa+2)& (0+255),b
  4642  002ECA  6BD8               	clrf	(??_efgtoa+3)& (0+255),b
  4643  002ECC  51D5               	movf	??_efgtoa& (0+255),w,b
  4644  002ECE  27D7               	addwf	(??_efgtoa+2)& (0+255),f,b
  4645  002ED0  51D6               	movf	(??_efgtoa+1)& (0+255),w,b
  4646  002ED2  23D8               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4647  002ED4  51D8               	movf	(??_efgtoa+3)& (0+255),w,b
  4648  002ED6  E106               	bnz	i2u1287_40
  4649  002ED8  0E1A               	movlw	26
  4650  002EDA  5DD7               	subwf	(??_efgtoa+2)& (0+255),w,b
  4651  002EDC  B0D8               	btfsc	status,0,c
  4652  002EDE  D002               	goto	i2u1287_40
  4653  002EE0  0E01               	movlw	1
  4654  002EE2  D001               	goto	i2u1288_40
  4655  002EE4                     i2u1287_40:
  4656  002EE4  0E00               	movlw	0
  4657  002EE6                     i2u1288_40:
  4658  002EE6  0101               	movlb	1	; () banked
  4659  002EE8  6FC4               	movwf	_efgtoa$982& (0+255),b
  4660  002EEA  6BC5               	clrf	(_efgtoa$982+1)& (0+255),b
  4661                           
  4662                           ; BSR set to: 1
  4663  002EEC  51C4               	movf	_efgtoa$982& (0+255),w,b
  4664  002EEE  11C5               	iorwf	(_efgtoa$982+1)& (0+255),w,b
  4665  002EF0  B4D8               	btfsc	status,2,c
  4666  002EF2  D00D               	goto	i2l9989
  4667                           
  4668                           ; BSR set to: 1
  4669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4670  002EF4  0E26               	movlw	low _dbuf
  4671  002EF6  25EE               	addwf	efgtoa@n& (0+255),w,b
  4672  002EF8  6E01               	movwf	strcpy@dest^0,c
  4673  002EFA  0E02               	movlw	high _dbuf
  4674  002EFC  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4675  002EFE  6E02               	movwf	(strcpy@dest+1)^0,c
  4676  002F00  0EDB               	movlw	low STR_9
  4677  002F02  6E03               	movwf	strcpy@src^0,c
  4678  002F04  0E06               	movlw	high STR_9
  4679  002F06  6E04               	movwf	(strcpy@src+1)^0,c
  4680  002F08  ECF4  F032         	call	_strcpy	;wreg free
  4681                           
  4682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4683  002F0C  D7B1               	goto	i2l9973
  4684  002F0E                     i2l9989:
  4685                           
  4686                           ; BSR set to: 1
  4687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4688  002F0E  0E26               	movlw	low _dbuf
  4689  002F10  25EE               	addwf	efgtoa@n& (0+255),w,b
  4690  002F12  6E01               	movwf	strcpy@dest^0,c
  4691  002F14  0E02               	movlw	high _dbuf
  4692  002F16  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4693  002F18  6E02               	movwf	(strcpy@dest+1)^0,c
  4694  002F1A  0EE3               	movlw	low STR_10
  4695  002F1C  6E03               	movwf	strcpy@src^0,c
  4696  002F1E  0E06               	movlw	high STR_10
  4697  002F20  6E04               	movwf	(strcpy@src+1)^0,c
  4698  002F22  ECF4  F032         	call	_strcpy	;wreg free
  4699  002F26  D7A4               	goto	i2l9973
  4700  002F28                     i2l9997:
  4701                           
  4702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4703  002F28  0E00               	movlw	0
  4704  002F2A  0101               	movlb	1	; () banked
  4705  002F2C  6FF0               	movwf	efgtoa@u& (0+255),b
  4706  002F2E  0E00               	movlw	0
  4707  002F30  6FF1               	movwf	(efgtoa@u+1)& (0+255),b
  4708  002F32  0E80               	movlw	128
  4709  002F34  6FF2               	movwf	(efgtoa@u+2)& (0+255),b
  4710  002F36  0E3F               	movlw	63
  4711  002F38  6FF3               	movwf	(efgtoa@u+3)& (0+255),b
  4712                           
  4713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4714  002F3A  0E00               	movlw	0
  4715  002F3C  6FED               	movwf	(efgtoa@e+1)& (0+255),b
  4716  002F3E  0E00               	movlw	0
  4717  002F40  6FEC               	movwf	efgtoa@e& (0+255),b
  4718                           
  4719                           ; BSR set to: 1
  4720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4721  002F42  C1E6  F001         	movff	efgtoa@g,___fleq@ff1
  4722  002F46  C1E7  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4723  002F4A  C1E8  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4724  002F4E  C1E9  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4725  002F52  0E00               	movlw	0
  4726  002F54  6E05               	movwf	___fleq@ff2^0,c
  4727  002F56  0E00               	movlw	0
  4728  002F58  6E06               	movwf	(___fleq@ff2+1)^0,c
  4729  002F5A  0E00               	movlw	0
  4730  002F5C  6E07               	movwf	(___fleq@ff2+2)^0,c
  4731  002F5E  0E00               	movlw	0
  4732  002F60  6E08               	movwf	(___fleq@ff2+3)^0,c
  4733  002F62  EC2F  F031         	call	___fleq	;wreg free
  4734  002F66  A0D8               	btfss	status,0,c
  4735  002F68  D01E               	goto	i2l10007
  4736  002F6A  D076               	goto	i2u1292_40
  4737  002F6C                     i2l10003:
  4738                           
  4739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4740  002F6C  C1F0  F011         	movff	efgtoa@u,___flmul@b
  4741  002F70  C1F1  F012         	movff	efgtoa@u+1,___flmul@b+1
  4742  002F74  C1F2  F013         	movff	efgtoa@u+2,___flmul@b+2
  4743  002F78  C1F3  F014         	movff	efgtoa@u+3,___flmul@b+3
  4744  002F7C  0E00               	movlw	0
  4745  002F7E  6E15               	movwf	___flmul@a^0,c
  4746  002F80  0E00               	movlw	0
  4747  002F82  6E16               	movwf	(___flmul@a+1)^0,c
  4748  002F84  0E20               	movlw	32
  4749  002F86  6E17               	movwf	(___flmul@a+2)^0,c
  4750  002F88  0E41               	movlw	65
  4751  002F8A  6E18               	movwf	(___flmul@a+3)^0,c
  4752  002F8C  EC25  F023         	call	___flmul	;wreg free
  4753  002F90  C011  F1F0         	movff	?___flmul,efgtoa@u
  4754  002F94  C012  F1F1         	movff	?___flmul+1,efgtoa@u+1
  4755  002F98  C013  F1F2         	movff	?___flmul+2,efgtoa@u+2
  4756  002F9C  C014  F1F3         	movff	?___flmul+3,efgtoa@u+3
  4757                           
  4758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4759  002FA0  0101               	movlb	1	; () banked
  4760  002FA2  4BEC               	infsnz	efgtoa@e& (0+255),f,b
  4761  002FA4  2BED               	incf	(efgtoa@e+1)& (0+255),f,b
  4762  002FA6                     i2l10007:
  4763                           
  4764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4765  002FA6  C1E6  F032         	movff	efgtoa@g,___flge@ff1
  4766  002FAA  C1E7  F033         	movff	efgtoa@g+1,___flge@ff1+1
  4767  002FAE  C1E8  F034         	movff	efgtoa@g+2,___flge@ff1+2
  4768  002FB2  C1E9  F035         	movff	efgtoa@g+3,___flge@ff1+3
  4769  002FB6  0E00               	movlw	0
  4770  002FB8  6E15               	movwf	___flmul@a^0,c
  4771  002FBA  0E00               	movlw	0
  4772  002FBC  6E16               	movwf	(___flmul@a+1)^0,c
  4773  002FBE  0E20               	movlw	32
  4774  002FC0  6E17               	movwf	(___flmul@a+2)^0,c
  4775  002FC2  0E41               	movlw	65
  4776  002FC4  6E18               	movwf	(___flmul@a+3)^0,c
  4777  002FC6  C1F0  F011         	movff	efgtoa@u,___flmul@b
  4778  002FCA  C1F1  F012         	movff	efgtoa@u+1,___flmul@b+1
  4779  002FCE  C1F2  F013         	movff	efgtoa@u+2,___flmul@b+2
  4780  002FD2  C1F3  F014         	movff	efgtoa@u+3,___flmul@b+3
  4781  002FD6  EC25  F023         	call	___flmul	;wreg free
  4782  002FDA  C011  F036         	movff	?___flmul,___flge@ff2
  4783  002FDE  C012  F037         	movff	?___flmul+1,___flge@ff2+1
  4784  002FE2  C013  F038         	movff	?___flmul+2,___flge@ff2+2
  4785  002FE6  C014  F039         	movff	?___flmul+3,___flge@ff2+3
  4786  002FEA  ECC2  F02E         	call	___flge	;wreg free
  4787  002FEE  A0D8               	btfss	status,0,c
  4788  002FF0  D01F               	goto	i2l10013
  4789  002FF2  D7BC               	goto	i2l10003
  4790  002FF4                     i2l10009:
  4791                           
  4792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4793  002FF4  C1F0  F032         	movff	efgtoa@u,___fldiv@b
  4794  002FF8  C1F1  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4795  002FFC  C1F2  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4796  003000  C1F3  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4797  003004  0E00               	movlw	0
  4798  003006  6E36               	movwf	___fldiv@a^0,c
  4799  003008  0E00               	movlw	0
  4800  00300A  6E37               	movwf	(___fldiv@a+1)^0,c
  4801  00300C  0E20               	movlw	32
  4802  00300E  6E38               	movwf	(___fldiv@a+2)^0,c
  4803  003010  0E41               	movlw	65
  4804  003012  6E39               	movwf	(___fldiv@a+3)^0,c
  4805  003014  EC54  F026         	call	___fldiv	;wreg free
  4806  003018  C032  F1F0         	movff	?___fldiv,efgtoa@u
  4807  00301C  C033  F1F1         	movff	?___fldiv+1,efgtoa@u+1
  4808  003020  C034  F1F2         	movff	?___fldiv+2,efgtoa@u+2
  4809  003024  C035  F1F3         	movff	?___fldiv+3,efgtoa@u+3
  4810                           
  4811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4812  003028  0101               	movlb	1	; () banked
  4813  00302A  07EC               	decf	efgtoa@e& (0+255),f,b
  4814  00302C  A0D8               	btfss	status,0,c
  4815  00302E  07ED               	decf	(efgtoa@e+1)& (0+255),f,b
  4816  003030                     i2l10013:
  4817                           
  4818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4819  003030  C1E6  F032         	movff	efgtoa@g,___flge@ff1
  4820  003034  C1E7  F033         	movff	efgtoa@g+1,___flge@ff1+1
  4821  003038  C1E8  F034         	movff	efgtoa@g+2,___flge@ff1+2
  4822  00303C  C1E9  F035         	movff	efgtoa@g+3,___flge@ff1+3
  4823  003040  C1F0  F036         	movff	efgtoa@u,___flge@ff2
  4824  003044  C1F1  F037         	movff	efgtoa@u+1,___flge@ff2+1
  4825  003048  C1F2  F038         	movff	efgtoa@u+2,___flge@ff2+2
  4826  00304C  C1F3  F039         	movff	efgtoa@u+3,___flge@ff2+3
  4827  003050  ECC2  F02E         	call	___flge	;wreg free
  4828  003054  A0D8               	btfss	status,0,c
  4829  003056  D7CE               	goto	i2l10009
  4830  003058                     i2u1292_40:
  4831                           
  4832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4833  003058  C0D4  F007         	movff	efgtoa@c,tolower@c
  4834  00305C  6A08               	clrf	(tolower@c+1)^0,c
  4835  00305E  EC1D  F033         	call	_tolower	;wreg free
  4836  003062  5007               	movf	?_tolower^0,w,c
  4837  003064  0101               	movlb	1	; () banked
  4838  003066  6FDD               	movwf	efgtoa@mode& (0+255),b
  4839                           
  4840                           ; BSR set to: 1
  4841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4842  003068  C1DD  F1DA         	movff	efgtoa@mode,efgtoa@nmode
  4843                           
  4844                           ; BSR set to: 1
  4845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4846  00306C  0E67               	movlw	103
  4847  00306E  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  4848  003070  A4D8               	btfss	status,2,c
  4849  003072  D01B               	goto	i2l10029
  4850                           
  4851                           ; BSR set to: 1
  4852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4853  003074  0100               	movlb	0	; () banked
  4854  003076  51F8               	movf	_prec& (0+255),w,b
  4855  003078  11F9               	iorwf	(_prec+1)& (0+255),w,b
  4856  00307A  A4D8               	btfss	status,2,c
  4857  00307C  D004               	goto	i2l10025
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4861  00307E  0E00               	movlw	0
  4862  003080  6FF9               	movwf	(_prec+1)& (0+255),b
  4863  003082  0E01               	movlw	1
  4864  003084  6FF8               	movwf	_prec& (0+255),b
  4865  003086                     i2l10025:
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4869  003086  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  4870  003088  D005               	goto	i2u1295_40
  4871  00308A  51F9               	movf	(_prec+1)& (0+255),w,b
  4872  00308C  E109               	bnz	i2l341
  4873  00308E  05F8               	decf	_prec& (0+255),w,b
  4874  003090  B0D8               	btfsc	status,0,c
  4875  003092  D006               	goto	i2l341
  4876  003094                     i2u1295_40:
  4877                           
  4878                           ; BSR set to: 0
  4879  003094  0E00               	movlw	0
  4880  003096  0101               	movlb	1	; () banked
  4881  003098  6FD9               	movwf	(efgtoa@p+1)& (0+255),b
  4882  00309A  0E06               	movlw	6
  4883  00309C  6FD8               	movwf	efgtoa@p& (0+255),b
  4884  00309E  D009               	goto	i2l10035
  4885  0030A0                     i2l341:
  4886                           
  4887                           ; BSR set to: 0
  4888  0030A0  C0F8  F1D8         	movff	_prec,efgtoa@p
  4889  0030A4  C0F9  F1D9         	movff	_prec+1,efgtoa@p+1
  4890  0030A8  D004               	goto	i2l10035
  4891  0030AA                     i2l10029:
  4892                           
  4893                           ; BSR set to: 1
  4894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4895  0030AA  0100               	movlb	0	; () banked
  4896  0030AC  AFF9               	btfss	(_prec+1)& (0+255),7,b
  4897  0030AE  D7F8               	goto	i2l341
  4898  0030B0  D7F1               	goto	i2u1295_40
  4899  0030B2                     i2l10035:
  4900                           
  4901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4902  0030B2  0E67               	movlw	103
  4903  0030B4  0101               	movlb	1	; () banked
  4904  0030B6  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  4905  0030B8  A4D8               	btfss	status,2,c
  4906  0030BA  D028               	goto	i2l10045
  4907                           
  4908                           ; BSR set to: 1
  4909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4910  0030BC  AFED               	btfss	(efgtoa@e+1)& (0+255),7,b
  4911  0030BE  D006               	goto	i2u1298_40
  4912  0030C0  0EFC               	movlw	252
  4913  0030C2  5DEC               	subwf	efgtoa@e& (0+255),w,b
  4914  0030C4  0EFF               	movlw	255
  4915  0030C6  59ED               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4916  0030C8  A0D8               	btfss	status,0,c
  4917  0030CA  D01D               	goto	i2l10043
  4918  0030CC                     i2u1298_40:
  4919                           
  4920                           ; BSR set to: 1
  4921  0030CC  0EFF               	movlw	255
  4922  0030CE  0100               	movlb	0	; () banked
  4923  0030D0  6FD5               	movwf	??_efgtoa& (0+255),b
  4924  0030D2  0EFF               	movlw	255
  4925  0030D4  6FD6               	movwf	(??_efgtoa+1)& (0+255),b
  4926  0030D6  C1D8  F0D7         	movff	efgtoa@p,??_efgtoa+2
  4927  0030DA  C1D9  F0D8         	movff	efgtoa@p+1,??_efgtoa+3
  4928  0030DE  51D5               	movf	??_efgtoa& (0+255),w,b
  4929  0030E0  27D7               	addwf	(??_efgtoa+2)& (0+255),f,b
  4930  0030E2  51D6               	movf	(??_efgtoa+1)& (0+255),w,b
  4931  0030E4  23D8               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4932  0030E6  0101               	movlb	1	; () banked
  4933  0030E8  51EC               	movf	efgtoa@e& (0+255),w,b
  4934  0030EA  0100               	movlb	0	; () banked
  4935  0030EC  5DD7               	subwf	(??_efgtoa+2)& (0+255),w,b
  4936  0030EE  51D8               	movf	(??_efgtoa+3)& (0+255),w,b
  4937  0030F0  0A80               	xorlw	128
  4938  0030F2  6FD9               	movwf	(??_efgtoa+4)& (0+255),b
  4939  0030F4  0101               	movlb	1	; () banked
  4940  0030F6  51ED               	movf	(efgtoa@e+1)& (0+255),w,b
  4941  0030F8  0A80               	xorlw	128
  4942  0030FA  0100               	movlb	0	; () banked
  4943  0030FC  59D9               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4944  0030FE  A0D8               	btfss	status,0,c
  4945  003100  D002               	goto	i2l10043
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4949  003102  0E66               	movlw	102
  4950  003104  D001               	goto	L2
  4951  003106                     i2l10043:
  4952                           
  4953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4954  003106  0E65               	movlw	101
  4955  003108                     L2:
  4956  003108  0101               	movlb	1	; () banked
  4957  00310A  6FDA               	movwf	efgtoa@nmode& (0+255),b
  4958  00310C                     i2l10045:
  4959                           
  4960                           ; BSR set to: 1
  4961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4962  00310C  C1D8  F1D0         	movff	efgtoa@p,efgtoa@m
  4963  003110  C1D9  F1D1         	movff	efgtoa@p+1,efgtoa@m+1
  4964                           
  4965                           ; BSR set to: 1
  4966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4967  003114  0E67               	movlw	103
  4968  003116  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  4969  003118  A4D8               	btfss	status,2,c
  4970  00311A  D005               	goto	i2u1302_40
  4971                           
  4972                           ; BSR set to: 1
  4973  00311C  0E66               	movlw	102
  4974  00311E  19DA               	xorwf	efgtoa@nmode& (0+255),w,b
  4975  003120  B4D8               	btfsc	status,2,c
  4976                           
  4977                           ; BSR set to: 1
  4978  003122  AFED               	btfss	(efgtoa@e+1)& (0+255),7,b
  4979  003124  D002               	goto	i2l10055
  4980  003126                     i2u1302_40:
  4981                           
  4982                           ; BSR set to: 1
  4983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4984  003126  4BD0               	infsnz	efgtoa@m& (0+255),f,b
  4985  003128  2BD1               	incf	(efgtoa@m+1)& (0+255),f,b
  4986  00312A                     i2l10055:
  4987                           
  4988                           ; BSR set to: 1
  4989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4990  00312A  0E66               	movlw	102
  4991  00312C  19DA               	xorwf	efgtoa@nmode& (0+255),w,b
  4992  00312E  A4D8               	btfss	status,2,c
  4993  003130  D016               	goto	i2l10065
  4994                           
  4995                           ; BSR set to: 1
  4996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4997  003132  AFED               	btfss	(efgtoa@e+1)& (0+255),7,b
  4998  003134  D00C               	goto	i2l10061
  4999                           
  5000                           ; BSR set to: 1
  5001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  5002  003136  0E00               	movlw	0
  5003  003138  6FF0               	movwf	efgtoa@u& (0+255),b
  5004  00313A  0E00               	movlw	0
  5005  00313C  6FF1               	movwf	(efgtoa@u+1)& (0+255),b
  5006  00313E  0E80               	movlw	128
  5007  003140  6FF2               	movwf	(efgtoa@u+2)& (0+255),b
  5008  003142  0E3F               	movlw	63
  5009  003144  6FF3               	movwf	(efgtoa@u+3)& (0+255),b
  5010                           
  5011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  5012  003146  0E00               	movlw	0
  5013  003148  6FED               	movwf	(efgtoa@e+1)& (0+255),b
  5014  00314A  0E00               	movlw	0
  5015  00314C  6FEC               	movwf	efgtoa@e& (0+255),b
  5016  00314E                     i2l10061:
  5017                           
  5018                           ; BSR set to: 1
  5019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  5020  00314E  0E67               	movlw	103
  5021  003150  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  5022  003152  B4D8               	btfsc	status,2,c
  5023  003154  D004               	goto	i2l10065
  5024                           
  5025                           ; BSR set to: 1
  5026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  5027  003156  51EC               	movf	efgtoa@e& (0+255),w,b
  5028  003158  27D0               	addwf	efgtoa@m& (0+255),f,b
  5029  00315A  51ED               	movf	(efgtoa@e+1)& (0+255),w,b
  5030  00315C  23D1               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5031  00315E                     i2l10065:
  5032                           
  5033                           ; BSR set to: 1
  5034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  5035  00315E  0E00               	movlw	0
  5036  003160  6FEB               	movwf	(efgtoa@i+1)& (0+255),b
  5037  003162  0E00               	movlw	0
  5038  003164  6FEA               	movwf	efgtoa@i& (0+255),b
  5039                           
  5040                           ; BSR set to: 1
  5041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  5042  003166  C1E6  F1DE         	movff	efgtoa@g,efgtoa@h
  5043  00316A  C1E7  F1DF         	movff	efgtoa@g+1,efgtoa@h+1
  5044  00316E  C1E8  F1E0         	movff	efgtoa@g+2,efgtoa@h+2
  5045  003172  C1E9  F1E1         	movff	efgtoa@g+3,efgtoa@h+3
  5046                           
  5047                           ; BSR set to: 1
  5048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  5049  003176  C1F0  F1BC         	movff	efgtoa@u,efgtoa@ou
  5050  00317A  C1F1  F1BD         	movff	efgtoa@u+1,efgtoa@ou+1
  5051  00317E  C1F2  F1BE         	movff	efgtoa@u+2,efgtoa@ou+2
  5052  003182  C1F3  F1BF         	movff	efgtoa@u+3,efgtoa@ou+3
  5053                           
  5054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5055  003186  D07B               	goto	i2l10079
  5056  003188                     i2l10071:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  5060  003188  C1DE  F032         	movff	efgtoa@h,___fldiv@b
  5061  00318C  C1DF  F033         	movff	efgtoa@h+1,___fldiv@b+1
  5062  003190  C1E0  F034         	movff	efgtoa@h+2,___fldiv@b+2
  5063  003194  C1E1  F035         	movff	efgtoa@h+3,___fldiv@b+3
  5064  003198  C1F0  F036         	movff	efgtoa@u,___fldiv@a
  5065  00319C  C1F1  F037         	movff	efgtoa@u+1,___fldiv@a+1
  5066  0031A0  C1F2  F038         	movff	efgtoa@u+2,___fldiv@a+2
  5067  0031A4  C1F3  F039         	movff	efgtoa@u+3,___fldiv@a+3
  5068  0031A8  EC54  F026         	call	___fldiv	;wreg free
  5069  0031AC  C032  F04B         	movff	?___fldiv,floorf@x
  5070  0031B0  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  5071  0031B4  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  5072  0031B8  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  5073  0031BC  EC8E  F029         	call	_floorf	;wreg free
  5074  0031C0  C04B  F1E2         	movff	?_floorf,efgtoa@l
  5075  0031C4  C04C  F1E3         	movff	?_floorf+1,efgtoa@l+1
  5076  0031C8  C04D  F1E4         	movff	?_floorf+2,efgtoa@l+2
  5077  0031CC  C04E  F1E5         	movff	?_floorf+3,efgtoa@l+3
  5078                           
  5079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  5080  0031D0  C1E2  F0CA         	movff	efgtoa@l,___fltol@f1
  5081  0031D4  C1E3  F0CB         	movff	efgtoa@l+1,___fltol@f1+1
  5082  0031D8  C1E4  F0CC         	movff	efgtoa@l+2,___fltol@f1+2
  5083  0031DC  C1E5  F0CD         	movff	efgtoa@l+3,___fltol@f1+3
  5084  0031E0  EC90  F02F         	call	___fltol	;wreg free
  5085  0031E4  C0CA  F1D4         	movff	?___fltol,efgtoa@d
  5086  0031E8  C0CB  F1D5         	movff	?___fltol+1,efgtoa@d+1
  5087                           
  5088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  5089  0031EC  C1DE  F02A         	movff	efgtoa@h,___flsub@b
  5090  0031F0  C1DF  F02B         	movff	efgtoa@h+1,___flsub@b+1
  5091  0031F4  C1E0  F02C         	movff	efgtoa@h+2,___flsub@b+2
  5092  0031F8  C1E1  F02D         	movff	efgtoa@h+3,___flsub@b+3
  5093  0031FC  C1F0  F015         	movff	efgtoa@u,___flmul@a
  5094  003200  C1F1  F016         	movff	efgtoa@u+1,___flmul@a+1
  5095  003204  C1F2  F017         	movff	efgtoa@u+2,___flmul@a+2
  5096  003208  C1F3  F018         	movff	efgtoa@u+3,___flmul@a+3
  5097  00320C  C1E2  F011         	movff	efgtoa@l,___flmul@b
  5098  003210  C1E3  F012         	movff	efgtoa@l+1,___flmul@b+1
  5099  003214  C1E4  F013         	movff	efgtoa@l+2,___flmul@b+2
  5100  003218  C1E5  F014         	movff	efgtoa@l+3,___flmul@b+3
  5101  00321C  EC25  F023         	call	___flmul	;wreg free
  5102  003220  C011  F02E         	movff	?___flmul,___flsub@a
  5103  003224  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  5104  003228  C013  F030         	movff	?___flmul+2,___flsub@a+2
  5105  00322C  C014  F031         	movff	?___flmul+3,___flsub@a+3
  5106  003230  EC68  F033         	call	___flsub	;wreg free
  5107  003234  C02A  F1DE         	movff	?___flsub,efgtoa@h
  5108  003238  C02B  F1DF         	movff	?___flsub+1,efgtoa@h+1
  5109  00323C  C02C  F1E0         	movff	?___flsub+2,efgtoa@h+2
  5110  003240  C02D  F1E1         	movff	?___flsub+3,efgtoa@h+3
  5111                           
  5112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  5113  003244  C1F0  F032         	movff	efgtoa@u,___fldiv@b
  5114  003248  C1F1  F033         	movff	efgtoa@u+1,___fldiv@b+1
  5115  00324C  C1F2  F034         	movff	efgtoa@u+2,___fldiv@b+2
  5116  003250  C1F3  F035         	movff	efgtoa@u+3,___fldiv@b+3
  5117  003254  0E00               	movlw	0
  5118  003256  6E36               	movwf	___fldiv@a^0,c
  5119  003258  0E00               	movlw	0
  5120  00325A  6E37               	movwf	(___fldiv@a+1)^0,c
  5121  00325C  0E20               	movlw	32
  5122  00325E  6E38               	movwf	(___fldiv@a+2)^0,c
  5123  003260  0E41               	movlw	65
  5124  003262  6E39               	movwf	(___fldiv@a+3)^0,c
  5125  003264  EC54  F026         	call	___fldiv	;wreg free
  5126  003268  C032  F1F0         	movff	?___fldiv,efgtoa@u
  5127  00326C  C033  F1F1         	movff	?___fldiv+1,efgtoa@u+1
  5128  003270  C034  F1F2         	movff	?___fldiv+2,efgtoa@u+2
  5129  003274  C035  F1F3         	movff	?___fldiv+3,efgtoa@u+3
  5130                           
  5131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  5132  003278  0101               	movlb	1	; () banked
  5133  00327A  4BEA               	infsnz	efgtoa@i& (0+255),f,b
  5134  00327C  2BEB               	incf	(efgtoa@i+1)& (0+255),f,b
  5135  00327E                     i2l10079:
  5136                           
  5137                           ; BSR set to: 1
  5138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5139  00327E  51D0               	movf	efgtoa@m& (0+255),w,b
  5140  003280  5DEA               	subwf	efgtoa@i& (0+255),w,b
  5141  003282  51EB               	movf	(efgtoa@i+1)& (0+255),w,b
  5142  003284  0A80               	xorlw	128
  5143  003286  0100               	movlb	0	; () banked
  5144  003288  6FD5               	movwf	??_efgtoa& (0+255),b
  5145  00328A  0101               	movlb	1	; () banked
  5146  00328C  51D1               	movf	(efgtoa@m+1)& (0+255),w,b
  5147  00328E  0A80               	xorlw	128
  5148  003290  0100               	movlb	0	; () banked
  5149  003292  59D5               	subwfb	??_efgtoa& (0+255),w,b
  5150  003294  A0D8               	btfss	status,0,c
  5151  003296  D778               	goto	i2l10071
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  5155  003298  C1F0  F011         	movff	efgtoa@u,___flmul@b
  5156  00329C  C1F1  F012         	movff	efgtoa@u+1,___flmul@b+1
  5157  0032A0  C1F2  F013         	movff	efgtoa@u+2,___flmul@b+2
  5158  0032A4  C1F3  F014         	movff	efgtoa@u+3,___flmul@b+3
  5159  0032A8  0E00               	movlw	0
  5160  0032AA  6E15               	movwf	___flmul@a^0,c
  5161  0032AC  0E00               	movlw	0
  5162  0032AE  6E16               	movwf	(___flmul@a+1)^0,c
  5163  0032B0  0EA0               	movlw	160
  5164  0032B2  6E17               	movwf	(___flmul@a+2)^0,c
  5165  0032B4  0E40               	movlw	64
  5166  0032B6  6E18               	movwf	(___flmul@a+3)^0,c
  5167  0032B8  EC25  F023         	call	___flmul	;wreg free
  5168  0032BC  C011  F1E2         	movff	?___flmul,efgtoa@l
  5169  0032C0  C012  F1E3         	movff	?___flmul+1,efgtoa@l+1
  5170  0032C4  C013  F1E4         	movff	?___flmul+2,efgtoa@l+2
  5171  0032C8  C014  F1E5         	movff	?___flmul+3,efgtoa@l+3
  5172                           
  5173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  5174  0032CC  C1DE  F032         	movff	efgtoa@h,___flge@ff1
  5175  0032D0  C1DF  F033         	movff	efgtoa@h+1,___flge@ff1+1
  5176  0032D4  C1E0  F034         	movff	efgtoa@h+2,___flge@ff1+2
  5177  0032D8  C1E1  F035         	movff	efgtoa@h+3,___flge@ff1+3
  5178  0032DC  C1E2  F036         	movff	efgtoa@l,___flge@ff2
  5179  0032E0  C1E3  F037         	movff	efgtoa@l+1,___flge@ff2+1
  5180  0032E4  C1E4  F038         	movff	efgtoa@l+2,___flge@ff2+2
  5181  0032E8  C1E5  F039         	movff	efgtoa@l+3,___flge@ff2+3
  5182  0032EC  ECC2  F02E         	call	___flge	;wreg free
  5183  0032F0  B0D8               	btfsc	status,0,c
  5184  0032F2  D003               	goto	i2l10087
  5185                           
  5186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  5187  0032F4  0E00               	movlw	0
  5188  0032F6  0101               	movlb	1	; () banked
  5189  0032F8  D018               	goto	L3
  5190  0032FA                     i2l10087:
  5191                           
  5192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  5193  0032FA  C1DE  F001         	movff	efgtoa@h,___fleq@ff1
  5194  0032FE  C1DF  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5195  003302  C1E0  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5196  003306  C1E1  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5197  00330A  C1E2  F005         	movff	efgtoa@l,___fleq@ff2
  5198  00330E  C1E3  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5199  003312  C1E4  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5200  003316  C1E5  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5201  00331A  EC2F  F031         	call	___fleq	;wreg free
  5202  00331E  A0D8               	btfss	status,0,c
  5203  003320  D00B               	goto	i2l10093
  5204  003322  0101               	movlb	1	; () banked
  5205  003324  B1D4               	btfsc	efgtoa@d& (0+255),0,b
  5206  003326  D008               	goto	i2l10093
  5207                           
  5208                           ; BSR set to: 1
  5209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  5210  003328  0E00               	movlw	0
  5211  00332A                     L3:
  5212  00332A  6FE2               	movwf	efgtoa@l& (0+255),b
  5213  00332C  0E00               	movlw	0
  5214  00332E  6FE3               	movwf	(efgtoa@l+1)& (0+255),b
  5215  003330  0E00               	movlw	0
  5216  003332  6FE4               	movwf	(efgtoa@l+2)& (0+255),b
  5217  003334  0E00               	movlw	0
  5218  003336  6FE5               	movwf	(efgtoa@l+3)& (0+255),b
  5219  003338                     i2l10093:
  5220                           
  5221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  5222  003338  C1E6  F001         	movff	efgtoa@g,___fladd@b
  5223  00333C  C1E7  F002         	movff	efgtoa@g+1,___fladd@b+1
  5224  003340  C1E8  F003         	movff	efgtoa@g+2,___fladd@b+2
  5225  003344  C1E9  F004         	movff	efgtoa@g+3,___fladd@b+3
  5226  003348  C1E2  F005         	movff	efgtoa@l,___fladd@a
  5227  00334C  C1E3  F006         	movff	efgtoa@l+1,___fladd@a+1
  5228  003350  C1E4  F007         	movff	efgtoa@l+2,___fladd@a+2
  5229  003354  C1E5  F008         	movff	efgtoa@l+3,___fladd@a+3
  5230  003358  ECCE  F024         	call	___fladd	;wreg free
  5231  00335C  C001  F1DE         	movff	?___fladd,efgtoa@h
  5232  003360  C002  F1DF         	movff	?___fladd+1,efgtoa@h+1
  5233  003364  C003  F1E0         	movff	?___fladd+2,efgtoa@h+2
  5234  003368  C004  F1E1         	movff	?___fladd+3,efgtoa@h+3
  5235                           
  5236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  5237  00336C  C1BC  F1F0         	movff	efgtoa@ou,efgtoa@u
  5238  003370  C1BD  F1F1         	movff	efgtoa@ou+1,efgtoa@u+1
  5239  003374  C1BE  F1F2         	movff	efgtoa@ou+2,efgtoa@u+2
  5240  003378  C1BF  F1F3         	movff	efgtoa@ou+3,efgtoa@u+3
  5241                           
  5242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  5243  00337C  0E65               	movlw	101
  5244  00337E  0101               	movlb	1	; () banked
  5245  003380  19DA               	xorwf	efgtoa@nmode& (0+255),w,b
  5246  003382  B4D8               	btfsc	status,2,c
  5247  003384  D005               	goto	i2l10101
  5248                           
  5249                           ; BSR set to: 1
  5250  003386  C1EC  F1D2         	movff	efgtoa@e,efgtoa@ne
  5251  00338A  C1ED  F1D3         	movff	efgtoa@e+1,efgtoa@ne+1
  5252  00338E  D004               	goto	i2l367
  5253  003390                     i2l10101:
  5254                           
  5255                           ; BSR set to: 1
  5256  003390  0E00               	movlw	0
  5257  003392  6FD3               	movwf	(efgtoa@ne+1)& (0+255),b
  5258  003394  0E00               	movlw	0
  5259  003396  6FD2               	movwf	efgtoa@ne& (0+255),b
  5260  003398                     i2l367:
  5261                           
  5262                           ; BSR set to: 1
  5263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  5264  003398  0E00               	movlw	0
  5265  00339A  6FCF               	movwf	(efgtoa@pp+1)& (0+255),b
  5266  00339C  0E00               	movlw	0
  5267  00339E  6FCE               	movwf	efgtoa@pp& (0+255),b
  5268                           
  5269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  5270  0033A0  0E00               	movlw	0
  5271  0033A2  6FCD               	movwf	(efgtoa@t+1)& (0+255),b
  5272  0033A4  0E00               	movlw	0
  5273  0033A6  6FCC               	movwf	efgtoa@t& (0+255),b
  5274                           
  5275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  5276  0033A8  0E00               	movlw	0
  5277  0033AA  6FEB               	movwf	(efgtoa@i+1)& (0+255),b
  5278  0033AC  0E00               	movlw	0
  5279  0033AE  6FEA               	movwf	efgtoa@i& (0+255),b
  5280                           
  5281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5282  0033B0  D0C8               	goto	i2l10151
  5283  0033B2                     i2l10103:
  5284                           
  5285                           ; BSR set to: 1
  5286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  5287  0033B2  C1DE  F032         	movff	efgtoa@h,___fldiv@b
  5288  0033B6  C1DF  F033         	movff	efgtoa@h+1,___fldiv@b+1
  5289  0033BA  C1E0  F034         	movff	efgtoa@h+2,___fldiv@b+2
  5290  0033BE  C1E1  F035         	movff	efgtoa@h+3,___fldiv@b+3
  5291  0033C2  C1F0  F036         	movff	efgtoa@u,___fldiv@a
  5292  0033C6  C1F1  F037         	movff	efgtoa@u+1,___fldiv@a+1
  5293  0033CA  C1F2  F038         	movff	efgtoa@u+2,___fldiv@a+2
  5294  0033CE  C1F3  F039         	movff	efgtoa@u+3,___fldiv@a+3
  5295  0033D2  EC54  F026         	call	___fldiv	;wreg free
  5296  0033D6  C032  F04B         	movff	?___fldiv,floorf@x
  5297  0033DA  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  5298  0033DE  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  5299  0033E2  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  5300  0033E6  EC8E  F029         	call	_floorf	;wreg free
  5301  0033EA  C04B  F1E2         	movff	?_floorf,efgtoa@l
  5302  0033EE  C04C  F1E3         	movff	?_floorf+1,efgtoa@l+1
  5303  0033F2  C04D  F1E4         	movff	?_floorf+2,efgtoa@l+2
  5304  0033F6  C04E  F1E5         	movff	?_floorf+3,efgtoa@l+3
  5305                           
  5306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  5307  0033FA  C1E2  F0CA         	movff	efgtoa@l,___fltol@f1
  5308  0033FE  C1E3  F0CB         	movff	efgtoa@l+1,___fltol@f1+1
  5309  003402  C1E4  F0CC         	movff	efgtoa@l+2,___fltol@f1+2
  5310  003406  C1E5  F0CD         	movff	efgtoa@l+3,___fltol@f1+3
  5311  00340A  EC90  F02F         	call	___fltol	;wreg free
  5312  00340E  C0CA  F1D4         	movff	?___fltol,efgtoa@d
  5313  003412  C0CB  F1D5         	movff	?___fltol+1,efgtoa@d+1
  5314                           
  5315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5316  003416  0100               	movlb	0	; () banked
  5317  003418  B9FA               	btfsc	_flags& (0+255),4,b
  5318  00341A  D00D               	goto	i2l10115
  5319                           
  5320                           ; BSR set to: 0
  5321  00341C  0101               	movlb	1	; () banked
  5322  00341E  51D4               	movf	efgtoa@d& (0+255),w,b
  5323  003420  11D5               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5324  003422  A4D8               	btfss	status,2,c
  5325  003424  D008               	goto	i2l10115
  5326                           
  5327                           ; BSR set to: 1
  5328  003426  0E67               	movlw	103
  5329  003428  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  5330  00342A  B4D8               	btfsc	status,2,c
  5331                           
  5332                           ; BSR set to: 1
  5333  00342C  AFD3               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5334  00342E  D003               	goto	i2l10115
  5335                           
  5336                           ; BSR set to: 1
  5337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  5338  003430  4BCC               	infsnz	efgtoa@t& (0+255),f,b
  5339  003432  2BCD               	incf	(efgtoa@t+1)& (0+255),f,b
  5340                           
  5341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  5342  003434  D03A               	goto	i2l10143
  5343  003436                     i2l10115:
  5344                           
  5345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  5346  003436  0101               	movlb	1	; () banked
  5347  003438  51CE               	movf	efgtoa@pp& (0+255),w,b
  5348  00343A  11CF               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5349  00343C  B4D8               	btfsc	status,2,c
  5350                           
  5351                           ; BSR set to: 1
  5352  00343E  AFD3               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5353  003440  D022               	goto	i2l10135
  5354                           
  5355                           ; BSR set to: 1
  5356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  5357  003442  0E26               	movlw	low _dbuf
  5358  003444  25EE               	addwf	efgtoa@n& (0+255),w,b
  5359  003446  6ED9               	movwf	fsr2l,c
  5360  003448  0E02               	movlw	high _dbuf
  5361  00344A  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5362  00344C  6EDA               	movwf	fsr2h,c
  5363  00344E  0E2E               	movlw	46
  5364  003450  6EDF               	movwf	indf2,c
  5365                           
  5366                           ; BSR set to: 1
  5367  003452  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  5368  003454  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  5369                           
  5370                           ; BSR set to: 1
  5371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  5372  003456  07DB               	decf	efgtoa@w& (0+255),f,b
  5373  003458  A0D8               	btfss	status,0,c
  5374  00345A  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  5375                           
  5376                           ; BSR set to: 1
  5377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  5378  00345C  0E00               	movlw	0
  5379  00345E  6FCF               	movwf	(efgtoa@pp+1)& (0+255),b
  5380  003460  0E01               	movlw	1
  5381  003462  6FCE               	movwf	efgtoa@pp& (0+255),b
  5382  003464  D010               	goto	i2l10135
  5383  003466                     i2l10127:
  5384                           
  5385                           ; BSR set to: 1
  5386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  5387  003466  0E26               	movlw	low _dbuf
  5388  003468  25EE               	addwf	efgtoa@n& (0+255),w,b
  5389  00346A  6ED9               	movwf	fsr2l,c
  5390  00346C  0E02               	movlw	high _dbuf
  5391  00346E  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5392  003470  6EDA               	movwf	fsr2h,c
  5393  003472  0E30               	movlw	48
  5394  003474  6EDF               	movwf	indf2,c
  5395                           
  5396                           ; BSR set to: 1
  5397  003476  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  5398  003478  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  5399                           
  5400                           ; BSR set to: 1
  5401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  5402  00347A  07DB               	decf	efgtoa@w& (0+255),f,b
  5403  00347C  A0D8               	btfss	status,0,c
  5404  00347E  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  5405                           
  5406                           ; BSR set to: 1
  5407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  5408  003480  07CC               	decf	efgtoa@t& (0+255),f,b
  5409  003482  A0D8               	btfss	status,0,c
  5410  003484  07CD               	decf	(efgtoa@t+1)& (0+255),f,b
  5411  003486                     i2l10135:
  5412                           
  5413                           ; BSR set to: 1
  5414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  5415  003486  51CC               	movf	efgtoa@t& (0+255),w,b
  5416  003488  11CD               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5417  00348A  A4D8               	btfss	status,2,c
  5418  00348C  D7EC               	goto	i2l10127
  5419                           
  5420                           ; BSR set to: 1
  5421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  5422  00348E  0E26               	movlw	low _dbuf
  5423  003490  25EE               	addwf	efgtoa@n& (0+255),w,b
  5424  003492  6ED9               	movwf	fsr2l,c
  5425  003494  0E02               	movlw	high _dbuf
  5426  003496  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5427  003498  6EDA               	movwf	fsr2h,c
  5428  00349A  51D4               	movf	efgtoa@d& (0+255),w,b
  5429  00349C  0F30               	addlw	48
  5430  00349E  6EDF               	movwf	indf2,c
  5431                           
  5432                           ; BSR set to: 1
  5433  0034A0  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  5434  0034A2  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  5435                           
  5436                           ; BSR set to: 1
  5437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  5438  0034A4  07DB               	decf	efgtoa@w& (0+255),f,b
  5439  0034A6  A0D8               	btfss	status,0,c
  5440  0034A8  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  5441  0034AA                     i2l10143:
  5442                           
  5443                           ; BSR set to: 1
  5444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  5445  0034AA  C1DE  F02A         	movff	efgtoa@h,___flsub@b
  5446  0034AE  C1DF  F02B         	movff	efgtoa@h+1,___flsub@b+1
  5447  0034B2  C1E0  F02C         	movff	efgtoa@h+2,___flsub@b+2
  5448  0034B6  C1E1  F02D         	movff	efgtoa@h+3,___flsub@b+3
  5449  0034BA  C1F0  F015         	movff	efgtoa@u,___flmul@a
  5450  0034BE  C1F1  F016         	movff	efgtoa@u+1,___flmul@a+1
  5451  0034C2  C1F2  F017         	movff	efgtoa@u+2,___flmul@a+2
  5452  0034C6  C1F3  F018         	movff	efgtoa@u+3,___flmul@a+3
  5453  0034CA  C1E2  F011         	movff	efgtoa@l,___flmul@b
  5454  0034CE  C1E3  F012         	movff	efgtoa@l+1,___flmul@b+1
  5455  0034D2  C1E4  F013         	movff	efgtoa@l+2,___flmul@b+2
  5456  0034D6  C1E5  F014         	movff	efgtoa@l+3,___flmul@b+3
  5457  0034DA  EC25  F023         	call	___flmul	;wreg free
  5458  0034DE  C011  F02E         	movff	?___flmul,___flsub@a
  5459  0034E2  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  5460  0034E6  C013  F030         	movff	?___flmul+2,___flsub@a+2
  5461  0034EA  C014  F031         	movff	?___flmul+3,___flsub@a+3
  5462  0034EE  EC68  F033         	call	___flsub	;wreg free
  5463  0034F2  C02A  F1DE         	movff	?___flsub,efgtoa@h
  5464  0034F6  C02B  F1DF         	movff	?___flsub+1,efgtoa@h+1
  5465  0034FA  C02C  F1E0         	movff	?___flsub+2,efgtoa@h+2
  5466  0034FE  C02D  F1E1         	movff	?___flsub+3,efgtoa@h+3
  5467                           
  5468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  5469  003502  C1F0  F032         	movff	efgtoa@u,___fldiv@b
  5470  003506  C1F1  F033         	movff	efgtoa@u+1,___fldiv@b+1
  5471  00350A  C1F2  F034         	movff	efgtoa@u+2,___fldiv@b+2
  5472  00350E  C1F3  F035         	movff	efgtoa@u+3,___fldiv@b+3
  5473  003512  0E00               	movlw	0
  5474  003514  6E36               	movwf	___fldiv@a^0,c
  5475  003516  0E00               	movlw	0
  5476  003518  6E37               	movwf	(___fldiv@a+1)^0,c
  5477  00351A  0E20               	movlw	32
  5478  00351C  6E38               	movwf	(___fldiv@a+2)^0,c
  5479  00351E  0E41               	movlw	65
  5480  003520  6E39               	movwf	(___fldiv@a+3)^0,c
  5481  003522  EC54  F026         	call	___fldiv	;wreg free
  5482  003526  C032  F1F0         	movff	?___fldiv,efgtoa@u
  5483  00352A  C033  F1F1         	movff	?___fldiv+1,efgtoa@u+1
  5484  00352E  C034  F1F2         	movff	?___fldiv+2,efgtoa@u+2
  5485  003532  C035  F1F3         	movff	?___fldiv+3,efgtoa@u+3
  5486                           
  5487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  5488  003536  0101               	movlb	1	; () banked
  5489  003538  07D2               	decf	efgtoa@ne& (0+255),f,b
  5490  00353A  A0D8               	btfss	status,0,c
  5491  00353C  07D3               	decf	(efgtoa@ne+1)& (0+255),f,b
  5492                           
  5493                           ; BSR set to: 1
  5494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  5495  00353E  4BEA               	infsnz	efgtoa@i& (0+255),f,b
  5496  003540  2BEB               	incf	(efgtoa@i+1)& (0+255),f,b
  5497  003542                     i2l10151:
  5498                           
  5499                           ; BSR set to: 1
  5500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5501  003542  51D0               	movf	efgtoa@m& (0+255),w,b
  5502  003544  5DEA               	subwf	efgtoa@i& (0+255),w,b
  5503  003546  51EB               	movf	(efgtoa@i+1)& (0+255),w,b
  5504  003548  0A80               	xorlw	128
  5505  00354A  0100               	movlb	0	; () banked
  5506  00354C  6FD5               	movwf	??_efgtoa& (0+255),b
  5507  00354E  0101               	movlb	1	; () banked
  5508  003550  51D1               	movf	(efgtoa@m+1)& (0+255),w,b
  5509  003552  0A80               	xorlw	128
  5510  003554  0100               	movlb	0	; () banked
  5511  003556  59D5               	subwfb	??_efgtoa& (0+255),w,b
  5512  003558  B0D8               	btfsc	status,0,c
  5513  00355A  D009               	goto	i2u1319_40
  5514                           
  5515                           ; BSR set to: 0
  5516  00355C  0101               	movlb	1	; () banked
  5517  00355E  BFEF               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5518  003560  D728               	goto	i2l10103
  5519  003562  51EF               	movf	(efgtoa@n+1)& (0+255),w,b
  5520  003564  E104               	bnz	i2u1319_40
  5521  003566  0E4B               	movlw	75
  5522  003568  5DEE               	subwf	efgtoa@n& (0+255),w,b
  5523  00356A  A0D8               	btfss	status,0,c
  5524  00356C  D722               	goto	i2l10103
  5525  00356E                     i2u1319_40:
  5526                           
  5527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  5528  00356E  0101               	movlb	1	; () banked
  5529  003570  51CE               	movf	efgtoa@pp& (0+255),w,b
  5530  003572  11CF               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5531  003574  A4D8               	btfss	status,2,c
  5532  003576  D00E               	goto	i2l10163
  5533                           
  5534                           ; BSR set to: 1
  5535  003578  0100               	movlb	0	; () banked
  5536  00357A  A9FA               	btfss	_flags& (0+255),4,b
  5537  00357C  D00B               	goto	i2l10163
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  5541  00357E  0E26               	movlw	low _dbuf
  5542  003580  0101               	movlb	1	; () banked
  5543  003582  25EE               	addwf	efgtoa@n& (0+255),w,b
  5544  003584  6ED9               	movwf	fsr2l,c
  5545  003586  0E02               	movlw	high _dbuf
  5546  003588  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5547  00358A  6EDA               	movwf	fsr2h,c
  5548  00358C  0E2E               	movlw	46
  5549  00358E  6EDF               	movwf	indf2,c
  5550                           
  5551                           ; BSR set to: 1
  5552  003590  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  5553  003592  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  5554  003594                     i2l10163:
  5555                           
  5556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  5557  003594  0E26               	movlw	low _dbuf
  5558  003596  0101               	movlb	1	; () banked
  5559  003598  25EE               	addwf	efgtoa@n& (0+255),w,b
  5560  00359A  6ED9               	movwf	fsr2l,c
  5561  00359C  0E02               	movlw	high _dbuf
  5562  00359E  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5563  0035A0  6EDA               	movwf	fsr2h,c
  5564  0035A2  0E00               	movlw	0
  5565  0035A4  6EDF               	movwf	indf2,c
  5566                           
  5567                           ; BSR set to: 1
  5568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  5569  0035A6  0E65               	movlw	101
  5570  0035A8  19DA               	xorwf	efgtoa@nmode& (0+255),w,b
  5571  0035AA  A4D8               	btfss	status,2,c
  5572  0035AC  D466               	goto	i2l9975
  5573                           
  5574                           ; BSR set to: 1
  5575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  5576  0035AE  0E00               	movlw	0
  5577  0035B0  6FEB               	movwf	(efgtoa@i+1)& (0+255),b
  5578  0035B2  0E4F               	movlw	79
  5579  0035B4  6FEA               	movwf	efgtoa@i& (0+255),b
  5580                           
  5581                           ; BSR set to: 1
  5582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  5583  0035B6  0E26               	movlw	low _dbuf
  5584  0035B8  25EA               	addwf	efgtoa@i& (0+255),w,b
  5585  0035BA  6ED9               	movwf	fsr2l,c
  5586  0035BC  0E02               	movlw	high _dbuf
  5587  0035BE  21EB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5588  0035C0  6EDA               	movwf	fsr2h,c
  5589  0035C2  0E00               	movlw	0
  5590  0035C4  6EDF               	movwf	indf2,c
  5591                           
  5592                           ; BSR set to: 1
  5593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  5594  0035C6  0E00               	movlw	0
  5595  0035C8  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  5596  0035CA  0E00               	movlw	0
  5597  0035CC  6FD6               	movwf	efgtoa@sign& (0+255),b
  5598                           
  5599                           ; BSR set to: 1
  5600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  5601  0035CE  AFED               	btfss	(efgtoa@e+1)& (0+255),7,b
  5602  0035D0  D008               	goto	i2l10179
  5603                           
  5604                           ; BSR set to: 1
  5605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  5606  0035D2  0E00               	movlw	0
  5607  0035D4  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  5608  0035D6  0E01               	movlw	1
  5609  0035D8  6FD6               	movwf	efgtoa@sign& (0+255),b
  5610                           
  5611                           ; BSR set to: 1
  5612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  5613  0035DA  6DEC               	negf	efgtoa@e& (0+255),b
  5614  0035DC  1FED               	comf	(efgtoa@e+1)& (0+255),f,b
  5615  0035DE  B0D8               	btfsc	status,0,c
  5616  0035E0  2BED               	incf	(efgtoa@e+1)& (0+255),f,b
  5617  0035E2                     i2l10179:
  5618                           
  5619                           ; BSR set to: 1
  5620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  5621  0035E2  0E00               	movlw	0
  5622  0035E4  6FD9               	movwf	(efgtoa@p+1)& (0+255),b
  5623  0035E6  0E02               	movlw	2
  5624  0035E8  6FD8               	movwf	efgtoa@p& (0+255),b
  5625                           
  5626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5627  0035EA  D02B               	goto	i2l10191
  5628  0035EC                     i2l10181:
  5629                           
  5630                           ; BSR set to: 1
  5631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  5632  0035EC  07EA               	decf	efgtoa@i& (0+255),f,b
  5633  0035EE  A0D8               	btfss	status,0,c
  5634  0035F0  07EB               	decf	(efgtoa@i+1)& (0+255),f,b
  5635                           
  5636                           ; BSR set to: 1
  5637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5638  0035F2  0E26               	movlw	low _dbuf
  5639  0035F4  25EA               	addwf	efgtoa@i& (0+255),w,b
  5640  0035F6  6ED9               	movwf	fsr2l,c
  5641  0035F8  0E02               	movlw	high _dbuf
  5642  0035FA  21EB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5643  0035FC  6EDA               	movwf	fsr2h,c
  5644  0035FE  C1EC  F001         	movff	efgtoa@e,i2___awmod@dividend
  5645  003602  C1ED  F002         	movff	efgtoa@e+1,i2___awmod@dividend+1
  5646  003606  0E00               	movlw	0
  5647  003608  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5648  00360A  0E0A               	movlw	10
  5649  00360C  6E03               	movwf	i2___awmod@divisor^0,c
  5650  00360E  EC2D  F032         	call	i2___awmod	;wreg free
  5651  003612  5001               	movf	?i2___awmod^0,w,c
  5652  003614  0F30               	addlw	48
  5653  003616  6EDF               	movwf	indf2,c
  5654                           
  5655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5656  003618  C1EC  F001         	movff	efgtoa@e,___awdiv@dividend
  5657  00361C  C1ED  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5658  003620  0E00               	movlw	0
  5659  003622  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5660  003624  0E0A               	movlw	10
  5661  003626  6E03               	movwf	___awdiv@divisor^0,c
  5662  003628  EC74  F031         	call	___awdiv	;wreg free
  5663  00362C  C001  F1EC         	movff	?___awdiv,efgtoa@e
  5664  003630  C002  F1ED         	movff	?___awdiv+1,efgtoa@e+1
  5665                           
  5666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5667  003634  0101               	movlb	1	; () banked
  5668  003636  07D8               	decf	efgtoa@p& (0+255),f,b
  5669  003638  A0D8               	btfss	status,0,c
  5670  00363A  07D9               	decf	(efgtoa@p+1)& (0+255),f,b
  5671                           
  5672                           ; BSR set to: 1
  5673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5674  00363C  07DB               	decf	efgtoa@w& (0+255),f,b
  5675  00363E  A0D8               	btfss	status,0,c
  5676  003640  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  5677  003642                     i2l10191:
  5678                           
  5679                           ; BSR set to: 1
  5680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5681  003642  51EC               	movf	efgtoa@e& (0+255),w,b
  5682  003644  11ED               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5683  003646  A4D8               	btfss	status,2,c
  5684  003648  D7D1               	goto	i2l10181
  5685                           
  5686                           ; BSR set to: 1
  5687  00364A  BFD9               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5688  00364C  D005               	goto	i2u1325_40
  5689  00364E  51D9               	movf	(efgtoa@p+1)& (0+255),w,b
  5690  003650  E1CD               	bnz	i2l10181
  5691  003652  05D8               	decf	efgtoa@p& (0+255),w,b
  5692  003654  B0D8               	btfsc	status,0,c
  5693  003656  D7CA               	goto	i2l10181
  5694  003658                     i2u1325_40:
  5695                           
  5696                           ; BSR set to: 1
  5697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5698  003658  07EA               	decf	efgtoa@i& (0+255),f,b
  5699  00365A  A0D8               	btfss	status,0,c
  5700  00365C  07EB               	decf	(efgtoa@i+1)& (0+255),f,b
  5701                           
  5702                           ; BSR set to: 1
  5703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5704  00365E  51D6               	movf	efgtoa@sign& (0+255),w,b
  5705  003660  11D7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5706  003662  A4D8               	btfss	status,2,c
  5707  003664  D004               	goto	i2l10201
  5708                           
  5709                           ; BSR set to: 1
  5710  003666  0E00               	movlw	0
  5711  003668  6FC7               	movwf	(_efgtoa$986+1)& (0+255),b
  5712  00366A  0E2B               	movlw	43
  5713  00366C  D003               	goto	L4
  5714  00366E                     i2l10201:
  5715                           
  5716                           ; BSR set to: 1
  5717  00366E  0E00               	movlw	0
  5718  003670  6FC7               	movwf	(_efgtoa$986+1)& (0+255),b
  5719  003672  0E2D               	movlw	45
  5720  003674                     L4:
  5721  003674  6FC6               	movwf	_efgtoa$986& (0+255),b
  5722                           
  5723                           ; BSR set to: 1
  5724  003676  0E26               	movlw	low _dbuf
  5725  003678  25EA               	addwf	efgtoa@i& (0+255),w,b
  5726  00367A  6ED9               	movwf	fsr2l,c
  5727  00367C  0E02               	movlw	high _dbuf
  5728  00367E  21EB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5729  003680  6EDA               	movwf	fsr2h,c
  5730  003682  C1C6  FFDF         	movff	_efgtoa$986,indf2
  5731                           
  5732                           ; BSR set to: 1
  5733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  5734  003686  07DB               	decf	efgtoa@w& (0+255),f,b
  5735  003688  A0D8               	btfss	status,0,c
  5736  00368A  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  5737                           
  5738                           ; BSR set to: 1
  5739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5740  00368C  07EA               	decf	efgtoa@i& (0+255),f,b
  5741  00368E  A0D8               	btfss	status,0,c
  5742  003690  07EB               	decf	(efgtoa@i+1)& (0+255),f,b
  5743                           
  5744                           ; BSR set to: 1
  5745  003692  0EBF               	movlw	191
  5746  003694  0100               	movlb	0	; () banked
  5747  003696  6FD5               	movwf	??_efgtoa& (0+255),b
  5748  003698  0EFF               	movlw	255
  5749  00369A  6FD6               	movwf	(??_efgtoa+1)& (0+255),b
  5750  00369C  51D4               	movf	efgtoa@c& (0+255),w,b
  5751  00369E  6FD7               	movwf	(??_efgtoa+2)& (0+255),b
  5752  0036A0  6BD8               	clrf	(??_efgtoa+3)& (0+255),b
  5753  0036A2  51D5               	movf	??_efgtoa& (0+255),w,b
  5754  0036A4  27D7               	addwf	(??_efgtoa+2)& (0+255),f,b
  5755  0036A6  51D6               	movf	(??_efgtoa+1)& (0+255),w,b
  5756  0036A8  23D8               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5757  0036AA  51D8               	movf	(??_efgtoa+3)& (0+255),w,b
  5758  0036AC  E106               	bnz	i2u1327_40
  5759  0036AE  0E1A               	movlw	26
  5760  0036B0  5DD7               	subwf	(??_efgtoa+2)& (0+255),w,b
  5761  0036B2  B0D8               	btfsc	status,0,c
  5762  0036B4  D002               	goto	i2u1327_40
  5763  0036B6  0E01               	movlw	1
  5764  0036B8  D001               	goto	i2u1328_40
  5765  0036BA                     i2u1327_40:
  5766  0036BA  0E00               	movlw	0
  5767  0036BC                     i2u1328_40:
  5768  0036BC  0101               	movlb	1	; () banked
  5769  0036BE  6FCA               	movwf	_efgtoa$988& (0+255),b
  5770  0036C0  6BCB               	clrf	(_efgtoa$988+1)& (0+255),b
  5771                           
  5772                           ; BSR set to: 1
  5773  0036C2  51CA               	movf	_efgtoa$988& (0+255),w,b
  5774  0036C4  11CB               	iorwf	(_efgtoa$988+1)& (0+255),w,b
  5775  0036C6  A4D8               	btfss	status,2,c
  5776  0036C8  D004               	goto	i2l10217
  5777                           
  5778                           ; BSR set to: 1
  5779  0036CA  0E00               	movlw	0
  5780  0036CC  6FC9               	movwf	(_efgtoa$987+1)& (0+255),b
  5781  0036CE  0E65               	movlw	101
  5782  0036D0  D003               	goto	L5
  5783  0036D2                     i2l10217:
  5784                           
  5785                           ; BSR set to: 1
  5786  0036D2  0E00               	movlw	0
  5787  0036D4  6FC9               	movwf	(_efgtoa$987+1)& (0+255),b
  5788  0036D6  0E45               	movlw	69
  5789  0036D8                     L5:
  5790  0036D8  6FC8               	movwf	_efgtoa$987& (0+255),b
  5791                           
  5792                           ; BSR set to: 1
  5793  0036DA  0E26               	movlw	low _dbuf
  5794  0036DC  25EA               	addwf	efgtoa@i& (0+255),w,b
  5795  0036DE  6ED9               	movwf	fsr2l,c
  5796  0036E0  0E02               	movlw	high _dbuf
  5797  0036E2  21EB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5798  0036E4  6EDA               	movwf	fsr2h,c
  5799  0036E6  C1C8  FFDF         	movff	_efgtoa$987,indf2
  5800                           
  5801                           ; BSR set to: 1
  5802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5803  0036EA  07DB               	decf	efgtoa@w& (0+255),f,b
  5804  0036EC  A0D8               	btfss	status,0,c
  5805  0036EE  07DC               	decf	(efgtoa@w+1)& (0+255),f,b
  5806                           
  5807                           ; BSR set to: 1
  5808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5809  0036F0  0E26               	movlw	low _dbuf
  5810  0036F2  25EE               	addwf	efgtoa@n& (0+255),w,b
  5811  0036F4  6E01               	movwf	strcpy@dest^0,c
  5812  0036F6  0E02               	movlw	high _dbuf
  5813  0036F8  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5814  0036FA  6E02               	movwf	(strcpy@dest+1)^0,c
  5815  0036FC  0E26               	movlw	low _dbuf
  5816  0036FE  25EA               	addwf	efgtoa@i& (0+255),w,b
  5817  003700  6E03               	movwf	strcpy@src^0,c
  5818  003702  0E02               	movlw	high _dbuf
  5819  003704  21EB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5820  003706  6E04               	movwf	(strcpy@src+1)^0,c
  5821  003708  ECF4  F032         	call	_strcpy	;wreg free
  5822  00370C  EF3D  F017         	goto	i2l9975
  5823  003710                     __end_of_efgtoa:
  5824                           	opt callstack 0
  5825                           
  5826 ;; *************** function i2___awmod *****************
  5827 ;; Defined at:
  5828 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  dividend        2    0[COMRAM] int 
  5831 ;;  divisor         2    2[COMRAM] int 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  __awmod         1    5[COMRAM] unsigned char 
  5834 ;;  __awmod         1    4[COMRAM] unsigned char 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  2    0[COMRAM] int 
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5844 ;;      Params:         4       0       0       0       0       0       0
  5845 ;;      Locals:         2       0       0       0       0       0       0
  5846 ;;      Temps:          0       0       0       0       0       0       0
  5847 ;;      Totals:         6       0       0       0       0       0       0
  5848 ;;Total ram usage:        6 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; This function calls:
  5851 ;;		Nothing
  5852 ;; This function is called by:
  5853 ;;		_efgtoa
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text22
  5858  00645A                     __ptext22:
  5859                           	opt callstack 0
  5860  00645A                     i2___awmod:
  5861                           	opt callstack 18
  5862                           
  5863                           ;incstack = 0
  5864  00645A  0E00               	movlw	0
  5865  00645C  6E06               	movwf	i2___awmod@sign^0,c
  5866  00645E  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  5867  006460  D006               	goto	i2l9357
  5868  006462  6C01               	negf	i2___awmod@dividend^0,c
  5869  006464  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5870  006466  B0D8               	btfsc	status,0,c
  5871  006468  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5872  00646A  0E01               	movlw	1
  5873  00646C  6E06               	movwf	i2___awmod@sign^0,c
  5874  00646E                     i2l9357:
  5875  00646E  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5876  006470  D004               	goto	i2l9361
  5877  006472  6C03               	negf	i2___awmod@divisor^0,c
  5878  006474  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  5879  006476  B0D8               	btfsc	status,0,c
  5880  006478  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  5881  00647A                     i2l9361:
  5882  00647A  5003               	movf	i2___awmod@divisor^0,w,c
  5883  00647C  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  5884  00647E  B4D8               	btfsc	status,2,c
  5885  006480  D018               	goto	i2l9377
  5886  006482  0E01               	movlw	1
  5887  006484  6E05               	movwf	i2___awmod@counter^0,c
  5888  006486  D004               	goto	i2l9367
  5889  006488                     i2l9365:
  5890  006488  90D8               	bcf	status,0,c
  5891  00648A  3603               	rlcf	i2___awmod@divisor^0,f,c
  5892  00648C  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  5893  00648E  2A05               	incf	i2___awmod@counter^0,f,c
  5894  006490                     i2l9367:
  5895  006490  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5896  006492  D7FA               	goto	i2l9365
  5897  006494                     i2u1209_40:
  5898  006494  5003               	movf	i2___awmod@divisor^0,w,c
  5899  006496  5C01               	subwf	i2___awmod@dividend^0,w,c
  5900  006498  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5901  00649A  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  5902  00649C  A0D8               	btfss	status,0,c
  5903  00649E  D004               	goto	i2l9373
  5904  0064A0  5003               	movf	i2___awmod@divisor^0,w,c
  5905  0064A2  5E01               	subwf	i2___awmod@dividend^0,f,c
  5906  0064A4  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5907  0064A6  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  5908  0064A8                     i2l9373:
  5909  0064A8  90D8               	bcf	status,0,c
  5910  0064AA  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  5911  0064AC  3203               	rrcf	i2___awmod@divisor^0,f,c
  5912  0064AE  2E05               	decfsz	i2___awmod@counter^0,f,c
  5913  0064B0  D7F1               	goto	i2u1209_40
  5914  0064B2                     i2l9377:
  5915  0064B2  5006               	movf	i2___awmod@sign^0,w,c
  5916  0064B4  B4D8               	btfsc	status,2,c
  5917  0064B6  D004               	goto	i2l9381
  5918  0064B8  6C01               	negf	i2___awmod@dividend^0,c
  5919  0064BA  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5920  0064BC  B0D8               	btfsc	status,0,c
  5921  0064BE  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5922  0064C0                     i2l9381:
  5923  0064C0  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  5924  0064C4  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  5925  0064C8  0012               	return		;funcret
  5926  0064CA                     __end_ofi2___awmod:
  5927                           	opt callstack 0
  5928                           
  5929 ;; *************** function _tolower *****************
  5930 ;; Defined at:
  5931 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  c               2    6[COMRAM] int 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;		None
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  2    6[COMRAM] int 
  5938 ;; Registers used:
  5939 ;;		wreg, status,2, status,0
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5945 ;;      Params:         2       0       0       0       0       0       0
  5946 ;;      Locals:         2       0       0       0       0       0       0
  5947 ;;      Temps:          4       0       0       0       0       0       0
  5948 ;;      Totals:         8       0       0       0       0       0       0
  5949 ;;Total ram usage:        8 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    1
  5952 ;; This function calls:
  5953 ;;		_isupper
  5954 ;; This function is called by:
  5955 ;;		_efgtoa
  5956 ;;		_vfpfcnvrt
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text23
  5961  00663A                     __ptext23:
  5962                           	opt callstack 0
  5963  00663A                     _tolower:
  5964                           	opt callstack 18
  5965                           
  5966                           ;incstack = 0
  5967  00663A  0EBF               	movlw	191
  5968  00663C  6E09               	movwf	??_tolower^0,c
  5969  00663E  0EFF               	movlw	255
  5970  006640  6E0A               	movwf	(??_tolower+1)^0,c
  5971  006642  C007  F00B         	movff	tolower@c,??_tolower+2
  5972  006646  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5973  00664A  5009               	movf	??_tolower^0,w,c
  5974  00664C  260B               	addwf	(??_tolower+2)^0,f,c
  5975  00664E  500A               	movf	(??_tolower+1)^0,w,c
  5976  006650  220C               	addwfc	(??_tolower+3)^0,f,c
  5977  006652  500C               	movf	(??_tolower+3)^0,w,c
  5978  006654  E106               	bnz	i2u1128_40
  5979  006656  0E1A               	movlw	26
  5980  006658  5C0B               	subwf	(??_tolower+2)^0,w,c
  5981  00665A  B0D8               	btfsc	status,0,c
  5982  00665C  D002               	goto	i2u1128_40
  5983  00665E  0E01               	movlw	1
  5984  006660  D001               	goto	i2u1129_40
  5985  006662                     i2u1128_40:
  5986  006662  0E00               	movlw	0
  5987  006664                     i2u1129_40:
  5988  006664  6E0D               	movwf	_tolower$1758^0,c
  5989  006666  6A0E               	clrf	(_tolower$1758+1)^0,c
  5990  006668  500D               	movf	_tolower$1758^0,w,c
  5991  00666A  100E               	iorwf	(_tolower$1758+1)^0,w,c
  5992  00666C  B4D8               	btfsc	status,2,c
  5993  00666E  D006               	goto	i2l1513
  5994  006670  0E20               	movlw	32
  5995  006672  1007               	iorwf	tolower@c^0,w,c
  5996  006674  6E07               	movwf	?_tolower^0,c
  5997  006676  5008               	movf	(tolower@c+1)^0,w,c
  5998  006678  6E08               	movwf	(?_tolower+1)^0,c
  5999  00667A  0012               	return	
  6000  00667C                     i2l1513:
  6001  00667C  C007  F007         	movff	tolower@c,?_tolower
  6002  006680  C008  F008         	movff	tolower@c+1,?_tolower+1
  6003  006684  0012               	return		;funcret
  6004  006686                     __end_of_tolower:
  6005                           	opt callstack 0
  6006                           
  6007 ;; *************** function _isupper *****************
  6008 ;; Defined at:
  6009 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  c               2    0[COMRAM] int 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  2    0[COMRAM] int 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2, status,0
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6023 ;;      Params:         2       0       0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0
  6025 ;;      Temps:          4       0       0       0       0       0       0
  6026 ;;      Totals:         6       0       0       0       0       0       0
  6027 ;;Total ram usage:        6 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; This function calls:
  6030 ;;		Nothing
  6031 ;; This function is called by:
  6032 ;;		_efgtoa
  6033 ;;		_vfpfcnvrt
  6034 ;;		_tolower
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text24
  6039  00689A                     __ptext24:
  6040                           	opt callstack 0
  6041  00689A                     _isupper:
  6042                           	opt callstack 18
  6043                           
  6044                           ;incstack = 0
  6045  00689A  0EBF               	movlw	191
  6046  00689C  6E03               	movwf	??_isupper^0,c
  6047  00689E  0EFF               	movlw	255
  6048  0068A0  6E04               	movwf	(??_isupper+1)^0,c
  6049  0068A2  C001  F005         	movff	isupper@c,??_isupper+2
  6050  0068A6  C002  F006         	movff	isupper@c+1,??_isupper+3
  6051  0068AA  5003               	movf	??_isupper^0,w,c
  6052  0068AC  2605               	addwf	(??_isupper+2)^0,f,c
  6053  0068AE  5004               	movf	(??_isupper+1)^0,w,c
  6054  0068B0  2206               	addwfc	(??_isupper+3)^0,f,c
  6055  0068B2  5006               	movf	(??_isupper+3)^0,w,c
  6056  0068B4  E106               	bnz	i2u1050_40
  6057  0068B6  0E1A               	movlw	26
  6058  0068B8  5C05               	subwf	(??_isupper+2)^0,w,c
  6059  0068BA  B0D8               	btfsc	status,0,c
  6060  0068BC  D002               	goto	i2u1050_40
  6061  0068BE  0E01               	movlw	1
  6062  0068C0  D001               	goto	i2u1051_40
  6063  0068C2                     i2u1050_40:
  6064  0068C2  0E00               	movlw	0
  6065  0068C4                     i2u1051_40:
  6066  0068C4  6E01               	movwf	?_isupper^0,c
  6067  0068C6  6A02               	clrf	(?_isupper+1)^0,c
  6068  0068C8  0012               	return		;funcret
  6069  0068CA                     __end_of_isupper:
  6070                           	opt callstack 0
  6071                           
  6072 ;; *************** function _strcpy *****************
  6073 ;; Defined at:
  6074 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6077 ;;		 -> dbuf(80), 
  6078 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6079 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  6080 ;;		 -> dbuf(80), 
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;  d               2    8[COMRAM] PTR unsigned char 
  6083 ;;		 -> dbuf(80), 
  6084 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6085 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  6086 ;;		 -> dbuf(80), 
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  2    0[COMRAM] PTR unsigned char 
  6089 ;; Registers used:
  6090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6096 ;;      Params:         4       0       0       0       0       0       0
  6097 ;;      Locals:         4       0       0       0       0       0       0
  6098 ;;      Temps:          2       0       0       0       0       0       0
  6099 ;;      Totals:        10       0       0       0       0       0       0
  6100 ;;Total ram usage:       10 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; This function calls:
  6103 ;;		Nothing
  6104 ;; This function is called by:
  6105 ;;		_efgtoa
  6106 ;; This function uses a non-reentrant model
  6107 ;;
  6108                           
  6109                           	psect	text25
  6110  0065E8                     __ptext25:
  6111                           	opt callstack 0
  6112  0065E8                     _strcpy:
  6113                           	opt callstack 18
  6114                           
  6115                           ;incstack = 0
  6116  0065E8  C003  F007         	movff	strcpy@src,strcpy@s
  6117  0065EC  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6118  0065F0  C001  F009         	movff	strcpy@dest,strcpy@d
  6119  0065F4  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6120  0065F8                     i2l8913:
  6121  0065F8  5007               	movf	strcpy@s^0,w,c
  6122  0065FA  6E05               	movwf	??_strcpy^0,c
  6123  0065FC  5008               	movf	(strcpy@s+1)^0,w,c
  6124  0065FE  6E06               	movwf	(??_strcpy+1)^0,c
  6125  006600  4A07               	infsnz	strcpy@s^0,f,c
  6126  006602  2A08               	incf	(strcpy@s+1)^0,f,c
  6127  006604  C005  FFF6         	movff	??_strcpy,tblptrl
  6128  006608  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6129  00660C  6AF8               	clrf	tblptru,c
  6130  00660E  C009  FFD9         	movff	strcpy@d,fsr2l
  6131  006612  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6132  006616  4A09               	infsnz	strcpy@d^0,f,c
  6133  006618  2A0A               	incf	(strcpy@d+1)^0,f,c
  6134  00661A  0E05               	movlw	(high __ramtop+-1)
  6135  00661C  64F7               	cpfsgt	tblptrh,c
  6136  00661E  D003               	bra	i2u1126_47
  6137  006620  0008               	tblrd		*
  6138  006622  50F5               	movf	tablat,w,c
  6139  006624  D005               	bra	i2u1126_40
  6140  006626                     i2u1126_47:
  6141  006626  CFF6 FFE1          	movff	tblptrl,fsr1l
  6142  00662A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6143  00662E  50E7               	movf	indf1,w,c
  6144  006630                     i2u1126_40:
  6145  006630  6EDF               	movwf	indf2,c
  6146  006632  50DF               	movf	indf2,w,c
  6147  006634  B4D8               	btfsc	status,2,c
  6148  006636  0012               	return	
  6149  006638  D7DF               	goto	i2l8913
  6150  00663A                     __end_of_strcpy:
  6151                           	opt callstack 0
  6152                           
  6153 ;; *************** function _pad *****************
  6154 ;; Defined at:
  6155 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6158 ;;		 -> sprintf@f(6), 
  6159 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6160 ;;		 -> dbuf(80), 
  6161 ;;  p               2   20[COMRAM] int 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  w               2   25[COMRAM] int 
  6164 ;;  i               2   23[COMRAM] int 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  2   16[COMRAM] int 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6174 ;;      Params:         6       0       0       0       0       0       0
  6175 ;;      Locals:         4       0       0       0       0       0       0
  6176 ;;      Temps:          1       0       0       0       0       0       0
  6177 ;;      Totals:        11       0       0       0       0       0       0
  6178 ;;Total ram usage:       11 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    3
  6181 ;; This function calls:
  6182 ;;		_fputc
  6183 ;;		_fputs
  6184 ;;		_strlen
  6185 ;; This function is called by:
  6186 ;;		_efgtoa
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text26
  6191  0061C4                     __ptext26:
  6192                           	opt callstack 0
  6193  0061C4                     _pad:
  6194                           	opt callstack 15
  6195                           
  6196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6197                           
  6198                           ;incstack = 0
  6199  0061C4  0100               	movlb	0	; () banked
  6200  0061C6  A1FA               	btfss	_flags& (0+255),0,b
  6201  0061C8  D00A               	goto	i2l8871
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6205  0061CA  C013  F00A         	movff	pad@buf,fputs@s
  6206  0061CE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6207  0061D2  C011  F00C         	movff	pad@fp,fputs@fp
  6208  0061D6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6209  0061DA  ECCB  F033         	call	_fputs	;wreg free
  6210  0061DE                     i2l8871:
  6211                           
  6212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6213  0061DE  BE16               	btfsc	(pad@p+1)^0,7,c
  6214  0061E0  D005               	goto	i2l8875
  6215  0061E2  C015  F01A         	movff	pad@p,pad@w
  6216  0061E6  C016  F01B         	movff	pad@p+1,pad@w+1
  6217  0061EA  D004               	goto	i2l300
  6218  0061EC                     i2l8875:
  6219  0061EC  0E00               	movlw	0
  6220  0061EE  6E1B               	movwf	(pad@w+1)^0,c
  6221  0061F0  0E00               	movlw	0
  6222  0061F2  6E1A               	movwf	pad@w^0,c
  6223  0061F4                     i2l300:
  6224                           
  6225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6226  0061F4  0E00               	movlw	0
  6227  0061F6  6E19               	movwf	(pad@i+1)^0,c
  6228  0061F8  0E00               	movlw	0
  6229  0061FA  6E18               	movwf	pad@i^0,c
  6230                           
  6231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6232  0061FC  D00C               	goto	i2l8881
  6233  0061FE                     i2l8877:
  6234                           
  6235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6236  0061FE  0E00               	movlw	0
  6237  006200  6E02               	movwf	(fputc@c+1)^0,c
  6238  006202  0E20               	movlw	32
  6239  006204  6E01               	movwf	fputc@c^0,c
  6240  006206  C011  F003         	movff	pad@fp,fputc@fp
  6241  00620A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6242  00620E  EC92  F030         	call	_fputc	;wreg free
  6243                           
  6244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6245  006212  4A18               	infsnz	pad@i^0,f,c
  6246  006214  2A19               	incf	(pad@i+1)^0,f,c
  6247  006216                     i2l8881:
  6248                           
  6249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6250  006216  501A               	movf	pad@w^0,w,c
  6251  006218  5C18               	subwf	pad@i^0,w,c
  6252  00621A  5019               	movf	(pad@i+1)^0,w,c
  6253  00621C  0A80               	xorlw	128
  6254  00621E  6E17               	movwf	??_pad^0,c
  6255  006220  501B               	movf	(pad@w+1)^0,w,c
  6256  006222  0A80               	xorlw	128
  6257  006224  5817               	subwfb	??_pad^0,w,c
  6258  006226  A0D8               	btfss	status,0,c
  6259  006228  D7EA               	goto	i2l8877
  6260                           
  6261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6262  00622A  0100               	movlb	0	; () banked
  6263  00622C  B1FA               	btfsc	_flags& (0+255),0,b
  6264  00622E  D00A               	goto	i2l8885
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6268  006230  C013  F00A         	movff	pad@buf,fputs@s
  6269  006234  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6270  006238  C011  F00C         	movff	pad@fp,fputs@fp
  6271  00623C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6272  006240  ECCB  F033         	call	_fputs	;wreg free
  6273  006244                     i2l8885:
  6274                           
  6275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6276  006244  C013  F001         	movff	pad@buf,strlen@s
  6277  006248  C014  F002         	movff	pad@buf+1,strlen@s+1
  6278  00624C  EC94  F034         	call	_strlen	;wreg free
  6279  006250  501A               	movf	pad@w^0,w,c
  6280  006252  2401               	addwf	?_strlen^0,w,c
  6281  006254  6E11               	movwf	?_pad^0,c
  6282  006256  501B               	movf	(pad@w+1)^0,w,c
  6283  006258  2002               	addwfc	(?_strlen+1)^0,w,c
  6284  00625A  6E12               	movwf	(?_pad+1)^0,c
  6285  00625C  0012               	return		;funcret
  6286  00625E                     __end_of_pad:
  6287                           	opt callstack 0
  6288                           
  6289 ;; *************** function _strlen *****************
  6290 ;; Defined at:
  6291 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6294 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), r(100), 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6297 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), r(100), 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  2    0[COMRAM] unsigned int 
  6300 ;; Registers used:
  6301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6307 ;;      Params:         2       0       0       0       0       0       0
  6308 ;;      Locals:         2       0       0       0       0       0       0
  6309 ;;      Temps:          0       0       0       0       0       0       0
  6310 ;;      Totals:         4       0       0       0       0       0       0
  6311 ;;Total ram usage:        4 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_pad
  6317 ;;		_stoa
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text27
  6322  006928                     __ptext27:
  6323                           	opt callstack 0
  6324  006928                     _strlen:
  6325                           	opt callstack 18
  6326                           
  6327                           ;incstack = 0
  6328  006928  C001  F003         	movff	strlen@s,strlen@a
  6329  00692C  C002  F004         	movff	strlen@s+1,strlen@a+1
  6330  006930  D002               	goto	i2l8503
  6331  006932                     i2l8501:
  6332  006932  4A01               	infsnz	strlen@s^0,f,c
  6333  006934  2A02               	incf	(strlen@s+1)^0,f,c
  6334  006936                     i2l8503:
  6335  006936  C001  FFD9         	movff	strlen@s,fsr2l
  6336  00693A  C002  FFDA         	movff	strlen@s+1,fsr2h
  6337  00693E  50DF               	movf	indf2,w,c
  6338  006940  A4D8               	btfss	status,2,c
  6339  006942  D7F7               	goto	i2l8501
  6340  006944  5003               	movf	strlen@a^0,w,c
  6341  006946  5C01               	subwf	strlen@s^0,w,c
  6342  006948  6E01               	movwf	?_strlen^0,c
  6343  00694A  5004               	movf	(strlen@a+1)^0,w,c
  6344  00694C  5802               	subwfb	(strlen@s+1)^0,w,c
  6345  00694E  6E02               	movwf	(?_strlen+1)^0,c
  6346  006950  0012               	return		;funcret
  6347  006952                     __end_of_strlen:
  6348                           	opt callstack 0
  6349                           
  6350 ;; *************** function _fputs *****************
  6351 ;; Defined at:
  6352 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6355 ;;		 -> dbuf(80), 
  6356 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6357 ;;		 -> sprintf@f(6), 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  i               2   14[COMRAM] int 
  6360 ;;  c               1   13[COMRAM] unsigned char 
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  2    9[COMRAM] int 
  6363 ;; Registers used:
  6364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6370 ;;      Params:         4       0       0       0       0       0       0
  6371 ;;      Locals:         3       0       0       0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0       0       0
  6373 ;;      Totals:         7       0       0       0       0       0       0
  6374 ;;Total ram usage:        7 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    2
  6377 ;; This function calls:
  6378 ;;		_fputc
  6379 ;; This function is called by:
  6380 ;;		_pad
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text28
  6385  006796                     __ptext28:
  6386                           	opt callstack 0
  6387  006796                     _fputs:
  6388                           	opt callstack 15
  6389                           
  6390                           ;incstack = 0
  6391  006796  0E00               	movlw	0
  6392  006798  6E10               	movwf	(fputs@i+1)^0,c
  6393  00679A  0E00               	movlw	0
  6394  00679C  6E0F               	movwf	fputs@i^0,c
  6395  00679E  D00B               	goto	i2l8497
  6396  0067A0                     i2l8493:
  6397  0067A0  C00E  F001         	movff	fputs@c,fputc@c
  6398  0067A4  6A02               	clrf	(fputc@c+1)^0,c
  6399  0067A6  C00C  F003         	movff	fputs@fp,fputc@fp
  6400  0067AA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6401  0067AE  EC92  F030         	call	_fputc	;wreg free
  6402  0067B2  4A0F               	infsnz	fputs@i^0,f,c
  6403  0067B4  2A10               	incf	(fputs@i+1)^0,f,c
  6404  0067B6                     i2l8497:
  6405  0067B6  500F               	movf	fputs@i^0,w,c
  6406  0067B8  240A               	addwf	fputs@s^0,w,c
  6407  0067BA  6ED9               	movwf	fsr2l,c
  6408  0067BC  5010               	movf	(fputs@i+1)^0,w,c
  6409  0067BE  200B               	addwfc	(fputs@s+1)^0,w,c
  6410  0067C0  6EDA               	movwf	fsr2h,c
  6411  0067C2  50DF               	movf	indf2,w,c
  6412  0067C4  6E0E               	movwf	fputs@c^0,c
  6413  0067C6  500E               	movf	fputs@c^0,w,c
  6414  0067C8  B4D8               	btfsc	status,2,c
  6415  0067CA  0012               	return	
  6416  0067CC  D7E9               	goto	i2l8493
  6417  0067CE                     __end_of_fputs:
  6418                           	opt callstack 0
  6419                           
  6420 ;; *************** function _fputc *****************
  6421 ;; Defined at:
  6422 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  c               2    0[COMRAM] int 
  6425 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6426 ;;		 -> sprintf@f(6), 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;		None
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  2    0[COMRAM] int 
  6431 ;; Registers used:
  6432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6438 ;;      Params:         4       0       0       0       0       0       0
  6439 ;;      Locals:         0       0       0       0       0       0       0
  6440 ;;      Temps:          5       0       0       0       0       0       0
  6441 ;;      Totals:         9       0       0       0       0       0       0
  6442 ;;Total ram usage:        9 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    1
  6445 ;; This function calls:
  6446 ;;		_putch
  6447 ;; This function is called by:
  6448 ;;		_pad
  6449 ;;		_stoa
  6450 ;;		_vfpfcnvrt
  6451 ;;		_fputs
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text29
  6456  006124                     __ptext29:
  6457                           	opt callstack 0
  6458  006124                     _fputc:
  6459                           	opt callstack 17
  6460                           
  6461                           ;incstack = 0
  6462  006124  5003               	movf	fputc@fp^0,w,c
  6463  006126  1004               	iorwf	(fputc@fp+1)^0,w,c
  6464  006128  B4D8               	btfsc	status,2,c
  6465  00612A  D004               	goto	i2u1045_40
  6466  00612C  5003               	movf	fputc@fp^0,w,c
  6467  00612E  1004               	iorwf	(fputc@fp+1)^0,w,c
  6468  006130  A4D8               	btfss	status,2,c
  6469  006132  D004               	goto	i2l8483
  6470  006134                     i2u1045_40:
  6471  006134  5001               	movf	fputc@c^0,w,c
  6472  006136  EC0B  F035         	call	_putch
  6473  00613A  0012               	return	
  6474  00613C                     i2l8483:
  6475  00613C  EE20 F004          	lfsr	2,4
  6476  006140  5003               	movf	fputc@fp^0,w,c
  6477  006142  26D9               	addwf	fsr2l,f,c
  6478  006144  5004               	movf	(fputc@fp+1)^0,w,c
  6479  006146  22DA               	addwfc	fsr2h,f,c
  6480  006148  50DE               	movf	postinc2,w,c
  6481  00614A  10DE               	iorwf	postinc2,w,c
  6482  00614C  B4D8               	btfsc	status,2,c
  6483  00614E  D016               	goto	i2u1047_40
  6484  006150  EE20 F004          	lfsr	2,4
  6485  006154  5003               	movf	fputc@fp^0,w,c
  6486  006156  26D9               	addwf	fsr2l,f,c
  6487  006158  5004               	movf	(fputc@fp+1)^0,w,c
  6488  00615A  22DA               	addwfc	fsr2h,f,c
  6489  00615C  EE10 F002          	lfsr	1,2
  6490  006160  5003               	movf	fputc@fp^0,w,c
  6491  006162  26E1               	addwf	fsr1l,f,c
  6492  006164  5004               	movf	(fputc@fp+1)^0,w,c
  6493  006166  22E2               	addwfc	fsr1h,f,c
  6494  006168  50DE               	movf	postinc2,w,c
  6495  00616A  5CE6               	subwf	postinc1,w,c
  6496  00616C  50E6               	movf	postinc1,w,c
  6497  00616E  0A80               	xorlw	128
  6498  006170  6E09               	movwf	(??_fputc+4)^0,c
  6499  006172  50DE               	movf	postinc2,w,c
  6500  006174  0A80               	xorlw	128
  6501  006176  5809               	subwfb	(??_fputc+4)^0,w,c
  6502  006178  B0D8               	btfsc	status,0,c
  6503  00617A  0012               	return	
  6504  00617C                     i2u1047_40:
  6505  00617C  EE20 F002          	lfsr	2,2
  6506  006180  5003               	movf	fputc@fp^0,w,c
  6507  006182  26D9               	addwf	fsr2l,f,c
  6508  006184  5004               	movf	(fputc@fp+1)^0,w,c
  6509  006186  22DA               	addwfc	fsr2h,f,c
  6510  006188  CFDE F005          	movff	postinc2,??_fputc
  6511  00618C  CFDD F006          	movff	postdec2,??_fputc+1
  6512  006190  C003  FFD9         	movff	fputc@fp,fsr2l
  6513  006194  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6514  006198  CFDE F007          	movff	postinc2,??_fputc+2
  6515  00619C  CFDD F008          	movff	postdec2,??_fputc+3
  6516  0061A0  5005               	movf	??_fputc^0,w,c
  6517  0061A2  2407               	addwf	(??_fputc+2)^0,w,c
  6518  0061A4  6ED9               	movwf	fsr2l,c
  6519  0061A6  5006               	movf	(??_fputc+1)^0,w,c
  6520  0061A8  2008               	addwfc	(??_fputc+3)^0,w,c
  6521  0061AA  6EDA               	movwf	fsr2h,c
  6522  0061AC  C001  FFDF         	movff	fputc@c,indf2
  6523  0061B0  EE20 F002          	lfsr	2,2
  6524  0061B4  5003               	movf	fputc@fp^0,w,c
  6525  0061B6  26D9               	addwf	fsr2l,f,c
  6526  0061B8  5004               	movf	(fputc@fp+1)^0,w,c
  6527  0061BA  22DA               	addwfc	fsr2h,f,c
  6528  0061BC  2ADE               	incf	postinc2,f,c
  6529  0061BE  0E00               	movlw	0
  6530  0061C0  22DD               	addwfc	postdec2,f,c
  6531  0061C2  0012               	return		;funcret
  6532  0061C4                     __end_of_fputc:
  6533                           	opt callstack 0
  6534                           
  6535 ;; *************** function _putch *****************
  6536 ;; Defined at:
  6537 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  c               1    wreg     unsigned char 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  c               1    0[COMRAM] unsigned char 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      void 
  6544 ;; Registers used:
  6545 ;;		wreg
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6551 ;;      Params:         0       0       0       0       0       0       0
  6552 ;;      Locals:         0       0       0       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0       0       0
  6554 ;;      Totals:         0       0       0       0       0       0       0
  6555 ;;Total ram usage:        0 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; This function calls:
  6558 ;;		Nothing
  6559 ;; This function is called by:
  6560 ;;		_fputc
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           	psect	text30
  6565  006A16                     __ptext30:
  6566                           	opt callstack 0
  6567  006A16                     _putch:
  6568                           	opt callstack 17
  6569                           
  6570                           ;incstack = 0
  6571  006A16  0012               	return		;funcret
  6572  006A18                     __end_of_putch:
  6573                           	opt callstack 0
  6574                           
  6575 ;; *************** function _floorf *****************
  6576 ;; Defined at:
  6577 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  x               4   74[COMRAM] float 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;  u               4   90[COMRAM] struct .
  6582 ;;  m               4   84[COMRAM] unsigned long 
  6583 ;;  e               2   88[COMRAM] int 
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  4   74[COMRAM] float 
  6586 ;; Registers used:
  6587 ;;		wreg, status,2, status,0
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6593 ;;      Params:         4       0       0       0       0       0       0
  6594 ;;      Locals:        10       0       0       0       0       0       0
  6595 ;;      Temps:          6       0       0       0       0       0       0
  6596 ;;      Totals:        20       0       0       0       0       0       0
  6597 ;;Total ram usage:       20 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; This function calls:
  6600 ;;		Nothing
  6601 ;; This function is called by:
  6602 ;;		_efgtoa
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text31
  6607  00531C                     __ptext31:
  6608                           	opt callstack 0
  6609  00531C                     _floorf:
  6610                           	opt callstack 18
  6611                           
  6612                           ;incstack = 0
  6613  00531C  C208  F05B         	movff	floorf@F524,floorf@u
  6614  005320  C209  F05C         	movff	floorf@F524+1,floorf@u+1
  6615  005324  C20A  F05D         	movff	floorf@F524+2,floorf@u+2
  6616  005328  C20B  F05E         	movff	floorf@F524+3,floorf@u+3
  6617  00532C  C04B  F05B         	movff	floorf@x,floorf@u
  6618  005330  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  6619  005334  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  6620  005338  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  6621  00533C  0E81               	movlw	129
  6622  00533E  6E4F               	movwf	??_floorf^0,c
  6623  005340  0EFF               	movlw	255
  6624  005342  6E50               	movwf	(??_floorf+1)^0,c
  6625  005344  C05B  F051         	movff	floorf@u,??_floorf+2
  6626  005348  C05C  F052         	movff	floorf@u+1,??_floorf+3
  6627  00534C  C05D  F053         	movff	floorf@u+2,??_floorf+4
  6628  005350  C05E  F054         	movff	floorf@u+3,??_floorf+5
  6629  005354  0E18               	movlw	24
  6630  005356  D005               	goto	i2u1131_40
  6631  005358                     i2u1131_45:
  6632  005358  90D8               	bcf	status,0,c
  6633  00535A  3254               	rrcf	(??_floorf+5)^0,f,c
  6634  00535C  3253               	rrcf	(??_floorf+4)^0,f,c
  6635  00535E  3252               	rrcf	(??_floorf+3)^0,f,c
  6636  005360  3251               	rrcf	(??_floorf+2)^0,f,c
  6637  005362                     i2u1131_40:
  6638  005362  2EE8               	decfsz	wreg,f,c
  6639  005364  D7F9               	goto	i2u1131_45
  6640  005366  5051               	movf	(??_floorf+2)^0,w,c
  6641  005368  244F               	addwf	??_floorf^0,w,c
  6642  00536A  6E59               	movwf	floorf@e^0,c
  6643  00536C  0E00               	movlw	0
  6644  00536E  2050               	addwfc	(??_floorf+1)^0,w,c
  6645  005370  6E5A               	movwf	(floorf@e+1)^0,c
  6646  005372  BE5A               	btfsc	(floorf@e+1)^0,7,c
  6647  005374  D00F               	goto	i2l8931
  6648  005376  505A               	movf	(floorf@e+1)^0,w,c
  6649  005378  E104               	bnz	i2u1132_40
  6650  00537A  0E17               	movlw	23
  6651  00537C  5C59               	subwf	floorf@e^0,w,c
  6652  00537E  A0D8               	btfss	status,0,c
  6653  005380  D009               	goto	i2l8931
  6654  005382                     i2u1132_40:
  6655  005382  C04B  F04B         	movff	floorf@x,?_floorf
  6656  005386  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  6657  00538A  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  6658  00538E  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  6659  005392  0012               	return	
  6660  005394                     i2l8931:
  6661  005394  BE5A               	btfsc	(floorf@e+1)^0,7,c
  6662  005396  D05E               	goto	i2l8941
  6663  005398  C059  F04F         	movff	floorf@e,??_floorf
  6664  00539C  0EFF               	movlw	255
  6665  00539E  6E50               	movwf	(??_floorf+1)^0,c
  6666  0053A0  0EFF               	movlw	255
  6667  0053A2  6E51               	movwf	(??_floorf+2)^0,c
  6668  0053A4  0E7F               	movlw	127
  6669  0053A6  6E52               	movwf	(??_floorf+3)^0,c
  6670  0053A8  0E00               	movlw	0
  6671  0053AA  6E53               	movwf	(??_floorf+4)^0,c
  6672  0053AC                     i2u1134_45:
  6673  0053AC  664F               	tstfsz	??_floorf^0,c
  6674  0053AE  D001               	goto	i2u1134_46
  6675  0053B0  D007               	goto	i2u1134_47
  6676  0053B2                     i2u1134_46:
  6677  0053B2  3453               	rlcf	(??_floorf+4)^0,w,c
  6678  0053B4  3253               	rrcf	(??_floorf+4)^0,f,c
  6679  0053B6  3252               	rrcf	(??_floorf+3)^0,f,c
  6680  0053B8  3251               	rrcf	(??_floorf+2)^0,f,c
  6681  0053BA  3250               	rrcf	(??_floorf+1)^0,f,c
  6682  0053BC  2E4F               	decfsz	??_floorf^0,f,c
  6683  0053BE  D7F6               	goto	i2u1134_45
  6684  0053C0                     i2u1134_47:
  6685  0053C0  C050  F055         	movff	??_floorf+1,floorf@m
  6686  0053C4  C051  F056         	movff	??_floorf+2,floorf@m+1
  6687  0053C8  C052  F057         	movff	??_floorf+3,floorf@m+2
  6688  0053CC  C053  F058         	movff	??_floorf+4,floorf@m+3
  6689  0053D0  5055               	movf	floorf@m^0,w,c
  6690  0053D2  145B               	andwf	floorf@u^0,w,c
  6691  0053D4  6E4F               	movwf	??_floorf^0,c
  6692  0053D6  5056               	movf	(floorf@m+1)^0,w,c
  6693  0053D8  145C               	andwf	(floorf@u+1)^0,w,c
  6694  0053DA  6E50               	movwf	(??_floorf+1)^0,c
  6695  0053DC  5057               	movf	(floorf@m+2)^0,w,c
  6696  0053DE  145D               	andwf	(floorf@u+2)^0,w,c
  6697  0053E0  6E51               	movwf	(??_floorf+2)^0,c
  6698  0053E2  5058               	movf	(floorf@m+3)^0,w,c
  6699  0053E4  145E               	andwf	(floorf@u+3)^0,w,c
  6700  0053E6  6E52               	movwf	(??_floorf+3)^0,c
  6701  0053E8  504F               	movf	??_floorf^0,w,c
  6702  0053EA  1050               	iorwf	(??_floorf+1)^0,w,c
  6703  0053EC  1051               	iorwf	(??_floorf+2)^0,w,c
  6704  0053EE  1052               	iorwf	(??_floorf+3)^0,w,c
  6705  0053F0  B4D8               	btfsc	status,2,c
  6706  0053F2  D7C7               	goto	i2u1132_40
  6707  0053F4  C05B  F04F         	movff	floorf@u,??_floorf
  6708  0053F8  C05C  F050         	movff	floorf@u+1,??_floorf+1
  6709  0053FC  C05D  F051         	movff	floorf@u+2,??_floorf+2
  6710  005400  C05E  F052         	movff	floorf@u+3,??_floorf+3
  6711  005404  0E20               	movlw	32
  6712  005406  D005               	goto	i2u1136_40
  6713  005408                     i2u1136_45:
  6714  005408  90D8               	bcf	status,0,c
  6715  00540A  3252               	rrcf	(??_floorf+3)^0,f,c
  6716  00540C  3251               	rrcf	(??_floorf+2)^0,f,c
  6717  00540E  3250               	rrcf	(??_floorf+1)^0,f,c
  6718  005410  324F               	rrcf	??_floorf^0,f,c
  6719  005412                     i2u1136_40:
  6720  005412  2EE8               	decfsz	wreg,f,c
  6721  005414  D7F9               	goto	i2u1136_45
  6722  005416  504F               	movf	??_floorf^0,w,c
  6723  005418  1050               	iorwf	(??_floorf+1)^0,w,c
  6724  00541A  1051               	iorwf	(??_floorf+2)^0,w,c
  6725  00541C  1052               	iorwf	(??_floorf+3)^0,w,c
  6726  00541E  B4D8               	btfsc	status,2,c
  6727  005420  D008               	goto	i2l1176
  6728  005422  5055               	movf	floorf@m^0,w,c
  6729  005424  265B               	addwf	floorf@u^0,f,c
  6730  005426  5056               	movf	(floorf@m+1)^0,w,c
  6731  005428  225C               	addwfc	(floorf@u+1)^0,f,c
  6732  00542A  5057               	movf	(floorf@m+2)^0,w,c
  6733  00542C  225D               	addwfc	(floorf@u+2)^0,f,c
  6734  00542E  5058               	movf	(floorf@m+3)^0,w,c
  6735  005430  225E               	addwfc	(floorf@u+3)^0,f,c
  6736  005432                     i2l1176:
  6737  005432  1C55               	comf	floorf@m^0,w,c
  6738  005434  6E4F               	movwf	??_floorf^0,c
  6739  005436  1C56               	comf	(floorf@m+1)^0,w,c
  6740  005438  6E50               	movwf	(??_floorf+1)^0,c
  6741  00543A  1C57               	comf	(floorf@m+2)^0,w,c
  6742  00543C  6E51               	movwf	(??_floorf+2)^0,c
  6743  00543E  1C58               	comf	(floorf@m+3)^0,w,c
  6744  005440  6E52               	movwf	(??_floorf+3)^0,c
  6745  005442  504F               	movf	??_floorf^0,w,c
  6746  005444  165B               	andwf	floorf@u^0,f,c
  6747  005446  5050               	movf	(??_floorf+1)^0,w,c
  6748  005448  165C               	andwf	(floorf@u+1)^0,f,c
  6749  00544A  5051               	movf	(??_floorf+2)^0,w,c
  6750  00544C  165D               	andwf	(floorf@u+2)^0,f,c
  6751  00544E  5052               	movf	(??_floorf+3)^0,w,c
  6752  005450  165E               	andwf	(floorf@u+3)^0,f,c
  6753  005452  D036               	goto	i2l8949
  6754  005454                     i2l8941:
  6755  005454  C05B  F04F         	movff	floorf@u,??_floorf
  6756  005458  C05C  F050         	movff	floorf@u+1,??_floorf+1
  6757  00545C  C05D  F051         	movff	floorf@u+2,??_floorf+2
  6758  005460  C05E  F052         	movff	floorf@u+3,??_floorf+3
  6759  005464  0E20               	movlw	32
  6760  005466  D005               	goto	i2u1138_40
  6761  005468                     i2u1138_45:
  6762  005468  90D8               	bcf	status,0,c
  6763  00546A  3252               	rrcf	(??_floorf+3)^0,f,c
  6764  00546C  3251               	rrcf	(??_floorf+2)^0,f,c
  6765  00546E  3250               	rrcf	(??_floorf+1)^0,f,c
  6766  005470  324F               	rrcf	??_floorf^0,f,c
  6767  005472                     i2u1138_40:
  6768  005472  2EE8               	decfsz	wreg,f,c
  6769  005474  D7F9               	goto	i2u1138_45
  6770  005476  504F               	movf	??_floorf^0,w,c
  6771  005478  1050               	iorwf	(??_floorf+1)^0,w,c
  6772  00547A  1051               	iorwf	(??_floorf+2)^0,w,c
  6773  00547C  1052               	iorwf	(??_floorf+3)^0,w,c
  6774  00547E  A4D8               	btfss	status,2,c
  6775  005480  D008               	goto	i2l8945
  6776  005482  0E00               	movlw	0
  6777  005484  6E5B               	movwf	floorf@u^0,c
  6778  005486  0E00               	movlw	0
  6779  005488  6E5C               	movwf	(floorf@u+1)^0,c
  6780  00548A  0E00               	movlw	0
  6781  00548C  6E5D               	movwf	(floorf@u+2)^0,c
  6782  00548E  0E00               	movlw	0
  6783  005490  D016               	goto	L6
  6784  005492                     i2l8945:
  6785  005492  90D8               	bcf	status,0,c
  6786  005494  345B               	rlcf	floorf@u^0,w,c
  6787  005496  6E4F               	movwf	??_floorf^0,c
  6788  005498  345C               	rlcf	(floorf@u+1)^0,w,c
  6789  00549A  6E50               	movwf	(??_floorf+1)^0,c
  6790  00549C  345D               	rlcf	(floorf@u+2)^0,w,c
  6791  00549E  6E51               	movwf	(??_floorf+2)^0,c
  6792  0054A0  345E               	rlcf	(floorf@u+3)^0,w,c
  6793  0054A2  6E52               	movwf	(??_floorf+3)^0,c
  6794  0054A4  504F               	movf	??_floorf^0,w,c
  6795  0054A6  1050               	iorwf	(??_floorf+1)^0,w,c
  6796  0054A8  1051               	iorwf	(??_floorf+2)^0,w,c
  6797  0054AA  1052               	iorwf	(??_floorf+3)^0,w,c
  6798  0054AC  B4D8               	btfsc	status,2,c
  6799  0054AE  D008               	goto	i2l8949
  6800  0054B0  0E00               	movlw	0
  6801  0054B2  6E5B               	movwf	floorf@u^0,c
  6802  0054B4  0E00               	movlw	0
  6803  0054B6  6E5C               	movwf	(floorf@u+1)^0,c
  6804  0054B8  0E80               	movlw	128
  6805  0054BA  6E5D               	movwf	(floorf@u+2)^0,c
  6806  0054BC  0EBF               	movlw	191
  6807  0054BE                     L6:
  6808  0054BE  6E5E               	movwf	(floorf@u+3)^0,c
  6809  0054C0                     i2l8949:
  6810  0054C0  C05B  F04B         	movff	floorf@u,?_floorf
  6811  0054C4  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  6812  0054C8  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  6813  0054CC  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  6814  0054D0  0012               	return		;funcret
  6815  0054D2                     __end_of_floorf:
  6816                           	opt callstack 0
  6817                           
  6818 ;; *************** function ___fpclassifyf *****************
  6819 ;; Defined at:
  6820 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  x               4    0[COMRAM] float 
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;  u               4   10[COMRAM] struct .
  6825 ;;  e               2    8[COMRAM] int 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  2    0[COMRAM] int 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6835 ;;      Params:         4       0       0       0       0       0       0
  6836 ;;      Locals:         6       0       0       0       0       0       0
  6837 ;;      Temps:          4       0       0       0       0       0       0
  6838 ;;      Totals:        14       0       0       0       0       0       0
  6839 ;;Total ram usage:       14 bytes
  6840 ;; Hardware stack levels used:    1
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_efgtoa
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text32
  6849  005E54                     __ptext32:
  6850                           	opt callstack 0
  6851  005E54                     ___fpclassifyf:
  6852                           	opt callstack 18
  6853                           
  6854                           ;incstack = 0
  6855  005E54  C20C  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6856  005E58  C20D  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6857  005E5C  C20E  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6858  005E60  C20F  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6859  005E64  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6860  005E68  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6861  005E6C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6862  005E70  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6863  005E74  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6864  005E78  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6865  005E7C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6866  005E80  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6867  005E84  0E18               	movlw	24
  6868  005E86  D005               	goto	i2u1119_40
  6869  005E88                     i2u1119_45:
  6870  005E88  90D8               	bcf	status,0,c
  6871  005E8A  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6872  005E8C  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6873  005E8E  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6874  005E90  3205               	rrcf	??___fpclassifyf^0,f,c
  6875  005E92                     i2u1119_40:
  6876  005E92  2EE8               	decfsz	wreg,f,c
  6877  005E94  D7F9               	goto	i2u1119_45
  6878  005E96  5005               	movf	??___fpclassifyf^0,w,c
  6879  005E98  6E09               	movwf	___fpclassifyf@e^0,c
  6880  005E9A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6881  005E9C  5009               	movf	___fpclassifyf@e^0,w,c
  6882  005E9E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6883  005EA0  A4D8               	btfss	status,2,c
  6884  005EA2  D019               	goto	i2l8901
  6885  005EA4  90D8               	bcf	status,0,c
  6886  005EA6  340B               	rlcf	___fpclassifyf@u^0,w,c
  6887  005EA8  6E05               	movwf	??___fpclassifyf^0,c
  6888  005EAA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6889  005EAC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6890  005EAE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6891  005EB0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6892  005EB2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6893  005EB4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6894  005EB6  5005               	movf	??___fpclassifyf^0,w,c
  6895  005EB8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6896  005EBA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6897  005EBC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6898  005EBE  A4D8               	btfss	status,2,c
  6899  005EC0  D005               	goto	i2l8897
  6900  005EC2  0E00               	movlw	0
  6901  005EC4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6902  005EC6  0E02               	movlw	2
  6903  005EC8  6E01               	movwf	?___fpclassifyf^0,c
  6904  005ECA  0012               	return	
  6905  005ECC                     i2l8897:
  6906  005ECC  0E00               	movlw	0
  6907  005ECE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6908  005ED0  0E03               	movlw	3
  6909  005ED2  6E01               	movwf	?___fpclassifyf^0,c
  6910  005ED4  0012               	return	
  6911  005ED6                     i2l8901:
  6912  005ED6  2809               	incf	___fpclassifyf@e^0,w,c
  6913  005ED8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6914  005EDA  A4D8               	btfss	status,2,c
  6915  005EDC  D01C               	goto	i2l8907
  6916  005EDE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6917  005EE2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6918  005EE6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6919  005EEA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6920  005EEE  0E09               	movlw	9
  6921  005EF0                     i2u1123_45:
  6922  005EF0  90D8               	bcf	status,0,c
  6923  005EF2  3605               	rlcf	??___fpclassifyf^0,f,c
  6924  005EF4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6925  005EF6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6926  005EF8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6927  005EFA  2EE8               	decfsz	wreg,f,c
  6928  005EFC  D7F9               	goto	i2u1123_45
  6929  005EFE  5005               	movf	??___fpclassifyf^0,w,c
  6930  005F00  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6931  005F02  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6932  005F04  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6933  005F06  A4D8               	btfss	status,2,c
  6934  005F08  D002               	goto	i2u1124_40
  6935  005F0A  0E01               	movlw	1
  6936  005F0C  D001               	goto	i2u1125_40
  6937  005F0E                     i2u1124_40:
  6938  005F0E  0E00               	movlw	0
  6939  005F10                     i2u1125_40:
  6940  005F10  6E01               	movwf	?___fpclassifyf^0,c
  6941  005F12  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6942  005F14  0012               	return	
  6943  005F16                     i2l8907:
  6944  005F16  0E00               	movlw	0
  6945  005F18  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6946  005F1A  0E04               	movlw	4
  6947  005F1C  6E01               	movwf	?___fpclassifyf^0,c
  6948  005F1E  0012               	return		;funcret
  6949  005F20                     __end_of___fpclassifyf:
  6950                           	opt callstack 0
  6951                           
  6952 ;; *************** function ___fleq *****************
  6953 ;; Defined at:
  6954 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  ff1             4    0[COMRAM] int 
  6957 ;;  ff2             4    4[COMRAM] int 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;		None               void
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6969 ;;      Params:         8       0       0       0       0       0       0
  6970 ;;      Locals:         0       0       0       0       0       0       0
  6971 ;;      Temps:          4       0       0       0       0       0       0
  6972 ;;      Totals:        12       0       0       0       0       0       0
  6973 ;;Total ram usage:       12 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; This function calls:
  6976 ;;		Nothing
  6977 ;; This function is called by:
  6978 ;;		_efgtoa
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           	psect	text33
  6983  00625E                     __ptext33:
  6984                           	opt callstack 0
  6985  00625E                     ___fleq:
  6986                           	opt callstack 18
  6987                           
  6988                           ;incstack = 0
  6989  00625E  0E00               	movlw	0
  6990  006260  1401               	andwf	___fleq@ff1^0,w,c
  6991  006262  6E09               	movwf	??___fleq^0,c
  6992  006264  0E00               	movlw	0
  6993  006266  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6994  006268  6E0A               	movwf	(??___fleq+1)^0,c
  6995  00626A  0E80               	movlw	128
  6996  00626C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6997  00626E  6E0B               	movwf	(??___fleq+2)^0,c
  6998  006270  0E7F               	movlw	127
  6999  006272  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7000  006274  6E0C               	movwf	(??___fleq+3)^0,c
  7001  006276  5009               	movf	??___fleq^0,w,c
  7002  006278  100A               	iorwf	(??___fleq+1)^0,w,c
  7003  00627A  100B               	iorwf	(??___fleq+2)^0,w,c
  7004  00627C  100C               	iorwf	(??___fleq+3)^0,w,c
  7005  00627E  A4D8               	btfss	status,2,c
  7006  006280  D008               	goto	i2l9155
  7007  006282  0E00               	movlw	0
  7008  006284  6E01               	movwf	___fleq@ff1^0,c
  7009  006286  0E00               	movlw	0
  7010  006288  6E02               	movwf	(___fleq@ff1+1)^0,c
  7011  00628A  0E00               	movlw	0
  7012  00628C  6E03               	movwf	(___fleq@ff1+2)^0,c
  7013  00628E  0E00               	movlw	0
  7014  006290  6E04               	movwf	(___fleq@ff1+3)^0,c
  7015  006292                     i2l9155:
  7016  006292  0E00               	movlw	0
  7017  006294  1405               	andwf	___fleq@ff2^0,w,c
  7018  006296  6E09               	movwf	??___fleq^0,c
  7019  006298  0E00               	movlw	0
  7020  00629A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7021  00629C  6E0A               	movwf	(??___fleq+1)^0,c
  7022  00629E  0E80               	movlw	128
  7023  0062A0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7024  0062A2  6E0B               	movwf	(??___fleq+2)^0,c
  7025  0062A4  0E7F               	movlw	127
  7026  0062A6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7027  0062A8  6E0C               	movwf	(??___fleq+3)^0,c
  7028  0062AA  5009               	movf	??___fleq^0,w,c
  7029  0062AC  100A               	iorwf	(??___fleq+1)^0,w,c
  7030  0062AE  100B               	iorwf	(??___fleq+2)^0,w,c
  7031  0062B0  100C               	iorwf	(??___fleq+3)^0,w,c
  7032  0062B2  A4D8               	btfss	status,2,c
  7033  0062B4  D008               	goto	i2l9159
  7034  0062B6  0E00               	movlw	0
  7035  0062B8  6E05               	movwf	___fleq@ff2^0,c
  7036  0062BA  0E00               	movlw	0
  7037  0062BC  6E06               	movwf	(___fleq@ff2+1)^0,c
  7038  0062BE  0E00               	movlw	0
  7039  0062C0  6E07               	movwf	(___fleq@ff2+2)^0,c
  7040  0062C2  0E00               	movlw	0
  7041  0062C4  6E08               	movwf	(___fleq@ff2+3)^0,c
  7042  0062C6                     i2l9159:
  7043  0062C6  5005               	movf	___fleq@ff2^0,w,c
  7044  0062C8  1801               	xorwf	___fleq@ff1^0,w,c
  7045  0062CA  E10A               	bnz	i2u1174_40
  7046  0062CC  5006               	movf	(___fleq@ff2+1)^0,w,c
  7047  0062CE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7048  0062D0  E107               	bnz	i2u1174_40
  7049  0062D2  5007               	movf	(___fleq@ff2+2)^0,w,c
  7050  0062D4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7051  0062D6  E104               	bnz	i2u1174_40
  7052  0062D8  5008               	movf	(___fleq@ff2+3)^0,w,c
  7053  0062DA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7054  0062DC  B4D8               	btfsc	status,2,c
  7055  0062DE  D002               	goto	i2l9163
  7056  0062E0                     i2u1174_40:
  7057  0062E0  90D8               	bcf	status,0,c
  7058  0062E2  0012               	return	
  7059  0062E4                     i2l9163:
  7060  0062E4  80D8               	bsf	status,0,c
  7061  0062E6  0012               	return		;funcret
  7062  0062E8                     __end_of___fleq:
  7063                           	opt callstack 0
  7064                           
  7065 ;; *************** function ___awdiv *****************
  7066 ;; Defined at:
  7067 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  dividend        2    0[COMRAM] int 
  7070 ;;  divisor         2    2[COMRAM] int 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  quotient        2    6[COMRAM] int 
  7073 ;;  sign            1    5[COMRAM] unsigned char 
  7074 ;;  counter         1    4[COMRAM] unsigned char 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  2    0[COMRAM] int 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7084 ;;      Params:         4       0       0       0       0       0       0
  7085 ;;      Locals:         4       0       0       0       0       0       0
  7086 ;;      Temps:          0       0       0       0       0       0       0
  7087 ;;      Totals:         8       0       0       0       0       0       0
  7088 ;;Total ram usage:        8 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_efgtoa
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text34
  7098  0062E8                     __ptext34:
  7099                           	opt callstack 0
  7100  0062E8                     ___awdiv:
  7101                           	opt callstack 18
  7102                           
  7103                           ;incstack = 0
  7104  0062E8  0E00               	movlw	0
  7105  0062EA  6E06               	movwf	___awdiv@sign^0,c
  7106  0062EC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7107  0062EE  D006               	goto	i2l9115
  7108  0062F0  6C03               	negf	___awdiv@divisor^0,c
  7109  0062F2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7110  0062F4  B0D8               	btfsc	status,0,c
  7111  0062F6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7112  0062F8  0E01               	movlw	1
  7113  0062FA  6E06               	movwf	___awdiv@sign^0,c
  7114  0062FC                     i2l9115:
  7115  0062FC  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  7116  0062FE  D006               	goto	i2l9121
  7117  006300  6C01               	negf	___awdiv@dividend^0,c
  7118  006302  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7119  006304  B0D8               	btfsc	status,0,c
  7120  006306  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7121  006308  0E01               	movlw	1
  7122  00630A  1A06               	xorwf	___awdiv@sign^0,f,c
  7123  00630C                     i2l9121:
  7124  00630C  0E00               	movlw	0
  7125  00630E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7126  006310  0E00               	movlw	0
  7127  006312  6E07               	movwf	___awdiv@quotient^0,c
  7128  006314  5003               	movf	___awdiv@divisor^0,w,c
  7129  006316  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7130  006318  B4D8               	btfsc	status,2,c
  7131  00631A  D01C               	goto	i2l9143
  7132  00631C  0E01               	movlw	1
  7133  00631E  6E05               	movwf	___awdiv@counter^0,c
  7134  006320  D004               	goto	i2l9129
  7135  006322                     i2l9127:
  7136  006322  90D8               	bcf	status,0,c
  7137  006324  3603               	rlcf	___awdiv@divisor^0,f,c
  7138  006326  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7139  006328  2A05               	incf	___awdiv@counter^0,f,c
  7140  00632A                     i2l9129:
  7141  00632A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7142  00632C  D7FA               	goto	i2l9127
  7143  00632E                     i2u1169_40:
  7144  00632E  90D8               	bcf	status,0,c
  7145  006330  3607               	rlcf	___awdiv@quotient^0,f,c
  7146  006332  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7147  006334  5003               	movf	___awdiv@divisor^0,w,c
  7148  006336  5C01               	subwf	___awdiv@dividend^0,w,c
  7149  006338  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7150  00633A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7151  00633C  A0D8               	btfss	status,0,c
  7152  00633E  D005               	goto	i2l9139
  7153  006340  5003               	movf	___awdiv@divisor^0,w,c
  7154  006342  5E01               	subwf	___awdiv@dividend^0,f,c
  7155  006344  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7156  006346  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7157  006348  8007               	bsf	___awdiv@quotient^0,0,c
  7158  00634A                     i2l9139:
  7159  00634A  90D8               	bcf	status,0,c
  7160  00634C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7161  00634E  3203               	rrcf	___awdiv@divisor^0,f,c
  7162  006350  2E05               	decfsz	___awdiv@counter^0,f,c
  7163  006352  D7ED               	goto	i2u1169_40
  7164  006354                     i2l9143:
  7165  006354  5006               	movf	___awdiv@sign^0,w,c
  7166  006356  B4D8               	btfsc	status,2,c
  7167  006358  D004               	goto	i2l9147
  7168  00635A  6C07               	negf	___awdiv@quotient^0,c
  7169  00635C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7170  00635E  B0D8               	btfsc	status,0,c
  7171  006360  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7172  006362                     i2l9147:
  7173  006362  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7174  006366  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7175  00636A  0012               	return		;funcret
  7176  00636C                     __end_of___awdiv:
  7177                           	opt callstack 0
  7178                           
  7179 ;; *************** function _atoi *****************
  7180 ;; Defined at:
  7181 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7184 ;;		 -> STR_4(43), STR_3(9), 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  n               2   20[COMRAM] int 
  7187 ;;  neg             2   13[COMRAM] int 
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  2    7[COMRAM] int 
  7190 ;; Registers used:
  7191 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7197 ;;      Params:         2       0       0       0       0       0       0
  7198 ;;      Locals:         9       0       0       0       0       0       0
  7199 ;;      Temps:          4       0       0       0       0       0       0
  7200 ;;      Totals:        15       0       0       0       0       0       0
  7201 ;;Total ram usage:       15 bytes
  7202 ;; Hardware stack levels used:    1
  7203 ;; Hardware stack levels required when called:    1
  7204 ;; This function calls:
  7205 ;;		___wmul
  7206 ;;		_isdigit
  7207 ;;		_isspace
  7208 ;; This function is called by:
  7209 ;;		_vfpfcnvrt
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213                           	psect	text35
  7214  005790                     __ptext35:
  7215                           	opt callstack 0
  7216  005790                     _atoi:
  7217                           	opt callstack 18
  7218                           
  7219                           ;incstack = 0
  7220  005790  0E00               	movlw	0
  7221  005792  6E16               	movwf	(atoi@n+1)^0,c
  7222  005794  0E00               	movlw	0
  7223  005796  6E15               	movwf	atoi@n^0,c
  7224  005798  0E00               	movlw	0
  7225  00579A  6E0F               	movwf	(atoi@neg+1)^0,c
  7226  00579C  0E00               	movlw	0
  7227  00579E  6E0E               	movwf	atoi@neg^0,c
  7228  0057A0  D002               	goto	i2l10275
  7229  0057A2                     i2l10273:
  7230  0057A2  4A08               	infsnz	atoi@s^0,f,c
  7231  0057A4  2A09               	incf	(atoi@s+1)^0,f,c
  7232  0057A6                     i2l10275:
  7233  0057A6  0E01               	movlw	1
  7234  0057A8  6E14               	movwf	_atoi$1490^0,c
  7235  0057AA  C008  FFF6         	movff	atoi@s,tblptrl
  7236  0057AE  C009  FFF7         	movff	atoi@s+1,tblptrh
  7237  0057B2                     	if	0	;tblptru may be non-zero
  7238  0057B2                     	endif
  7239  0057B2                     	if	0	;tblptru may be non-zero
  7240  0057B2                     	endif
  7241  0057B2  0008               	tblrd		*
  7242  0057B4  50F5               	movf	tablat,w,c
  7243  0057B6  0A20               	xorlw	32
  7244  0057B8  B4D8               	btfsc	status,2,c
  7245  0057BA  D018               	goto	i2l10283
  7246  0057BC  0EF7               	movlw	247
  7247  0057BE  6E0A               	movwf	??_atoi^0,c
  7248  0057C0  0EFF               	movlw	255
  7249  0057C2  6E0B               	movwf	(??_atoi+1)^0,c
  7250  0057C4  C008  FFF6         	movff	atoi@s,tblptrl
  7251  0057C8  C009  FFF7         	movff	atoi@s+1,tblptrh
  7252  0057CC                     	if	0	;tblptru may be non-zero
  7253  0057CC                     	endif
  7254  0057CC                     	if	0	;tblptru may be non-zero
  7255  0057CC                     	endif
  7256  0057CC  0008               	tblrd		*
  7257  0057CE  50F5               	movf	tablat,w,c
  7258  0057D0  6E0C               	movwf	(??_atoi+2)^0,c
  7259  0057D2  6A0D               	clrf	(??_atoi+3)^0,c
  7260  0057D4  500A               	movf	??_atoi^0,w,c
  7261  0057D6  260C               	addwf	(??_atoi+2)^0,f,c
  7262  0057D8  500B               	movf	(??_atoi+1)^0,w,c
  7263  0057DA  220D               	addwfc	(??_atoi+3)^0,f,c
  7264  0057DC  500D               	movf	(??_atoi+3)^0,w,c
  7265  0057DE  E104               	bnz	i2u1340_40
  7266  0057E0  0E05               	movlw	5
  7267  0057E2  5C0C               	subwf	(??_atoi+2)^0,w,c
  7268  0057E4  A0D8               	btfss	status,0,c
  7269  0057E6  D002               	goto	i2l10283
  7270  0057E8                     i2u1340_40:
  7271  0057E8  0E00               	movlw	0
  7272  0057EA  6E14               	movwf	_atoi$1490^0,c
  7273  0057EC                     i2l10283:
  7274  0057EC  C014  F010         	movff	_atoi$1490,_atoi$1489
  7275  0057F0  6A11               	clrf	(_atoi$1489+1)^0,c
  7276  0057F2  5010               	movf	_atoi$1489^0,w,c
  7277  0057F4  1011               	iorwf	(_atoi$1489+1)^0,w,c
  7278  0057F6  B4D8               	btfsc	status,2,c
  7279  0057F8  D008               	goto	i2l10293
  7280  0057FA  D7D3               	goto	i2l10273
  7281  0057FC                     i2l10289:
  7282  0057FC  0E00               	movlw	0
  7283  0057FE  6E0F               	movwf	(atoi@neg+1)^0,c
  7284  005800  0E01               	movlw	1
  7285  005802  6E0E               	movwf	atoi@neg^0,c
  7286  005804                     i2l10291:
  7287  005804  4A08               	infsnz	atoi@s^0,f,c
  7288  005806  2A09               	incf	(atoi@s+1)^0,f,c
  7289  005808  D02E               	goto	i2l10299
  7290  00580A                     i2l10293:
  7291  00580A  C008  FFF6         	movff	atoi@s,tblptrl
  7292  00580E  C009  FFF7         	movff	atoi@s+1,tblptrh
  7293  005812                     	if	0	;tblptru may be non-zero
  7294  005812                     	endif
  7295  005812                     	if	0	;tblptru may be non-zero
  7296  005812                     	endif
  7297  005812  0008               	tblrd		*
  7298  005814  50F5               	movf	tablat,w,c
  7299  005816  6E0A               	movwf	??_atoi^0,c
  7300  005818  6A0B               	clrf	(??_atoi+1)^0,c
  7301                           
  7302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7303                           ; Switch size 1, requested type "simple"
  7304                           ; Number of cases is 1, Range of values is 0 to 0
  7305                           ; switch strategies available:
  7306                           ; Name         Instructions Cycles
  7307                           ; simple_byte            4     3 (average)
  7308                           ;	Chosen strategy is simple_byte
  7309  00581A  500B               	movf	(??_atoi+1)^0,w,c
  7310  00581C  0A00               	xorlw	0	; case 0
  7311  00581E  A4D8               	btfss	status,2,c
  7312  005820  D022               	goto	i2l10299
  7313                           
  7314                           ; Switch size 1, requested type "simple"
  7315                           ; Number of cases is 2, Range of values is 43 to 45
  7316                           ; switch strategies available:
  7317                           ; Name         Instructions Cycles
  7318                           ; simple_byte            7     4 (average)
  7319                           ;	Chosen strategy is simple_byte
  7320  005822  500A               	movf	??_atoi^0,w,c
  7321  005824  0A2B               	xorlw	43	; case 43
  7322  005826  B4D8               	btfsc	status,2,c
  7323  005828  D7ED               	goto	i2l10291
  7324  00582A  0A06               	xorlw	6	; case 45
  7325  00582C  B4D8               	btfsc	status,2,c
  7326  00582E  D7E6               	goto	i2l10289
  7327  005830  D01A               	goto	i2l10299
  7328  005832                     i2l10295:
  7329  005832  C015  F001         	movff	atoi@n,___wmul@multiplier
  7330  005836  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7331  00583A  0E00               	movlw	0
  7332  00583C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7333  00583E  0E0A               	movlw	10
  7334  005840  6E03               	movwf	___wmul@multiplicand^0,c
  7335  005842  ECA9  F034         	call	___wmul	;wreg free
  7336  005846  C008  FFF6         	movff	atoi@s,tblptrl
  7337  00584A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7338  00584E                     	if	0	;tblptru may be non-zero
  7339  00584E                     	endif
  7340  00584E                     	if	0	;tblptru may be non-zero
  7341  00584E                     	endif
  7342  00584E  0008               	tblrd		*
  7343  005850  50F5               	movf	tablat,w,c
  7344  005852  5E01               	subwf	?___wmul^0,f,c
  7345  005854  0E00               	movlw	0
  7346  005856  5A02               	subwfb	(?___wmul+1)^0,f,c
  7347  005858  0E30               	movlw	48
  7348  00585A  2401               	addwf	?___wmul^0,w,c
  7349  00585C  6E15               	movwf	atoi@n^0,c
  7350  00585E  0E00               	movlw	0
  7351  005860  2002               	addwfc	(?___wmul+1)^0,w,c
  7352  005862  6E16               	movwf	(atoi@n+1)^0,c
  7353  005864  D7CF               	goto	i2l10291
  7354  005866                     i2l10299:
  7355  005866  0ED0               	movlw	208
  7356  005868  6E0A               	movwf	??_atoi^0,c
  7357  00586A  0EFF               	movlw	255
  7358  00586C  6E0B               	movwf	(??_atoi+1)^0,c
  7359  00586E  C008  FFF6         	movff	atoi@s,tblptrl
  7360  005872  C009  FFF7         	movff	atoi@s+1,tblptrh
  7361  005876                     	if	0	;tblptru may be non-zero
  7362  005876                     	endif
  7363  005876                     	if	0	;tblptru may be non-zero
  7364  005876                     	endif
  7365  005876  0008               	tblrd		*
  7366  005878  50F5               	movf	tablat,w,c
  7367  00587A  6E0C               	movwf	(??_atoi+2)^0,c
  7368  00587C  6A0D               	clrf	(??_atoi+3)^0,c
  7369  00587E  500A               	movf	??_atoi^0,w,c
  7370  005880  260C               	addwf	(??_atoi+2)^0,f,c
  7371  005882  500B               	movf	(??_atoi+1)^0,w,c
  7372  005884  220D               	addwfc	(??_atoi+3)^0,f,c
  7373  005886  500D               	movf	(??_atoi+3)^0,w,c
  7374  005888  E106               	bnz	i2u1342_40
  7375  00588A  0E0A               	movlw	10
  7376  00588C  5C0C               	subwf	(??_atoi+2)^0,w,c
  7377  00588E  B0D8               	btfsc	status,0,c
  7378  005890  D002               	goto	i2u1342_40
  7379  005892  0E01               	movlw	1
  7380  005894  D001               	goto	i2u1343_40
  7381  005896                     i2u1342_40:
  7382  005896  0E00               	movlw	0
  7383  005898                     i2u1343_40:
  7384  005898  6E12               	movwf	_atoi$1491^0,c
  7385  00589A  6A13               	clrf	(_atoi$1491+1)^0,c
  7386  00589C  5012               	movf	_atoi$1491^0,w,c
  7387  00589E  1013               	iorwf	(_atoi$1491+1)^0,w,c
  7388  0058A0  A4D8               	btfss	status,2,c
  7389  0058A2  D7C7               	goto	i2l10295
  7390  0058A4  500E               	movf	atoi@neg^0,w,c
  7391  0058A6  100F               	iorwf	(atoi@neg+1)^0,w,c
  7392  0058A8  A4D8               	btfss	status,2,c
  7393  0058AA  D00D               	goto	i2l1164
  7394  0058AC  C015  F00A         	movff	atoi@n,??_atoi
  7395  0058B0  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7396  0058B4  1E0A               	comf	??_atoi^0,f,c
  7397  0058B6  1E0B               	comf	(??_atoi+1)^0,f,c
  7398  0058B8  4A0A               	infsnz	??_atoi^0,f,c
  7399  0058BA  2A0B               	incf	(??_atoi+1)^0,f,c
  7400  0058BC  C00A  F008         	movff	??_atoi,?_atoi
  7401  0058C0  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7402  0058C4  0012               	return	
  7403  0058C6                     i2l1164:
  7404  0058C6  C015  F008         	movff	atoi@n,?_atoi
  7405  0058CA  C016  F009         	movff	atoi@n+1,?_atoi+1
  7406  0058CE  0012               	return		;funcret
  7407  0058D0                     __end_of_atoi:
  7408                           	opt callstack 0
  7409                           
  7410 ;; *************** function _isspace *****************
  7411 ;; Defined at:
  7412 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;  c               2    0[COMRAM] int 
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;		None
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  2    0[COMRAM] int 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7426 ;;      Params:         2       0       0       0       0       0       0
  7427 ;;      Locals:         1       0       0       0       0       0       0
  7428 ;;      Temps:          4       0       0       0       0       0       0
  7429 ;;      Totals:         7       0       0       0       0       0       0
  7430 ;;Total ram usage:        7 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_atoi
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text36
  7440  006758                     __ptext36:
  7441                           	opt callstack 0
  7442  006758                     _isspace:
  7443                           	opt callstack 18
  7444                           
  7445                           ;incstack = 0
  7446  006758  0E01               	movlw	1
  7447  00675A  6E07               	movwf	_isspace$1520^0,c
  7448  00675C  0E20               	movlw	32
  7449  00675E  1801               	xorwf	isspace@c^0,w,c
  7450  006760  1002               	iorwf	(isspace@c+1)^0,w,c
  7451  006762  B4D8               	btfsc	status,2,c
  7452  006764  D014               	goto	i2l9227
  7453  006766  0EF7               	movlw	247
  7454  006768  6E03               	movwf	??_isspace^0,c
  7455  00676A  0EFF               	movlw	255
  7456  00676C  6E04               	movwf	(??_isspace+1)^0,c
  7457  00676E  C001  F005         	movff	isspace@c,??_isspace+2
  7458  006772  C002  F006         	movff	isspace@c+1,??_isspace+3
  7459  006776  5003               	movf	??_isspace^0,w,c
  7460  006778  2605               	addwf	(??_isspace+2)^0,f,c
  7461  00677A  5004               	movf	(??_isspace+1)^0,w,c
  7462  00677C  2206               	addwfc	(??_isspace+3)^0,f,c
  7463  00677E  5006               	movf	(??_isspace+3)^0,w,c
  7464  006780  E104               	bnz	i2u1184_40
  7465  006782  0E05               	movlw	5
  7466  006784  5C05               	subwf	(??_isspace+2)^0,w,c
  7467  006786  A0D8               	btfss	status,0,c
  7468  006788  D002               	goto	i2l9227
  7469  00678A                     i2u1184_40:
  7470  00678A  0E00               	movlw	0
  7471  00678C  6E07               	movwf	_isspace$1520^0,c
  7472  00678E                     i2l9227:
  7473  00678E  C007  F001         	movff	_isspace$1520,?_isspace
  7474  006792  6A02               	clrf	(?_isspace+1)^0,c
  7475  006794  0012               	return		;funcret
  7476  006796                     __end_of_isspace:
  7477                           	opt callstack 0
  7478                           
  7479 ;; *************** function _isdigit *****************
  7480 ;; Defined at:
  7481 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;  c               2    0[COMRAM] int 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;		None
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  2    0[COMRAM] int 
  7488 ;; Registers used:
  7489 ;;		wreg, status,2, status,0
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7495 ;;      Params:         2       0       0       0       0       0       0
  7496 ;;      Locals:         0       0       0       0       0       0       0
  7497 ;;      Temps:          4       0       0       0       0       0       0
  7498 ;;      Totals:         6       0       0       0       0       0       0
  7499 ;;Total ram usage:        6 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; This function calls:
  7502 ;;		Nothing
  7503 ;; This function is called by:
  7504 ;;		_vfpfcnvrt
  7505 ;;		_atoi
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           	psect	text37
  7510  0068CA                     __ptext37:
  7511                           	opt callstack 0
  7512  0068CA                     _isdigit:
  7513                           	opt callstack 19
  7514                           
  7515                           ;incstack = 0
  7516  0068CA  0ED0               	movlw	208
  7517  0068CC  6E03               	movwf	??_isdigit^0,c
  7518  0068CE  0EFF               	movlw	255
  7519  0068D0  6E04               	movwf	(??_isdigit+1)^0,c
  7520  0068D2  C001  F005         	movff	isdigit@c,??_isdigit+2
  7521  0068D6  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7522  0068DA  5003               	movf	??_isdigit^0,w,c
  7523  0068DC  2605               	addwf	(??_isdigit+2)^0,f,c
  7524  0068DE  5004               	movf	(??_isdigit+1)^0,w,c
  7525  0068E0  2206               	addwfc	(??_isdigit+3)^0,f,c
  7526  0068E2  5006               	movf	(??_isdigit+3)^0,w,c
  7527  0068E4  E106               	bnz	i2u1141_40
  7528  0068E6  0E0A               	movlw	10
  7529  0068E8  5C05               	subwf	(??_isdigit+2)^0,w,c
  7530  0068EA  B0D8               	btfsc	status,0,c
  7531  0068EC  D002               	goto	i2u1141_40
  7532  0068EE  0E01               	movlw	1
  7533  0068F0  D001               	goto	i2u1142_40
  7534  0068F2                     i2u1141_40:
  7535  0068F2  0E00               	movlw	0
  7536  0068F4                     i2u1142_40:
  7537  0068F4  6E01               	movwf	?_isdigit^0,c
  7538  0068F6  6A02               	clrf	(?_isdigit+1)^0,c
  7539  0068F8  0012               	return		;funcret
  7540  0068FA                     __end_of_isdigit:
  7541                           	opt callstack 0
  7542                           
  7543 ;; *************** function ___wmul *****************
  7544 ;; Defined at:
  7545 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7546 ;; Parameters:    Size  Location     Type
  7547 ;;  multiplier      2    0[COMRAM] unsigned int 
  7548 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;  product         2    4[COMRAM] unsigned int 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  2    0[COMRAM] unsigned int 
  7553 ;; Registers used:
  7554 ;;		wreg, status,2, status,0, prodl, prodh
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7560 ;;      Params:         4       0       0       0       0       0       0
  7561 ;;      Locals:         2       0       0       0       0       0       0
  7562 ;;      Temps:          0       0       0       0       0       0       0
  7563 ;;      Totals:         6       0       0       0       0       0       0
  7564 ;;Total ram usage:        6 bytes
  7565 ;; Hardware stack levels used:    1
  7566 ;; This function calls:
  7567 ;;		Nothing
  7568 ;; This function is called by:
  7569 ;;		_atoi
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           	psect	text38
  7574  006952                     __ptext38:
  7575                           	opt callstack 0
  7576  006952                     ___wmul:
  7577                           	opt callstack 18
  7578                           
  7579                           ;incstack = 0
  7580  006952  5001               	movf	___wmul@multiplier^0,w,c
  7581  006954  0203               	mulwf	___wmul@multiplicand^0,c
  7582  006956  CFF3 F005          	movff	prodl,___wmul@product
  7583  00695A  CFF4 F006          	movff	prodh,___wmul@product+1
  7584  00695E  5001               	movf	___wmul@multiplier^0,w,c
  7585  006960  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7586  006962  50F3               	movf	243,w,c
  7587  006964  2606               	addwf	(___wmul@product+1)^0,f,c
  7588  006966  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7589  006968  0203               	mulwf	___wmul@multiplicand^0,c
  7590  00696A  50F3               	movf	243,w,c
  7591  00696C  2606               	addwf	(___wmul@product+1)^0,f,c
  7592  00696E  C005  F001         	movff	___wmul@product,?___wmul
  7593  006972  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7594  006976  0012               	return		;funcret
  7595  006978                     __end_of___wmul:
  7596                           	opt callstack 0
  7597                           
  7598 ;; *************** function _memset *****************
  7599 ;; Defined at:
  7600 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  dest            2    0[COMRAM] PTR void 
  7603 ;;		 -> r(100), 
  7604 ;;  c               2    2[COMRAM] int 
  7605 ;;  n               2    4[COMRAM] unsigned int 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  s               2   10[COMRAM] PTR unsigned char 
  7608 ;;		 -> r(100), 
  7609 ;;  k               2    8[COMRAM] unsigned int 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  2    0[COMRAM] PTR void 
  7612 ;; Registers used:
  7613 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7619 ;;      Params:         6       0       0       0       0       0       0
  7620 ;;      Locals:         4       0       0       0       0       0       0
  7621 ;;      Temps:          2       0       0       0       0       0       0
  7622 ;;      Totals:        12       0       0       0       0       0       0
  7623 ;;Total ram usage:       12 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_Hi_ISR
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text39
  7633  005A10                     __ptext39:
  7634                           	opt callstack 0
  7635  005A10                     _memset:
  7636                           	opt callstack 22
  7637                           
  7638                           ;incstack = 0
  7639  005A10  C001  F00B         	movff	memset@dest,memset@s
  7640  005A14  C002  F00C         	movff	memset@dest+1,memset@s+1
  7641  005A18  5005               	movf	memset@n^0,w,c
  7642  005A1A  1006               	iorwf	(memset@n+1)^0,w,c
  7643  005A1C  B4D8               	btfsc	status,2,c
  7644  005A1E  0012               	return	
  7645  005A20  C00B  FFD9         	movff	memset@s,fsr2l
  7646  005A24  C00C  FFDA         	movff	memset@s+1,fsr2h
  7647  005A28  C003  FFDF         	movff	memset@c,indf2
  7648  005A2C  5005               	movf	memset@n^0,w,c
  7649  005A2E  240B               	addwf	memset@s^0,w,c
  7650  005A30  6E07               	movwf	??_memset^0,c
  7651  005A32  5006               	movf	(memset@n+1)^0,w,c
  7652  005A34  200C               	addwfc	(memset@s+1)^0,w,c
  7653  005A36  6E08               	movwf	(??_memset+1)^0,c
  7654  005A38  0EFF               	movlw	255
  7655  005A3A  2407               	addwf	??_memset^0,w,c
  7656  005A3C  6ED9               	movwf	fsr2l,c
  7657  005A3E  0EFF               	movlw	255
  7658  005A40  2008               	addwfc	(??_memset+1)^0,w,c
  7659  005A42  6EDA               	movwf	fsr2h,c
  7660  005A44  C003  FFDF         	movff	memset@c,indf2
  7661  005A48  5006               	movf	(memset@n+1)^0,w,c
  7662  005A4A  E104               	bnz	i2l6111
  7663  005A4C  0E03               	movlw	3
  7664  005A4E  5C05               	subwf	memset@n^0,w,c
  7665  005A50  A0D8               	btfss	status,0,c
  7666  005A52  0012               	return	
  7667  005A54                     i2l6111:
  7668  005A54  EE20 F001          	lfsr	2,1
  7669  005A58  500B               	movf	memset@s^0,w,c
  7670  005A5A  26D9               	addwf	fsr2l,f,c
  7671  005A5C  500C               	movf	(memset@s+1)^0,w,c
  7672  005A5E  22DA               	addwfc	fsr2h,f,c
  7673  005A60  C003  FFDF         	movff	memset@c,indf2
  7674  005A64  EE20 F002          	lfsr	2,2
  7675  005A68  500B               	movf	memset@s^0,w,c
  7676  005A6A  26D9               	addwf	fsr2l,f,c
  7677  005A6C  500C               	movf	(memset@s+1)^0,w,c
  7678  005A6E  22DA               	addwfc	fsr2h,f,c
  7679  005A70  C003  FFDF         	movff	memset@c,indf2
  7680  005A74  5005               	movf	memset@n^0,w,c
  7681  005A76  240B               	addwf	memset@s^0,w,c
  7682  005A78  6E07               	movwf	??_memset^0,c
  7683  005A7A  5006               	movf	(memset@n+1)^0,w,c
  7684  005A7C  200C               	addwfc	(memset@s+1)^0,w,c
  7685  005A7E  6E08               	movwf	(??_memset+1)^0,c
  7686  005A80  0EFE               	movlw	254
  7687  005A82  2407               	addwf	??_memset^0,w,c
  7688  005A84  6ED9               	movwf	fsr2l,c
  7689  005A86  0EFF               	movlw	255
  7690  005A88  2008               	addwfc	(??_memset+1)^0,w,c
  7691  005A8A  6EDA               	movwf	fsr2h,c
  7692  005A8C  C003  FFDF         	movff	memset@c,indf2
  7693  005A90  5005               	movf	memset@n^0,w,c
  7694  005A92  240B               	addwf	memset@s^0,w,c
  7695  005A94  6E07               	movwf	??_memset^0,c
  7696  005A96  5006               	movf	(memset@n+1)^0,w,c
  7697  005A98  200C               	addwfc	(memset@s+1)^0,w,c
  7698  005A9A  6E08               	movwf	(??_memset+1)^0,c
  7699  005A9C  0EFD               	movlw	253
  7700  005A9E  2407               	addwf	??_memset^0,w,c
  7701  005AA0  6ED9               	movwf	fsr2l,c
  7702  005AA2  0EFF               	movlw	255
  7703  005AA4  2008               	addwfc	(??_memset+1)^0,w,c
  7704  005AA6  6EDA               	movwf	fsr2h,c
  7705  005AA8  C003  FFDF         	movff	memset@c,indf2
  7706  005AAC  5006               	movf	(memset@n+1)^0,w,c
  7707  005AAE  E104               	bnz	i2l6117
  7708  005AB0  0E07               	movlw	7
  7709  005AB2  5C05               	subwf	memset@n^0,w,c
  7710  005AB4  A0D8               	btfss	status,0,c
  7711  005AB6  0012               	return	
  7712  005AB8                     i2l6117:
  7713  005AB8  EE20 F003          	lfsr	2,3
  7714  005ABC  500B               	movf	memset@s^0,w,c
  7715  005ABE  26D9               	addwf	fsr2l,f,c
  7716  005AC0  500C               	movf	(memset@s+1)^0,w,c
  7717  005AC2  22DA               	addwfc	fsr2h,f,c
  7718  005AC4  C003  FFDF         	movff	memset@c,indf2
  7719  005AC8  5005               	movf	memset@n^0,w,c
  7720  005ACA  240B               	addwf	memset@s^0,w,c
  7721  005ACC  6E07               	movwf	??_memset^0,c
  7722  005ACE  5006               	movf	(memset@n+1)^0,w,c
  7723  005AD0  200C               	addwfc	(memset@s+1)^0,w,c
  7724  005AD2  6E08               	movwf	(??_memset+1)^0,c
  7725  005AD4  0EFC               	movlw	252
  7726  005AD6  2407               	addwf	??_memset^0,w,c
  7727  005AD8  6ED9               	movwf	fsr2l,c
  7728  005ADA  0EFF               	movlw	255
  7729  005ADC  2008               	addwfc	(??_memset+1)^0,w,c
  7730  005ADE  6EDA               	movwf	fsr2h,c
  7731  005AE0  C003  FFDF         	movff	memset@c,indf2
  7732  005AE4  5006               	movf	(memset@n+1)^0,w,c
  7733  005AE6  E104               	bnz	i2l6123
  7734  005AE8  0E09               	movlw	9
  7735  005AEA  5C05               	subwf	memset@n^0,w,c
  7736  005AEC  A0D8               	btfss	status,0,c
  7737  005AEE  0012               	return	
  7738  005AF0                     i2l6123:
  7739  005AF0  C00B  F007         	movff	memset@s,??_memset
  7740  005AF4  C00C  F008         	movff	memset@s+1,??_memset+1
  7741  005AF8  1E07               	comf	??_memset^0,f,c
  7742  005AFA  1E08               	comf	(??_memset+1)^0,f,c
  7743  005AFC  4A07               	infsnz	??_memset^0,f,c
  7744  005AFE  2A08               	incf	(??_memset+1)^0,f,c
  7745  005B00  0E03               	movlw	3
  7746  005B02  1407               	andwf	??_memset^0,w,c
  7747  005B04  6E09               	movwf	memset@k^0,c
  7748  005B06  6A0A               	clrf	(memset@k+1)^0,c
  7749  005B08  5009               	movf	memset@k^0,w,c
  7750  005B0A  260B               	addwf	memset@s^0,f,c
  7751  005B0C  500A               	movf	(memset@k+1)^0,w,c
  7752  005B0E  220C               	addwfc	(memset@s+1)^0,f,c
  7753  005B10  5009               	movf	memset@k^0,w,c
  7754  005B12  5E05               	subwf	memset@n^0,f,c
  7755  005B14  500A               	movf	(memset@k+1)^0,w,c
  7756  005B16  5A06               	subwfb	(memset@n+1)^0,f,c
  7757  005B18  0EFC               	movlw	252
  7758  005B1A  1605               	andwf	memset@n^0,f,c
  7759  005B1C  0EFF               	movlw	255
  7760  005B1E  1606               	andwf	(memset@n+1)^0,f,c
  7761  005B20  D00B               	goto	i2l6131
  7762  005B22                     i2l6125:
  7763  005B22  C00B  FFD9         	movff	memset@s,fsr2l
  7764  005B26  C00C  FFDA         	movff	memset@s+1,fsr2h
  7765  005B2A  C003  FFDF         	movff	memset@c,indf2
  7766  005B2E  0605               	decf	memset@n^0,f,c
  7767  005B30  A0D8               	btfss	status,0,c
  7768  005B32  0606               	decf	(memset@n+1)^0,f,c
  7769  005B34  4A0B               	infsnz	memset@s^0,f,c
  7770  005B36  2A0C               	incf	(memset@s+1)^0,f,c
  7771  005B38                     i2l6131:
  7772  005B38  5005               	movf	memset@n^0,w,c
  7773  005B3A  1006               	iorwf	(memset@n+1)^0,w,c
  7774  005B3C  B4D8               	btfsc	status,2,c
  7775  005B3E  0012               	return	
  7776  005B40  D7F0               	goto	i2l6125
  7777  005B42                     __end_of_memset:
  7778                           	opt callstack 0
  7779                           
  7780 ;; *************** function _MQ_Read *****************
  7781 ;; Defined at:
  7782 ;;		line 47 in file "setting_hardaware/adc.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  values          2  106[BANK0 ] PTR 
  7785 ;;		 -> value(12), 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  res             4  112[BANK0 ] PTR 
  7788 ;;  digital         2  110[BANK0 ] int 
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7798 ;;      Params:         0       2       0       0       0       0       0
  7799 ;;      Locals:         0      10       0       0       0       0       0
  7800 ;;      Temps:          0       2       0       0       0       0       0
  7801 ;;      Totals:         0      14       0       0       0       0       0
  7802 ;;Total ram usage:       14 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    5
  7805 ;; This function calls:
  7806 ;;		_MQGetGasPercentage
  7807 ;;		___fldiv
  7808 ;;		___flmul
  7809 ;;		___xxtofl
  7810 ;; This function is called by:
  7811 ;;		_Hi_ISR
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           	psect	text40
  7816  004F30                     __ptext40:
  7817                           	opt callstack 0
  7818  004F30                     _MQ_Read:
  7819                           	opt callstack 17
  7820                           
  7821                           ;setting_hardaware/adc.c: 48:     int digital;;setting_hardaware/adc.c: 51:     ADCON0bi
      +                          ts.CHS = 1 ;
  7822                           
  7823                           ;incstack = 0
  7824  004F30  50C2               	movf	194,w,c	;volatile
  7825  004F32  0BC3               	andlw	-61
  7826  004F34  0904               	iorlw	4
  7827  004F36  6EC2               	movwf	194,c	;volatile
  7828                           
  7829                           ;setting_hardaware/adc.c: 52:     ADCON0bits.ADON = 1;
  7830  004F38  80C2               	bsf	194,0,c	;volatile
  7831                           
  7832                           ;setting_hardaware/adc.c: 53:     ADCON0bits.GO = 1;
  7833  004F3A  82C2               	bsf	194,1,c	;volatile
  7834  004F3C                     i2l159:
  7835  004F3C  B2C2               	btfsc	194,1,c	;volatile
  7836  004F3E  D7FE               	goto	i2l159
  7837                           
  7838                           ;setting_hardaware/adc.c: 55:     digital = ADRES;
  7839  004F40  CFC3 F0EE          	movff	4035,MQ_Read@digital	;volatile
  7840  004F44  CFC4 F0EF          	movff	4036,MQ_Read@digital+1	;volatile
  7841                           
  7842                           ;setting_hardaware/adc.c: 56:     double res=5.00*(1023-digital)/1023;
  7843  004F48  0E00               	movlw	0
  7844  004F4A  6E15               	movwf	___flmul@a^0,c
  7845  004F4C  0E00               	movlw	0
  7846  004F4E  6E16               	movwf	(___flmul@a+1)^0,c
  7847  004F50  0EA0               	movlw	160
  7848  004F52  6E17               	movwf	(___flmul@a+2)^0,c
  7849  004F54  0E40               	movlw	64
  7850  004F56  6E18               	movwf	(___flmul@a+3)^0,c
  7851  004F58  0EFF               	movlw	255
  7852  004F5A  0100               	movlb	0	; () banked
  7853  004F5C  6FEC               	movwf	??_MQ_Read& (0+255),b
  7854  004F5E  0E03               	movlw	3
  7855  004F60  6FED               	movwf	(??_MQ_Read+1)& (0+255),b
  7856  004F62  51EE               	movf	MQ_Read@digital& (0+255),w,b
  7857  004F64  5FEC               	subwf	??_MQ_Read& (0+255),f,b
  7858  004F66  51EF               	movf	(MQ_Read@digital+1)& (0+255),w,b
  7859  004F68  5BED               	subwfb	(??_MQ_Read+1)& (0+255),f,b
  7860  004F6A  C0EC  F001         	movff	??_MQ_Read,___xxtofl@val
  7861  004F6E  C0ED  F002         	movff	??_MQ_Read+1,___xxtofl@val+1
  7862  004F72  0E00               	movlw	0
  7863  004F74  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7864  004F76  0EFF               	movlw	-1
  7865  004F78  6E03               	movwf	(___xxtofl@val+2)^0,c
  7866  004F7A  6E04               	movwf	(___xxtofl@val+3)^0,c
  7867  004F7C  0E01               	movlw	1
  7868  004F7E  EC68  F02C         	call	___xxtofl
  7869  004F82  C001  F011         	movff	?___xxtofl,___flmul@b
  7870  004F86  C002  F012         	movff	?___xxtofl+1,___flmul@b+1
  7871  004F8A  C003  F013         	movff	?___xxtofl+2,___flmul@b+2
  7872  004F8E  C004  F014         	movff	?___xxtofl+3,___flmul@b+3
  7873  004F92  EC25  F023         	call	___flmul	;wreg free
  7874  004F96  C011  F032         	movff	?___flmul,___fldiv@b
  7875  004F9A  C012  F033         	movff	?___flmul+1,___fldiv@b+1
  7876  004F9E  C013  F034         	movff	?___flmul+2,___fldiv@b+2
  7877  004FA2  C014  F035         	movff	?___flmul+3,___fldiv@b+3
  7878  004FA6  0E00               	movlw	0
  7879  004FA8  6E36               	movwf	___fldiv@a^0,c
  7880  004FAA  0EC0               	movlw	192
  7881  004FAC  6E37               	movwf	(___fldiv@a+1)^0,c
  7882  004FAE  0E7F               	movlw	127
  7883  004FB0  6E38               	movwf	(___fldiv@a+2)^0,c
  7884  004FB2  0E44               	movlw	68
  7885  004FB4  6E39               	movwf	(___fldiv@a+3)^0,c
  7886  004FB6  EC54  F026         	call	___fldiv	;wreg free
  7887  004FBA  C032  F0F0         	movff	?___fldiv,MQ_Read@res
  7888  004FBE  C033  F0F1         	movff	?___fldiv+1,MQ_Read@res+1
  7889  004FC2  C034  F0F2         	movff	?___fldiv+2,MQ_Read@res+2
  7890  004FC6  C035  F0F3         	movff	?___fldiv+3,MQ_Read@res+3
  7891                           
  7892                           ;setting_hardaware/adc.c: 57:     lpg = MQGetGasPercentage(res/Ro,GAS_LPG);
  7893  004FCA  C0F0  F032         	movff	MQ_Read@res,___fldiv@b
  7894  004FCE  C0F1  F033         	movff	MQ_Read@res+1,___fldiv@b+1
  7895  004FD2  C0F2  F034         	movff	MQ_Read@res+2,___fldiv@b+2
  7896  004FD6  C0F3  F035         	movff	MQ_Read@res+3,___fldiv@b+3
  7897  004FDA  C293  F036         	movff	_Ro,___fldiv@a
  7898  004FDE  C294  F037         	movff	_Ro+1,___fldiv@a+1
  7899  004FE2  C295  F038         	movff	_Ro+2,___fldiv@a+2
  7900  004FE6  C296  F039         	movff	_Ro+3,___fldiv@a+3
  7901  004FEA  EC54  F026         	call	___fldiv	;wreg free
  7902  004FEE  C032  F0F4         	movff	?___fldiv,_MQ_Read$2032
  7903  004FF2  C033  F0F5         	movff	?___fldiv+1,_MQ_Read$2032+1
  7904  004FF6  C034  F0F6         	movff	?___fldiv+2,_MQ_Read$2032+2
  7905  004FFA  C035  F0F7         	movff	?___fldiv+3,_MQ_Read$2032+3
  7906                           
  7907                           ;setting_hardaware/adc.c: 57:     lpg = MQGetGasPercentage(res/Ro,GAS_LPG);
  7908  004FFE  C0F4  F0E0         	movff	_MQ_Read$2032,MQGetGasPercentage@rs_ro_ratio
  7909  005002  C0F5  F0E1         	movff	_MQ_Read$2032+1,MQGetGasPercentage@rs_ro_ratio+1
  7910  005006  C0F6  F0E2         	movff	_MQ_Read$2032+2,MQGetGasPercentage@rs_ro_ratio+2
  7911  00500A  C0F7  F0E3         	movff	_MQ_Read$2032+3,MQGetGasPercentage@rs_ro_ratio+3
  7912  00500E  C0FC  F0E4         	movff	_GAS_LPG,MQGetGasPercentage@gas_id
  7913  005012  C0FD  F0E5         	movff	_GAS_LPG+1,MQGetGasPercentage@gas_id+1
  7914  005016  EC1D  F02B         	call	_MQGetGasPercentage	;wreg free
  7915  00501A  C0E0  F218         	movff	?_MQGetGasPercentage,_lpg
  7916  00501E  C0E1  F219         	movff	?_MQGetGasPercentage+1,_lpg+1
  7917  005022  C0E2  F21A         	movff	?_MQGetGasPercentage+2,_lpg+2
  7918  005026  C0E3  F21B         	movff	?_MQGetGasPercentage+3,_lpg+3
  7919                           
  7920                           ;setting_hardaware/adc.c: 58:     co = MQGetGasPercentage(res/Ro,GAS_CO);
  7921  00502A  C0F0  F032         	movff	MQ_Read@res,___fldiv@b
  7922  00502E  C0F1  F033         	movff	MQ_Read@res+1,___fldiv@b+1
  7923  005032  C0F2  F034         	movff	MQ_Read@res+2,___fldiv@b+2
  7924  005036  C0F3  F035         	movff	MQ_Read@res+3,___fldiv@b+3
  7925  00503A  C293  F036         	movff	_Ro,___fldiv@a
  7926  00503E  C294  F037         	movff	_Ro+1,___fldiv@a+1
  7927  005042  C295  F038         	movff	_Ro+2,___fldiv@a+2
  7928  005046  C296  F039         	movff	_Ro+3,___fldiv@a+3
  7929  00504A  EC54  F026         	call	___fldiv	;wreg free
  7930  00504E  C032  F0F4         	movff	?___fldiv,_MQ_Read$2032
  7931  005052  C033  F0F5         	movff	?___fldiv+1,_MQ_Read$2032+1
  7932  005056  C034  F0F6         	movff	?___fldiv+2,_MQ_Read$2032+2
  7933  00505A  C035  F0F7         	movff	?___fldiv+3,_MQ_Read$2032+3
  7934                           
  7935                           ;setting_hardaware/adc.c: 58:     co = MQGetGasPercentage(res/Ro,GAS_CO);
  7936  00505E  C0F4  F0E0         	movff	_MQ_Read$2032,MQGetGasPercentage@rs_ro_ratio
  7937  005062  C0F5  F0E1         	movff	_MQ_Read$2032+1,MQGetGasPercentage@rs_ro_ratio+1
  7938  005066  C0F6  F0E2         	movff	_MQ_Read$2032+2,MQGetGasPercentage@rs_ro_ratio+2
  7939  00506A  C0F7  F0E3         	movff	_MQ_Read$2032+3,MQGetGasPercentage@rs_ro_ratio+3
  7940  00506E  C1FA  F0E4         	movff	_GAS_CO,MQGetGasPercentage@gas_id
  7941  005072  C1FB  F0E5         	movff	_GAS_CO+1,MQGetGasPercentage@gas_id+1
  7942  005076  EC1D  F02B         	call	_MQGetGasPercentage	;wreg free
  7943  00507A  C0E0  F214         	movff	?_MQGetGasPercentage,_co
  7944  00507E  C0E1  F215         	movff	?_MQGetGasPercentage+1,_co+1
  7945  005082  C0E2  F216         	movff	?_MQGetGasPercentage+2,_co+2
  7946  005086  C0E3  F217         	movff	?_MQGetGasPercentage+3,_co+3
  7947                           
  7948                           ;setting_hardaware/adc.c: 59:     smoke = MQGetGasPercentage(res/Ro,GAS_SMOKE);
  7949  00508A  C0F0  F032         	movff	MQ_Read@res,___fldiv@b
  7950  00508E  C0F1  F033         	movff	MQ_Read@res+1,___fldiv@b+1
  7951  005092  C0F2  F034         	movff	MQ_Read@res+2,___fldiv@b+2
  7952  005096  C0F3  F035         	movff	MQ_Read@res+3,___fldiv@b+3
  7953  00509A  C293  F036         	movff	_Ro,___fldiv@a
  7954  00509E  C294  F037         	movff	_Ro+1,___fldiv@a+1
  7955  0050A2  C295  F038         	movff	_Ro+2,___fldiv@a+2
  7956  0050A6  C296  F039         	movff	_Ro+3,___fldiv@a+3
  7957  0050AA  EC54  F026         	call	___fldiv	;wreg free
  7958  0050AE  C032  F0F4         	movff	?___fldiv,_MQ_Read$2032
  7959  0050B2  C033  F0F5         	movff	?___fldiv+1,_MQ_Read$2032+1
  7960  0050B6  C034  F0F6         	movff	?___fldiv+2,_MQ_Read$2032+2
  7961  0050BA  C035  F0F7         	movff	?___fldiv+3,_MQ_Read$2032+3
  7962                           
  7963                           ;setting_hardaware/adc.c: 59:     smoke = MQGetGasPercentage(res/Ro,GAS_SMOKE);
  7964  0050BE  C0F4  F0E0         	movff	_MQ_Read$2032,MQGetGasPercentage@rs_ro_ratio
  7965  0050C2  C0F5  F0E1         	movff	_MQ_Read$2032+1,MQGetGasPercentage@rs_ro_ratio+1
  7966  0050C6  C0F6  F0E2         	movff	_MQ_Read$2032+2,MQGetGasPercentage@rs_ro_ratio+2
  7967  0050CA  C0F7  F0E3         	movff	_MQ_Read$2032+3,MQGetGasPercentage@rs_ro_ratio+3
  7968  0050CE  C299  F0E4         	movff	_GAS_SMOKE,MQGetGasPercentage@gas_id
  7969  0050D2  C29A  F0E5         	movff	_GAS_SMOKE+1,MQGetGasPercentage@gas_id+1
  7970  0050D6  EC1D  F02B         	call	_MQGetGasPercentage	;wreg free
  7971  0050DA  C0E0  F210         	movff	?_MQGetGasPercentage,_smoke
  7972  0050DE  C0E1  F211         	movff	?_MQGetGasPercentage+1,_smoke+1
  7973  0050E2  C0E2  F212         	movff	?_MQGetGasPercentage+2,_smoke+2
  7974  0050E6  C0E3  F213         	movff	?_MQGetGasPercentage+3,_smoke+3
  7975                           
  7976                           ;setting_hardaware/adc.c: 60:     ADCON0bits.ADON = 0;
  7977  0050EA  90C2               	bcf	194,0,c	;volatile
  7978                           
  7979                           ;setting_hardaware/adc.c: 62:     values[0]=lpg;
  7980  0050EC  C0EA  FFD9         	movff	MQ_Read@values,fsr2l
  7981  0050F0  C0EB  FFDA         	movff	MQ_Read@values+1,fsr2h
  7982  0050F4  C218  FFDE         	movff	_lpg,postinc2
  7983  0050F8  C219  FFDE         	movff	_lpg+1,postinc2
  7984  0050FC  C21A  FFDE         	movff	_lpg+2,postinc2
  7985  005100  C21B  FFDE         	movff	_lpg+3,postinc2
  7986                           
  7987                           ;setting_hardaware/adc.c: 63:     values[0]=co;
  7988  005104  C0EA  FFD9         	movff	MQ_Read@values,fsr2l
  7989  005108  C0EB  FFDA         	movff	MQ_Read@values+1,fsr2h
  7990  00510C  C214  FFDE         	movff	_co,postinc2
  7991  005110  C215  FFDE         	movff	_co+1,postinc2
  7992  005114  C216  FFDE         	movff	_co+2,postinc2
  7993  005118  C217  FFDE         	movff	_co+3,postinc2
  7994                           
  7995                           ;setting_hardaware/adc.c: 64:     values[0]=smoke;
  7996  00511C  C0EA  FFD9         	movff	MQ_Read@values,fsr2l
  7997  005120  C0EB  FFDA         	movff	MQ_Read@values+1,fsr2h
  7998  005124  C210  FFDE         	movff	_smoke,postinc2
  7999  005128  C211  FFDE         	movff	_smoke+1,postinc2
  8000  00512C  C212  FFDE         	movff	_smoke+2,postinc2
  8001  005130  C213  FFDE         	movff	_smoke+3,postinc2
  8002  005134  0012               	return		;funcret
  8003  005136                     __end_of_MQ_Read:
  8004                           	opt callstack 0
  8005                           
  8006 ;; *************** function _MQGetGasPercentage *****************
  8007 ;; Defined at:
  8008 ;;		line 28 in file "setting_hardaware/adc.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  rs_ro_ratio     4   96[BANK0 ] void 
  8011 ;;  gas_id          2  100[BANK0 ] int 
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;		None
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  4   96[BANK0 ] int 
  8016 ;; Registers used:
  8017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8023 ;;      Params:         0       6       0       0       0       0       0
  8024 ;;      Locals:         0       4       0       0       0       0       0
  8025 ;;      Temps:          0       0       0       0       0       0       0
  8026 ;;      Totals:         0      10       0       0       0       0       0
  8027 ;;Total ram usage:       10 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:    4
  8030 ;; This function calls:
  8031 ;;		_MQGetPercentage
  8032 ;;		___xxtofl
  8033 ;; This function is called by:
  8034 ;;		_MQ_Read
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           	psect	text41
  8039  00563A                     __ptext41:
  8040                           	opt callstack 0
  8041  00563A                     _MQGetGasPercentage:
  8042                           	opt callstack 17
  8043                           
  8044                           ;setting_hardaware/adc.c: 29:   if ( gas_id == GAS_LPG ) {
  8045                           
  8046                           ;incstack = 0
  8047  00563A  0100               	movlb	0	; () banked
  8048  00563C  51FC               	movf	_GAS_LPG& (0+255),w,b
  8049  00563E  19E4               	xorwf	MQGetGasPercentage@gas_id& (0+255),w,b
  8050  005640  E130               	bnz	i2l10497
  8051  005642  51FD               	movf	(_GAS_LPG+1)& (0+255),w,b
  8052  005644  19E5               	xorwf	(MQGetGasPercentage@gas_id+1)& (0+255),w,b
  8053  005646  A4D8               	btfss	status,2,c
  8054  005648  D02C               	goto	i2l10497
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;setting_hardaware/adc.c: 30:      return MQGetPercentage(rs_ro_ratio,LPGCurve);
  8058  00564A  0EB7               	movlw	low _LPGCurve
  8059  00564C  6FD2               	movwf	MQGetPercentage@pcurve& (0+255),b
  8060  00564E  0E02               	movlw	high _LPGCurve
  8061  005650  6FD3               	movwf	(MQGetPercentage@pcurve+1)& (0+255),b
  8062  005652  C0E0  F0CE         	movff	MQGetGasPercentage@rs_ro_ratio,MQGetPercentage@rs_ro_ratio
  8063  005656  C0E1  F0CF         	movff	MQGetGasPercentage@rs_ro_ratio+1,MQGetPercentage@rs_ro_ratio+1
  8064  00565A  C0E2  F0D0         	movff	MQGetGasPercentage@rs_ro_ratio+2,MQGetPercentage@rs_ro_ratio+2
  8065  00565E  C0E3  F0D1         	movff	MQGetGasPercentage@rs_ro_ratio+3,MQGetPercentage@rs_ro_ratio+3
  8066  005662  EC37  F02E         	call	_MQGetPercentage	;wreg free
  8067  005666  0100               	movlb	0	; () banked
  8068  005668  C0CE  F0E6         	movff	?_MQGetPercentage,_MQGetGasPercentage$2031
  8069  00566C  C0CF  F0E7         	movff	?_MQGetPercentage+1,_MQGetGasPercentage$2031+1
  8070  005670  0E00               	movlw	0
  8071  005672  BFE7               	btfsc	(_MQGetGasPercentage$2031+1)& (0+255),7,b
  8072  005674  0EFF               	movlw	-1
  8073  005676  6FE8               	movwf	(_MQGetGasPercentage$2031+2)& (0+255),b
  8074  005678  6FE9               	movwf	(_MQGetGasPercentage$2031+3)& (0+255),b
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;setting_hardaware/adc.c: 30:      return MQGetPercentage(rs_ro_ratio,LPGCurve);
  8078  00567A  C0E6  F001         	movff	_MQGetGasPercentage$2031,___xxtofl@val
  8079  00567E  C0E7  F002         	movff	_MQGetGasPercentage$2031+1,___xxtofl@val+1
  8080  005682  C0E8  F003         	movff	_MQGetGasPercentage$2031+2,___xxtofl@val+2
  8081  005686  C0E9  F004         	movff	_MQGetGasPercentage$2031+3,___xxtofl@val+3
  8082  00568A  0E01               	movlw	1
  8083  00568C  EC68  F02C         	call	___xxtofl
  8084  005690  C001  F0E0         	movff	?___xxtofl,?_MQGetGasPercentage
  8085  005694  C002  F0E1         	movff	?___xxtofl+1,?_MQGetGasPercentage+1
  8086  005698  C003  F0E2         	movff	?___xxtofl+2,?_MQGetGasPercentage+2
  8087  00569C  C004  F0E3         	movff	?___xxtofl+3,?_MQGetGasPercentage+3
  8088  0056A0  0012               	return	
  8089  0056A2                     i2l10497:
  8090                           
  8091                           ; BSR set to: 0
  8092  0056A2  0101               	movlb	1	; () banked
  8093  0056A4  51FA               	movf	_GAS_CO& (0+255),w,b
  8094  0056A6  0100               	movlb	0	; () banked
  8095  0056A8  19E4               	xorwf	MQGetGasPercentage@gas_id& (0+255),w,b
  8096  0056AA  E132               	bnz	i2l10507
  8097  0056AC  0101               	movlb	1	; () banked
  8098  0056AE  51FB               	movf	(_GAS_CO+1)& (0+255),w,b
  8099  0056B0  0100               	movlb	0	; () banked
  8100  0056B2  19E5               	xorwf	(MQGetGasPercentage@gas_id+1)& (0+255),w,b
  8101  0056B4  A4D8               	btfss	status,2,c
  8102  0056B6  D02C               	goto	i2l10507
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;setting_hardaware/adc.c: 32:      return MQGetPercentage(rs_ro_ratio,COCurve);
  8106  0056B8  0EAB               	movlw	low _COCurve
  8107  0056BA  6FD2               	movwf	MQGetPercentage@pcurve& (0+255),b
  8108  0056BC  0E02               	movlw	high _COCurve
  8109  0056BE  6FD3               	movwf	(MQGetPercentage@pcurve+1)& (0+255),b
  8110  0056C0  C0E0  F0CE         	movff	MQGetGasPercentage@rs_ro_ratio,MQGetPercentage@rs_ro_ratio
  8111  0056C4  C0E1  F0CF         	movff	MQGetGasPercentage@rs_ro_ratio+1,MQGetPercentage@rs_ro_ratio+1
  8112  0056C8  C0E2  F0D0         	movff	MQGetGasPercentage@rs_ro_ratio+2,MQGetPercentage@rs_ro_ratio+2
  8113  0056CC  C0E3  F0D1         	movff	MQGetGasPercentage@rs_ro_ratio+3,MQGetPercentage@rs_ro_ratio+3
  8114  0056D0  EC37  F02E         	call	_MQGetPercentage	;wreg free
  8115  0056D4  0100               	movlb	0	; () banked
  8116  0056D6  C0CE  F0E6         	movff	?_MQGetPercentage,_MQGetGasPercentage$2031
  8117  0056DA  C0CF  F0E7         	movff	?_MQGetPercentage+1,_MQGetGasPercentage$2031+1
  8118  0056DE  0E00               	movlw	0
  8119  0056E0  BFE7               	btfsc	(_MQGetGasPercentage$2031+1)& (0+255),7,b
  8120  0056E2  0EFF               	movlw	-1
  8121  0056E4  6FE8               	movwf	(_MQGetGasPercentage$2031+2)& (0+255),b
  8122  0056E6  6FE9               	movwf	(_MQGetGasPercentage$2031+3)& (0+255),b
  8123                           
  8124                           ; BSR set to: 0
  8125                           ;setting_hardaware/adc.c: 32:      return MQGetPercentage(rs_ro_ratio,COCurve);
  8126  0056E8  C0E6  F001         	movff	_MQGetGasPercentage$2031,___xxtofl@val
  8127  0056EC  C0E7  F002         	movff	_MQGetGasPercentage$2031+1,___xxtofl@val+1
  8128  0056F0  C0E8  F003         	movff	_MQGetGasPercentage$2031+2,___xxtofl@val+2
  8129  0056F4  C0E9  F004         	movff	_MQGetGasPercentage$2031+3,___xxtofl@val+3
  8130  0056F8  0E01               	movlw	1
  8131  0056FA  EC68  F02C         	call	___xxtofl
  8132  0056FE  C001  F0E0         	movff	?___xxtofl,?_MQGetGasPercentage
  8133  005702  C002  F0E1         	movff	?___xxtofl+1,?_MQGetGasPercentage+1
  8134  005706  C003  F0E2         	movff	?___xxtofl+2,?_MQGetGasPercentage+2
  8135  00570A  C004  F0E3         	movff	?___xxtofl+3,?_MQGetGasPercentage+3
  8136  00570E  0012               	return	
  8137  005710                     i2l10507:
  8138                           
  8139                           ; BSR set to: 0
  8140  005710  0102               	movlb	2	; () banked
  8141  005712  5199               	movf	_GAS_SMOKE& (0+255),w,b
  8142  005714  0100               	movlb	0	; () banked
  8143  005716  19E4               	xorwf	MQGetGasPercentage@gas_id& (0+255),w,b
  8144  005718  E132               	bnz	i2l10515
  8145  00571A  0102               	movlb	2	; () banked
  8146  00571C  519A               	movf	(_GAS_SMOKE+1)& (0+255),w,b
  8147  00571E  0100               	movlb	0	; () banked
  8148  005720  19E5               	xorwf	(MQGetGasPercentage@gas_id+1)& (0+255),w,b
  8149  005722  A4D8               	btfss	status,2,c
  8150  005724  D02C               	goto	i2l10515
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;setting_hardaware/adc.c: 34:      return MQGetPercentage(rs_ro_ratio,SmokeCurve);
  8154  005726  0E9F               	movlw	low _SmokeCurve
  8155  005728  6FD2               	movwf	MQGetPercentage@pcurve& (0+255),b
  8156  00572A  0E02               	movlw	high _SmokeCurve
  8157  00572C  6FD3               	movwf	(MQGetPercentage@pcurve+1)& (0+255),b
  8158  00572E  C0E0  F0CE         	movff	MQGetGasPercentage@rs_ro_ratio,MQGetPercentage@rs_ro_ratio
  8159  005732  C0E1  F0CF         	movff	MQGetGasPercentage@rs_ro_ratio+1,MQGetPercentage@rs_ro_ratio+1
  8160  005736  C0E2  F0D0         	movff	MQGetGasPercentage@rs_ro_ratio+2,MQGetPercentage@rs_ro_ratio+2
  8161  00573A  C0E3  F0D1         	movff	MQGetGasPercentage@rs_ro_ratio+3,MQGetPercentage@rs_ro_ratio+3
  8162  00573E  EC37  F02E         	call	_MQGetPercentage	;wreg free
  8163  005742  0100               	movlb	0	; () banked
  8164  005744  C0CE  F0E6         	movff	?_MQGetPercentage,_MQGetGasPercentage$2031
  8165  005748  C0CF  F0E7         	movff	?_MQGetPercentage+1,_MQGetGasPercentage$2031+1
  8166  00574C  0E00               	movlw	0
  8167  00574E  BFE7               	btfsc	(_MQGetGasPercentage$2031+1)& (0+255),7,b
  8168  005750  0EFF               	movlw	-1
  8169  005752  6FE8               	movwf	(_MQGetGasPercentage$2031+2)& (0+255),b
  8170  005754  6FE9               	movwf	(_MQGetGasPercentage$2031+3)& (0+255),b
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;setting_hardaware/adc.c: 34:      return MQGetPercentage(rs_ro_ratio,SmokeCurve);
  8174  005756  C0E6  F001         	movff	_MQGetGasPercentage$2031,___xxtofl@val
  8175  00575A  C0E7  F002         	movff	_MQGetGasPercentage$2031+1,___xxtofl@val+1
  8176  00575E  C0E8  F003         	movff	_MQGetGasPercentage$2031+2,___xxtofl@val+2
  8177  005762  C0E9  F004         	movff	_MQGetGasPercentage$2031+3,___xxtofl@val+3
  8178  005766  0E01               	movlw	1
  8179  005768  EC68  F02C         	call	___xxtofl
  8180  00576C  C001  F0E0         	movff	?___xxtofl,?_MQGetGasPercentage
  8181  005770  C002  F0E1         	movff	?___xxtofl+1,?_MQGetGasPercentage+1
  8182  005774  C003  F0E2         	movff	?___xxtofl+2,?_MQGetGasPercentage+2
  8183  005778  C004  F0E3         	movff	?___xxtofl+3,?_MQGetGasPercentage+3
  8184  00577C  0012               	return	
  8185  00577E                     i2l10515:
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;setting_hardaware/adc.c: 36:   return 0;
  8189  00577E  0E00               	movlw	0
  8190  005780  6FE0               	movwf	?_MQGetGasPercentage& (0+255),b
  8191  005782  0E00               	movlw	0
  8192  005784  6FE1               	movwf	(?_MQGetGasPercentage+1)& (0+255),b
  8193  005786  0E00               	movlw	0
  8194  005788  6FE2               	movwf	(?_MQGetGasPercentage+2)& (0+255),b
  8195  00578A  0E00               	movlw	0
  8196  00578C  6FE3               	movwf	(?_MQGetGasPercentage+3)& (0+255),b
  8197  00578E  0012               	return		;funcret
  8198  005790                     __end_of_MQGetGasPercentage:
  8199                           	opt callstack 0
  8200                           
  8201 ;; *************** function _MQGetPercentage *****************
  8202 ;; Defined at:
  8203 ;;		line 24 in file "setting_hardaware/adc.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;  rs_ro_ratio     4   78[BANK0 ] int 
  8206 ;;  pcurve          2   82[BANK0 ] PTR 
  8207 ;;		 -> SmokeCurve(12), COCurve(12), LPGCurve(12), 
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;		None
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  2   78[BANK0 ] int 
  8212 ;; Registers used:
  8213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8219 ;;      Params:         0       6       0       0       0       0       0
  8220 ;;      Locals:         0      12       0       0       0       0       0
  8221 ;;      Temps:          0       0       0       0       0       0       0
  8222 ;;      Totals:         0      18       0       0       0       0       0
  8223 ;;Total ram usage:       18 bytes
  8224 ;; Hardware stack levels used:    1
  8225 ;; Hardware stack levels required when called:    3
  8226 ;; This function calls:
  8227 ;;		___fladd
  8228 ;;		___fldiv
  8229 ;;		___flsub
  8230 ;;		___fltol
  8231 ;;		_logf
  8232 ;;		_powf
  8233 ;; This function is called by:
  8234 ;;		_MQGetGasPercentage
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           	psect	text42
  8239  005C6E                     __ptext42:
  8240                           	opt callstack 0
  8241  005C6E                     _MQGetPercentage:
  8242                           	opt callstack 17
  8243                           
  8244                           ;setting_hardaware/adc.c: 25:   return (powf(10,(((logf(rs_ro_ratio)-pcurve[1])/pcurve[2
      +                          ]) + pcurve[0])));
  8245                           
  8246                           ;incstack = 0
  8247  005C6E  C0CE  F04B         	movff	MQGetPercentage@rs_ro_ratio,logf@x
  8248  005C72  C0CF  F04C         	movff	MQGetPercentage@rs_ro_ratio+1,logf@x+1
  8249  005C76  C0D0  F04D         	movff	MQGetPercentage@rs_ro_ratio+2,logf@x+2
  8250  005C7A  C0D1  F04E         	movff	MQGetPercentage@rs_ro_ratio+3,logf@x+3
  8251  005C7E  EC88  F01B         	call	_logf	;wreg free
  8252  005C82  C04B  F0D4         	movff	?_logf,_MQGetPercentage$2028
  8253  005C86  C04C  F0D5         	movff	?_logf+1,_MQGetPercentage$2028+1
  8254  005C8A  C04D  F0D6         	movff	?_logf+2,_MQGetPercentage$2028+2
  8255  005C8E  C04E  F0D7         	movff	?_logf+3,_MQGetPercentage$2028+3
  8256                           
  8257                           ;setting_hardaware/adc.c: 25:   return (powf(10,(((logf(rs_ro_ratio)-pcurve[1])/pcurve[2
      +                          ]) + pcurve[0])));
  8258  005C92  0100               	movlb	0	; () banked
  8259  005C94  EE20 F008          	lfsr	2,8
  8260  005C98  51D2               	movf	MQGetPercentage@pcurve& (0+255),w,b
  8261  005C9A  26D9               	addwf	fsr2l,f,c
  8262  005C9C  51D3               	movf	(MQGetPercentage@pcurve+1)& (0+255),w,b
  8263  005C9E  22DA               	addwfc	fsr2h,f,c
  8264  005CA0  CFDE F036          	movff	postinc2,___fldiv@a
  8265  005CA4  CFDE F037          	movff	postinc2,___fldiv@a+1
  8266  005CA8  CFDE F038          	movff	postinc2,___fldiv@a+2
  8267  005CAC  CFDE F039          	movff	postinc2,___fldiv@a+3
  8268  005CB0  EE20 F004          	lfsr	2,4
  8269  005CB4  51D2               	movf	MQGetPercentage@pcurve& (0+255),w,b
  8270  005CB6  26D9               	addwf	fsr2l,f,c
  8271  005CB8  51D3               	movf	(MQGetPercentage@pcurve+1)& (0+255),w,b
  8272  005CBA  22DA               	addwfc	fsr2h,f,c
  8273  005CBC  CFDE F02E          	movff	postinc2,___flsub@a
  8274  005CC0  CFDE F02F          	movff	postinc2,___flsub@a+1
  8275  005CC4  CFDE F030          	movff	postinc2,___flsub@a+2
  8276  005CC8  CFDE F031          	movff	postinc2,___flsub@a+3
  8277  005CCC  C0D4  F02A         	movff	_MQGetPercentage$2028,___flsub@b
  8278  005CD0  C0D5  F02B         	movff	_MQGetPercentage$2028+1,___flsub@b+1
  8279  005CD4  C0D6  F02C         	movff	_MQGetPercentage$2028+2,___flsub@b+2
  8280  005CD8  C0D7  F02D         	movff	_MQGetPercentage$2028+3,___flsub@b+3
  8281  005CDC  EC68  F033         	call	___flsub	;wreg free
  8282  005CE0  C02A  F032         	movff	?___flsub,___fldiv@b
  8283  005CE4  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  8284  005CE8  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  8285  005CEC  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  8286  005CF0  EC54  F026         	call	___fldiv	;wreg free
  8287  005CF4  C032  F0D8         	movff	?___fldiv,_MQGetPercentage$2029
  8288  005CF8  C033  F0D9         	movff	?___fldiv+1,_MQGetPercentage$2029+1
  8289  005CFC  C034  F0DA         	movff	?___fldiv+2,_MQGetPercentage$2029+2
  8290  005D00  C035  F0DB         	movff	?___fldiv+3,_MQGetPercentage$2029+3
  8291                           
  8292                           ;setting_hardaware/adc.c: 25:   return (powf(10,(((logf(rs_ro_ratio)-pcurve[1])/pcurve[2
      +                          ]) + pcurve[0])));
  8293  005D04  C0D2  FFD9         	movff	MQGetPercentage@pcurve,fsr2l
  8294  005D08  C0D3  FFDA         	movff	MQGetPercentage@pcurve+1,fsr2h
  8295  005D0C  CFDE F005          	movff	postinc2,___fladd@a
  8296  005D10  CFDE F006          	movff	postinc2,___fladd@a+1
  8297  005D14  CFDE F007          	movff	postinc2,___fladd@a+2
  8298  005D18  CFDE F008          	movff	postinc2,___fladd@a+3
  8299  005D1C  C0D8  F001         	movff	_MQGetPercentage$2029,___fladd@b
  8300  005D20  C0D9  F002         	movff	_MQGetPercentage$2029+1,___fladd@b+1
  8301  005D24  C0DA  F003         	movff	_MQGetPercentage$2029+2,___fladd@b+2
  8302  005D28  C0DB  F004         	movff	_MQGetPercentage$2029+3,___fladd@b+3
  8303  005D2C  ECCE  F024         	call	___fladd	;wreg free
  8304  005D30  C001  F0DC         	movff	?___fladd,_MQGetPercentage$2030
  8305  005D34  C002  F0DD         	movff	?___fladd+1,_MQGetPercentage$2030+1
  8306  005D38  C003  F0DE         	movff	?___fladd+2,_MQGetPercentage$2030+2
  8307  005D3C  C004  F0DF         	movff	?___fladd+3,_MQGetPercentage$2030+3
  8308                           
  8309                           ;setting_hardaware/adc.c: 25:   return (powf(10,(((logf(rs_ro_ratio)-pcurve[1])/pcurve[2
      +                          ]) + pcurve[0])));
  8310  005D40  C0DC  F0C6         	movff	_MQGetPercentage$2030,powf@y
  8311  005D44  C0DD  F0C7         	movff	_MQGetPercentage$2030+1,powf@y+1
  8312  005D48  C0DE  F0C8         	movff	_MQGetPercentage$2030+2,powf@y+2
  8313  005D4C  C0DF  F0C9         	movff	_MQGetPercentage$2030+3,powf@y+3
  8314  005D50  0E00               	movlw	0
  8315  005D52  0100               	movlb	0	; () banked
  8316  005D54  6FC2               	movwf	powf@x& (0+255),b
  8317  005D56  0E00               	movlw	0
  8318  005D58  6FC3               	movwf	(powf@x+1)& (0+255),b
  8319  005D5A  0E20               	movlw	32
  8320  005D5C  6FC4               	movwf	(powf@x+2)& (0+255),b
  8321  005D5E  0E41               	movlw	65
  8322  005D60  6FC5               	movwf	(powf@x+3)& (0+255),b
  8323  005D62  EC76  F003         	call	_powf	;wreg free
  8324  005D66  C0C2  F0CA         	movff	?_powf,___fltol@f1
  8325  005D6A  C0C3  F0CB         	movff	?_powf+1,___fltol@f1+1
  8326  005D6E  C0C4  F0CC         	movff	?_powf+2,___fltol@f1+2
  8327  005D72  C0C5  F0CD         	movff	?_powf+3,___fltol@f1+3
  8328  005D76  EC90  F02F         	call	___fltol	;wreg free
  8329  005D7A  C0CA  F0CE         	movff	?___fltol,?_MQGetPercentage
  8330  005D7E  C0CB  F0CF         	movff	?___fltol+1,?_MQGetPercentage+1
  8331  005D82  0012               	return		;funcret
  8332  005D84                     __end_of_MQGetPercentage:
  8333                           	opt callstack 0
  8334                           
  8335 ;; *************** function _powf *****************
  8336 ;; Defined at:
  8337 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\powf.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  x               4   66[BANK0 ] float 
  8340 ;;  y               4   70[BANK0 ] float 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;  s2              4  140[BANK1 ] float 
  8343 ;;  s_h             4  108[BANK1 ] float 
  8344 ;;  t_h             4  104[BANK1 ] float 
  8345 ;;  t_l             4   52[BANK1 ] float 
  8346 ;;  s_l             4   48[BANK1 ] float 
  8347 ;;  __xc8_float_    4  184[BANK1 ] struct .
  8348 ;;  z               4  180[BANK1 ] float 
  8349 ;;  t               4  176[BANK1 ] float 
  8350 ;;  j               4  172[BANK1 ] long 
  8351 ;;  ix              4  168[BANK1 ] long 
  8352 ;;  k               4  160[BANK1 ] long 
  8353 ;;  p_h             4  156[BANK1 ] float 
  8354 ;;  is              4  148[BANK1 ] long 
  8355 ;;  iy              4  144[BANK1 ] long 
  8356 ;;  n               4  136[BANK1 ] long 
  8357 ;;  sn              4  132[BANK1 ] float 
  8358 ;;  t1              4  128[BANK1 ] float 
  8359 ;;  hy              4  124[BANK1 ] long 
  8360 ;;  v               4  120[BANK1 ] float 
  8361 ;;  u               4  116[BANK1 ] float 
  8362 ;;  ax              4  112[BANK1 ] float 
  8363 ;;  p_l             4  100[BANK1 ] float 
  8364 ;;  hx              4   96[BANK1 ] long 
  8365 ;;  s               4   84[BANK1 ] float 
  8366 ;;  yisint          4   80[BANK1 ] long 
  8367 ;;  r               4   76[BANK1 ] float 
  8368 ;;  w               4   68[BANK1 ] float 
  8369 ;;  i               4   44[BANK1 ] long 
  8370 ;;  y1              4   40[BANK1 ] float 
  8371 ;;  z_l             4   36[BANK1 ] float 
  8372 ;;  z_h             4   32[BANK1 ] float 
  8373 ;;  t2              4   28[BANK1 ] float 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  4   66[BANK0 ] float 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8383 ;;      Params:         0       8       0       0       0       0       0
  8384 ;;      Locals:         0       0     188       0       0       0       0
  8385 ;;      Temps:          9       0       0       0       0       0       0
  8386 ;;      Totals:         9       8     188       0       0       0       0
  8387 ;;Total ram usage:      205 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    2
  8390 ;; This function calls:
  8391 ;;		___fladd
  8392 ;;		___fldiv
  8393 ;;		___flge
  8394 ;;		___flmul
  8395 ;;		___flneg
  8396 ;;		___flsub
  8397 ;;		___xxtofl
  8398 ;;		_fabsf
  8399 ;;		_scalbnf
  8400 ;;		_sqrtf
  8401 ;; This function is called by:
  8402 ;;		_MQGetPercentage
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           	psect	text43
  8407  0006EC                     __ptext43:
  8408                           	opt callstack 0
  8409  0006EC                     _powf:
  8410                           	opt callstack 17
  8411                           
  8412                           ;incstack = 0
  8413  0006EC  C0C2  F1B8         	movff	powf@x,powf@__xc8_float_word
  8414  0006F0  C0C3  F1B9         	movff	powf@x+1,powf@__xc8_float_word+1
  8415  0006F4  C0C4  F1BA         	movff	powf@x+2,powf@__xc8_float_word+2
  8416  0006F8  C0C5  F1BB         	movff	powf@x+3,powf@__xc8_float_word+3
  8417  0006FC  C1B8  F160         	movff	powf@__xc8_float_word,powf@hx
  8418  000700  C1B9  F161         	movff	powf@__xc8_float_word+1,powf@hx+1
  8419  000704  C1BA  F162         	movff	powf@__xc8_float_word+2,powf@hx+2
  8420  000708  C1BB  F163         	movff	powf@__xc8_float_word+3,powf@hx+3
  8421  00070C  C0C6  F1B8         	movff	powf@y,powf@__xc8_float_word
  8422  000710  C0C7  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  8423  000714  C0C8  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  8424  000718  C0C9  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  8425  00071C  C1B8  F17C         	movff	powf@__xc8_float_word,powf@hy
  8426  000720  C1B9  F17D         	movff	powf@__xc8_float_word+1,powf@hy+1
  8427  000724  C1BA  F17E         	movff	powf@__xc8_float_word+2,powf@hy+2
  8428  000728  C1BB  F17F         	movff	powf@__xc8_float_word+3,powf@hy+3
  8429  00072C  0EFF               	movlw	255
  8430  00072E  0101               	movlb	1	; () banked
  8431  000730  1560               	andwf	powf@hx& (0+255),w,b
  8432  000732  6FA8               	movwf	powf@ix& (0+255),b
  8433  000734  0EFF               	movlw	255
  8434  000736  1561               	andwf	(powf@hx+1)& (0+255),w,b
  8435  000738  6FA9               	movwf	(powf@ix+1)& (0+255),b
  8436  00073A  0EFF               	movlw	255
  8437  00073C  1562               	andwf	(powf@hx+2)& (0+255),w,b
  8438  00073E  6FAA               	movwf	(powf@ix+2)& (0+255),b
  8439  000740  0E7F               	movlw	127
  8440  000742  1563               	andwf	(powf@hx+3)& (0+255),w,b
  8441  000744  6FAB               	movwf	(powf@ix+3)& (0+255),b
  8442  000746  0EFF               	movlw	255
  8443  000748  157C               	andwf	powf@hy& (0+255),w,b
  8444  00074A  6F90               	movwf	powf@iy& (0+255),b
  8445  00074C  0EFF               	movlw	255
  8446  00074E  157D               	andwf	(powf@hy+1)& (0+255),w,b
  8447  000750  6F91               	movwf	(powf@iy+1)& (0+255),b
  8448  000752  0EFF               	movlw	255
  8449  000754  157E               	andwf	(powf@hy+2)& (0+255),w,b
  8450  000756  6F92               	movwf	(powf@iy+2)& (0+255),b
  8451  000758  0E7F               	movlw	127
  8452  00075A  157F               	andwf	(powf@hy+3)& (0+255),w,b
  8453  00075C  6F93               	movwf	(powf@iy+3)& (0+255),b
  8454  00075E  5190               	movf	powf@iy& (0+255),w,b
  8455  000760  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  8456  000762  1192               	iorwf	(powf@iy+2)& (0+255),w,b
  8457  000764  1193               	iorwf	(powf@iy+3)& (0+255),w,b
  8458  000766  A4D8               	btfss	status,2,c
  8459  000768  D00A               	goto	i2l9473
  8460                           
  8461                           ; BSR set to: 1
  8462  00076A  0E00               	movlw	0
  8463  00076C  0100               	movlb	0	; () banked
  8464  00076E  6FC2               	movwf	?_powf& (0+255),b
  8465  000770  0E00               	movlw	0
  8466  000772  6FC3               	movwf	(?_powf+1)& (0+255),b
  8467  000774  0E80               	movlw	128
  8468  000776  6FC4               	movwf	(?_powf+2)& (0+255),b
  8469  000778  0E3F               	movlw	63
  8470  00077A  6FC5               	movwf	(?_powf+3)& (0+255),b
  8471  00077C  0012               	return	
  8472  00077E                     i2l9473:
  8473                           
  8474                           ; BSR set to: 1
  8475  00077E  0E80               	movlw	128
  8476  000780  1962               	xorwf	(powf@hx+2)& (0+255),w,b
  8477  000782  E110               	bnz	i2l9479
  8478  000784  0E3F               	movlw	63
  8479  000786  1963               	xorwf	(powf@hx+3)& (0+255),w,b
  8480  000788  1160               	iorwf	powf@hx& (0+255),w,b
  8481  00078A  1161               	iorwf	(powf@hx+1)& (0+255),w,b
  8482  00078C  A4D8               	btfss	status,2,c
  8483  00078E  D00A               	goto	i2l9479
  8484                           
  8485                           ; BSR set to: 1
  8486  000790  0E00               	movlw	0
  8487  000792  0100               	movlb	0	; () banked
  8488  000794  6FC2               	movwf	?_powf& (0+255),b
  8489  000796  0E00               	movlw	0
  8490  000798  6FC3               	movwf	(?_powf+1)& (0+255),b
  8491  00079A  0E80               	movlw	128
  8492  00079C  6FC4               	movwf	(?_powf+2)& (0+255),b
  8493  00079E  0E3F               	movlw	63
  8494  0007A0  6FC5               	movwf	(?_powf+3)& (0+255),b
  8495  0007A2  0012               	return	
  8496  0007A4                     i2l9479:
  8497                           
  8498                           ; BSR set to: 1
  8499  0007A4  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8500  0007A6  D009               	goto	i2u1223_40
  8501  0007A8  05A8               	decf	powf@ix& (0+255),w,b
  8502  0007AA  0E00               	movlw	0
  8503  0007AC  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  8504  0007AE  0E80               	movlw	128
  8505  0007B0  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  8506  0007B2  0E7F               	movlw	127
  8507  0007B4  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  8508  0007B6  B0D8               	btfsc	status,0,c
  8509  0007B8  D00B               	goto	i2u1224_40
  8510  0007BA                     i2u1223_40:
  8511                           
  8512                           ; BSR set to: 1
  8513  0007BA  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  8514  0007BC  D024               	goto	i2l9487
  8515  0007BE  0590               	decf	powf@iy& (0+255),w,b
  8516  0007C0  0E00               	movlw	0
  8517  0007C2  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  8518  0007C4  0E80               	movlw	128
  8519  0007C6  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  8520  0007C8  0E7F               	movlw	127
  8521  0007CA  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  8522  0007CC  A0D8               	btfss	status,0,c
  8523  0007CE  D01B               	goto	i2l9487
  8524  0007D0                     i2u1224_40:
  8525                           
  8526                           ; BSR set to: 1
  8527  0007D0  C0C2  F001         	movff	powf@x,___fladd@b
  8528  0007D4  C0C3  F002         	movff	powf@x+1,___fladd@b+1
  8529  0007D8  C0C4  F003         	movff	powf@x+2,___fladd@b+2
  8530  0007DC  C0C5  F004         	movff	powf@x+3,___fladd@b+3
  8531  0007E0  C0C6  F005         	movff	powf@y,___fladd@a
  8532  0007E4  C0C7  F006         	movff	powf@y+1,___fladd@a+1
  8533  0007E8  C0C8  F007         	movff	powf@y+2,___fladd@a+2
  8534  0007EC  C0C9  F008         	movff	powf@y+3,___fladd@a+3
  8535  0007F0  ECCE  F024         	call	___fladd	;wreg free
  8536  0007F4  C001  F0C2         	movff	?___fladd,?_powf
  8537  0007F8  C002  F0C3         	movff	?___fladd+1,?_powf+1
  8538  0007FC  C003  F0C4         	movff	?___fladd+2,?_powf+2
  8539  000800  C004  F0C5         	movff	?___fladd+3,?_powf+3
  8540  000804  0012               	return	
  8541  000806                     i2l9487:
  8542                           
  8543                           ; BSR set to: 1
  8544  000806  0E00               	movlw	0
  8545  000808  6F50               	movwf	powf@yisint& (0+255),b
  8546  00080A  0E00               	movlw	0
  8547  00080C  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8548  00080E  0E00               	movlw	0
  8549  000810  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8550  000812  0E00               	movlw	0
  8551  000814  6F53               	movwf	(powf@yisint+3)& (0+255),b
  8552                           
  8553                           ; BSR set to: 1
  8554  000816  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  8555  000818  D090               	goto	i2l1336
  8556                           
  8557                           ; BSR set to: 1
  8558  00081A  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  8559  00081C  D00E               	goto	i2l9495
  8560  00081E  0E80               	movlw	128
  8561  000820  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  8562  000822  0E4B               	movlw	75
  8563  000824  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  8564  000826  A0D8               	btfss	status,0,c
  8565  000828  D008               	goto	i2l9495
  8566                           
  8567                           ; BSR set to: 1
  8568  00082A  0E02               	movlw	2
  8569  00082C  6F50               	movwf	powf@yisint& (0+255),b
  8570  00082E  0E00               	movlw	0
  8571  000830  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8572  000832  0E00               	movlw	0
  8573  000834  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8574  000836  0E00               	movlw	0
  8575  000838  D07F               	goto	L7
  8576  00083A                     i2l9495:
  8577                           
  8578                           ; BSR set to: 1
  8579  00083A  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  8580  00083C  D07E               	goto	i2l1336
  8581  00083E  0E80               	movlw	128
  8582  000840  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  8583  000842  0E3F               	movlw	63
  8584  000844  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  8585  000846  A0D8               	btfss	status,0,c
  8586  000848  D078               	goto	i2l1336
  8587                           
  8588                           ; BSR set to: 1
  8589  00084A  0E17               	movlw	23
  8590  00084C  6E6F               	movwf	??_powf^0,c
  8591  00084E  C190  F070         	movff	powf@iy,??_powf+1
  8592  000852  C191  F071         	movff	powf@iy+1,??_powf+2
  8593  000856  C192  F072         	movff	powf@iy+2,??_powf+3
  8594  00085A  C193  F073         	movff	powf@iy+3,??_powf+4
  8595  00085E                     i2u1228_45:
  8596  00085E  666F               	tstfsz	??_powf^0,c
  8597  000860  D001               	goto	i2u1228_46
  8598  000862  D007               	goto	i2u1228_47
  8599  000864                     i2u1228_46:
  8600  000864  3473               	rlcf	(??_powf+4)^0,w,c
  8601  000866  3273               	rrcf	(??_powf+4)^0,f,c
  8602  000868  3272               	rrcf	(??_powf+3)^0,f,c
  8603  00086A  3271               	rrcf	(??_powf+2)^0,f,c
  8604  00086C  3270               	rrcf	(??_powf+1)^0,f,c
  8605  00086E  2E6F               	decfsz	??_powf^0,f,c
  8606  000870  D7F6               	goto	i2u1228_45
  8607  000872                     i2u1228_47:
  8608  000872  0E81               	movlw	129
  8609  000874  2470               	addwf	(??_powf+1)^0,w,c
  8610  000876  0101               	movlb	1	; () banked
  8611  000878  6FA0               	movwf	powf@k& (0+255),b
  8612  00087A  0EFF               	movlw	255
  8613  00087C  2071               	addwfc	(??_powf+2)^0,w,c
  8614  00087E  6FA1               	movwf	(powf@k+1)& (0+255),b
  8615  000880  0EFF               	movlw	255
  8616  000882  2072               	addwfc	(??_powf+3)^0,w,c
  8617  000884  6FA2               	movwf	(powf@k+2)& (0+255),b
  8618  000886  0EFF               	movlw	255
  8619  000888  2073               	addwfc	(??_powf+4)^0,w,c
  8620  00088A  6FA3               	movwf	(powf@k+3)& (0+255),b
  8621  00088C  51A0               	movf	powf@k& (0+255),w,b
  8622  00088E  0817               	sublw	23
  8623  000890  6E6F               	movwf	??_powf^0,c
  8624  000892  C190  F070         	movff	powf@iy,??_powf+1
  8625  000896  C191  F071         	movff	powf@iy+1,??_powf+2
  8626  00089A  C192  F072         	movff	powf@iy+2,??_powf+3
  8627  00089E  C193  F073         	movff	powf@iy+3,??_powf+4
  8628  0008A2                     i2u1229_45:
  8629  0008A2  666F               	tstfsz	??_powf^0,c
  8630  0008A4  D001               	goto	i2u1229_46
  8631  0008A6  D007               	goto	i2u1229_47
  8632  0008A8                     i2u1229_46:
  8633  0008A8  3473               	rlcf	(??_powf+4)^0,w,c
  8634  0008AA  3273               	rrcf	(??_powf+4)^0,f,c
  8635  0008AC  3272               	rrcf	(??_powf+3)^0,f,c
  8636  0008AE  3271               	rrcf	(??_powf+2)^0,f,c
  8637  0008B0  3270               	rrcf	(??_powf+1)^0,f,c
  8638  0008B2  2E6F               	decfsz	??_powf^0,f,c
  8639  0008B4  D7F6               	goto	i2u1229_45
  8640  0008B6                     i2u1229_47:
  8641  0008B6  C070  F1AC         	movff	??_powf+1,powf@j
  8642  0008BA  C071  F1AD         	movff	??_powf+2,powf@j+1
  8643  0008BE  C072  F1AE         	movff	??_powf+3,powf@j+2
  8644  0008C2  C073  F1AF         	movff	??_powf+4,powf@j+3
  8645  0008C6  0101               	movlb	1	; () banked
  8646  0008C8  51A0               	movf	powf@k& (0+255),w,b
  8647  0008CA  0817               	sublw	23
  8648  0008CC  6E6F               	movwf	??_powf^0,c
  8649  0008CE  C1AC  F070         	movff	powf@j,??_powf+1
  8650  0008D2  C1AD  F071         	movff	powf@j+1,??_powf+2
  8651  0008D6  C1AE  F072         	movff	powf@j+2,??_powf+3
  8652  0008DA  C1AF  F073         	movff	powf@j+3,??_powf+4
  8653  0008DE  2A6F               	incf	??_powf^0,f,c
  8654  0008E0  D005               	goto	i2u1230_40
  8655  0008E2                     i2u1230_45:
  8656  0008E2  90D8               	bcf	status,0,c
  8657  0008E4  3670               	rlcf	(??_powf+1)^0,f,c
  8658  0008E6  3671               	rlcf	(??_powf+2)^0,f,c
  8659  0008E8  3672               	rlcf	(??_powf+3)^0,f,c
  8660  0008EA  3673               	rlcf	(??_powf+4)^0,f,c
  8661  0008EC                     i2u1230_40:
  8662  0008EC  2E6F               	decfsz	??_powf^0,f,c
  8663  0008EE  D7F9               	goto	i2u1230_45
  8664  0008F0  5190               	movf	powf@iy& (0+255),w,b
  8665  0008F2  1870               	xorwf	(??_powf+1)^0,w,c
  8666  0008F4  E122               	bnz	i2l1336
  8667  0008F6  5191               	movf	(powf@iy+1)& (0+255),w,b
  8668  0008F8  1871               	xorwf	(??_powf+2)^0,w,c
  8669  0008FA  E11F               	bnz	i2l1336
  8670  0008FC  5192               	movf	(powf@iy+2)& (0+255),w,b
  8671  0008FE  1872               	xorwf	(??_powf+3)^0,w,c
  8672  000900  E11C               	bnz	i2l1336
  8673  000902  5193               	movf	(powf@iy+3)& (0+255),w,b
  8674  000904  1873               	xorwf	(??_powf+4)^0,w,c
  8675  000906  A4D8               	btfss	status,2,c
  8676  000908  D018               	goto	i2l1336
  8677                           
  8678                           ; BSR set to: 1
  8679  00090A  0E01               	movlw	1
  8680  00090C  15AC               	andwf	powf@j& (0+255),w,b
  8681  00090E  6E6F               	movwf	??_powf^0,c
  8682  000910  0E00               	movlw	0
  8683  000912  15AD               	andwf	(powf@j+1)& (0+255),w,b
  8684  000914  6E70               	movwf	(??_powf+1)^0,c
  8685  000916  0E00               	movlw	0
  8686  000918  15AE               	andwf	(powf@j+2)& (0+255),w,b
  8687  00091A  6E71               	movwf	(??_powf+2)^0,c
  8688  00091C  0E00               	movlw	0
  8689  00091E  15AF               	andwf	(powf@j+3)& (0+255),w,b
  8690  000920  6E72               	movwf	(??_powf+3)^0,c
  8691  000922  506F               	movf	??_powf^0,w,c
  8692  000924  0802               	sublw	2
  8693  000926  6F50               	movwf	powf@yisint& (0+255),b
  8694  000928  0E00               	movlw	0
  8695  00092A  5470               	subfwb	(??_powf+1)^0,w,c
  8696  00092C  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8697  00092E  0E00               	movlw	0
  8698  000930  5471               	subfwb	(??_powf+2)^0,w,c
  8699  000932  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8700  000934  0E00               	movlw	0
  8701  000936  5472               	subfwb	(??_powf+3)^0,w,c
  8702  000938                     L7:
  8703  000938  6F53               	movwf	(powf@yisint+3)& (0+255),b
  8704  00093A                     i2l1336:
  8705                           
  8706                           ; BSR set to: 1
  8707  00093A  0E80               	movlw	128
  8708  00093C  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  8709  00093E  E158               	bnz	i2l9525
  8710  000940  0E7F               	movlw	127
  8711  000942  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  8712  000944  1190               	iorwf	powf@iy& (0+255),w,b
  8713  000946  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  8714  000948  A4D8               	btfss	status,2,c
  8715  00094A  D052               	goto	i2l9525
  8716                           
  8717                           ; BSR set to: 1
  8718  00094C  0E80               	movlw	128
  8719  00094E  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8720  000950  E110               	bnz	i2l9509
  8721  000952  0E3F               	movlw	63
  8722  000954  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8723  000956  11A8               	iorwf	powf@ix& (0+255),w,b
  8724  000958  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8725  00095A  A4D8               	btfss	status,2,c
  8726  00095C  D00A               	goto	i2l9509
  8727                           
  8728                           ; BSR set to: 1
  8729  00095E  0E00               	movlw	0
  8730  000960  0100               	movlb	0	; () banked
  8731  000962  6FC2               	movwf	?_powf& (0+255),b
  8732  000964  0E00               	movlw	0
  8733  000966  6FC3               	movwf	(?_powf+1)& (0+255),b
  8734  000968  0E80               	movlw	128
  8735  00096A  6FC4               	movwf	(?_powf+2)& (0+255),b
  8736  00096C  0E3F               	movlw	63
  8737  00096E  6FC5               	movwf	(?_powf+3)& (0+255),b
  8738  000970  0012               	return	
  8739  000972                     i2l9509:
  8740                           
  8741                           ; BSR set to: 1
  8742  000972  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8743  000974  D01E               	goto	i2l9517
  8744  000976  05A8               	decf	powf@ix& (0+255),w,b
  8745  000978  0E00               	movlw	0
  8746  00097A  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  8747  00097C  0E80               	movlw	128
  8748  00097E  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  8749  000980  0E3F               	movlw	63
  8750  000982  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  8751  000984  A0D8               	btfss	status,0,c
  8752  000986  D015               	goto	i2l9517
  8753                           
  8754                           ; BSR set to: 1
  8755  000988  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  8756  00098A  D00A               	goto	i2l1346
  8757                           
  8758                           ; BSR set to: 1
  8759  00098C  0E00               	movlw	0
  8760  00098E  0100               	movlb	0	; () banked
  8761  000990  6FC2               	movwf	?_powf& (0+255),b
  8762  000992  0E00               	movlw	0
  8763  000994  6FC3               	movwf	(?_powf+1)& (0+255),b
  8764  000996  0E00               	movlw	0
  8765  000998  6FC4               	movwf	(?_powf+2)& (0+255),b
  8766  00099A  0E00               	movlw	0
  8767  00099C  6FC5               	movwf	(?_powf+3)& (0+255),b
  8768  00099E  0012               	return	
  8769  0009A0                     i2l1346:
  8770                           
  8771                           ; BSR set to: 1
  8772  0009A0  C0C6  F0C2         	movff	powf@y,?_powf
  8773  0009A4  C0C7  F0C3         	movff	powf@y+1,?_powf+1
  8774  0009A8  C0C8  F0C4         	movff	powf@y+2,?_powf+2
  8775  0009AC  C0C9  F0C5         	movff	powf@y+3,?_powf+3
  8776  0009B0  0012               	return	
  8777  0009B2                     i2l9517:
  8778                           
  8779                           ; BSR set to: 1
  8780  0009B2  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  8781  0009B4  D013               	goto	i2l9521
  8782                           
  8783                           ; BSR set to: 1
  8784  0009B6  C0C6  F001         	movff	powf@y,___flneg@f1
  8785  0009BA  C0C7  F002         	movff	powf@y+1,___flneg@f1+1
  8786  0009BE  C0C8  F003         	movff	powf@y+2,___flneg@f1+2
  8787  0009C2  C0C9  F004         	movff	powf@y+3,___flneg@f1+3
  8788  0009C6  EC7D  F034         	call	___flneg	;wreg free
  8789  0009CA  C001  F0C2         	movff	?___flneg,?_powf
  8790  0009CE  C002  F0C3         	movff	?___flneg+1,?_powf+1
  8791  0009D2  C003  F0C4         	movff	?___flneg+2,?_powf+2
  8792  0009D6  C004  F0C5         	movff	?___flneg+3,?_powf+3
  8793  0009DA  0012               	return	
  8794  0009DC                     i2l9521:
  8795                           
  8796                           ; BSR set to: 1
  8797  0009DC  0E00               	movlw	0
  8798  0009DE  0100               	movlb	0	; () banked
  8799  0009E0  6FC2               	movwf	?_powf& (0+255),b
  8800  0009E2  0E00               	movlw	0
  8801  0009E4  6FC3               	movwf	(?_powf+1)& (0+255),b
  8802  0009E6  0E00               	movlw	0
  8803  0009E8  6FC4               	movwf	(?_powf+2)& (0+255),b
  8804  0009EA  0E00               	movlw	0
  8805  0009EC  6FC5               	movwf	(?_powf+3)& (0+255),b
  8806  0009EE  0012               	return	
  8807  0009F0                     i2l9525:
  8808                           
  8809                           ; BSR set to: 1
  8810  0009F0  0E80               	movlw	128
  8811  0009F2  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  8812  0009F4  E12C               	bnz	i2l9531
  8813  0009F6  0E3F               	movlw	63
  8814  0009F8  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  8815  0009FA  1190               	iorwf	powf@iy& (0+255),w,b
  8816  0009FC  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  8817  0009FE  A4D8               	btfss	status,2,c
  8818  000A00  D026               	goto	i2l9531
  8819                           
  8820                           ; BSR set to: 1
  8821  000A02  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  8822  000A04  D01B               	goto	i2l1356
  8823                           
  8824                           ; BSR set to: 1
  8825  000A06  0E00               	movlw	0
  8826  000A08  6E32               	movwf	___fldiv@b^0,c
  8827  000A0A  0E00               	movlw	0
  8828  000A0C  6E33               	movwf	(___fldiv@b+1)^0,c
  8829  000A0E  0E80               	movlw	128
  8830  000A10  6E34               	movwf	(___fldiv@b+2)^0,c
  8831  000A12  0E3F               	movlw	63
  8832  000A14  6E35               	movwf	(___fldiv@b+3)^0,c
  8833  000A16  C0C2  F036         	movff	powf@x,___fldiv@a
  8834  000A1A  C0C3  F037         	movff	powf@x+1,___fldiv@a+1
  8835  000A1E  C0C4  F038         	movff	powf@x+2,___fldiv@a+2
  8836  000A22  C0C5  F039         	movff	powf@x+3,___fldiv@a+3
  8837  000A26  EC54  F026         	call	___fldiv	;wreg free
  8838  000A2A  C032  F0C2         	movff	?___fldiv,?_powf
  8839  000A2E  C033  F0C3         	movff	?___fldiv+1,?_powf+1
  8840  000A32  C034  F0C4         	movff	?___fldiv+2,?_powf+2
  8841  000A36  C035  F0C5         	movff	?___fldiv+3,?_powf+3
  8842  000A3A  0012               	return	
  8843  000A3C                     i2l1356:
  8844                           
  8845                           ; BSR set to: 1
  8846  000A3C  C0C2  F0C2         	movff	powf@x,?_powf
  8847  000A40  C0C3  F0C3         	movff	powf@x+1,?_powf+1
  8848  000A44  C0C4  F0C4         	movff	powf@x+2,?_powf+2
  8849  000A48  C0C5  F0C5         	movff	powf@x+3,?_powf+3
  8850  000A4C  0012               	return	
  8851  000A4E                     i2l9531:
  8852                           
  8853                           ; BSR set to: 1
  8854  000A4E  0E40               	movlw	64
  8855  000A50  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  8856  000A52  117C               	iorwf	powf@hy& (0+255),w,b
  8857  000A54  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  8858  000A56  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  8859  000A58  A4D8               	btfss	status,2,c
  8860  000A5A  D01B               	goto	i2l9537
  8861                           
  8862                           ; BSR set to: 1
  8863  000A5C  C0C2  F011         	movff	powf@x,___flmul@b
  8864  000A60  C0C3  F012         	movff	powf@x+1,___flmul@b+1
  8865  000A64  C0C4  F013         	movff	powf@x+2,___flmul@b+2
  8866  000A68  C0C5  F014         	movff	powf@x+3,___flmul@b+3
  8867  000A6C  C0C2  F015         	movff	powf@x,___flmul@a
  8868  000A70  C0C3  F016         	movff	powf@x+1,___flmul@a+1
  8869  000A74  C0C4  F017         	movff	powf@x+2,___flmul@a+2
  8870  000A78  C0C5  F018         	movff	powf@x+3,___flmul@a+3
  8871  000A7C  EC25  F023         	call	___flmul	;wreg free
  8872  000A80  C011  F0C2         	movff	?___flmul,?_powf
  8873  000A84  C012  F0C3         	movff	?___flmul+1,?_powf+1
  8874  000A88  C013  F0C4         	movff	?___flmul+2,?_powf+2
  8875  000A8C  C014  F0C5         	movff	?___flmul+3,?_powf+3
  8876  000A90  0012               	return	
  8877  000A92                     i2l9537:
  8878                           
  8879                           ; BSR set to: 1
  8880  000A92  0E3F               	movlw	63
  8881  000A94  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  8882  000A96  117C               	iorwf	powf@hy& (0+255),w,b
  8883  000A98  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  8884  000A9A  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  8885  000A9C  B4D8               	btfsc	status,2,c
  8886                           
  8887                           ; BSR set to: 1
  8888  000A9E  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  8889  000AA0  D013               	goto	i2l9545
  8890                           
  8891                           ; BSR set to: 1
  8892  000AA2  C0C2  F03E         	movff	powf@x,sqrtf@x
  8893  000AA6  C0C3  F03F         	movff	powf@x+1,sqrtf@x+1
  8894  000AAA  C0C4  F040         	movff	powf@x+2,sqrtf@x+2
  8895  000AAE  C0C5  F041         	movff	powf@x+3,sqrtf@x+3
  8896  000AB2  EC01  F01F         	call	_sqrtf	;wreg free
  8897  000AB6  C03E  F0C2         	movff	?_sqrtf,?_powf
  8898  000ABA  C03F  F0C3         	movff	?_sqrtf+1,?_powf+1
  8899  000ABE  C040  F0C4         	movff	?_sqrtf+2,?_powf+2
  8900  000AC2  C041  F0C5         	movff	?_sqrtf+3,?_powf+3
  8901  000AC6  0012               	return	
  8902  000AC8                     i2l9545:
  8903                           
  8904                           ; BSR set to: 1
  8905  000AC8  C0C2  F001         	movff	powf@x,fabsf@x
  8906  000ACC  C0C3  F002         	movff	powf@x+1,fabsf@x+1
  8907  000AD0  C0C4  F003         	movff	powf@x+2,fabsf@x+2
  8908  000AD4  C0C5  F004         	movff	powf@x+3,fabsf@x+3
  8909  000AD8  EC03  F034         	call	_fabsf	;wreg free
  8910  000ADC  C001  F170         	movff	?_fabsf,powf@ax
  8911  000AE0  C002  F171         	movff	?_fabsf+1,powf@ax+1
  8912  000AE4  C003  F172         	movff	?_fabsf+2,powf@ax+2
  8913  000AE8  C004  F173         	movff	?_fabsf+3,powf@ax+3
  8914  000AEC  0E80               	movlw	128
  8915  000AEE  0101               	movlb	1	; () banked
  8916  000AF0  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8917  000AF2  E106               	bnz	i2u1242_40
  8918  000AF4  0E7F               	movlw	127
  8919  000AF6  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8920  000AF8  11A8               	iorwf	powf@ix& (0+255),w,b
  8921  000AFA  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8922  000AFC  B4D8               	btfsc	status,2,c
  8923  000AFE  D00F               	goto	i2u1244_40
  8924  000B00                     i2u1242_40:
  8925                           
  8926                           ; BSR set to: 1
  8927  000B00  51A8               	movf	powf@ix& (0+255),w,b
  8928  000B02  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8929  000B04  11AA               	iorwf	(powf@ix+2)& (0+255),w,b
  8930  000B06  11AB               	iorwf	(powf@ix+3)& (0+255),w,b
  8931  000B08  B4D8               	btfsc	status,2,c
  8932  000B0A  D009               	goto	i2u1244_40
  8933                           
  8934                           ; BSR set to: 1
  8935  000B0C  0E80               	movlw	128
  8936  000B0E  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8937  000B10  E105               	bnz	i2u1244_41
  8938  000B12  0E3F               	movlw	63
  8939  000B14  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8940  000B16  11A8               	iorwf	powf@ix& (0+255),w,b
  8941  000B18  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8942  000B1A  A4D8               	btfss	status,2,c
  8943  000B1C                     i2u1244_41:
  8944  000B1C  D0A5               	goto	i2l9571
  8945  000B1E                     i2u1244_40:
  8946                           
  8947                           ; BSR set to: 1
  8948  000B1E  C170  F1B4         	movff	powf@ax,powf@z
  8949  000B22  C171  F1B5         	movff	powf@ax+1,powf@z+1
  8950  000B26  C172  F1B6         	movff	powf@ax+2,powf@z+2
  8951  000B2A  C173  F1B7         	movff	powf@ax+3,powf@z+3
  8952                           
  8953                           ; BSR set to: 1
  8954  000B2E  AF7F               	btfss	(powf@hy+3)& (0+255),7,b
  8955  000B30  D01A               	goto	i2l9557
  8956                           
  8957                           ; BSR set to: 1
  8958  000B32  0E00               	movlw	0
  8959  000B34  6E32               	movwf	___fldiv@b^0,c
  8960  000B36  0E00               	movlw	0
  8961  000B38  6E33               	movwf	(___fldiv@b+1)^0,c
  8962  000B3A  0E80               	movlw	128
  8963  000B3C  6E34               	movwf	(___fldiv@b+2)^0,c
  8964  000B3E  0E3F               	movlw	63
  8965  000B40  6E35               	movwf	(___fldiv@b+3)^0,c
  8966  000B42  C1B4  F036         	movff	powf@z,___fldiv@a
  8967  000B46  C1B5  F037         	movff	powf@z+1,___fldiv@a+1
  8968  000B4A  C1B6  F038         	movff	powf@z+2,___fldiv@a+2
  8969  000B4E  C1B7  F039         	movff	powf@z+3,___fldiv@a+3
  8970  000B52  EC54  F026         	call	___fldiv	;wreg free
  8971  000B56  C032  F1B4         	movff	?___fldiv,powf@z
  8972  000B5A  C033  F1B5         	movff	?___fldiv+1,powf@z+1
  8973  000B5E  C034  F1B6         	movff	?___fldiv+2,powf@z+2
  8974  000B62  C035  F1B7         	movff	?___fldiv+3,powf@z+3
  8975  000B66                     i2l9557:
  8976  000B66  0101               	movlb	1	; () banked
  8977  000B68  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  8978  000B6A  D075               	goto	i2l9567
  8979                           
  8980                           ; BSR set to: 1
  8981  000B6C  0E00               	movlw	0
  8982  000B6E  25A8               	addwf	powf@ix& (0+255),w,b
  8983  000B70  6E6F               	movwf	??_powf^0,c
  8984  000B72  0E00               	movlw	0
  8985  000B74  21A9               	addwfc	(powf@ix+1)& (0+255),w,b
  8986  000B76  6E70               	movwf	(??_powf+1)^0,c
  8987  000B78  0E80               	movlw	128
  8988  000B7A  21AA               	addwfc	(powf@ix+2)& (0+255),w,b
  8989  000B7C  6E71               	movwf	(??_powf+2)^0,c
  8990  000B7E  0EC0               	movlw	192
  8991  000B80  21AB               	addwfc	(powf@ix+3)& (0+255),w,b
  8992  000B82  6E72               	movwf	(??_powf+3)^0,c
  8993  000B84  5150               	movf	powf@yisint& (0+255),w,b
  8994  000B86  106F               	iorwf	??_powf^0,w,c
  8995  000B88  6E73               	movwf	(??_powf+4)^0,c
  8996  000B8A  5151               	movf	(powf@yisint+1)& (0+255),w,b
  8997  000B8C  1070               	iorwf	(??_powf+1)^0,w,c
  8998  000B8E  6E74               	movwf	(??_powf+5)^0,c
  8999  000B90  5152               	movf	(powf@yisint+2)& (0+255),w,b
  9000  000B92  1071               	iorwf	(??_powf+2)^0,w,c
  9001  000B94  6E75               	movwf	(??_powf+6)^0,c
  9002  000B96  5153               	movf	(powf@yisint+3)& (0+255),w,b
  9003  000B98  1072               	iorwf	(??_powf+3)^0,w,c
  9004  000B9A  6E76               	movwf	(??_powf+7)^0,c
  9005  000B9C  5073               	movf	(??_powf+4)^0,w,c
  9006  000B9E  1074               	iorwf	(??_powf+5)^0,w,c
  9007  000BA0  1075               	iorwf	(??_powf+6)^0,w,c
  9008  000BA2  1076               	iorwf	(??_powf+7)^0,w,c
  9009  000BA4  A4D8               	btfss	status,2,c
  9010  000BA6  D03F               	goto	i2l9563
  9011                           
  9012                           ; BSR set to: 1
  9013  000BA8  C1B4  F02E         	movff	powf@z,___flsub@a
  9014  000BAC  C1B5  F02F         	movff	powf@z+1,___flsub@a+1
  9015  000BB0  C1B6  F030         	movff	powf@z+2,___flsub@a+2
  9016  000BB4  C1B7  F031         	movff	powf@z+3,___flsub@a+3
  9017  000BB8  C1B4  F02A         	movff	powf@z,___flsub@b
  9018  000BBC  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
  9019  000BC0  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
  9020  000BC4  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
  9021  000BC8  EC68  F033         	call	___flsub	;wreg free
  9022  000BCC  C02A  F032         	movff	?___flsub,___fldiv@b
  9023  000BD0  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  9024  000BD4  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  9025  000BD8  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  9026  000BDC  C1B4  F02E         	movff	powf@z,___flsub@a
  9027  000BE0  C1B5  F02F         	movff	powf@z+1,___flsub@a+1
  9028  000BE4  C1B6  F030         	movff	powf@z+2,___flsub@a+2
  9029  000BE8  C1B7  F031         	movff	powf@z+3,___flsub@a+3
  9030  000BEC  C1B4  F02A         	movff	powf@z,___flsub@b
  9031  000BF0  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
  9032  000BF4  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
  9033  000BF8  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
  9034  000BFC  EC68  F033         	call	___flsub	;wreg free
  9035  000C00  C02A  F036         	movff	?___flsub,___fldiv@a
  9036  000C04  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  9037  000C08  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  9038  000C0C  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  9039  000C10  EC54  F026         	call	___fldiv	;wreg free
  9040  000C14  C032  F1B4         	movff	?___fldiv,powf@z
  9041  000C18  C033  F1B5         	movff	?___fldiv+1,powf@z+1
  9042  000C1C  C034  F1B6         	movff	?___fldiv+2,powf@z+2
  9043  000C20  C035  F1B7         	movff	?___fldiv+3,powf@z+3
  9044  000C24  D018               	goto	i2l9567
  9045  000C26                     i2l9563:
  9046                           
  9047                           ; BSR set to: 1
  9048  000C26  0550               	decf	powf@yisint& (0+255),w,b
  9049  000C28  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  9050  000C2A  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  9051  000C2C  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  9052  000C2E  A4D8               	btfss	status,2,c
  9053  000C30  D012               	goto	i2l9567
  9054                           
  9055                           ; BSR set to: 1
  9056  000C32  C1B4  F001         	movff	powf@z,___flneg@f1
  9057  000C36  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  9058  000C3A  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  9059  000C3E  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  9060  000C42  EC7D  F034         	call	___flneg	;wreg free
  9061  000C46  C001  F1B4         	movff	?___flneg,powf@z
  9062  000C4A  C002  F1B5         	movff	?___flneg+1,powf@z+1
  9063  000C4E  C003  F1B6         	movff	?___flneg+2,powf@z+2
  9064  000C52  C004  F1B7         	movff	?___flneg+3,powf@z+3
  9065  000C56                     i2l9567:
  9066  000C56  C1B4  F0C2         	movff	powf@z,?_powf
  9067  000C5A  C1B5  F0C3         	movff	powf@z+1,?_powf+1
  9068  000C5E  C1B6  F0C4         	movff	powf@z+2,?_powf+2
  9069  000C62  C1B7  F0C5         	movff	powf@z+3,?_powf+3
  9070  000C66  0012               	return	
  9071  000C68                     i2l9571:
  9072                           
  9073                           ; BSR set to: 1
  9074  000C68  0E00               	movlw	0
  9075  000C6A  6F84               	movwf	powf@sn& (0+255),b
  9076  000C6C  0E00               	movlw	0
  9077  000C6E  6F85               	movwf	(powf@sn+1)& (0+255),b
  9078  000C70  0E80               	movlw	128
  9079  000C72  6F86               	movwf	(powf@sn+2)& (0+255),b
  9080  000C74  0E3F               	movlw	63
  9081  000C76  6F87               	movwf	(powf@sn+3)& (0+255),b
  9082                           
  9083                           ; BSR set to: 1
  9084  000C78  AF63               	btfss	(powf@hx+3)& (0+255),7,b
  9085  000C7A  D053               	goto	i2l9585
  9086                           
  9087                           ; BSR set to: 1
  9088  000C7C  5150               	movf	powf@yisint& (0+255),w,b
  9089  000C7E  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  9090  000C80  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  9091  000C82  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  9092  000C84  A4D8               	btfss	status,2,c
  9093  000C86  D03F               	goto	i2l9581
  9094                           
  9095                           ; BSR set to: 1
  9096  000C88  C0C2  F02E         	movff	powf@x,___flsub@a
  9097  000C8C  C0C3  F02F         	movff	powf@x+1,___flsub@a+1
  9098  000C90  C0C4  F030         	movff	powf@x+2,___flsub@a+2
  9099  000C94  C0C5  F031         	movff	powf@x+3,___flsub@a+3
  9100  000C98  C0C2  F02A         	movff	powf@x,___flsub@b
  9101  000C9C  C0C3  F02B         	movff	powf@x+1,___flsub@b+1
  9102  000CA0  C0C4  F02C         	movff	powf@x+2,___flsub@b+2
  9103  000CA4  C0C5  F02D         	movff	powf@x+3,___flsub@b+3
  9104  000CA8  EC68  F033         	call	___flsub	;wreg free
  9105  000CAC  C02A  F032         	movff	?___flsub,___fldiv@b
  9106  000CB0  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  9107  000CB4  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  9108  000CB8  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  9109  000CBC  C0C2  F02E         	movff	powf@x,___flsub@a
  9110  000CC0  C0C3  F02F         	movff	powf@x+1,___flsub@a+1
  9111  000CC4  C0C4  F030         	movff	powf@x+2,___flsub@a+2
  9112  000CC8  C0C5  F031         	movff	powf@x+3,___flsub@a+3
  9113  000CCC  C0C2  F02A         	movff	powf@x,___flsub@b
  9114  000CD0  C0C3  F02B         	movff	powf@x+1,___flsub@b+1
  9115  000CD4  C0C4  F02C         	movff	powf@x+2,___flsub@b+2
  9116  000CD8  C0C5  F02D         	movff	powf@x+3,___flsub@b+3
  9117  000CDC  EC68  F033         	call	___flsub	;wreg free
  9118  000CE0  C02A  F036         	movff	?___flsub,___fldiv@a
  9119  000CE4  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  9120  000CE8  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  9121  000CEC  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  9122  000CF0  EC54  F026         	call	___fldiv	;wreg free
  9123  000CF4  C032  F0C2         	movff	?___fldiv,?_powf
  9124  000CF8  C033  F0C3         	movff	?___fldiv+1,?_powf+1
  9125  000CFC  C034  F0C4         	movff	?___fldiv+2,?_powf+2
  9126  000D00  C035  F0C5         	movff	?___fldiv+3,?_powf+3
  9127  000D04  0012               	return	
  9128  000D06                     i2l9581:
  9129                           
  9130                           ; BSR set to: 1
  9131  000D06  0550               	decf	powf@yisint& (0+255),w,b
  9132  000D08  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  9133  000D0A  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  9134  000D0C  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  9135  000D0E  A4D8               	btfss	status,2,c
  9136  000D10  D008               	goto	i2l9585
  9137                           
  9138                           ; BSR set to: 1
  9139  000D12  0E00               	movlw	0
  9140  000D14  6F84               	movwf	powf@sn& (0+255),b
  9141  000D16  0E00               	movlw	0
  9142  000D18  6F85               	movwf	(powf@sn+1)& (0+255),b
  9143  000D1A  0E80               	movlw	128
  9144  000D1C  6F86               	movwf	(powf@sn+2)& (0+255),b
  9145  000D1E  0EBF               	movlw	191
  9146  000D20  6F87               	movwf	(powf@sn+3)& (0+255),b
  9147  000D22                     i2l9585:
  9148                           
  9149                           ; BSR set to: 1
  9150  000D22  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  9151  000D24  D26B               	goto	i2l9633
  9152  000D26  0590               	decf	powf@iy& (0+255),w,b
  9153  000D28  0E00               	movlw	0
  9154  000D2A  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  9155  000D2C  0E00               	movlw	0
  9156  000D2E  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  9157  000D30  0E4D               	movlw	77
  9158  000D32  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  9159  000D34  A0D8               	btfss	status,0,c
  9160  000D36  D262               	goto	i2l9633
  9161                           
  9162                           ; BSR set to: 1
  9163  000D38  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9164  000D3A  D00A               	goto	i2u1253_40
  9165  000D3C  0EF8               	movlw	248
  9166  000D3E  5DA8               	subwf	powf@ix& (0+255),w,b
  9167  000D40  0EFF               	movlw	255
  9168  000D42  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  9169  000D44  0E7F               	movlw	127
  9170  000D46  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  9171  000D48  0E3F               	movlw	63
  9172  000D4A  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  9173  000D4C  B0D8               	btfsc	status,0,c
  9174  000D4E  D06C               	goto	i2l9597
  9175  000D50                     i2u1253_40:
  9176                           
  9177                           ; BSR set to: 1
  9178  000D50  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  9179  000D52  D035               	goto	i2l9593
  9180                           
  9181                           ; BSR set to: 1
  9182  000D54  0E60               	movlw	96
  9183  000D56  6E15               	movwf	___flmul@a^0,c
  9184  000D58  0E42               	movlw	66
  9185  000D5A  6E16               	movwf	(___flmul@a+1)^0,c
  9186  000D5C  0EA2               	movlw	162
  9187  000D5E  6E17               	movwf	(___flmul@a+2)^0,c
  9188  000D60  0E0D               	movlw	13
  9189  000D62  6E18               	movwf	(___flmul@a+3)^0,c
  9190  000D64  C184  F011         	movff	powf@sn,___flmul@b
  9191  000D68  C185  F012         	movff	powf@sn+1,___flmul@b+1
  9192  000D6C  C186  F013         	movff	powf@sn+2,___flmul@b+2
  9193  000D70  C187  F014         	movff	powf@sn+3,___flmul@b+3
  9194  000D74  EC25  F023         	call	___flmul	;wreg free
  9195  000D78  C011  F1A4         	movff	?___flmul,_powf$2038
  9196  000D7C  C012  F1A5         	movff	?___flmul+1,_powf$2038+1
  9197  000D80  C013  F1A6         	movff	?___flmul+2,_powf$2038+2
  9198  000D84  C014  F1A7         	movff	?___flmul+3,_powf$2038+3
  9199  000D88  C1A4  F011         	movff	_powf$2038,___flmul@b
  9200  000D8C  C1A5  F012         	movff	_powf$2038+1,___flmul@b+1
  9201  000D90  C1A6  F013         	movff	_powf$2038+2,___flmul@b+2
  9202  000D94  C1A7  F014         	movff	_powf$2038+3,___flmul@b+3
  9203  000D98  0E60               	movlw	96
  9204  000D9A  6E15               	movwf	___flmul@a^0,c
  9205  000D9C  0E42               	movlw	66
  9206  000D9E  6E16               	movwf	(___flmul@a+1)^0,c
  9207  000DA0  0EA2               	movlw	162
  9208  000DA2  6E17               	movwf	(___flmul@a+2)^0,c
  9209  000DA4  0E0D               	movlw	13
  9210  000DA6  6E18               	movwf	(___flmul@a+3)^0,c
  9211  000DA8  EC25  F023         	call	___flmul	;wreg free
  9212  000DAC  C011  F0C2         	movff	?___flmul,?_powf
  9213  000DB0  C012  F0C3         	movff	?___flmul+1,?_powf+1
  9214  000DB4  C013  F0C4         	movff	?___flmul+2,?_powf+2
  9215  000DB8  C014  F0C5         	movff	?___flmul+3,?_powf+3
  9216  000DBC  0012               	return	
  9217  000DBE                     i2l9593:
  9218                           
  9219                           ; BSR set to: 1
  9220  000DBE  0ECA               	movlw	202
  9221  000DC0  6E15               	movwf	___flmul@a^0,c
  9222  000DC2  0EF2               	movlw	242
  9223  000DC4  6E16               	movwf	(___flmul@a+1)^0,c
  9224  000DC6  0E49               	movlw	73
  9225  000DC8  6E17               	movwf	(___flmul@a+2)^0,c
  9226  000DCA  0E71               	movlw	113
  9227  000DCC  6E18               	movwf	(___flmul@a+3)^0,c
  9228  000DCE  C184  F011         	movff	powf@sn,___flmul@b
  9229  000DD2  C185  F012         	movff	powf@sn+1,___flmul@b+1
  9230  000DD6  C186  F013         	movff	powf@sn+2,___flmul@b+2
  9231  000DDA  C187  F014         	movff	powf@sn+3,___flmul@b+3
  9232  000DDE  EC25  F023         	call	___flmul	;wreg free
  9233  000DE2  C011  F1A4         	movff	?___flmul,_powf$2038
  9234  000DE6  C012  F1A5         	movff	?___flmul+1,_powf$2038+1
  9235  000DEA  C013  F1A6         	movff	?___flmul+2,_powf$2038+2
  9236  000DEE  C014  F1A7         	movff	?___flmul+3,_powf$2038+3
  9237  000DF2  C1A4  F011         	movff	_powf$2038,___flmul@b
  9238  000DF6  C1A5  F012         	movff	_powf$2038+1,___flmul@b+1
  9239  000DFA  C1A6  F013         	movff	_powf$2038+2,___flmul@b+2
  9240  000DFE  C1A7  F014         	movff	_powf$2038+3,___flmul@b+3
  9241  000E02  0ECA               	movlw	202
  9242  000E04  6E15               	movwf	___flmul@a^0,c
  9243  000E06  0EF2               	movlw	242
  9244  000E08  6E16               	movwf	(___flmul@a+1)^0,c
  9245  000E0A  0E49               	movlw	73
  9246  000E0C  6E17               	movwf	(___flmul@a+2)^0,c
  9247  000E0E  0E71               	movlw	113
  9248  000E10  6E18               	movwf	(___flmul@a+3)^0,c
  9249  000E12  EC25  F023         	call	___flmul	;wreg free
  9250  000E16  C011  F0C2         	movff	?___flmul,?_powf
  9251  000E1A  C012  F0C3         	movff	?___flmul+1,?_powf+1
  9252  000E1E  C013  F0C4         	movff	?___flmul+2,?_powf+2
  9253  000E22  C014  F0C5         	movff	?___flmul+3,?_powf+3
  9254  000E26  0012               	return	
  9255  000E28                     i2l9597:
  9256                           
  9257                           ; BSR set to: 1
  9258  000E28  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9259  000E2A  D07D               	goto	i2l9607
  9260  000E2C  0E08               	movlw	8
  9261  000E2E  5DA8               	subwf	powf@ix& (0+255),w,b
  9262  000E30  0E00               	movlw	0
  9263  000E32  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  9264  000E34  0E80               	movlw	128
  9265  000E36  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  9266  000E38  0E3F               	movlw	63
  9267  000E3A  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  9268  000E3C  A0D8               	btfss	status,0,c
  9269  000E3E  D073               	goto	i2l9607
  9270                           
  9271                           ; BSR set to: 1
  9272  000E40  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  9273  000E42  D007               	goto	i2u1256_40
  9274  000E44  517F               	movf	(powf@hy+3)& (0+255),w,b
  9275  000E46  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  9276  000E48  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  9277  000E4A  E138               	bnz	i2l9603
  9278  000E4C  057C               	decf	powf@hy& (0+255),w,b
  9279  000E4E  B0D8               	btfsc	status,0,c
  9280  000E50  D035               	goto	i2l9603
  9281  000E52                     i2u1256_40:
  9282                           
  9283                           ; BSR set to: 1
  9284  000E52  0E60               	movlw	96
  9285  000E54  6E15               	movwf	___flmul@a^0,c
  9286  000E56  0E42               	movlw	66
  9287  000E58  6E16               	movwf	(___flmul@a+1)^0,c
  9288  000E5A  0EA2               	movlw	162
  9289  000E5C  6E17               	movwf	(___flmul@a+2)^0,c
  9290  000E5E  0E0D               	movlw	13
  9291  000E60  6E18               	movwf	(___flmul@a+3)^0,c
  9292  000E62  C184  F011         	movff	powf@sn,___flmul@b
  9293  000E66  C185  F012         	movff	powf@sn+1,___flmul@b+1
  9294  000E6A  C186  F013         	movff	powf@sn+2,___flmul@b+2
  9295  000E6E  C187  F014         	movff	powf@sn+3,___flmul@b+3
  9296  000E72  EC25  F023         	call	___flmul	;wreg free
  9297  000E76  C011  F1A4         	movff	?___flmul,_powf$2038
  9298  000E7A  C012  F1A5         	movff	?___flmul+1,_powf$2038+1
  9299  000E7E  C013  F1A6         	movff	?___flmul+2,_powf$2038+2
  9300  000E82  C014  F1A7         	movff	?___flmul+3,_powf$2038+3
  9301  000E86  C1A4  F011         	movff	_powf$2038,___flmul@b
  9302  000E8A  C1A5  F012         	movff	_powf$2038+1,___flmul@b+1
  9303  000E8E  C1A6  F013         	movff	_powf$2038+2,___flmul@b+2
  9304  000E92  C1A7  F014         	movff	_powf$2038+3,___flmul@b+3
  9305  000E96  0E60               	movlw	96
  9306  000E98  6E15               	movwf	___flmul@a^0,c
  9307  000E9A  0E42               	movlw	66
  9308  000E9C  6E16               	movwf	(___flmul@a+1)^0,c
  9309  000E9E  0EA2               	movlw	162
  9310  000EA0  6E17               	movwf	(___flmul@a+2)^0,c
  9311  000EA2  0E0D               	movlw	13
  9312  000EA4  6E18               	movwf	(___flmul@a+3)^0,c
  9313  000EA6  EC25  F023         	call	___flmul	;wreg free
  9314  000EAA  C011  F0C2         	movff	?___flmul,?_powf
  9315  000EAE  C012  F0C3         	movff	?___flmul+1,?_powf+1
  9316  000EB2  C013  F0C4         	movff	?___flmul+2,?_powf+2
  9317  000EB6  C014  F0C5         	movff	?___flmul+3,?_powf+3
  9318  000EBA  0012               	return	
  9319  000EBC                     i2l9603:
  9320                           
  9321                           ; BSR set to: 1
  9322  000EBC  0ECA               	movlw	202
  9323  000EBE  6E15               	movwf	___flmul@a^0,c
  9324  000EC0  0EF2               	movlw	242
  9325  000EC2  6E16               	movwf	(___flmul@a+1)^0,c
  9326  000EC4  0E49               	movlw	73
  9327  000EC6  6E17               	movwf	(___flmul@a+2)^0,c
  9328  000EC8  0E71               	movlw	113
  9329  000ECA  6E18               	movwf	(___flmul@a+3)^0,c
  9330  000ECC  C184  F011         	movff	powf@sn,___flmul@b
  9331  000ED0  C185  F012         	movff	powf@sn+1,___flmul@b+1
  9332  000ED4  C186  F013         	movff	powf@sn+2,___flmul@b+2
  9333  000ED8  C187  F014         	movff	powf@sn+3,___flmul@b+3
  9334  000EDC  EC25  F023         	call	___flmul	;wreg free
  9335  000EE0  C011  F1A4         	movff	?___flmul,_powf$2038
  9336  000EE4  C012  F1A5         	movff	?___flmul+1,_powf$2038+1
  9337  000EE8  C013  F1A6         	movff	?___flmul+2,_powf$2038+2
  9338  000EEC  C014  F1A7         	movff	?___flmul+3,_powf$2038+3
  9339  000EF0  C1A4  F011         	movff	_powf$2038,___flmul@b
  9340  000EF4  C1A5  F012         	movff	_powf$2038+1,___flmul@b+1
  9341  000EF8  C1A6  F013         	movff	_powf$2038+2,___flmul@b+2
  9342  000EFC  C1A7  F014         	movff	_powf$2038+3,___flmul@b+3
  9343  000F00  0ECA               	movlw	202
  9344  000F02  6E15               	movwf	___flmul@a^0,c
  9345  000F04  0EF2               	movlw	242
  9346  000F06  6E16               	movwf	(___flmul@a+1)^0,c
  9347  000F08  0E49               	movlw	73
  9348  000F0A  6E17               	movwf	(___flmul@a+2)^0,c
  9349  000F0C  0E71               	movlw	113
  9350  000F0E  6E18               	movwf	(___flmul@a+3)^0,c
  9351  000F10  EC25  F023         	call	___flmul	;wreg free
  9352  000F14  C011  F0C2         	movff	?___flmul,?_powf
  9353  000F18  C012  F0C3         	movff	?___flmul+1,?_powf+1
  9354  000F1C  C013  F0C4         	movff	?___flmul+2,?_powf+2
  9355  000F20  C014  F0C5         	movff	?___flmul+3,?_powf+3
  9356  000F24  0012               	return	
  9357  000F26                     i2l9607:
  9358                           
  9359                           ; BSR set to: 1
  9360  000F26  C170  F001         	movff	powf@ax,___fladd@b
  9361  000F2A  C171  F002         	movff	powf@ax+1,___fladd@b+1
  9362  000F2E  C172  F003         	movff	powf@ax+2,___fladd@b+2
  9363  000F32  C173  F004         	movff	powf@ax+3,___fladd@b+3
  9364  000F36  0E00               	movlw	0
  9365  000F38  6E05               	movwf	___fladd@a^0,c
  9366  000F3A  0E00               	movlw	0
  9367  000F3C  6E06               	movwf	(___fladd@a+1)^0,c
  9368  000F3E  0E80               	movlw	128
  9369  000F40  6E07               	movwf	(___fladd@a+2)^0,c
  9370  000F42  0EBF               	movlw	191
  9371  000F44  6E08               	movwf	(___fladd@a+3)^0,c
  9372  000F46  ECCE  F024         	call	___fladd	;wreg free
  9373  000F4A  C001  F1B0         	movff	?___fladd,powf@t
  9374  000F4E  C002  F1B1         	movff	?___fladd+1,powf@t+1
  9375  000F52  C003  F1B2         	movff	?___fladd+2,powf@t+2
  9376  000F56  C004  F1B3         	movff	?___fladd+3,powf@t+3
  9377  000F5A  0E00               	movlw	0
  9378  000F5C  6E15               	movwf	___flmul@a^0,c
  9379  000F5E  0E00               	movlw	0
  9380  000F60  6E16               	movwf	(___flmul@a+1)^0,c
  9381  000F62  0E80               	movlw	128
  9382  000F64  6E17               	movwf	(___flmul@a+2)^0,c
  9383  000F66  0E3E               	movlw	62
  9384  000F68  6E18               	movwf	(___flmul@a+3)^0,c
  9385  000F6A  C1B0  F011         	movff	powf@t,___flmul@b
  9386  000F6E  C1B1  F012         	movff	powf@t+1,___flmul@b+1
  9387  000F72  C1B2  F013         	movff	powf@t+2,___flmul@b+2
  9388  000F76  C1B3  F014         	movff	powf@t+3,___flmul@b+3
  9389  000F7A  EC25  F023         	call	___flmul	;wreg free
  9390  000F7E  C011  F02E         	movff	?___flmul,___flsub@a
  9391  000F82  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  9392  000F86  C013  F030         	movff	?___flmul+2,___flsub@a+2
  9393  000F8A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  9394  000F8E  0EAB               	movlw	171
  9395  000F90  6E2A               	movwf	___flsub@b^0,c
  9396  000F92  0EAA               	movlw	170
  9397  000F94  6E2B               	movwf	(___flsub@b+1)^0,c
  9398  000F96  0EAA               	movlw	170
  9399  000F98  6E2C               	movwf	(___flsub@b+2)^0,c
  9400  000F9A  0E3E               	movlw	62
  9401  000F9C  6E2D               	movwf	(___flsub@b+3)^0,c
  9402  000F9E  EC68  F033         	call	___flsub	;wreg free
  9403  000FA2  C02A  F1A4         	movff	?___flsub,_powf$2038
  9404  000FA6  C02B  F1A5         	movff	?___flsub+1,_powf$2038+1
  9405  000FAA  C02C  F1A6         	movff	?___flsub+2,_powf$2038+2
  9406  000FAE  C02D  F1A7         	movff	?___flsub+3,_powf$2038+3
  9407  000FB2  C1B0  F015         	movff	powf@t,___flmul@a
  9408  000FB6  C1B1  F016         	movff	powf@t+1,___flmul@a+1
  9409  000FBA  C1B2  F017         	movff	powf@t+2,___flmul@a+2
  9410  000FBE  C1B3  F018         	movff	powf@t+3,___flmul@a+3
  9411  000FC2  C1B0  F011         	movff	powf@t,___flmul@b
  9412  000FC6  C1B1  F012         	movff	powf@t+1,___flmul@b+1
  9413  000FCA  C1B2  F013         	movff	powf@t+2,___flmul@b+2
  9414  000FCE  C1B3  F014         	movff	powf@t+3,___flmul@b+3
  9415  000FD2  EC25  F023         	call	___flmul	;wreg free
  9416  000FD6  C011  F158         	movff	?___flmul,_powf$2039
  9417  000FDA  C012  F159         	movff	?___flmul+1,_powf$2039+1
  9418  000FDE  C013  F15A         	movff	?___flmul+2,_powf$2039+2
  9419  000FE2  C014  F15B         	movff	?___flmul+3,_powf$2039+3
  9420  000FE6  C1B0  F015         	movff	powf@t,___flmul@a
  9421  000FEA  C1B1  F016         	movff	powf@t+1,___flmul@a+1
  9422  000FEE  C1B2  F017         	movff	powf@t+2,___flmul@a+2
  9423  000FF2  C1B3  F018         	movff	powf@t+3,___flmul@a+3
  9424  000FF6  C1A4  F011         	movff	_powf$2038,___flmul@b
  9425  000FFA  C1A5  F012         	movff	_powf$2038+1,___flmul@b+1
  9426  000FFE  C1A6  F013         	movff	_powf$2038+2,___flmul@b+2
  9427  001002  C1A7  F014         	movff	_powf$2038+3,___flmul@b+3
  9428  001006  EC25  F023         	call	___flmul	;wreg free
  9429  00100A  C011  F02E         	movff	?___flmul,___flsub@a
  9430  00100E  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  9431  001012  C013  F030         	movff	?___flmul+2,___flsub@a+2
  9432  001016  C014  F031         	movff	?___flmul+3,___flsub@a+3
  9433  00101A  0E00               	movlw	0
  9434  00101C  6E2A               	movwf	___flsub@b^0,c
  9435  00101E  0E00               	movlw	0
  9436  001020  6E2B               	movwf	(___flsub@b+1)^0,c
  9437  001022  0E00               	movlw	0
  9438  001024  6E2C               	movwf	(___flsub@b+2)^0,c
  9439  001026  0E3F               	movlw	63
  9440  001028  6E2D               	movwf	(___flsub@b+3)^0,c
  9441  00102A  EC68  F033         	call	___flsub	;wreg free
  9442  00102E  C02A  F148         	movff	?___flsub,_powf$2040
  9443  001032  C02B  F149         	movff	?___flsub+1,_powf$2040+1
  9444  001036  C02C  F14A         	movff	?___flsub+2,_powf$2040+2
  9445  00103A  C02D  F14B         	movff	?___flsub+3,_powf$2040+3
  9446  00103E  C158  F011         	movff	_powf$2039,___flmul@b
  9447  001042  C159  F012         	movff	_powf$2039+1,___flmul@b+1
  9448  001046  C15A  F013         	movff	_powf$2039+2,___flmul@b+2
  9449  00104A  C15B  F014         	movff	_powf$2039+3,___flmul@b+3
  9450  00104E  C148  F015         	movff	_powf$2040,___flmul@a
  9451  001052  C149  F016         	movff	_powf$2040+1,___flmul@a+1
  9452  001056  C14A  F017         	movff	_powf$2040+2,___flmul@a+2
  9453  00105A  C14B  F018         	movff	_powf$2040+3,___flmul@a+3
  9454  00105E  EC25  F023         	call	___flmul	;wreg free
  9455  001062  C011  F144         	movff	?___flmul,powf@w
  9456  001066  C012  F145         	movff	?___flmul+1,powf@w+1
  9457  00106A  C013  F146         	movff	?___flmul+2,powf@w+2
  9458  00106E  C014  F147         	movff	?___flmul+3,powf@w+3
  9459  001072  C1B0  F011         	movff	powf@t,___flmul@b
  9460  001076  C1B1  F012         	movff	powf@t+1,___flmul@b+1
  9461  00107A  C1B2  F013         	movff	powf@t+2,___flmul@b+2
  9462  00107E  C1B3  F014         	movff	powf@t+3,___flmul@b+3
  9463  001082  0E00               	movlw	0
  9464  001084  6E15               	movwf	___flmul@a^0,c
  9465  001086  0EAA               	movlw	170
  9466  001088  6E16               	movwf	(___flmul@a+1)^0,c
  9467  00108A  0EB8               	movlw	184
  9468  00108C  6E17               	movwf	(___flmul@a+2)^0,c
  9469  00108E  0E3F               	movlw	63
  9470  001090  6E18               	movwf	(___flmul@a+3)^0,c
  9471  001092  EC25  F023         	call	___flmul	;wreg free
  9472  001096  C011  F174         	movff	?___flmul,powf@u
  9473  00109A  C012  F175         	movff	?___flmul+1,powf@u+1
  9474  00109E  C013  F176         	movff	?___flmul+2,powf@u+2
  9475  0010A2  C014  F177         	movff	?___flmul+3,powf@u+3
  9476  0010A6  0E70               	movlw	112
  9477  0010A8  6E15               	movwf	___flmul@a^0,c
  9478  0010AA  0EA5               	movlw	165
  9479  0010AC  6E16               	movwf	(___flmul@a+1)^0,c
  9480  0010AE  0EEC               	movlw	236
  9481  0010B0  6E17               	movwf	(___flmul@a+2)^0,c
  9482  0010B2  0E36               	movlw	54
  9483  0010B4  6E18               	movwf	(___flmul@a+3)^0,c
  9484  0010B6  C1B0  F011         	movff	powf@t,___flmul@b
  9485  0010BA  C1B1  F012         	movff	powf@t+1,___flmul@b+1
  9486  0010BE  C1B2  F013         	movff	powf@t+2,___flmul@b+2
  9487  0010C2  C1B3  F014         	movff	powf@t+3,___flmul@b+3
  9488  0010C6  EC25  F023         	call	___flmul	;wreg free
  9489  0010CA  C011  F02A         	movff	?___flmul,___flsub@b
  9490  0010CE  C012  F02B         	movff	?___flmul+1,___flsub@b+1
  9491  0010D2  C013  F02C         	movff	?___flmul+2,___flsub@b+2
  9492  0010D6  C014  F02D         	movff	?___flmul+3,___flsub@b+3
  9493  0010DA  0E3B               	movlw	59
  9494  0010DC  6E15               	movwf	___flmul@a^0,c
  9495  0010DE  0EAA               	movlw	170
  9496  0010E0  6E16               	movwf	(___flmul@a+1)^0,c
  9497  0010E2  0EB8               	movlw	184
  9498  0010E4  6E17               	movwf	(___flmul@a+2)^0,c
  9499  0010E6  0E3F               	movlw	63
  9500  0010E8  6E18               	movwf	(___flmul@a+3)^0,c
  9501  0010EA  C144  F011         	movff	powf@w,___flmul@b
  9502  0010EE  C145  F012         	movff	powf@w+1,___flmul@b+1
  9503  0010F2  C146  F013         	movff	powf@w+2,___flmul@b+2
  9504  0010F6  C147  F014         	movff	powf@w+3,___flmul@b+3
  9505  0010FA  EC25  F023         	call	___flmul	;wreg free
  9506  0010FE  C011  F02E         	movff	?___flmul,___flsub@a
  9507  001102  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  9508  001106  C013  F030         	movff	?___flmul+2,___flsub@a+2
  9509  00110A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  9510  00110E  EC68  F033         	call	___flsub	;wreg free
  9511  001112  C02A  F178         	movff	?___flsub,powf@v
  9512  001116  C02B  F179         	movff	?___flsub+1,powf@v+1
  9513  00111A  C02C  F17A         	movff	?___flsub+2,powf@v+2
  9514  00111E  C02D  F17B         	movff	?___flsub+3,powf@v+3
  9515  001122  C174  F001         	movff	powf@u,___fladd@b
  9516  001126  C175  F002         	movff	powf@u+1,___fladd@b+1
  9517  00112A  C176  F003         	movff	powf@u+2,___fladd@b+2
  9518  00112E  C177  F004         	movff	powf@u+3,___fladd@b+3
  9519  001132  C178  F005         	movff	powf@v,___fladd@a
  9520  001136  C179  F006         	movff	powf@v+1,___fladd@a+1
  9521  00113A  C17A  F007         	movff	powf@v+2,___fladd@a+2
  9522  00113E  C17B  F008         	movff	powf@v+3,___fladd@a+3
  9523  001142  ECCE  F024         	call	___fladd	;wreg free
  9524  001146  C001  F180         	movff	?___fladd,powf@t1
  9525  00114A  C002  F181         	movff	?___fladd+1,powf@t1+1
  9526  00114E  C003  F182         	movff	?___fladd+2,powf@t1+2
  9527  001152  C004  F183         	movff	?___fladd+3,powf@t1+3
  9528  001156  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
  9529  00115A  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
  9530  00115E  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
  9531  001162  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
  9532  001166  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  9533  00116A  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  9534  00116E  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  9535  001172  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  9536  001176  0E00               	movlw	0
  9537  001178  0101               	movlb	1	; () banked
  9538  00117A  1594               	andwf	powf@is& (0+255),w,b
  9539  00117C  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9540  00117E  0EF0               	movlw	240
  9541  001180  1595               	andwf	(powf@is+1)& (0+255),w,b
  9542  001182  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9543  001184  0EFF               	movlw	255
  9544  001186  1596               	andwf	(powf@is+2)& (0+255),w,b
  9545  001188  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9546  00118A  0EFF               	movlw	255
  9547  00118C  1597               	andwf	(powf@is+3)& (0+255),w,b
  9548  00118E  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9549                           
  9550                           ; BSR set to: 1
  9551  001190  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
  9552  001194  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
  9553  001198  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
  9554  00119C  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
  9555                           
  9556                           ; BSR set to: 1
  9557  0011A0  C174  F02E         	movff	powf@u,___flsub@a
  9558  0011A4  C175  F02F         	movff	powf@u+1,___flsub@a+1
  9559  0011A8  C176  F030         	movff	powf@u+2,___flsub@a+2
  9560  0011AC  C177  F031         	movff	powf@u+3,___flsub@a+3
  9561  0011B0  C180  F02A         	movff	powf@t1,___flsub@b
  9562  0011B4  C181  F02B         	movff	powf@t1+1,___flsub@b+1
  9563  0011B8  C182  F02C         	movff	powf@t1+2,___flsub@b+2
  9564  0011BC  C183  F02D         	movff	powf@t1+3,___flsub@b+3
  9565  0011C0  EC68  F033         	call	___flsub	;wreg free
  9566  0011C4  C02A  F198         	movff	?___flsub,_powf$2041
  9567  0011C8  C02B  F199         	movff	?___flsub+1,_powf$2041+1
  9568  0011CC  C02C  F19A         	movff	?___flsub+2,_powf$2041+2
  9569  0011D0  C02D  F19B         	movff	?___flsub+3,_powf$2041+3
  9570  0011D4  C178  F02A         	movff	powf@v,___flsub@b
  9571  0011D8  C179  F02B         	movff	powf@v+1,___flsub@b+1
  9572  0011DC  C17A  F02C         	movff	powf@v+2,___flsub@b+2
  9573  0011E0  C17B  F02D         	movff	powf@v+3,___flsub@b+3
  9574  0011E4  C198  F02E         	movff	_powf$2041,___flsub@a
  9575  0011E8  C199  F02F         	movff	_powf$2041+1,___flsub@a+1
  9576  0011EC  C19A  F030         	movff	_powf$2041+2,___flsub@a+2
  9577  0011F0  C19B  F031         	movff	_powf$2041+3,___flsub@a+3
  9578  0011F4  EC68  F033         	call	___flsub	;wreg free
  9579  0011F8  EF1F  F010         	goto	L8
  9580  0011FC                     i2l9633:
  9581                           
  9582                           ; BSR set to: 1
  9583  0011FC  0E00               	movlw	0
  9584  0011FE  6F88               	movwf	powf@n& (0+255),b
  9585  001200  0E00               	movlw	0
  9586  001202  6F89               	movwf	(powf@n+1)& (0+255),b
  9587  001204  0E00               	movlw	0
  9588  001206  6F8A               	movwf	(powf@n+2)& (0+255),b
  9589  001208  0E00               	movlw	0
  9590  00120A  6F8B               	movwf	(powf@n+3)& (0+255),b
  9591                           
  9592                           ; BSR set to: 1
  9593  00120C  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9594  00120E  D006               	goto	i2u1257_40
  9595  001210  51AB               	movf	(powf@ix+3)& (0+255),w,b
  9596  001212  E137               	bnz	i2l9645
  9597  001214  0E80               	movlw	128
  9598  001216  5DAA               	subwf	(powf@ix+2)& (0+255),w,b
  9599  001218  B0D8               	btfsc	status,0,c
  9600  00121A  D033               	goto	i2l9645
  9601  00121C                     i2u1257_40:
  9602                           
  9603                           ; BSR set to: 1
  9604  00121C  C170  F011         	movff	powf@ax,___flmul@b
  9605  001220  C171  F012         	movff	powf@ax+1,___flmul@b+1
  9606  001224  C172  F013         	movff	powf@ax+2,___flmul@b+2
  9607  001228  C173  F014         	movff	powf@ax+3,___flmul@b+3
  9608  00122C  0E00               	movlw	0
  9609  00122E  6E15               	movwf	___flmul@a^0,c
  9610  001230  0E00               	movlw	0
  9611  001232  6E16               	movwf	(___flmul@a+1)^0,c
  9612  001234  0E80               	movlw	128
  9613  001236  6E17               	movwf	(___flmul@a+2)^0,c
  9614  001238  0E4B               	movlw	75
  9615  00123A  6E18               	movwf	(___flmul@a+3)^0,c
  9616  00123C  EC25  F023         	call	___flmul	;wreg free
  9617  001240  C011  F170         	movff	?___flmul,powf@ax
  9618  001244  C012  F171         	movff	?___flmul+1,powf@ax+1
  9619  001248  C013  F172         	movff	?___flmul+2,powf@ax+2
  9620  00124C  C014  F173         	movff	?___flmul+3,powf@ax+3
  9621  001250  0EE8               	movlw	232
  9622  001252  0101               	movlb	1	; () banked
  9623  001254  2788               	addwf	powf@n& (0+255),f,b
  9624  001256  0EFF               	movlw	255
  9625  001258  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9626  00125A  0EFF               	movlw	255
  9627  00125C  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9628  00125E  0EFF               	movlw	255
  9629  001260  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9630                           
  9631                           ; BSR set to: 1
  9632  001262  C170  F1B8         	movff	powf@ax,powf@__xc8_float_word
  9633  001266  C171  F1B9         	movff	powf@ax+1,powf@__xc8_float_word+1
  9634  00126A  C172  F1BA         	movff	powf@ax+2,powf@__xc8_float_word+2
  9635  00126E  C173  F1BB         	movff	powf@ax+3,powf@__xc8_float_word+3
  9636                           
  9637                           ; BSR set to: 1
  9638  001272  C1B8  F1A8         	movff	powf@__xc8_float_word,powf@ix
  9639  001276  C1B9  F1A9         	movff	powf@__xc8_float_word+1,powf@ix+1
  9640  00127A  C1BA  F1AA         	movff	powf@__xc8_float_word+2,powf@ix+2
  9641  00127E  C1BB  F1AB         	movff	powf@__xc8_float_word+3,powf@ix+3
  9642  001282                     i2l9645:
  9643                           
  9644                           ; BSR set to: 1
  9645  001282  0E17               	movlw	23
  9646  001284  6E6F               	movwf	??_powf^0,c
  9647  001286  C1A8  F070         	movff	powf@ix,??_powf+1
  9648  00128A  C1A9  F071         	movff	powf@ix+1,??_powf+2
  9649  00128E  C1AA  F072         	movff	powf@ix+2,??_powf+3
  9650  001292  C1AB  F073         	movff	powf@ix+3,??_powf+4
  9651  001296                     i2u1258_45:
  9652  001296  666F               	tstfsz	??_powf^0,c
  9653  001298  D001               	goto	i2u1258_46
  9654  00129A  D007               	goto	i2u1258_47
  9655  00129C                     i2u1258_46:
  9656  00129C  3473               	rlcf	(??_powf+4)^0,w,c
  9657  00129E  3273               	rrcf	(??_powf+4)^0,f,c
  9658  0012A0  3272               	rrcf	(??_powf+3)^0,f,c
  9659  0012A2  3271               	rrcf	(??_powf+2)^0,f,c
  9660  0012A4  3270               	rrcf	(??_powf+1)^0,f,c
  9661  0012A6  2E6F               	decfsz	??_powf^0,f,c
  9662  0012A8  D7F6               	goto	i2u1258_45
  9663  0012AA                     i2u1258_47:
  9664  0012AA  0E81               	movlw	129
  9665  0012AC  2470               	addwf	(??_powf+1)^0,w,c
  9666  0012AE  6E74               	movwf	(??_powf+5)^0,c
  9667  0012B0  0EFF               	movlw	255
  9668  0012B2  2071               	addwfc	(??_powf+2)^0,w,c
  9669  0012B4  6E75               	movwf	(??_powf+6)^0,c
  9670  0012B6  0EFF               	movlw	255
  9671  0012B8  2072               	addwfc	(??_powf+3)^0,w,c
  9672  0012BA  6E76               	movwf	(??_powf+7)^0,c
  9673  0012BC  0EFF               	movlw	255
  9674  0012BE  2073               	addwfc	(??_powf+4)^0,w,c
  9675  0012C0  6E77               	movwf	(??_powf+8)^0,c
  9676  0012C2  5074               	movf	(??_powf+5)^0,w,c
  9677  0012C4  0101               	movlb	1	; () banked
  9678  0012C6  2788               	addwf	powf@n& (0+255),f,b
  9679  0012C8  5075               	movf	(??_powf+6)^0,w,c
  9680  0012CA  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9681  0012CC  5076               	movf	(??_powf+7)^0,w,c
  9682  0012CE  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9683  0012D0  5077               	movf	(??_powf+8)^0,w,c
  9684  0012D2  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9685                           
  9686                           ; BSR set to: 1
  9687  0012D4  0EFF               	movlw	255
  9688  0012D6  15A8               	andwf	powf@ix& (0+255),w,b
  9689  0012D8  6FAC               	movwf	powf@j& (0+255),b
  9690  0012DA  0EFF               	movlw	255
  9691  0012DC  15A9               	andwf	(powf@ix+1)& (0+255),w,b
  9692  0012DE  6FAD               	movwf	(powf@j+1)& (0+255),b
  9693  0012E0  0E7F               	movlw	127
  9694  0012E2  15AA               	andwf	(powf@ix+2)& (0+255),w,b
  9695  0012E4  6FAE               	movwf	(powf@j+2)& (0+255),b
  9696  0012E6  0E00               	movlw	0
  9697  0012E8  15AB               	andwf	(powf@ix+3)& (0+255),w,b
  9698  0012EA  6FAF               	movwf	(powf@j+3)& (0+255),b
  9699                           
  9700                           ; BSR set to: 1
  9701  0012EC  0E00               	movlw	0
  9702  0012EE  11AC               	iorwf	powf@j& (0+255),w,b
  9703  0012F0  6FA8               	movwf	powf@ix& (0+255),b
  9704  0012F2  0E00               	movlw	0
  9705  0012F4  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  9706  0012F6  6FA9               	movwf	(powf@ix+1)& (0+255),b
  9707  0012F8  0E80               	movlw	128
  9708  0012FA  11AE               	iorwf	(powf@j+2)& (0+255),w,b
  9709  0012FC  6FAA               	movwf	(powf@ix+2)& (0+255),b
  9710  0012FE  0E3F               	movlw	63
  9711  001300  11AF               	iorwf	(powf@j+3)& (0+255),w,b
  9712  001302  6FAB               	movwf	(powf@ix+3)& (0+255),b
  9713                           
  9714                           ; BSR set to: 1
  9715  001304  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  9716  001306  D00A               	goto	i2u1259_40
  9717  001308  51AF               	movf	(powf@j+3)& (0+255),w,b
  9718  00130A  E10A               	bnz	i2l9655
  9719  00130C  0E72               	movlw	114
  9720  00130E  5DAC               	subwf	powf@j& (0+255),w,b
  9721  001310  0EC4               	movlw	196
  9722  001312  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  9723  001314  0E1C               	movlw	28
  9724  001316  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  9725  001318  B0D8               	btfsc	status,0,c
  9726  00131A  D002               	goto	i2l9655
  9727  00131C                     i2u1259_40:
  9728                           
  9729                           ; BSR set to: 1
  9730  00131C  0E00               	movlw	0
  9731  00131E  D00D               	goto	L9
  9732  001320                     i2l9655:
  9733                           
  9734                           ; BSR set to: 1
  9735  001320  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  9736  001322  D00A               	goto	i2u1260_40
  9737  001324  51AF               	movf	(powf@j+3)& (0+255),w,b
  9738  001326  E111               	bnz	i2l9659
  9739  001328  0ED7               	movlw	215
  9740  00132A  5DAC               	subwf	powf@j& (0+255),w,b
  9741  00132C  0EB3               	movlw	179
  9742  00132E  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  9743  001330  0E5D               	movlw	93
  9744  001332  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  9745  001334  B0D8               	btfsc	status,0,c
  9746  001336  D009               	goto	i2l9659
  9747  001338                     i2u1260_40:
  9748                           
  9749                           ; BSR set to: 1
  9750  001338  0E01               	movlw	1
  9751  00133A                     L9:
  9752  00133A  6FA0               	movwf	powf@k& (0+255),b
  9753  00133C  0E00               	movlw	0
  9754  00133E  6FA1               	movwf	(powf@k+1)& (0+255),b
  9755  001340  0E00               	movlw	0
  9756  001342  6FA2               	movwf	(powf@k+2)& (0+255),b
  9757  001344  0E00               	movlw	0
  9758  001346  6FA3               	movwf	(powf@k+3)& (0+255),b
  9759  001348  D016               	goto	i2l9665
  9760  00134A                     i2l9659:
  9761                           
  9762                           ; BSR set to: 1
  9763  00134A  0E00               	movlw	0
  9764  00134C  6FA0               	movwf	powf@k& (0+255),b
  9765  00134E  0E00               	movlw	0
  9766  001350  6FA1               	movwf	(powf@k+1)& (0+255),b
  9767  001352  0E00               	movlw	0
  9768  001354  6FA2               	movwf	(powf@k+2)& (0+255),b
  9769  001356  0E00               	movlw	0
  9770  001358  6FA3               	movwf	(powf@k+3)& (0+255),b
  9771                           
  9772                           ; BSR set to: 1
  9773  00135A  0E01               	movlw	1
  9774  00135C  2788               	addwf	powf@n& (0+255),f,b
  9775  00135E  0E00               	movlw	0
  9776  001360  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9777  001362  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9778  001364  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9779                           
  9780                           ; BSR set to: 1
  9781  001366  0E00               	movlw	0
  9782  001368  27A8               	addwf	powf@ix& (0+255),f,b
  9783  00136A  0E00               	movlw	0
  9784  00136C  23A9               	addwfc	(powf@ix+1)& (0+255),f,b
  9785  00136E  0E80               	movlw	128
  9786  001370  23AA               	addwfc	(powf@ix+2)& (0+255),f,b
  9787  001372  0EFF               	movlw	255
  9788  001374  23AB               	addwfc	(powf@ix+3)& (0+255),f,b
  9789  001376                     i2l9665:
  9790                           
  9791                           ; BSR set to: 1
  9792  001376  C1A8  F1B8         	movff	powf@ix,powf@__xc8_float_word
  9793  00137A  C1A9  F1B9         	movff	powf@ix+1,powf@__xc8_float_word+1
  9794  00137E  C1AA  F1BA         	movff	powf@ix+2,powf@__xc8_float_word+2
  9795  001382  C1AB  F1BB         	movff	powf@ix+3,powf@__xc8_float_word+3
  9796                           
  9797                           ; BSR set to: 1
  9798  001386  C1B8  F170         	movff	powf@__xc8_float_word,powf@ax
  9799  00138A  C1B9  F171         	movff	powf@__xc8_float_word+1,powf@ax+1
  9800  00138E  C1BA  F172         	movff	powf@__xc8_float_word+2,powf@ax+2
  9801  001392  C1BB  F173         	movff	powf@__xc8_float_word+3,powf@ax+3
  9802                           
  9803                           ; BSR set to: 1
  9804  001396  C170  F02A         	movff	powf@ax,___flsub@b
  9805  00139A  C171  F02B         	movff	powf@ax+1,___flsub@b+1
  9806  00139E  C172  F02C         	movff	powf@ax+2,___flsub@b+2
  9807  0013A2  C173  F02D         	movff	powf@ax+3,___flsub@b+3
  9808  0013A6  C1A0  F06F         	movff	powf@k,??_powf
  9809  0013AA  C1A1  F070         	movff	powf@k+1,??_powf+1
  9810  0013AE  90D8               	bcf	status,0,c
  9811  0013B0  366F               	rlcf	??_powf^0,f,c
  9812  0013B2  3670               	rlcf	(??_powf+1)^0,f,c
  9813  0013B4  90D8               	bcf	status,0,c
  9814  0013B6  366F               	rlcf	??_powf^0,f,c
  9815  0013B8  3670               	rlcf	(??_powf+1)^0,f,c
  9816  0013BA  0E81               	movlw	low _bp
  9817  0013BC  246F               	addwf	??_powf^0,w,c
  9818  0013BE  6EF6               	movwf	tblptrl,c
  9819  0013C0  0E06               	movlw	high _bp
  9820  0013C2  2070               	addwfc	(??_powf+1)^0,w,c
  9821  0013C4  6EF7               	movwf	tblptrh,c
  9822  0013C6                     	if	0	;There are less than 3 active tblptr bytes
  9823  0013C6                     	endif
  9824  0013C6  0009               	tblrd		*+
  9825  0013C8  CFF5 F02E          	movff	tablat,___flsub@a
  9826  0013CC  0009               	tblrd		*+
  9827  0013CE  CFF5 F02F          	movff	tablat,___flsub@a+1
  9828  0013D2  0009               	tblrd		*+
  9829  0013D4  CFF5 F030          	movff	tablat,___flsub@a+2
  9830  0013D8  000A               	tblrd		*-
  9831  0013DA  CFF5 F031          	movff	tablat,___flsub@a+3
  9832  0013DE  EC68  F033         	call	___flsub	;wreg free
  9833  0013E2  C02A  F174         	movff	?___flsub,powf@u
  9834  0013E6  C02B  F175         	movff	?___flsub+1,powf@u+1
  9835  0013EA  C02C  F176         	movff	?___flsub+2,powf@u+2
  9836  0013EE  C02D  F177         	movff	?___flsub+3,powf@u+3
  9837  0013F2  0E00               	movlw	0
  9838  0013F4  6E32               	movwf	___fldiv@b^0,c
  9839  0013F6  0E00               	movlw	0
  9840  0013F8  6E33               	movwf	(___fldiv@b+1)^0,c
  9841  0013FA  0E80               	movlw	128
  9842  0013FC  6E34               	movwf	(___fldiv@b+2)^0,c
  9843  0013FE  0E3F               	movlw	63
  9844  001400  6E35               	movwf	(___fldiv@b+3)^0,c
  9845  001402  C170  F005         	movff	powf@ax,___fladd@a
  9846  001406  C171  F006         	movff	powf@ax+1,___fladd@a+1
  9847  00140A  C172  F007         	movff	powf@ax+2,___fladd@a+2
  9848  00140E  C173  F008         	movff	powf@ax+3,___fladd@a+3
  9849  001412  C1A0  F06F         	movff	powf@k,??_powf
  9850  001416  C1A1  F070         	movff	powf@k+1,??_powf+1
  9851  00141A  90D8               	bcf	status,0,c
  9852  00141C  366F               	rlcf	??_powf^0,f,c
  9853  00141E  3670               	rlcf	(??_powf+1)^0,f,c
  9854  001420  90D8               	bcf	status,0,c
  9855  001422  366F               	rlcf	??_powf^0,f,c
  9856  001424  3670               	rlcf	(??_powf+1)^0,f,c
  9857  001426  0E81               	movlw	low _bp
  9858  001428  246F               	addwf	??_powf^0,w,c
  9859  00142A  6EF6               	movwf	tblptrl,c
  9860  00142C  0E06               	movlw	high _bp
  9861  00142E  2070               	addwfc	(??_powf+1)^0,w,c
  9862  001430  6EF7               	movwf	tblptrh,c
  9863  001432                     	if	0	;There are less than 3 active tblptr bytes
  9864  001432                     	endif
  9865  001432  0009               	tblrd		*+
  9866  001434  CFF5 F001          	movff	tablat,___fladd@b
  9867  001438  0009               	tblrd		*+
  9868  00143A  CFF5 F002          	movff	tablat,___fladd@b+1
  9869  00143E  0009               	tblrd		*+
  9870  001440  CFF5 F003          	movff	tablat,___fladd@b+2
  9871  001444  000A               	tblrd		*-
  9872  001446  CFF5 F004          	movff	tablat,___fladd@b+3
  9873  00144A  ECCE  F024         	call	___fladd	;wreg free
  9874  00144E  C001  F036         	movff	?___fladd,___fldiv@a
  9875  001452  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9876  001456  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9877  00145A  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9878  00145E  EC54  F026         	call	___fldiv	;wreg free
  9879  001462  C032  F178         	movff	?___fldiv,powf@v
  9880  001466  C033  F179         	movff	?___fldiv+1,powf@v+1
  9881  00146A  C034  F17A         	movff	?___fldiv+2,powf@v+2
  9882  00146E  C035  F17B         	movff	?___fldiv+3,powf@v+3
  9883  001472  C174  F011         	movff	powf@u,___flmul@b
  9884  001476  C175  F012         	movff	powf@u+1,___flmul@b+1
  9885  00147A  C176  F013         	movff	powf@u+2,___flmul@b+2
  9886  00147E  C177  F014         	movff	powf@u+3,___flmul@b+3
  9887  001482  C178  F015         	movff	powf@v,___flmul@a
  9888  001486  C179  F016         	movff	powf@v+1,___flmul@a+1
  9889  00148A  C17A  F017         	movff	powf@v+2,___flmul@a+2
  9890  00148E  C17B  F018         	movff	powf@v+3,___flmul@a+3
  9891  001492  EC25  F023         	call	___flmul	;wreg free
  9892  001496  C011  F154         	movff	?___flmul,powf@s
  9893  00149A  C012  F155         	movff	?___flmul+1,powf@s+1
  9894  00149E  C013  F156         	movff	?___flmul+2,powf@s+2
  9895  0014A2  C014  F157         	movff	?___flmul+3,powf@s+3
  9896  0014A6  C154  F16C         	movff	powf@s,powf@s_h
  9897  0014AA  C155  F16D         	movff	powf@s+1,powf@s_h+1
  9898  0014AE  C156  F16E         	movff	powf@s+2,powf@s_h+2
  9899  0014B2  C157  F16F         	movff	powf@s+3,powf@s_h+3
  9900  0014B6  C16C  F1B8         	movff	powf@s_h,powf@__xc8_float_word
  9901  0014BA  C16D  F1B9         	movff	powf@s_h+1,powf@__xc8_float_word+1
  9902  0014BE  C16E  F1BA         	movff	powf@s_h+2,powf@__xc8_float_word+2
  9903  0014C2  C16F  F1BB         	movff	powf@s_h+3,powf@__xc8_float_word+3
  9904  0014C6  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  9905  0014CA  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  9906  0014CE  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  9907  0014D2  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  9908  0014D6  0E00               	movlw	0
  9909  0014D8  0101               	movlb	1	; () banked
  9910  0014DA  1594               	andwf	powf@is& (0+255),w,b
  9911  0014DC  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9912  0014DE  0EF0               	movlw	240
  9913  0014E0  1595               	andwf	(powf@is+1)& (0+255),w,b
  9914  0014E2  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9915  0014E4  0EFF               	movlw	255
  9916  0014E6  1596               	andwf	(powf@is+2)& (0+255),w,b
  9917  0014E8  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9918  0014EA  0EFF               	movlw	255
  9919  0014EC  1597               	andwf	(powf@is+3)& (0+255),w,b
  9920  0014EE  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9921                           
  9922                           ; BSR set to: 1
  9923  0014F0  C1B8  F16C         	movff	powf@__xc8_float_word,powf@s_h
  9924  0014F4  C1B9  F16D         	movff	powf@__xc8_float_word+1,powf@s_h+1
  9925  0014F8  C1BA  F16E         	movff	powf@__xc8_float_word+2,powf@s_h+2
  9926  0014FC  C1BB  F16F         	movff	powf@__xc8_float_word+3,powf@s_h+3
  9927                           
  9928                           ; BSR set to: 1
  9929  001500  C1A8  F06F         	movff	powf@ix,??_powf
  9930  001504  C1A9  F070         	movff	powf@ix+1,??_powf+1
  9931  001508  C1AA  F071         	movff	powf@ix+2,??_powf+2
  9932  00150C  C1AB  F072         	movff	powf@ix+3,??_powf+3
  9933  001510  3472               	rlcf	(??_powf+3)^0,w,c
  9934  001512  3272               	rrcf	(??_powf+3)^0,f,c
  9935  001514  3271               	rrcf	(??_powf+2)^0,f,c
  9936  001516  3270               	rrcf	(??_powf+1)^0,f,c
  9937  001518  326F               	rrcf	??_powf^0,f,c
  9938  00151A  0E00               	movlw	0
  9939  00151C  146F               	andwf	??_powf^0,w,c
  9940  00151E  6E73               	movwf	(??_powf+4)^0,c
  9941  001520  0EF0               	movlw	240
  9942  001522  1470               	andwf	(??_powf+1)^0,w,c
  9943  001524  6E74               	movwf	(??_powf+5)^0,c
  9944  001526  0EFF               	movlw	255
  9945  001528  1471               	andwf	(??_powf+2)^0,w,c
  9946  00152A  6E75               	movwf	(??_powf+6)^0,c
  9947  00152C  0EFF               	movlw	255
  9948  00152E  1472               	andwf	(??_powf+3)^0,w,c
  9949  001530  6E76               	movwf	(??_powf+7)^0,c
  9950  001532  0E00               	movlw	0
  9951  001534  1073               	iorwf	(??_powf+4)^0,w,c
  9952  001536  6F94               	movwf	powf@is& (0+255),b
  9953  001538  0E00               	movlw	0
  9954  00153A  1074               	iorwf	(??_powf+5)^0,w,c
  9955  00153C  6F95               	movwf	(powf@is+1)& (0+255),b
  9956  00153E  0E00               	movlw	0
  9957  001540  1075               	iorwf	(??_powf+6)^0,w,c
  9958  001542  6F96               	movwf	(powf@is+2)& (0+255),b
  9959  001544  0E20               	movlw	32
  9960  001546  1076               	iorwf	(??_powf+7)^0,w,c
  9961  001548  6F97               	movwf	(powf@is+3)& (0+255),b
  9962                           
  9963                           ; BSR set to: 1
  9964  00154A  C1A0  F06F         	movff	powf@k,??_powf
  9965  00154E  C1A1  F070         	movff	powf@k+1,??_powf+1
  9966  001552  C1A2  F071         	movff	powf@k+2,??_powf+2
  9967  001556  C1A3  F072         	movff	powf@k+3,??_powf+3
  9968  00155A  0E15               	movlw	21
  9969  00155C                     i2u1261_45:
  9970  00155C  90D8               	bcf	status,0,c
  9971  00155E  366F               	rlcf	??_powf^0,f,c
  9972  001560  3670               	rlcf	(??_powf+1)^0,f,c
  9973  001562  3671               	rlcf	(??_powf+2)^0,f,c
  9974  001564  3672               	rlcf	(??_powf+3)^0,f,c
  9975  001566  2EE8               	decfsz	wreg,f,c
  9976  001568  D7F9               	goto	i2u1261_45
  9977  00156A  5194               	movf	powf@is& (0+255),w,b
  9978  00156C  246F               	addwf	??_powf^0,w,c
  9979  00156E  6E73               	movwf	(??_powf+4)^0,c
  9980  001570  5195               	movf	(powf@is+1)& (0+255),w,b
  9981  001572  2070               	addwfc	(??_powf+1)^0,w,c
  9982  001574  6E74               	movwf	(??_powf+5)^0,c
  9983  001576  5196               	movf	(powf@is+2)& (0+255),w,b
  9984  001578  2071               	addwfc	(??_powf+2)^0,w,c
  9985  00157A  6E75               	movwf	(??_powf+6)^0,c
  9986  00157C  5197               	movf	(powf@is+3)& (0+255),w,b
  9987  00157E  2072               	addwfc	(??_powf+3)^0,w,c
  9988  001580  6E76               	movwf	(??_powf+7)^0,c
  9989  001582  0E00               	movlw	0
  9990  001584  2473               	addwf	(??_powf+4)^0,w,c
  9991  001586  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9992  001588  0E00               	movlw	0
  9993  00158A  2074               	addwfc	(??_powf+5)^0,w,c
  9994  00158C  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9995  00158E  0E40               	movlw	64
  9996  001590  2075               	addwfc	(??_powf+6)^0,w,c
  9997  001592  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9998  001594  0E00               	movlw	0
  9999  001596  2076               	addwfc	(??_powf+7)^0,w,c
 10000  001598  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10001                           
 10002                           ; BSR set to: 1
 10003  00159A  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
 10004  00159E  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
 10005  0015A2  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
 10006  0015A6  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
 10007                           
 10008                           ; BSR set to: 1
 10009  0015AA  C1A0  F06F         	movff	powf@k,??_powf
 10010  0015AE  C1A1  F070         	movff	powf@k+1,??_powf+1
 10011  0015B2  90D8               	bcf	status,0,c
 10012  0015B4  366F               	rlcf	??_powf^0,f,c
 10013  0015B6  3670               	rlcf	(??_powf+1)^0,f,c
 10014  0015B8  90D8               	bcf	status,0,c
 10015  0015BA  366F               	rlcf	??_powf^0,f,c
 10016  0015BC  3670               	rlcf	(??_powf+1)^0,f,c
 10017  0015BE  0E81               	movlw	low _bp
 10018  0015C0  246F               	addwf	??_powf^0,w,c
 10019  0015C2  6EF6               	movwf	tblptrl,c
 10020  0015C4  0E06               	movlw	high _bp
 10021  0015C6  2070               	addwfc	(??_powf+1)^0,w,c
 10022  0015C8  6EF7               	movwf	tblptrh,c
 10023  0015CA                     	if	0	;There are less than 3 active tblptr bytes
 10024  0015CA                     	endif
 10025  0015CA  0009               	tblrd		*+
 10026  0015CC  CFF5 F02E          	movff	tablat,___flsub@a
 10027  0015D0  0009               	tblrd		*+
 10028  0015D2  CFF5 F02F          	movff	tablat,___flsub@a+1
 10029  0015D6  0009               	tblrd		*+
 10030  0015D8  CFF5 F030          	movff	tablat,___flsub@a+2
 10031  0015DC  000A               	tblrd		*-
 10032  0015DE  CFF5 F031          	movff	tablat,___flsub@a+3
 10033  0015E2  C168  F02A         	movff	powf@t_h,___flsub@b
 10034  0015E6  C169  F02B         	movff	powf@t_h+1,___flsub@b+1
 10035  0015EA  C16A  F02C         	movff	powf@t_h+2,___flsub@b+2
 10036  0015EE  C16B  F02D         	movff	powf@t_h+3,___flsub@b+3
 10037  0015F2  EC68  F033         	call	___flsub	;wreg free
 10038  0015F6  C02A  F198         	movff	?___flsub,_powf$2041
 10039  0015FA  C02B  F199         	movff	?___flsub+1,_powf$2041+1
 10040  0015FE  C02C  F19A         	movff	?___flsub+2,_powf$2041+2
 10041  001602  C02D  F19B         	movff	?___flsub+3,_powf$2041+3
 10042  001606  C170  F02A         	movff	powf@ax,___flsub@b
 10043  00160A  C171  F02B         	movff	powf@ax+1,___flsub@b+1
 10044  00160E  C172  F02C         	movff	powf@ax+2,___flsub@b+2
 10045  001612  C173  F02D         	movff	powf@ax+3,___flsub@b+3
 10046  001616  C198  F02E         	movff	_powf$2041,___flsub@a
 10047  00161A  C199  F02F         	movff	_powf$2041+1,___flsub@a+1
 10048  00161E  C19A  F030         	movff	_powf$2041+2,___flsub@a+2
 10049  001622  C19B  F031         	movff	_powf$2041+3,___flsub@a+3
 10050  001626  EC68  F033         	call	___flsub	;wreg free
 10051  00162A  C02A  F134         	movff	?___flsub,powf@t_l
 10052  00162E  C02B  F135         	movff	?___flsub+1,powf@t_l+1
 10053  001632  C02C  F136         	movff	?___flsub+2,powf@t_l+2
 10054  001636  C02D  F137         	movff	?___flsub+3,powf@t_l+3
 10055  00163A  C168  F015         	movff	powf@t_h,___flmul@a
 10056  00163E  C169  F016         	movff	powf@t_h+1,___flmul@a+1
 10057  001642  C16A  F017         	movff	powf@t_h+2,___flmul@a+2
 10058  001646  C16B  F018         	movff	powf@t_h+3,___flmul@a+3
 10059  00164A  C16C  F011         	movff	powf@s_h,___flmul@b
 10060  00164E  C16D  F012         	movff	powf@s_h+1,___flmul@b+1
 10061  001652  C16E  F013         	movff	powf@s_h+2,___flmul@b+2
 10062  001656  C16F  F014         	movff	powf@s_h+3,___flmul@b+3
 10063  00165A  EC25  F023         	call	___flmul	;wreg free
 10064  00165E  C011  F02E         	movff	?___flmul,___flsub@a
 10065  001662  C012  F02F         	movff	?___flmul+1,___flsub@a+1
 10066  001666  C013  F030         	movff	?___flmul+2,___flsub@a+2
 10067  00166A  C014  F031         	movff	?___flmul+3,___flsub@a+3
 10068  00166E  C174  F02A         	movff	powf@u,___flsub@b
 10069  001672  C175  F02B         	movff	powf@u+1,___flsub@b+1
 10070  001676  C176  F02C         	movff	powf@u+2,___flsub@b+2
 10071  00167A  C177  F02D         	movff	powf@u+3,___flsub@b+3
 10072  00167E  EC68  F033         	call	___flsub	;wreg free
 10073  001682  C02A  F198         	movff	?___flsub,_powf$2041
 10074  001686  C02B  F199         	movff	?___flsub+1,_powf$2041+1
 10075  00168A  C02C  F19A         	movff	?___flsub+2,_powf$2041+2
 10076  00168E  C02D  F19B         	movff	?___flsub+3,_powf$2041+3
 10077  001692  C134  F015         	movff	powf@t_l,___flmul@a
 10078  001696  C135  F016         	movff	powf@t_l+1,___flmul@a+1
 10079  00169A  C136  F017         	movff	powf@t_l+2,___flmul@a+2
 10080  00169E  C137  F018         	movff	powf@t_l+3,___flmul@a+3
 10081  0016A2  C16C  F011         	movff	powf@s_h,___flmul@b
 10082  0016A6  C16D  F012         	movff	powf@s_h+1,___flmul@b+1
 10083  0016AA  C16E  F013         	movff	powf@s_h+2,___flmul@b+2
 10084  0016AE  C16F  F014         	movff	powf@s_h+3,___flmul@b+3
 10085  0016B2  EC25  F023         	call	___flmul	;wreg free
 10086  0016B6  C011  F02E         	movff	?___flmul,___flsub@a
 10087  0016BA  C012  F02F         	movff	?___flmul+1,___flsub@a+1
 10088  0016BE  C013  F030         	movff	?___flmul+2,___flsub@a+2
 10089  0016C2  C014  F031         	movff	?___flmul+3,___flsub@a+3
 10090  0016C6  C198  F02A         	movff	_powf$2041,___flsub@b
 10091  0016CA  C199  F02B         	movff	_powf$2041+1,___flsub@b+1
 10092  0016CE  C19A  F02C         	movff	_powf$2041+2,___flsub@b+2
 10093  0016D2  C19B  F02D         	movff	_powf$2041+3,___flsub@b+3
 10094  0016D6  EC68  F033         	call	___flsub	;wreg free
 10095  0016DA  C02A  F158         	movff	?___flsub,_powf$2039
 10096  0016DE  C02B  F159         	movff	?___flsub+1,_powf$2039+1
 10097  0016E2  C02C  F15A         	movff	?___flsub+2,_powf$2039+2
 10098  0016E6  C02D  F15B         	movff	?___flsub+3,_powf$2039+3
 10099  0016EA  C158  F011         	movff	_powf$2039,___flmul@b
 10100  0016EE  C159  F012         	movff	_powf$2039+1,___flmul@b+1
 10101  0016F2  C15A  F013         	movff	_powf$2039+2,___flmul@b+2
 10102  0016F6  C15B  F014         	movff	_powf$2039+3,___flmul@b+3
 10103  0016FA  C178  F015         	movff	powf@v,___flmul@a
 10104  0016FE  C179  F016         	movff	powf@v+1,___flmul@a+1
 10105  001702  C17A  F017         	movff	powf@v+2,___flmul@a+2
 10106  001706  C17B  F018         	movff	powf@v+3,___flmul@a+3
 10107  00170A  EC25  F023         	call	___flmul	;wreg free
 10108  00170E  C011  F130         	movff	?___flmul,powf@s_l
 10109  001712  C012  F131         	movff	?___flmul+1,powf@s_l+1
 10110  001716  C013  F132         	movff	?___flmul+2,powf@s_l+2
 10111  00171A  C014  F133         	movff	?___flmul+3,powf@s_l+3
 10112  00171E  C154  F011         	movff	powf@s,___flmul@b
 10113  001722  C155  F012         	movff	powf@s+1,___flmul@b+1
 10114  001726  C156  F013         	movff	powf@s+2,___flmul@b+2
 10115  00172A  C157  F014         	movff	powf@s+3,___flmul@b+3
 10116  00172E  C154  F015         	movff	powf@s,___flmul@a
 10117  001732  C155  F016         	movff	powf@s+1,___flmul@a+1
 10118  001736  C156  F017         	movff	powf@s+2,___flmul@a+2
 10119  00173A  C157  F018         	movff	powf@s+3,___flmul@a+3
 10120  00173E  EC25  F023         	call	___flmul	;wreg free
 10121  001742  C011  F18C         	movff	?___flmul,powf@s2
 10122  001746  C012  F18D         	movff	?___flmul+1,powf@s2+1
 10123  00174A  C013  F18E         	movff	?___flmul+2,powf@s2+2
 10124  00174E  C014  F18F         	movff	?___flmul+3,powf@s2+3
 10125  001752  0E55               	movlw	85
 10126  001754  6E05               	movwf	___fladd@a^0,c
 10127  001756  0E32               	movlw	50
 10128  001758  6E06               	movwf	(___fladd@a+1)^0,c
 10129  00175A  0E6C               	movlw	108
 10130  00175C  6E07               	movwf	(___fladd@a+2)^0,c
 10131  00175E  0E3E               	movlw	62
 10132  001760  6E08               	movwf	(___fladd@a+3)^0,c
 10133  001762  0E42               	movlw	66
 10134  001764  6E15               	movwf	___flmul@a^0,c
 10135  001766  0EF1               	movlw	241
 10136  001768  6E16               	movwf	(___flmul@a+1)^0,c
 10137  00176A  0E53               	movlw	83
 10138  00176C  6E17               	movwf	(___flmul@a+2)^0,c
 10139  00176E  0E3E               	movlw	62
 10140  001770  6E18               	movwf	(___flmul@a+3)^0,c
 10141  001772  C18C  F011         	movff	powf@s2,___flmul@b
 10142  001776  C18D  F012         	movff	powf@s2+1,___flmul@b+1
 10143  00177A  C18E  F013         	movff	powf@s2+2,___flmul@b+2
 10144  00177E  C18F  F014         	movff	powf@s2+3,___flmul@b+3
 10145  001782  EC25  F023         	call	___flmul	;wreg free
 10146  001786  C011  F001         	movff	?___flmul,___fladd@b
 10147  00178A  C012  F002         	movff	?___flmul+1,___fladd@b+1
 10148  00178E  C013  F003         	movff	?___flmul+2,___fladd@b+2
 10149  001792  C014  F004         	movff	?___flmul+3,___fladd@b+3
 10150  001796  ECCE  F024         	call	___fladd	;wreg free
 10151  00179A  C001  F1A4         	movff	?___fladd,_powf$2038
 10152  00179E  C002  F1A5         	movff	?___fladd+1,_powf$2038+1
 10153  0017A2  C003  F1A6         	movff	?___fladd+2,_powf$2038+2
 10154  0017A6  C004  F1A7         	movff	?___fladd+3,_powf$2038+3
 10155  0017AA  0E05               	movlw	5
 10156  0017AC  6E05               	movwf	___fladd@a^0,c
 10157  0017AE  0EA3               	movlw	163
 10158  0017B0  6E06               	movwf	(___fladd@a+1)^0,c
 10159  0017B2  0E8B               	movlw	139
 10160  0017B4  6E07               	movwf	(___fladd@a+2)^0,c
 10161  0017B6  0E3E               	movlw	62
 10162  0017B8  6E08               	movwf	(___fladd@a+3)^0,c
 10163  0017BA  C18C  F015         	movff	powf@s2,___flmul@a
 10164  0017BE  C18D  F016         	movff	powf@s2+1,___flmul@a+1
 10165  0017C2  C18E  F017         	movff	powf@s2+2,___flmul@a+2
 10166  0017C6  C18F  F018         	movff	powf@s2+3,___flmul@a+3
 10167  0017CA  C1A4  F011         	movff	_powf$2038,___flmul@b
 10168  0017CE  C1A5  F012         	movff	_powf$2038+1,___flmul@b+1
 10169  0017D2  C1A6  F013         	movff	_powf$2038+2,___flmul@b+2
 10170  0017D6  C1A7  F014         	movff	_powf$2038+3,___flmul@b+3
 10171  0017DA  EC25  F023         	call	___flmul	;wreg free
 10172  0017DE  C011  F001         	movff	?___flmul,___fladd@b
 10173  0017E2  C012  F002         	movff	?___flmul+1,___fladd@b+1
 10174  0017E6  C013  F003         	movff	?___flmul+2,___fladd@b+2
 10175  0017EA  C014  F004         	movff	?___flmul+3,___fladd@b+3
 10176  0017EE  ECCE  F024         	call	___fladd	;wreg free
 10177  0017F2  C001  F158         	movff	?___fladd,_powf$2039
 10178  0017F6  C002  F159         	movff	?___fladd+1,_powf$2039+1
 10179  0017FA  C003  F15A         	movff	?___fladd+2,_powf$2039+2
 10180  0017FE  C004  F15B         	movff	?___fladd+3,_powf$2039+3
 10181  001802  0EAB               	movlw	171
 10182  001804  6E05               	movwf	___fladd@a^0,c
 10183  001806  0EAA               	movlw	170
 10184  001808  6E06               	movwf	(___fladd@a+1)^0,c
 10185  00180A  0EAA               	movlw	170
 10186  00180C  6E07               	movwf	(___fladd@a+2)^0,c
 10187  00180E  0E3E               	movlw	62
 10188  001810  6E08               	movwf	(___fladd@a+3)^0,c
 10189  001812  C18C  F015         	movff	powf@s2,___flmul@a
 10190  001816  C18D  F016         	movff	powf@s2+1,___flmul@a+1
 10191  00181A  C18E  F017         	movff	powf@s2+2,___flmul@a+2
 10192  00181E  C18F  F018         	movff	powf@s2+3,___flmul@a+3
 10193  001822  C158  F011         	movff	_powf$2039,___flmul@b
 10194  001826  C159  F012         	movff	_powf$2039+1,___flmul@b+1
 10195  00182A  C15A  F013         	movff	_powf$2039+2,___flmul@b+2
 10196  00182E  C15B  F014         	movff	_powf$2039+3,___flmul@b+3
 10197  001832  EC25  F023         	call	___flmul	;wreg free
 10198  001836  C011  F001         	movff	?___flmul,___fladd@b
 10199  00183A  C012  F002         	movff	?___flmul+1,___fladd@b+1
 10200  00183E  C013  F003         	movff	?___flmul+2,___fladd@b+2
 10201  001842  C014  F004         	movff	?___flmul+3,___fladd@b+3
 10202  001846  ECCE  F024         	call	___fladd	;wreg free
 10203  00184A  C001  F148         	movff	?___fladd,_powf$2040
 10204  00184E  C002  F149         	movff	?___fladd+1,_powf$2040+1
 10205  001852  C003  F14A         	movff	?___fladd+2,_powf$2040+2
 10206  001856  C004  F14B         	movff	?___fladd+3,_powf$2040+3
 10207  00185A  0EB7               	movlw	183
 10208  00185C  6E05               	movwf	___fladd@a^0,c
 10209  00185E  0E6D               	movlw	109
 10210  001860  6E06               	movwf	(___fladd@a+1)^0,c
 10211  001862  0EDB               	movlw	219
 10212  001864  6E07               	movwf	(___fladd@a+2)^0,c
 10213  001866  0E3E               	movlw	62
 10214  001868  6E08               	movwf	(___fladd@a+3)^0,c
 10215  00186A  C18C  F015         	movff	powf@s2,___flmul@a
 10216  00186E  C18D  F016         	movff	powf@s2+1,___flmul@a+1
 10217  001872  C18E  F017         	movff	powf@s2+2,___flmul@a+2
 10218  001876  C18F  F018         	movff	powf@s2+3,___flmul@a+3
 10219  00187A  C148  F011         	movff	_powf$2040,___flmul@b
 10220  00187E  C149  F012         	movff	_powf$2040+1,___flmul@b+1
 10221  001882  C14A  F013         	movff	_powf$2040+2,___flmul@b+2
 10222  001886  C14B  F014         	movff	_powf$2040+3,___flmul@b+3
 10223  00188A  EC25  F023         	call	___flmul	;wreg free
 10224  00188E  C011  F001         	movff	?___flmul,___fladd@b
 10225  001892  C012  F002         	movff	?___flmul+1,___fladd@b+1
 10226  001896  C013  F003         	movff	?___flmul+2,___fladd@b+2
 10227  00189A  C014  F004         	movff	?___flmul+3,___fladd@b+3
 10228  00189E  ECCE  F024         	call	___fladd	;wreg free
 10229  0018A2  C001  F138         	movff	?___fladd,_powf$2042
 10230  0018A6  C002  F139         	movff	?___fladd+1,_powf$2042+1
 10231  0018AA  C003  F13A         	movff	?___fladd+2,_powf$2042+2
 10232  0018AE  C004  F13B         	movff	?___fladd+3,_powf$2042+3
 10233  0018B2  0E9A               	movlw	154
 10234  0018B4  6E05               	movwf	___fladd@a^0,c
 10235  0018B6  0E99               	movlw	153
 10236  0018B8  6E06               	movwf	(___fladd@a+1)^0,c
 10237  0018BA  0E19               	movlw	25
 10238  0018BC  6E07               	movwf	(___fladd@a+2)^0,c
 10239  0018BE  0E3F               	movlw	63
 10240  0018C0  6E08               	movwf	(___fladd@a+3)^0,c
 10241  0018C2  C18C  F015         	movff	powf@s2,___flmul@a
 10242  0018C6  C18D  F016         	movff	powf@s2+1,___flmul@a+1
 10243  0018CA  C18E  F017         	movff	powf@s2+2,___flmul@a+2
 10244  0018CE  C18F  F018         	movff	powf@s2+3,___flmul@a+3
 10245  0018D2  C138  F011         	movff	_powf$2042,___flmul@b
 10246  0018D6  C139  F012         	movff	_powf$2042+1,___flmul@b+1
 10247  0018DA  C13A  F013         	movff	_powf$2042+2,___flmul@b+2
 10248  0018DE  C13B  F014         	movff	_powf$2042+3,___flmul@b+3
 10249  0018E2  EC25  F023         	call	___flmul	;wreg free
 10250  0018E6  C011  F001         	movff	?___flmul,___fladd@b
 10251  0018EA  C012  F002         	movff	?___flmul+1,___fladd@b+1
 10252  0018EE  C013  F003         	movff	?___flmul+2,___fladd@b+2
 10253  0018F2  C014  F004         	movff	?___flmul+3,___fladd@b+3
 10254  0018F6  ECCE  F024         	call	___fladd	;wreg free
 10255  0018FA  C001  F100         	movff	?___fladd,_powf$2043
 10256  0018FE  C002  F101         	movff	?___fladd+1,_powf$2043+1
 10257  001902  C003  F102         	movff	?___fladd+2,_powf$2043+2
 10258  001906  C004  F103         	movff	?___fladd+3,_powf$2043+3
 10259  00190A  C18C  F015         	movff	powf@s2,___flmul@a
 10260  00190E  C18D  F016         	movff	powf@s2+1,___flmul@a+1
 10261  001912  C18E  F017         	movff	powf@s2+2,___flmul@a+2
 10262  001916  C18F  F018         	movff	powf@s2+3,___flmul@a+3
 10263  00191A  C18C  F011         	movff	powf@s2,___flmul@b
 10264  00191E  C18D  F012         	movff	powf@s2+1,___flmul@b+1
 10265  001922  C18E  F013         	movff	powf@s2+2,___flmul@b+2
 10266  001926  C18F  F014         	movff	powf@s2+3,___flmul@b+3
 10267  00192A  EC25  F023         	call	___flmul	;wreg free
 10268  00192E  C011  F104         	movff	?___flmul,_powf$2044
 10269  001932  C012  F105         	movff	?___flmul+1,_powf$2044+1
 10270  001936  C013  F106         	movff	?___flmul+2,_powf$2044+2
 10271  00193A  C014  F107         	movff	?___flmul+3,_powf$2044+3
 10272  00193E  C100  F011         	movff	_powf$2043,___flmul@b
 10273  001942  C101  F012         	movff	_powf$2043+1,___flmul@b+1
 10274  001946  C102  F013         	movff	_powf$2043+2,___flmul@b+2
 10275  00194A  C103  F014         	movff	_powf$2043+3,___flmul@b+3
 10276  00194E  C104  F015         	movff	_powf$2044,___flmul@a
 10277  001952  C105  F016         	movff	_powf$2044+1,___flmul@a+1
 10278  001956  C106  F017         	movff	_powf$2044+2,___flmul@a+2
 10279  00195A  C107  F018         	movff	_powf$2044+3,___flmul@a+3
 10280  00195E  EC25  F023         	call	___flmul	;wreg free
 10281  001962  C011  F14C         	movff	?___flmul,powf@r
 10282  001966  C012  F14D         	movff	?___flmul+1,powf@r+1
 10283  00196A  C013  F14E         	movff	?___flmul+2,powf@r+2
 10284  00196E  C014  F14F         	movff	?___flmul+3,powf@r+3
 10285  001972  C130  F015         	movff	powf@s_l,___flmul@a
 10286  001976  C131  F016         	movff	powf@s_l+1,___flmul@a+1
 10287  00197A  C132  F017         	movff	powf@s_l+2,___flmul@a+2
 10288  00197E  C133  F018         	movff	powf@s_l+3,___flmul@a+3
 10289  001982  C154  F005         	movff	powf@s,___fladd@a
 10290  001986  C155  F006         	movff	powf@s+1,___fladd@a+1
 10291  00198A  C156  F007         	movff	powf@s+2,___fladd@a+2
 10292  00198E  C157  F008         	movff	powf@s+3,___fladd@a+3
 10293  001992  C16C  F001         	movff	powf@s_h,___fladd@b
 10294  001996  C16D  F002         	movff	powf@s_h+1,___fladd@b+1
 10295  00199A  C16E  F003         	movff	powf@s_h+2,___fladd@b+2
 10296  00199E  C16F  F004         	movff	powf@s_h+3,___fladd@b+3
 10297  0019A2  ECCE  F024         	call	___fladd	;wreg free
 10298  0019A6  C001  F011         	movff	?___fladd,___flmul@b
 10299  0019AA  C002  F012         	movff	?___fladd+1,___flmul@b+1
 10300  0019AE  C003  F013         	movff	?___fladd+2,___flmul@b+2
 10301  0019B2  C004  F014         	movff	?___fladd+3,___flmul@b+3
 10302  0019B6  EC25  F023         	call	___flmul	;wreg free
 10303  0019BA  C011  F15C         	movff	?___flmul,_powf$2045
 10304  0019BE  C012  F15D         	movff	?___flmul+1,_powf$2045+1
 10305  0019C2  C013  F15E         	movff	?___flmul+2,_powf$2045+2
 10306  0019C6  C014  F15F         	movff	?___flmul+3,_powf$2045+3
 10307  0019CA  C14C  F001         	movff	powf@r,___fladd@b
 10308  0019CE  C14D  F002         	movff	powf@r+1,___fladd@b+1
 10309  0019D2  C14E  F003         	movff	powf@r+2,___fladd@b+2
 10310  0019D6  C14F  F004         	movff	powf@r+3,___fladd@b+3
 10311  0019DA  C15C  F005         	movff	_powf$2045,___fladd@a
 10312  0019DE  C15D  F006         	movff	_powf$2045+1,___fladd@a+1
 10313  0019E2  C15E  F007         	movff	_powf$2045+2,___fladd@a+2
 10314  0019E6  C15F  F008         	movff	_powf$2045+3,___fladd@a+3
 10315  0019EA  ECCE  F024         	call	___fladd	;wreg free
 10316  0019EE  C001  F14C         	movff	?___fladd,powf@r
 10317  0019F2  C002  F14D         	movff	?___fladd+1,powf@r+1
 10318  0019F6  C003  F14E         	movff	?___fladd+2,powf@r+2
 10319  0019FA  C004  F14F         	movff	?___fladd+3,powf@r+3
 10320  0019FE  C16C  F011         	movff	powf@s_h,___flmul@b
 10321  001A02  C16D  F012         	movff	powf@s_h+1,___flmul@b+1
 10322  001A06  C16E  F013         	movff	powf@s_h+2,___flmul@b+2
 10323  001A0A  C16F  F014         	movff	powf@s_h+3,___flmul@b+3
 10324  001A0E  C16C  F015         	movff	powf@s_h,___flmul@a
 10325  001A12  C16D  F016         	movff	powf@s_h+1,___flmul@a+1
 10326  001A16  C16E  F017         	movff	powf@s_h+2,___flmul@a+2
 10327  001A1A  C16F  F018         	movff	powf@s_h+3,___flmul@a+3
 10328  001A1E  EC25  F023         	call	___flmul	;wreg free
 10329  001A22  C011  F18C         	movff	?___flmul,powf@s2
 10330  001A26  C012  F18D         	movff	?___flmul+1,powf@s2+1
 10331  001A2A  C013  F18E         	movff	?___flmul+2,powf@s2+2
 10332  001A2E  C014  F18F         	movff	?___flmul+3,powf@s2+3
 10333  001A32  0E00               	movlw	0
 10334  001A34  6E05               	movwf	___fladd@a^0,c
 10335  001A36  0E00               	movlw	0
 10336  001A38  6E06               	movwf	(___fladd@a+1)^0,c
 10337  001A3A  0E40               	movlw	64
 10338  001A3C  6E07               	movwf	(___fladd@a+2)^0,c
 10339  001A3E  0E40               	movlw	64
 10340  001A40  6E08               	movwf	(___fladd@a+3)^0,c
 10341  001A42  C18C  F001         	movff	powf@s2,___fladd@b
 10342  001A46  C18D  F002         	movff	powf@s2+1,___fladd@b+1
 10343  001A4A  C18E  F003         	movff	powf@s2+2,___fladd@b+2
 10344  001A4E  C18F  F004         	movff	powf@s2+3,___fladd@b+3
 10345  001A52  ECCE  F024         	call	___fladd	;wreg free
 10346  001A56  C001  F15C         	movff	?___fladd,_powf$2045
 10347  001A5A  C002  F15D         	movff	?___fladd+1,_powf$2045+1
 10348  001A5E  C003  F15E         	movff	?___fladd+2,_powf$2045+2
 10349  001A62  C004  F15F         	movff	?___fladd+3,_powf$2045+3
 10350  001A66  C15C  F001         	movff	_powf$2045,___fladd@b
 10351  001A6A  C15D  F002         	movff	_powf$2045+1,___fladd@b+1
 10352  001A6E  C15E  F003         	movff	_powf$2045+2,___fladd@b+2
 10353  001A72  C15F  F004         	movff	_powf$2045+3,___fladd@b+3
 10354  001A76  C14C  F005         	movff	powf@r,___fladd@a
 10355  001A7A  C14D  F006         	movff	powf@r+1,___fladd@a+1
 10356  001A7E  C14E  F007         	movff	powf@r+2,___fladd@a+2
 10357  001A82  C14F  F008         	movff	powf@r+3,___fladd@a+3
 10358  001A86  ECCE  F024         	call	___fladd	;wreg free
 10359  001A8A  C001  F168         	movff	?___fladd,powf@t_h
 10360  001A8E  C002  F169         	movff	?___fladd+1,powf@t_h+1
 10361  001A92  C003  F16A         	movff	?___fladd+2,powf@t_h+2
 10362  001A96  C004  F16B         	movff	?___fladd+3,powf@t_h+3
 10363  001A9A  C168  F1B8         	movff	powf@t_h,powf@__xc8_float_word
 10364  001A9E  C169  F1B9         	movff	powf@t_h+1,powf@__xc8_float_word+1
 10365  001AA2  C16A  F1BA         	movff	powf@t_h+2,powf@__xc8_float_word+2
 10366  001AA6  C16B  F1BB         	movff	powf@t_h+3,powf@__xc8_float_word+3
 10367  001AAA  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10368  001AAE  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10369  001AB2  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10370  001AB6  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10371  001ABA  0E00               	movlw	0
 10372  001ABC  0101               	movlb	1	; () banked
 10373  001ABE  1594               	andwf	powf@is& (0+255),w,b
 10374  001AC0  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10375  001AC2  0EF0               	movlw	240
 10376  001AC4  1595               	andwf	(powf@is+1)& (0+255),w,b
 10377  001AC6  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10378  001AC8  0EFF               	movlw	255
 10379  001ACA  1596               	andwf	(powf@is+2)& (0+255),w,b
 10380  001ACC  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10381  001ACE  0EFF               	movlw	255
 10382  001AD0  1597               	andwf	(powf@is+3)& (0+255),w,b
 10383  001AD2  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10384                           
 10385                           ; BSR set to: 1
 10386  001AD4  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
 10387  001AD8  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
 10388  001ADC  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
 10389  001AE0  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
 10390                           
 10391                           ; BSR set to: 1
 10392  001AE4  0E00               	movlw	0
 10393  001AE6  6E05               	movwf	___fladd@a^0,c
 10394  001AE8  0E00               	movlw	0
 10395  001AEA  6E06               	movwf	(___fladd@a+1)^0,c
 10396  001AEC  0E40               	movlw	64
 10397  001AEE  6E07               	movwf	(___fladd@a+2)^0,c
 10398  001AF0  0EC0               	movlw	192
 10399  001AF2  6E08               	movwf	(___fladd@a+3)^0,c
 10400  001AF4  C168  F001         	movff	powf@t_h,___fladd@b
 10401  001AF8  C169  F002         	movff	powf@t_h+1,___fladd@b+1
 10402  001AFC  C16A  F003         	movff	powf@t_h+2,___fladd@b+2
 10403  001B00  C16B  F004         	movff	powf@t_h+3,___fladd@b+3
 10404  001B04  ECCE  F024         	call	___fladd	;wreg free
 10405  001B08  C001  F13C         	movff	?___fladd,_powf$2046
 10406  001B0C  C002  F13D         	movff	?___fladd+1,_powf$2046+1
 10407  001B10  C003  F13E         	movff	?___fladd+2,_powf$2046+2
 10408  001B14  C004  F13F         	movff	?___fladd+3,_powf$2046+3
 10409  001B18  C18C  F02E         	movff	powf@s2,___flsub@a
 10410  001B1C  C18D  F02F         	movff	powf@s2+1,___flsub@a+1
 10411  001B20  C18E  F030         	movff	powf@s2+2,___flsub@a+2
 10412  001B24  C18F  F031         	movff	powf@s2+3,___flsub@a+3
 10413  001B28  C13C  F02A         	movff	_powf$2046,___flsub@b
 10414  001B2C  C13D  F02B         	movff	_powf$2046+1,___flsub@b+1
 10415  001B30  C13E  F02C         	movff	_powf$2046+2,___flsub@b+2
 10416  001B34  C13F  F02D         	movff	_powf$2046+3,___flsub@b+3
 10417  001B38  EC68  F033         	call	___flsub	;wreg free
 10418  001B3C  C02A  F140         	movff	?___flsub,_powf$2047
 10419  001B40  C02B  F141         	movff	?___flsub+1,_powf$2047+1
 10420  001B44  C02C  F142         	movff	?___flsub+2,_powf$2047+2
 10421  001B48  C02D  F143         	movff	?___flsub+3,_powf$2047+3
 10422  001B4C  C14C  F02A         	movff	powf@r,___flsub@b
 10423  001B50  C14D  F02B         	movff	powf@r+1,___flsub@b+1
 10424  001B54  C14E  F02C         	movff	powf@r+2,___flsub@b+2
 10425  001B58  C14F  F02D         	movff	powf@r+3,___flsub@b+3
 10426  001B5C  C140  F02E         	movff	_powf$2047,___flsub@a
 10427  001B60  C141  F02F         	movff	_powf$2047+1,___flsub@a+1
 10428  001B64  C142  F030         	movff	_powf$2047+2,___flsub@a+2
 10429  001B68  C143  F031         	movff	_powf$2047+3,___flsub@a+3
 10430  001B6C  EC68  F033         	call	___flsub	;wreg free
 10431  001B70  C02A  F134         	movff	?___flsub,powf@t_l
 10432  001B74  C02B  F135         	movff	?___flsub+1,powf@t_l+1
 10433  001B78  C02C  F136         	movff	?___flsub+2,powf@t_l+2
 10434  001B7C  C02D  F137         	movff	?___flsub+3,powf@t_l+3
 10435  001B80  C16C  F011         	movff	powf@s_h,___flmul@b
 10436  001B84  C16D  F012         	movff	powf@s_h+1,___flmul@b+1
 10437  001B88  C16E  F013         	movff	powf@s_h+2,___flmul@b+2
 10438  001B8C  C16F  F014         	movff	powf@s_h+3,___flmul@b+3
 10439  001B90  C168  F015         	movff	powf@t_h,___flmul@a
 10440  001B94  C169  F016         	movff	powf@t_h+1,___flmul@a+1
 10441  001B98  C16A  F017         	movff	powf@t_h+2,___flmul@a+2
 10442  001B9C  C16B  F018         	movff	powf@t_h+3,___flmul@a+3
 10443  001BA0  EC25  F023         	call	___flmul	;wreg free
 10444  001BA4  C011  F174         	movff	?___flmul,powf@u
 10445  001BA8  C012  F175         	movff	?___flmul+1,powf@u+1
 10446  001BAC  C013  F176         	movff	?___flmul+2,powf@u+2
 10447  001BB0  C014  F177         	movff	?___flmul+3,powf@u+3
 10448  001BB4  C168  F015         	movff	powf@t_h,___flmul@a
 10449  001BB8  C169  F016         	movff	powf@t_h+1,___flmul@a+1
 10450  001BBC  C16A  F017         	movff	powf@t_h+2,___flmul@a+2
 10451  001BC0  C16B  F018         	movff	powf@t_h+3,___flmul@a+3
 10452  001BC4  C130  F011         	movff	powf@s_l,___flmul@b
 10453  001BC8  C131  F012         	movff	powf@s_l+1,___flmul@b+1
 10454  001BCC  C132  F013         	movff	powf@s_l+2,___flmul@b+2
 10455  001BD0  C133  F014         	movff	powf@s_l+3,___flmul@b+3
 10456  001BD4  EC25  F023         	call	___flmul	;wreg free
 10457  001BD8  C011  F001         	movff	?___flmul,___fladd@b
 10458  001BDC  C012  F002         	movff	?___flmul+1,___fladd@b+1
 10459  001BE0  C013  F003         	movff	?___flmul+2,___fladd@b+2
 10460  001BE4  C014  F004         	movff	?___flmul+3,___fladd@b+3
 10461  001BE8  C154  F015         	movff	powf@s,___flmul@a
 10462  001BEC  C155  F016         	movff	powf@s+1,___flmul@a+1
 10463  001BF0  C156  F017         	movff	powf@s+2,___flmul@a+2
 10464  001BF4  C157  F018         	movff	powf@s+3,___flmul@a+3
 10465  001BF8  C134  F011         	movff	powf@t_l,___flmul@b
 10466  001BFC  C135  F012         	movff	powf@t_l+1,___flmul@b+1
 10467  001C00  C136  F013         	movff	powf@t_l+2,___flmul@b+2
 10468  001C04  C137  F014         	movff	powf@t_l+3,___flmul@b+3
 10469  001C08  EC25  F023         	call	___flmul	;wreg free
 10470  001C0C  C011  F005         	movff	?___flmul,___fladd@a
 10471  001C10  C012  F006         	movff	?___flmul+1,___fladd@a+1
 10472  001C14  C013  F007         	movff	?___flmul+2,___fladd@a+2
 10473  001C18  C014  F008         	movff	?___flmul+3,___fladd@a+3
 10474  001C1C  ECCE  F024         	call	___fladd	;wreg free
 10475  001C20  C001  F178         	movff	?___fladd,powf@v
 10476  001C24  C002  F179         	movff	?___fladd+1,powf@v+1
 10477  001C28  C003  F17A         	movff	?___fladd+2,powf@v+2
 10478  001C2C  C004  F17B         	movff	?___fladd+3,powf@v+3
 10479  001C30  C174  F001         	movff	powf@u,___fladd@b
 10480  001C34  C175  F002         	movff	powf@u+1,___fladd@b+1
 10481  001C38  C176  F003         	movff	powf@u+2,___fladd@b+2
 10482  001C3C  C177  F004         	movff	powf@u+3,___fladd@b+3
 10483  001C40  C178  F005         	movff	powf@v,___fladd@a
 10484  001C44  C179  F006         	movff	powf@v+1,___fladd@a+1
 10485  001C48  C17A  F007         	movff	powf@v+2,___fladd@a+2
 10486  001C4C  C17B  F008         	movff	powf@v+3,___fladd@a+3
 10487  001C50  ECCE  F024         	call	___fladd	;wreg free
 10488  001C54  C001  F19C         	movff	?___fladd,powf@p_h
 10489  001C58  C002  F19D         	movff	?___fladd+1,powf@p_h+1
 10490  001C5C  C003  F19E         	movff	?___fladd+2,powf@p_h+2
 10491  001C60  C004  F19F         	movff	?___fladd+3,powf@p_h+3
 10492  001C64  C19C  F1B8         	movff	powf@p_h,powf@__xc8_float_word
 10493  001C68  C19D  F1B9         	movff	powf@p_h+1,powf@__xc8_float_word+1
 10494  001C6C  C19E  F1BA         	movff	powf@p_h+2,powf@__xc8_float_word+2
 10495  001C70  C19F  F1BB         	movff	powf@p_h+3,powf@__xc8_float_word+3
 10496  001C74  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10497  001C78  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10498  001C7C  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10499  001C80  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10500  001C84  0E00               	movlw	0
 10501  001C86  0101               	movlb	1	; () banked
 10502  001C88  1594               	andwf	powf@is& (0+255),w,b
 10503  001C8A  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10504  001C8C  0EF0               	movlw	240
 10505  001C8E  1595               	andwf	(powf@is+1)& (0+255),w,b
 10506  001C90  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10507  001C92  0EFF               	movlw	255
 10508  001C94  1596               	andwf	(powf@is+2)& (0+255),w,b
 10509  001C96  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10510  001C98  0EFF               	movlw	255
 10511  001C9A  1597               	andwf	(powf@is+3)& (0+255),w,b
 10512  001C9C  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10513                           
 10514                           ; BSR set to: 1
 10515  001C9E  C1B8  F19C         	movff	powf@__xc8_float_word,powf@p_h
 10516  001CA2  C1B9  F19D         	movff	powf@__xc8_float_word+1,powf@p_h+1
 10517  001CA6  C1BA  F19E         	movff	powf@__xc8_float_word+2,powf@p_h+2
 10518  001CAA  C1BB  F19F         	movff	powf@__xc8_float_word+3,powf@p_h+3
 10519                           
 10520                           ; BSR set to: 1
 10521  001CAE  C174  F02E         	movff	powf@u,___flsub@a
 10522  001CB2  C175  F02F         	movff	powf@u+1,___flsub@a+1
 10523  001CB6  C176  F030         	movff	powf@u+2,___flsub@a+2
 10524  001CBA  C177  F031         	movff	powf@u+3,___flsub@a+3
 10525  001CBE  C19C  F02A         	movff	powf@p_h,___flsub@b
 10526  001CC2  C19D  F02B         	movff	powf@p_h+1,___flsub@b+1
 10527  001CC6  C19E  F02C         	movff	powf@p_h+2,___flsub@b+2
 10528  001CCA  C19F  F02D         	movff	powf@p_h+3,___flsub@b+3
 10529  001CCE  EC68  F033         	call	___flsub	;wreg free
 10530  001CD2  C02A  F198         	movff	?___flsub,_powf$2041
 10531  001CD6  C02B  F199         	movff	?___flsub+1,_powf$2041+1
 10532  001CDA  C02C  F19A         	movff	?___flsub+2,_powf$2041+2
 10533  001CDE  C02D  F19B         	movff	?___flsub+3,_powf$2041+3
 10534  001CE2  C178  F02A         	movff	powf@v,___flsub@b
 10535  001CE6  C179  F02B         	movff	powf@v+1,___flsub@b+1
 10536  001CEA  C17A  F02C         	movff	powf@v+2,___flsub@b+2
 10537  001CEE  C17B  F02D         	movff	powf@v+3,___flsub@b+3
 10538  001CF2  C198  F02E         	movff	_powf$2041,___flsub@a
 10539  001CF6  C199  F02F         	movff	_powf$2041+1,___flsub@a+1
 10540  001CFA  C19A  F030         	movff	_powf$2041+2,___flsub@a+2
 10541  001CFE  C19B  F031         	movff	_powf$2041+3,___flsub@a+3
 10542  001D02  EC68  F033         	call	___flsub	;wreg free
 10543  001D06  C02A  F164         	movff	?___flsub,powf@p_l
 10544  001D0A  C02B  F165         	movff	?___flsub+1,powf@p_l+1
 10545  001D0E  C02C  F166         	movff	?___flsub+2,powf@p_l+2
 10546  001D12  C02D  F167         	movff	?___flsub+3,powf@p_l+3
 10547  001D16  C19C  F011         	movff	powf@p_h,___flmul@b
 10548  001D1A  C19D  F012         	movff	powf@p_h+1,___flmul@b+1
 10549  001D1E  C19E  F013         	movff	powf@p_h+2,___flmul@b+2
 10550  001D22  C19F  F014         	movff	powf@p_h+3,___flmul@b+3
 10551  001D26  0E00               	movlw	0
 10552  001D28  6E15               	movwf	___flmul@a^0,c
 10553  001D2A  0E40               	movlw	64
 10554  001D2C  6E16               	movwf	(___flmul@a+1)^0,c
 10555  001D2E  0E76               	movlw	118
 10556  001D30  6E17               	movwf	(___flmul@a+2)^0,c
 10557  001D32  0E3F               	movlw	63
 10558  001D34  6E18               	movwf	(___flmul@a+3)^0,c
 10559  001D36  EC25  F023         	call	___flmul	;wreg free
 10560  001D3A  C011  F120         	movff	?___flmul,powf@z_h
 10561  001D3E  C012  F121         	movff	?___flmul+1,powf@z_h+1
 10562  001D42  C013  F122         	movff	?___flmul+2,powf@z_h+2
 10563  001D46  C014  F123         	movff	?___flmul+3,powf@z_h+3
 10564  001D4A  0E4F               	movlw	79
 10565  001D4C  6E15               	movwf	___flmul@a^0,c
 10566  001D4E  0E38               	movlw	56
 10567  001D50  6E16               	movwf	(___flmul@a+1)^0,c
 10568  001D52  0E76               	movlw	118
 10569  001D54  6E17               	movwf	(___flmul@a+2)^0,c
 10570  001D56  0E3F               	movlw	63
 10571  001D58  6E18               	movwf	(___flmul@a+3)^0,c
 10572  001D5A  C164  F011         	movff	powf@p_l,___flmul@b
 10573  001D5E  C165  F012         	movff	powf@p_l+1,___flmul@b+1
 10574  001D62  C166  F013         	movff	powf@p_l+2,___flmul@b+2
 10575  001D66  C167  F014         	movff	powf@p_l+3,___flmul@b+3
 10576  001D6A  EC25  F023         	call	___flmul	;wreg free
 10577  001D6E  C011  F005         	movff	?___flmul,___fladd@a
 10578  001D72  C012  F006         	movff	?___flmul+1,___fladd@a+1
 10579  001D76  C013  F007         	movff	?___flmul+2,___fladd@a+2
 10580  001D7A  C014  F008         	movff	?___flmul+3,___fladd@a+3
 10581  001D7E  0EC6               	movlw	198
 10582  001D80  6E15               	movwf	___flmul@a^0,c
 10583  001D82  0E23               	movlw	35
 10584  001D84  6E16               	movwf	(___flmul@a+1)^0,c
 10585  001D86  0EF6               	movlw	246
 10586  001D88  6E17               	movwf	(___flmul@a+2)^0,c
 10587  001D8A  0EB8               	movlw	184
 10588  001D8C  6E18               	movwf	(___flmul@a+3)^0,c
 10589  001D8E  C19C  F011         	movff	powf@p_h,___flmul@b
 10590  001D92  C19D  F012         	movff	powf@p_h+1,___flmul@b+1
 10591  001D96  C19E  F013         	movff	powf@p_h+2,___flmul@b+2
 10592  001D9A  C19F  F014         	movff	powf@p_h+3,___flmul@b+3
 10593  001D9E  EC25  F023         	call	___flmul	;wreg free
 10594  001DA2  C011  F001         	movff	?___flmul,___fladd@b
 10595  001DA6  C012  F002         	movff	?___flmul+1,___fladd@b+1
 10596  001DAA  C013  F003         	movff	?___flmul+2,___fladd@b+2
 10597  001DAE  C014  F004         	movff	?___flmul+3,___fladd@b+3
 10598  001DB2  ECCE  F024         	call	___fladd	;wreg free
 10599  001DB6  C001  F15C         	movff	?___fladd,_powf$2045
 10600  001DBA  C002  F15D         	movff	?___fladd+1,_powf$2045+1
 10601  001DBE  C003  F15E         	movff	?___fladd+2,_powf$2045+2
 10602  001DC2  C004  F15F         	movff	?___fladd+3,_powf$2045+3
 10603  001DC6  C15C  F001         	movff	_powf$2045,___fladd@b
 10604  001DCA  C15D  F002         	movff	_powf$2045+1,___fladd@b+1
 10605  001DCE  C15E  F003         	movff	_powf$2045+2,___fladd@b+2
 10606  001DD2  C15F  F004         	movff	_powf$2045+3,___fladd@b+3
 10607  001DD6  C1A0  F06F         	movff	powf@k,??_powf
 10608  001DDA  C1A1  F070         	movff	powf@k+1,??_powf+1
 10609  001DDE  90D8               	bcf	status,0,c
 10610  001DE0  366F               	rlcf	??_powf^0,f,c
 10611  001DE2  3670               	rlcf	(??_powf+1)^0,f,c
 10612  001DE4  90D8               	bcf	status,0,c
 10613  001DE6  366F               	rlcf	??_powf^0,f,c
 10614  001DE8  3670               	rlcf	(??_powf+1)^0,f,c
 10615  001DEA  0E01               	movlw	low _dp_l
 10616  001DEC  246F               	addwf	??_powf^0,w,c
 10617  001DEE  6EF6               	movwf	tblptrl,c
 10618  001DF0  0E06               	movlw	high _dp_l
 10619  001DF2  2070               	addwfc	(??_powf+1)^0,w,c
 10620  001DF4  6EF7               	movwf	tblptrh,c
 10621  001DF6                     	if	0	;There are less than 3 active tblptr bytes
 10622  001DF6                     	endif
 10623  001DF6  0009               	tblrd		*+
 10624  001DF8  CFF5 F005          	movff	tablat,___fladd@a
 10625  001DFC  0009               	tblrd		*+
 10626  001DFE  CFF5 F006          	movff	tablat,___fladd@a+1
 10627  001E02  0009               	tblrd		*+
 10628  001E04  CFF5 F007          	movff	tablat,___fladd@a+2
 10629  001E08  000A               	tblrd		*-
 10630  001E0A  CFF5 F008          	movff	tablat,___fladd@a+3
 10631  001E0E  ECCE  F024         	call	___fladd	;wreg free
 10632  001E12  C001  F124         	movff	?___fladd,powf@z_l
 10633  001E16  C002  F125         	movff	?___fladd+1,powf@z_l+1
 10634  001E1A  C003  F126         	movff	?___fladd+2,powf@z_l+2
 10635  001E1E  C004  F127         	movff	?___fladd+3,powf@z_l+3
 10636  001E22  C188  F001         	movff	powf@n,___xxtofl@val
 10637  001E26  C189  F002         	movff	powf@n+1,___xxtofl@val+1
 10638  001E2A  C18A  F003         	movff	powf@n+2,___xxtofl@val+2
 10639  001E2E  C18B  F004         	movff	powf@n+3,___xxtofl@val+3
 10640  001E32  0E01               	movlw	1
 10641  001E34  EC68  F02C         	call	___xxtofl
 10642  001E38  C001  F1B0         	movff	?___xxtofl,powf@t
 10643  001E3C  C002  F1B1         	movff	?___xxtofl+1,powf@t+1
 10644  001E40  C003  F1B2         	movff	?___xxtofl+2,powf@t+2
 10645  001E44  C004  F1B3         	movff	?___xxtofl+3,powf@t+3
 10646  001E48  C124  F005         	movff	powf@z_l,___fladd@a
 10647  001E4C  C125  F006         	movff	powf@z_l+1,___fladd@a+1
 10648  001E50  C126  F007         	movff	powf@z_l+2,___fladd@a+2
 10649  001E54  C127  F008         	movff	powf@z_l+3,___fladd@a+3
 10650  001E58  C120  F001         	movff	powf@z_h,___fladd@b
 10651  001E5C  C121  F002         	movff	powf@z_h+1,___fladd@b+1
 10652  001E60  C122  F003         	movff	powf@z_h+2,___fladd@b+2
 10653  001E64  C123  F004         	movff	powf@z_h+3,___fladd@b+3
 10654  001E68  ECCE  F024         	call	___fladd	;wreg free
 10655  001E6C  C001  F15C         	movff	?___fladd,_powf$2045
 10656  001E70  C002  F15D         	movff	?___fladd+1,_powf$2045+1
 10657  001E74  C003  F15E         	movff	?___fladd+2,_powf$2045+2
 10658  001E78  C004  F15F         	movff	?___fladd+3,_powf$2045+3
 10659  001E7C  C1A0  F06F         	movff	powf@k,??_powf
 10660  001E80  C1A1  F070         	movff	powf@k+1,??_powf+1
 10661  001E84  90D8               	bcf	status,0,c
 10662  001E86  366F               	rlcf	??_powf^0,f,c
 10663  001E88  3670               	rlcf	(??_powf+1)^0,f,c
 10664  001E8A  90D8               	bcf	status,0,c
 10665  001E8C  366F               	rlcf	??_powf^0,f,c
 10666  001E8E  3670               	rlcf	(??_powf+1)^0,f,c
 10667  001E90  0E09               	movlw	low _dp_h
 10668  001E92  246F               	addwf	??_powf^0,w,c
 10669  001E94  6EF6               	movwf	tblptrl,c
 10670  001E96  0E06               	movlw	high _dp_h
 10671  001E98  2070               	addwfc	(??_powf+1)^0,w,c
 10672  001E9A  6EF7               	movwf	tblptrh,c
 10673  001E9C                     	if	0	;There are less than 3 active tblptr bytes
 10674  001E9C                     	endif
 10675  001E9C  0009               	tblrd		*+
 10676  001E9E  CFF5 F005          	movff	tablat,___fladd@a
 10677  001EA2  0009               	tblrd		*+
 10678  001EA4  CFF5 F006          	movff	tablat,___fladd@a+1
 10679  001EA8  0009               	tblrd		*+
 10680  001EAA  CFF5 F007          	movff	tablat,___fladd@a+2
 10681  001EAE  000A               	tblrd		*-
 10682  001EB0  CFF5 F008          	movff	tablat,___fladd@a+3
 10683  001EB4  C15C  F001         	movff	_powf$2045,___fladd@b
 10684  001EB8  C15D  F002         	movff	_powf$2045+1,___fladd@b+1
 10685  001EBC  C15E  F003         	movff	_powf$2045+2,___fladd@b+2
 10686  001EC0  C15F  F004         	movff	_powf$2045+3,___fladd@b+3
 10687  001EC4  ECCE  F024         	call	___fladd	;wreg free
 10688  001EC8  C001  F108         	movff	?___fladd,_powf$2048
 10689  001ECC  C002  F109         	movff	?___fladd+1,_powf$2048+1
 10690  001ED0  C003  F10A         	movff	?___fladd+2,_powf$2048+2
 10691  001ED4  C004  F10B         	movff	?___fladd+3,_powf$2048+3
 10692  001ED8  C108  F001         	movff	_powf$2048,___fladd@b
 10693  001EDC  C109  F002         	movff	_powf$2048+1,___fladd@b+1
 10694  001EE0  C10A  F003         	movff	_powf$2048+2,___fladd@b+2
 10695  001EE4  C10B  F004         	movff	_powf$2048+3,___fladd@b+3
 10696  001EE8  C1B0  F005         	movff	powf@t,___fladd@a
 10697  001EEC  C1B1  F006         	movff	powf@t+1,___fladd@a+1
 10698  001EF0  C1B2  F007         	movff	powf@t+2,___fladd@a+2
 10699  001EF4  C1B3  F008         	movff	powf@t+3,___fladd@a+3
 10700  001EF8  ECCE  F024         	call	___fladd	;wreg free
 10701  001EFC  C001  F180         	movff	?___fladd,powf@t1
 10702  001F00  C002  F181         	movff	?___fladd+1,powf@t1+1
 10703  001F04  C003  F182         	movff	?___fladd+2,powf@t1+2
 10704  001F08  C004  F183         	movff	?___fladd+3,powf@t1+3
 10705  001F0C  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
 10706  001F10  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
 10707  001F14  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
 10708  001F18  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
 10709  001F1C  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10710  001F20  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10711  001F24  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10712  001F28  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10713  001F2C  0E00               	movlw	0
 10714  001F2E  0101               	movlb	1	; () banked
 10715  001F30  1594               	andwf	powf@is& (0+255),w,b
 10716  001F32  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10717  001F34  0EF0               	movlw	240
 10718  001F36  1595               	andwf	(powf@is+1)& (0+255),w,b
 10719  001F38  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10720  001F3A  0EFF               	movlw	255
 10721  001F3C  1596               	andwf	(powf@is+2)& (0+255),w,b
 10722  001F3E  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10723  001F40  0EFF               	movlw	255
 10724  001F42  1597               	andwf	(powf@is+3)& (0+255),w,b
 10725  001F44  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10726                           
 10727                           ; BSR set to: 1
 10728  001F46  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
 10729  001F4A  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
 10730  001F4E  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
 10731  001F52  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
 10732                           
 10733                           ; BSR set to: 1
 10734  001F56  C1B0  F02E         	movff	powf@t,___flsub@a
 10735  001F5A  C1B1  F02F         	movff	powf@t+1,___flsub@a+1
 10736  001F5E  C1B2  F030         	movff	powf@t+2,___flsub@a+2
 10737  001F62  C1B3  F031         	movff	powf@t+3,___flsub@a+3
 10738  001F66  C180  F02A         	movff	powf@t1,___flsub@b
 10739  001F6A  C181  F02B         	movff	powf@t1+1,___flsub@b+1
 10740  001F6E  C182  F02C         	movff	powf@t1+2,___flsub@b+2
 10741  001F72  C183  F02D         	movff	powf@t1+3,___flsub@b+3
 10742  001F76  EC68  F033         	call	___flsub	;wreg free
 10743  001F7A  C02A  F198         	movff	?___flsub,_powf$2041
 10744  001F7E  C02B  F199         	movff	?___flsub+1,_powf$2041+1
 10745  001F82  C02C  F19A         	movff	?___flsub+2,_powf$2041+2
 10746  001F86  C02D  F19B         	movff	?___flsub+3,_powf$2041+3
 10747  001F8A  C1A0  F06F         	movff	powf@k,??_powf
 10748  001F8E  C1A1  F070         	movff	powf@k+1,??_powf+1
 10749  001F92  90D8               	bcf	status,0,c
 10750  001F94  366F               	rlcf	??_powf^0,f,c
 10751  001F96  3670               	rlcf	(??_powf+1)^0,f,c
 10752  001F98  90D8               	bcf	status,0,c
 10753  001F9A  366F               	rlcf	??_powf^0,f,c
 10754  001F9C  3670               	rlcf	(??_powf+1)^0,f,c
 10755  001F9E  0E09               	movlw	low _dp_h
 10756  001FA0  246F               	addwf	??_powf^0,w,c
 10757  001FA2  6EF6               	movwf	tblptrl,c
 10758  001FA4  0E06               	movlw	high _dp_h
 10759  001FA6  2070               	addwfc	(??_powf+1)^0,w,c
 10760  001FA8  6EF7               	movwf	tblptrh,c
 10761  001FAA                     	if	0	;There are less than 3 active tblptr bytes
 10762  001FAA                     	endif
 10763  001FAA  0009               	tblrd		*+
 10764  001FAC  CFF5 F02E          	movff	tablat,___flsub@a
 10765  001FB0  0009               	tblrd		*+
 10766  001FB2  CFF5 F02F          	movff	tablat,___flsub@a+1
 10767  001FB6  0009               	tblrd		*+
 10768  001FB8  CFF5 F030          	movff	tablat,___flsub@a+2
 10769  001FBC  000A               	tblrd		*-
 10770  001FBE  CFF5 F031          	movff	tablat,___flsub@a+3
 10771  001FC2  C198  F02A         	movff	_powf$2041,___flsub@b
 10772  001FC6  C199  F02B         	movff	_powf$2041+1,___flsub@b+1
 10773  001FCA  C19A  F02C         	movff	_powf$2041+2,___flsub@b+2
 10774  001FCE  C19B  F02D         	movff	_powf$2041+3,___flsub@b+3
 10775  001FD2  EC68  F033         	call	___flsub	;wreg free
 10776  001FD6  C02A  F140         	movff	?___flsub,_powf$2047
 10777  001FDA  C02B  F141         	movff	?___flsub+1,_powf$2047+1
 10778  001FDE  C02C  F142         	movff	?___flsub+2,_powf$2047+2
 10779  001FE2  C02D  F143         	movff	?___flsub+3,_powf$2047+3
 10780  001FE6  C120  F02E         	movff	powf@z_h,___flsub@a
 10781  001FEA  C121  F02F         	movff	powf@z_h+1,___flsub@a+1
 10782  001FEE  C122  F030         	movff	powf@z_h+2,___flsub@a+2
 10783  001FF2  C123  F031         	movff	powf@z_h+3,___flsub@a+3
 10784  001FF6  C140  F02A         	movff	_powf$2047,___flsub@b
 10785  001FFA  C141  F02B         	movff	_powf$2047+1,___flsub@b+1
 10786  001FFE  C142  F02C         	movff	_powf$2047+2,___flsub@b+2
 10787  002002  C143  F02D         	movff	_powf$2047+3,___flsub@b+3
 10788  002006  EC68  F033         	call	___flsub	;wreg free
 10789  00200A  C02A  F10C         	movff	?___flsub,_powf$2049
 10790  00200E  C02B  F10D         	movff	?___flsub+1,_powf$2049+1
 10791  002012  C02C  F10E         	movff	?___flsub+2,_powf$2049+2
 10792  002016  C02D  F10F         	movff	?___flsub+3,_powf$2049+3
 10793  00201A  C124  F02A         	movff	powf@z_l,___flsub@b
 10794  00201E  C125  F02B         	movff	powf@z_l+1,___flsub@b+1
 10795  002022  C126  F02C         	movff	powf@z_l+2,___flsub@b+2
 10796  002026  C127  F02D         	movff	powf@z_l+3,___flsub@b+3
 10797  00202A  C10C  F02E         	movff	_powf$2049,___flsub@a
 10798  00202E  C10D  F02F         	movff	_powf$2049+1,___flsub@a+1
 10799  002032  C10E  F030         	movff	_powf$2049+2,___flsub@a+2
 10800  002036  C10F  F031         	movff	_powf$2049+3,___flsub@a+3
 10801  00203A  EC68  F033         	call	___flsub	;wreg free
 10802  00203E                     L8:
 10803  00203E  C02A  F11C         	movff	?___flsub,powf@t2
 10804  002042  C02B  F11D         	movff	?___flsub+1,powf@t2+1
 10805  002046  C02C  F11E         	movff	?___flsub+2,powf@t2+2
 10806  00204A  C02D  F11F         	movff	?___flsub+3,powf@t2+3
 10807  00204E  C0C6  F1B8         	movff	powf@y,powf@__xc8_float_word
 10808  002052  C0C7  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
 10809  002056  C0C8  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
 10810  00205A  C0C9  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
 10811  00205E  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10812  002062  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10813  002066  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10814  00206A  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10815  00206E  0E00               	movlw	0
 10816  002070  0101               	movlb	1	; () banked
 10817  002072  1594               	andwf	powf@is& (0+255),w,b
 10818  002074  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10819  002076  0EF0               	movlw	240
 10820  002078  1595               	andwf	(powf@is+1)& (0+255),w,b
 10821  00207A  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10822  00207C  0EFF               	movlw	255
 10823  00207E  1596               	andwf	(powf@is+2)& (0+255),w,b
 10824  002080  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10825  002082  0EFF               	movlw	255
 10826  002084  1597               	andwf	(powf@is+3)& (0+255),w,b
 10827  002086  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10828                           
 10829                           ; BSR set to: 1
 10830  002088  C1B8  F128         	movff	powf@__xc8_float_word,powf@y1
 10831  00208C  C1B9  F129         	movff	powf@__xc8_float_word+1,powf@y1+1
 10832  002090  C1BA  F12A         	movff	powf@__xc8_float_word+2,powf@y1+2
 10833  002094  C1BB  F12B         	movff	powf@__xc8_float_word+3,powf@y1+3
 10834                           
 10835                           ; BSR set to: 1
 10836  002098  C180  F015         	movff	powf@t1,___flmul@a
 10837  00209C  C181  F016         	movff	powf@t1+1,___flmul@a+1
 10838  0020A0  C182  F017         	movff	powf@t1+2,___flmul@a+2
 10839  0020A4  C183  F018         	movff	powf@t1+3,___flmul@a+3
 10840  0020A8  C128  F02E         	movff	powf@y1,___flsub@a
 10841  0020AC  C129  F02F         	movff	powf@y1+1,___flsub@a+1
 10842  0020B0  C12A  F030         	movff	powf@y1+2,___flsub@a+2
 10843  0020B4  C12B  F031         	movff	powf@y1+3,___flsub@a+3
 10844  0020B8  C0C6  F02A         	movff	powf@y,___flsub@b
 10845  0020BC  C0C7  F02B         	movff	powf@y+1,___flsub@b+1
 10846  0020C0  C0C8  F02C         	movff	powf@y+2,___flsub@b+2
 10847  0020C4  C0C9  F02D         	movff	powf@y+3,___flsub@b+3
 10848  0020C8  EC68  F033         	call	___flsub	;wreg free
 10849  0020CC  C02A  F011         	movff	?___flsub,___flmul@b
 10850  0020D0  C02B  F012         	movff	?___flsub+1,___flmul@b+1
 10851  0020D4  C02C  F013         	movff	?___flsub+2,___flmul@b+2
 10852  0020D8  C02D  F014         	movff	?___flsub+3,___flmul@b+3
 10853  0020DC  EC25  F023         	call	___flmul	;wreg free
 10854  0020E0  C011  F110         	movff	?___flmul,_powf$2050
 10855  0020E4  C012  F111         	movff	?___flmul+1,_powf$2050+1
 10856  0020E8  C013  F112         	movff	?___flmul+2,_powf$2050+2
 10857  0020EC  C014  F113         	movff	?___flmul+3,_powf$2050+3
 10858  0020F0  C110  F001         	movff	_powf$2050,___fladd@b
 10859  0020F4  C111  F002         	movff	_powf$2050+1,___fladd@b+1
 10860  0020F8  C112  F003         	movff	_powf$2050+2,___fladd@b+2
 10861  0020FC  C113  F004         	movff	_powf$2050+3,___fladd@b+3
 10862  002100  C11C  F015         	movff	powf@t2,___flmul@a
 10863  002104  C11D  F016         	movff	powf@t2+1,___flmul@a+1
 10864  002108  C11E  F017         	movff	powf@t2+2,___flmul@a+2
 10865  00210C  C11F  F018         	movff	powf@t2+3,___flmul@a+3
 10866  002110  C0C6  F011         	movff	powf@y,___flmul@b
 10867  002114  C0C7  F012         	movff	powf@y+1,___flmul@b+1
 10868  002118  C0C8  F013         	movff	powf@y+2,___flmul@b+2
 10869  00211C  C0C9  F014         	movff	powf@y+3,___flmul@b+3
 10870  002120  EC25  F023         	call	___flmul	;wreg free
 10871  002124  C011  F005         	movff	?___flmul,___fladd@a
 10872  002128  C012  F006         	movff	?___flmul+1,___fladd@a+1
 10873  00212C  C013  F007         	movff	?___flmul+2,___fladd@a+2
 10874  002130  C014  F008         	movff	?___flmul+3,___fladd@a+3
 10875  002134  ECCE  F024         	call	___fladd	;wreg free
 10876  002138  C001  F164         	movff	?___fladd,powf@p_l
 10877  00213C  C002  F165         	movff	?___fladd+1,powf@p_l+1
 10878  002140  C003  F166         	movff	?___fladd+2,powf@p_l+2
 10879  002144  C004  F167         	movff	?___fladd+3,powf@p_l+3
 10880  002148  C128  F011         	movff	powf@y1,___flmul@b
 10881  00214C  C129  F012         	movff	powf@y1+1,___flmul@b+1
 10882  002150  C12A  F013         	movff	powf@y1+2,___flmul@b+2
 10883  002154  C12B  F014         	movff	powf@y1+3,___flmul@b+3
 10884  002158  C180  F015         	movff	powf@t1,___flmul@a
 10885  00215C  C181  F016         	movff	powf@t1+1,___flmul@a+1
 10886  002160  C182  F017         	movff	powf@t1+2,___flmul@a+2
 10887  002164  C183  F018         	movff	powf@t1+3,___flmul@a+3
 10888  002168  EC25  F023         	call	___flmul	;wreg free
 10889  00216C  C011  F19C         	movff	?___flmul,powf@p_h
 10890  002170  C012  F19D         	movff	?___flmul+1,powf@p_h+1
 10891  002174  C013  F19E         	movff	?___flmul+2,powf@p_h+2
 10892  002178  C014  F19F         	movff	?___flmul+3,powf@p_h+3
 10893  00217C  C164  F001         	movff	powf@p_l,___fladd@b
 10894  002180  C165  F002         	movff	powf@p_l+1,___fladd@b+1
 10895  002184  C166  F003         	movff	powf@p_l+2,___fladd@b+2
 10896  002188  C167  F004         	movff	powf@p_l+3,___fladd@b+3
 10897  00218C  C19C  F005         	movff	powf@p_h,___fladd@a
 10898  002190  C19D  F006         	movff	powf@p_h+1,___fladd@a+1
 10899  002194  C19E  F007         	movff	powf@p_h+2,___fladd@a+2
 10900  002198  C19F  F008         	movff	powf@p_h+3,___fladd@a+3
 10901  00219C  ECCE  F024         	call	___fladd	;wreg free
 10902  0021A0  C001  F1B4         	movff	?___fladd,powf@z
 10903  0021A4  C002  F1B5         	movff	?___fladd+1,powf@z+1
 10904  0021A8  C003  F1B6         	movff	?___fladd+2,powf@z+2
 10905  0021AC  C004  F1B7         	movff	?___fladd+3,powf@z+3
 10906  0021B0  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 10907  0021B4  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 10908  0021B8  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 10909  0021BC  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 10910  0021C0  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 10911  0021C4  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 10912  0021C8  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 10913  0021CC  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 10914  0021D0  0101               	movlb	1	; () banked
 10915  0021D2  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
 10916  0021D4  D03E               	goto	i2l9817
 10917  0021D6  05AC               	decf	powf@j& (0+255),w,b
 10918  0021D8  0E00               	movlw	0
 10919  0021DA  59AD               	subwfb	(powf@j+1)& (0+255),w,b
 10920  0021DC  0E00               	movlw	0
 10921  0021DE  59AE               	subwfb	(powf@j+2)& (0+255),w,b
 10922  0021E0  0E43               	movlw	67
 10923  0021E2  59AF               	subwfb	(powf@j+3)& (0+255),w,b
 10924  0021E4  A0D8               	btfss	status,0,c
 10925  0021E6  D035               	goto	i2l9817
 10926                           
 10927                           ; BSR set to: 1
 10928  0021E8  0ECA               	movlw	202
 10929  0021EA  6E15               	movwf	___flmul@a^0,c
 10930  0021EC  0EF2               	movlw	242
 10931  0021EE  6E16               	movwf	(___flmul@a+1)^0,c
 10932  0021F0  0E49               	movlw	73
 10933  0021F2  6E17               	movwf	(___flmul@a+2)^0,c
 10934  0021F4  0E71               	movlw	113
 10935  0021F6  6E18               	movwf	(___flmul@a+3)^0,c
 10936  0021F8  C184  F011         	movff	powf@sn,___flmul@b
 10937  0021FC  C185  F012         	movff	powf@sn+1,___flmul@b+1
 10938  002200  C186  F013         	movff	powf@sn+2,___flmul@b+2
 10939  002204  C187  F014         	movff	powf@sn+3,___flmul@b+3
 10940  002208  EC25  F023         	call	___flmul	;wreg free
 10941  00220C  C011  F1A4         	movff	?___flmul,_powf$2038
 10942  002210  C012  F1A5         	movff	?___flmul+1,_powf$2038+1
 10943  002214  C013  F1A6         	movff	?___flmul+2,_powf$2038+2
 10944  002218  C014  F1A7         	movff	?___flmul+3,_powf$2038+3
 10945  00221C  C1A4  F011         	movff	_powf$2038,___flmul@b
 10946  002220  C1A5  F012         	movff	_powf$2038+1,___flmul@b+1
 10947  002224  C1A6  F013         	movff	_powf$2038+2,___flmul@b+2
 10948  002228  C1A7  F014         	movff	_powf$2038+3,___flmul@b+3
 10949  00222C  0ECA               	movlw	202
 10950  00222E  6E15               	movwf	___flmul@a^0,c
 10951  002230  0EF2               	movlw	242
 10952  002232  6E16               	movwf	(___flmul@a+1)^0,c
 10953  002234  0E49               	movlw	73
 10954  002236  6E17               	movwf	(___flmul@a+2)^0,c
 10955  002238  0E71               	movlw	113
 10956  00223A  6E18               	movwf	(___flmul@a+3)^0,c
 10957  00223C  EC25  F023         	call	___flmul	;wreg free
 10958  002240  C011  F0C2         	movff	?___flmul,?_powf
 10959  002244  C012  F0C3         	movff	?___flmul+1,?_powf+1
 10960  002248  C013  F0C4         	movff	?___flmul+2,?_powf+2
 10961  00224C  C014  F0C5         	movff	?___flmul+3,?_powf+3
 10962  002250  0012               	return	
 10963  002252                     i2l9817:
 10964                           
 10965                           ; BSR set to: 1
 10966  002252  0E43               	movlw	67
 10967  002254  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 10968  002256  11AC               	iorwf	powf@j& (0+255),w,b
 10969  002258  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 10970  00225A  11AE               	iorwf	(powf@j+2)& (0+255),w,b
 10971  00225C  A4D8               	btfss	status,2,c
 10972  00225E  D06D               	goto	i2l9825
 10973                           
 10974                           ; BSR set to: 1
 10975  002260  C19C  F02E         	movff	powf@p_h,___flsub@a
 10976  002264  C19D  F02F         	movff	powf@p_h+1,___flsub@a+1
 10977  002268  C19E  F030         	movff	powf@p_h+2,___flsub@a+2
 10978  00226C  C19F  F031         	movff	powf@p_h+3,___flsub@a+3
 10979  002270  C1B4  F02A         	movff	powf@z,___flsub@b
 10980  002274  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
 10981  002278  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
 10982  00227C  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
 10983  002280  EC68  F033         	call	___flsub	;wreg free
 10984  002284  C02A  F032         	movff	?___flsub,___flge@ff1
 10985  002288  C02B  F033         	movff	?___flsub+1,___flge@ff1+1
 10986  00228C  C02C  F034         	movff	?___flsub+2,___flge@ff1+2
 10987  002290  C02D  F035         	movff	?___flsub+3,___flge@ff1+3
 10988  002294  0E3C               	movlw	60
 10989  002296  6E05               	movwf	___fladd@a^0,c
 10990  002298  0EAA               	movlw	170
 10991  00229A  6E06               	movwf	(___fladd@a+1)^0,c
 10992  00229C  0E38               	movlw	56
 10993  00229E  6E07               	movwf	(___fladd@a+2)^0,c
 10994  0022A0  0E33               	movlw	51
 10995  0022A2  6E08               	movwf	(___fladd@a+3)^0,c
 10996  0022A4  C164  F001         	movff	powf@p_l,___fladd@b
 10997  0022A8  C165  F002         	movff	powf@p_l+1,___fladd@b+1
 10998  0022AC  C166  F003         	movff	powf@p_l+2,___fladd@b+2
 10999  0022B0  C167  F004         	movff	powf@p_l+3,___fladd@b+3
 11000  0022B4  ECCE  F024         	call	___fladd	;wreg free
 11001  0022B8  C001  F036         	movff	?___fladd,___flge@ff2
 11002  0022BC  C002  F037         	movff	?___fladd+1,___flge@ff2+1
 11003  0022C0  C003  F038         	movff	?___fladd+2,___flge@ff2+2
 11004  0022C4  C004  F039         	movff	?___fladd+3,___flge@ff2+3
 11005  0022C8  ECC2  F02E         	call	___flge	;wreg free
 11006  0022CC  B0D8               	btfsc	status,0,c
 11007  0022CE  D0E5               	goto	i2l9841
 11008  0022D0  0ECA               	movlw	202
 11009  0022D2  6E15               	movwf	___flmul@a^0,c
 11010  0022D4  0EF2               	movlw	242
 11011  0022D6  6E16               	movwf	(___flmul@a+1)^0,c
 11012  0022D8  0E49               	movlw	73
 11013  0022DA  6E17               	movwf	(___flmul@a+2)^0,c
 11014  0022DC  0E71               	movlw	113
 11015  0022DE  6E18               	movwf	(___flmul@a+3)^0,c
 11016  0022E0  C184  F011         	movff	powf@sn,___flmul@b
 11017  0022E4  C185  F012         	movff	powf@sn+1,___flmul@b+1
 11018  0022E8  C186  F013         	movff	powf@sn+2,___flmul@b+2
 11019  0022EC  C187  F014         	movff	powf@sn+3,___flmul@b+3
 11020  0022F0  EC25  F023         	call	___flmul	;wreg free
 11021  0022F4  C011  F1A4         	movff	?___flmul,_powf$2038
 11022  0022F8  C012  F1A5         	movff	?___flmul+1,_powf$2038+1
 11023  0022FC  C013  F1A6         	movff	?___flmul+2,_powf$2038+2
 11024  002300  C014  F1A7         	movff	?___flmul+3,_powf$2038+3
 11025  002304  C1A4  F011         	movff	_powf$2038,___flmul@b
 11026  002308  C1A5  F012         	movff	_powf$2038+1,___flmul@b+1
 11027  00230C  C1A6  F013         	movff	_powf$2038+2,___flmul@b+2
 11028  002310  C1A7  F014         	movff	_powf$2038+3,___flmul@b+3
 11029  002314  0ECA               	movlw	202
 11030  002316  6E15               	movwf	___flmul@a^0,c
 11031  002318  0EF2               	movlw	242
 11032  00231A  6E16               	movwf	(___flmul@a+1)^0,c
 11033  00231C  0E49               	movlw	73
 11034  00231E  6E17               	movwf	(___flmul@a+2)^0,c
 11035  002320  0E71               	movlw	113
 11036  002322  6E18               	movwf	(___flmul@a+3)^0,c
 11037  002324  EC25  F023         	call	___flmul	;wreg free
 11038  002328  C011  F0C2         	movff	?___flmul,?_powf
 11039  00232C  C012  F0C3         	movff	?___flmul+1,?_powf+1
 11040  002330  C013  F0C4         	movff	?___flmul+2,?_powf+2
 11041  002334  C014  F0C5         	movff	?___flmul+3,?_powf+3
 11042  002338  0012               	return	
 11043  00233A                     i2l9825:
 11044                           
 11045                           ; BSR set to: 1
 11046  00233A  0EFF               	movlw	255
 11047  00233C  15AC               	andwf	powf@j& (0+255),w,b
 11048  00233E  6E6F               	movwf	??_powf^0,c
 11049  002340  0EFF               	movlw	255
 11050  002342  15AD               	andwf	(powf@j+1)& (0+255),w,b
 11051  002344  6E70               	movwf	(??_powf+1)^0,c
 11052  002346  0EFF               	movlw	255
 11053  002348  15AE               	andwf	(powf@j+2)& (0+255),w,b
 11054  00234A  6E71               	movwf	(??_powf+2)^0,c
 11055  00234C  0E7F               	movlw	127
 11056  00234E  15AF               	andwf	(powf@j+3)& (0+255),w,b
 11057  002350  6E72               	movwf	(??_powf+3)^0,c
 11058  002352  BE72               	btfsc	(??_powf+3)^0,7,c
 11059  002354  D03E               	goto	i2l9833
 11060  002356  046F               	decf	??_powf^0,w,c
 11061  002358  0E00               	movlw	0
 11062  00235A  5870               	subwfb	(??_powf+1)^0,w,c
 11063  00235C  0E16               	movlw	22
 11064  00235E  5871               	subwfb	(??_powf+2)^0,w,c
 11065  002360  0E43               	movlw	67
 11066  002362  5872               	subwfb	(??_powf+3)^0,w,c
 11067  002364  A0D8               	btfss	status,0,c
 11068  002366  D035               	goto	i2l9833
 11069                           
 11070                           ; BSR set to: 1
 11071  002368  0E60               	movlw	96
 11072  00236A  6E15               	movwf	___flmul@a^0,c
 11073  00236C  0E42               	movlw	66
 11074  00236E  6E16               	movwf	(___flmul@a+1)^0,c
 11075  002370  0EA2               	movlw	162
 11076  002372  6E17               	movwf	(___flmul@a+2)^0,c
 11077  002374  0E0D               	movlw	13
 11078  002376  6E18               	movwf	(___flmul@a+3)^0,c
 11079  002378  C184  F011         	movff	powf@sn,___flmul@b
 11080  00237C  C185  F012         	movff	powf@sn+1,___flmul@b+1
 11081  002380  C186  F013         	movff	powf@sn+2,___flmul@b+2
 11082  002384  C187  F014         	movff	powf@sn+3,___flmul@b+3
 11083  002388  EC25  F023         	call	___flmul	;wreg free
 11084  00238C  C011  F1A4         	movff	?___flmul,_powf$2038
 11085  002390  C012  F1A5         	movff	?___flmul+1,_powf$2038+1
 11086  002394  C013  F1A6         	movff	?___flmul+2,_powf$2038+2
 11087  002398  C014  F1A7         	movff	?___flmul+3,_powf$2038+3
 11088  00239C  C1A4  F011         	movff	_powf$2038,___flmul@b
 11089  0023A0  C1A5  F012         	movff	_powf$2038+1,___flmul@b+1
 11090  0023A4  C1A6  F013         	movff	_powf$2038+2,___flmul@b+2
 11091  0023A8  C1A7  F014         	movff	_powf$2038+3,___flmul@b+3
 11092  0023AC  0E60               	movlw	96
 11093  0023AE  6E15               	movwf	___flmul@a^0,c
 11094  0023B0  0E42               	movlw	66
 11095  0023B2  6E16               	movwf	(___flmul@a+1)^0,c
 11096  0023B4  0EA2               	movlw	162
 11097  0023B6  6E17               	movwf	(___flmul@a+2)^0,c
 11098  0023B8  0E0D               	movlw	13
 11099  0023BA  6E18               	movwf	(___flmul@a+3)^0,c
 11100  0023BC  EC25  F023         	call	___flmul	;wreg free
 11101  0023C0  C011  F0C2         	movff	?___flmul,?_powf
 11102  0023C4  C012  F0C3         	movff	?___flmul+1,?_powf+1
 11103  0023C8  C013  F0C4         	movff	?___flmul+2,?_powf+2
 11104  0023CC  C014  F0C5         	movff	?___flmul+3,?_powf+3
 11105  0023D0  0012               	return	
 11106  0023D2                     i2l9833:
 11107                           
 11108                           ; BSR set to: 1
 11109  0023D2  0E16               	movlw	22
 11110  0023D4  19AE               	xorwf	(powf@j+2)& (0+255),w,b
 11111  0023D6  E161               	bnz	i2l9841
 11112  0023D8  0EC3               	movlw	195
 11113  0023DA  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 11114  0023DC  11AC               	iorwf	powf@j& (0+255),w,b
 11115  0023DE  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 11116  0023E0  A4D8               	btfss	status,2,c
 11117  0023E2  D05B               	goto	i2l9841
 11118                           
 11119                           ; BSR set to: 1
 11120  0023E4  C19C  F02E         	movff	powf@p_h,___flsub@a
 11121  0023E8  C19D  F02F         	movff	powf@p_h+1,___flsub@a+1
 11122  0023EC  C19E  F030         	movff	powf@p_h+2,___flsub@a+2
 11123  0023F0  C19F  F031         	movff	powf@p_h+3,___flsub@a+3
 11124  0023F4  C1B4  F02A         	movff	powf@z,___flsub@b
 11125  0023F8  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
 11126  0023FC  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
 11127  002400  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
 11128  002404  EC68  F033         	call	___flsub	;wreg free
 11129  002408  C02A  F032         	movff	?___flsub,___flge@ff1
 11130  00240C  C02B  F033         	movff	?___flsub+1,___flge@ff1+1
 11131  002410  C02C  F034         	movff	?___flsub+2,___flge@ff1+2
 11132  002414  C02D  F035         	movff	?___flsub+3,___flge@ff1+3
 11133  002418  C164  F036         	movff	powf@p_l,___flge@ff2
 11134  00241C  C165  F037         	movff	powf@p_l+1,___flge@ff2+1
 11135  002420  C166  F038         	movff	powf@p_l+2,___flge@ff2+2
 11136  002424  C167  F039         	movff	powf@p_l+3,___flge@ff2+3
 11137  002428  ECC2  F02E         	call	___flge	;wreg free
 11138  00242C  A0D8               	btfss	status,0,c
 11139  00242E  D035               	goto	i2l9841
 11140  002430  0E60               	movlw	96
 11141  002432  6E15               	movwf	___flmul@a^0,c
 11142  002434  0E42               	movlw	66
 11143  002436  6E16               	movwf	(___flmul@a+1)^0,c
 11144  002438  0EA2               	movlw	162
 11145  00243A  6E17               	movwf	(___flmul@a+2)^0,c
 11146  00243C  0E0D               	movlw	13
 11147  00243E  6E18               	movwf	(___flmul@a+3)^0,c
 11148  002440  C184  F011         	movff	powf@sn,___flmul@b
 11149  002444  C185  F012         	movff	powf@sn+1,___flmul@b+1
 11150  002448  C186  F013         	movff	powf@sn+2,___flmul@b+2
 11151  00244C  C187  F014         	movff	powf@sn+3,___flmul@b+3
 11152  002450  EC25  F023         	call	___flmul	;wreg free
 11153  002454  C011  F1A4         	movff	?___flmul,_powf$2038
 11154  002458  C012  F1A5         	movff	?___flmul+1,_powf$2038+1
 11155  00245C  C013  F1A6         	movff	?___flmul+2,_powf$2038+2
 11156  002460  C014  F1A7         	movff	?___flmul+3,_powf$2038+3
 11157  002464  C1A4  F011         	movff	_powf$2038,___flmul@b
 11158  002468  C1A5  F012         	movff	_powf$2038+1,___flmul@b+1
 11159  00246C  C1A6  F013         	movff	_powf$2038+2,___flmul@b+2
 11160  002470  C1A7  F014         	movff	_powf$2038+3,___flmul@b+3
 11161  002474  0E60               	movlw	96
 11162  002476  6E15               	movwf	___flmul@a^0,c
 11163  002478  0E42               	movlw	66
 11164  00247A  6E16               	movwf	(___flmul@a+1)^0,c
 11165  00247C  0EA2               	movlw	162
 11166  00247E  6E17               	movwf	(___flmul@a+2)^0,c
 11167  002480  0E0D               	movlw	13
 11168  002482  6E18               	movwf	(___flmul@a+3)^0,c
 11169  002484  EC25  F023         	call	___flmul	;wreg free
 11170  002488  C011  F0C2         	movff	?___flmul,?_powf
 11171  00248C  C012  F0C3         	movff	?___flmul+1,?_powf+1
 11172  002490  C013  F0C4         	movff	?___flmul+2,?_powf+2
 11173  002494  C014  F0C5         	movff	?___flmul+3,?_powf+3
 11174  002498  0012               	return	
 11175  00249A                     i2l9841:
 11176  00249A  0EFF               	movlw	255
 11177  00249C  0101               	movlb	1	; () banked
 11178  00249E  15AC               	andwf	powf@j& (0+255),w,b
 11179  0024A0  6F2C               	movwf	powf@i& (0+255),b
 11180  0024A2  0EFF               	movlw	255
 11181  0024A4  15AD               	andwf	(powf@j+1)& (0+255),w,b
 11182  0024A6  6F2D               	movwf	(powf@i+1)& (0+255),b
 11183  0024A8  0EFF               	movlw	255
 11184  0024AA  15AE               	andwf	(powf@j+2)& (0+255),w,b
 11185  0024AC  6F2E               	movwf	(powf@i+2)& (0+255),b
 11186  0024AE  0E7F               	movlw	127
 11187  0024B0  15AF               	andwf	(powf@j+3)& (0+255),w,b
 11188  0024B2  6F2F               	movwf	(powf@i+3)& (0+255),b
 11189  0024B4  0E17               	movlw	23
 11190  0024B6  6E6F               	movwf	??_powf^0,c
 11191  0024B8  C12C  F070         	movff	powf@i,??_powf+1
 11192  0024BC  C12D  F071         	movff	powf@i+1,??_powf+2
 11193  0024C0  C12E  F072         	movff	powf@i+2,??_powf+3
 11194  0024C4  C12F  F073         	movff	powf@i+3,??_powf+4
 11195  0024C8                     i2u1268_45:
 11196  0024C8  666F               	tstfsz	??_powf^0,c
 11197  0024CA  D001               	goto	i2u1268_46
 11198  0024CC  D007               	goto	i2u1268_47
 11199  0024CE                     i2u1268_46:
 11200  0024CE  3473               	rlcf	(??_powf+4)^0,w,c
 11201  0024D0  3273               	rrcf	(??_powf+4)^0,f,c
 11202  0024D2  3272               	rrcf	(??_powf+3)^0,f,c
 11203  0024D4  3271               	rrcf	(??_powf+2)^0,f,c
 11204  0024D6  3270               	rrcf	(??_powf+1)^0,f,c
 11205  0024D8  2E6F               	decfsz	??_powf^0,f,c
 11206  0024DA  D7F6               	goto	i2u1268_45
 11207  0024DC                     i2u1268_47:
 11208  0024DC  0E81               	movlw	129
 11209  0024DE  2470               	addwf	(??_powf+1)^0,w,c
 11210  0024E0  0101               	movlb	1	; () banked
 11211  0024E2  6FA0               	movwf	powf@k& (0+255),b
 11212  0024E4  0EFF               	movlw	255
 11213  0024E6  2071               	addwfc	(??_powf+2)^0,w,c
 11214  0024E8  6FA1               	movwf	(powf@k+1)& (0+255),b
 11215  0024EA  0EFF               	movlw	255
 11216  0024EC  2072               	addwfc	(??_powf+3)^0,w,c
 11217  0024EE  6FA2               	movwf	(powf@k+2)& (0+255),b
 11218  0024F0  0EFF               	movlw	255
 11219  0024F2  2073               	addwfc	(??_powf+4)^0,w,c
 11220  0024F4  6FA3               	movwf	(powf@k+3)& (0+255),b
 11221                           
 11222                           ; BSR set to: 1
 11223  0024F6  0E00               	movlw	0
 11224  0024F8  6F88               	movwf	powf@n& (0+255),b
 11225  0024FA  0E00               	movlw	0
 11226  0024FC  6F89               	movwf	(powf@n+1)& (0+255),b
 11227  0024FE  0E00               	movlw	0
 11228  002500  6F8A               	movwf	(powf@n+2)& (0+255),b
 11229  002502  0E00               	movlw	0
 11230  002504  6F8B               	movwf	(powf@n+3)& (0+255),b
 11231                           
 11232                           ; BSR set to: 1
 11233  002506  BF2F               	btfsc	(powf@i+3)& (0+255),7,b
 11234  002508  D0D8               	goto	i2l9855
 11235  00250A  052C               	decf	powf@i& (0+255),w,b
 11236  00250C  0E00               	movlw	0
 11237  00250E  592D               	subwfb	(powf@i+1)& (0+255),w,b
 11238  002510  0E00               	movlw	0
 11239  002512  592E               	subwfb	(powf@i+2)& (0+255),w,b
 11240  002514  0E3F               	movlw	63
 11241  002516  592F               	subwfb	(powf@i+3)& (0+255),w,b
 11242  002518  A0D8               	btfss	status,0,c
 11243  00251A  D0CF               	goto	i2l9855
 11244                           
 11245                           ; BSR set to: 1
 11246  00251C  C1A0  F06F         	movff	powf@k,??_powf
 11247  002520  0E01               	movlw	1
 11248  002522  266F               	addwf	??_powf^0,f,c
 11249  002524  0E00               	movlw	0
 11250  002526  6E70               	movwf	(??_powf+1)^0,c
 11251  002528  0E00               	movlw	0
 11252  00252A  6E71               	movwf	(??_powf+2)^0,c
 11253  00252C  0E80               	movlw	128
 11254  00252E  6E72               	movwf	(??_powf+3)^0,c
 11255  002530  0E00               	movlw	0
 11256  002532  6E73               	movwf	(??_powf+4)^0,c
 11257  002534                     i2u1270_45:
 11258  002534  666F               	tstfsz	??_powf^0,c
 11259  002536  D001               	goto	i2u1270_46
 11260  002538  D007               	goto	i2u1270_47
 11261  00253A                     i2u1270_46:
 11262  00253A  3473               	rlcf	(??_powf+4)^0,w,c
 11263  00253C  3273               	rrcf	(??_powf+4)^0,f,c
 11264  00253E  3272               	rrcf	(??_powf+3)^0,f,c
 11265  002540  3271               	rrcf	(??_powf+2)^0,f,c
 11266  002542  3270               	rrcf	(??_powf+1)^0,f,c
 11267  002544  2E6F               	decfsz	??_powf^0,f,c
 11268  002546  D7F6               	goto	i2u1270_45
 11269  002548                     i2u1270_47:
 11270  002548  0101               	movlb	1	; () banked
 11271  00254A  51AC               	movf	powf@j& (0+255),w,b
 11272  00254C  2470               	addwf	(??_powf+1)^0,w,c
 11273  00254E  6F88               	movwf	powf@n& (0+255),b
 11274  002550  51AD               	movf	(powf@j+1)& (0+255),w,b
 11275  002552  2071               	addwfc	(??_powf+2)^0,w,c
 11276  002554  6F89               	movwf	(powf@n+1)& (0+255),b
 11277  002556  51AE               	movf	(powf@j+2)& (0+255),w,b
 11278  002558  2072               	addwfc	(??_powf+3)^0,w,c
 11279  00255A  6F8A               	movwf	(powf@n+2)& (0+255),b
 11280  00255C  51AF               	movf	(powf@j+3)& (0+255),w,b
 11281  00255E  2073               	addwfc	(??_powf+4)^0,w,c
 11282  002560  6F8B               	movwf	(powf@n+3)& (0+255),b
 11283  002562  0E81               	movlw	129
 11284  002564  6E6F               	movwf	??_powf^0,c
 11285  002566  0EFF               	movlw	255
 11286  002568  6E70               	movwf	(??_powf+1)^0,c
 11287  00256A  0EFF               	movlw	255
 11288  00256C  6E71               	movwf	(??_powf+2)^0,c
 11289  00256E  0EFF               	movlw	255
 11290  002570  6E72               	movwf	(??_powf+3)^0,c
 11291  002572  0E17               	movlw	23
 11292  002574  6E73               	movwf	(??_powf+4)^0,c
 11293  002576  C188  F074         	movff	powf@n,??_powf+5
 11294  00257A  C189  F075         	movff	powf@n+1,??_powf+6
 11295  00257E  C18A  F076         	movff	powf@n+2,??_powf+7
 11296  002582  C18B  F077         	movff	powf@n+3,??_powf+8
 11297  002586                     i2u1271_45:
 11298  002586  6673               	tstfsz	(??_powf+4)^0,c
 11299  002588  D001               	goto	i2u1271_46
 11300  00258A  D007               	goto	i2u1271_47
 11301  00258C                     i2u1271_46:
 11302  00258C  3477               	rlcf	(??_powf+8)^0,w,c
 11303  00258E  3277               	rrcf	(??_powf+8)^0,f,c
 11304  002590  3276               	rrcf	(??_powf+7)^0,f,c
 11305  002592  3275               	rrcf	(??_powf+6)^0,f,c
 11306  002594  3274               	rrcf	(??_powf+5)^0,f,c
 11307  002596  2E73               	decfsz	(??_powf+4)^0,f,c
 11308  002598  D7F6               	goto	i2u1271_45
 11309  00259A                     i2u1271_47:
 11310  00259A  5074               	movf	(??_powf+5)^0,w,c
 11311  00259C  246F               	addwf	??_powf^0,w,c
 11312  00259E  0101               	movlb	1	; () banked
 11313  0025A0  6FA0               	movwf	powf@k& (0+255),b
 11314  0025A2  0E00               	movlw	0
 11315  0025A4  2070               	addwfc	(??_powf+1)^0,w,c
 11316  0025A6  6FA1               	movwf	(powf@k+1)& (0+255),b
 11317  0025A8  0E00               	movlw	0
 11318  0025AA  2071               	addwfc	(??_powf+2)^0,w,c
 11319  0025AC  6FA2               	movwf	(powf@k+2)& (0+255),b
 11320  0025AE  0E00               	movlw	0
 11321  0025B0  2072               	addwfc	(??_powf+3)^0,w,c
 11322  0025B2  6FA3               	movwf	(powf@k+3)& (0+255),b
 11323                           
 11324                           ; BSR set to: 1
 11325  0025B4  C1A0  F06F         	movff	powf@k,??_powf
 11326  0025B8  0EFF               	movlw	255
 11327  0025BA  6E70               	movwf	(??_powf+1)^0,c
 11328  0025BC  0EFF               	movlw	255
 11329  0025BE  6E71               	movwf	(??_powf+2)^0,c
 11330  0025C0  0E7F               	movlw	127
 11331  0025C2  6E72               	movwf	(??_powf+3)^0,c
 11332  0025C4  0E00               	movlw	0
 11333  0025C6  6E73               	movwf	(??_powf+4)^0,c
 11334  0025C8                     i2u1272_45:
 11335  0025C8  666F               	tstfsz	??_powf^0,c
 11336  0025CA  D001               	goto	i2u1272_46
 11337  0025CC  D007               	goto	i2u1272_47
 11338  0025CE                     i2u1272_46:
 11339  0025CE  3473               	rlcf	(??_powf+4)^0,w,c
 11340  0025D0  3273               	rrcf	(??_powf+4)^0,f,c
 11341  0025D2  3272               	rrcf	(??_powf+3)^0,f,c
 11342  0025D4  3271               	rrcf	(??_powf+2)^0,f,c
 11343  0025D6  3270               	rrcf	(??_powf+1)^0,f,c
 11344  0025D8  2E6F               	decfsz	??_powf^0,f,c
 11345  0025DA  D7F6               	goto	i2u1272_45
 11346  0025DC                     i2u1272_47:
 11347  0025DC  1C70               	comf	(??_powf+1)^0,w,c
 11348  0025DE  6E74               	movwf	(??_powf+5)^0,c
 11349  0025E0  1C71               	comf	(??_powf+2)^0,w,c
 11350  0025E2  6E75               	movwf	(??_powf+6)^0,c
 11351  0025E4  1C72               	comf	(??_powf+3)^0,w,c
 11352  0025E6  6E76               	movwf	(??_powf+7)^0,c
 11353  0025E8  1C73               	comf	(??_powf+4)^0,w,c
 11354  0025EA  6E77               	movwf	(??_powf+8)^0,c
 11355  0025EC  0101               	movlb	1	; () banked
 11356  0025EE  5188               	movf	powf@n& (0+255),w,b
 11357  0025F0  1474               	andwf	(??_powf+5)^0,w,c
 11358  0025F2  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11359  0025F4  5189               	movf	(powf@n+1)& (0+255),w,b
 11360  0025F6  1475               	andwf	(??_powf+6)^0,w,c
 11361  0025F8  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11362  0025FA  518A               	movf	(powf@n+2)& (0+255),w,b
 11363  0025FC  1476               	andwf	(??_powf+7)^0,w,c
 11364  0025FE  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11365  002600  518B               	movf	(powf@n+3)& (0+255),w,b
 11366  002602  1477               	andwf	(??_powf+8)^0,w,c
 11367  002604  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11368                           
 11369                           ; BSR set to: 1
 11370  002606  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 11371  00260A  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 11372  00260E  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 11373  002612  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 11374                           
 11375                           ; BSR set to: 1
 11376  002616  51A0               	movf	powf@k& (0+255),w,b
 11377  002618  0817               	sublw	23
 11378  00261A  6E6F               	movwf	??_powf^0,c
 11379  00261C  0EFF               	movlw	255
 11380  00261E  1588               	andwf	powf@n& (0+255),w,b
 11381  002620  6E70               	movwf	(??_powf+1)^0,c
 11382  002622  0EFF               	movlw	255
 11383  002624  1589               	andwf	(powf@n+1)& (0+255),w,b
 11384  002626  6E71               	movwf	(??_powf+2)^0,c
 11385  002628  0E7F               	movlw	127
 11386  00262A  158A               	andwf	(powf@n+2)& (0+255),w,b
 11387  00262C  6E72               	movwf	(??_powf+3)^0,c
 11388  00262E  0E00               	movlw	0
 11389  002630  158B               	andwf	(powf@n+3)& (0+255),w,b
 11390  002632  6E73               	movwf	(??_powf+4)^0,c
 11391  002634  0E00               	movlw	0
 11392  002636  1070               	iorwf	(??_powf+1)^0,w,c
 11393  002638  6E74               	movwf	(??_powf+5)^0,c
 11394  00263A  0E00               	movlw	0
 11395  00263C  1071               	iorwf	(??_powf+2)^0,w,c
 11396  00263E  6E75               	movwf	(??_powf+6)^0,c
 11397  002640  0E80               	movlw	128
 11398  002642  1072               	iorwf	(??_powf+3)^0,w,c
 11399  002644  6E76               	movwf	(??_powf+7)^0,c
 11400  002646  0E00               	movlw	0
 11401  002648  1073               	iorwf	(??_powf+4)^0,w,c
 11402  00264A  6E77               	movwf	(??_powf+8)^0,c
 11403  00264C                     i2u1273_45:
 11404  00264C  666F               	tstfsz	??_powf^0,c
 11405  00264E  D001               	goto	i2u1273_46
 11406  002650  D007               	goto	i2u1273_47
 11407  002652                     i2u1273_46:
 11408  002652  3477               	rlcf	(??_powf+8)^0,w,c
 11409  002654  3277               	rrcf	(??_powf+8)^0,f,c
 11410  002656  3276               	rrcf	(??_powf+7)^0,f,c
 11411  002658  3275               	rrcf	(??_powf+6)^0,f,c
 11412  00265A  3274               	rrcf	(??_powf+5)^0,f,c
 11413  00265C  2E6F               	decfsz	??_powf^0,f,c
 11414  00265E  D7F6               	goto	i2u1273_45
 11415  002660                     i2u1273_47:
 11416  002660  C074  F188         	movff	??_powf+5,powf@n
 11417  002664  C075  F189         	movff	??_powf+6,powf@n+1
 11418  002668  C076  F18A         	movff	??_powf+7,powf@n+2
 11419  00266C  C077  F18B         	movff	??_powf+8,powf@n+3
 11420  002670  0101               	movlb	1	; () banked
 11421  002672  AFAF               	btfss	(powf@j+3)& (0+255),7,b
 11422  002674  D008               	goto	i2l9853
 11423                           
 11424                           ; BSR set to: 1
 11425  002676  1F8B               	comf	(powf@n+3)& (0+255),f,b
 11426  002678  1F8A               	comf	(powf@n+2)& (0+255),f,b
 11427  00267A  1F89               	comf	(powf@n+1)& (0+255),f,b
 11428  00267C  6D88               	negf	powf@n& (0+255),b
 11429  00267E  0E00               	movlw	0
 11430  002680  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11431  002682  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11432  002684  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11433  002686                     i2l9853:
 11434                           
 11435                           ; BSR set to: 1
 11436  002686  C19C  F02A         	movff	powf@p_h,___flsub@b
 11437  00268A  C19D  F02B         	movff	powf@p_h+1,___flsub@b+1
 11438  00268E  C19E  F02C         	movff	powf@p_h+2,___flsub@b+2
 11439  002692  C19F  F02D         	movff	powf@p_h+3,___flsub@b+3
 11440  002696  C1B0  F02E         	movff	powf@t,___flsub@a
 11441  00269A  C1B1  F02F         	movff	powf@t+1,___flsub@a+1
 11442  00269E  C1B2  F030         	movff	powf@t+2,___flsub@a+2
 11443  0026A2  C1B3  F031         	movff	powf@t+3,___flsub@a+3
 11444  0026A6  EC68  F033         	call	___flsub	;wreg free
 11445  0026AA  C02A  F19C         	movff	?___flsub,powf@p_h
 11446  0026AE  C02B  F19D         	movff	?___flsub+1,powf@p_h+1
 11447  0026B2  C02C  F19E         	movff	?___flsub+2,powf@p_h+2
 11448  0026B6  C02D  F19F         	movff	?___flsub+3,powf@p_h+3
 11449  0026BA                     i2l9855:
 11450  0026BA  C164  F001         	movff	powf@p_l,___fladd@b
 11451  0026BE  C165  F002         	movff	powf@p_l+1,___fladd@b+1
 11452  0026C2  C166  F003         	movff	powf@p_l+2,___fladd@b+2
 11453  0026C6  C167  F004         	movff	powf@p_l+3,___fladd@b+3
 11454  0026CA  C19C  F005         	movff	powf@p_h,___fladd@a
 11455  0026CE  C19D  F006         	movff	powf@p_h+1,___fladd@a+1
 11456  0026D2  C19E  F007         	movff	powf@p_h+2,___fladd@a+2
 11457  0026D6  C19F  F008         	movff	powf@p_h+3,___fladd@a+3
 11458  0026DA  ECCE  F024         	call	___fladd	;wreg free
 11459  0026DE  C001  F1B0         	movff	?___fladd,powf@t
 11460  0026E2  C002  F1B1         	movff	?___fladd+1,powf@t+1
 11461  0026E6  C003  F1B2         	movff	?___fladd+2,powf@t+2
 11462  0026EA  C004  F1B3         	movff	?___fladd+3,powf@t+3
 11463  0026EE  C1B0  F1B8         	movff	powf@t,powf@__xc8_float_word
 11464  0026F2  C1B1  F1B9         	movff	powf@t+1,powf@__xc8_float_word+1
 11465  0026F6  C1B2  F1BA         	movff	powf@t+2,powf@__xc8_float_word+2
 11466  0026FA  C1B3  F1BB         	movff	powf@t+3,powf@__xc8_float_word+3
 11467  0026FE  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 11468  002702  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 11469  002706  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 11470  00270A  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 11471  00270E  0E00               	movlw	0
 11472  002710  0101               	movlb	1	; () banked
 11473  002712  1594               	andwf	powf@is& (0+255),w,b
 11474  002714  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11475  002716  0E80               	movlw	128
 11476  002718  1595               	andwf	(powf@is+1)& (0+255),w,b
 11477  00271A  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11478  00271C  0EFF               	movlw	255
 11479  00271E  1596               	andwf	(powf@is+2)& (0+255),w,b
 11480  002720  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11481  002722  0EFF               	movlw	255
 11482  002724  1597               	andwf	(powf@is+3)& (0+255),w,b
 11483  002726  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11484                           
 11485                           ; BSR set to: 1
 11486  002728  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 11487  00272C  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 11488  002730  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 11489  002734  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 11490                           
 11491                           ; BSR set to: 1
 11492  002738  C1B0  F011         	movff	powf@t,___flmul@b
 11493  00273C  C1B1  F012         	movff	powf@t+1,___flmul@b+1
 11494  002740  C1B2  F013         	movff	powf@t+2,___flmul@b+2
 11495  002744  C1B3  F014         	movff	powf@t+3,___flmul@b+3
 11496  002748  0E00               	movlw	0
 11497  00274A  6E15               	movwf	___flmul@a^0,c
 11498  00274C  0E72               	movlw	114
 11499  00274E  6E16               	movwf	(___flmul@a+1)^0,c
 11500  002750  0E31               	movlw	49
 11501  002752  6E17               	movwf	(___flmul@a+2)^0,c
 11502  002754  0E3F               	movlw	63
 11503  002756  6E18               	movwf	(___flmul@a+3)^0,c
 11504  002758  EC25  F023         	call	___flmul	;wreg free
 11505  00275C  C011  F174         	movff	?___flmul,powf@u
 11506  002760  C012  F175         	movff	?___flmul+1,powf@u+1
 11507  002764  C013  F176         	movff	?___flmul+2,powf@u+2
 11508  002768  C014  F177         	movff	?___flmul+3,powf@u+3
 11509  00276C  C19C  F02E         	movff	powf@p_h,___flsub@a
 11510  002770  C19D  F02F         	movff	powf@p_h+1,___flsub@a+1
 11511  002774  C19E  F030         	movff	powf@p_h+2,___flsub@a+2
 11512  002778  C19F  F031         	movff	powf@p_h+3,___flsub@a+3
 11513  00277C  C1B0  F02A         	movff	powf@t,___flsub@b
 11514  002780  C1B1  F02B         	movff	powf@t+1,___flsub@b+1
 11515  002784  C1B2  F02C         	movff	powf@t+2,___flsub@b+2
 11516  002788  C1B3  F02D         	movff	powf@t+3,___flsub@b+3
 11517  00278C  EC68  F033         	call	___flsub	;wreg free
 11518  002790  C02A  F198         	movff	?___flsub,_powf$2041
 11519  002794  C02B  F199         	movff	?___flsub+1,_powf$2041+1
 11520  002798  C02C  F19A         	movff	?___flsub+2,_powf$2041+2
 11521  00279C  C02D  F19B         	movff	?___flsub+3,_powf$2041+3
 11522  0027A0  0E18               	movlw	24
 11523  0027A2  6E15               	movwf	___flmul@a^0,c
 11524  0027A4  0E72               	movlw	114
 11525  0027A6  6E16               	movwf	(___flmul@a+1)^0,c
 11526  0027A8  0E31               	movlw	49
 11527  0027AA  6E17               	movwf	(___flmul@a+2)^0,c
 11528  0027AC  0E3F               	movlw	63
 11529  0027AE  6E18               	movwf	(___flmul@a+3)^0,c
 11530  0027B0  C198  F02E         	movff	_powf$2041,___flsub@a
 11531  0027B4  C199  F02F         	movff	_powf$2041+1,___flsub@a+1
 11532  0027B8  C19A  F030         	movff	_powf$2041+2,___flsub@a+2
 11533  0027BC  C19B  F031         	movff	_powf$2041+3,___flsub@a+3
 11534  0027C0  C164  F02A         	movff	powf@p_l,___flsub@b
 11535  0027C4  C165  F02B         	movff	powf@p_l+1,___flsub@b+1
 11536  0027C8  C166  F02C         	movff	powf@p_l+2,___flsub@b+2
 11537  0027CC  C167  F02D         	movff	powf@p_l+3,___flsub@b+3
 11538  0027D0  EC68  F033         	call	___flsub	;wreg free
 11539  0027D4  C02A  F011         	movff	?___flsub,___flmul@b
 11540  0027D8  C02B  F012         	movff	?___flsub+1,___flmul@b+1
 11541  0027DC  C02C  F013         	movff	?___flsub+2,___flmul@b+2
 11542  0027E0  C02D  F014         	movff	?___flsub+3,___flmul@b+3
 11543  0027E4  EC25  F023         	call	___flmul	;wreg free
 11544  0027E8  C011  F114         	movff	?___flmul,_powf$2051
 11545  0027EC  C012  F115         	movff	?___flmul+1,_powf$2051+1
 11546  0027F0  C013  F116         	movff	?___flmul+2,_powf$2051+2
 11547  0027F4  C014  F117         	movff	?___flmul+3,_powf$2051+3
 11548  0027F8  C114  F001         	movff	_powf$2051,___fladd@b
 11549  0027FC  C115  F002         	movff	_powf$2051+1,___fladd@b+1
 11550  002800  C116  F003         	movff	_powf$2051+2,___fladd@b+2
 11551  002804  C117  F004         	movff	_powf$2051+3,___fladd@b+3
 11552  002808  0E8C               	movlw	140
 11553  00280A  6E15               	movwf	___flmul@a^0,c
 11554  00280C  0EBE               	movlw	190
 11555  00280E  6E16               	movwf	(___flmul@a+1)^0,c
 11556  002810  0EBF               	movlw	191
 11557  002812  6E17               	movwf	(___flmul@a+2)^0,c
 11558  002814  0E35               	movlw	53
 11559  002816  6E18               	movwf	(___flmul@a+3)^0,c
 11560  002818  C1B0  F011         	movff	powf@t,___flmul@b
 11561  00281C  C1B1  F012         	movff	powf@t+1,___flmul@b+1
 11562  002820  C1B2  F013         	movff	powf@t+2,___flmul@b+2
 11563  002824  C1B3  F014         	movff	powf@t+3,___flmul@b+3
 11564  002828  EC25  F023         	call	___flmul	;wreg free
 11565  00282C  C011  F005         	movff	?___flmul,___fladd@a
 11566  002830  C012  F006         	movff	?___flmul+1,___fladd@a+1
 11567  002834  C013  F007         	movff	?___flmul+2,___fladd@a+2
 11568  002838  C014  F008         	movff	?___flmul+3,___fladd@a+3
 11569  00283C  ECCE  F024         	call	___fladd	;wreg free
 11570  002840  C001  F178         	movff	?___fladd,powf@v
 11571  002844  C002  F179         	movff	?___fladd+1,powf@v+1
 11572  002848  C003  F17A         	movff	?___fladd+2,powf@v+2
 11573  00284C  C004  F17B         	movff	?___fladd+3,powf@v+3
 11574  002850  C174  F001         	movff	powf@u,___fladd@b
 11575  002854  C175  F002         	movff	powf@u+1,___fladd@b+1
 11576  002858  C176  F003         	movff	powf@u+2,___fladd@b+2
 11577  00285C  C177  F004         	movff	powf@u+3,___fladd@b+3
 11578  002860  C178  F005         	movff	powf@v,___fladd@a
 11579  002864  C179  F006         	movff	powf@v+1,___fladd@a+1
 11580  002868  C17A  F007         	movff	powf@v+2,___fladd@a+2
 11581  00286C  C17B  F008         	movff	powf@v+3,___fladd@a+3
 11582  002870  ECCE  F024         	call	___fladd	;wreg free
 11583  002874  C001  F1B4         	movff	?___fladd,powf@z
 11584  002878  C002  F1B5         	movff	?___fladd+1,powf@z+1
 11585  00287C  C003  F1B6         	movff	?___fladd+2,powf@z+2
 11586  002880  C004  F1B7         	movff	?___fladd+3,powf@z+3
 11587  002884  C174  F02E         	movff	powf@u,___flsub@a
 11588  002888  C175  F02F         	movff	powf@u+1,___flsub@a+1
 11589  00288C  C176  F030         	movff	powf@u+2,___flsub@a+2
 11590  002890  C177  F031         	movff	powf@u+3,___flsub@a+3
 11591  002894  C1B4  F02A         	movff	powf@z,___flsub@b
 11592  002898  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
 11593  00289C  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
 11594  0028A0  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
 11595  0028A4  EC68  F033         	call	___flsub	;wreg free
 11596  0028A8  C02A  F198         	movff	?___flsub,_powf$2041
 11597  0028AC  C02B  F199         	movff	?___flsub+1,_powf$2041+1
 11598  0028B0  C02C  F19A         	movff	?___flsub+2,_powf$2041+2
 11599  0028B4  C02D  F19B         	movff	?___flsub+3,_powf$2041+3
 11600  0028B8  C178  F02A         	movff	powf@v,___flsub@b
 11601  0028BC  C179  F02B         	movff	powf@v+1,___flsub@b+1
 11602  0028C0  C17A  F02C         	movff	powf@v+2,___flsub@b+2
 11603  0028C4  C17B  F02D         	movff	powf@v+3,___flsub@b+3
 11604  0028C8  C198  F02E         	movff	_powf$2041,___flsub@a
 11605  0028CC  C199  F02F         	movff	_powf$2041+1,___flsub@a+1
 11606  0028D0  C19A  F030         	movff	_powf$2041+2,___flsub@a+2
 11607  0028D4  C19B  F031         	movff	_powf$2041+3,___flsub@a+3
 11608  0028D8  EC68  F033         	call	___flsub	;wreg free
 11609  0028DC  C02A  F144         	movff	?___flsub,powf@w
 11610  0028E0  C02B  F145         	movff	?___flsub+1,powf@w+1
 11611  0028E4  C02C  F146         	movff	?___flsub+2,powf@w+2
 11612  0028E8  C02D  F147         	movff	?___flsub+3,powf@w+3
 11613  0028EC  C1B4  F011         	movff	powf@z,___flmul@b
 11614  0028F0  C1B5  F012         	movff	powf@z+1,___flmul@b+1
 11615  0028F4  C1B6  F013         	movff	powf@z+2,___flmul@b+2
 11616  0028F8  C1B7  F014         	movff	powf@z+3,___flmul@b+3
 11617  0028FC  C1B4  F015         	movff	powf@z,___flmul@a
 11618  002900  C1B5  F016         	movff	powf@z+1,___flmul@a+1
 11619  002904  C1B6  F017         	movff	powf@z+2,___flmul@a+2
 11620  002908  C1B7  F018         	movff	powf@z+3,___flmul@a+3
 11621  00290C  EC25  F023         	call	___flmul	;wreg free
 11622  002910  C011  F1B0         	movff	?___flmul,powf@t
 11623  002914  C012  F1B1         	movff	?___flmul+1,powf@t+1
 11624  002918  C013  F1B2         	movff	?___flmul+2,powf@t+2
 11625  00291C  C014  F1B3         	movff	?___flmul+3,powf@t+3
 11626  002920  0E0E               	movlw	14
 11627  002922  6E05               	movwf	___fladd@a^0,c
 11628  002924  0EEA               	movlw	234
 11629  002926  6E06               	movwf	(___fladd@a+1)^0,c
 11630  002928  0EDD               	movlw	221
 11631  00292A  6E07               	movwf	(___fladd@a+2)^0,c
 11632  00292C  0EB5               	movlw	181
 11633  00292E  6E08               	movwf	(___fladd@a+3)^0,c
 11634  002930  0E4C               	movlw	76
 11635  002932  6E15               	movwf	___flmul@a^0,c
 11636  002934  0EBB               	movlw	187
 11637  002936  6E16               	movwf	(___flmul@a+1)^0,c
 11638  002938  0E31               	movlw	49
 11639  00293A  6E17               	movwf	(___flmul@a+2)^0,c
 11640  00293C  0E33               	movlw	51
 11641  00293E  6E18               	movwf	(___flmul@a+3)^0,c
 11642  002940  C1B0  F011         	movff	powf@t,___flmul@b
 11643  002944  C1B1  F012         	movff	powf@t+1,___flmul@b+1
 11644  002948  C1B2  F013         	movff	powf@t+2,___flmul@b+2
 11645  00294C  C1B3  F014         	movff	powf@t+3,___flmul@b+3
 11646  002950  EC25  F023         	call	___flmul	;wreg free
 11647  002954  C011  F001         	movff	?___flmul,___fladd@b
 11648  002958  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11649  00295C  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11650  002960  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11651  002964  ECCE  F024         	call	___fladd	;wreg free
 11652  002968  C001  F1A4         	movff	?___fladd,_powf$2038
 11653  00296C  C002  F1A5         	movff	?___fladd+1,_powf$2038+1
 11654  002970  C003  F1A6         	movff	?___fladd+2,_powf$2038+2
 11655  002974  C004  F1A7         	movff	?___fladd+3,_powf$2038+3
 11656  002978  0E55               	movlw	85
 11657  00297A  6E05               	movwf	___fladd@a^0,c
 11658  00297C  0EB3               	movlw	179
 11659  00297E  6E06               	movwf	(___fladd@a+1)^0,c
 11660  002980  0E8A               	movlw	138
 11661  002982  6E07               	movwf	(___fladd@a+2)^0,c
 11662  002984  0E38               	movlw	56
 11663  002986  6E08               	movwf	(___fladd@a+3)^0,c
 11664  002988  C1B0  F015         	movff	powf@t,___flmul@a
 11665  00298C  C1B1  F016         	movff	powf@t+1,___flmul@a+1
 11666  002990  C1B2  F017         	movff	powf@t+2,___flmul@a+2
 11667  002994  C1B3  F018         	movff	powf@t+3,___flmul@a+3
 11668  002998  C1A4  F011         	movff	_powf$2038,___flmul@b
 11669  00299C  C1A5  F012         	movff	_powf$2038+1,___flmul@b+1
 11670  0029A0  C1A6  F013         	movff	_powf$2038+2,___flmul@b+2
 11671  0029A4  C1A7  F014         	movff	_powf$2038+3,___flmul@b+3
 11672  0029A8  EC25  F023         	call	___flmul	;wreg free
 11673  0029AC  C011  F001         	movff	?___flmul,___fladd@b
 11674  0029B0  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11675  0029B4  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11676  0029B8  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11677  0029BC  ECCE  F024         	call	___fladd	;wreg free
 11678  0029C0  C001  F158         	movff	?___fladd,_powf$2039
 11679  0029C4  C002  F159         	movff	?___fladd+1,_powf$2039+1
 11680  0029C8  C003  F15A         	movff	?___fladd+2,_powf$2039+2
 11681  0029CC  C004  F15B         	movff	?___fladd+3,_powf$2039+3
 11682  0029D0  0E61               	movlw	97
 11683  0029D2  6E05               	movwf	___fladd@a^0,c
 11684  0029D4  0E0B               	movlw	11
 11685  0029D6  6E06               	movwf	(___fladd@a+1)^0,c
 11686  0029D8  0E36               	movlw	54
 11687  0029DA  6E07               	movwf	(___fladd@a+2)^0,c
 11688  0029DC  0EBB               	movlw	187
 11689  0029DE  6E08               	movwf	(___fladd@a+3)^0,c
 11690  0029E0  C1B0  F015         	movff	powf@t,___flmul@a
 11691  0029E4  C1B1  F016         	movff	powf@t+1,___flmul@a+1
 11692  0029E8  C1B2  F017         	movff	powf@t+2,___flmul@a+2
 11693  0029EC  C1B3  F018         	movff	powf@t+3,___flmul@a+3
 11694  0029F0  C158  F011         	movff	_powf$2039,___flmul@b
 11695  0029F4  C159  F012         	movff	_powf$2039+1,___flmul@b+1
 11696  0029F8  C15A  F013         	movff	_powf$2039+2,___flmul@b+2
 11697  0029FC  C15B  F014         	movff	_powf$2039+3,___flmul@b+3
 11698  002A00  EC25  F023         	call	___flmul	;wreg free
 11699  002A04  C011  F001         	movff	?___flmul,___fladd@b
 11700  002A08  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11701  002A0C  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11702  002A10  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11703  002A14  ECCE  F024         	call	___fladd	;wreg free
 11704  002A18  C001  F148         	movff	?___fladd,_powf$2040
 11705  002A1C  C002  F149         	movff	?___fladd+1,_powf$2040+1
 11706  002A20  C003  F14A         	movff	?___fladd+2,_powf$2040+2
 11707  002A24  C004  F14B         	movff	?___fladd+3,_powf$2040+3
 11708  002A28  0EAB               	movlw	171
 11709  002A2A  6E05               	movwf	___fladd@a^0,c
 11710  002A2C  0EAA               	movlw	170
 11711  002A2E  6E06               	movwf	(___fladd@a+1)^0,c
 11712  002A30  0E2A               	movlw	42
 11713  002A32  6E07               	movwf	(___fladd@a+2)^0,c
 11714  002A34  0E3E               	movlw	62
 11715  002A36  6E08               	movwf	(___fladd@a+3)^0,c
 11716  002A38  C1B0  F015         	movff	powf@t,___flmul@a
 11717  002A3C  C1B1  F016         	movff	powf@t+1,___flmul@a+1
 11718  002A40  C1B2  F017         	movff	powf@t+2,___flmul@a+2
 11719  002A44  C1B3  F018         	movff	powf@t+3,___flmul@a+3
 11720  002A48  C148  F011         	movff	_powf$2040,___flmul@b
 11721  002A4C  C149  F012         	movff	_powf$2040+1,___flmul@b+1
 11722  002A50  C14A  F013         	movff	_powf$2040+2,___flmul@b+2
 11723  002A54  C14B  F014         	movff	_powf$2040+3,___flmul@b+3
 11724  002A58  EC25  F023         	call	___flmul	;wreg free
 11725  002A5C  C011  F001         	movff	?___flmul,___fladd@b
 11726  002A60  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11727  002A64  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11728  002A68  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11729  002A6C  ECCE  F024         	call	___fladd	;wreg free
 11730  002A70  C001  F138         	movff	?___fladd,_powf$2042
 11731  002A74  C002  F139         	movff	?___fladd+1,_powf$2042+1
 11732  002A78  C003  F13A         	movff	?___fladd+2,_powf$2042+2
 11733  002A7C  C004  F13B         	movff	?___fladd+3,_powf$2042+3
 11734  002A80  C1B4  F02A         	movff	powf@z,___flsub@b
 11735  002A84  C1B5  F02B         	movff	powf@z+1,___flsub@b+1
 11736  002A88  C1B6  F02C         	movff	powf@z+2,___flsub@b+2
 11737  002A8C  C1B7  F02D         	movff	powf@z+3,___flsub@b+3
 11738  002A90  C1B0  F015         	movff	powf@t,___flmul@a
 11739  002A94  C1B1  F016         	movff	powf@t+1,___flmul@a+1
 11740  002A98  C1B2  F017         	movff	powf@t+2,___flmul@a+2
 11741  002A9C  C1B3  F018         	movff	powf@t+3,___flmul@a+3
 11742  002AA0  C138  F011         	movff	_powf$2042,___flmul@b
 11743  002AA4  C139  F012         	movff	_powf$2042+1,___flmul@b+1
 11744  002AA8  C13A  F013         	movff	_powf$2042+2,___flmul@b+2
 11745  002AAC  C13B  F014         	movff	_powf$2042+3,___flmul@b+3
 11746  002AB0  EC25  F023         	call	___flmul	;wreg free
 11747  002AB4  C011  F02E         	movff	?___flmul,___flsub@a
 11748  002AB8  C012  F02F         	movff	?___flmul+1,___flsub@a+1
 11749  002ABC  C013  F030         	movff	?___flmul+2,___flsub@a+2
 11750  002AC0  C014  F031         	movff	?___flmul+3,___flsub@a+3
 11751  002AC4  EC68  F033         	call	___flsub	;wreg free
 11752  002AC8  C02A  F180         	movff	?___flsub,powf@t1
 11753  002ACC  C02B  F181         	movff	?___flsub+1,powf@t1+1
 11754  002AD0  C02C  F182         	movff	?___flsub+2,powf@t1+2
 11755  002AD4  C02D  F183         	movff	?___flsub+3,powf@t1+3
 11756  002AD8  0E00               	movlw	0
 11757  002ADA  6E05               	movwf	___fladd@a^0,c
 11758  002ADC  0E00               	movlw	0
 11759  002ADE  6E06               	movwf	(___fladd@a+1)^0,c
 11760  002AE0  0E00               	movlw	0
 11761  002AE2  6E07               	movwf	(___fladd@a+2)^0,c
 11762  002AE4  0EC0               	movlw	192
 11763  002AE6  6E08               	movwf	(___fladd@a+3)^0,c
 11764  002AE8  C180  F001         	movff	powf@t1,___fladd@b
 11765  002AEC  C181  F002         	movff	powf@t1+1,___fladd@b+1
 11766  002AF0  C182  F003         	movff	powf@t1+2,___fladd@b+2
 11767  002AF4  C183  F004         	movff	powf@t1+3,___fladd@b+3
 11768  002AF8  ECCE  F024         	call	___fladd	;wreg free
 11769  002AFC  C001  F036         	movff	?___fladd,___fldiv@a
 11770  002B00  C002  F037         	movff	?___fladd+1,___fldiv@a+1
 11771  002B04  C003  F038         	movff	?___fladd+2,___fldiv@a+2
 11772  002B08  C004  F039         	movff	?___fladd+3,___fldiv@a+3
 11773  002B0C  C180  F015         	movff	powf@t1,___flmul@a
 11774  002B10  C181  F016         	movff	powf@t1+1,___flmul@a+1
 11775  002B14  C182  F017         	movff	powf@t1+2,___flmul@a+2
 11776  002B18  C183  F018         	movff	powf@t1+3,___flmul@a+3
 11777  002B1C  C1B4  F011         	movff	powf@z,___flmul@b
 11778  002B20  C1B5  F012         	movff	powf@z+1,___flmul@b+1
 11779  002B24  C1B6  F013         	movff	powf@z+2,___flmul@b+2
 11780  002B28  C1B7  F014         	movff	powf@z+3,___flmul@b+3
 11781  002B2C  EC25  F023         	call	___flmul	;wreg free
 11782  002B30  C011  F032         	movff	?___flmul,___fldiv@b
 11783  002B34  C012  F033         	movff	?___flmul+1,___fldiv@b+1
 11784  002B38  C013  F034         	movff	?___flmul+2,___fldiv@b+2
 11785  002B3C  C014  F035         	movff	?___flmul+3,___fldiv@b+3
 11786  002B40  EC54  F026         	call	___fldiv	;wreg free
 11787  002B44  C032  F13C         	movff	?___fldiv,_powf$2046
 11788  002B48  C033  F13D         	movff	?___fldiv+1,_powf$2046+1
 11789  002B4C  C034  F13E         	movff	?___fldiv+2,_powf$2046+2
 11790  002B50  C035  F13F         	movff	?___fldiv+3,_powf$2046+3
 11791  002B54  C144  F005         	movff	powf@w,___fladd@a
 11792  002B58  C145  F006         	movff	powf@w+1,___fladd@a+1
 11793  002B5C  C146  F007         	movff	powf@w+2,___fladd@a+2
 11794  002B60  C147  F008         	movff	powf@w+3,___fladd@a+3
 11795  002B64  C144  F015         	movff	powf@w,___flmul@a
 11796  002B68  C145  F016         	movff	powf@w+1,___flmul@a+1
 11797  002B6C  C146  F017         	movff	powf@w+2,___flmul@a+2
 11798  002B70  C147  F018         	movff	powf@w+3,___flmul@a+3
 11799  002B74  C1B4  F011         	movff	powf@z,___flmul@b
 11800  002B78  C1B5  F012         	movff	powf@z+1,___flmul@b+1
 11801  002B7C  C1B6  F013         	movff	powf@z+2,___flmul@b+2
 11802  002B80  C1B7  F014         	movff	powf@z+3,___flmul@b+3
 11803  002B84  EC25  F023         	call	___flmul	;wreg free
 11804  002B88  C011  F001         	movff	?___flmul,___fladd@b
 11805  002B8C  C012  F002         	movff	?___flmul+1,___fladd@b+1
 11806  002B90  C013  F003         	movff	?___flmul+2,___fladd@b+2
 11807  002B94  C014  F004         	movff	?___flmul+3,___fladd@b+3
 11808  002B98  ECCE  F024         	call	___fladd	;wreg free
 11809  002B9C  C001  F118         	movff	?___fladd,_powf$2052
 11810  002BA0  C002  F119         	movff	?___fladd+1,_powf$2052+1
 11811  002BA4  C003  F11A         	movff	?___fladd+2,_powf$2052+2
 11812  002BA8  C004  F11B         	movff	?___fladd+3,_powf$2052+3
 11813  002BAC  C13C  F02A         	movff	_powf$2046,___flsub@b
 11814  002BB0  C13D  F02B         	movff	_powf$2046+1,___flsub@b+1
 11815  002BB4  C13E  F02C         	movff	_powf$2046+2,___flsub@b+2
 11816  002BB8  C13F  F02D         	movff	_powf$2046+3,___flsub@b+3
 11817  002BBC  C118  F02E         	movff	_powf$2052,___flsub@a
 11818  002BC0  C119  F02F         	movff	_powf$2052+1,___flsub@a+1
 11819  002BC4  C11A  F030         	movff	_powf$2052+2,___flsub@a+2
 11820  002BC8  C11B  F031         	movff	_powf$2052+3,___flsub@a+3
 11821  002BCC  EC68  F033         	call	___flsub	;wreg free
 11822  002BD0  C02A  F14C         	movff	?___flsub,powf@r
 11823  002BD4  C02B  F14D         	movff	?___flsub+1,powf@r+1
 11824  002BD8  C02C  F14E         	movff	?___flsub+2,powf@r+2
 11825  002BDC  C02D  F14F         	movff	?___flsub+3,powf@r+3
 11826  002BE0  C1B4  F02E         	movff	powf@z,___flsub@a
 11827  002BE4  C1B5  F02F         	movff	powf@z+1,___flsub@a+1
 11828  002BE8  C1B6  F030         	movff	powf@z+2,___flsub@a+2
 11829  002BEC  C1B7  F031         	movff	powf@z+3,___flsub@a+3
 11830  002BF0  C14C  F02A         	movff	powf@r,___flsub@b
 11831  002BF4  C14D  F02B         	movff	powf@r+1,___flsub@b+1
 11832  002BF8  C14E  F02C         	movff	powf@r+2,___flsub@b+2
 11833  002BFC  C14F  F02D         	movff	powf@r+3,___flsub@b+3
 11834  002C00  EC68  F033         	call	___flsub	;wreg free
 11835  002C04  C02A  F198         	movff	?___flsub,_powf$2041
 11836  002C08  C02B  F199         	movff	?___flsub+1,_powf$2041+1
 11837  002C0C  C02C  F19A         	movff	?___flsub+2,_powf$2041+2
 11838  002C10  C02D  F19B         	movff	?___flsub+3,_powf$2041+3
 11839  002C14  0E00               	movlw	0
 11840  002C16  6E2A               	movwf	___flsub@b^0,c
 11841  002C18  0E00               	movlw	0
 11842  002C1A  6E2B               	movwf	(___flsub@b+1)^0,c
 11843  002C1C  0E80               	movlw	128
 11844  002C1E  6E2C               	movwf	(___flsub@b+2)^0,c
 11845  002C20  0E3F               	movlw	63
 11846  002C22  6E2D               	movwf	(___flsub@b+3)^0,c
 11847  002C24  C198  F02E         	movff	_powf$2041,___flsub@a
 11848  002C28  C199  F02F         	movff	_powf$2041+1,___flsub@a+1
 11849  002C2C  C19A  F030         	movff	_powf$2041+2,___flsub@a+2
 11850  002C30  C19B  F031         	movff	_powf$2041+3,___flsub@a+3
 11851  002C34  EC68  F033         	call	___flsub	;wreg free
 11852  002C38  C02A  F1B4         	movff	?___flsub,powf@z
 11853  002C3C  C02B  F1B5         	movff	?___flsub+1,powf@z+1
 11854  002C40  C02C  F1B6         	movff	?___flsub+2,powf@z+2
 11855  002C44  C02D  F1B7         	movff	?___flsub+3,powf@z+3
 11856  002C48  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 11857  002C4C  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 11858  002C50  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 11859  002C54  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 11860  002C58  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 11861  002C5C  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 11862  002C60  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 11863  002C64  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 11864  002C68  C188  F06F         	movff	powf@n,??_powf
 11865  002C6C  C189  F070         	movff	powf@n+1,??_powf+1
 11866  002C70  C18A  F071         	movff	powf@n+2,??_powf+2
 11867  002C74  C18B  F072         	movff	powf@n+3,??_powf+3
 11868  002C78  0E17               	movlw	23
 11869  002C7A                     i2u1275_45:
 11870  002C7A  90D8               	bcf	status,0,c
 11871  002C7C  366F               	rlcf	??_powf^0,f,c
 11872  002C7E  3670               	rlcf	(??_powf+1)^0,f,c
 11873  002C80  3671               	rlcf	(??_powf+2)^0,f,c
 11874  002C82  3672               	rlcf	(??_powf+3)^0,f,c
 11875  002C84  2EE8               	decfsz	wreg,f,c
 11876  002C86  D7F9               	goto	i2u1275_45
 11877  002C88  506F               	movf	??_powf^0,w,c
 11878  002C8A  0101               	movlb	1	; () banked
 11879  002C8C  27AC               	addwf	powf@j& (0+255),f,b
 11880  002C8E  5070               	movf	(??_powf+1)^0,w,c
 11881  002C90  23AD               	addwfc	(powf@j+1)& (0+255),f,b
 11882  002C92  5071               	movf	(??_powf+2)^0,w,c
 11883  002C94  23AE               	addwfc	(powf@j+2)& (0+255),f,b
 11884  002C96  5072               	movf	(??_powf+3)^0,w,c
 11885  002C98  23AF               	addwfc	(powf@j+3)& (0+255),f,b
 11886                           
 11887                           ; BSR set to: 1
 11888  002C9A  0E17               	movlw	23
 11889  002C9C  6E6F               	movwf	??_powf^0,c
 11890  002C9E  C1AC  F070         	movff	powf@j,??_powf+1
 11891  002CA2  C1AD  F071         	movff	powf@j+1,??_powf+2
 11892  002CA6  C1AE  F072         	movff	powf@j+2,??_powf+3
 11893  002CAA  C1AF  F073         	movff	powf@j+3,??_powf+4
 11894  002CAE                     i2u1276_45:
 11895  002CAE  666F               	tstfsz	??_powf^0,c
 11896  002CB0  D001               	goto	i2u1276_46
 11897  002CB2  D007               	goto	i2u1276_47
 11898  002CB4                     i2u1276_46:
 11899  002CB4  3473               	rlcf	(??_powf+4)^0,w,c
 11900  002CB6  3273               	rrcf	(??_powf+4)^0,f,c
 11901  002CB8  3272               	rrcf	(??_powf+3)^0,f,c
 11902  002CBA  3271               	rrcf	(??_powf+2)^0,f,c
 11903  002CBC  3270               	rrcf	(??_powf+1)^0,f,c
 11904  002CBE  2E6F               	decfsz	??_powf^0,f,c
 11905  002CC0  D7F6               	goto	i2u1276_45
 11906  002CC2                     i2u1276_47:
 11907  002CC2  BE73               	btfsc	(??_powf+4)^0,7,c
 11908  002CC4  D007               	goto	i2u1277_40
 11909  002CC6  5073               	movf	(??_powf+4)^0,w,c
 11910  002CC8  1072               	iorwf	(??_powf+3)^0,w,c
 11911  002CCA  1071               	iorwf	(??_powf+2)^0,w,c
 11912  002CCC  E11A               	bnz	i2l1443
 11913  002CCE  0470               	decf	(??_powf+1)^0,w,c
 11914  002CD0  B0D8               	btfsc	status,0,c
 11915  002CD2  D017               	goto	i2l1443
 11916  002CD4                     i2u1277_40:
 11917  002CD4  C1B4  F02A         	movff	powf@z,scalbnf@x
 11918  002CD8  C1B5  F02B         	movff	powf@z+1,scalbnf@x+1
 11919  002CDC  C1B6  F02C         	movff	powf@z+2,scalbnf@x+2
 11920  002CE0  C1B7  F02D         	movff	powf@z+3,scalbnf@x+3
 11921  002CE4  C188  F02E         	movff	powf@n,scalbnf@n
 11922  002CE8  C189  F02F         	movff	powf@n+1,scalbnf@n+1
 11923  002CEC  EC9B  F028         	call	_scalbnf	;wreg free
 11924  002CF0  C02A  F1B4         	movff	?_scalbnf,powf@z
 11925  002CF4  C02B  F1B5         	movff	?_scalbnf+1,powf@z+1
 11926  002CF8  C02C  F1B6         	movff	?_scalbnf+2,powf@z+2
 11927  002CFC  C02D  F1B7         	movff	?_scalbnf+3,powf@z+3
 11928  002D00  D010               	goto	i2l9911
 11929  002D02                     i2l1443:
 11930  002D02  C1AC  F1B8         	movff	powf@j,powf@__xc8_float_word
 11931  002D06  C1AD  F1B9         	movff	powf@j+1,powf@__xc8_float_word+1
 11932  002D0A  C1AE  F1BA         	movff	powf@j+2,powf@__xc8_float_word+2
 11933  002D0E  C1AF  F1BB         	movff	powf@j+3,powf@__xc8_float_word+3
 11934  002D12  C1B8  F1B4         	movff	powf@__xc8_float_word,powf@z
 11935  002D16  C1B9  F1B5         	movff	powf@__xc8_float_word+1,powf@z+1
 11936  002D1A  C1BA  F1B6         	movff	powf@__xc8_float_word+2,powf@z+2
 11937  002D1E  C1BB  F1B7         	movff	powf@__xc8_float_word+3,powf@z+3
 11938  002D22                     i2l9911:
 11939  002D22  C184  F011         	movff	powf@sn,___flmul@b
 11940  002D26  C185  F012         	movff	powf@sn+1,___flmul@b+1
 11941  002D2A  C186  F013         	movff	powf@sn+2,___flmul@b+2
 11942  002D2E  C187  F014         	movff	powf@sn+3,___flmul@b+3
 11943  002D32  C1B4  F015         	movff	powf@z,___flmul@a
 11944  002D36  C1B5  F016         	movff	powf@z+1,___flmul@a+1
 11945  002D3A  C1B6  F017         	movff	powf@z+2,___flmul@a+2
 11946  002D3E  C1B7  F018         	movff	powf@z+3,___flmul@a+3
 11947  002D42  EC25  F023         	call	___flmul	;wreg free
 11948  002D46  C011  F0C2         	movff	?___flmul,?_powf
 11949  002D4A  C012  F0C3         	movff	?___flmul+1,?_powf+1
 11950  002D4E  C013  F0C4         	movff	?___flmul+2,?_powf+2
 11951  002D52  C014  F0C5         	movff	?___flmul+3,?_powf+3
 11952  002D56  0012               	return		;funcret
 11953  002D58                     __end_of_powf:
 11954                           	opt callstack 0
 11955                           
 11956 ;; *************** function _sqrtf *****************
 11957 ;; Defined at:
 11958 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sqrtf.c"
 11959 ;; Parameters:    Size  Location     Type
 11960 ;;  x               4   61[COMRAM] float 
 11961 ;; Auto vars:     Size  Location     Type
 11962 ;;  ix              4  106[COMRAM] long 
 11963 ;;  r               4  102[COMRAM] unsigned long 
 11964 ;;  m               4   98[COMRAM] long 
 11965 ;;  z               4   94[COMRAM] float 
 11966 ;;  t               4   90[COMRAM] long 
 11967 ;;  q               4   86[COMRAM] long 
 11968 ;;  __xc8_float_    4   82[COMRAM] struct .
 11969 ;;  i               4   78[COMRAM] long 
 11970 ;;  s               4   74[COMRAM] long 
 11971 ;;  sign            4    0        long 
 11972 ;; Return value:  Size  Location     Type
 11973 ;;                  4   61[COMRAM] float 
 11974 ;; Registers used:
 11975 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11976 ;; Tracked objects:
 11977 ;;		On entry : 0/0
 11978 ;;		On exit  : 0/0
 11979 ;;		Unchanged: 0/0
 11980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11981 ;;      Params:         4       0       0       0       0       0       0
 11982 ;;      Locals:        40       0       0       0       0       0       0
 11983 ;;      Temps:          5       0       0       0       0       0       0
 11984 ;;      Totals:        49       0       0       0       0       0       0
 11985 ;;Total ram usage:       49 bytes
 11986 ;; Hardware stack levels used:    1
 11987 ;; Hardware stack levels required when called:    1
 11988 ;; This function calls:
 11989 ;;		___fladd
 11990 ;;		___flge
 11991 ;;		___flmul
 11992 ;;		_nanf
 11993 ;; This function is called by:
 11994 ;;		_powf
 11995 ;; This function uses a non-reentrant model
 11996 ;;
 11997                           
 11998                           	psect	text44
 11999  003E02                     __ptext44:
 12000                           	opt callstack 0
 12001  003E02                     _sqrtf:
 12002                           	opt callstack 17
 12003                           
 12004                           ;incstack = 0
 12005  003E02  C03E  F053         	movff	sqrtf@x,sqrtf@__xc8_float_word
 12006  003E06  C03F  F054         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
 12007  003E0A  C040  F055         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
 12008  003E0E  C041  F056         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
 12009  003E12  C053  F06B         	movff	sqrtf@__xc8_float_word,sqrtf@ix
 12010  003E16  C054  F06C         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
 12011  003E1A  C055  F06D         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
 12012  003E1E  C056  F06E         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
 12013  003E22  0E00               	movlw	0
 12014  003E24  146B               	andwf	sqrtf@ix^0,w,c
 12015  003E26  6E42               	movwf	??_sqrtf^0,c
 12016  003E28  0E00               	movlw	0
 12017  003E2A  146C               	andwf	(sqrtf@ix+1)^0,w,c
 12018  003E2C  6E43               	movwf	(??_sqrtf+1)^0,c
 12019  003E2E  0E80               	movlw	128
 12020  003E30  146D               	andwf	(sqrtf@ix+2)^0,w,c
 12021  003E32  6E44               	movwf	(??_sqrtf+2)^0,c
 12022  003E34  0E7F               	movlw	127
 12023  003E36  146E               	andwf	(sqrtf@ix+3)^0,w,c
 12024  003E38  6E45               	movwf	(??_sqrtf+3)^0,c
 12025  003E3A  0E80               	movlw	128
 12026  003E3C  1844               	xorwf	(??_sqrtf+2)^0,w,c
 12027  003E3E  E133               	bnz	i2l9243
 12028  003E40  0E7F               	movlw	127
 12029  003E42  1845               	xorwf	(??_sqrtf+3)^0,w,c
 12030  003E44  1042               	iorwf	??_sqrtf^0,w,c
 12031  003E46  1043               	iorwf	(??_sqrtf+1)^0,w,c
 12032  003E48  A4D8               	btfss	status,2,c
 12033  003E4A  D02D               	goto	i2l9243
 12034  003E4C  C03E  F015         	movff	sqrtf@x,___flmul@a
 12035  003E50  C03F  F016         	movff	sqrtf@x+1,___flmul@a+1
 12036  003E54  C040  F017         	movff	sqrtf@x+2,___flmul@a+2
 12037  003E58  C041  F018         	movff	sqrtf@x+3,___flmul@a+3
 12038  003E5C  C03E  F011         	movff	sqrtf@x,___flmul@b
 12039  003E60  C03F  F012         	movff	sqrtf@x+1,___flmul@b+1
 12040  003E64  C040  F013         	movff	sqrtf@x+2,___flmul@b+2
 12041  003E68  C041  F014         	movff	sqrtf@x+3,___flmul@b+3
 12042  003E6C  EC25  F023         	call	___flmul	;wreg free
 12043  003E70  C011  F001         	movff	?___flmul,___fladd@b
 12044  003E74  C012  F002         	movff	?___flmul+1,___fladd@b+1
 12045  003E78  C013  F003         	movff	?___flmul+2,___fladd@b+2
 12046  003E7C  C014  F004         	movff	?___flmul+3,___fladd@b+3
 12047  003E80  C03E  F005         	movff	sqrtf@x,___fladd@a
 12048  003E84  C03F  F006         	movff	sqrtf@x+1,___fladd@a+1
 12049  003E88  C040  F007         	movff	sqrtf@x+2,___fladd@a+2
 12050  003E8C  C041  F008         	movff	sqrtf@x+3,___fladd@a+3
 12051  003E90  ECCE  F024         	call	___fladd	;wreg free
 12052  003E94  C001  F03E         	movff	?___fladd,?_sqrtf
 12053  003E98  C002  F03F         	movff	?___fladd+1,?_sqrtf+1
 12054  003E9C  C003  F040         	movff	?___fladd+2,?_sqrtf+2
 12055  003EA0  C004  F041         	movff	?___fladd+3,?_sqrtf+3
 12056  003EA4  0012               	return	
 12057  003EA6                     i2l9243:
 12058  003EA6  BE6E               	btfsc	(sqrtf@ix+3)^0,7,c
 12059  003EA8  D007               	goto	i2u1186_40
 12060  003EAA  506E               	movf	(sqrtf@ix+3)^0,w,c
 12061  003EAC  106D               	iorwf	(sqrtf@ix+2)^0,w,c
 12062  003EAE  106C               	iorwf	(sqrtf@ix+1)^0,w,c
 12063  003EB0  E134               	bnz	i2l9257
 12064  003EB2  046B               	decf	sqrtf@ix^0,w,c
 12065  003EB4  B0D8               	btfsc	status,0,c
 12066  003EB6  D031               	goto	i2l9257
 12067  003EB8                     i2u1186_40:
 12068  003EB8  0EFF               	movlw	255
 12069  003EBA  146B               	andwf	sqrtf@ix^0,w,c
 12070  003EBC  6E42               	movwf	??_sqrtf^0,c
 12071  003EBE  0EFF               	movlw	255
 12072  003EC0  146C               	andwf	(sqrtf@ix+1)^0,w,c
 12073  003EC2  6E43               	movwf	(??_sqrtf+1)^0,c
 12074  003EC4  0EFF               	movlw	255
 12075  003EC6  146D               	andwf	(sqrtf@ix+2)^0,w,c
 12076  003EC8  6E44               	movwf	(??_sqrtf+2)^0,c
 12077  003ECA  0E7F               	movlw	127
 12078  003ECC  146E               	andwf	(sqrtf@ix+3)^0,w,c
 12079  003ECE  6E45               	movwf	(??_sqrtf+3)^0,c
 12080  003ED0  5042               	movf	??_sqrtf^0,w,c
 12081  003ED2  1043               	iorwf	(??_sqrtf+1)^0,w,c
 12082  003ED4  1044               	iorwf	(??_sqrtf+2)^0,w,c
 12083  003ED6  1045               	iorwf	(??_sqrtf+3)^0,w,c
 12084  003ED8  A4D8               	btfss	status,2,c
 12085  003EDA  D009               	goto	i2l9249
 12086  003EDC  C03E  F03E         	movff	sqrtf@x,?_sqrtf
 12087  003EE0  C03F  F03F         	movff	sqrtf@x+1,?_sqrtf+1
 12088  003EE4  C040  F040         	movff	sqrtf@x+2,?_sqrtf+2
 12089  003EE8  C041  F041         	movff	sqrtf@x+3,?_sqrtf+3
 12090  003EEC  0012               	return	
 12091  003EEE                     i2l9249:
 12092  003EEE  AE6E               	btfss	(sqrtf@ix+3)^0,7,c
 12093  003EF0  D014               	goto	i2l9257
 12094  003EF2  0E00               	movlw	0
 12095  003EF4  0102               	movlb	2	; () banked
 12096  003EF6  6F1D               	movwf	(_errno+1)& (0+255),b
 12097  003EF8  0E21               	movlw	33
 12098  003EFA  6F1C               	movwf	_errno& (0+255),b
 12099                           
 12100                           ; BSR set to: 2
 12101  003EFC  0EC8               	movlw	low (STR_3+8)
 12102  003EFE  6E01               	movwf	nanf@s^0,c
 12103  003F00  0E06               	movlw	high (STR_3+8)
 12104  003F02  6E02               	movwf	(nanf@s+1)^0,c
 12105  003F04  ECBC  F034         	call	_nanf	;wreg free
 12106  003F08  C001  F03E         	movff	?_nanf,?_sqrtf
 12107  003F0C  C002  F03F         	movff	?_nanf+1,?_sqrtf+1
 12108  003F10  C003  F040         	movff	?_nanf+2,?_sqrtf+2
 12109  003F14  C004  F041         	movff	?_nanf+3,?_sqrtf+3
 12110  003F18  0012               	return	
 12111  003F1A                     i2l9257:
 12112  003F1A  0E17               	movlw	23
 12113  003F1C  6E42               	movwf	??_sqrtf^0,c
 12114  003F1E  C06B  F043         	movff	sqrtf@ix,??_sqrtf+1
 12115  003F22  C06C  F044         	movff	sqrtf@ix+1,??_sqrtf+2
 12116  003F26  C06D  F045         	movff	sqrtf@ix+2,??_sqrtf+3
 12117  003F2A  C06E  F046         	movff	sqrtf@ix+3,??_sqrtf+4
 12118  003F2E                     i2u1189_45:
 12119  003F2E  6642               	tstfsz	??_sqrtf^0,c
 12120  003F30  D001               	goto	i2u1189_46
 12121  003F32  D007               	goto	i2u1189_47
 12122  003F34                     i2u1189_46:
 12123  003F34  3446               	rlcf	(??_sqrtf+4)^0,w,c
 12124  003F36  3246               	rrcf	(??_sqrtf+4)^0,f,c
 12125  003F38  3245               	rrcf	(??_sqrtf+3)^0,f,c
 12126  003F3A  3244               	rrcf	(??_sqrtf+2)^0,f,c
 12127  003F3C  3243               	rrcf	(??_sqrtf+1)^0,f,c
 12128  003F3E  2E42               	decfsz	??_sqrtf^0,f,c
 12129  003F40  D7F6               	goto	i2u1189_45
 12130  003F42                     i2u1189_47:
 12131  003F42  C043  F063         	movff	??_sqrtf+1,sqrtf@m
 12132  003F46  C044  F064         	movff	??_sqrtf+2,sqrtf@m+1
 12133  003F4A  C045  F065         	movff	??_sqrtf+3,sqrtf@m+2
 12134  003F4E  C046  F066         	movff	??_sqrtf+4,sqrtf@m+3
 12135  003F52  5063               	movf	sqrtf@m^0,w,c
 12136  003F54  1064               	iorwf	(sqrtf@m+1)^0,w,c
 12137  003F56  1065               	iorwf	(sqrtf@m+2)^0,w,c
 12138  003F58  1066               	iorwf	(sqrtf@m+3)^0,w,c
 12139  003F5A  A4D8               	btfss	status,2,c
 12140  003F5C  D02A               	goto	i2l1473
 12141  003F5E  0E00               	movlw	0
 12142  003F60  6E4F               	movwf	sqrtf@i^0,c
 12143  003F62  0E00               	movlw	0
 12144  003F64  6E50               	movwf	(sqrtf@i+1)^0,c
 12145  003F66  0E00               	movlw	0
 12146  003F68  6E51               	movwf	(sqrtf@i+2)^0,c
 12147  003F6A  0E00               	movlw	0
 12148  003F6C  6E52               	movwf	(sqrtf@i+3)^0,c
 12149  003F6E  D00B               	goto	i2l9265
 12150  003F70                     i2l9261:
 12151  003F70  90D8               	bcf	status,0,c
 12152  003F72  366B               	rlcf	sqrtf@ix^0,f,c
 12153  003F74  366C               	rlcf	(sqrtf@ix+1)^0,f,c
 12154  003F76  366D               	rlcf	(sqrtf@ix+2)^0,f,c
 12155  003F78  366E               	rlcf	(sqrtf@ix+3)^0,f,c
 12156  003F7A  0E01               	movlw	1
 12157  003F7C  264F               	addwf	sqrtf@i^0,f,c
 12158  003F7E  0E00               	movlw	0
 12159  003F80  2250               	addwfc	(sqrtf@i+1)^0,f,c
 12160  003F82  2251               	addwfc	(sqrtf@i+2)^0,f,c
 12161  003F84  2252               	addwfc	(sqrtf@i+3)^0,f,c
 12162  003F86                     i2l9265:
 12163  003F86  AE6D               	btfss	(sqrtf@ix+2)^0,7,c
 12164  003F88  D7F3               	goto	i2l9261
 12165  003F8A  0EFF               	movlw	255
 12166  003F8C  244F               	addwf	sqrtf@i^0,w,c
 12167  003F8E  6E42               	movwf	??_sqrtf^0,c
 12168  003F90  0EFF               	movlw	255
 12169  003F92  2050               	addwfc	(sqrtf@i+1)^0,w,c
 12170  003F94  6E43               	movwf	(??_sqrtf+1)^0,c
 12171  003F96  0EFF               	movlw	255
 12172  003F98  2051               	addwfc	(sqrtf@i+2)^0,w,c
 12173  003F9A  6E44               	movwf	(??_sqrtf+2)^0,c
 12174  003F9C  0EFF               	movlw	255
 12175  003F9E  2052               	addwfc	(sqrtf@i+3)^0,w,c
 12176  003FA0  6E45               	movwf	(??_sqrtf+3)^0,c
 12177  003FA2  5042               	movf	??_sqrtf^0,w,c
 12178  003FA4  5E63               	subwf	sqrtf@m^0,f,c
 12179  003FA6  5043               	movf	(??_sqrtf+1)^0,w,c
 12180  003FA8  5A64               	subwfb	(sqrtf@m+1)^0,f,c
 12181  003FAA  5044               	movf	(??_sqrtf+2)^0,w,c
 12182  003FAC  5A65               	subwfb	(sqrtf@m+2)^0,f,c
 12183  003FAE  5045               	movf	(??_sqrtf+3)^0,w,c
 12184  003FB0  5A66               	subwfb	(sqrtf@m+3)^0,f,c
 12185  003FB2                     i2l1473:
 12186  003FB2  0E81               	movlw	129
 12187  003FB4  2663               	addwf	sqrtf@m^0,f,c
 12188  003FB6  0EFF               	movlw	255
 12189  003FB8  2264               	addwfc	(sqrtf@m+1)^0,f,c
 12190  003FBA  0EFF               	movlw	255
 12191  003FBC  2265               	addwfc	(sqrtf@m+2)^0,f,c
 12192  003FBE  0EFF               	movlw	255
 12193  003FC0  2266               	addwfc	(sqrtf@m+3)^0,f,c
 12194  003FC2  0EFF               	movlw	255
 12195  003FC4  146B               	andwf	sqrtf@ix^0,w,c
 12196  003FC6  6E42               	movwf	??_sqrtf^0,c
 12197  003FC8  0EFF               	movlw	255
 12198  003FCA  146C               	andwf	(sqrtf@ix+1)^0,w,c
 12199  003FCC  6E43               	movwf	(??_sqrtf+1)^0,c
 12200  003FCE  0E7F               	movlw	127
 12201  003FD0  146D               	andwf	(sqrtf@ix+2)^0,w,c
 12202  003FD2  6E44               	movwf	(??_sqrtf+2)^0,c
 12203  003FD4  0E00               	movlw	0
 12204  003FD6  146E               	andwf	(sqrtf@ix+3)^0,w,c
 12205  003FD8  6E45               	movwf	(??_sqrtf+3)^0,c
 12206  003FDA  0E00               	movlw	0
 12207  003FDC  1042               	iorwf	??_sqrtf^0,w,c
 12208  003FDE  6E6B               	movwf	sqrtf@ix^0,c
 12209  003FE0  0E00               	movlw	0
 12210  003FE2  1043               	iorwf	(??_sqrtf+1)^0,w,c
 12211  003FE4  6E6C               	movwf	(sqrtf@ix+1)^0,c
 12212  003FE6  0E80               	movlw	128
 12213  003FE8  1044               	iorwf	(??_sqrtf+2)^0,w,c
 12214  003FEA  6E6D               	movwf	(sqrtf@ix+2)^0,c
 12215  003FEC  0E00               	movlw	0
 12216  003FEE  1045               	iorwf	(??_sqrtf+3)^0,w,c
 12217  003FF0  6E6E               	movwf	(sqrtf@ix+3)^0,c
 12218  003FF2  A063               	btfss	sqrtf@m^0,0,c
 12219  003FF4  D008               	goto	i2l1477
 12220  003FF6  506B               	movf	sqrtf@ix^0,w,c
 12221  003FF8  266B               	addwf	sqrtf@ix^0,f,c
 12222  003FFA  506C               	movf	(sqrtf@ix+1)^0,w,c
 12223  003FFC  226C               	addwfc	(sqrtf@ix+1)^0,f,c
 12224  003FFE  506D               	movf	(sqrtf@ix+2)^0,w,c
 12225  004000  226D               	addwfc	(sqrtf@ix+2)^0,f,c
 12226  004002  506E               	movf	(sqrtf@ix+3)^0,w,c
 12227  004004  226E               	addwfc	(sqrtf@ix+3)^0,f,c
 12228  004006                     i2l1477:
 12229  004006  3466               	rlcf	(sqrtf@m+3)^0,w,c
 12230  004008  3266               	rrcf	(sqrtf@m+3)^0,f,c
 12231  00400A  3265               	rrcf	(sqrtf@m+2)^0,f,c
 12232  00400C  3264               	rrcf	(sqrtf@m+1)^0,f,c
 12233  00400E  3263               	rrcf	sqrtf@m^0,f,c
 12234  004010  506B               	movf	sqrtf@ix^0,w,c
 12235  004012  266B               	addwf	sqrtf@ix^0,f,c
 12236  004014  506C               	movf	(sqrtf@ix+1)^0,w,c
 12237  004016  226C               	addwfc	(sqrtf@ix+1)^0,f,c
 12238  004018  506D               	movf	(sqrtf@ix+2)^0,w,c
 12239  00401A  226D               	addwfc	(sqrtf@ix+2)^0,f,c
 12240  00401C  506E               	movf	(sqrtf@ix+3)^0,w,c
 12241  00401E  226E               	addwfc	(sqrtf@ix+3)^0,f,c
 12242  004020  0E00               	movlw	0
 12243  004022  6E4B               	movwf	sqrtf@s^0,c
 12244  004024  0E00               	movlw	0
 12245  004026  6E4C               	movwf	(sqrtf@s+1)^0,c
 12246  004028  0E00               	movlw	0
 12247  00402A  6E4D               	movwf	(sqrtf@s+2)^0,c
 12248  00402C  0E00               	movlw	0
 12249  00402E  6E4E               	movwf	(sqrtf@s+3)^0,c
 12250  004030  C04B  F057         	movff	sqrtf@s,sqrtf@q
 12251  004034  C04C  F058         	movff	sqrtf@s+1,sqrtf@q+1
 12252  004038  C04D  F059         	movff	sqrtf@s+2,sqrtf@q+2
 12253  00403C  C04E  F05A         	movff	sqrtf@s+3,sqrtf@q+3
 12254  004040  0E00               	movlw	0
 12255  004042  6E67               	movwf	sqrtf@r^0,c
 12256  004044  0E00               	movlw	0
 12257  004046  6E68               	movwf	(sqrtf@r+1)^0,c
 12258  004048  0E00               	movlw	0
 12259  00404A  6E69               	movwf	(sqrtf@r+2)^0,c
 12260  00404C  0E01               	movlw	1
 12261  00404E  6E6A               	movwf	(sqrtf@r+3)^0,c
 12262  004050  D043               	goto	i2l9283
 12263  004052                     i2l9277:
 12264  004052  5067               	movf	sqrtf@r^0,w,c
 12265  004054  244B               	addwf	sqrtf@s^0,w,c
 12266  004056  6E5B               	movwf	sqrtf@t^0,c
 12267  004058  5068               	movf	(sqrtf@r+1)^0,w,c
 12268  00405A  204C               	addwfc	(sqrtf@s+1)^0,w,c
 12269  00405C  6E5C               	movwf	(sqrtf@t+1)^0,c
 12270  00405E  5069               	movf	(sqrtf@r+2)^0,w,c
 12271  004060  204D               	addwfc	(sqrtf@s+2)^0,w,c
 12272  004062  6E5D               	movwf	(sqrtf@t+2)^0,c
 12273  004064  506A               	movf	(sqrtf@r+3)^0,w,c
 12274  004066  204E               	addwfc	(sqrtf@s+3)^0,w,c
 12275  004068  6E5E               	movwf	(sqrtf@t+3)^0,c
 12276  00406A  505B               	movf	sqrtf@t^0,w,c
 12277  00406C  5C6B               	subwf	sqrtf@ix^0,w,c
 12278  00406E  505C               	movf	(sqrtf@t+1)^0,w,c
 12279  004070  586C               	subwfb	(sqrtf@ix+1)^0,w,c
 12280  004072  505D               	movf	(sqrtf@t+2)^0,w,c
 12281  004074  586D               	subwfb	(sqrtf@ix+2)^0,w,c
 12282  004076  506E               	movf	(sqrtf@ix+3)^0,w,c
 12283  004078  0A80               	xorlw	128
 12284  00407A  6E42               	movwf	??_sqrtf^0,c
 12285  00407C  505E               	movf	(sqrtf@t+3)^0,w,c
 12286  00407E  0A80               	xorlw	128
 12287  004080  5842               	subwfb	??_sqrtf^0,w,c
 12288  004082  A0D8               	btfss	status,0,c
 12289  004084  D01C               	goto	i2l1480
 12290  004086  5067               	movf	sqrtf@r^0,w,c
 12291  004088  245B               	addwf	sqrtf@t^0,w,c
 12292  00408A  6E4B               	movwf	sqrtf@s^0,c
 12293  00408C  5068               	movf	(sqrtf@r+1)^0,w,c
 12294  00408E  205C               	addwfc	(sqrtf@t+1)^0,w,c
 12295  004090  6E4C               	movwf	(sqrtf@s+1)^0,c
 12296  004092  5069               	movf	(sqrtf@r+2)^0,w,c
 12297  004094  205D               	addwfc	(sqrtf@t+2)^0,w,c
 12298  004096  6E4D               	movwf	(sqrtf@s+2)^0,c
 12299  004098  506A               	movf	(sqrtf@r+3)^0,w,c
 12300  00409A  205E               	addwfc	(sqrtf@t+3)^0,w,c
 12301  00409C  6E4E               	movwf	(sqrtf@s+3)^0,c
 12302  00409E  505B               	movf	sqrtf@t^0,w,c
 12303  0040A0  5E6B               	subwf	sqrtf@ix^0,f,c
 12304  0040A2  505C               	movf	(sqrtf@t+1)^0,w,c
 12305  0040A4  5A6C               	subwfb	(sqrtf@ix+1)^0,f,c
 12306  0040A6  505D               	movf	(sqrtf@t+2)^0,w,c
 12307  0040A8  5A6D               	subwfb	(sqrtf@ix+2)^0,f,c
 12308  0040AA  505E               	movf	(sqrtf@t+3)^0,w,c
 12309  0040AC  5A6E               	subwfb	(sqrtf@ix+3)^0,f,c
 12310  0040AE  5067               	movf	sqrtf@r^0,w,c
 12311  0040B0  2657               	addwf	sqrtf@q^0,f,c
 12312  0040B2  5068               	movf	(sqrtf@r+1)^0,w,c
 12313  0040B4  2258               	addwfc	(sqrtf@q+1)^0,f,c
 12314  0040B6  5069               	movf	(sqrtf@r+2)^0,w,c
 12315  0040B8  2259               	addwfc	(sqrtf@q+2)^0,f,c
 12316  0040BA  506A               	movf	(sqrtf@r+3)^0,w,c
 12317  0040BC  225A               	addwfc	(sqrtf@q+3)^0,f,c
 12318  0040BE                     i2l1480:
 12319  0040BE  506B               	movf	sqrtf@ix^0,w,c
 12320  0040C0  266B               	addwf	sqrtf@ix^0,f,c
 12321  0040C2  506C               	movf	(sqrtf@ix+1)^0,w,c
 12322  0040C4  226C               	addwfc	(sqrtf@ix+1)^0,f,c
 12323  0040C6  506D               	movf	(sqrtf@ix+2)^0,w,c
 12324  0040C8  226D               	addwfc	(sqrtf@ix+2)^0,f,c
 12325  0040CA  506E               	movf	(sqrtf@ix+3)^0,w,c
 12326  0040CC  226E               	addwfc	(sqrtf@ix+3)^0,f,c
 12327  0040CE  90D8               	bcf	status,0,c
 12328  0040D0  326A               	rrcf	(sqrtf@r+3)^0,f,c
 12329  0040D2  3269               	rrcf	(sqrtf@r+2)^0,f,c
 12330  0040D4  3268               	rrcf	(sqrtf@r+1)^0,f,c
 12331  0040D6  3267               	rrcf	sqrtf@r^0,f,c
 12332  0040D8                     i2l9283:
 12333  0040D8  5067               	movf	sqrtf@r^0,w,c
 12334  0040DA  1068               	iorwf	(sqrtf@r+1)^0,w,c
 12335  0040DC  1069               	iorwf	(sqrtf@r+2)^0,w,c
 12336  0040DE  106A               	iorwf	(sqrtf@r+3)^0,w,c
 12337  0040E0  A4D8               	btfss	status,2,c
 12338  0040E2  D7B7               	goto	i2l9277
 12339  0040E4  506B               	movf	sqrtf@ix^0,w,c
 12340  0040E6  106C               	iorwf	(sqrtf@ix+1)^0,w,c
 12341  0040E8  106D               	iorwf	(sqrtf@ix+2)^0,w,c
 12342  0040EA  106E               	iorwf	(sqrtf@ix+3)^0,w,c
 12343  0040EC  B4D8               	btfsc	status,2,c
 12344  0040EE  D052               	goto	i2l1482
 12345  0040F0  0E00               	movlw	0
 12346  0040F2  6E5F               	movwf	sqrtf@z^0,c
 12347  0040F4  0E00               	movlw	0
 12348  0040F6  6E60               	movwf	(sqrtf@z+1)^0,c
 12349  0040F8  0E80               	movlw	128
 12350  0040FA  6E61               	movwf	(sqrtf@z+2)^0,c
 12351  0040FC  0E3F               	movlw	63
 12352  0040FE  6E62               	movwf	(sqrtf@z+3)^0,c
 12353  004100  C05F  F032         	movff	sqrtf@z,___flge@ff1
 12354  004104  C060  F033         	movff	sqrtf@z+1,___flge@ff1+1
 12355  004108  C061  F034         	movff	sqrtf@z+2,___flge@ff1+2
 12356  00410C  C062  F035         	movff	sqrtf@z+3,___flge@ff1+3
 12357  004110  0E00               	movlw	0
 12358  004112  6E36               	movwf	___flge@ff2^0,c
 12359  004114  0E00               	movlw	0
 12360  004116  6E37               	movwf	(___flge@ff2+1)^0,c
 12361  004118  0E80               	movlw	128
 12362  00411A  6E38               	movwf	(___flge@ff2+2)^0,c
 12363  00411C  0E3F               	movlw	63
 12364  00411E  6E39               	movwf	(___flge@ff2+3)^0,c
 12365  004120  ECC2  F02E         	call	___flge	;wreg free
 12366  004124  A0D8               	btfss	status,0,c
 12367  004126  D036               	goto	i2l1482
 12368  004128  0E00               	movlw	0
 12369  00412A  6E5F               	movwf	sqrtf@z^0,c
 12370  00412C  0E00               	movlw	0
 12371  00412E  6E60               	movwf	(sqrtf@z+1)^0,c
 12372  004130  0E80               	movlw	128
 12373  004132  6E61               	movwf	(sqrtf@z+2)^0,c
 12374  004134  0E3F               	movlw	63
 12375  004136  6E62               	movwf	(sqrtf@z+3)^0,c
 12376  004138  0E00               	movlw	0
 12377  00413A  6E32               	movwf	___flge@ff1^0,c
 12378  00413C  0E00               	movlw	0
 12379  00413E  6E33               	movwf	(___flge@ff1+1)^0,c
 12380  004140  0E80               	movlw	128
 12381  004142  6E34               	movwf	(___flge@ff1+2)^0,c
 12382  004144  0E3F               	movlw	63
 12383  004146  6E35               	movwf	(___flge@ff1+3)^0,c
 12384  004148  C05F  F036         	movff	sqrtf@z,___flge@ff2
 12385  00414C  C060  F037         	movff	sqrtf@z+1,___flge@ff2+1
 12386  004150  C061  F038         	movff	sqrtf@z+2,___flge@ff2+2
 12387  004154  C062  F039         	movff	sqrtf@z+3,___flge@ff2+3
 12388  004158  ECC2  F02E         	call	___flge	;wreg free
 12389  00415C  B0D8               	btfsc	status,0,c
 12390  00415E  D006               	goto	i2l9297
 12391  004160  0E02               	movlw	2
 12392  004162  2657               	addwf	sqrtf@q^0,f,c
 12393  004164  0E00               	movlw	0
 12394  004166  2258               	addwfc	(sqrtf@q+1)^0,f,c
 12395  004168  2259               	addwfc	(sqrtf@q+2)^0,f,c
 12396  00416A  D013               	goto	L10
 12397  00416C                     i2l9297:
 12398  00416C  0E01               	movlw	1
 12399  00416E  1457               	andwf	sqrtf@q^0,w,c
 12400  004170  6E42               	movwf	??_sqrtf^0,c
 12401  004172  0E00               	movlw	0
 12402  004174  1458               	andwf	(sqrtf@q+1)^0,w,c
 12403  004176  6E43               	movwf	(??_sqrtf+1)^0,c
 12404  004178  0E00               	movlw	0
 12405  00417A  1459               	andwf	(sqrtf@q+2)^0,w,c
 12406  00417C  6E44               	movwf	(??_sqrtf+2)^0,c
 12407  00417E  0E00               	movlw	0
 12408  004180  145A               	andwf	(sqrtf@q+3)^0,w,c
 12409  004182  6E45               	movwf	(??_sqrtf+3)^0,c
 12410  004184  5042               	movf	??_sqrtf^0,w,c
 12411  004186  2657               	addwf	sqrtf@q^0,f,c
 12412  004188  5043               	movf	(??_sqrtf+1)^0,w,c
 12413  00418A  2258               	addwfc	(sqrtf@q+1)^0,f,c
 12414  00418C  5044               	movf	(??_sqrtf+2)^0,w,c
 12415  00418E  2259               	addwfc	(sqrtf@q+2)^0,f,c
 12416  004190  5045               	movf	(??_sqrtf+3)^0,w,c
 12417  004192                     L10:
 12418  004192  225A               	addwfc	(sqrtf@q+3)^0,f,c
 12419  004194                     i2l1482:
 12420  004194  C057  F042         	movff	sqrtf@q,??_sqrtf
 12421  004198  C058  F043         	movff	sqrtf@q+1,??_sqrtf+1
 12422  00419C  C059  F044         	movff	sqrtf@q+2,??_sqrtf+2
 12423  0041A0  C05A  F045         	movff	sqrtf@q+3,??_sqrtf+3
 12424  0041A4  3445               	rlcf	(??_sqrtf+3)^0,w,c
 12425  0041A6  3245               	rrcf	(??_sqrtf+3)^0,f,c
 12426  0041A8  3244               	rrcf	(??_sqrtf+2)^0,f,c
 12427  0041AA  3243               	rrcf	(??_sqrtf+1)^0,f,c
 12428  0041AC  3242               	rrcf	??_sqrtf^0,f,c
 12429  0041AE  0E00               	movlw	0
 12430  0041B0  2442               	addwf	??_sqrtf^0,w,c
 12431  0041B2  6E6B               	movwf	sqrtf@ix^0,c
 12432  0041B4  0E00               	movlw	0
 12433  0041B6  2043               	addwfc	(??_sqrtf+1)^0,w,c
 12434  0041B8  6E6C               	movwf	(sqrtf@ix+1)^0,c
 12435  0041BA  0E00               	movlw	0
 12436  0041BC  2044               	addwfc	(??_sqrtf+2)^0,w,c
 12437  0041BE  6E6D               	movwf	(sqrtf@ix+2)^0,c
 12438  0041C0  0E3F               	movlw	63
 12439  0041C2  2045               	addwfc	(??_sqrtf+3)^0,w,c
 12440  0041C4  6E6E               	movwf	(sqrtf@ix+3)^0,c
 12441  0041C6  C063  F042         	movff	sqrtf@m,??_sqrtf
 12442  0041CA  C064  F043         	movff	sqrtf@m+1,??_sqrtf+1
 12443  0041CE  C065  F044         	movff	sqrtf@m+2,??_sqrtf+2
 12444  0041D2  C066  F045         	movff	sqrtf@m+3,??_sqrtf+3
 12445  0041D6  0E17               	movlw	23
 12446  0041D8                     i2u1198_45:
 12447  0041D8  90D8               	bcf	status,0,c
 12448  0041DA  3642               	rlcf	??_sqrtf^0,f,c
 12449  0041DC  3643               	rlcf	(??_sqrtf+1)^0,f,c
 12450  0041DE  3644               	rlcf	(??_sqrtf+2)^0,f,c
 12451  0041E0  3645               	rlcf	(??_sqrtf+3)^0,f,c
 12452  0041E2  2EE8               	decfsz	wreg,f,c
 12453  0041E4  D7F9               	goto	i2u1198_45
 12454  0041E6  5042               	movf	??_sqrtf^0,w,c
 12455  0041E8  266B               	addwf	sqrtf@ix^0,f,c
 12456  0041EA  5043               	movf	(??_sqrtf+1)^0,w,c
 12457  0041EC  226C               	addwfc	(sqrtf@ix+1)^0,f,c
 12458  0041EE  5044               	movf	(??_sqrtf+2)^0,w,c
 12459  0041F0  226D               	addwfc	(sqrtf@ix+2)^0,f,c
 12460  0041F2  5045               	movf	(??_sqrtf+3)^0,w,c
 12461  0041F4  226E               	addwfc	(sqrtf@ix+3)^0,f,c
 12462  0041F6  C06B  F053         	movff	sqrtf@ix,sqrtf@__xc8_float_word
 12463  0041FA  C06C  F054         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
 12464  0041FE  C06D  F055         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
 12465  004202  C06E  F056         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
 12466  004206  C053  F05F         	movff	sqrtf@__xc8_float_word,sqrtf@z
 12467  00420A  C054  F060         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
 12468  00420E  C055  F061         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
 12469  004212  C056  F062         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
 12470  004216  C05F  F03E         	movff	sqrtf@z,?_sqrtf
 12471  00421A  C060  F03F         	movff	sqrtf@z+1,?_sqrtf+1
 12472  00421E  C061  F040         	movff	sqrtf@z+2,?_sqrtf+2
 12473  004222  C062  F041         	movff	sqrtf@z+3,?_sqrtf+3
 12474  004226  0012               	return		;funcret
 12475  004228                     __end_of_sqrtf:
 12476                           	opt callstack 0
 12477                           
 12478 ;; *************** function _nanf *****************
 12479 ;; Defined at:
 12480 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nanf.c"
 12481 ;; Parameters:    Size  Location     Type
 12482 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12483 ;;		 -> STR_18(1), 
 12484 ;; Auto vars:     Size  Location     Type
 12485 ;;  u               4    4[COMRAM] struct .
 12486 ;; Return value:  Size  Location     Type
 12487 ;;                  4    0[COMRAM] float 
 12488 ;; Registers used:
 12489 ;;		wreg, status,2
 12490 ;; Tracked objects:
 12491 ;;		On entry : 0/0
 12492 ;;		On exit  : 0/0
 12493 ;;		Unchanged: 0/0
 12494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12495 ;;      Params:         4       0       0       0       0       0       0
 12496 ;;      Locals:         4       0       0       0       0       0       0
 12497 ;;      Temps:          0       0       0       0       0       0       0
 12498 ;;      Totals:         8       0       0       0       0       0       0
 12499 ;;Total ram usage:        8 bytes
 12500 ;; Hardware stack levels used:    1
 12501 ;; This function calls:
 12502 ;;		Nothing
 12503 ;; This function is called by:
 12504 ;;		_sqrtf
 12505 ;; This function uses a non-reentrant model
 12506 ;;
 12507                           
 12508                           	psect	text45
 12509  006978                     __ptext45:
 12510                           	opt callstack 0
 12511  006978                     _nanf:
 12512                           	opt callstack 17
 12513                           
 12514                           ;incstack = 0
 12515  006978  0EFF               	movlw	255
 12516  00697A  6E05               	movwf	nanf@u^0,c
 12517  00697C  0EFF               	movlw	255
 12518  00697E  6E06               	movwf	(nanf@u+1)^0,c
 12519  006980  0EFF               	movlw	255
 12520  006982  6E07               	movwf	(nanf@u+2)^0,c
 12521  006984  0E7F               	movlw	127
 12522  006986  6E08               	movwf	(nanf@u+3)^0,c
 12523  006988  C005  F001         	movff	nanf@u,?_nanf
 12524  00698C  C006  F002         	movff	nanf@u+1,?_nanf+1
 12525  006990  C007  F003         	movff	nanf@u+2,?_nanf+2
 12526  006994  C008  F004         	movff	nanf@u+3,?_nanf+3
 12527  006998  0012               	return		;funcret
 12528  00699A                     __end_of_nanf:
 12529                           	opt callstack 0
 12530                           
 12531 ;; *************** function ___flge *****************
 12532 ;; Defined at:
 12533 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 12534 ;; Parameters:    Size  Location     Type
 12535 ;;  ff1             4   49[COMRAM] float 
 12536 ;;  ff2             4   53[COMRAM] float 
 12537 ;; Auto vars:     Size  Location     Type
 12538 ;;		None
 12539 ;; Return value:  Size  Location     Type
 12540 ;;		None               void
 12541 ;; Registers used:
 12542 ;;		wreg, status,2, status,0
 12543 ;; Tracked objects:
 12544 ;;		On entry : 0/0
 12545 ;;		On exit  : 0/0
 12546 ;;		Unchanged: 0/0
 12547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12548 ;;      Params:         8       0       0       0       0       0       0
 12549 ;;      Locals:         0       0       0       0       0       0       0
 12550 ;;      Temps:          4       0       0       0       0       0       0
 12551 ;;      Totals:        12       0       0       0       0       0       0
 12552 ;;Total ram usage:       12 bytes
 12553 ;; Hardware stack levels used:    1
 12554 ;; This function calls:
 12555 ;;		Nothing
 12556 ;; This function is called by:
 12557 ;;		_efgtoa
 12558 ;;		_powf
 12559 ;;		_sqrtf
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           	psect	text46
 12564  005D84                     __ptext46:
 12565                           	opt callstack 0
 12566  005D84                     ___flge:
 12567                           	opt callstack 18
 12568                           
 12569                           ;incstack = 0
 12570  005D84  0E00               	movlw	0
 12571  005D86  1432               	andwf	___flge@ff1^0,w,c
 12572  005D88  6E3A               	movwf	??___flge^0,c
 12573  005D8A  0E00               	movlw	0
 12574  005D8C  1433               	andwf	(___flge@ff1+1)^0,w,c
 12575  005D8E  6E3B               	movwf	(??___flge+1)^0,c
 12576  005D90  0E80               	movlw	128
 12577  005D92  1434               	andwf	(___flge@ff1+2)^0,w,c
 12578  005D94  6E3C               	movwf	(??___flge+2)^0,c
 12579  005D96  0E7F               	movlw	127
 12580  005D98  1435               	andwf	(___flge@ff1+3)^0,w,c
 12581  005D9A  6E3D               	movwf	(??___flge+3)^0,c
 12582  005D9C  503A               	movf	??___flge^0,w,c
 12583  005D9E  103B               	iorwf	(??___flge+1)^0,w,c
 12584  005DA0  103C               	iorwf	(??___flge+2)^0,w,c
 12585  005DA2  103D               	iorwf	(??___flge+3)^0,w,c
 12586  005DA4  A4D8               	btfss	status,2,c
 12587  005DA6  D008               	goto	i2l8849
 12588  005DA8  0E00               	movlw	0
 12589  005DAA  6E32               	movwf	___flge@ff1^0,c
 12590  005DAC  0E00               	movlw	0
 12591  005DAE  6E33               	movwf	(___flge@ff1+1)^0,c
 12592  005DB0  0E00               	movlw	0
 12593  005DB2  6E34               	movwf	(___flge@ff1+2)^0,c
 12594  005DB4  0E00               	movlw	0
 12595  005DB6  6E35               	movwf	(___flge@ff1+3)^0,c
 12596  005DB8                     i2l8849:
 12597  005DB8  0E00               	movlw	0
 12598  005DBA  1436               	andwf	___flge@ff2^0,w,c
 12599  005DBC  6E3A               	movwf	??___flge^0,c
 12600  005DBE  0E00               	movlw	0
 12601  005DC0  1437               	andwf	(___flge@ff2+1)^0,w,c
 12602  005DC2  6E3B               	movwf	(??___flge+1)^0,c
 12603  005DC4  0E80               	movlw	128
 12604  005DC6  1438               	andwf	(___flge@ff2+2)^0,w,c
 12605  005DC8  6E3C               	movwf	(??___flge+2)^0,c
 12606  005DCA  0E7F               	movlw	127
 12607  005DCC  1439               	andwf	(___flge@ff2+3)^0,w,c
 12608  005DCE  6E3D               	movwf	(??___flge+3)^0,c
 12609  005DD0  503A               	movf	??___flge^0,w,c
 12610  005DD2  103B               	iorwf	(??___flge+1)^0,w,c
 12611  005DD4  103C               	iorwf	(??___flge+2)^0,w,c
 12612  005DD6  103D               	iorwf	(??___flge+3)^0,w,c
 12613  005DD8  A4D8               	btfss	status,2,c
 12614  005DDA  D008               	goto	i2l8853
 12615  005DDC  0E00               	movlw	0
 12616  005DDE  6E36               	movwf	___flge@ff2^0,c
 12617  005DE0  0E00               	movlw	0
 12618  005DE2  6E37               	movwf	(___flge@ff2+1)^0,c
 12619  005DE4  0E00               	movlw	0
 12620  005DE6  6E38               	movwf	(___flge@ff2+2)^0,c
 12621  005DE8  0E00               	movlw	0
 12622  005DEA  6E39               	movwf	(___flge@ff2+3)^0,c
 12623  005DEC                     i2l8853:
 12624  005DEC  AE35               	btfss	(___flge@ff1+3)^0,7,c
 12625  005DEE  D009               	goto	i2l8857
 12626  005DF0  6C32               	negf	___flge@ff1^0,c
 12627  005DF2  1E33               	comf	(___flge@ff1+1)^0,f,c
 12628  005DF4  B0D8               	btfsc	status,0,c
 12629  005DF6  2A33               	incf	(___flge@ff1+1)^0,f,c
 12630  005DF8  1E34               	comf	(___flge@ff1+2)^0,f,c
 12631  005DFA  B0D8               	btfsc	status,0,c
 12632  005DFC  2A34               	incf	(___flge@ff1+2)^0,f,c
 12633  005DFE  0E80               	movlw	128
 12634  005E00  5635               	subfwb	(___flge@ff1+3)^0,f,c
 12635  005E02                     i2l8857:
 12636  005E02  AE39               	btfss	(___flge@ff2+3)^0,7,c
 12637  005E04  D009               	goto	i2l719
 12638  005E06  6C36               	negf	___flge@ff2^0,c
 12639  005E08  1E37               	comf	(___flge@ff2+1)^0,f,c
 12640  005E0A  B0D8               	btfsc	status,0,c
 12641  005E0C  2A37               	incf	(___flge@ff2+1)^0,f,c
 12642  005E0E  1E38               	comf	(___flge@ff2+2)^0,f,c
 12643  005E10  B0D8               	btfsc	status,0,c
 12644  005E12  2A38               	incf	(___flge@ff2+2)^0,f,c
 12645  005E14  0E80               	movlw	128
 12646  005E16  5639               	subfwb	(___flge@ff2+3)^0,f,c
 12647  005E18                     i2l719:
 12648  005E18  0E00               	movlw	0
 12649  005E1A  1A32               	xorwf	___flge@ff1^0,f,c
 12650  005E1C  0E00               	movlw	0
 12651  005E1E  1A33               	xorwf	(___flge@ff1+1)^0,f,c
 12652  005E20  0E00               	movlw	0
 12653  005E22  1A34               	xorwf	(___flge@ff1+2)^0,f,c
 12654  005E24  0E80               	movlw	128
 12655  005E26  1A35               	xorwf	(___flge@ff1+3)^0,f,c
 12656  005E28  0E00               	movlw	0
 12657  005E2A  1A36               	xorwf	___flge@ff2^0,f,c
 12658  005E2C  0E00               	movlw	0
 12659  005E2E  1A37               	xorwf	(___flge@ff2+1)^0,f,c
 12660  005E30  0E00               	movlw	0
 12661  005E32  1A38               	xorwf	(___flge@ff2+2)^0,f,c
 12662  005E34  0E80               	movlw	128
 12663  005E36  1A39               	xorwf	(___flge@ff2+3)^0,f,c
 12664  005E38  5036               	movf	___flge@ff2^0,w,c
 12665  005E3A  5C32               	subwf	___flge@ff1^0,w,c
 12666  005E3C  5037               	movf	(___flge@ff2+1)^0,w,c
 12667  005E3E  5833               	subwfb	(___flge@ff1+1)^0,w,c
 12668  005E40  5038               	movf	(___flge@ff2+2)^0,w,c
 12669  005E42  5834               	subwfb	(___flge@ff1+2)^0,w,c
 12670  005E44  5039               	movf	(___flge@ff2+3)^0,w,c
 12671  005E46  5835               	subwfb	(___flge@ff1+3)^0,w,c
 12672  005E48  B0D8               	btfsc	status,0,c
 12673  005E4A  D002               	goto	i2l8863
 12674  005E4C  90D8               	bcf	status,0,c
 12675  005E4E  0012               	return	
 12676  005E50                     i2l8863:
 12677  005E50  80D8               	bsf	status,0,c
 12678  005E52  0012               	return		;funcret
 12679  005E54                     __end_of___flge:
 12680                           	opt callstack 0
 12681                           
 12682 ;; *************** function _scalbnf *****************
 12683 ;; Defined at:
 12684 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\scalbnf.c"
 12685 ;; Parameters:    Size  Location     Type
 12686 ;;  x               4   41[COMRAM] float 
 12687 ;;  n               2   45[COMRAM] int 
 12688 ;; Auto vars:     Size  Location     Type
 12689 ;;  y               4   55[COMRAM] float 
 12690 ;;  u               4   51[COMRAM] struct .
 12691 ;; Return value:  Size  Location     Type
 12692 ;;                  4   41[COMRAM] float 
 12693 ;; Registers used:
 12694 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12695 ;; Tracked objects:
 12696 ;;		On entry : 0/0
 12697 ;;		On exit  : 0/0
 12698 ;;		Unchanged: 0/0
 12699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12700 ;;      Params:         6       0       0       0       0       0       0
 12701 ;;      Locals:         8       0       0       0       0       0       0
 12702 ;;      Temps:          4       0       0       0       0       0       0
 12703 ;;      Totals:        18       0       0       0       0       0       0
 12704 ;;Total ram usage:       18 bytes
 12705 ;; Hardware stack levels used:    1
 12706 ;; Hardware stack levels required when called:    1
 12707 ;; This function calls:
 12708 ;;		___flmul
 12709 ;; This function is called by:
 12710 ;;		_powf
 12711 ;; This function uses a non-reentrant model
 12712 ;;
 12713                           
 12714                           	psect	text47
 12715  005136                     __ptext47:
 12716                           	opt callstack 0
 12717  005136                     _scalbnf:
 12718                           	opt callstack 17
 12719                           
 12720                           ;incstack = 0
 12721  005136  C02A  F038         	movff	scalbnf@x,scalbnf@y
 12722  00513A  C02B  F039         	movff	scalbnf@x+1,scalbnf@y+1
 12723  00513E  C02C  F03A         	movff	scalbnf@x+2,scalbnf@y+2
 12724  005142  C02D  F03B         	movff	scalbnf@x+3,scalbnf@y+3
 12725  005146  BE2F               	btfsc	(scalbnf@n+1)^0,7,c
 12726  005148  D056               	goto	i2l9325
 12727  00514A  502F               	movf	(scalbnf@n+1)^0,w,c
 12728  00514C  E104               	bnz	i2u1199_40
 12729  00514E  0E80               	movlw	128
 12730  005150  5C2E               	subwf	scalbnf@n^0,w,c
 12731  005152  A0D8               	btfss	status,0,c
 12732  005154  D050               	goto	i2l9325
 12733  005156                     i2u1199_40:
 12734  005156  C038  F011         	movff	scalbnf@y,___flmul@b
 12735  00515A  C039  F012         	movff	scalbnf@y+1,___flmul@b+1
 12736  00515E  C03A  F013         	movff	scalbnf@y+2,___flmul@b+2
 12737  005162  C03B  F014         	movff	scalbnf@y+3,___flmul@b+3
 12738  005166  0E00               	movlw	0
 12739  005168  6E15               	movwf	___flmul@a^0,c
 12740  00516A  0E00               	movlw	0
 12741  00516C  6E16               	movwf	(___flmul@a+1)^0,c
 12742  00516E  0E00               	movlw	0
 12743  005170  6E17               	movwf	(___flmul@a+2)^0,c
 12744  005172  0E7F               	movlw	127
 12745  005174  6E18               	movwf	(___flmul@a+3)^0,c
 12746  005176  EC25  F023         	call	___flmul	;wreg free
 12747  00517A  C011  F038         	movff	?___flmul,scalbnf@y
 12748  00517E  C012  F039         	movff	?___flmul+1,scalbnf@y+1
 12749  005182  C013  F03A         	movff	?___flmul+2,scalbnf@y+2
 12750  005186  C014  F03B         	movff	?___flmul+3,scalbnf@y+3
 12751  00518A  0E81               	movlw	129
 12752  00518C  262E               	addwf	scalbnf@n^0,f,c
 12753  00518E  0EFF               	movlw	255
 12754  005190  222F               	addwfc	(scalbnf@n+1)^0,f,c
 12755  005192  BE2F               	btfsc	(scalbnf@n+1)^0,7,c
 12756  005194  D088               	goto	i2l9341
 12757  005196  502F               	movf	(scalbnf@n+1)^0,w,c
 12758  005198  E104               	bnz	i2u1200_40
 12759  00519A  0E80               	movlw	128
 12760  00519C  5C2E               	subwf	scalbnf@n^0,w,c
 12761  00519E  A0D8               	btfss	status,0,c
 12762  0051A0  D082               	goto	i2l9341
 12763  0051A2                     i2u1200_40:
 12764  0051A2  C038  F011         	movff	scalbnf@y,___flmul@b
 12765  0051A6  C039  F012         	movff	scalbnf@y+1,___flmul@b+1
 12766  0051AA  C03A  F013         	movff	scalbnf@y+2,___flmul@b+2
 12767  0051AE  C03B  F014         	movff	scalbnf@y+3,___flmul@b+3
 12768  0051B2  0E00               	movlw	0
 12769  0051B4  6E15               	movwf	___flmul@a^0,c
 12770  0051B6  0E00               	movlw	0
 12771  0051B8  6E16               	movwf	(___flmul@a+1)^0,c
 12772  0051BA  0E00               	movlw	0
 12773  0051BC  6E17               	movwf	(___flmul@a+2)^0,c
 12774  0051BE  0E7F               	movlw	127
 12775  0051C0  6E18               	movwf	(___flmul@a+3)^0,c
 12776  0051C2  EC25  F023         	call	___flmul	;wreg free
 12777  0051C6  C011  F038         	movff	?___flmul,scalbnf@y
 12778  0051CA  C012  F039         	movff	?___flmul+1,scalbnf@y+1
 12779  0051CE  C013  F03A         	movff	?___flmul+2,scalbnf@y+2
 12780  0051D2  C014  F03B         	movff	?___flmul+3,scalbnf@y+3
 12781  0051D6  0E81               	movlw	129
 12782  0051D8  262E               	addwf	scalbnf@n^0,f,c
 12783  0051DA  0EFF               	movlw	255
 12784  0051DC  222F               	addwfc	(scalbnf@n+1)^0,f,c
 12785  0051DE  BE2F               	btfsc	(scalbnf@n+1)^0,7,c
 12786  0051E0  D062               	goto	i2l9341
 12787  0051E2  502F               	movf	(scalbnf@n+1)^0,w,c
 12788  0051E4  E104               	bnz	i2u1201_40
 12789  0051E6  0E80               	movlw	128
 12790  0051E8  5C2E               	subwf	scalbnf@n^0,w,c
 12791  0051EA  A0D8               	btfss	status,0,c
 12792  0051EC  D05C               	goto	i2l9341
 12793  0051EE                     i2u1201_40:
 12794  0051EE  0E00               	movlw	0
 12795  0051F0  6E2F               	movwf	(scalbnf@n+1)^0,c
 12796  0051F2  0E7F               	movlw	127
 12797  0051F4  D057               	goto	L11
 12798  0051F6                     i2l9325:
 12799  0051F6  AE2F               	btfss	(scalbnf@n+1)^0,7,c
 12800  0051F8  D056               	goto	i2l9341
 12801  0051FA  0E82               	movlw	130
 12802  0051FC  5C2E               	subwf	scalbnf@n^0,w,c
 12803  0051FE  0EFF               	movlw	255
 12804  005200  582F               	subwfb	(scalbnf@n+1)^0,w,c
 12805  005202  B0D8               	btfsc	status,0,c
 12806  005204  D050               	goto	i2l9341
 12807  005206  C038  F011         	movff	scalbnf@y,___flmul@b
 12808  00520A  C039  F012         	movff	scalbnf@y+1,___flmul@b+1
 12809  00520E  C03A  F013         	movff	scalbnf@y+2,___flmul@b+2
 12810  005212  C03B  F014         	movff	scalbnf@y+3,___flmul@b+3
 12811  005216  0E00               	movlw	0
 12812  005218  6E15               	movwf	___flmul@a^0,c
 12813  00521A  0E00               	movlw	0
 12814  00521C  6E16               	movwf	(___flmul@a+1)^0,c
 12815  00521E  0E80               	movlw	128
 12816  005220  6E17               	movwf	(___flmul@a+2)^0,c
 12817  005222  0E0C               	movlw	12
 12818  005224  6E18               	movwf	(___flmul@a+3)^0,c
 12819  005226  EC25  F023         	call	___flmul	;wreg free
 12820  00522A  C011  F038         	movff	?___flmul,scalbnf@y
 12821  00522E  C012  F039         	movff	?___flmul+1,scalbnf@y+1
 12822  005232  C013  F03A         	movff	?___flmul+2,scalbnf@y+2
 12823  005236  C014  F03B         	movff	?___flmul+3,scalbnf@y+3
 12824  00523A  0E66               	movlw	102
 12825  00523C  262E               	addwf	scalbnf@n^0,f,c
 12826  00523E  0E00               	movlw	0
 12827  005240  222F               	addwfc	(scalbnf@n+1)^0,f,c
 12828  005242  AE2F               	btfss	(scalbnf@n+1)^0,7,c
 12829  005244  D030               	goto	i2l9341
 12830  005246  0E82               	movlw	130
 12831  005248  5C2E               	subwf	scalbnf@n^0,w,c
 12832  00524A  0EFF               	movlw	255
 12833  00524C  582F               	subwfb	(scalbnf@n+1)^0,w,c
 12834  00524E  B0D8               	btfsc	status,0,c
 12835  005250  D02A               	goto	i2l9341
 12836  005252  C038  F011         	movff	scalbnf@y,___flmul@b
 12837  005256  C039  F012         	movff	scalbnf@y+1,___flmul@b+1
 12838  00525A  C03A  F013         	movff	scalbnf@y+2,___flmul@b+2
 12839  00525E  C03B  F014         	movff	scalbnf@y+3,___flmul@b+3
 12840  005262  0E00               	movlw	0
 12841  005264  6E15               	movwf	___flmul@a^0,c
 12842  005266  0E00               	movlw	0
 12843  005268  6E16               	movwf	(___flmul@a+1)^0,c
 12844  00526A  0E80               	movlw	128
 12845  00526C  6E17               	movwf	(___flmul@a+2)^0,c
 12846  00526E  0E0C               	movlw	12
 12847  005270  6E18               	movwf	(___flmul@a+3)^0,c
 12848  005272  EC25  F023         	call	___flmul	;wreg free
 12849  005276  C011  F038         	movff	?___flmul,scalbnf@y
 12850  00527A  C012  F039         	movff	?___flmul+1,scalbnf@y+1
 12851  00527E  C013  F03A         	movff	?___flmul+2,scalbnf@y+2
 12852  005282  C014  F03B         	movff	?___flmul+3,scalbnf@y+3
 12853  005286  0E66               	movlw	102
 12854  005288  262E               	addwf	scalbnf@n^0,f,c
 12855  00528A  0E00               	movlw	0
 12856  00528C  222F               	addwfc	(scalbnf@n+1)^0,f,c
 12857  00528E  AE2F               	btfss	(scalbnf@n+1)^0,7,c
 12858  005290  D00A               	goto	i2l9341
 12859  005292  0E82               	movlw	130
 12860  005294  5C2E               	subwf	scalbnf@n^0,w,c
 12861  005296  0EFF               	movlw	255
 12862  005298  582F               	subwfb	(scalbnf@n+1)^0,w,c
 12863  00529A  B0D8               	btfsc	status,0,c
 12864  00529C  D004               	goto	i2l9341
 12865  00529E  0EFF               	movlw	255
 12866  0052A0  6E2F               	movwf	(scalbnf@n+1)^0,c
 12867  0052A2  0E82               	movlw	130
 12868  0052A4                     L11:
 12869  0052A4  6E2E               	movwf	scalbnf@n^0,c
 12870  0052A6                     i2l9341:
 12871  0052A6  0E7F               	movlw	127
 12872  0052A8  242E               	addwf	scalbnf@n^0,w,c
 12873  0052AA  6E30               	movwf	??_scalbnf^0,c
 12874  0052AC  0E00               	movlw	0
 12875  0052AE  202F               	addwfc	(scalbnf@n+1)^0,w,c
 12876  0052B0  6E31               	movwf	(??_scalbnf+1)^0,c
 12877  0052B2  6A32               	clrf	(??_scalbnf+2)^0,c
 12878  0052B4  6A33               	clrf	(??_scalbnf+3)^0,c
 12879  0052B6  0E17               	movlw	23
 12880  0052B8                     i2u1205_45:
 12881  0052B8  90D8               	bcf	status,0,c
 12882  0052BA  3630               	rlcf	??_scalbnf^0,f,c
 12883  0052BC  3631               	rlcf	(??_scalbnf+1)^0,f,c
 12884  0052BE  3632               	rlcf	(??_scalbnf+2)^0,f,c
 12885  0052C0  3633               	rlcf	(??_scalbnf+3)^0,f,c
 12886  0052C2  2EE8               	decfsz	wreg,f,c
 12887  0052C4  D7F9               	goto	i2u1205_45
 12888  0052C6  C030  F034         	movff	??_scalbnf,scalbnf@u
 12889  0052CA  C031  F035         	movff	??_scalbnf+1,scalbnf@u+1
 12890  0052CE  C032  F036         	movff	??_scalbnf+2,scalbnf@u+2
 12891  0052D2  C033  F037         	movff	??_scalbnf+3,scalbnf@u+3
 12892  0052D6  C034  F011         	movff	scalbnf@u,___flmul@b
 12893  0052DA  C035  F012         	movff	scalbnf@u+1,___flmul@b+1
 12894  0052DE  C036  F013         	movff	scalbnf@u+2,___flmul@b+2
 12895  0052E2  C037  F014         	movff	scalbnf@u+3,___flmul@b+3
 12896  0052E6  C038  F015         	movff	scalbnf@y,___flmul@a
 12897  0052EA  C039  F016         	movff	scalbnf@y+1,___flmul@a+1
 12898  0052EE  C03A  F017         	movff	scalbnf@y+2,___flmul@a+2
 12899  0052F2  C03B  F018         	movff	scalbnf@y+3,___flmul@a+3
 12900  0052F6  EC25  F023         	call	___flmul	;wreg free
 12901  0052FA  C011  F02A         	movff	?___flmul,scalbnf@x
 12902  0052FE  C012  F02B         	movff	?___flmul+1,scalbnf@x+1
 12903  005302  C013  F02C         	movff	?___flmul+2,scalbnf@x+2
 12904  005306  C014  F02D         	movff	?___flmul+3,scalbnf@x+3
 12905  00530A  C02A  F02A         	movff	scalbnf@x,?_scalbnf
 12906  00530E  C02B  F02B         	movff	scalbnf@x+1,?_scalbnf+1
 12907  005312  C02C  F02C         	movff	scalbnf@x+2,?_scalbnf+2
 12908  005316  C02D  F02D         	movff	scalbnf@x+3,?_scalbnf+3
 12909  00531A  0012               	return		;funcret
 12910  00531C                     __end_of_scalbnf:
 12911                           	opt callstack 0
 12912                           
 12913 ;; *************** function _fabsf *****************
 12914 ;; Defined at:
 12915 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fabsf.c"
 12916 ;; Parameters:    Size  Location     Type
 12917 ;;  x               4    0[COMRAM] float 
 12918 ;; Auto vars:     Size  Location     Type
 12919 ;;  u               4    4[COMRAM] struct .
 12920 ;; Return value:  Size  Location     Type
 12921 ;;                  4    0[COMRAM] float 
 12922 ;; Registers used:
 12923 ;;		status,2, status,0
 12924 ;; Tracked objects:
 12925 ;;		On entry : 0/0
 12926 ;;		On exit  : 0/0
 12927 ;;		Unchanged: 0/0
 12928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12929 ;;      Params:         4       0       0       0       0       0       0
 12930 ;;      Locals:         4       0       0       0       0       0       0
 12931 ;;      Temps:          0       0       0       0       0       0       0
 12932 ;;      Totals:         8       0       0       0       0       0       0
 12933 ;;Total ram usage:        8 bytes
 12934 ;; Hardware stack levels used:    1
 12935 ;; This function calls:
 12936 ;;		Nothing
 12937 ;; This function is called by:
 12938 ;;		_powf
 12939 ;; This function uses a non-reentrant model
 12940 ;;
 12941                           
 12942                           	psect	text48
 12943  006806                     __ptext48:
 12944                           	opt callstack 0
 12945  006806                     _fabsf:
 12946                           	opt callstack 18
 12947                           
 12948                           ;incstack = 0
 12949  006806  C200  F005         	movff	fabsf@F463,fabsf@u
 12950  00680A  C201  F006         	movff	fabsf@F463+1,fabsf@u+1
 12951  00680E  C202  F007         	movff	fabsf@F463+2,fabsf@u+2
 12952  006812  C203  F008         	movff	fabsf@F463+3,fabsf@u+3
 12953  006816  C001  F005         	movff	fabsf@x,fabsf@u
 12954  00681A  C002  F006         	movff	fabsf@x+1,fabsf@u+1
 12955  00681E  C003  F007         	movff	fabsf@x+2,fabsf@u+2
 12956  006822  C004  F008         	movff	fabsf@x+3,fabsf@u+3
 12957  006826  9E08               	bcf	(fabsf@u+3)^0,7,c
 12958  006828  C005  F001         	movff	fabsf@u,?_fabsf
 12959  00682C  C006  F002         	movff	fabsf@u+1,?_fabsf+1
 12960  006830  C007  F003         	movff	fabsf@u+2,?_fabsf+2
 12961  006834  C008  F004         	movff	fabsf@u+3,?_fabsf+3
 12962  006838  0012               	return		;funcret
 12963  00683A                     __end_of_fabsf:
 12964                           	opt callstack 0
 12965                           
 12966 ;; *************** function ___flneg *****************
 12967 ;; Defined at:
 12968 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;  f1              4    0[COMRAM] float 
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;		None
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  4    0[COMRAM] float 
 12975 ;; Registers used:
 12976 ;;		wreg, status,2, status,0
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12982 ;;      Params:         4       0       0       0       0       0       0
 12983 ;;      Locals:         0       0       0       0       0       0       0
 12984 ;;      Temps:          0       0       0       0       0       0       0
 12985 ;;      Totals:         4       0       0       0       0       0       0
 12986 ;;Total ram usage:        4 bytes
 12987 ;; Hardware stack levels used:    1
 12988 ;; This function calls:
 12989 ;;		Nothing
 12990 ;; This function is called by:
 12991 ;;		_efgtoa
 12992 ;;		_powf
 12993 ;; This function uses a non-reentrant model
 12994 ;;
 12995                           
 12996                           	psect	text49
 12997  0068FA                     __ptext49:
 12998                           	opt callstack 0
 12999  0068FA                     ___flneg:
 13000                           	opt callstack 18
 13001                           
 13002                           ;incstack = 0
 13003  0068FA  5001               	movf	___flneg@f1^0,w,c
 13004  0068FC  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13005  0068FE  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13006  006900  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13007  006902  B4D8               	btfsc	status,2,c
 13008  006904  D008               	goto	i2l9171
 13009  006906  0E00               	movlw	0
 13010  006908  1A01               	xorwf	___flneg@f1^0,f,c
 13011  00690A  0E00               	movlw	0
 13012  00690C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13013  00690E  0E00               	movlw	0
 13014  006910  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13015  006912  0E80               	movlw	128
 13016  006914  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13017  006916                     i2l9171:
 13018  006916  C001  F001         	movff	___flneg@f1,?___flneg
 13019  00691A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13020  00691E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13021  006922  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 13022  006926  0012               	return		;funcret
 13023  006928                     __end_of___flneg:
 13024                           	opt callstack 0
 13025                           
 13026 ;; *************** function _logf *****************
 13027 ;; Defined at:
 13028 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\logf.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;  x               4   74[COMRAM] float 
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;  ix              4   62[BANK0 ] unsigned long 
 13033 ;;  f               4   58[BANK0 ] float 
 13034 ;;  u               4   54[BANK0 ] struct .
 13035 ;;  w               4   46[BANK0 ] float 
 13036 ;;  z               4   42[BANK0 ] float 
 13037 ;;  s               4   38[BANK0 ] float 
 13038 ;;  dk              4   34[BANK0 ] float 
 13039 ;;  hfsq            4   30[BANK0 ] float 
 13040 ;;  t2              4    8[BANK0 ] float 
 13041 ;;  t1              4    4[BANK0 ] float 
 13042 ;;  R               4    0[BANK0 ] float 
 13043 ;;  k               2   28[BANK0 ] int 
 13044 ;; Return value:  Size  Location     Type
 13045 ;;                  4   74[COMRAM] float 
 13046 ;; Registers used:
 13047 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13048 ;; Tracked objects:
 13049 ;;		On entry : 0/0
 13050 ;;		On exit  : 0/0
 13051 ;;		Unchanged: 0/0
 13052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13053 ;;      Params:         4       0       0       0       0       0       0
 13054 ;;      Locals:         0      66       0       0       0       0       0
 13055 ;;      Temps:          6       0       0       0       0       0       0
 13056 ;;      Totals:        10      66       0       0       0       0       0
 13057 ;;Total ram usage:       76 bytes
 13058 ;; Hardware stack levels used:    1
 13059 ;; Hardware stack levels required when called:    2
 13060 ;; This function calls:
 13061 ;;		___fladd
 13062 ;;		___fldiv
 13063 ;;		___flmul
 13064 ;;		___flsub
 13065 ;;		___xxtofl
 13066 ;; This function is called by:
 13067 ;;		_MQGetPercentage
 13068 ;; This function uses a non-reentrant model
 13069 ;;
 13070                           
 13071                           	psect	text50
 13072  003710                     __ptext50:
 13073                           	opt callstack 0
 13074  003710                     _logf:
 13075                           	opt callstack 17
 13076                           
 13077                           ;incstack = 0
 13078  003710  C204  F0B6         	movff	logf@F469,logf@u
 13079  003714  C205  F0B7         	movff	logf@F469+1,logf@u+1
 13080  003718  C206  F0B8         	movff	logf@F469+2,logf@u+2
 13081  00371C  C207  F0B9         	movff	logf@F469+3,logf@u+3
 13082  003720  C04B  F0B6         	movff	logf@x,logf@u
 13083  003724  C04C  F0B7         	movff	logf@x+1,logf@u+1
 13084  003728  C04D  F0B8         	movff	logf@x+2,logf@u+2
 13085  00372C  C04E  F0B9         	movff	logf@x+3,logf@u+3
 13086  003730  C0B6  F0BE         	movff	logf@u,logf@ix
 13087  003734  C0B7  F0BF         	movff	logf@u+1,logf@ix+1
 13088  003738  C0B8  F0C0         	movff	logf@u+2,logf@ix+2
 13089  00373C  C0B9  F0C1         	movff	logf@u+3,logf@ix+3
 13090  003740  0E00               	movlw	0
 13091  003742  0100               	movlb	0	; () banked
 13092  003744  6F9D               	movwf	(logf@k+1)& (0+255),b
 13093  003746  0E00               	movlw	0
 13094  003748  6F9C               	movwf	logf@k& (0+255),b
 13095                           
 13096                           ; BSR set to: 0
 13097  00374A  51C1               	movf	(logf@ix+3)& (0+255),w,b
 13098  00374C  E104               	bnz	i2u1212_40
 13099  00374E  0E80               	movlw	128
 13100  003750  5DC0               	subwf	(logf@ix+2)& (0+255),w,b
 13101  003752  A0D8               	btfss	status,0,c
 13102  003754  D017               	goto	i2u1214_40
 13103  003756                     i2u1212_40:
 13104                           
 13105                           ; BSR set to: 0
 13106  003756  C0BE  F04F         	movff	logf@ix,??_logf
 13107  00375A  C0BF  F050         	movff	logf@ix+1,??_logf+1
 13108  00375E  C0C0  F051         	movff	logf@ix+2,??_logf+2
 13109  003762  C0C1  F052         	movff	logf@ix+3,??_logf+3
 13110  003766  0E20               	movlw	32
 13111  003768  D005               	goto	i2u1213_40
 13112  00376A                     i2u1213_45:
 13113  00376A  90D8               	bcf	status,0,c
 13114  00376C  3252               	rrcf	(??_logf+3)^0,f,c
 13115  00376E  3251               	rrcf	(??_logf+2)^0,f,c
 13116  003770  3250               	rrcf	(??_logf+1)^0,f,c
 13117  003772  324F               	rrcf	??_logf^0,f,c
 13118  003774                     i2u1213_40:
 13119  003774  2EE8               	decfsz	wreg,f,c
 13120  003776  D7F9               	goto	i2u1213_45
 13121  003778  504F               	movf	??_logf^0,w,c
 13122  00377A  1050               	iorwf	(??_logf+1)^0,w,c
 13123  00377C  1051               	iorwf	(??_logf+2)^0,w,c
 13124  00377E  1052               	iorwf	(??_logf+3)^0,w,c
 13125  003780  B4D8               	btfsc	status,2,c
 13126  003782  D0AF               	goto	i2l9413
 13127  003784                     i2u1214_40:
 13128                           
 13129                           ; BSR set to: 0
 13130  003784  90D8               	bcf	status,0,c
 13131  003786  35BE               	rlcf	logf@ix& (0+255),w,b
 13132  003788  6E4F               	movwf	??_logf^0,c
 13133  00378A  35BF               	rlcf	(logf@ix+1)& (0+255),w,b
 13134  00378C  6E50               	movwf	(??_logf+1)^0,c
 13135  00378E  35C0               	rlcf	(logf@ix+2)& (0+255),w,b
 13136  003790  6E51               	movwf	(??_logf+2)^0,c
 13137  003792  35C1               	rlcf	(logf@ix+3)& (0+255),w,b
 13138  003794  6E52               	movwf	(??_logf+3)^0,c
 13139  003796  504F               	movf	??_logf^0,w,c
 13140  003798  1050               	iorwf	(??_logf+1)^0,w,c
 13141  00379A  1051               	iorwf	(??_logf+2)^0,w,c
 13142  00379C  1052               	iorwf	(??_logf+3)^0,w,c
 13143  00379E  A4D8               	btfss	status,2,c
 13144  0037A0  D02D               	goto	i2l9399
 13145                           
 13146                           ; BSR set to: 0
 13147  0037A2  0E00               	movlw	0
 13148  0037A4  6E32               	movwf	___fldiv@b^0,c
 13149  0037A6  0E00               	movlw	0
 13150  0037A8  6E33               	movwf	(___fldiv@b+1)^0,c
 13151  0037AA  0E80               	movlw	128
 13152  0037AC  6E34               	movwf	(___fldiv@b+2)^0,c
 13153  0037AE  0EBF               	movlw	191
 13154  0037B0  6E35               	movwf	(___fldiv@b+3)^0,c
 13155  0037B2  C04B  F015         	movff	logf@x,___flmul@a
 13156  0037B6  C04C  F016         	movff	logf@x+1,___flmul@a+1
 13157  0037BA  C04D  F017         	movff	logf@x+2,___flmul@a+2
 13158  0037BE  C04E  F018         	movff	logf@x+3,___flmul@a+3
 13159  0037C2  C04B  F011         	movff	logf@x,___flmul@b
 13160  0037C6  C04C  F012         	movff	logf@x+1,___flmul@b+1
 13161  0037CA  C04D  F013         	movff	logf@x+2,___flmul@b+2
 13162  0037CE  C04E  F014         	movff	logf@x+3,___flmul@b+3
 13163  0037D2  EC25  F023         	call	___flmul	;wreg free
 13164  0037D6  C011  F036         	movff	?___flmul,___fldiv@a
 13165  0037DA  C012  F037         	movff	?___flmul+1,___fldiv@a+1
 13166  0037DE  C013  F038         	movff	?___flmul+2,___fldiv@a+2
 13167  0037E2  C014  F039         	movff	?___flmul+3,___fldiv@a+3
 13168  0037E6  EC54  F026         	call	___fldiv	;wreg free
 13169  0037EA  C032  F04B         	movff	?___fldiv,?_logf
 13170  0037EE  C033  F04C         	movff	?___fldiv+1,?_logf+1
 13171  0037F2  C034  F04D         	movff	?___fldiv+2,?_logf+2
 13172  0037F6  C035  F04E         	movff	?___fldiv+3,?_logf+3
 13173  0037FA  0012               	return	
 13174  0037FC                     i2l9399:
 13175                           
 13176                           ; BSR set to: 0
 13177  0037FC  C0BE  F04F         	movff	logf@ix,??_logf
 13178  003800  C0BF  F050         	movff	logf@ix+1,??_logf+1
 13179  003804  C0C0  F051         	movff	logf@ix+2,??_logf+2
 13180  003808  C0C1  F052         	movff	logf@ix+3,??_logf+3
 13181  00380C  0E20               	movlw	32
 13182  00380E  D005               	goto	i2u1216_40
 13183  003810                     i2u1216_45:
 13184  003810  90D8               	bcf	status,0,c
 13185  003812  3252               	rrcf	(??_logf+3)^0,f,c
 13186  003814  3251               	rrcf	(??_logf+2)^0,f,c
 13187  003816  3250               	rrcf	(??_logf+1)^0,f,c
 13188  003818  324F               	rrcf	??_logf^0,f,c
 13189  00381A                     i2u1216_40:
 13190  00381A  2EE8               	decfsz	wreg,f,c
 13191  00381C  D7F9               	goto	i2u1216_45
 13192  00381E  504F               	movf	??_logf^0,w,c
 13193  003820  1050               	iorwf	(??_logf+1)^0,w,c
 13194  003822  1051               	iorwf	(??_logf+2)^0,w,c
 13195  003824  1052               	iorwf	(??_logf+3)^0,w,c
 13196  003826  B4D8               	btfsc	status,2,c
 13197  003828  D02D               	goto	i2l9405
 13198                           
 13199                           ; BSR set to: 0
 13200  00382A  C04B  F02E         	movff	logf@x,___flsub@a
 13201  00382E  C04C  F02F         	movff	logf@x+1,___flsub@a+1
 13202  003832  C04D  F030         	movff	logf@x+2,___flsub@a+2
 13203  003836  C04E  F031         	movff	logf@x+3,___flsub@a+3
 13204  00383A  C04B  F02A         	movff	logf@x,___flsub@b
 13205  00383E  C04C  F02B         	movff	logf@x+1,___flsub@b+1
 13206  003842  C04D  F02C         	movff	logf@x+2,___flsub@b+2
 13207  003846  C04E  F02D         	movff	logf@x+3,___flsub@b+3
 13208  00384A  EC68  F033         	call	___flsub	;wreg free
 13209  00384E  C02A  F032         	movff	?___flsub,___fldiv@b
 13210  003852  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 13211  003856  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 13212  00385A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 13213  00385E  0E00               	movlw	0
 13214  003860  6E36               	movwf	___fldiv@a^0,c
 13215  003862  0E00               	movlw	0
 13216  003864  6E37               	movwf	(___fldiv@a+1)^0,c
 13217  003866  0E00               	movlw	0
 13218  003868  6E38               	movwf	(___fldiv@a+2)^0,c
 13219  00386A  0E00               	movlw	0
 13220  00386C  6E39               	movwf	(___fldiv@a+3)^0,c
 13221  00386E  EC54  F026         	call	___fldiv	;wreg free
 13222  003872  C032  F04B         	movff	?___fldiv,?_logf
 13223  003876  C033  F04C         	movff	?___fldiv+1,?_logf+1
 13224  00387A  C034  F04D         	movff	?___fldiv+2,?_logf+2
 13225  00387E  C035  F04E         	movff	?___fldiv+3,?_logf+3
 13226  003882  0012               	return	
 13227  003884                     i2l9405:
 13228                           
 13229                           ; BSR set to: 0
 13230  003884  0EE7               	movlw	231
 13231  003886  279C               	addwf	logf@k& (0+255),f,b
 13232  003888  0EFF               	movlw	255
 13233  00388A  239D               	addwfc	(logf@k+1)& (0+255),f,b
 13234                           
 13235                           ; BSR set to: 0
 13236  00388C  C04B  F011         	movff	logf@x,___flmul@b
 13237  003890  C04C  F012         	movff	logf@x+1,___flmul@b+1
 13238  003894  C04D  F013         	movff	logf@x+2,___flmul@b+2
 13239  003898  C04E  F014         	movff	logf@x+3,___flmul@b+3
 13240  00389C  0E00               	movlw	0
 13241  00389E  6E15               	movwf	___flmul@a^0,c
 13242  0038A0  0E00               	movlw	0
 13243  0038A2  6E16               	movwf	(___flmul@a+1)^0,c
 13244  0038A4  0E00               	movlw	0
 13245  0038A6  6E17               	movwf	(___flmul@a+2)^0,c
 13246  0038A8  0E4C               	movlw	76
 13247  0038AA  6E18               	movwf	(___flmul@a+3)^0,c
 13248  0038AC  EC25  F023         	call	___flmul	;wreg free
 13249  0038B0  C011  F04B         	movff	?___flmul,logf@x
 13250  0038B4  C012  F04C         	movff	?___flmul+1,logf@x+1
 13251  0038B8  C013  F04D         	movff	?___flmul+2,logf@x+2
 13252  0038BC  C014  F04E         	movff	?___flmul+3,logf@x+3
 13253  0038C0  C04B  F0B6         	movff	logf@x,logf@u
 13254  0038C4  C04C  F0B7         	movff	logf@x+1,logf@u+1
 13255  0038C8  C04D  F0B8         	movff	logf@x+2,logf@u+2
 13256  0038CC  C04E  F0B9         	movff	logf@x+3,logf@u+3
 13257  0038D0  C0B6  F0BE         	movff	logf@u,logf@ix
 13258  0038D4  C0B7  F0BF         	movff	logf@u+1,logf@ix+1
 13259  0038D8  C0B8  F0C0         	movff	logf@u+2,logf@ix+2
 13260  0038DC  C0B9  F0C1         	movff	logf@u+3,logf@ix+3
 13261  0038E0  D021               	goto	i2l9425
 13262  0038E2                     i2l9413:
 13263                           
 13264                           ; BSR set to: 0
 13265  0038E2  0E80               	movlw	128
 13266  0038E4  5DC0               	subwf	(logf@ix+2)& (0+255),w,b
 13267  0038E6  0E7F               	movlw	127
 13268  0038E8  59C1               	subwfb	(logf@ix+3)& (0+255),w,b
 13269  0038EA  A0D8               	btfss	status,0,c
 13270  0038EC  D009               	goto	i2l9419
 13271                           
 13272                           ; BSR set to: 0
 13273  0038EE  C04B  F04B         	movff	logf@x,?_logf
 13274  0038F2  C04C  F04C         	movff	logf@x+1,?_logf+1
 13275  0038F6  C04D  F04D         	movff	logf@x+2,?_logf+2
 13276  0038FA  C04E  F04E         	movff	logf@x+3,?_logf+3
 13277  0038FE  0012               	return	
 13278  003900                     i2l9419:
 13279                           
 13280                           ; BSR set to: 0
 13281  003900  0E80               	movlw	128
 13282  003902  19C0               	xorwf	(logf@ix+2)& (0+255),w,b
 13283  003904  E10F               	bnz	i2l9425
 13284  003906  0E3F               	movlw	63
 13285  003908  19C1               	xorwf	(logf@ix+3)& (0+255),w,b
 13286  00390A  11BE               	iorwf	logf@ix& (0+255),w,b
 13287  00390C  11BF               	iorwf	(logf@ix+1)& (0+255),w,b
 13288  00390E  A4D8               	btfss	status,2,c
 13289  003910  D009               	goto	i2l9425
 13290                           
 13291                           ; BSR set to: 0
 13292  003912  0E00               	movlw	0
 13293  003914  6E4B               	movwf	?_logf^0,c
 13294  003916  0E00               	movlw	0
 13295  003918  6E4C               	movwf	(?_logf+1)^0,c
 13296  00391A  0E00               	movlw	0
 13297  00391C  6E4D               	movwf	(?_logf+2)^0,c
 13298  00391E  0E00               	movlw	0
 13299  003920  6E4E               	movwf	(?_logf+3)^0,c
 13300  003922  0012               	return	
 13301  003924                     i2l9425:
 13302  003924  0E0D               	movlw	13
 13303  003926  0100               	movlb	0	; () banked
 13304  003928  27BE               	addwf	logf@ix& (0+255),f,b
 13305  00392A  0EFB               	movlw	251
 13306  00392C  23BF               	addwfc	(logf@ix+1)& (0+255),f,b
 13307  00392E  0E4A               	movlw	74
 13308  003930  23C0               	addwfc	(logf@ix+2)& (0+255),f,b
 13309  003932  0E00               	movlw	0
 13310  003934  23C1               	addwfc	(logf@ix+3)& (0+255),f,b
 13311  003936  0E81               	movlw	129
 13312  003938  6E4F               	movwf	??_logf^0,c
 13313  00393A  0EFF               	movlw	255
 13314  00393C  6E50               	movwf	(??_logf+1)^0,c
 13315  00393E  C0BE  F051         	movff	logf@ix,??_logf+2
 13316  003942  C0BF  F052         	movff	logf@ix+1,??_logf+3
 13317  003946  C0C0  F053         	movff	logf@ix+2,??_logf+4
 13318  00394A  C0C1  F054         	movff	logf@ix+3,??_logf+5
 13319  00394E  0E18               	movlw	24
 13320  003950  D005               	goto	i2u1220_40
 13321  003952                     i2u1220_45:
 13322  003952  90D8               	bcf	status,0,c
 13323  003954  3254               	rrcf	(??_logf+5)^0,f,c
 13324  003956  3253               	rrcf	(??_logf+4)^0,f,c
 13325  003958  3252               	rrcf	(??_logf+3)^0,f,c
 13326  00395A  3251               	rrcf	(??_logf+2)^0,f,c
 13327  00395C                     i2u1220_40:
 13328  00395C  2EE8               	decfsz	wreg,f,c
 13329  00395E  D7F9               	goto	i2u1220_45
 13330  003960  504F               	movf	??_logf^0,w,c
 13331  003962  2651               	addwf	(??_logf+2)^0,f,c
 13332  003964  5050               	movf	(??_logf+1)^0,w,c
 13333  003966  2252               	addwfc	(??_logf+3)^0,f,c
 13334  003968  5051               	movf	(??_logf+2)^0,w,c
 13335  00396A  279C               	addwf	logf@k& (0+255),f,b
 13336  00396C  5052               	movf	(??_logf+3)^0,w,c
 13337  00396E  239D               	addwfc	(logf@k+1)& (0+255),f,b
 13338  003970  0EFF               	movlw	255
 13339  003972  15BE               	andwf	logf@ix& (0+255),w,b
 13340  003974  6E4F               	movwf	??_logf^0,c
 13341  003976  0EFF               	movlw	255
 13342  003978  15BF               	andwf	(logf@ix+1)& (0+255),w,b
 13343  00397A  6E50               	movwf	(??_logf+1)^0,c
 13344  00397C  0E7F               	movlw	127
 13345  00397E  15C0               	andwf	(logf@ix+2)& (0+255),w,b
 13346  003980  6E51               	movwf	(??_logf+2)^0,c
 13347  003982  0E00               	movlw	0
 13348  003984  15C1               	andwf	(logf@ix+3)& (0+255),w,b
 13349  003986  6E52               	movwf	(??_logf+3)^0,c
 13350  003988  0EF3               	movlw	243
 13351  00398A  244F               	addwf	??_logf^0,w,c
 13352  00398C  6FBE               	movwf	logf@ix& (0+255),b
 13353  00398E  0E04               	movlw	4
 13354  003990  2050               	addwfc	(??_logf+1)^0,w,c
 13355  003992  6FBF               	movwf	(logf@ix+1)& (0+255),b
 13356  003994  0E35               	movlw	53
 13357  003996  2051               	addwfc	(??_logf+2)^0,w,c
 13358  003998  6FC0               	movwf	(logf@ix+2)& (0+255),b
 13359  00399A  0E3F               	movlw	63
 13360  00399C  2052               	addwfc	(??_logf+3)^0,w,c
 13361  00399E  6FC1               	movwf	(logf@ix+3)& (0+255),b
 13362                           
 13363                           ; BSR set to: 0
 13364  0039A0  C0BE  F0B6         	movff	logf@ix,logf@u
 13365  0039A4  C0BF  F0B7         	movff	logf@ix+1,logf@u+1
 13366  0039A8  C0C0  F0B8         	movff	logf@ix+2,logf@u+2
 13367  0039AC  C0C1  F0B9         	movff	logf@ix+3,logf@u+3
 13368                           
 13369                           ; BSR set to: 0
 13370  0039B0  C0B6  F04B         	movff	logf@u,logf@x
 13371  0039B4  C0B7  F04C         	movff	logf@u+1,logf@x+1
 13372  0039B8  C0B8  F04D         	movff	logf@u+2,logf@x+2
 13373  0039BC  C0B9  F04E         	movff	logf@u+3,logf@x+3
 13374                           
 13375                           ; BSR set to: 0
 13376  0039C0  C04B  F001         	movff	logf@x,___fladd@b
 13377  0039C4  C04C  F002         	movff	logf@x+1,___fladd@b+1
 13378  0039C8  C04D  F003         	movff	logf@x+2,___fladd@b+2
 13379  0039CC  C04E  F004         	movff	logf@x+3,___fladd@b+3
 13380  0039D0  0E00               	movlw	0
 13381  0039D2  6E05               	movwf	___fladd@a^0,c
 13382  0039D4  0E00               	movlw	0
 13383  0039D6  6E06               	movwf	(___fladd@a+1)^0,c
 13384  0039D8  0E80               	movlw	128
 13385  0039DA  6E07               	movwf	(___fladd@a+2)^0,c
 13386  0039DC  0EBF               	movlw	191
 13387  0039DE  6E08               	movwf	(___fladd@a+3)^0,c
 13388  0039E0  ECCE  F024         	call	___fladd	;wreg free
 13389  0039E4  C001  F0BA         	movff	?___fladd,logf@f
 13390  0039E8  C002  F0BB         	movff	?___fladd+1,logf@f+1
 13391  0039EC  C003  F0BC         	movff	?___fladd+2,logf@f+2
 13392  0039F0  C004  F0BD         	movff	?___fladd+3,logf@f+3
 13393  0039F4  C0BA  F032         	movff	logf@f,___fldiv@b
 13394  0039F8  C0BB  F033         	movff	logf@f+1,___fldiv@b+1
 13395  0039FC  C0BC  F034         	movff	logf@f+2,___fldiv@b+2
 13396  003A00  C0BD  F035         	movff	logf@f+3,___fldiv@b+3
 13397  003A04  0E00               	movlw	0
 13398  003A06  6E05               	movwf	___fladd@a^0,c
 13399  003A08  0E00               	movlw	0
 13400  003A0A  6E06               	movwf	(___fladd@a+1)^0,c
 13401  003A0C  0E00               	movlw	0
 13402  003A0E  6E07               	movwf	(___fladd@a+2)^0,c
 13403  003A10  0E40               	movlw	64
 13404  003A12  6E08               	movwf	(___fladd@a+3)^0,c
 13405  003A14  C0BA  F001         	movff	logf@f,___fladd@b
 13406  003A18  C0BB  F002         	movff	logf@f+1,___fladd@b+1
 13407  003A1C  C0BC  F003         	movff	logf@f+2,___fladd@b+2
 13408  003A20  C0BD  F004         	movff	logf@f+3,___fladd@b+3
 13409  003A24  ECCE  F024         	call	___fladd	;wreg free
 13410  003A28  C001  F036         	movff	?___fladd,___fldiv@a
 13411  003A2C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
 13412  003A30  C003  F038         	movff	?___fladd+2,___fldiv@a+2
 13413  003A34  C004  F039         	movff	?___fladd+3,___fldiv@a+3
 13414  003A38  EC54  F026         	call	___fldiv	;wreg free
 13415  003A3C  C032  F0A6         	movff	?___fldiv,logf@s
 13416  003A40  C033  F0A7         	movff	?___fldiv+1,logf@s+1
 13417  003A44  C034  F0A8         	movff	?___fldiv+2,logf@s+2
 13418  003A48  C035  F0A9         	movff	?___fldiv+3,logf@s+3
 13419  003A4C  C0A6  F011         	movff	logf@s,___flmul@b
 13420  003A50  C0A7  F012         	movff	logf@s+1,___flmul@b+1
 13421  003A54  C0A8  F013         	movff	logf@s+2,___flmul@b+2
 13422  003A58  C0A9  F014         	movff	logf@s+3,___flmul@b+3
 13423  003A5C  C0A6  F015         	movff	logf@s,___flmul@a
 13424  003A60  C0A7  F016         	movff	logf@s+1,___flmul@a+1
 13425  003A64  C0A8  F017         	movff	logf@s+2,___flmul@a+2
 13426  003A68  C0A9  F018         	movff	logf@s+3,___flmul@a+3
 13427  003A6C  EC25  F023         	call	___flmul	;wreg free
 13428  003A70  C011  F0AA         	movff	?___flmul,logf@z
 13429  003A74  C012  F0AB         	movff	?___flmul+1,logf@z+1
 13430  003A78  C013  F0AC         	movff	?___flmul+2,logf@z+2
 13431  003A7C  C014  F0AD         	movff	?___flmul+3,logf@z+3
 13432  003A80  C0AA  F011         	movff	logf@z,___flmul@b
 13433  003A84  C0AB  F012         	movff	logf@z+1,___flmul@b+1
 13434  003A88  C0AC  F013         	movff	logf@z+2,___flmul@b+2
 13435  003A8C  C0AD  F014         	movff	logf@z+3,___flmul@b+3
 13436  003A90  C0AA  F015         	movff	logf@z,___flmul@a
 13437  003A94  C0AB  F016         	movff	logf@z+1,___flmul@a+1
 13438  003A98  C0AC  F017         	movff	logf@z+2,___flmul@a+2
 13439  003A9C  C0AD  F018         	movff	logf@z+3,___flmul@a+3
 13440  003AA0  EC25  F023         	call	___flmul	;wreg free
 13441  003AA4  C011  F0AE         	movff	?___flmul,logf@w
 13442  003AA8  C012  F0AF         	movff	?___flmul+1,logf@w+1
 13443  003AAC  C013  F0B0         	movff	?___flmul+2,logf@w+2
 13444  003AB0  C014  F0B1         	movff	?___flmul+3,logf@w+3
 13445  003AB4  0E13               	movlw	19
 13446  003AB6  6E05               	movwf	___fladd@a^0,c
 13447  003AB8  0ECE               	movlw	206
 13448  003ABA  6E06               	movwf	(___fladd@a+1)^0,c
 13449  003ABC  0ECC               	movlw	204
 13450  003ABE  6E07               	movwf	(___fladd@a+2)^0,c
 13451  003AC0  0E3E               	movlw	62
 13452  003AC2  6E08               	movwf	(___fladd@a+3)^0,c
 13453  003AC4  0E26               	movlw	38
 13454  003AC6  6E15               	movwf	___flmul@a^0,c
 13455  003AC8  0E9E               	movlw	158
 13456  003ACA  6E16               	movwf	(___flmul@a+1)^0,c
 13457  003ACC  0E78               	movlw	120
 13458  003ACE  6E17               	movwf	(___flmul@a+2)^0,c
 13459  003AD0  0E3E               	movlw	62
 13460  003AD2  6E18               	movwf	(___flmul@a+3)^0,c
 13461  003AD4  C0AE  F011         	movff	logf@w,___flmul@b
 13462  003AD8  C0AF  F012         	movff	logf@w+1,___flmul@b+1
 13463  003ADC  C0B0  F013         	movff	logf@w+2,___flmul@b+2
 13464  003AE0  C0B1  F014         	movff	logf@w+3,___flmul@b+3
 13465  003AE4  EC25  F023         	call	___flmul	;wreg free
 13466  003AE8  C011  F001         	movff	?___flmul,___fladd@b
 13467  003AEC  C012  F002         	movff	?___flmul+1,___fladd@b+1
 13468  003AF0  C013  F003         	movff	?___flmul+2,___fladd@b+2
 13469  003AF4  C014  F004         	movff	?___flmul+3,___fladd@b+3
 13470  003AF8  ECCE  F024         	call	___fladd	;wreg free
 13471  003AFC  C001  F0B2         	movff	?___fladd,_logf$2033
 13472  003B00  C002  F0B3         	movff	?___fladd+1,_logf$2033+1
 13473  003B04  C003  F0B4         	movff	?___fladd+2,_logf$2033+2
 13474  003B08  C004  F0B5         	movff	?___fladd+3,_logf$2033+3
 13475  003B0C  C0B2  F011         	movff	_logf$2033,___flmul@b
 13476  003B10  C0B3  F012         	movff	_logf$2033+1,___flmul@b+1
 13477  003B14  C0B4  F013         	movff	_logf$2033+2,___flmul@b+2
 13478  003B18  C0B5  F014         	movff	_logf$2033+3,___flmul@b+3
 13479  003B1C  C0AE  F015         	movff	logf@w,___flmul@a
 13480  003B20  C0AF  F016         	movff	logf@w+1,___flmul@a+1
 13481  003B24  C0B0  F017         	movff	logf@w+2,___flmul@a+2
 13482  003B28  C0B1  F018         	movff	logf@w+3,___flmul@a+3
 13483  003B2C  EC25  F023         	call	___flmul	;wreg free
 13484  003B30  C011  F084         	movff	?___flmul,logf@t1
 13485  003B34  C012  F085         	movff	?___flmul+1,logf@t1+1
 13486  003B38  C013  F086         	movff	?___flmul+2,logf@t1+2
 13487  003B3C  C014  F087         	movff	?___flmul+3,logf@t1+3
 13488  003B40  0EAA               	movlw	170
 13489  003B42  6E05               	movwf	___fladd@a^0,c
 13490  003B44  0EAA               	movlw	170
 13491  003B46  6E06               	movwf	(___fladd@a+1)^0,c
 13492  003B48  0E2A               	movlw	42
 13493  003B4A  6E07               	movwf	(___fladd@a+2)^0,c
 13494  003B4C  0E3F               	movlw	63
 13495  003B4E  6E08               	movwf	(___fladd@a+3)^0,c
 13496  003B50  0EEE               	movlw	238
 13497  003B52  6E15               	movwf	___flmul@a^0,c
 13498  003B54  0EE9               	movlw	233
 13499  003B56  6E16               	movwf	(___flmul@a+1)^0,c
 13500  003B58  0E91               	movlw	145
 13501  003B5A  6E17               	movwf	(___flmul@a+2)^0,c
 13502  003B5C  0E3E               	movlw	62
 13503  003B5E  6E18               	movwf	(___flmul@a+3)^0,c
 13504  003B60  C0AE  F011         	movff	logf@w,___flmul@b
 13505  003B64  C0AF  F012         	movff	logf@w+1,___flmul@b+1
 13506  003B68  C0B0  F013         	movff	logf@w+2,___flmul@b+2
 13507  003B6C  C0B1  F014         	movff	logf@w+3,___flmul@b+3
 13508  003B70  EC25  F023         	call	___flmul	;wreg free
 13509  003B74  C011  F001         	movff	?___flmul,___fladd@b
 13510  003B78  C012  F002         	movff	?___flmul+1,___fladd@b+1
 13511  003B7C  C013  F003         	movff	?___flmul+2,___fladd@b+2
 13512  003B80  C014  F004         	movff	?___flmul+3,___fladd@b+3
 13513  003B84  ECCE  F024         	call	___fladd	;wreg free
 13514  003B88  C001  F0B2         	movff	?___fladd,_logf$2033
 13515  003B8C  C002  F0B3         	movff	?___fladd+1,_logf$2033+1
 13516  003B90  C003  F0B4         	movff	?___fladd+2,_logf$2033+2
 13517  003B94  C004  F0B5         	movff	?___fladd+3,_logf$2033+3
 13518  003B98  C0B2  F011         	movff	_logf$2033,___flmul@b
 13519  003B9C  C0B3  F012         	movff	_logf$2033+1,___flmul@b+1
 13520  003BA0  C0B4  F013         	movff	_logf$2033+2,___flmul@b+2
 13521  003BA4  C0B5  F014         	movff	_logf$2033+3,___flmul@b+3
 13522  003BA8  C0AA  F015         	movff	logf@z,___flmul@a
 13523  003BAC  C0AB  F016         	movff	logf@z+1,___flmul@a+1
 13524  003BB0  C0AC  F017         	movff	logf@z+2,___flmul@a+2
 13525  003BB4  C0AD  F018         	movff	logf@z+3,___flmul@a+3
 13526  003BB8  EC25  F023         	call	___flmul	;wreg free
 13527  003BBC  C011  F088         	movff	?___flmul,logf@t2
 13528  003BC0  C012  F089         	movff	?___flmul+1,logf@t2+1
 13529  003BC4  C013  F08A         	movff	?___flmul+2,logf@t2+2
 13530  003BC8  C014  F08B         	movff	?___flmul+3,logf@t2+3
 13531  003BCC  C088  F001         	movff	logf@t2,___fladd@b
 13532  003BD0  C089  F002         	movff	logf@t2+1,___fladd@b+1
 13533  003BD4  C08A  F003         	movff	logf@t2+2,___fladd@b+2
 13534  003BD8  C08B  F004         	movff	logf@t2+3,___fladd@b+3
 13535  003BDC  C084  F005         	movff	logf@t1,___fladd@a
 13536  003BE0  C085  F006         	movff	logf@t1+1,___fladd@a+1
 13537  003BE4  C086  F007         	movff	logf@t1+2,___fladd@a+2
 13538  003BE8  C087  F008         	movff	logf@t1+3,___fladd@a+3
 13539  003BEC  ECCE  F024         	call	___fladd	;wreg free
 13540  003BF0  C001  F080         	movff	?___fladd,logf@R
 13541  003BF4  C002  F081         	movff	?___fladd+1,logf@R+1
 13542  003BF8  C003  F082         	movff	?___fladd+2,logf@R+2
 13543  003BFC  C004  F083         	movff	?___fladd+3,logf@R+3
 13544  003C00  0E00               	movlw	0
 13545  003C02  6E15               	movwf	___flmul@a^0,c
 13546  003C04  0E00               	movlw	0
 13547  003C06  6E16               	movwf	(___flmul@a+1)^0,c
 13548  003C08  0E00               	movlw	0
 13549  003C0A  6E17               	movwf	(___flmul@a+2)^0,c
 13550  003C0C  0E3F               	movlw	63
 13551  003C0E  6E18               	movwf	(___flmul@a+3)^0,c
 13552  003C10  C0BA  F011         	movff	logf@f,___flmul@b
 13553  003C14  C0BB  F012         	movff	logf@f+1,___flmul@b+1
 13554  003C18  C0BC  F013         	movff	logf@f+2,___flmul@b+2
 13555  003C1C  C0BD  F014         	movff	logf@f+3,___flmul@b+3
 13556  003C20  EC25  F023         	call	___flmul	;wreg free
 13557  003C24  C011  F0B2         	movff	?___flmul,_logf$2033
 13558  003C28  C012  F0B3         	movff	?___flmul+1,_logf$2033+1
 13559  003C2C  C013  F0B4         	movff	?___flmul+2,_logf$2033+2
 13560  003C30  C014  F0B5         	movff	?___flmul+3,_logf$2033+3
 13561  003C34  C0B2  F011         	movff	_logf$2033,___flmul@b
 13562  003C38  C0B3  F012         	movff	_logf$2033+1,___flmul@b+1
 13563  003C3C  C0B4  F013         	movff	_logf$2033+2,___flmul@b+2
 13564  003C40  C0B5  F014         	movff	_logf$2033+3,___flmul@b+3
 13565  003C44  C0BA  F015         	movff	logf@f,___flmul@a
 13566  003C48  C0BB  F016         	movff	logf@f+1,___flmul@a+1
 13567  003C4C  C0BC  F017         	movff	logf@f+2,___flmul@a+2
 13568  003C50  C0BD  F018         	movff	logf@f+3,___flmul@a+3
 13569  003C54  EC25  F023         	call	___flmul	;wreg free
 13570  003C58  C011  F09E         	movff	?___flmul,logf@hfsq
 13571  003C5C  C012  F09F         	movff	?___flmul+1,logf@hfsq+1
 13572  003C60  C013  F0A0         	movff	?___flmul+2,logf@hfsq+2
 13573  003C64  C014  F0A1         	movff	?___flmul+3,logf@hfsq+3
 13574  003C68  C09C  F001         	movff	logf@k,___xxtofl@val
 13575  003C6C  C09D  F002         	movff	logf@k+1,___xxtofl@val+1
 13576  003C70  0E00               	movlw	0
 13577  003C72  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 13578  003C74  0EFF               	movlw	-1
 13579  003C76  6E03               	movwf	(___xxtofl@val+2)^0,c
 13580  003C78  6E04               	movwf	(___xxtofl@val+3)^0,c
 13581  003C7A  0E01               	movlw	1
 13582  003C7C  EC68  F02C         	call	___xxtofl
 13583  003C80  C001  F0A2         	movff	?___xxtofl,logf@dk
 13584  003C84  C002  F0A3         	movff	?___xxtofl+1,logf@dk+1
 13585  003C88  C003  F0A4         	movff	?___xxtofl+2,logf@dk+2
 13586  003C8C  C004  F0A5         	movff	?___xxtofl+3,logf@dk+3
 13587  003C90  C0A6  F015         	movff	logf@s,___flmul@a
 13588  003C94  C0A7  F016         	movff	logf@s+1,___flmul@a+1
 13589  003C98  C0A8  F017         	movff	logf@s+2,___flmul@a+2
 13590  003C9C  C0A9  F018         	movff	logf@s+3,___flmul@a+3
 13591  003CA0  C080  F005         	movff	logf@R,___fladd@a
 13592  003CA4  C081  F006         	movff	logf@R+1,___fladd@a+1
 13593  003CA8  C082  F007         	movff	logf@R+2,___fladd@a+2
 13594  003CAC  C083  F008         	movff	logf@R+3,___fladd@a+3
 13595  003CB0  C09E  F001         	movff	logf@hfsq,___fladd@b
 13596  003CB4  C09F  F002         	movff	logf@hfsq+1,___fladd@b+1
 13597  003CB8  C0A0  F003         	movff	logf@hfsq+2,___fladd@b+2
 13598  003CBC  C0A1  F004         	movff	logf@hfsq+3,___fladd@b+3
 13599  003CC0  ECCE  F024         	call	___fladd	;wreg free
 13600  003CC4  C001  F011         	movff	?___fladd,___flmul@b
 13601  003CC8  C002  F012         	movff	?___fladd+1,___flmul@b+1
 13602  003CCC  C003  F013         	movff	?___fladd+2,___flmul@b+2
 13603  003CD0  C004  F014         	movff	?___fladd+3,___flmul@b+3
 13604  003CD4  EC25  F023         	call	___flmul	;wreg free
 13605  003CD8  C011  F08C         	movff	?___flmul,_logf$2034
 13606  003CDC  C012  F08D         	movff	?___flmul+1,_logf$2034+1
 13607  003CE0  C013  F08E         	movff	?___flmul+2,_logf$2034+2
 13608  003CE4  C014  F08F         	movff	?___flmul+3,_logf$2034+3
 13609  003CE8  0ED1               	movlw	209
 13610  003CEA  6E15               	movwf	___flmul@a^0,c
 13611  003CEC  0EF7               	movlw	247
 13612  003CEE  6E16               	movwf	(___flmul@a+1)^0,c
 13613  003CF0  0E17               	movlw	23
 13614  003CF2  6E17               	movwf	(___flmul@a+2)^0,c
 13615  003CF4  0E37               	movlw	55
 13616  003CF6  6E18               	movwf	(___flmul@a+3)^0,c
 13617  003CF8  C0A2  F011         	movff	logf@dk,___flmul@b
 13618  003CFC  C0A3  F012         	movff	logf@dk+1,___flmul@b+1
 13619  003D00  C0A4  F013         	movff	logf@dk+2,___flmul@b+2
 13620  003D04  C0A5  F014         	movff	logf@dk+3,___flmul@b+3
 13621  003D08  EC25  F023         	call	___flmul	;wreg free
 13622  003D0C  C011  F005         	movff	?___flmul,___fladd@a
 13623  003D10  C012  F006         	movff	?___flmul+1,___fladd@a+1
 13624  003D14  C013  F007         	movff	?___flmul+2,___fladd@a+2
 13625  003D18  C014  F008         	movff	?___flmul+3,___fladd@a+3
 13626  003D1C  C08C  F001         	movff	_logf$2034,___fladd@b
 13627  003D20  C08D  F002         	movff	_logf$2034+1,___fladd@b+1
 13628  003D24  C08E  F003         	movff	_logf$2034+2,___fladd@b+2
 13629  003D28  C08F  F004         	movff	_logf$2034+3,___fladd@b+3
 13630  003D2C  ECCE  F024         	call	___fladd	;wreg free
 13631  003D30  C001  F090         	movff	?___fladd,_logf$2035
 13632  003D34  C002  F091         	movff	?___fladd+1,_logf$2035+1
 13633  003D38  C003  F092         	movff	?___fladd+2,_logf$2035+2
 13634  003D3C  C004  F093         	movff	?___fladd+3,_logf$2035+3
 13635  003D40  C09E  F02E         	movff	logf@hfsq,___flsub@a
 13636  003D44  C09F  F02F         	movff	logf@hfsq+1,___flsub@a+1
 13637  003D48  C0A0  F030         	movff	logf@hfsq+2,___flsub@a+2
 13638  003D4C  C0A1  F031         	movff	logf@hfsq+3,___flsub@a+3
 13639  003D50  C090  F02A         	movff	_logf$2035,___flsub@b
 13640  003D54  C091  F02B         	movff	_logf$2035+1,___flsub@b+1
 13641  003D58  C092  F02C         	movff	_logf$2035+2,___flsub@b+2
 13642  003D5C  C093  F02D         	movff	_logf$2035+3,___flsub@b+3
 13643  003D60  EC68  F033         	call	___flsub	;wreg free
 13644  003D64  C02A  F094         	movff	?___flsub,_logf$2036
 13645  003D68  C02B  F095         	movff	?___flsub+1,_logf$2036+1
 13646  003D6C  C02C  F096         	movff	?___flsub+2,_logf$2036+2
 13647  003D70  C02D  F097         	movff	?___flsub+3,_logf$2036+3
 13648  003D74  C0BA  F005         	movff	logf@f,___fladd@a
 13649  003D78  C0BB  F006         	movff	logf@f+1,___fladd@a+1
 13650  003D7C  C0BC  F007         	movff	logf@f+2,___fladd@a+2
 13651  003D80  C0BD  F008         	movff	logf@f+3,___fladd@a+3
 13652  003D84  C094  F001         	movff	_logf$2036,___fladd@b
 13653  003D88  C095  F002         	movff	_logf$2036+1,___fladd@b+1
 13654  003D8C  C096  F003         	movff	_logf$2036+2,___fladd@b+2
 13655  003D90  C097  F004         	movff	_logf$2036+3,___fladd@b+3
 13656  003D94  ECCE  F024         	call	___fladd	;wreg free
 13657  003D98  C001  F098         	movff	?___fladd,_logf$2037
 13658  003D9C  C002  F099         	movff	?___fladd+1,_logf$2037+1
 13659  003DA0  C003  F09A         	movff	?___fladd+2,_logf$2037+2
 13660  003DA4  C004  F09B         	movff	?___fladd+3,_logf$2037+3
 13661  003DA8  C098  F001         	movff	_logf$2037,___fladd@b
 13662  003DAC  C099  F002         	movff	_logf$2037+1,___fladd@b+1
 13663  003DB0  C09A  F003         	movff	_logf$2037+2,___fladd@b+2
 13664  003DB4  C09B  F004         	movff	_logf$2037+3,___fladd@b+3
 13665  003DB8  0E80               	movlw	128
 13666  003DBA  6E15               	movwf	___flmul@a^0,c
 13667  003DBC  0E71               	movlw	113
 13668  003DBE  6E16               	movwf	(___flmul@a+1)^0,c
 13669  003DC0  0E31               	movlw	49
 13670  003DC2  6E17               	movwf	(___flmul@a+2)^0,c
 13671  003DC4  0E3F               	movlw	63
 13672  003DC6  6E18               	movwf	(___flmul@a+3)^0,c
 13673  003DC8  C0A2  F011         	movff	logf@dk,___flmul@b
 13674  003DCC  C0A3  F012         	movff	logf@dk+1,___flmul@b+1
 13675  003DD0  C0A4  F013         	movff	logf@dk+2,___flmul@b+2
 13676  003DD4  C0A5  F014         	movff	logf@dk+3,___flmul@b+3
 13677  003DD8  EC25  F023         	call	___flmul	;wreg free
 13678  003DDC  C011  F005         	movff	?___flmul,___fladd@a
 13679  003DE0  C012  F006         	movff	?___flmul+1,___fladd@a+1
 13680  003DE4  C013  F007         	movff	?___flmul+2,___fladd@a+2
 13681  003DE8  C014  F008         	movff	?___flmul+3,___fladd@a+3
 13682  003DEC  ECCE  F024         	call	___fladd	;wreg free
 13683  003DF0  C001  F04B         	movff	?___fladd,?_logf
 13684  003DF4  C002  F04C         	movff	?___fladd+1,?_logf+1
 13685  003DF8  C003  F04D         	movff	?___fladd+2,?_logf+2
 13686  003DFC  C004  F04E         	movff	?___fladd+3,?_logf+3
 13687  003E00  0012               	return		;funcret
 13688  003E02                     __end_of_logf:
 13689                           	opt callstack 0
 13690                           
 13691 ;; *************** function ___flsub *****************
 13692 ;; Defined at:
 13693 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;  b               4   41[COMRAM] float 
 13696 ;;  a               4   45[COMRAM] float 
 13697 ;; Auto vars:     Size  Location     Type
 13698 ;;		None
 13699 ;; Return value:  Size  Location     Type
 13700 ;;                  4   41[COMRAM] float 
 13701 ;; Registers used:
 13702 ;;		wreg, status,2, status,0, cstack
 13703 ;; Tracked objects:
 13704 ;;		On entry : 0/0
 13705 ;;		On exit  : 0/0
 13706 ;;		Unchanged: 0/0
 13707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13708 ;;      Params:         8       0       0       0       0       0       0
 13709 ;;      Locals:         0       0       0       0       0       0       0
 13710 ;;      Temps:          0       0       0       0       0       0       0
 13711 ;;      Totals:         8       0       0       0       0       0       0
 13712 ;;Total ram usage:        8 bytes
 13713 ;; Hardware stack levels used:    1
 13714 ;; Hardware stack levels required when called:    1
 13715 ;; This function calls:
 13716 ;;		___fladd
 13717 ;; This function is called by:
 13718 ;;		_MQGetPercentage
 13719 ;;		_efgtoa
 13720 ;;		_logf
 13721 ;;		_powf
 13722 ;; This function uses a non-reentrant model
 13723 ;;
 13724                           
 13725                           	psect	text51
 13726  0066D0                     __ptext51:
 13727                           	opt callstack 0
 13728  0066D0                     ___flsub:
 13729                           	opt callstack 17
 13730                           
 13731                           ;incstack = 0
 13732  0066D0  0E00               	movlw	0
 13733  0066D2  1A2E               	xorwf	___flsub@a^0,f,c
 13734  0066D4  0E00               	movlw	0
 13735  0066D6  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13736  0066D8  0E00               	movlw	0
 13737  0066DA  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13738  0066DC  0E80               	movlw	128
 13739  0066DE  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13740  0066E0  C02A  F001         	movff	___flsub@b,___fladd@b
 13741  0066E4  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13742  0066E8  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13743  0066EC  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13744  0066F0  C02E  F005         	movff	___flsub@a,___fladd@a
 13745  0066F4  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13746  0066F8  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13747  0066FC  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13748  006700  ECCE  F024         	call	___fladd	;wreg free
 13749  006704  C001  F02A         	movff	?___fladd,?___flsub
 13750  006708  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13751  00670C  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13752  006710  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13753  006714  0012               	return		;funcret
 13754  006716                     __end_of___flsub:
 13755                           	opt callstack 0
 13756                           
 13757 ;; *************** function ___fladd *****************
 13758 ;; Defined at:
 13759 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 13760 ;; Parameters:    Size  Location     Type
 13761 ;;  b               4    0[COMRAM] float 
 13762 ;;  a               4    4[COMRAM] float 
 13763 ;; Auto vars:     Size  Location     Type
 13764 ;;  grs             1   15[COMRAM] unsigned char 
 13765 ;;  bexp            1   14[COMRAM] unsigned char 
 13766 ;;  aexp            1   13[COMRAM] unsigned char 
 13767 ;;  signs           1   12[COMRAM] unsigned char 
 13768 ;; Return value:  Size  Location     Type
 13769 ;;                  4    0[COMRAM] unsigned char 
 13770 ;; Registers used:
 13771 ;;		wreg, status,2, status,0
 13772 ;; Tracked objects:
 13773 ;;		On entry : 0/0
 13774 ;;		On exit  : 0/0
 13775 ;;		Unchanged: 0/0
 13776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13777 ;;      Params:         8       0       0       0       0       0       0
 13778 ;;      Locals:         4       0       0       0       0       0       0
 13779 ;;      Temps:          4       0       0       0       0       0       0
 13780 ;;      Totals:        16       0       0       0       0       0       0
 13781 ;;Total ram usage:       16 bytes
 13782 ;; Hardware stack levels used:    1
 13783 ;; This function calls:
 13784 ;;		Nothing
 13785 ;; This function is called by:
 13786 ;;		_MQGetPercentage
 13787 ;;		_efgtoa
 13788 ;;		___flsub
 13789 ;;		_logf
 13790 ;;		_powf
 13791 ;;		_sqrtf
 13792 ;; This function uses a non-reentrant model
 13793 ;;
 13794                           
 13795                           	psect	text52
 13796  00499C                     __ptext52:
 13797                           	opt callstack 0
 13798  00499C                     ___fladd:
 13799                           	opt callstack 17
 13800                           
 13801                           ;incstack = 0
 13802  00499C  5004               	movf	(___fladd@b+3)^0,w,c
 13803  00499E  0B80               	andlw	128
 13804  0049A0  6E0D               	movwf	___fladd@signs^0,c
 13805  0049A2  5004               	movf	(___fladd@b+3)^0,w,c
 13806  0049A4  2404               	addwf	(___fladd@b+3)^0,w,c
 13807  0049A6  6E0F               	movwf	___fladd@bexp^0,c
 13808  0049A8  BE03               	btfsc	(___fladd@b+2)^0,7,c
 13809  0049AA  800F               	bsf	___fladd@bexp^0,0,c
 13810  0049AC  500F               	movf	___fladd@bexp^0,w,c
 13811  0049AE  B4D8               	btfsc	status,2,c
 13812  0049B0  D00D               	goto	i2l8529
 13813  0049B2  280F               	incf	___fladd@bexp^0,w,c
 13814  0049B4  A4D8               	btfss	status,2,c
 13815  0049B6  D008               	goto	i2l8525
 13816  0049B8  0E00               	movlw	0
 13817  0049BA  6E01               	movwf	___fladd@b^0,c
 13818  0049BC  0E00               	movlw	0
 13819  0049BE  6E02               	movwf	(___fladd@b+1)^0,c
 13820  0049C0  0E00               	movlw	0
 13821  0049C2  6E03               	movwf	(___fladd@b+2)^0,c
 13822  0049C4  0E00               	movlw	0
 13823  0049C6  6E04               	movwf	(___fladd@b+3)^0,c
 13824  0049C8                     i2l8525:
 13825  0049C8  8E03               	bsf	(___fladd@b+2)^0,7,c
 13826  0049CA  D006               	goto	L12
 13827  0049CC                     i2l8529:
 13828  0049CC  0E00               	movlw	0
 13829  0049CE  6E01               	movwf	___fladd@b^0,c
 13830  0049D0  0E00               	movlw	0
 13831  0049D2  6E02               	movwf	(___fladd@b+1)^0,c
 13832  0049D4  0E00               	movlw	0
 13833  0049D6  6E03               	movwf	(___fladd@b+2)^0,c
 13834  0049D8                     L12:
 13835  0049D8  0E00               	movlw	0
 13836  0049DA  6E04               	movwf	(___fladd@b+3)^0,c
 13837  0049DC  5008               	movf	(___fladd@a+3)^0,w,c
 13838  0049DE  0B80               	andlw	128
 13839  0049E0  6E0E               	movwf	___fladd@aexp^0,c
 13840  0049E2  500D               	movf	___fladd@signs^0,w,c
 13841  0049E4  180E               	xorwf	___fladd@aexp^0,w,c
 13842  0049E6  A4D8               	btfss	status,2,c
 13843  0049E8  8C0D               	bsf	___fladd@signs^0,6,c
 13844  0049EA  5008               	movf	(___fladd@a+3)^0,w,c
 13845  0049EC  2408               	addwf	(___fladd@a+3)^0,w,c
 13846  0049EE  6E0E               	movwf	___fladd@aexp^0,c
 13847  0049F0  BE07               	btfsc	(___fladd@a+2)^0,7,c
 13848  0049F2  800E               	bsf	___fladd@aexp^0,0,c
 13849  0049F4  500E               	movf	___fladd@aexp^0,w,c
 13850  0049F6  B4D8               	btfsc	status,2,c
 13851  0049F8  D00D               	goto	i2l8553
 13852  0049FA  280E               	incf	___fladd@aexp^0,w,c
 13853  0049FC  A4D8               	btfss	status,2,c
 13854  0049FE  D008               	goto	i2l8549
 13855  004A00  0E00               	movlw	0
 13856  004A02  6E05               	movwf	___fladd@a^0,c
 13857  004A04  0E00               	movlw	0
 13858  004A06  6E06               	movwf	(___fladd@a+1)^0,c
 13859  004A08  0E00               	movlw	0
 13860  004A0A  6E07               	movwf	(___fladd@a+2)^0,c
 13861  004A0C  0E00               	movlw	0
 13862  004A0E  6E08               	movwf	(___fladd@a+3)^0,c
 13863  004A10                     i2l8549:
 13864  004A10  8E07               	bsf	(___fladd@a+2)^0,7,c
 13865  004A12  D006               	goto	L13
 13866  004A14                     i2l8553:
 13867  004A14  0E00               	movlw	0
 13868  004A16  6E05               	movwf	___fladd@a^0,c
 13869  004A18  0E00               	movlw	0
 13870  004A1A  6E06               	movwf	(___fladd@a+1)^0,c
 13871  004A1C  0E00               	movlw	0
 13872  004A1E  6E07               	movwf	(___fladd@a+2)^0,c
 13873  004A20                     L13:
 13874  004A20  0E00               	movlw	0
 13875  004A22  6E08               	movwf	(___fladd@a+3)^0,c
 13876  004A24  500F               	movf	___fladd@bexp^0,w,c
 13877  004A26  5C0E               	subwf	___fladd@aexp^0,w,c
 13878  004A28  B0D8               	btfsc	status,0,c
 13879  004A2A  D022               	goto	i2l8591
 13880  004A2C  AC0D               	btfss	___fladd@signs^0,6,c
 13881  004A2E  D002               	goto	i2l8561
 13882  004A30  0E80               	movlw	128
 13883  004A32  1A0D               	xorwf	___fladd@signs^0,f,c
 13884  004A34                     i2l8561:
 13885  004A34  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13886  004A38  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13887  004A3C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13888  004A40  C001  F010         	movff	___fladd@b,___fladd@grs
 13889  004A44  C005  F001         	movff	___fladd@a,___fladd@b
 13890  004A48  C010  F005         	movff	___fladd@grs,___fladd@a
 13891  004A4C  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13892  004A50  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13893  004A54  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13894  004A58  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13895  004A5C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13896  004A60  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13897  004A64  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13898  004A68  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13899  004A6C  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13900  004A70                     i2l8591:
 13901  004A70  0E00               	movlw	0
 13902  004A72  6E10               	movwf	___fladd@grs^0,c
 13903  004A74  500F               	movf	___fladd@bexp^0,w,c
 13904  004A76  C00E  F009         	movff	___fladd@aexp,??___fladd
 13905  004A7A  6A0A               	clrf	(??___fladd+1)^0,c
 13906  004A7C  5E09               	subwf	??___fladd^0,f,c
 13907  004A7E  0E00               	movlw	0
 13908  004A80  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13909  004A82  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13910  004A84  D02C               	goto	i2l983
 13911  004A86  500A               	movf	(??___fladd+1)^0,w,c
 13912  004A88  E104               	bnz	i2u1061_40
 13913  004A8A  0E1A               	movlw	26
 13914  004A8C  5C09               	subwf	??___fladd^0,w,c
 13915  004A8E  A0D8               	btfss	status,0,c
 13916  004A90  D026               	goto	i2l983
 13917  004A92                     i2u1061_40:
 13918  004A92  5001               	movf	___fladd@b^0,w,c
 13919  004A94  1002               	iorwf	(___fladd@b+1)^0,w,c
 13920  004A96  1003               	iorwf	(___fladd@b+2)^0,w,c
 13921  004A98  1004               	iorwf	(___fladd@b+3)^0,w,c
 13922  004A9A  B4D8               	btfsc	status,2,c
 13923  004A9C  D002               	goto	i2u1062_40
 13924  004A9E  0E01               	movlw	1
 13925  004AA0  D001               	goto	i2u1063_40
 13926  004AA2                     i2u1062_40:
 13927  004AA2  0E00               	movlw	0
 13928  004AA4                     i2u1063_40:
 13929  004AA4  6E10               	movwf	___fladd@grs^0,c
 13930  004AA6  0E00               	movlw	0
 13931  004AA8  6E01               	movwf	___fladd@b^0,c
 13932  004AAA  0E00               	movlw	0
 13933  004AAC  6E02               	movwf	(___fladd@b+1)^0,c
 13934  004AAE  0E00               	movlw	0
 13935  004AB0  6E03               	movwf	(___fladd@b+2)^0,c
 13936  004AB2  0E00               	movlw	0
 13937  004AB4  6E04               	movwf	(___fladd@b+3)^0,c
 13938  004AB6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13939  004ABA  D015               	goto	i2u1066_40
 13940  004ABC                     i2l984:
 13941  004ABC  A010               	btfss	___fladd@grs^0,0,c
 13942  004ABE  D005               	goto	i2l8603
 13943  004AC0  90D8               	bcf	status,0,c
 13944  004AC2  3010               	rrcf	___fladd@grs^0,w,c
 13945  004AC4  0901               	iorlw	1
 13946  004AC6  6E10               	movwf	___fladd@grs^0,c
 13947  004AC8  D002               	goto	i2l8605
 13948  004ACA                     i2l8603:
 13949  004ACA  90D8               	bcf	status,0,c
 13950  004ACC  3210               	rrcf	___fladd@grs^0,f,c
 13951  004ACE                     i2l8605:
 13952  004ACE  B001               	btfsc	___fladd@b^0,0,c
 13953  004AD0  8E10               	bsf	___fladd@grs^0,7,c
 13954  004AD2  3404               	rlcf	(___fladd@b+3)^0,w,c
 13955  004AD4  3204               	rrcf	(___fladd@b+3)^0,f,c
 13956  004AD6  3203               	rrcf	(___fladd@b+2)^0,f,c
 13957  004AD8  3202               	rrcf	(___fladd@b+1)^0,f,c
 13958  004ADA  3201               	rrcf	___fladd@b^0,f,c
 13959  004ADC  2A0F               	incf	___fladd@bexp^0,f,c
 13960  004ADE                     i2l983:
 13961  004ADE  500E               	movf	___fladd@aexp^0,w,c
 13962  004AE0  5C0F               	subwf	___fladd@bexp^0,w,c
 13963  004AE2  A0D8               	btfss	status,0,c
 13964  004AE4  D7EB               	goto	i2l984
 13965  004AE6                     i2u1066_40:
 13966  004AE6  BC0D               	btfsc	___fladd@signs^0,6,c
 13967  004AE8  D028               	goto	i2l8637
 13968  004AEA  500F               	movf	___fladd@bexp^0,w,c
 13969  004AEC  A4D8               	btfss	status,2,c
 13970  004AEE  D009               	goto	i2l8619
 13971  004AF0  0E00               	movlw	0
 13972  004AF2  6E01               	movwf	?___fladd^0,c
 13973  004AF4  0E00               	movlw	0
 13974  004AF6  6E02               	movwf	(?___fladd+1)^0,c
 13975  004AF8  0E00               	movlw	0
 13976  004AFA  6E03               	movwf	(?___fladd+2)^0,c
 13977  004AFC  0E00               	movlw	0
 13978  004AFE  6E04               	movwf	(?___fladd+3)^0,c
 13979  004B00  0012               	return	
 13980  004B02                     i2l8619:
 13981  004B02  5005               	movf	___fladd@a^0,w,c
 13982  004B04  2601               	addwf	___fladd@b^0,f,c
 13983  004B06  5006               	movf	(___fladd@a+1)^0,w,c
 13984  004B08  2202               	addwfc	(___fladd@b+1)^0,f,c
 13985  004B0A  5007               	movf	(___fladd@a+2)^0,w,c
 13986  004B0C  2203               	addwfc	(___fladd@b+2)^0,f,c
 13987  004B0E  5008               	movf	(___fladd@a+3)^0,w,c
 13988  004B10  2204               	addwfc	(___fladd@b+3)^0,f,c
 13989  004B12  A004               	btfss	(___fladd@b+3)^0,0,c
 13990  004B14  D071               	goto	i2u1079_40
 13991  004B16  A010               	btfss	___fladd@grs^0,0,c
 13992  004B18  D005               	goto	i2l8627
 13993  004B1A  90D8               	bcf	status,0,c
 13994  004B1C  3010               	rrcf	___fladd@grs^0,w,c
 13995  004B1E  0901               	iorlw	1
 13996  004B20  6E10               	movwf	___fladd@grs^0,c
 13997  004B22  D002               	goto	i2l8629
 13998  004B24                     i2l8627:
 13999  004B24  90D8               	bcf	status,0,c
 14000  004B26  3210               	rrcf	___fladd@grs^0,f,c
 14001  004B28                     i2l8629:
 14002  004B28  B001               	btfsc	___fladd@b^0,0,c
 14003  004B2A  8E10               	bsf	___fladd@grs^0,7,c
 14004  004B2C  3404               	rlcf	(___fladd@b+3)^0,w,c
 14005  004B2E  3204               	rrcf	(___fladd@b+3)^0,f,c
 14006  004B30  3203               	rrcf	(___fladd@b+2)^0,f,c
 14007  004B32  3202               	rrcf	(___fladd@b+1)^0,f,c
 14008  004B34  3201               	rrcf	___fladd@b^0,f,c
 14009  004B36  2A0F               	incf	___fladd@bexp^0,f,c
 14010  004B38  D05F               	goto	i2u1079_40
 14011  004B3A                     i2l8637:
 14012  004B3A  5005               	movf	___fladd@a^0,w,c
 14013  004B3C  5C01               	subwf	___fladd@b^0,w,c
 14014  004B3E  5006               	movf	(___fladd@a+1)^0,w,c
 14015  004B40  5802               	subwfb	(___fladd@b+1)^0,w,c
 14016  004B42  5007               	movf	(___fladd@a+2)^0,w,c
 14017  004B44  5803               	subwfb	(___fladd@b+2)^0,w,c
 14018  004B46  5004               	movf	(___fladd@b+3)^0,w,c
 14019  004B48  0A80               	xorlw	128
 14020  004B4A  6E09               	movwf	??___fladd^0,c
 14021  004B4C  5008               	movf	(___fladd@a+3)^0,w,c
 14022  004B4E  0A80               	xorlw	128
 14023  004B50  5809               	subwfb	??___fladd^0,w,c
 14024  004B52  B0D8               	btfsc	status,0,c
 14025  004B54  D025               	goto	i2l8647
 14026  004B56  5001               	movf	___fladd@b^0,w,c
 14027  004B58  5C05               	subwf	___fladd@a^0,w,c
 14028  004B5A  6E09               	movwf	??___fladd^0,c
 14029  004B5C  5002               	movf	(___fladd@b+1)^0,w,c
 14030  004B5E  5806               	subwfb	(___fladd@a+1)^0,w,c
 14031  004B60  6E0A               	movwf	(??___fladd+1)^0,c
 14032  004B62  5003               	movf	(___fladd@b+2)^0,w,c
 14033  004B64  5807               	subwfb	(___fladd@a+2)^0,w,c
 14034  004B66  6E0B               	movwf	(??___fladd+2)^0,c
 14035  004B68  5004               	movf	(___fladd@b+3)^0,w,c
 14036  004B6A  5808               	subwfb	(___fladd@a+3)^0,w,c
 14037  004B6C  6E0C               	movwf	(??___fladd+3)^0,c
 14038  004B6E  0EFF               	movlw	255
 14039  004B70  2409               	addwf	??___fladd^0,w,c
 14040  004B72  6E01               	movwf	___fladd@b^0,c
 14041  004B74  0EFF               	movlw	255
 14042  004B76  200A               	addwfc	(??___fladd+1)^0,w,c
 14043  004B78  6E02               	movwf	(___fladd@b+1)^0,c
 14044  004B7A  0EFF               	movlw	255
 14045  004B7C  200B               	addwfc	(??___fladd+2)^0,w,c
 14046  004B7E  6E03               	movwf	(___fladd@b+2)^0,c
 14047  004B80  0EFF               	movlw	255
 14048  004B82  200C               	addwfc	(??___fladd+3)^0,w,c
 14049  004B84  6E04               	movwf	(___fladd@b+3)^0,c
 14050  004B86  0E80               	movlw	128
 14051  004B88  1A0D               	xorwf	___fladd@signs^0,f,c
 14052  004B8A  6C10               	negf	___fladd@grs^0,c
 14053  004B8C  5010               	movf	___fladd@grs^0,w,c
 14054  004B8E  A4D8               	btfss	status,2,c
 14055  004B90  D00F               	goto	i2l999
 14056  004B92  0E01               	movlw	1
 14057  004B94  2601               	addwf	___fladd@b^0,f,c
 14058  004B96  0E00               	movlw	0
 14059  004B98  2202               	addwfc	(___fladd@b+1)^0,f,c
 14060  004B9A  2203               	addwfc	(___fladd@b+2)^0,f,c
 14061  004B9C  2204               	addwfc	(___fladd@b+3)^0,f,c
 14062  004B9E  D008               	goto	i2l999
 14063  004BA0                     i2l8647:
 14064  004BA0  5005               	movf	___fladd@a^0,w,c
 14065  004BA2  5E01               	subwf	___fladd@b^0,f,c
 14066  004BA4  5006               	movf	(___fladd@a+1)^0,w,c
 14067  004BA6  5A02               	subwfb	(___fladd@b+1)^0,f,c
 14068  004BA8  5007               	movf	(___fladd@a+2)^0,w,c
 14069  004BAA  5A03               	subwfb	(___fladd@b+2)^0,f,c
 14070  004BAC  5008               	movf	(___fladd@a+3)^0,w,c
 14071  004BAE  5A04               	subwfb	(___fladd@b+3)^0,f,c
 14072  004BB0                     i2l999:
 14073  004BB0  5001               	movf	___fladd@b^0,w,c
 14074  004BB2  1002               	iorwf	(___fladd@b+1)^0,w,c
 14075  004BB4  1003               	iorwf	(___fladd@b+2)^0,w,c
 14076  004BB6  1004               	iorwf	(___fladd@b+3)^0,w,c
 14077  004BB8  A4D8               	btfss	status,2,c
 14078  004BBA  D01C               	goto	i2l8671
 14079  004BBC  5010               	movf	___fladd@grs^0,w,c
 14080  004BBE  A4D8               	btfss	status,2,c
 14081  004BC0  D019               	goto	i2l8671
 14082  004BC2  0E00               	movlw	0
 14083  004BC4  6E01               	movwf	?___fladd^0,c
 14084  004BC6  0E00               	movlw	0
 14085  004BC8  6E02               	movwf	(?___fladd+1)^0,c
 14086  004BCA  0E00               	movlw	0
 14087  004BCC  6E03               	movwf	(?___fladd+2)^0,c
 14088  004BCE  0E00               	movlw	0
 14089  004BD0  6E04               	movwf	(?___fladd+3)^0,c
 14090  004BD2  0012               	return	
 14091  004BD4                     i2l8655:
 14092  004BD4  90D8               	bcf	status,0,c
 14093  004BD6  3601               	rlcf	___fladd@b^0,f,c
 14094  004BD8  3602               	rlcf	(___fladd@b+1)^0,f,c
 14095  004BDA  3603               	rlcf	(___fladd@b+2)^0,f,c
 14096  004BDC  3604               	rlcf	(___fladd@b+3)^0,f,c
 14097  004BDE  BE10               	btfsc	___fladd@grs^0,7,c
 14098  004BE0  8001               	bsf	___fladd@b^0,0,c
 14099  004BE2  A010               	btfss	___fladd@grs^0,0,c
 14100  004BE4  D002               	goto	i2l8665
 14101  004BE6  80D8               	bsf	status,0,c
 14102  004BE8  D001               	goto	L14
 14103  004BEA                     i2l8665:
 14104  004BEA  90D8               	bcf	status,0,c
 14105  004BEC                     L14:
 14106  004BEC  3610               	rlcf	___fladd@grs^0,f,c
 14107  004BEE  500F               	movf	___fladd@bexp^0,w,c
 14108  004BF0  A4D8               	btfss	status,2,c
 14109  004BF2  060F               	decf	___fladd@bexp^0,f,c
 14110  004BF4                     i2l8671:
 14111  004BF4  AE03               	btfss	(___fladd@b+2)^0,7,c
 14112  004BF6  D7EE               	goto	i2l8655
 14113  004BF8                     i2u1079_40:
 14114  004BF8  0E00               	movlw	0
 14115  004BFA  6E0E               	movwf	___fladd@aexp^0,c
 14116  004BFC  AE10               	btfss	___fladd@grs^0,7,c
 14117  004BFE  D00B               	goto	i2l1008
 14118  004C00  C010  F009         	movff	___fladd@grs,??___fladd
 14119  004C04  0E7F               	movlw	127
 14120  004C06  1609               	andwf	??___fladd^0,f,c
 14121  004C08  B4D8               	btfsc	status,2,c
 14122  004C0A  D003               	goto	i2l1009
 14123  004C0C                     i2u1081_40:
 14124  004C0C  0E01               	movlw	1
 14125  004C0E  6E0E               	movwf	___fladd@aexp^0,c
 14126  004C10  D002               	goto	i2l1008
 14127  004C12                     i2l1009:
 14128  004C12  B001               	btfsc	___fladd@b^0,0,c
 14129  004C14  D7FB               	goto	i2u1081_40
 14130  004C16                     i2l1008:
 14131  004C16  500E               	movf	___fladd@aexp^0,w,c
 14132  004C18  B4D8               	btfsc	status,2,c
 14133  004C1A  D020               	goto	i2l8691
 14134  004C1C  0E01               	movlw	1
 14135  004C1E  2601               	addwf	___fladd@b^0,f,c
 14136  004C20  0E00               	movlw	0
 14137  004C22  2202               	addwfc	(___fladd@b+1)^0,f,c
 14138  004C24  2203               	addwfc	(___fladd@b+2)^0,f,c
 14139  004C26  2204               	addwfc	(___fladd@b+3)^0,f,c
 14140  004C28  A004               	btfss	(___fladd@b+3)^0,0,c
 14141  004C2A  D018               	goto	i2l8691
 14142  004C2C  C001  F009         	movff	___fladd@b,??___fladd
 14143  004C30  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 14144  004C34  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 14145  004C38  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 14146  004C3C  340C               	rlcf	(??___fladd+3)^0,w,c
 14147  004C3E  320C               	rrcf	(??___fladd+3)^0,f,c
 14148  004C40  320B               	rrcf	(??___fladd+2)^0,f,c
 14149  004C42  320A               	rrcf	(??___fladd+1)^0,f,c
 14150  004C44  3209               	rrcf	??___fladd^0,f,c
 14151  004C46  C009  F001         	movff	??___fladd,___fladd@b
 14152  004C4A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 14153  004C4E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 14154  004C52  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 14155  004C56  280F               	incf	___fladd@bexp^0,w,c
 14156  004C58  A4D8               	btfss	status,2,c
 14157  004C5A  2A0F               	incf	___fladd@bexp^0,f,c
 14158  004C5C                     i2l8691:
 14159  004C5C  280F               	incf	___fladd@bexp^0,w,c
 14160  004C5E  B4D8               	btfsc	status,2,c
 14161  004C60  D003               	goto	i2u1087_40
 14162  004C62  500F               	movf	___fladd@bexp^0,w,c
 14163  004C64  A4D8               	btfss	status,2,c
 14164  004C66  D00D               	goto	i2l8699
 14165  004C68                     i2u1087_40:
 14166  004C68  0E00               	movlw	0
 14167  004C6A  6E01               	movwf	___fladd@b^0,c
 14168  004C6C  0E00               	movlw	0
 14169  004C6E  6E02               	movwf	(___fladd@b+1)^0,c
 14170  004C70  0E00               	movlw	0
 14171  004C72  6E03               	movwf	(___fladd@b+2)^0,c
 14172  004C74  0E00               	movlw	0
 14173  004C76  6E04               	movwf	(___fladd@b+3)^0,c
 14174  004C78  500F               	movf	___fladd@bexp^0,w,c
 14175  004C7A  A4D8               	btfss	status,2,c
 14176  004C7C  D002               	goto	i2l8699
 14177  004C7E  0E00               	movlw	0
 14178  004C80  6E0D               	movwf	___fladd@signs^0,c
 14179  004C82                     i2l8699:
 14180  004C82  A00F               	btfss	___fladd@bexp^0,0,c
 14181  004C84  D002               	goto	i2l8703
 14182  004C86  8E03               	bsf	(___fladd@b+2)^0,7,c
 14183  004C88  D001               	goto	i2l8705
 14184  004C8A                     i2l8703:
 14185  004C8A  9E03               	bcf	(___fladd@b+2)^0,7,c
 14186  004C8C                     i2l8705:
 14187  004C8C  90D8               	bcf	status,0,c
 14188  004C8E  300F               	rrcf	___fladd@bexp^0,w,c
 14189  004C90  6E04               	movwf	(___fladd@b+3)^0,c
 14190  004C92  BE0D               	btfsc	___fladd@signs^0,7,c
 14191  004C94  8E04               	bsf	(___fladd@b+3)^0,7,c
 14192  004C96  C001  F001         	movff	___fladd@b,?___fladd
 14193  004C9A  C002  F002         	movff	___fladd@b+1,?___fladd+1
 14194  004C9E  C003  F003         	movff	___fladd@b+2,?___fladd+2
 14195  004CA2  C004  F004         	movff	___fladd@b+3,?___fladd+3
 14196  004CA6  0012               	return		;funcret
 14197  004CA8                     __end_of___fladd:
 14198                           	opt callstack 0
 14199                           
 14200 ;; *************** function ___fltol *****************
 14201 ;; Defined at:
 14202 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 14203 ;; Parameters:    Size  Location     Type
 14204 ;;  f1              4   74[BANK0 ] unsigned char 
 14205 ;; Auto vars:     Size  Location     Type
 14206 ;;  exp1            1  124[COMRAM] unsigned char 
 14207 ;;  sign1           1  123[COMRAM] unsigned char 
 14208 ;; Return value:  Size  Location     Type
 14209 ;;                  4   74[BANK0 ] long 
 14210 ;; Registers used:
 14211 ;;		wreg, status,2, status,0
 14212 ;; Tracked objects:
 14213 ;;		On entry : 0/0
 14214 ;;		On exit  : 0/0
 14215 ;;		Unchanged: 0/0
 14216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14217 ;;      Params:         0       4       0       0       0       0       0
 14218 ;;      Locals:         2       0       0       0       0       0       0
 14219 ;;      Temps:          4       0       0       0       0       0       0
 14220 ;;      Totals:         6       4       0       0       0       0       0
 14221 ;;Total ram usage:       10 bytes
 14222 ;; Hardware stack levels used:    1
 14223 ;; This function calls:
 14224 ;;		Nothing
 14225 ;; This function is called by:
 14226 ;;		_MQGetPercentage
 14227 ;;		_efgtoa
 14228 ;; This function uses a non-reentrant model
 14229 ;;
 14230                           
 14231                           	psect	text53
 14232  005F20                     __ptext53:
 14233                           	opt callstack 0
 14234  005F20                     ___fltol:
 14235                           	opt callstack 18
 14236                           
 14237                           ;incstack = 0
 14238  005F20  0100               	movlb	0	; () banked
 14239  005F22  35CC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14240  005F24  35CD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14241  005F26  6E7D               	movwf	___fltol@exp1^0,c
 14242  005F28  507D               	movf	___fltol@exp1^0,w,c
 14243  005F2A  A4D8               	btfss	status,2,c
 14244  005F2C  D009               	goto	i2l9181
 14245  005F2E                     i2u1176_40:
 14246                           
 14247                           ; BSR set to: 0
 14248  005F2E  0E00               	movlw	0
 14249  005F30  6FCA               	movwf	?___fltol& (0+255),b
 14250  005F32  0E00               	movlw	0
 14251  005F34  6FCB               	movwf	(?___fltol+1)& (0+255),b
 14252  005F36  0E00               	movlw	0
 14253  005F38  6FCC               	movwf	(?___fltol+2)& (0+255),b
 14254  005F3A  0E00               	movlw	0
 14255  005F3C  6FCD               	movwf	(?___fltol+3)& (0+255),b
 14256  005F3E  0012               	return	
 14257  005F40                     i2l9181:
 14258                           
 14259                           ; BSR set to: 0
 14260  005F40  C0CA  F078         	movff	___fltol@f1,??___fltol
 14261  005F44  C0CB  F079         	movff	___fltol@f1+1,??___fltol+1
 14262  005F48  C0CC  F07A         	movff	___fltol@f1+2,??___fltol+2
 14263  005F4C  C0CD  F07B         	movff	___fltol@f1+3,??___fltol+3
 14264  005F50  0E20               	movlw	32
 14265  005F52  D005               	goto	i2u1177_40
 14266  005F54                     i2u1177_45:
 14267  005F54  90D8               	bcf	status,0,c
 14268  005F56  327B               	rrcf	(??___fltol+3)^0,f,c
 14269  005F58  327A               	rrcf	(??___fltol+2)^0,f,c
 14270  005F5A  3279               	rrcf	(??___fltol+1)^0,f,c
 14271  005F5C  3278               	rrcf	??___fltol^0,f,c
 14272  005F5E                     i2u1177_40:
 14273  005F5E  2EE8               	decfsz	wreg,f,c
 14274  005F60  D7F9               	goto	i2u1177_45
 14275  005F62  5078               	movf	??___fltol^0,w,c
 14276  005F64  6E7C               	movwf	___fltol@sign1^0,c
 14277                           
 14278                           ; BSR set to: 0
 14279  005F66  8FCC               	bsf	(___fltol@f1+2)& (0+255),7,b
 14280                           
 14281                           ; BSR set to: 0
 14282  005F68  0EFF               	movlw	255
 14283  005F6A  17CA               	andwf	___fltol@f1& (0+255),f,b
 14284  005F6C  0EFF               	movlw	255
 14285  005F6E  17CB               	andwf	(___fltol@f1+1)& (0+255),f,b
 14286  005F70  0EFF               	movlw	255
 14287  005F72  17CC               	andwf	(___fltol@f1+2)& (0+255),f,b
 14288  005F74  0E00               	movlw	0
 14289  005F76  17CD               	andwf	(___fltol@f1+3)& (0+255),f,b
 14290                           
 14291                           ; BSR set to: 0
 14292  005F78  0E96               	movlw	150
 14293  005F7A  5E7D               	subwf	___fltol@exp1^0,f,c
 14294                           
 14295                           ; BSR set to: 0
 14296  005F7C  AE7D               	btfss	___fltol@exp1^0,7,c
 14297  005F7E  D00D               	goto	i2l9201
 14298                           
 14299                           ; BSR set to: 0
 14300  005F80  507D               	movf	___fltol@exp1^0,w,c
 14301  005F82  0A80               	xorlw	128
 14302  005F84  0F97               	addlw	151
 14303  005F86  A0D8               	btfss	status,0,c
 14304  005F88  D7D2               	goto	i2u1176_40
 14305  005F8A                     i2l9197:
 14306                           
 14307                           ; BSR set to: 0
 14308  005F8A  90D8               	bcf	status,0,c
 14309  005F8C  33CD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14310  005F8E  33CC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14311  005F90  33CB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14312  005F92  33CA               	rrcf	___fltol@f1& (0+255),f,b
 14313                           
 14314                           ; BSR set to: 0
 14315  005F94  3E7D               	incfsz	___fltol@exp1^0,f,c
 14316  005F96  D7F9               	goto	i2l9197
 14317  005F98  D00D               	goto	i2u1181_40
 14318  005F9A                     i2l9201:
 14319                           
 14320                           ; BSR set to: 0
 14321  005F9A  0E1F               	movlw	31
 14322  005F9C  647D               	cpfsgt	___fltol@exp1^0,c
 14323  005F9E  D007               	goto	i2l9209
 14324  005FA0  D7C6               	goto	i2u1176_40
 14325  005FA2                     i2l9207:
 14326                           
 14327                           ; BSR set to: 0
 14328  005FA2  90D8               	bcf	status,0,c
 14329  005FA4  37CA               	rlcf	___fltol@f1& (0+255),f,b
 14330  005FA6  37CB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14331  005FA8  37CC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14332  005FAA  37CD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14333  005FAC  067D               	decf	___fltol@exp1^0,f,c
 14334  005FAE                     i2l9209:
 14335                           
 14336                           ; BSR set to: 0
 14337  005FAE  507D               	movf	___fltol@exp1^0,w,c
 14338  005FB0  A4D8               	btfss	status,2,c
 14339  005FB2  D7F7               	goto	i2l9207
 14340  005FB4                     i2u1181_40:
 14341                           
 14342                           ; BSR set to: 0
 14343  005FB4  507C               	movf	___fltol@sign1^0,w,c
 14344  005FB6  B4D8               	btfsc	status,2,c
 14345  005FB8  D008               	goto	i2l9215
 14346                           
 14347                           ; BSR set to: 0
 14348  005FBA  1FCD               	comf	(___fltol@f1+3)& (0+255),f,b
 14349  005FBC  1FCC               	comf	(___fltol@f1+2)& (0+255),f,b
 14350  005FBE  1FCB               	comf	(___fltol@f1+1)& (0+255),f,b
 14351  005FC0  6DCA               	negf	___fltol@f1& (0+255),b
 14352  005FC2  0E00               	movlw	0
 14353  005FC4  23CB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14354  005FC6  23CC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14355  005FC8  23CD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14356  005FCA                     i2l9215:
 14357                           
 14358                           ; BSR set to: 0
 14359  005FCA  C0CA  F0CA         	movff	___fltol@f1,?___fltol
 14360  005FCE  C0CB  F0CB         	movff	___fltol@f1+1,?___fltol+1
 14361  005FD2  C0CC  F0CC         	movff	___fltol@f1+2,?___fltol+2
 14362  005FD6  C0CD  F0CD         	movff	___fltol@f1+3,?___fltol+3
 14363                           
 14364                           ; BSR set to: 0
 14365  005FDA  0012               	return		;funcret
 14366  005FDC                     __end_of___fltol:
 14367                           	opt callstack 0
 14368                           
 14369 ;; *************** function _ADC_Read *****************
 14370 ;; Defined at:
 14371 ;;		line 67 in file "setting_hardaware/adc.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;  channel         2   74[COMRAM] int 
 14374 ;; Auto vars:     Size  Location     Type
 14375 ;;  result          4   81[COMRAM] int 
 14376 ;;  digital         2   79[COMRAM] int 
 14377 ;; Return value:  Size  Location     Type
 14378 ;;                  4   74[COMRAM] int 
 14379 ;; Registers used:
 14380 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14381 ;; Tracked objects:
 14382 ;;		On entry : 0/0
 14383 ;;		On exit  : 0/0
 14384 ;;		Unchanged: 0/0
 14385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14386 ;;      Params:         4       0       0       0       0       0       0
 14387 ;;      Locals:         6       0       0       0       0       0       0
 14388 ;;      Temps:          1       0       0       0       0       0       0
 14389 ;;      Totals:        11       0       0       0       0       0       0
 14390 ;;Total ram usage:       11 bytes
 14391 ;; Hardware stack levels used:    1
 14392 ;; Hardware stack levels required when called:    1
 14393 ;; This function calls:
 14394 ;;		___fldiv
 14395 ;;		___flmul
 14396 ;;		___xxtofl
 14397 ;; This function is called by:
 14398 ;;		_Hi_ISR
 14399 ;; This function uses a non-reentrant model
 14400 ;;
 14401                           
 14402                           	psect	text54
 14403  005FDC                     __ptext54:
 14404                           	opt callstack 0
 14405  005FDC                     _ADC_Read:
 14406                           	opt callstack 21
 14407                           
 14408                           ;setting_hardaware/adc.c: 73:     ADCON0bits.CHS = channel ;
 14409                           
 14410                           ; BSR set to: 0
 14411                           ;incstack = 0
 14412  005FDC  C04B  F04F         	movff	ADC_Read@channel,??_ADC_Read
 14413  005FE0  464F               	rlncf	??_ADC_Read^0,f,c
 14414  005FE2  464F               	rlncf	??_ADC_Read^0,f,c
 14415  005FE4  50C2               	movf	194,w,c	;volatile
 14416  005FE6  184F               	xorwf	??_ADC_Read^0,w,c
 14417  005FE8  0BC3               	andlw	-61
 14418  005FEA  184F               	xorwf	??_ADC_Read^0,w,c
 14419  005FEC  6EC2               	movwf	194,c	;volatile
 14420                           
 14421                           ;setting_hardaware/adc.c: 74:     ADCON0bits.ADON = 1;
 14422  005FEE  80C2               	bsf	194,0,c	;volatile
 14423                           
 14424                           ;setting_hardaware/adc.c: 75:     ADCON0bits.GO = 1;
 14425  005FF0  82C2               	bsf	194,1,c	;volatile
 14426  005FF2                     i2l165:
 14427  005FF2  B2C2               	btfsc	194,1,c	;volatile
 14428  005FF4  D7FE               	goto	i2l165
 14429                           
 14430                           ;setting_hardaware/adc.c: 78:     digital = ADRES;
 14431  005FF6  CFC3 F050          	movff	4035,ADC_Read@digital	;volatile
 14432  005FFA  CFC4 F051          	movff	4036,ADC_Read@digital+1	;volatile
 14433                           
 14434                           ;setting_hardaware/adc.c: 80:         result=digital*4.88/10;
 14435  005FFE  0EF6               	movlw	246
 14436  006000  6E15               	movwf	___flmul@a^0,c
 14437  006002  0E28               	movlw	40
 14438  006004  6E16               	movwf	(___flmul@a+1)^0,c
 14439  006006  0E9C               	movlw	156
 14440  006008  6E17               	movwf	(___flmul@a+2)^0,c
 14441  00600A  0E40               	movlw	64
 14442  00600C  6E18               	movwf	(___flmul@a+3)^0,c
 14443  00600E  C050  F001         	movff	ADC_Read@digital,___xxtofl@val
 14444  006012  C051  F002         	movff	ADC_Read@digital+1,___xxtofl@val+1
 14445  006016  0E00               	movlw	0
 14446  006018  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 14447  00601A  0EFF               	movlw	-1
 14448  00601C  6E03               	movwf	(___xxtofl@val+2)^0,c
 14449  00601E  6E04               	movwf	(___xxtofl@val+3)^0,c
 14450  006020  0E01               	movlw	1
 14451  006022  EC68  F02C         	call	___xxtofl
 14452  006026  C001  F011         	movff	?___xxtofl,___flmul@b
 14453  00602A  C002  F012         	movff	?___xxtofl+1,___flmul@b+1
 14454  00602E  C003  F013         	movff	?___xxtofl+2,___flmul@b+2
 14455  006032  C004  F014         	movff	?___xxtofl+3,___flmul@b+3
 14456  006036  EC25  F023         	call	___flmul	;wreg free
 14457  00603A  C011  F032         	movff	?___flmul,___fldiv@b
 14458  00603E  C012  F033         	movff	?___flmul+1,___fldiv@b+1
 14459  006042  C013  F034         	movff	?___flmul+2,___fldiv@b+2
 14460  006046  C014  F035         	movff	?___flmul+3,___fldiv@b+3
 14461  00604A  0E00               	movlw	0
 14462  00604C  6E36               	movwf	___fldiv@a^0,c
 14463  00604E  0E00               	movlw	0
 14464  006050  6E37               	movwf	(___fldiv@a+1)^0,c
 14465  006052  0E20               	movlw	32
 14466  006054  6E38               	movwf	(___fldiv@a+2)^0,c
 14467  006056  0E41               	movlw	65
 14468  006058  6E39               	movwf	(___fldiv@a+3)^0,c
 14469  00605A  EC54  F026         	call	___fldiv	;wreg free
 14470  00605E  C032  F052         	movff	?___fldiv,ADC_Read@result
 14471  006062  C033  F053         	movff	?___fldiv+1,ADC_Read@result+1
 14472  006066  C034  F054         	movff	?___fldiv+2,ADC_Read@result+2
 14473  00606A  C035  F055         	movff	?___fldiv+3,ADC_Read@result+3
 14474                           
 14475                           ;setting_hardaware/adc.c: 82:     ADCON0bits.ADON = 0;
 14476  00606E  90C2               	bcf	194,0,c	;volatile
 14477                           
 14478                           ;setting_hardaware/adc.c: 83:     return result;
 14479  006070  C052  F04B         	movff	ADC_Read@result,?_ADC_Read
 14480  006074  C053  F04C         	movff	ADC_Read@result+1,?_ADC_Read+1
 14481  006078  C054  F04D         	movff	ADC_Read@result+2,?_ADC_Read+2
 14482  00607C  C055  F04E         	movff	ADC_Read@result+3,?_ADC_Read+3
 14483  006080  0012               	return		;funcret
 14484  006082                     __end_of_ADC_Read:
 14485                           	opt callstack 0
 14486                           
 14487 ;; *************** function ___xxtofl *****************
 14488 ;; Defined at:
 14489 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 14490 ;; Parameters:    Size  Location     Type
 14491 ;;  sign            1    wreg     unsigned char 
 14492 ;;  val             4    0[COMRAM] long 
 14493 ;; Auto vars:     Size  Location     Type
 14494 ;;  sign            1    8[COMRAM] unsigned char 
 14495 ;;  arg             4   10[COMRAM] unsigned long 
 14496 ;;  exp             1    9[COMRAM] unsigned char 
 14497 ;; Return value:  Size  Location     Type
 14498 ;;                  4    0[COMRAM] unsigned char 
 14499 ;; Registers used:
 14500 ;;		wreg, status,2, status,0
 14501 ;; Tracked objects:
 14502 ;;		On entry : 0/0
 14503 ;;		On exit  : 0/0
 14504 ;;		Unchanged: 0/0
 14505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14506 ;;      Params:         4       0       0       0       0       0       0
 14507 ;;      Locals:         6       0       0       0       0       0       0
 14508 ;;      Temps:          4       0       0       0       0       0       0
 14509 ;;      Totals:        14       0       0       0       0       0       0
 14510 ;;Total ram usage:       14 bytes
 14511 ;; Hardware stack levels used:    1
 14512 ;; This function calls:
 14513 ;;		Nothing
 14514 ;; This function is called by:
 14515 ;;		_MQGetGasPercentage
 14516 ;;		_MQ_Read
 14517 ;;		_ADC_Read
 14518 ;;		_logf
 14519 ;;		_powf
 14520 ;; This function uses a non-reentrant model
 14521 ;;
 14522                           
 14523                           	psect	text55
 14524  0058D0                     __ptext55:
 14525                           	opt callstack 0
 14526  0058D0                     ___xxtofl:
 14527                           	opt callstack 21
 14528                           
 14529                           ;incstack = 0
 14530                           ;___xxtofl@sign stored from wreg
 14531  0058D0  6E09               	movwf	___xxtofl@sign^0,c
 14532  0058D2  5009               	movf	___xxtofl@sign^0,w,c
 14533  0058D4  A4D8               	btfss	status,2,c
 14534  0058D6  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 14535  0058D8  D01A               	goto	i2l1109
 14536  0058DA  C001  F005         	movff	___xxtofl@val,??___xxtofl
 14537  0058DE  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 14538  0058E2  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 14539  0058E6  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 14540  0058EA  1E05               	comf	??___xxtofl^0,f,c
 14541  0058EC  1E06               	comf	(??___xxtofl+1)^0,f,c
 14542  0058EE  1E07               	comf	(??___xxtofl+2)^0,f,c
 14543  0058F0  1E08               	comf	(??___xxtofl+3)^0,f,c
 14544  0058F2  2A05               	incf	??___xxtofl^0,f,c
 14545  0058F4  0E00               	movlw	0
 14546  0058F6  2206               	addwfc	(??___xxtofl+1)^0,f,c
 14547  0058F8  2207               	addwfc	(??___xxtofl+2)^0,f,c
 14548  0058FA  2208               	addwfc	(??___xxtofl+3)^0,f,c
 14549  0058FC  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 14550  005900  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 14551  005904  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 14552  005908  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 14553  00590C  D008               	goto	i2l4643
 14554  00590E                     i2l1109:
 14555  00590E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 14556  005912  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14557  005916  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14558  00591A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14559  00591E                     i2l4643:
 14560  00591E  5001               	movf	___xxtofl@val^0,w,c
 14561  005920  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 14562  005922  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 14563  005924  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 14564  005926  A4D8               	btfss	status,2,c
 14565  005928  D009               	goto	i2l4649
 14566  00592A  0E00               	movlw	0
 14567  00592C  6E01               	movwf	?___xxtofl^0,c
 14568  00592E  0E00               	movlw	0
 14569  005930  6E02               	movwf	(?___xxtofl+1)^0,c
 14570  005932  0E00               	movlw	0
 14571  005934  6E03               	movwf	(?___xxtofl+2)^0,c
 14572  005936  0E00               	movlw	0
 14573  005938  6E04               	movwf	(?___xxtofl+3)^0,c
 14574  00593A  0012               	return	
 14575  00593C                     i2l4649:
 14576  00593C  0E96               	movlw	150
 14577  00593E  6E0A               	movwf	___xxtofl@exp^0,c
 14578  005940  D006               	goto	i2l4653
 14579  005942                     i2l4651:
 14580  005942  2A0A               	incf	___xxtofl@exp^0,f,c
 14581  005944  90D8               	bcf	status,0,c
 14582  005946  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 14583  005948  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 14584  00594A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 14585  00594C  320B               	rrcf	___xxtofl@arg^0,f,c
 14586  00594E                     i2l4653:
 14587  00594E  0E00               	movlw	0
 14588  005950  140B               	andwf	___xxtofl@arg^0,w,c
 14589  005952  6E05               	movwf	??___xxtofl^0,c
 14590  005954  0E00               	movlw	0
 14591  005956  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 14592  005958  6E06               	movwf	(??___xxtofl+1)^0,c
 14593  00595A  0E00               	movlw	0
 14594  00595C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 14595  00595E  6E07               	movwf	(??___xxtofl+2)^0,c
 14596  005960  0EFE               	movlw	254
 14597  005962  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 14598  005964  6E08               	movwf	(??___xxtofl+3)^0,c
 14599  005966  5005               	movf	??___xxtofl^0,w,c
 14600  005968  1006               	iorwf	(??___xxtofl+1)^0,w,c
 14601  00596A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 14602  00596C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 14603  00596E  B4D8               	btfsc	status,2,c
 14604  005970  D00D               	goto	i2l1116
 14605  005972  D7E7               	goto	i2l4651
 14606  005974                     i2l4655:
 14607  005974  2A0A               	incf	___xxtofl@exp^0,f,c
 14608  005976  0E01               	movlw	1
 14609  005978  260B               	addwf	___xxtofl@arg^0,f,c
 14610  00597A  0E00               	movlw	0
 14611  00597C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 14612  00597E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 14613  005980  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 14614  005982  90D8               	bcf	status,0,c
 14615  005984  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 14616  005986  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 14617  005988  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 14618  00598A  320B               	rrcf	___xxtofl@arg^0,f,c
 14619  00598C                     i2l1116:
 14620  00598C  0E00               	movlw	0
 14621  00598E  140B               	andwf	___xxtofl@arg^0,w,c
 14622  005990  6E05               	movwf	??___xxtofl^0,c
 14623  005992  0E00               	movlw	0
 14624  005994  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 14625  005996  6E06               	movwf	(??___xxtofl+1)^0,c
 14626  005998  0E00               	movlw	0
 14627  00599A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 14628  00599C  6E07               	movwf	(??___xxtofl+2)^0,c
 14629  00599E  0EFF               	movlw	255
 14630  0059A0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 14631  0059A2  6E08               	movwf	(??___xxtofl+3)^0,c
 14632  0059A4  5005               	movf	??___xxtofl^0,w,c
 14633  0059A6  1006               	iorwf	(??___xxtofl+1)^0,w,c
 14634  0059A8  1007               	iorwf	(??___xxtofl+2)^0,w,c
 14635  0059AA  1008               	iorwf	(??___xxtofl+3)^0,w,c
 14636  0059AC  B4D8               	btfsc	status,2,c
 14637  0059AE  D007               	goto	i2l4663
 14638  0059B0  D7E1               	goto	i2l4655
 14639  0059B2                     i2l4661:
 14640  0059B2  060A               	decf	___xxtofl@exp^0,f,c
 14641  0059B4  90D8               	bcf	status,0,c
 14642  0059B6  360B               	rlcf	___xxtofl@arg^0,f,c
 14643  0059B8  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 14644  0059BA  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 14645  0059BC  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 14646  0059BE                     i2l4663:
 14647  0059BE  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 14648  0059C0  D003               	goto	i2u504_40
 14649  0059C2  0E02               	movlw	2
 14650  0059C4  600A               	cpfslt	___xxtofl@exp^0,c
 14651  0059C6  D7F5               	goto	i2l4661
 14652  0059C8                     i2u504_40:
 14653  0059C8  A00A               	btfss	___xxtofl@exp^0,0,c
 14654  0059CA  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 14655  0059CC  90D8               	bcf	status,0,c
 14656  0059CE  320A               	rrcf	___xxtofl@exp^0,f,c
 14657  0059D0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14658  0059D4  6A06               	clrf	(??___xxtofl+1)^0,c
 14659  0059D6  6A07               	clrf	(??___xxtofl+2)^0,c
 14660  0059D8  6A08               	clrf	(??___xxtofl+3)^0,c
 14661  0059DA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14662  0059DE  6A07               	clrf	(??___xxtofl+2)^0,c
 14663  0059E0  6A06               	clrf	(??___xxtofl+1)^0,c
 14664  0059E2  6A05               	clrf	??___xxtofl^0,c
 14665  0059E4  5005               	movf	??___xxtofl^0,w,c
 14666  0059E6  120B               	iorwf	___xxtofl@arg^0,f,c
 14667  0059E8  5006               	movf	(??___xxtofl+1)^0,w,c
 14668  0059EA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 14669  0059EC  5007               	movf	(??___xxtofl+2)^0,w,c
 14670  0059EE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 14671  0059F0  5008               	movf	(??___xxtofl+3)^0,w,c
 14672  0059F2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 14673  0059F4  5009               	movf	___xxtofl@sign^0,w,c
 14674  0059F6  A4D8               	btfss	status,2,c
 14675  0059F8  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 14676  0059FA  D001               	goto	i2l4679
 14677  0059FC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 14678  0059FE                     i2l4679:
 14679  0059FE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14680  005A02  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14681  005A06  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14682  005A0A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14683  005A0E  0012               	return		;funcret
 14684  005A10                     __end_of___xxtofl:
 14685                           	opt callstack 0
 14686                           
 14687 ;; *************** function ___flmul *****************
 14688 ;; Defined at:
 14689 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 14690 ;; Parameters:    Size  Location     Type
 14691 ;;  b               4   16[COMRAM] unsigned char 
 14692 ;;  a               4   20[COMRAM] unsigned char 
 14693 ;; Auto vars:     Size  Location     Type
 14694 ;;  prod            4   35[COMRAM] struct .
 14695 ;;  grs             4   31[COMRAM] unsigned long 
 14696 ;;  temp            2   39[COMRAM] struct .
 14697 ;;  bexp            1   30[COMRAM] unsigned char 
 14698 ;;  aexp            1   29[COMRAM] unsigned char 
 14699 ;;  sign            1   28[COMRAM] unsigned char 
 14700 ;; Return value:  Size  Location     Type
 14701 ;;                  4   16[COMRAM] unsigned char 
 14702 ;; Registers used:
 14703 ;;		wreg, status,2, status,0, prodl, prodh
 14704 ;; Tracked objects:
 14705 ;;		On entry : 0/0
 14706 ;;		On exit  : 0/0
 14707 ;;		Unchanged: 0/0
 14708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14709 ;;      Params:         8       0       0       0       0       0       0
 14710 ;;      Locals:        13       0       0       0       0       0       0
 14711 ;;      Temps:          4       0       0       0       0       0       0
 14712 ;;      Totals:        25       0       0       0       0       0       0
 14713 ;;Total ram usage:       25 bytes
 14714 ;; Hardware stack levels used:    1
 14715 ;; This function calls:
 14716 ;;		Nothing
 14717 ;; This function is called by:
 14718 ;;		_MQ_Read
 14719 ;;		_ADC_Read
 14720 ;;		_efgtoa
 14721 ;;		_logf
 14722 ;;		_powf
 14723 ;;		_scalbnf
 14724 ;;		_sqrtf
 14725 ;; This function uses a non-reentrant model
 14726 ;;
 14727                           
 14728                           	psect	text56
 14729  00464A                     __ptext56:
 14730                           	opt callstack 0
 14731  00464A                     ___flmul:
 14732                           	opt callstack 18
 14733                           
 14734                           ;incstack = 0
 14735  00464A  5014               	movf	(___flmul@b+3)^0,w,c
 14736  00464C  0B80               	andlw	128
 14737  00464E  6E1D               	movwf	___flmul@sign^0,c
 14738  004650  5014               	movf	(___flmul@b+3)^0,w,c
 14739  004652  2414               	addwf	(___flmul@b+3)^0,w,c
 14740  004654  6E1F               	movwf	___flmul@bexp^0,c
 14741  004656  BE13               	btfsc	(___flmul@b+2)^0,7,c
 14742  004658  801F               	bsf	___flmul@bexp^0,0,c
 14743  00465A  501F               	movf	___flmul@bexp^0,w,c
 14744  00465C  B4D8               	btfsc	status,2,c
 14745  00465E  D00D               	goto	i2l8729
 14746  004660  281F               	incf	___flmul@bexp^0,w,c
 14747  004662  A4D8               	btfss	status,2,c
 14748  004664  D008               	goto	i2l8727
 14749  004666  0E00               	movlw	0
 14750  004668  6E11               	movwf	___flmul@b^0,c
 14751  00466A  0E00               	movlw	0
 14752  00466C  6E12               	movwf	(___flmul@b+1)^0,c
 14753  00466E  0E00               	movlw	0
 14754  004670  6E13               	movwf	(___flmul@b+2)^0,c
 14755  004672  0E00               	movlw	0
 14756  004674  6E14               	movwf	(___flmul@b+3)^0,c
 14757  004676                     i2l8727:
 14758  004676  8E13               	bsf	(___flmul@b+2)^0,7,c
 14759  004678  D008               	goto	i2l8731
 14760  00467A                     i2l8729:
 14761  00467A  0E00               	movlw	0
 14762  00467C  6E11               	movwf	___flmul@b^0,c
 14763  00467E  0E00               	movlw	0
 14764  004680  6E12               	movwf	(___flmul@b+1)^0,c
 14765  004682  0E00               	movlw	0
 14766  004684  6E13               	movwf	(___flmul@b+2)^0,c
 14767  004686  0E00               	movlw	0
 14768  004688  6E14               	movwf	(___flmul@b+3)^0,c
 14769  00468A                     i2l8731:
 14770  00468A  5018               	movf	(___flmul@a+3)^0,w,c
 14771  00468C  0B80               	andlw	128
 14772  00468E  1A1D               	xorwf	___flmul@sign^0,f,c
 14773  004690  5018               	movf	(___flmul@a+3)^0,w,c
 14774  004692  2418               	addwf	(___flmul@a+3)^0,w,c
 14775  004694  6E1E               	movwf	___flmul@aexp^0,c
 14776  004696  BE17               	btfsc	(___flmul@a+2)^0,7,c
 14777  004698  801E               	bsf	___flmul@aexp^0,0,c
 14778  00469A  501E               	movf	___flmul@aexp^0,w,c
 14779  00469C  B4D8               	btfsc	status,2,c
 14780  00469E  D00D               	goto	i2l8747
 14781  0046A0  281E               	incf	___flmul@aexp^0,w,c
 14782  0046A2  A4D8               	btfss	status,2,c
 14783  0046A4  D008               	goto	i2l8745
 14784  0046A6  0E00               	movlw	0
 14785  0046A8  6E15               	movwf	___flmul@a^0,c
 14786  0046AA  0E00               	movlw	0
 14787  0046AC  6E16               	movwf	(___flmul@a+1)^0,c
 14788  0046AE  0E00               	movlw	0
 14789  0046B0  6E17               	movwf	(___flmul@a+2)^0,c
 14790  0046B2  0E00               	movlw	0
 14791  0046B4  6E18               	movwf	(___flmul@a+3)^0,c
 14792  0046B6                     i2l8745:
 14793  0046B6  8E17               	bsf	(___flmul@a+2)^0,7,c
 14794  0046B8  D008               	goto	i2l1068
 14795  0046BA                     i2l8747:
 14796  0046BA  0E00               	movlw	0
 14797  0046BC  6E15               	movwf	___flmul@a^0,c
 14798  0046BE  0E00               	movlw	0
 14799  0046C0  6E16               	movwf	(___flmul@a+1)^0,c
 14800  0046C2  0E00               	movlw	0
 14801  0046C4  6E17               	movwf	(___flmul@a+2)^0,c
 14802  0046C6  0E00               	movlw	0
 14803  0046C8  6E18               	movwf	(___flmul@a+3)^0,c
 14804  0046CA                     i2l1068:
 14805  0046CA  501E               	movf	___flmul@aexp^0,w,c
 14806  0046CC  B4D8               	btfsc	status,2,c
 14807  0046CE  D003               	goto	i2u1098_40
 14808  0046D0  501F               	movf	___flmul@bexp^0,w,c
 14809  0046D2  A4D8               	btfss	status,2,c
 14810  0046D4  D009               	goto	i2l8755
 14811  0046D6                     i2u1098_40:
 14812  0046D6  0E00               	movlw	0
 14813  0046D8  6E11               	movwf	?___flmul^0,c
 14814  0046DA  0E00               	movlw	0
 14815  0046DC  6E12               	movwf	(?___flmul+1)^0,c
 14816  0046DE  0E00               	movlw	0
 14817  0046E0  6E13               	movwf	(?___flmul+2)^0,c
 14818  0046E2  0E00               	movlw	0
 14819  0046E4  6E14               	movwf	(?___flmul+3)^0,c
 14820  0046E6  0012               	return	
 14821  0046E8                     i2l8755:
 14822  0046E8  5017               	movf	(___flmul@a+2)^0,w,c
 14823  0046EA  0211               	mulwf	___flmul@b^0,c
 14824  0046EC  CFF3 F028          	movff	prodl,___flmul@temp
 14825  0046F0  CFF4 F029          	movff	prodh,___flmul@temp+1
 14826  0046F4  5028               	movf	___flmul@temp^0,w,c
 14827  0046F6  6E20               	movwf	___flmul@grs^0,c
 14828  0046F8  6A21               	clrf	(___flmul@grs+1)^0,c
 14829  0046FA  6A22               	clrf	(___flmul@grs+2)^0,c
 14830  0046FC  6A23               	clrf	(___flmul@grs+3)^0,c
 14831  0046FE  5029               	movf	(___flmul@temp+1)^0,w,c
 14832  004700  6E24               	movwf	___flmul@prod^0,c
 14833  004702  6A25               	clrf	(___flmul@prod+1)^0,c
 14834  004704  6A26               	clrf	(___flmul@prod+2)^0,c
 14835  004706  6A27               	clrf	(___flmul@prod+3)^0,c
 14836  004708  5016               	movf	(___flmul@a+1)^0,w,c
 14837  00470A  0212               	mulwf	(___flmul@b+1)^0,c
 14838  00470C  CFF3 F028          	movff	prodl,___flmul@temp
 14839  004710  CFF4 F029          	movff	prodh,___flmul@temp+1
 14840  004714  5028               	movf	___flmul@temp^0,w,c
 14841  004716  2620               	addwf	___flmul@grs^0,f,c
 14842  004718  0E00               	movlw	0
 14843  00471A  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14844  00471C  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14845  00471E  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14846  004720  5029               	movf	(___flmul@temp+1)^0,w,c
 14847  004722  2624               	addwf	___flmul@prod^0,f,c
 14848  004724  0E00               	movlw	0
 14849  004726  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14850  004728  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14851  00472A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14852  00472C  5015               	movf	___flmul@a^0,w,c
 14853  00472E  0213               	mulwf	(___flmul@b+2)^0,c
 14854  004730  CFF3 F028          	movff	prodl,___flmul@temp
 14855  004734  CFF4 F029          	movff	prodh,___flmul@temp+1
 14856  004738  5028               	movf	___flmul@temp^0,w,c
 14857  00473A  2620               	addwf	___flmul@grs^0,f,c
 14858  00473C  0E00               	movlw	0
 14859  00473E  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14860  004740  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14861  004742  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14862  004744  5029               	movf	(___flmul@temp+1)^0,w,c
 14863  004746  2624               	addwf	___flmul@prod^0,f,c
 14864  004748  0E00               	movlw	0
 14865  00474A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14866  00474C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14867  00474E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14868  004750  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14869  004754  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14870  004758  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14871  00475C  6A20               	clrf	___flmul@grs^0,c
 14872  00475E  5015               	movf	___flmul@a^0,w,c
 14873  004760  0212               	mulwf	(___flmul@b+1)^0,c
 14874  004762  CFF3 F028          	movff	prodl,___flmul@temp
 14875  004766  CFF4 F029          	movff	prodh,___flmul@temp+1
 14876  00476A  5028               	movf	___flmul@temp^0,w,c
 14877  00476C  2620               	addwf	___flmul@grs^0,f,c
 14878  00476E  5029               	movf	(___flmul@temp+1)^0,w,c
 14879  004770  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14880  004772  0E00               	movlw	0
 14881  004774  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14882  004776  0E00               	movlw	0
 14883  004778  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14884  00477A  5016               	movf	(___flmul@a+1)^0,w,c
 14885  00477C  0211               	mulwf	___flmul@b^0,c
 14886  00477E  CFF3 F028          	movff	prodl,___flmul@temp
 14887  004782  CFF4 F029          	movff	prodh,___flmul@temp+1
 14888  004786  5028               	movf	___flmul@temp^0,w,c
 14889  004788  2620               	addwf	___flmul@grs^0,f,c
 14890  00478A  5029               	movf	(___flmul@temp+1)^0,w,c
 14891  00478C  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14892  00478E  0E00               	movlw	0
 14893  004790  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14894  004792  0E00               	movlw	0
 14895  004794  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14896  004796  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14897  00479A  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14898  00479E  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14899  0047A2  6A20               	clrf	___flmul@grs^0,c
 14900  0047A4  5015               	movf	___flmul@a^0,w,c
 14901  0047A6  0211               	mulwf	___flmul@b^0,c
 14902  0047A8  CFF3 F028          	movff	prodl,___flmul@temp
 14903  0047AC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14904  0047B0  5028               	movf	___flmul@temp^0,w,c
 14905  0047B2  2620               	addwf	___flmul@grs^0,f,c
 14906  0047B4  5029               	movf	(___flmul@temp+1)^0,w,c
 14907  0047B6  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14908  0047B8  0E00               	movlw	0
 14909  0047BA  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14910  0047BC  0E00               	movlw	0
 14911  0047BE  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14912  0047C0  5017               	movf	(___flmul@a+2)^0,w,c
 14913  0047C2  0212               	mulwf	(___flmul@b+1)^0,c
 14914  0047C4  CFF3 F028          	movff	prodl,___flmul@temp
 14915  0047C8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14916  0047CC  5028               	movf	___flmul@temp^0,w,c
 14917  0047CE  2624               	addwf	___flmul@prod^0,f,c
 14918  0047D0  5029               	movf	(___flmul@temp+1)^0,w,c
 14919  0047D2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14920  0047D4  0E00               	movlw	0
 14921  0047D6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14922  0047D8  0E00               	movlw	0
 14923  0047DA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14924  0047DC  5016               	movf	(___flmul@a+1)^0,w,c
 14925  0047DE  0213               	mulwf	(___flmul@b+2)^0,c
 14926  0047E0  CFF3 F028          	movff	prodl,___flmul@temp
 14927  0047E4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14928  0047E8  5028               	movf	___flmul@temp^0,w,c
 14929  0047EA  2624               	addwf	___flmul@prod^0,f,c
 14930  0047EC  5029               	movf	(___flmul@temp+1)^0,w,c
 14931  0047EE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14932  0047F0  0E00               	movlw	0
 14933  0047F2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14934  0047F4  0E00               	movlw	0
 14935  0047F6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14936  0047F8  5017               	movf	(___flmul@a+2)^0,w,c
 14937  0047FA  0213               	mulwf	(___flmul@b+2)^0,c
 14938  0047FC  CFF3 F028          	movff	prodl,___flmul@temp
 14939  004800  CFF4 F029          	movff	prodh,___flmul@temp+1
 14940  004804  5028               	movf	___flmul@temp^0,w,c
 14941  004806  6E19               	movwf	??___flmul^0,c
 14942  004808  5029               	movf	(___flmul@temp+1)^0,w,c
 14943  00480A  6E1A               	movwf	(??___flmul+1)^0,c
 14944  00480C  6A1B               	clrf	(??___flmul+2)^0,c
 14945  00480E  6A1C               	clrf	(??___flmul+3)^0,c
 14946  004810  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14947  004814  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14948  004818  C019  F01A         	movff	??___flmul,??___flmul+1
 14949  00481C  6A19               	clrf	??___flmul^0,c
 14950  00481E  5019               	movf	??___flmul^0,w,c
 14951  004820  2624               	addwf	___flmul@prod^0,f,c
 14952  004822  501A               	movf	(??___flmul+1)^0,w,c
 14953  004824  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14954  004826  501B               	movf	(??___flmul+2)^0,w,c
 14955  004828  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14956  00482A  501C               	movf	(??___flmul+3)^0,w,c
 14957  00482C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14958  00482E  C020  F019         	movff	___flmul@grs,??___flmul
 14959  004832  C021  F01A         	movff	___flmul@grs+1,??___flmul+1
 14960  004836  C022  F01B         	movff	___flmul@grs+2,??___flmul+2
 14961  00483A  C023  F01C         	movff	___flmul@grs+3,??___flmul+3
 14962  00483E  0E19               	movlw	25
 14963  004840  D005               	goto	i2u1099_40
 14964  004842                     i2u1099_45:
 14965  004842  90D8               	bcf	status,0,c
 14966  004844  321C               	rrcf	(??___flmul+3)^0,f,c
 14967  004846  321B               	rrcf	(??___flmul+2)^0,f,c
 14968  004848  321A               	rrcf	(??___flmul+1)^0,f,c
 14969  00484A  3219               	rrcf	??___flmul^0,f,c
 14970  00484C                     i2u1099_40:
 14971  00484C  2EE8               	decfsz	wreg,f,c
 14972  00484E  D7F9               	goto	i2u1099_45
 14973  004850  5019               	movf	??___flmul^0,w,c
 14974  004852  2624               	addwf	___flmul@prod^0,f,c
 14975  004854  501A               	movf	(??___flmul+1)^0,w,c
 14976  004856  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14977  004858  501B               	movf	(??___flmul+2)^0,w,c
 14978  00485A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14979  00485C  501C               	movf	(??___flmul+3)^0,w,c
 14980  00485E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14981  004860  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14982  004864  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14983  004868  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14984  00486C  6A20               	clrf	___flmul@grs^0,c
 14985  00486E  501E               	movf	___flmul@aexp^0,w,c
 14986  004870  C01F  F019         	movff	___flmul@bexp,??___flmul
 14987  004874  6A1A               	clrf	(??___flmul+1)^0,c
 14988  004876  2619               	addwf	??___flmul^0,f,c
 14989  004878  0E00               	movlw	0
 14990  00487A  221A               	addwfc	(??___flmul+1)^0,f,c
 14991  00487C  0E82               	movlw	130
 14992  00487E  2419               	addwf	??___flmul^0,w,c
 14993  004880  6E28               	movwf	___flmul@temp^0,c
 14994  004882  0EFF               	movlw	255
 14995  004884  201A               	addwfc	(??___flmul+1)^0,w,c
 14996  004886  6E29               	movwf	(___flmul@temp+1)^0,c
 14997  004888  D00F               	goto	i2l8803
 14998  00488A                     i2l8797:
 14999  00488A  90D8               	bcf	status,0,c
 15000  00488C  3624               	rlcf	___flmul@prod^0,f,c
 15001  00488E  3625               	rlcf	(___flmul@prod+1)^0,f,c
 15002  004890  3626               	rlcf	(___flmul@prod+2)^0,f,c
 15003  004892  3627               	rlcf	(___flmul@prod+3)^0,f,c
 15004  004894  BE23               	btfsc	(___flmul@grs+3)^0,7,c
 15005  004896  8024               	bsf	___flmul@prod^0,0,c
 15006  004898  90D8               	bcf	status,0,c
 15007  00489A  3620               	rlcf	___flmul@grs^0,f,c
 15008  00489C  3621               	rlcf	(___flmul@grs+1)^0,f,c
 15009  00489E  3622               	rlcf	(___flmul@grs+2)^0,f,c
 15010  0048A0  3623               	rlcf	(___flmul@grs+3)^0,f,c
 15011  0048A2  0628               	decf	___flmul@temp^0,f,c
 15012  0048A4  A0D8               	btfss	status,0,c
 15013  0048A6  0629               	decf	(___flmul@temp+1)^0,f,c
 15014  0048A8                     i2l8803:
 15015  0048A8  AE26               	btfss	(___flmul@prod+2)^0,7,c
 15016  0048AA  D7EF               	goto	i2l8797
 15017  0048AC  0E00               	movlw	0
 15018  0048AE  6E1E               	movwf	___flmul@aexp^0,c
 15019  0048B0  AE23               	btfss	(___flmul@grs+3)^0,7,c
 15020  0048B2  D017               	goto	i2l1077
 15021  0048B4  0EFF               	movlw	255
 15022  0048B6  1420               	andwf	___flmul@grs^0,w,c
 15023  0048B8  6E19               	movwf	??___flmul^0,c
 15024  0048BA  0EFF               	movlw	255
 15025  0048BC  1421               	andwf	(___flmul@grs+1)^0,w,c
 15026  0048BE  6E1A               	movwf	(??___flmul+1)^0,c
 15027  0048C0  0EFF               	movlw	255
 15028  0048C2  1422               	andwf	(___flmul@grs+2)^0,w,c
 15029  0048C4  6E1B               	movwf	(??___flmul+2)^0,c
 15030  0048C6  0E7F               	movlw	127
 15031  0048C8  1423               	andwf	(___flmul@grs+3)^0,w,c
 15032  0048CA  6E1C               	movwf	(??___flmul+3)^0,c
 15033  0048CC  5019               	movf	??___flmul^0,w,c
 15034  0048CE  101A               	iorwf	(??___flmul+1)^0,w,c
 15035  0048D0  101B               	iorwf	(??___flmul+2)^0,w,c
 15036  0048D2  101C               	iorwf	(??___flmul+3)^0,w,c
 15037  0048D4  B4D8               	btfsc	status,2,c
 15038  0048D6  D003               	goto	i2l1078
 15039  0048D8                     i2u1103_40:
 15040  0048D8  0E01               	movlw	1
 15041  0048DA  6E1E               	movwf	___flmul@aexp^0,c
 15042  0048DC  D002               	goto	i2l1077
 15043  0048DE                     i2l1078:
 15044  0048DE  B024               	btfsc	___flmul@prod^0,0,c
 15045  0048E0  D7FB               	goto	i2u1103_40
 15046  0048E2                     i2l1077:
 15047  0048E2  501E               	movf	___flmul@aexp^0,w,c
 15048  0048E4  B4D8               	btfsc	status,2,c
 15049  0048E6  D01F               	goto	i2l8823
 15050  0048E8  0E01               	movlw	1
 15051  0048EA  2624               	addwf	___flmul@prod^0,f,c
 15052  0048EC  0E00               	movlw	0
 15053  0048EE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 15054  0048F0  2226               	addwfc	(___flmul@prod+2)^0,f,c
 15055  0048F2  2227               	addwfc	(___flmul@prod+3)^0,f,c
 15056  0048F4  A027               	btfss	(___flmul@prod+3)^0,0,c
 15057  0048F6  D017               	goto	i2l8823
 15058  0048F8  C024  F019         	movff	___flmul@prod,??___flmul
 15059  0048FC  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 15060  004900  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 15061  004904  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 15062  004908  341C               	rlcf	(??___flmul+3)^0,w,c
 15063  00490A  321C               	rrcf	(??___flmul+3)^0,f,c
 15064  00490C  321B               	rrcf	(??___flmul+2)^0,f,c
 15065  00490E  321A               	rrcf	(??___flmul+1)^0,f,c
 15066  004910  3219               	rrcf	??___flmul^0,f,c
 15067  004912  C019  F024         	movff	??___flmul,___flmul@prod
 15068  004916  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 15069  00491A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 15070  00491E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 15071  004922  4A28               	infsnz	___flmul@temp^0,f,c
 15072  004924  2A29               	incf	(___flmul@temp+1)^0,f,c
 15073  004926                     i2l8823:
 15074  004926  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 15075  004928  D00D               	goto	i2l8827
 15076  00492A  5029               	movf	(___flmul@temp+1)^0,w,c
 15077  00492C  E103               	bnz	i2u1107_40
 15078  00492E  2828               	incf	___flmul@temp^0,w,c
 15079  004930  A0D8               	btfss	status,0,c
 15080  004932  D008               	goto	i2l8827
 15081  004934                     i2u1107_40:
 15082  004934  0E00               	movlw	0
 15083  004936  6E24               	movwf	___flmul@prod^0,c
 15084  004938  0E00               	movlw	0
 15085  00493A  6E25               	movwf	(___flmul@prod+1)^0,c
 15086  00493C  0E80               	movlw	128
 15087  00493E  6E26               	movwf	(___flmul@prod+2)^0,c
 15088  004940  0E7F               	movlw	127
 15089  004942  D020               	goto	L15
 15090  004944                     i2l8827:
 15091  004944  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 15092  004946  D005               	goto	i2u1108_40
 15093  004948  5029               	movf	(___flmul@temp+1)^0,w,c
 15094  00494A  E10E               	bnz	i2l1085
 15095  00494C  0428               	decf	___flmul@temp^0,w,c
 15096  00494E  B0D8               	btfsc	status,0,c
 15097  004950  D00B               	goto	i2l1085
 15098  004952                     i2u1108_40:
 15099  004952  0E00               	movlw	0
 15100  004954  6E24               	movwf	___flmul@prod^0,c
 15101  004956  0E00               	movlw	0
 15102  004958  6E25               	movwf	(___flmul@prod+1)^0,c
 15103  00495A  0E00               	movlw	0
 15104  00495C  6E26               	movwf	(___flmul@prod+2)^0,c
 15105  00495E  0E00               	movlw	0
 15106  004960  6E27               	movwf	(___flmul@prod+3)^0,c
 15107  004962  0E00               	movlw	0
 15108  004964  6E1D               	movwf	___flmul@sign^0,c
 15109  004966  D00F               	goto	i2l8839
 15110  004968                     i2l1085:
 15111  004968  C028  F01F         	movff	___flmul@temp,___flmul@bexp
 15112  00496C  0EFF               	movlw	255
 15113  00496E  1624               	andwf	___flmul@prod^0,f,c
 15114  004970  0EFF               	movlw	255
 15115  004972  1625               	andwf	(___flmul@prod+1)^0,f,c
 15116  004974  0E7F               	movlw	127
 15117  004976  1626               	andwf	(___flmul@prod+2)^0,f,c
 15118  004978  0E00               	movlw	0
 15119  00497A  1627               	andwf	(___flmul@prod+3)^0,f,c
 15120  00497C  B01F               	btfsc	___flmul@bexp^0,0,c
 15121  00497E  8E26               	bsf	(___flmul@prod+2)^0,7,c
 15122  004980  90D8               	bcf	status,0,c
 15123  004982  301F               	rrcf	___flmul@bexp^0,w,c
 15124  004984                     L15:
 15125  004984  6E27               	movwf	(___flmul@prod+3)^0,c
 15126  004986                     i2l8839:
 15127  004986  501D               	movf	___flmul@sign^0,w,c
 15128  004988  1227               	iorwf	(___flmul@prod+3)^0,f,c
 15129  00498A  C024  F011         	movff	___flmul@prod,?___flmul
 15130  00498E  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 15131  004992  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 15132  004996  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 15133  00499A  0012               	return		;funcret
 15134  00499C                     __end_of___flmul:
 15135                           	opt callstack 0
 15136                           
 15137 ;; *************** function ___fldiv *****************
 15138 ;; Defined at:
 15139 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 15140 ;; Parameters:    Size  Location     Type
 15141 ;;  b               4   49[COMRAM] unsigned char 
 15142 ;;  a               4   53[COMRAM] unsigned char 
 15143 ;; Auto vars:     Size  Location     Type
 15144 ;;  grs             4   68[COMRAM] unsigned long 
 15145 ;;  rem             4   61[COMRAM] unsigned long 
 15146 ;;  new_exp         2   66[COMRAM] short 
 15147 ;;  aexp            1   73[COMRAM] unsigned char 
 15148 ;;  bexp            1   72[COMRAM] unsigned char 
 15149 ;;  sign            1   65[COMRAM] unsigned char 
 15150 ;; Return value:  Size  Location     Type
 15151 ;;                  4   49[COMRAM] unsigned char 
 15152 ;; Registers used:
 15153 ;;		wreg, status,2, status,0
 15154 ;; Tracked objects:
 15155 ;;		On entry : 0/0
 15156 ;;		On exit  : 0/0
 15157 ;;		Unchanged: 0/0
 15158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15159 ;;      Params:         8       0       0       0       0       0       0
 15160 ;;      Locals:        13       0       0       0       0       0       0
 15161 ;;      Temps:          4       0       0       0       0       0       0
 15162 ;;      Totals:        25       0       0       0       0       0       0
 15163 ;;Total ram usage:       25 bytes
 15164 ;; Hardware stack levels used:    1
 15165 ;; This function calls:
 15166 ;;		Nothing
 15167 ;; This function is called by:
 15168 ;;		_MQGetPercentage
 15169 ;;		_MQ_Read
 15170 ;;		_ADC_Read
 15171 ;;		_efgtoa
 15172 ;;		_logf
 15173 ;;		_powf
 15174 ;; This function uses a non-reentrant model
 15175 ;;
 15176                           
 15177                           	psect	text57
 15178  004CA8                     __ptext57:
 15179                           	opt callstack 0
 15180  004CA8                     ___fldiv:
 15181                           	opt callstack 18
 15182                           
 15183                           ;incstack = 0
 15184  004CA8  5035               	movf	(___fldiv@b+3)^0,w,c
 15185  004CAA  0B80               	andlw	128
 15186  004CAC  6E42               	movwf	___fldiv@sign^0,c
 15187  004CAE  5035               	movf	(___fldiv@b+3)^0,w,c
 15188  004CB0  2435               	addwf	(___fldiv@b+3)^0,w,c
 15189  004CB2  6E49               	movwf	___fldiv@bexp^0,c
 15190  004CB4  BE34               	btfsc	(___fldiv@b+2)^0,7,c
 15191  004CB6  8049               	bsf	___fldiv@bexp^0,0,c
 15192  004CB8  5049               	movf	___fldiv@bexp^0,w,c
 15193  004CBA  B4D8               	btfsc	status,2,c
 15194  004CBC  D00D               	goto	i2l8979
 15195  004CBE  2849               	incf	___fldiv@bexp^0,w,c
 15196  004CC0  A4D8               	btfss	status,2,c
 15197  004CC2  D008               	goto	i2l8975
 15198  004CC4  0E00               	movlw	0
 15199  004CC6  6E32               	movwf	___fldiv@b^0,c
 15200  004CC8  0E00               	movlw	0
 15201  004CCA  6E33               	movwf	(___fldiv@b+1)^0,c
 15202  004CCC  0E00               	movlw	0
 15203  004CCE  6E34               	movwf	(___fldiv@b+2)^0,c
 15204  004CD0  0E00               	movlw	0
 15205  004CD2  6E35               	movwf	(___fldiv@b+3)^0,c
 15206  004CD4                     i2l8975:
 15207  004CD4  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15208  004CD6  D006               	goto	L16
 15209  004CD8                     i2l8979:
 15210  004CD8  0E00               	movlw	0
 15211  004CDA  6E32               	movwf	___fldiv@b^0,c
 15212  004CDC  0E00               	movlw	0
 15213  004CDE  6E33               	movwf	(___fldiv@b+1)^0,c
 15214  004CE0  0E00               	movlw	0
 15215  004CE2  6E34               	movwf	(___fldiv@b+2)^0,c
 15216  004CE4                     L16:
 15217  004CE4  0E00               	movlw	0
 15218  004CE6  6E35               	movwf	(___fldiv@b+3)^0,c
 15219  004CE8  5039               	movf	(___fldiv@a+3)^0,w,c
 15220  004CEA  0B80               	andlw	128
 15221  004CEC  1A42               	xorwf	___fldiv@sign^0,f,c
 15222  004CEE  5039               	movf	(___fldiv@a+3)^0,w,c
 15223  004CF0  2439               	addwf	(___fldiv@a+3)^0,w,c
 15224  004CF2  6E4A               	movwf	___fldiv@aexp^0,c
 15225  004CF4  BE38               	btfsc	(___fldiv@a+2)^0,7,c
 15226  004CF6  804A               	bsf	___fldiv@aexp^0,0,c
 15227  004CF8  504A               	movf	___fldiv@aexp^0,w,c
 15228  004CFA  B4D8               	btfsc	status,2,c
 15229  004CFC  D00D               	goto	i2l8999
 15230  004CFE  284A               	incf	___fldiv@aexp^0,w,c
 15231  004D00  A4D8               	btfss	status,2,c
 15232  004D02  D008               	goto	i2l8995
 15233  004D04  0E00               	movlw	0
 15234  004D06  6E36               	movwf	___fldiv@a^0,c
 15235  004D08  0E00               	movlw	0
 15236  004D0A  6E37               	movwf	(___fldiv@a+1)^0,c
 15237  004D0C  0E00               	movlw	0
 15238  004D0E  6E38               	movwf	(___fldiv@a+2)^0,c
 15239  004D10  0E00               	movlw	0
 15240  004D12  6E39               	movwf	(___fldiv@a+3)^0,c
 15241  004D14                     i2l8995:
 15242  004D14  8E38               	bsf	(___fldiv@a+2)^0,7,c
 15243  004D16  D006               	goto	L17
 15244  004D18                     i2l8999:
 15245  004D18  0E00               	movlw	0
 15246  004D1A  6E36               	movwf	___fldiv@a^0,c
 15247  004D1C  0E00               	movlw	0
 15248  004D1E  6E37               	movwf	(___fldiv@a+1)^0,c
 15249  004D20  0E00               	movlw	0
 15250  004D22  6E38               	movwf	(___fldiv@a+2)^0,c
 15251  004D24                     L17:
 15252  004D24  0E00               	movlw	0
 15253  004D26  6E39               	movwf	(___fldiv@a+3)^0,c
 15254  004D28  5036               	movf	___fldiv@a^0,w,c
 15255  004D2A  1037               	iorwf	(___fldiv@a+1)^0,w,c
 15256  004D2C  1038               	iorwf	(___fldiv@a+2)^0,w,c
 15257  004D2E  1039               	iorwf	(___fldiv@a+3)^0,w,c
 15258  004D30  A4D8               	btfss	status,2,c
 15259  004D32  D017               	goto	i2l9013
 15260  004D34  0E00               	movlw	0
 15261  004D36  6E32               	movwf	___fldiv@b^0,c
 15262  004D38  0E00               	movlw	0
 15263  004D3A  6E33               	movwf	(___fldiv@b+1)^0,c
 15264  004D3C  0E00               	movlw	0
 15265  004D3E  6E34               	movwf	(___fldiv@b+2)^0,c
 15266  004D40  0E00               	movlw	0
 15267  004D42  6E35               	movwf	(___fldiv@b+3)^0,c
 15268  004D44  0E80               	movlw	128
 15269  004D46  1234               	iorwf	(___fldiv@b+2)^0,f,c
 15270  004D48  0E7F               	movlw	127
 15271  004D4A  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15272  004D4C                     i2l9007:
 15273  004D4C  5042               	movf	___fldiv@sign^0,w,c
 15274  004D4E  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15275  004D50  C032  F032         	movff	___fldiv@b,?___fldiv
 15276  004D54  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 15277  004D58  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 15278  004D5C  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 15279  004D60  0012               	return	
 15280  004D62                     i2l9013:
 15281  004D62  5049               	movf	___fldiv@bexp^0,w,c
 15282  004D64  A4D8               	btfss	status,2,c
 15283  004D66  D009               	goto	i2l9021
 15284  004D68  0E00               	movlw	0
 15285  004D6A  6E32               	movwf	?___fldiv^0,c
 15286  004D6C  0E00               	movlw	0
 15287  004D6E  6E33               	movwf	(?___fldiv+1)^0,c
 15288  004D70  0E00               	movlw	0
 15289  004D72  6E34               	movwf	(?___fldiv+2)^0,c
 15290  004D74  0E00               	movlw	0
 15291  004D76  6E35               	movwf	(?___fldiv+3)^0,c
 15292  004D78  0012               	return	
 15293  004D7A                     i2l9021:
 15294  004D7A  504A               	movf	___fldiv@aexp^0,w,c
 15295  004D7C  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 15296  004D80  6A3B               	clrf	(??___fldiv+1)^0,c
 15297  004D82  5E3A               	subwf	??___fldiv^0,f,c
 15298  004D84  0E00               	movlw	0
 15299  004D86  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 15300  004D88  0E7F               	movlw	127
 15301  004D8A  243A               	addwf	??___fldiv^0,w,c
 15302  004D8C  6E43               	movwf	___fldiv@new_exp^0,c
 15303  004D8E  0E00               	movlw	0
 15304  004D90  203B               	addwfc	(??___fldiv+1)^0,w,c
 15305  004D92  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15306  004D94  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 15307  004D98  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 15308  004D9C  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 15309  004DA0  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 15310  004DA4  0E00               	movlw	0
 15311  004DA6  6E32               	movwf	___fldiv@b^0,c
 15312  004DA8  0E00               	movlw	0
 15313  004DAA  6E33               	movwf	(___fldiv@b+1)^0,c
 15314  004DAC  0E00               	movlw	0
 15315  004DAE  6E34               	movwf	(___fldiv@b+2)^0,c
 15316  004DB0  0E00               	movlw	0
 15317  004DB2  6E35               	movwf	(___fldiv@b+3)^0,c
 15318  004DB4  0E00               	movlw	0
 15319  004DB6  6E45               	movwf	___fldiv@grs^0,c
 15320  004DB8  0E00               	movlw	0
 15321  004DBA  6E46               	movwf	(___fldiv@grs+1)^0,c
 15322  004DBC  0E00               	movlw	0
 15323  004DBE  6E47               	movwf	(___fldiv@grs+2)^0,c
 15324  004DC0  0E00               	movlw	0
 15325  004DC2  6E48               	movwf	(___fldiv@grs+3)^0,c
 15326  004DC4  0E00               	movlw	0
 15327  004DC6  6E4A               	movwf	___fldiv@aexp^0,c
 15328  004DC8  D028               	goto	i2l1038
 15329  004DCA                     i2l9031:
 15330  004DCA  504A               	movf	___fldiv@aexp^0,w,c
 15331  004DCC  B4D8               	btfsc	status,2,c
 15332  004DCE  D011               	goto	i2l9039
 15333  004DD0  90D8               	bcf	status,0,c
 15334  004DD2  363E               	rlcf	___fldiv@rem^0,f,c
 15335  004DD4  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15336  004DD6  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15337  004DD8  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15338  004DDA  90D8               	bcf	status,0,c
 15339  004DDC  3632               	rlcf	___fldiv@b^0,f,c
 15340  004DDE  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15341  004DE0  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15342  004DE2  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15343  004DE4  BE48               	btfsc	(___fldiv@grs+3)^0,7,c
 15344  004DE6  8032               	bsf	___fldiv@b^0,0,c
 15345  004DE8  90D8               	bcf	status,0,c
 15346  004DEA  3645               	rlcf	___fldiv@grs^0,f,c
 15347  004DEC  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15348  004DEE  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15349  004DF0  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15350  004DF2                     i2l9039:
 15351  004DF2  5036               	movf	___fldiv@a^0,w,c
 15352  004DF4  5C3E               	subwf	___fldiv@rem^0,w,c
 15353  004DF6  5037               	movf	(___fldiv@a+1)^0,w,c
 15354  004DF8  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15355  004DFA  5038               	movf	(___fldiv@a+2)^0,w,c
 15356  004DFC  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15357  004DFE  5039               	movf	(___fldiv@a+3)^0,w,c
 15358  004E00  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15359  004E02  A0D8               	btfss	status,0,c
 15360  004E04  D009               	goto	i2l9045
 15361  004E06  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15362  004E08  5036               	movf	___fldiv@a^0,w,c
 15363  004E0A  5E3E               	subwf	___fldiv@rem^0,f,c
 15364  004E0C  5037               	movf	(___fldiv@a+1)^0,w,c
 15365  004E0E  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15366  004E10  5038               	movf	(___fldiv@a+2)^0,w,c
 15367  004E12  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15368  004E14  5039               	movf	(___fldiv@a+3)^0,w,c
 15369  004E16  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15370  004E18                     i2l9045:
 15371  004E18  2A4A               	incf	___fldiv@aexp^0,f,c
 15372  004E1A                     i2l1038:
 15373  004E1A  0E19               	movlw	25
 15374  004E1C  644A               	cpfsgt	___fldiv@aexp^0,c
 15375  004E1E  D7D5               	goto	i2l9031
 15376  004E20  503E               	movf	___fldiv@rem^0,w,c
 15377  004E22  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15378  004E24  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15379  004E26  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15380  004E28  B4D8               	btfsc	status,2,c
 15381  004E2A  D011               	goto	i2l9057
 15382  004E2C  8045               	bsf	___fldiv@grs^0,0,c
 15383  004E2E  D00F               	goto	i2l9057
 15384  004E30                     i2l9051:
 15385  004E30  90D8               	bcf	status,0,c
 15386  004E32  3632               	rlcf	___fldiv@b^0,f,c
 15387  004E34  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15388  004E36  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15389  004E38  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15390  004E3A  BE48               	btfsc	(___fldiv@grs+3)^0,7,c
 15391  004E3C  8032               	bsf	___fldiv@b^0,0,c
 15392  004E3E  90D8               	bcf	status,0,c
 15393  004E40  3645               	rlcf	___fldiv@grs^0,f,c
 15394  004E42  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15395  004E44  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15396  004E46  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15397  004E48  0643               	decf	___fldiv@new_exp^0,f,c
 15398  004E4A  A0D8               	btfss	status,0,c
 15399  004E4C  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15400  004E4E                     i2l9057:
 15401  004E4E  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15402  004E50  D7EF               	goto	i2l9051
 15403  004E52  0E00               	movlw	0
 15404  004E54  6E4A               	movwf	___fldiv@aexp^0,c
 15405  004E56  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15406  004E58  D017               	goto	i2l1049
 15407  004E5A  0EFF               	movlw	255
 15408  004E5C  1445               	andwf	___fldiv@grs^0,w,c
 15409  004E5E  6E3A               	movwf	??___fldiv^0,c
 15410  004E60  0EFF               	movlw	255
 15411  004E62  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15412  004E64  6E3B               	movwf	(??___fldiv+1)^0,c
 15413  004E66  0EFF               	movlw	255
 15414  004E68  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15415  004E6A  6E3C               	movwf	(??___fldiv+2)^0,c
 15416  004E6C  0E7F               	movlw	127
 15417  004E6E  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15418  004E70  6E3D               	movwf	(??___fldiv+3)^0,c
 15419  004E72  503A               	movf	??___fldiv^0,w,c
 15420  004E74  103B               	iorwf	(??___fldiv+1)^0,w,c
 15421  004E76  103C               	iorwf	(??___fldiv+2)^0,w,c
 15422  004E78  103D               	iorwf	(??___fldiv+3)^0,w,c
 15423  004E7A  B4D8               	btfsc	status,2,c
 15424  004E7C  D003               	goto	i2l1050
 15425  004E7E                     i2u1159_40:
 15426  004E7E  0E01               	movlw	1
 15427  004E80  6E4A               	movwf	___fldiv@aexp^0,c
 15428  004E82  D002               	goto	i2l1049
 15429  004E84                     i2l1050:
 15430  004E84  B032               	btfsc	___fldiv@b^0,0,c
 15431  004E86  D7FB               	goto	i2u1159_40
 15432  004E88                     i2l1049:
 15433  004E88  504A               	movf	___fldiv@aexp^0,w,c
 15434  004E8A  B4D8               	btfsc	status,2,c
 15435  004E8C  D01F               	goto	i2l9077
 15436  004E8E  0E01               	movlw	1
 15437  004E90  2632               	addwf	___fldiv@b^0,f,c
 15438  004E92  0E00               	movlw	0
 15439  004E94  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15440  004E96  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15441  004E98  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15442  004E9A  A035               	btfss	(___fldiv@b+3)^0,0,c
 15443  004E9C  D017               	goto	i2l9077
 15444  004E9E  C032  F03A         	movff	___fldiv@b,??___fldiv
 15445  004EA2  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15446  004EA6  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15447  004EAA  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15448  004EAE  343D               	rlcf	(??___fldiv+3)^0,w,c
 15449  004EB0  323D               	rrcf	(??___fldiv+3)^0,f,c
 15450  004EB2  323C               	rrcf	(??___fldiv+2)^0,f,c
 15451  004EB4  323B               	rrcf	(??___fldiv+1)^0,f,c
 15452  004EB6  323A               	rrcf	??___fldiv^0,f,c
 15453  004EB8  C03A  F032         	movff	??___fldiv,___fldiv@b
 15454  004EBC  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15455  004EC0  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15456  004EC4  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15457  004EC8  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15458  004ECA  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15459  004ECC                     i2l9077:
 15460  004ECC  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15461  004ECE  D010               	goto	i2l9081
 15462  004ED0  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15463  004ED2  E103               	bnz	i2u1163_40
 15464  004ED4  2843               	incf	___fldiv@new_exp^0,w,c
 15465  004ED6  A0D8               	btfss	status,0,c
 15466  004ED8  D00B               	goto	i2l9081
 15467  004EDA                     i2u1163_40:
 15468  004EDA  0E00               	movlw	0
 15469  004EDC  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15470  004EDE  6843               	setf	___fldiv@new_exp^0,c
 15471  004EE0  0E00               	movlw	0
 15472  004EE2  6E32               	movwf	___fldiv@b^0,c
 15473  004EE4  0E00               	movlw	0
 15474  004EE6  6E33               	movwf	(___fldiv@b+1)^0,c
 15475  004EE8  0E00               	movlw	0
 15476  004EEA  6E34               	movwf	(___fldiv@b+2)^0,c
 15477  004EEC  0E00               	movlw	0
 15478  004EEE  6E35               	movwf	(___fldiv@b+3)^0,c
 15479  004EF0                     i2l9081:
 15480  004EF0  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15481  004EF2  D005               	goto	i2u1164_40
 15482  004EF4  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15483  004EF6  E111               	bnz	i2l9085
 15484  004EF8  0443               	decf	___fldiv@new_exp^0,w,c
 15485  004EFA  B0D8               	btfsc	status,0,c
 15486  004EFC  D00E               	goto	i2l9085
 15487  004EFE                     i2u1164_40:
 15488  004EFE  0E00               	movlw	0
 15489  004F00  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15490  004F02  0E00               	movlw	0
 15491  004F04  6E43               	movwf	___fldiv@new_exp^0,c
 15492  004F06  0E00               	movlw	0
 15493  004F08  6E32               	movwf	___fldiv@b^0,c
 15494  004F0A  0E00               	movlw	0
 15495  004F0C  6E33               	movwf	(___fldiv@b+1)^0,c
 15496  004F0E  0E00               	movlw	0
 15497  004F10  6E34               	movwf	(___fldiv@b+2)^0,c
 15498  004F12  0E00               	movlw	0
 15499  004F14  6E35               	movwf	(___fldiv@b+3)^0,c
 15500  004F16  0E00               	movlw	0
 15501  004F18  6E42               	movwf	___fldiv@sign^0,c
 15502  004F1A                     i2l9085:
 15503  004F1A  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15504  004F1E  A049               	btfss	___fldiv@bexp^0,0,c
 15505  004F20  D002               	goto	i2l9091
 15506  004F22  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15507  004F24  D001               	goto	i2l9093
 15508  004F26                     i2l9091:
 15509  004F26  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15510  004F28                     i2l9093:
 15511  004F28  90D8               	bcf	status,0,c
 15512  004F2A  3049               	rrcf	___fldiv@bexp^0,w,c
 15513  004F2C  6E35               	movwf	(___fldiv@b+3)^0,c
 15514  004F2E  D70E               	goto	i2l9007
 15515  004F30                     __end_of___fldiv:
 15516                           	opt callstack 0
 15517                           
 15518                           	psect	rparam
 15519  0000                     
 15520                           	psect	temp
 15521  00007E                     btemp:
 15522                           	opt callstack 0
 15523  00007E                     	ds	1
 15524  0000                     int$flags	set	btemp
 15525  0000                     wtemp8	set	btemp+1
 15526  0000                     ttemp5	set	btemp+1
 15527  0000                     ttemp6	set	btemp+4
 15528  0000                     ttemp7	set	btemp+8
 15529                           tosu	equ	0xFFF
 15530                           tosh	equ	0xFFE
 15531                           tosl	equ	0xFFD
 15532                           stkptr	equ	0xFFC
 15533                           pclatu	equ	0xFFB
 15534                           pclath	equ	0xFFA
 15535                           pcl	equ	0xFF9
 15536                           tblptru	equ	0xFF8
 15537                           tblptrh	equ	0xFF7
 15538                           tblptrl	equ	0xFF6
 15539                           tablat	equ	0xFF5
 15540                           prodh	equ	0xFF4
 15541                           prodl	equ	0xFF3
 15542                           indf0	equ	0xFEF
 15543                           postinc0	equ	0xFEE
 15544                           postdec0	equ	0xFED
 15545                           preinc0	equ	0xFEC
 15546                           plusw0	equ	0xFEB
 15547                           fsr0h	equ	0xFEA
 15548                           fsr0l	equ	0xFE9
 15549                           wreg	equ	0xFE8
 15550                           indf1	equ	0xFE7
 15551                           postinc1	equ	0xFE6
 15552                           postdec1	equ	0xFE5
 15553                           preinc1	equ	0xFE4
 15554                           plusw1	equ	0xFE3
 15555                           fsr1h	equ	0xFE2
 15556                           fsr1l	equ	0xFE1
 15557                           bsr	equ	0xFE0
 15558                           indf2	equ	0xFDF
 15559                           postinc2	equ	0xFDE
 15560                           postdec2	equ	0xFDD
 15561                           preinc2	equ	0xFDC
 15562                           plusw2	equ	0xFDB
 15563                           fsr2h	equ	0xFDA
 15564                           fsr2l	equ	0xFD9
 15565                           status	equ	0xFD8


Data Sizes:
    Strings     85
    Constant    148
    Data        57
    BSS         246
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     125
    BANK0           128    120     126
    BANK1           256    250     252
    BANK2           256     39     234
    BANK3           256     18     118
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_18(CODE[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), r(BANK3[100]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[80]), r(BANK3[100]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_4(CODE[43]), STR_3(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    S1568_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    memset@dest	PTR void  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    memset@s	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_4(CODE[43]), STR_3(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_4(CODE[43]), STR_3(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 43
		 -> STR_4(CODE[43]), STR_3(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), r(BANK3[100]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK2[2]), r(BANK3[100]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK2[2]), stoa@nuls(COMRAM[7]), r(BANK3[100]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> r(BANK3[100]), 

    Send2Lcd@Lcd	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[6]), STR_1(CODE[8]), 

    MQ_Read@values	PTR  size(2) Largest target is 12
		 -> value(BANK2[12]), 

    MQGetPercentage@pcurve	PTR  size(2) Largest target is 12
		 -> SmokeCurve(BANK2[12]), COCurve(BANK2[12]), LPGCurve(BANK2[12]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK2[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    _atoi->_isspace
    _MQGetPercentage->___fltol
    _powf->_sqrtf
    _sqrtf->___flge
    ___flge->___flsub
    _scalbnf->___flmul
    _logf->___fldiv
    ___flsub->___flmul
    ___fltol->_powf
    _ADC_Read->___fldiv
    ___flmul->___fladd
    ___fldiv->___flsub

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    _Hi_ISR->_MQ_Read
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _MQ_Read->_MQGetGasPercentage
    _MQGetGasPercentage->_MQGetPercentage
    _MQGetPercentage->___fltol
    _powf->_logf
    ___fltol->_powf

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _MQGetPercentage->_powf
    ___fltol->_powf

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    _Hi_ISR->_sprintf

Critical Paths under _main in BANK3

    _SYSTEM_Initialize->_LCD_init
    _LCD_init->_Send2Lcd
    _Send2Lcd->_Cmd
    _Send2Lcd->_Data

Critical Paths under _Lo_ISR in BANK3

    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2200
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2200
                     _ADC_Initialize
                           _LCD_init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                        _buzzer_init
 ---------------------------------------------------------------------------------
 (2) _buzzer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             1     1      0    2200
                                             17 BANK3      1     1      0
                                _Cmd
                           _Send2Lcd
 ---------------------------------------------------------------------------------
 (3) _Send2Lcd                                             3     1      2    1401
                                             14 BANK3      3     1      2
                                _Cmd
                               _Data
 ---------------------------------------------------------------------------------
 (4) _Data                                                 3     1      2     179
                                             11 BANK3      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Cmd                                                  3     1      2     799
                                             11 BANK3      3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Lo_ISR                                               5     5      0     969
                                              6 BANK3      5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (6) _MyusartRead                                          0     0      0     969
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     938
                                              0 BANK3      6     2      4
 ---------------------------------------------------------------------------------
 (7) _UART_Write                                           1     1      0      31
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Hi_ISR                                              11    11      0  421061
                                             28 BANK2     11    11      0
                           _ADC_Read
                            _MQ_Read
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (9) _sprintf                                             28    10     18  101200
                                              0 BANK2     28    10     18
                           _ADC_Read (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (10) _vfprintf                                            8     2      6  100282
                                            114 BANK0      2     2      0
                                            244 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (11) _vfpfcnvrt                                          47    41      6   99532
                                             90 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (12) _strncmp                                            11     5      6     601
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (12) _stoa                                               22    18      4    3446
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (12) _efgtoa                                             68    61      7   87213
                                             78 BANK0     12     5      7
                                            188 BANK1     56    56      0
                            ___awdiv
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
                          i2___awmod
 ---------------------------------------------------------------------------------
 (13) i2___awmod                                           6     2      4     698
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _tolower                                             8     6      2    1372
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (13) _isupper                                             6     4      2     649
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) _strcpy                                             10     6      4    1248
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (13) _pad                                                11     5      6    6274
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (13) _strlen                                              4     2      2     392
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _fputs                                               7     3      4    2530
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (13) _fputc                                               9     5      4    1912
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (14) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (13) _floorf                                             20    16      4     890
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fpclassifyf                                      14    10      4     482
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___fleq                                             12     4      8     912
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (13) ___awdiv                                             8     4      4     842
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) _atoi                                               15    13      2    1569
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (13) _isspace                                             7     5      2     259
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (12) _isdigit                                             6     4      2     283
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     462
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) _memset                                              12     6      6    1175
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (9) _MQ_Read                                             14    12      2  289270
                                            106 BANK0     14    12      2
                 _MQGetGasPercentage
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (10) _MQGetGasPercentage                                 10     4      6  259548
                                             96 BANK0     10     4      6
                    _MQGetPercentage
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (11) _MQGetPercentage                                    18    12      6  257662
                                             78 BANK0     18    12      6
                            ___fladd
                            ___fldiv
                            ___flsub
                            ___fltol
                               _logf
                               _powf
 ---------------------------------------------------------------------------------
 (12) _powf                                              205   197      8  144272
                                            110 COMRAM     9     9      0
                                             66 BANK0      8     0      8
                                              0 BANK1    188   188      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                              _fabsf
                               _logf (ARG)
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (13) _sqrtf                                              49    45      4   39419
                                             61 COMRAM    49    45      4
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (14) _nanf                                                8     4      4      99
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) ___flge                                             12     4      8    1856
                                             49 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (13) _scalbnf                                            18    12      6   22432
                                             41 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (13) _fabsf                                               8     4      4     123
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) ___flneg                                             4     0      4     408
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (12) _logf                                               76    72      4   68198
                                             74 COMRAM    10     6      4
                                              0 BANK0     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (13) ___flsub                                             8     0      8   22582
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___fladd                                            16     8      8   14070
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (13) ___fltol                                            10     6      4     792
                                            119 COMRAM     6     6      0
                                             74 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                               _logf (ARG)
                               _powf (ARG)
 ---------------------------------------------------------------------------------
 (9) _ADC_Read                                            11     7      4   29416
                                             74 COMRAM    11     7      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (10) ___xxtofl                                           14    10      4     854
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___flmul                                            25    17      8   21512
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fldiv                                            25    17      8    6800
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _LCD_init
       _Cmd
       _Send2Lcd
         _Cmd
         _Data
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _buzzer_init

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod

 _Hi_ISR (ROOT)
   _ADC_Read
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _MQ_Read
     _MQGetGasPercentage
       _MQGetPercentage
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           _logf (ARG)
             ___fladd
             ___fldiv
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _powf (ARG)
             ___fladd
             ___fldiv
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
             _fabsf
             _logf (ARG)
               ___fladd
               ___fldiv
                 ___fladd (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl
             _scalbnf (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             _sqrtf (ARG)
               ___fladd
               ___flge
                 ___fladd (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               _nanf
         _logf
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl
         _powf
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _fabsf
           _logf (ARG)
             ___fladd
             ___fldiv
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _scalbnf (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
           _sqrtf (ARG)
             ___fladd
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
               ___xxtofl (ARG)
             _nanf
       ___xxtofl
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _memset
   _sprintf
     _ADC_Read (ARG)
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             _logf (ARG)
               ___fladd
               ___fldiv
                 ___fladd (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl
             _powf (ARG)
               ___fladd
               ___fldiv
                 ___fladd (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl
               _fabsf
               _logf (ARG)
                 ___fladd
                 ___fldiv
                   ___fladd (ARG)
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___flmul (ARG)
                       ___fladd (ARG)
                       ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl
               _scalbnf (ARG)
                 ___flmul
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               _sqrtf (ARG)
                 ___fladd
                 ___flge
                   ___fladd (ARG)
                   ___flmul (ARG)
                     ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___flmul (ARG)
                       ___fladd (ARG)
                       ___xxtofl (ARG)
                 ___flmul
                   ___fladd (ARG)
                   ___xxtofl (ARG)
                 _nanf
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
           i2___awmod
         _fputc
           _putch
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
           _strlen
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     12      76      11       46.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     27      EA       9       91.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FA      FC       7       98.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80     78      7E       5       98.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7D       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     357      15        0.0%
DATA                 0      0     357       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 19 21:03:30 2019

                   ___fldiv@aexp 004A                     ___fldiv@bexp 0049  
                              _r 0300                     ___fldiv@sign 0042  
                             _L1 0659                               _L2 0655  
                             _L3 0651                               _L4 064D  
                             _L5 0649                               _L6 0645  
                             _P1 0641                               _P2 063D  
                             _P3 0639                               _P4 0635  
                             _P5 0631                     ___awdiv@sign 0006  
                             _Ro 0293                               _bp 0681  
                             _co 0214                               _cp 061D  
                             bsr 000FE0              ___wmul@multiplicand 0003  
                    __CFG_BORV$3 000000                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l238 6A10  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                            _Lg1 0675                              _Lg2 0671  
                            _Lg3 066D                              _Lg4 0669  
                            _Cmd 686A                              _lg2 062D  
                            _pad 61C4                              _lpg 0218  
                            _ovt 0621                     ___awmod@sign 0369  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ___flmul@aexp 001E                     ___flmul@bexp 001F  
                   ___flmul@sign 001D                     ___flmul@temp 0028  
                   ___flmul@prod 0024                  _MQGetPercentage 5C6E  
                   __CFG_LVP$OFF 000000                             ?_Cmd 036F  
                   ___fltol@exp1 007D                     __CFG_WDT$OFF 000000  
                           ?_pad 0011                             STR_1 06C9  
                           STR_2 06D1                             STR_3 06C0  
                           STR_4 0695                             STR_5 06D7  
                           STR_6 06DF                             STR_9 06DB  
                           _CREN 007D5C                             _LATD 000F8C  
                           _RCIF 007CF5                             i1l98 0040  
                           _TMR1 000FCE                     __CFG_WDTPS$1 000000  
                           _Data 683A                             _dbuf 0226  
                           _cp_h 0691                             _cp_l 068D  
                           _dp_h 0609                             _dp_l 0601  
                           _atoi 5790                             _main 6A0C  
                           _nanf 6978                             _huge 0661  
                           _logf 3710                             _prec 00F8  
                           _nout 021E                             _powf 06EC  
                           pad@i 0018                  __end_of_MQ_Read 5136  
                           pad@p 0015                             _tiny 065D  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001A  
                           fsr2l 000FD9                             _stoa 5B42  
                           btemp 007E                 __end_of_ADC_Read 6082  
                  ___fpclassifyf 5E54                             prodh 000FF4  
                           prodl 000FF3                             start 0058  
                ___fldiv@new_exp 0043                     _tolower$1758 000D  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                          ??_Cmd 0371                            ??_pad 0017  
                          ?_Data 036F   __size_of_OSCILLATOR_Initialize 0008  
               __end_of_LCD_init 63E8    __end_of_OSCILLATOR_Initialize 6A0C  
                          l10345 6728                            l10349 6744  
                  ___fltol@sign1 007C                            ?_atoi 0008  
                __end_of___fladd 4CA8                            ?_main 0001  
                          ?_nanf 0001                            ?_logf 004B  
                __end_of___fldiv 4F30                  __end_of___awdiv 636C  
                __end_of___flneg 6928                            _ADRES 000FC3  
                          STR_10 06E3                            STR_13 06E7  
                          STR_15 06E7                            STR_18 06C8  
                __end_of___awmod 645A                  __end_of___flmul 499C  
                          ?_powf 00C2                  __end_of___flsub 6716  
                __end_of___fltol 5FDC                            ?_stoa 000A  
                ___awdiv@divisor 0003                            u13907 684E  
                          u13917 685E                            u13927 6874  
                          _IRCF0 007E9C                            u13937 687E  
                          _IRCF1 007E9D                            _IRCF2 007E9E  
                          u13947 688E                            u13867 6374  
                          u13877 638E                            u13887 63C0  
                          u13897 6844                            i2l300 61F4  
                          i2l165 5FF2                            i2l341 30A0  
                          i2l405 5BA8                            i2l159 4F3C  
                          i2l249 560E                            i2l367 3398  
                          i2l719 5E18                  ___awdiv@counter 0005  
                          i2l983 4ADE                            i2l984 4ABC  
                          i2l999 4BB0                            _RCREG 000FAE  
                   vfpfcnvrt@fmt 00DC                            _TRISA 000F92  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TXREG 000FAD                    __CFG_PWRT$OFF 000000  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000       __end_of_MQGetGasPercentage 5790  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                    ?_UART_Write 0001                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                          _lg2_h 0629                            _lg2_l 0625  
                          _fabsf 6806                   __CFG_EBTRB$OFF 000000  
                          _flags 00FA                            _cycle 0297  
                          _count 0222                            _errno 021C  
                          _ivln2 0619                            _fputc 6124  
                          _fputs 6796                  __end_of_isdigit 68FA  
                __end_of_ivln2_h 068D                  __end_of_ivln2_l 0619  
                          _two24 0665                  __end_of_scalbnf 531C  
                          _value 0276             _MQGetPercentage$2030 00DC  
           _MQGetPercentage$2028 00D4             _MQGetPercentage$2029 00D8  
                          atoi@n 0015                            pad@fp 0011  
                          atoi@s 0008                            _smoke 0210  
                          _width 0220                            _putch 6A16  
                          _sqrtf 3E02                            nanf@s 0001  
                          nanf@u 0005                  __end_of_isspace 6796  
                          logf@R 0080          __end_of_TMR1_Initialize 69B6  
                          logf@f 00BA                            logf@k 009C  
                          logf@s 00A6                            logf@u 00B6  
                          logf@w 00AE                            logf@x 004B  
                          logf@z 00AA                  __end_of_isupper 68CA  
                          tablat 000FF5                            powf@i 012C  
                          powf@j 01AC                            powf@k 01A0  
                          powf@n 0188                            powf@r 014C  
                          powf@s 0154                            powf@t 01B0  
                          powf@u 0174                            powf@v 0178  
                          powf@w 0144                            powf@x 00C2  
                          powf@y 00C6                            powf@z 01B4  
                          plusw1 000FE3                            plusw2 000FDB  
                          stoa@i 0016                            stoa@l 001E  
                          stoa@p 001C                            stoa@s 000C  
                          stoa@w 0018                            ttemp5 007F  
                          ttemp6 0082                            ttemp7 0086  
                          status 000FD8                            wtemp8 007F  
                __end_of_sprintf 65E8                   ?___fpclassifyf 0001  
                __end_of_tolower 6686                  __end_of_strncmp 6124  
                   ?_buzzer_init 0001               __size_ofi2___awmod 0070  
                 __CFG_PBADEN$ON 000000                     __end_of_Data 686A  
                __initialization 64CA                     __end_of_cp_h 0695  
                   __end_of_cp_l 0691                     __end_of_dp_h 0611  
                   __end_of_dp_l 0609                     __end_of_atoi 58D0  
                   __end_of_main 6A12                     __end_of_nanf 699A  
                   __end_of_huge 0665                     __end_of_logf 3E02  
                   __end_of_powf 2D58                     __end_of_tiny 0661  
                   __end_of_stoa 5C6E                           ??_Data 0371  
               __end_of_Send2Lcd 6758          __end_of_MQGetPercentage 5D84  
                         ??_atoi 000A                           ??_main 0376  
                         ??_nanf 0005                           ??_logf 004F  
                         ??_powf 006F                           ??_stoa 000E  
                  __activetblptr 000002                      Send2Lcd@Adr 0374  
                    Send2Lcd@Lcd 0372                           ?_fabsf 0001  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         ?_fputc 0001                           ?_fputs 000A  
                      ??_MQ_Read 00EC                 ___awdiv@dividend 0001  
                         ?_putch 0001                           ?_sqrtf 003E  
                         _GAS_CO 01FA                    MQ_Read@values 00EA  
                         i2l1008 4C16                           i2l1009 4C12  
                         i2l1050 4E84                           i2l1116 598C  
                         i2l1109 590E                           i2l1038 4E1A  
                         i2l1049 4E88                           i2l1068 46CA  
                         i2l1164 58C6                           i2l1085 4968  
                         i2l1077 48E2                           i2l1078 48DE  
                         i2l1336 093A                           i2l1176 5432  
                         i2l1513 667C                           i2l1346 09A0  
                         i2l1443 2D02                           i2l1356 0A3C  
                         i2l1480 40BE                           i2l1473 3FB2  
                         i2l1482 4194                           i2l1477 4006  
                         i2l6111 5A54                           i2l6131 5B38  
                         i2l6123 5AF0                           i2l6125 5B22  
                         i2l6117 5AB8                           i2l4651 5942  
                         i2l4643 591E                           i2l4661 59B2  
                         i2l4653 594E                           i2l4663 59BE  
                         i2l4655 5974                           i2l4649 593C  
                         i2l9021 4D7A                           i2l9013 4D62  
                         i2l9031 4DCA                           i2l9007 4D4C  
                         i2l4679 59FE                           i2l9201 5F9A  
                         i2l9121 630C                           i2l9051 4E30  
                         i2l9115 62FC                           i2l9045 4E18  
                         i2l8501 6932                           i2l9039 4DF2  
                         i2l9215 5FCA                           i2l9207 5FA2  
                         i2l9127 6322                           i2l9143 6354  
                         i2l8503 6936                           i2l9081 4EF0  
                         i2l9057 4E4E                           i2l9209 5FAE  
                         i2l9129 632A                           i2l9091 4F26  
                         i2l8603 4ACA                           i2l9171 6916  
                         i2l9243 3EA6                           i2l9227 678E  
                         i2l9147 6362                           i2l9139 634A  
                         i2l9163 62E4                           i2l9155 6292  
                         i2l9093 4F28                           i2l9085 4F1A  
                         i2l9077 4ECC                           i2l9181 5F40  
                         i2l8605 4ACE                           i2l8525 49C8  
                         i2l9405 3884                           i2l9413 38E2  
                         i2l9341 52A6                           i2l9325 51F6  
                         i2l9261 3F70                           i2l8703 4C8A  
                         i2l9159 62C6                           i2l8705 4C8C  
                         i2l8561 4A34                           i2l8553 4A14  
                         i2l8529 49CC                           i2l9425 3924  
                         i2l9265 3F86                           i2l9249 3EEE  
                         i2l9257 3F1A                           i2l9521 09DC  
                         i2l9361 647A                           i2l8803 48A8  
                         i2l8731 468A                           i2l8627 4B24  
                         i2l8619 4B02                           i2l9419 3900  
                         i2l9283 40D8                           i2l9603 0EBC  
                         i2l9531 0A4E                           i2l8483 613C  
                         i2l9197 5F8A                           i2l8629 4B28  
                         i2l8637 4B3A                           i2l8549 4A10  
                         i2l9277 4052                           i2l9517 09B2  
                         i2l9509 0972                           i2l9525 09F0  
                         i2l8901 5ED6                           i2l8493 67A0  
                         i2l9381 64C0                           i2l9373 64A8  
                         i2l9365 6488                           i2l9357 646E  
                         i2l8823 4926                           i2l8727 4676  
                         i2l8655 4BD4                           i2l8671 4BF4  
                         i2l8647 4BA0                           i2l8591 4A70  
                         i2l9607 0F26                           i2l9367 6490  
                         i2l8745 46B6                           i2l8729 467A  
                         i2l8665 4BEA                           i2l9297 416C  
                         i2l9633 11FC                           i2l9545 0AC8  
                         i2l9537 0A92                           i2l9473 077E  
                         i2l8497 67B6                           i2l8913 65F8  
                         i2l9377 64B2                           i2l8827 4944  
                         i2l8755 46E8                           i2l8747 46BA  
                         i2l8691 4C5C                           i2l9563 0C26  
                         i2l9571 0C68                           i2l8907 5F16  
                         i2l8931 5394                           i2l8853 5DEC  
                         i2l9645 1282                           i2l9581 0D06  
                         i2l9557 0B66                           i2l8941 5454  
                         i2l8839 4986                           i2l9399 37FC  
                         i2l8863 5E50                           i2l9911 2D22  
                         i2l9655 1320                           i2l9567 0C56  
                         i2l9495 083A                           i2l9487 0806  
                         i2l9479 07A4                           i2l8871 61DE  
                         i2l8857 5E02                           i2l8849 5DB8  
                         i2l9833 23D2                           i2l9841 249A  
                         i2l9825 233A                           i2l9817 2252  
                         i2l9665 1376                           i2l9593 0DBE  
                         i2l9585 0D22                           i2l8945 5492  
                         i2l8881 6216                           i2l8699 4C82  
                         i2l9659 134A                           i2l8875 61EC  
                         i2l8797 488A                           i2l9853 2686  
                         i2l9597 0E28                           i2l8949 54C0  
                         i2l8885 6244                           i2l8877 61FE  
                         i2l9941 2DA2                           i2l8975 4CD4  
                         i2l9855 26BA                           i2l8897 5ECC  
                         i2l9953 2DD4                           i2l9961 2DEA  
                         i2l8995 4D14                           i2l8979 4CD8  
                         i2l9971 2E58                           i2l9973 2E70  
                         i2l8999 4D18                           i2l9975 2E7A  
                         i2l9979 2EA0                           i2l9989 2F0E  
                         i2l9997 2F28                 __end_of___xxtofl 5A10  
                         _Hi_ISR 0008                           _Lo_ISR 0018  
                 __CFG_XINST$OFF 000000                     vfprintf@cfmt 00F2  
                         ___flge 5D84                           ___fleq 625E  
            __size_of_UART_Write 000E                        ??___fladd 0009  
                         ___wmul 6952                           _ln2_hi 067D  
                      ??___fldiv 003A                        ??___awdiv 0005  
                         _ln2_lo 0679                        ??___flneg 0005  
                 __CFG_STVREN$ON 000000                        ??___awmod 0368  
                      ??___flmul 0019                        ??___flsub 0032  
                      ??___fltol 0078                           _efgtoa 2D58  
                ADC_Read@channel 004B                           _lenStr 0224  
                         _floorf 531C                           fabsf@u 0005  
                         fabsf@x 0001                           _memset 5A10  
                ADC_Read@digital 0050                           clear_0 6508  
                         clear_1 6514                 ___awdiv@quotient 0007  
                ___awmod@divisor 0366                  ___awmod@counter 0368  
                         pad@buf 0013                           _strcpy 65E8  
                         _strlen 6928                       _SmokeCurve 029F  
                         logf@t1 0084                           logf@t2 0088  
                         logf@dk 00A2                           logf@ix 00BE  
                         fputc@c 0001                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ??_isdigit 0003                __end_ofi2___awmod 64CA  
                      ??_scalbnf 0030                  ___fpclassifyf@e 0009  
                      ?_ADC_Read 004B                  ___fpclassifyf@u 000B  
                ___fpclassifyf@x 0001                     __mediumconst 0000  
                      ??_isspace 0003                           powf@s2 018C  
                         powf@t1 0180                           powf@t2 011C  
                         tblptrh 000FF7                        ??_isupper 0003  
                         tblptrl 000FF6                           powf@y1 0128  
                         tblptru 000FF8                           powf@ax 0170  
                         powf@is 0194                           powf@hx 0160  
                         powf@hy 017C                           powf@ix 01A8  
                         powf@iy 0190                           powf@sn 0184  
                         stoa@cp 001A                           stoa@fp 000A  
                         putch@c 0001                 __end_of_vfprintf 6594  
                 i2___awmod@sign 0006                           sqrtf@i 004F  
                         sqrtf@m 0063                           sqrtf@q 0057  
                         sqrtf@r 0067                           sqrtf@s 004B  
                         sqrtf@t 005B                           sqrtf@x 003E  
                         sqrtf@z 005F                        ??_sprintf 007E  
                      ??_tolower 0009                        ??_strncmp 0007  
                     ___flge@ff1 0032                       ___flge@ff2 0036  
                ??___fpclassifyf 0005                 ?_TMR1_Initialize 0001  
                   ___xxtofl@arg 000B                     ___xxtofl@exp 000A  
              _SYSTEM_Initialize 69B6                     ___xxtofl@val 0001  
                     ___fleq@ff1 0001                       ___fleq@ff2 0005  
                     __accesstop 0080          __end_of__initialization 6528  
                     ___flneg@f1 0001                        ?_LCD_init 0001  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
                     ___fltol@f1 00CA                   __pcstackCOMRAM 0001  
                   __pidataBANK1 6A12                     __pidataBANK2 67CE  
                  __end_of_lg2_h 062D                    __end_of_lg2_l 0629  
            ??_SYSTEM_Initialize 0376                    __end_of_fabsf 683A  
                  __end_of_ivln2 061D                    __end_of_fputc 61C4  
                  __end_of_fputs 67CE                    __end_of_two24 0669  
                  __end_of_putch 6A18                    __end_of_sqrtf 4228  
                     __end_of_L1 065D                       __end_of_L2 0659  
                     __end_of_L3 0655                       __end_of_L4 0651  
                     __end_of_L5 064D                       __end_of_L6 0649  
                     __end_of_P1 0645                       __end_of_P2 0641  
                     __end_of_P3 063D                       __end_of_P4 0639  
                     __end_of_P5 0635                       __end_of_bp 0689  
                     __end_of_cp 0621                 ?_MQGetPercentage 00CE  
                     ??_ADC_Read 004F                    ??_MyusartRead 036A  
       MQGetGasPercentage@gas_id 00E4                          ??_fabsf 0005  
                        ??_fputc 0005        __end_of_SYSTEM_Initialize 69D0  
                        ??_fputs 000E                          ??_putch 0001  
                        ??_sqrtf 0042                       __pbssBANK0 00F8  
                     __pbssBANK2 0200                       __pbssBANK3 0300  
                      ?_Send2Lcd 0372                       ??_LCD_init 0375  
                        ?_Hi_ISR 0001                          ?_Lo_ISR 0001  
                     _efgtoa$982 01C4                       _efgtoa$976 01C0  
                     _efgtoa$977 01C2                       _efgtoa$986 01C6  
                     _efgtoa$987 01C8                       _efgtoa$988 01CA  
           __size_of_buzzer_init 0002                          ?___flge 0032  
                        ?___fleq 0001                   MQ_Read@digital 00EE  
                        ?___wmul 0001                          ?_efgtoa 00CE  
                        ?_floorf 004B                          ?_memset 0001  
        __size_of_ADC_Initialize 0012                          ?_strcpy 0001  
                        ?_strlen 0001                          _GAS_LPG 00FC  
                        i1l10551 6438                          i1l10543 6418  
                        i1l10535 63FE                          i1l10545 6420  
                        i1l10483 69FA                          i1l10555 6442  
                        i1l10539 640A                          i1l10559 6450  
                        i1l10655 003C                          i2l10003 2F6C  
                        i2l10101 3390                          i2l10013 3030  
                        i2l10103 33B2                          i2l10007 2FA6  
                        i2l10201 366E                          i2l10025 3086  
                        i2l10009 2FF4                          i2l10115 3436  
                        i2l10043 3106                          i2l10035 30B2  
                        i2l10061 314E                          i2l10045 310C  
                        i2l10029 30AA                          i2l10127 3466  
                        i2l10135 3486                          i2l10143 34AA  
                        i2l10151 3542                          i2l10071 3188  
                        i2l10055 312A                          i2l10217 36D2  
                        i2l10065 315E                          i2l10321 60BA  
                        i2l10401 4476                          i2l10163 3594  
                        i2l10251 5BD8                          i2l10181 35EC  
                        i2l10093 3338                          i2l10261 5C1C  
                        i2l10237 5B6C                          i2l10191 3642  
                        i2l10087 32FA                          i2l10079 327E  
                        i2l10255 5BF6                          i2l10247 5BC0  
                        i2l10319 60AC                          i2l10431 45F0  
                        i2l10273 57A2                          i2l10265 5C38  
                        i2l10425 45B4                          i2l10417 4546  
                        i2l10441 4616                          i2l10515 577E  
                        i2l10507 5710                          i2l10291 5804  
                        i2l10283 57EC                          i2l10275 57A6  
                        i2l10179 35E2                          i2l10435 45FC  
                        i2l10371 4308                          i2l10523 654A  
                        i2l10293 580A                          i2l10269 5C50  
                        i2l10373 4316                          i2l10525 6578  
                        i2l10295 5832                          i2l10289 57FC  
                        i2l10369 42EA                          i2l10299 5866  
                        i2l10397 444C                          i2l10389 43F0  
                        i2l10671 551E                          i2l10497 56A2  
                        i2l10687 5604                        ?___xxtofl 0001  
                        _COCurve 02AB                     ??_UART_Write 0364  
             __size_of_vfpfcnvrt 0422                          _MQ_Read 4F30  
            __end_of_MyusartRead 66D0                       ??_Send2Lcd 0374  
                __size_of_Hi_ISR 5632               _MQGetGasPercentage 563A  
                __size_of_Lo_ISR 0040                          __Hparam 0000  
                        __Lparam 0000                  __size_of___flge 00D0  
                __size_of___fleq 008A                          ___fladd 499C  
                        ___fldiv 4CA8                          ___awdiv 62E8  
                        ___flneg 68FA                          ___awmod 63E8  
                        ___flmul 464A                          ___flsub 66D0  
                        ___fltol 5F20              ?_MQGetGasPercentage 00E0  
                __size_of___wmul 0026               __end_of_UART_Write 6A04  
                      ?_vfprintf 01F4                     __psmallconst 0600  
                __size_of_efgtoa 09B8                  __size_of_floorf 01B6  
                        __pcinit 64CA                  __size_of_memset 0132  
                        __ramtop 0600                        Data@Value 036F  
                        __ptext0 6A0C                          __ptext1 69B6  
                        __ptext2 6A14                          __ptext3 699A  
                        __ptext4 69D0                          __ptext5 6A04  
                        __ptext6 636C                          __ptext7 6716  
                        __ptext8 683A                          __ptext9 686A  
                      _GAS_SMOKE 0299                  __size_of_strcpy 0052  
                __size_of_strlen 002A                        _T1CONbits 000FCD  
                   __size_of_Cmd 0030            _OSCILLATOR_Initialize 6A04  
                   __size_of_pad 009A                          _isdigit 68CA  
                        _ivln2_h 0689                          _ivln2_l 0615  
                     ??___xxtofl 0005                          _scalbnf 5136  
               ___awmod@dividend 0364         ??_PIN_MANAGER_Initialize 036F  
                        _isspace 6758                          _isupper 689A  
                        efgtoa@c 00D4                          efgtoa@d 01D4  
                        efgtoa@e 01EC                          efgtoa@f 00D0  
                        efgtoa@g 01E6                          efgtoa@h 01DE  
                        efgtoa@i 01EA                          efgtoa@l 01E2  
                        efgtoa@m 01D0                          efgtoa@n 01EE  
                        efgtoa@p 01D8                          efgtoa@t 01CC  
                        efgtoa@u 01F0                          efgtoa@w 01DB  
                        atoi@neg 000E             ??_MQGetGasPercentage 007E  
     __size_of_SYSTEM_Initialize 001A                          _sprintf 6594  
                        _tolower 663A                          _strncmp 6082  
                 __pintcode_body 54D2             end_of_initialization 6528  
                        floorf@e 0059                          floorf@m 0055  
                        floorf@u 005B                          floorf@x 004B  
                        fputc@fp 0003                          memset@c 0003  
                        memset@k 0009                          memset@n 0005  
                        memset@s 000B                    __Lmediumconst 0000  
                        int_func 54D2                          fputs@fp 000C  
                      i1u1375_20 6424                        i2u1103_40 48D8  
                      i2u1200_40 51A2                        i2u1201_40 51EE  
                      i2u1050_40 68C2                        i2u1107_40 4934  
                      i2u1131_40 5362                        i2u1051_40 68C4  
                      i2u1123_45 5EF0                        i2u1131_45 5358  
                      i2u1108_40 4952                        i2u1220_40 395C  
                      i2u1212_40 3756                        i2u1124_40 5F0E  
                      i2u1132_40 5382                        i2u1220_45 3952  
                      i2u1061_40 4A92                        i2u1213_40 3774  
                      i2u1141_40 68F2                        i2u1125_40 5F10  
                      i2u1045_40 6134                        i2u1213_45 376A  
                      i2u1205_45 52B8                        i2u1062_40 4AA2  
                      i2u1214_40 3784                        i2u1230_40 08EC  
                      i2u1142_40 68F4                        i2u1126_40 6630  
                      i2u1302_40 3126                        i2u1230_45 08E2  
                      i2u1134_45 53AC                        i2u1134_46 53B2  
                      i2u1134_47 53C0                        i2u1126_47 6626  
                      i2u1063_40 4AA4                        i2u1223_40 07BA  
                      i2u1119_40 5E92                        i2u1047_40 617C  
                      i2u1119_45 5E88                        i2u1216_40 381A  
                      i2u1224_40 07D0                        i2u1136_40 5412  
                      i2u1128_40 6662                        i2u1216_45 3810  
                      i2u1136_45 5408                        i2u1081_40 4C0C  
                      i2u1129_40 6664                        i2u1209_40 6494  
                      i2u1066_40 4AE6                        i2u1242_40 0B00  
                      i2u1138_40 5472                        i2u1330_41 5B4C  
                      i2u1138_45 5468                        i2u1163_40 4EDA  
                      i2u1164_40 4EFE                        i2u1260_40 1338  
                      i2u1244_40 0B1E                        i2u1340_40 57E8  
                      i2u1244_41 0B1C                        i2u1228_45 085E  
                      i2u1228_46 0864                        i2u1228_47 0872  
                      i2u1181_40 5FB4                        i2u1253_40 0D50  
                      i2u1325_40 3658                        i2u1261_45 155C  
                      i2u1229_45 08A2                        i2u1229_46 08A8  
                      i2u1229_47 08B6                        i2u1342_40 5896  
                      i2u1174_40 62E0                        i2u1350_40 6100  
                      i2u1270_45 2534                        i2u1270_46 253A  
                      i2u1270_47 2548                        i2u1159_40 4E7E  
                      i2u1087_40 4C68                        i2u1079_40 4BF8  
                      i2u1343_40 5898                        i2u1327_40 36BA  
                      i2u1319_40 356E                        i2u1335_40 5BEC  
                      i2u1271_45 2586                        i2u1271_46 258C  
                      i2u1271_47 259A                        i2u1176_40 5F2E  
                      i2u1256_40 0E52                        i2u1184_40 678A  
                      i2u1328_40 36BC                        i2u1280_40 2DC2  
                      i2u1272_45 25C8                        i2u1272_46 25CE  
                      i2u1272_47 25DC                        i2u1177_40 5F5E  
                      i2u1257_40 121C                        i2u1169_40 632E  
                      i2u1177_45 5F54                        i2u1273_45 264C  
                      i2u1273_46 2652                        i2u1273_47 2660  
                      i2u1098_40 46D6                        i2u1186_40 3EB8  
                      i2u1338_40 5C64                        i2u1362_40 44FA  
                      i2u1258_45 1296                        i2u1258_46 129C  
                      i2u1258_47 12AA                        i2u1099_40 484C  
                      i2u1259_40 131C                        i2u1283_40 2E2E  
                      i2u1363_40 44FC                        i2u1355_40 4350  
                      i2u1099_45 4842                        i2u1275_45 2C7A  
                      i2u1292_40 3058                        i2u1284_40 2E30  
                      i2u1356_40 4352                        i2u1276_45 2CAE  
                      i2u1268_45 24C8                        i2u1276_46 2CB4  
                      i2u1268_46 24CE                        i2u1276_47 2CC2  
                      i2u1268_47 24DC                        i2u1277_40 2CD4  
                      i2u1357_40 435E                        i2u1189_45 3F2E  
                      i2u1189_46 3F34                        i2u1189_47 3F42  
                      i2u1198_45 41D8                        i2u1199_40 5156  
                      i2u1295_40 3094                        i2u1287_40 2EE4  
                      i2u1288_40 2EE6                        i2u1298_40 30CC  
                      i2u1395_47 5544                        i2u1396_47 5586  
                        powf@p_h 019C                          powf@p_l 0164  
                        powf@s_h 016C                          powf@t_h 0168  
                        powf@s_l 0130                          powf@t_l 0134  
                        powf@z_h 0120                          powf@z_l 0124  
              __end_of_vfpfcnvrt 464A                       efgtoa@mode 01DD  
                     efgtoa@sign 01D6                        _RCSTAbits 000FAB  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_vfprintf 007E  
                        sqrtf@ix 006B                          strcpy@d 0009  
                        strlen@a 0003                          strcpy@s 0007  
                        strlen@s 0001                   UART_Write@data 0364  
                    ___fladd@grs 0010                    ___xxtofl@sign 0009  
                      _TRISBbits 000F93                      _MyusartRead 6686  
                    ___fldiv@grs 0045                      ___fldiv@rem 003E  
              __size_of_ADC_Read 00A6                        i2___awmod 645A  
                    ___flmul@grs 0020          _MQGetGasPercentage$2031 00E6  
                      _TXSTAbits 000FAC                   __end_of_Hi_ISR 563A  
              __size_of_LCD_init 007C                   __end_of_Lo_ISR 0058  
                 __end_of___flge 5E54                   __end_of___fleq 62E8  
                    vfpfcnvrt@ap 00DE                      vfpfcnvrt@cp 00E4  
                    vfpfcnvrt@ct 00EA                      vfpfcnvrt@fp 00DA  
                 __end_of___wmul 6978                   __end_of_ln2_hi 0681  
                 __end_of_ln2_lo 067D                   __end_of_efgtoa 3710  
                 _ADC_Initialize 69E4                   __end_of_floorf 54D2  
         ?_OSCILLATOR_Initialize 0001                       floorf@F524 0208  
                 __end_of_memset 5B42                   __end_of_strcpy 663A  
                 __end_of_strlen 6952       MQGetPercentage@rs_ro_ratio 00CE  
            start_initialization 64CA                      __end_of_Lg1 0679  
                    __end_of_Lg2 0675                      __end_of_Lg3 0671  
                    __end_of_Lg4 066D                      __end_of_Cmd 689A  
__size_of_PIN_MANAGER_Initialize 0014                      __end_of_lg2 0631  
                    __end_of_pad 625E                      __end_of_ovt 0625  
                     ?i2___awmod 0001            __end_of___fpclassifyf 5F20  
               __CFG_OSC$INTIO67 000000                         ??_Hi_ISR 02DF  
                       ??_Lo_ISR 036A                __size_of_Send2Lcd 0042  
       __size_of_TMR1_Initialize 001C                      vfprintf@fmt 01F6  
                       ??___flge 003A                         ??___fleq 0009  
                       ??___wmul 0005                         ??_efgtoa 00D5  
         __end_of_ADC_Initialize 69F6                      __pdataBANK1 01FA  
                    __pdataBANK2 028C                         ??_floorf 004F  
               __CFG_LPT1OSC$OFF 000000                         ??_memset 0007  
                 ADC_Read@result 0052                       memset@dest 0001  
  MQGetGasPercentage@rs_ro_ratio 00E0                         ??_strcpy 0005  
                       ??_strlen 0003                        ___fladd@a 0005  
                      ___fladd@b 0001                        ___fldiv@a 0036  
                      ___fldiv@b 0032                        ___flmul@a 0015  
                      ___flmul@b 0011                        ___flsub@a 002E  
                      ___flsub@b 002A                    __pcstackBANK0 0080  
                  __pcstackBANK1 0100                    __pcstackBANK2 02C3  
                  __pcstackBANK3 0364                __end_ofsqrtf@tiny 0615  
              __size_of___xxtofl 0140         __size_of_MQGetPercentage 0116  
                       ?_MQ_Read 00EA                        _atoi$1490 0014  
                      _atoi$1491 0012                        _atoi$1489 0010  
                  ??_buzzer_init 036F           _PIN_MANAGER_Initialize 69D0  
          MQGetPercentage@pcurve 00D2                __CFG_CCP2MX$PORTC 000000  
                      __pintcode 0008                         ?___fladd 0001  
                       ?___fldiv 0032                         ?___awdiv 0001  
                       ?___flneg 0001                         ?___awmod 0364  
                       ?___flmul 0011                         ?___flsub 002A  
                       ?___fltol 00CA                  ?_ADC_Initialize 0001  
                    __pintcodelo 0018                        _logf$2033 00B2  
                      _logf$2034 008C                        _logf$2035 0090  
                      _logf$2036 0094                        _logf$2037 0098  
              __size_of_vfprintf 005E                        fabsf@F463 0200  
                    __smallconst 0600                         ?_isdigit 0001  
                       ?_scalbnf 002A                         _ADC_Read 5FDC  
                       ?_isspace 0001                         ?_isupper 0001  
                       Cmd@Value 036F                   __size_of_fabsf 0034  
                    ??i2___awmod 0005                         ?_sprintf 02C3  
                       ?_tolower 0007                   __size_of_fputc 00A0  
                 __size_of_fputs 0038                         ?_strncmp 0001  
                 __size_of_putch 0002                   __size_of_sqrtf 0426  
                      _powf$2040 0148                        _powf$2041 0198  
                      _powf$2042 0138                        _powf$2050 0110  
                      _powf$2051 0114                        _powf$2043 0100  
                      _powf$2052 0118                        _powf$2044 0104  
                      _powf$2045 015C                        _powf$2038 01A4  
                      _powf$2046 013C                        _powf$2039 0158  
                      _powf$2047 0140                        _powf$2048 0108  
                      _powf$2049 010C                   ___wmul@product 0005  
                       _LATBbits 000F8A                         _LATCbits 000F8B  
                       _LCD_init 636C                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                         i2u504_40 59C8  
                       _PIR1bits 000F9E                         _LPGCurve 02B7  
                       _RCONbits 000FD0              __end_of_buzzer_init 6A16  
                      _timer_val 029D                       powf@yisint 0150  
                      _vfpfcnvrt 4228                         _RL_VALUE 029B  
              ??_TMR1_Initialize 036F                       _ADCON0bits 000FC2  
              ___wmul@multiplier 0001                     ?_MyusartRead 0001  
                   _isspace$1520 0007                       MQ_Read@res 00F0  
                     vfpfcnvrt@c 00ED                       vfpfcnvrt@f 00EE  
    __size_of_MQGetGasPercentage 0156                        copy_data0 64DE  
             i2___awmod@dividend 0001                 __size_of_MQ_Read 0206  
                       _Send2Lcd 6716                ??_MQGetPercentage 007E  
                       __Hrparam 0000                       vfprintf@ap 01F8  
                       __Lrparam 0000                       vfprintf@fp 01F4  
             __CFG_BOREN$SBORDIS 000000          ??_OSCILLATOR_Initialize 036F  
               __size_of___fladd 030C                 __size_of___fldiv 0288  
               __size_of___awdiv 0084                 __size_of___flneg 002E  
               __size_of___awmod 0072                 __size_of___flmul 0352  
               __size_of___flsub 0046                 __size_of___fltol 00BC  
                     ?_vfpfcnvrt 00DA               ___fpclassifyf@F463 020C  
                     sprintf@fmt 02C5                         ___xxtofl 58D0  
               __size_of_isdigit 0030                 __size_of_scalbnf 01E6  
               __size_of_isspace 003E                         __ptext10 69E4  
                       __ptext20 5B42                         __ptext12 6686  
                       __ptext21 2D58                         __ptext13 63E8  
                       __ptext30 6A16                         __ptext22 645A  
                       __ptext14 69F6                         __ptext31 531C  
                       __ptext23 663A                         __ptext40 4F30  
                       __ptext32 5E54                         __ptext24 689A  
                       __ptext16 6594                         __ptext41 563A  
                       __ptext33 625E                         __ptext25 65E8  
                       __ptext17 6536                         __ptext50 3710  
                       __ptext42 5C6E                         __ptext34 62E8  
                       __ptext26 61C4                         __ptext18 4228  
                       __ptext51 66D0                         __ptext43 06EC  
                       __ptext35 5790                         __ptext27 6928  
                       __ptext19 6082                         __ptext52 499C  
                       __ptext44 3E02                         __ptext36 6758  
                       __ptext28 6796                         __ptext53 5F20  
                       __ptext45 6978                         __ptext37 68CA  
                       __ptext29 6124                         __ptext54 5FDC  
                       __ptext46 5D84                         __ptext38 6952  
                       __ptext55 58D0                         __ptext47 5136  
                       __ptext39 5A10                         __ptext56 464A  
                       __ptext48 6806                         __ptext57 4CA8  
                       __ptext49 68FA                 __size_of_isupper 0030  
               __size_of_sprintf 0054                 __size_of_tolower 004C  
                     strcpy@dest 0001                 __size_of_strncmp 00A2  
                  __size_of_Data 0030                    __size_of_atoi 0140  
                  __size_of_main 0006                    __size_of_nanf 0022  
                  __size_of_logf 06F2                    __size_of_powf 266C  
                  __size_of_stoa 012C                      _buzzer_init 6A14  
           powf@__xc8_float_word 01B8                         efgtoa@fp 00CE  
                       efgtoa@ne 01D2                         efgtoa@pp 01CE  
                       efgtoa@ou 01BC                        stoa@F1153 028C  
                       int$flags 007E                         _vfprintf 6536  
                       _mystring 0282                         logf@F469 0204  
              i2___awmod@divisor 0003                   _vfpfcnvrt$1013 00E6  
                 _vfpfcnvrt$1017 00E8                i2___awmod@counter 0005  
                     _INTCONbits 000FF2                         logf@hfsq 009E  
                       isdigit@c 0001                         scalbnf@n 002E  
                       scalbnf@u 0034                         scalbnf@x 002A  
                       scalbnf@y 0038                         intlevel1 0000  
                       intlevel2 0000                        sprintf@ap 02D7  
                      sqrtf@tiny 0611                         isspace@c 0001  
        ?_PIN_MANAGER_Initialize 0001                        strcpy@src 0003  
                       isupper@c 0001                        strncmp@_l 0001  
                      strncmp@_r 0003                 ??_ADC_Initialize 036F  
                    efgtoa@nmode 01DA                      ??_vfpfcnvrt 00E0  
                       stoa@nuls 000F                     _MQ_Read$2032 00F4  
                       sprintf@f 02D9                         tolower@c 0007  
                       sprintf@s 02C3           __size_of___fpclassifyf 00CC  
                       strncmp@l 0008                         strncmp@n 0005  
                       strncmp@r 000A                       _UART_Write 69F6  
                  ___fladd@signs 000D             __size_of_MyusartRead 004A  
 __end_of_PIN_MANAGER_Initialize 69E4            sqrtf@__xc8_float_word 0053  
                   ___fladd@aexp 000E                     ___fladd@bexp 000F  
                _TMR1_Initialize 699A  
