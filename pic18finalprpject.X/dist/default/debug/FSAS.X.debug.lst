

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Sep  2 12:03:16 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           ; Version 2.05
    42                           ; Generated 20/12/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     _TRISA	set	3986
    76  0000                     _TRISCbits	set	3988
    77  0000                     _RC2	set	31762
    78  0000                     _TMR3	set	4018
    79  0000                     _TMR1	set	4046
    80  0000                     _ADCON0bits	set	4034
    81  0000                     _ADRESL	set	4035
    82  0000                     _ADRESH	set	4036
    83  0000                     _ADCON2bits	set	4032
    84  0000                     _ADCON1	set	4033
    85  0000                     _RCONbits	set	4048
    86  0000                     _RCREG	set	4014
    87  0000                     _TXREG	set	4013
    88  0000                     _PIE1bits	set	3997
    89  0000                     _RCSTAbits	set	4011
    90  0000                     _SPBRG	set	4015
    91  0000                     _BAUDCONbits	set	4024
    92  0000                     _TXSTAbits	set	4012
    93  0000                     _CCPR1L	set	4030
    94  0000                     _CCP1CONbits	set	4029
    95  0000                     _T2CONbits	set	4042
    96  0000                     _T1CONbits	set	4045
    97  0000                     _IPR1bits	set	3999
    98  0000                     _PIR1bits	set	3998
    99  0000                     _ADFM	set	32263
   100  0000                     _CREN	set	32092
   101  0000                     _RCIF	set	31989
   102  0000                     _IRCF0	set	32412
   103  0000                     _IRCF1	set	32413
   104  0000                     _IRCF2	set	32414
   105  0000                     _INTCONbits	set	4082
   106                           
   107                           	psect	smallconst
   108  000600                     __psmallconst:
   109                           	opt callstack 0
   110  000600  00                 	db	0
   111  000601                     STR_2:
   112  000601  67                 	db	103	;'g'
   113  000602  25                 	db	37
   114  000603  64                 	db	100	;'d'
   115  000604  00                 	db	0
   116  000605                     STR_1:
   117  000605  74                 	db	116	;'t'
   118  000606  25                 	db	37
   119  000607  64                 	db	100	;'d'
   120  000608  00                 	db	0
   121                           
   122                           ; #config settings
   123  000609  00                 	db	0	; dummy byte at the end
   124  0000                     
   125                           	psect	cinit
   126  001080                     __pcinit:
   127                           	opt callstack 0
   128  001080                     start_initialization:
   129                           	opt callstack 0
   130  001080                     __initialization:
   131                           	opt callstack 0
   132                           
   133                           ; Clear objects allocated to BANK0 (42 bytes)
   134  001080  EE00  F080         	lfsr	0,__pbssBANK0
   135  001084  0E2A               	movlw	42
   136  001086                     clear_0:
   137  001086  6AEE               	clrf	postinc0,c
   138  001088  06E8               	decf	wreg,f,c
   139  00108A  E1FD               	bnz	clear_0
   140                           
   141                           ; Clear objects allocated to COMRAM (12 bytes)
   142  00108C  EE00  F063         	lfsr	0,__pbssCOMRAM
   143  001090  0E0C               	movlw	12
   144  001092                     clear_1:
   145  001092  6AEE               	clrf	postinc0,c
   146  001094  06E8               	decf	wreg,f,c
   147  001096  E1FD               	bnz	clear_1
   148  001098                     end_of_initialization:
   149                           	opt callstack 0
   150  001098                     __end_of__initialization:
   151                           	opt callstack 0
   152  001098  906F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   153  00109A  926F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   154  00109C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   155  00109E  6EF8               	movwf	tblptru,c
   156  0010A0  0E06               	movlw	high __Lsmallconst
   157  0010A2  6EF7               	movwf	tblptrh,c
   158  0010A4  0100               	movlb	0
   159  0010A6  EF1C  F006         	goto	_main	;jump to C main() function
   160                           
   161                           	psect	bssCOMRAM
   162  000063                     __pbssCOMRAM:
   163                           	opt callstack 0
   164  000063                     _nout:
   165                           	opt callstack 0
   166  000063                     	ds	2
   167  000065                     _width:
   168                           	opt callstack 0
   169  000065                     	ds	2
   170  000067                     _prec:
   171                           	opt callstack 0
   172  000067                     	ds	2
   173  000069                     _flags:
   174                           	opt callstack 0
   175  000069                     	ds	2
   176  00006B                     _count:
   177                           	opt callstack 0
   178  00006B                     	ds	2
   179  00006D                     _lenStr:
   180                           	opt callstack 0
   181  00006D                     	ds	2
   182                           
   183                           	psect	bssBANK0
   184  000080                     __pbssBANK0:
   185                           	opt callstack 0
   186  000080                     _dbuf:
   187                           	opt callstack 0
   188  000080                     	ds	32
   189  0000A0                     _mystring:
   190                           	opt callstack 0
   191  0000A0                     	ds	10
   192                           
   193                           	psect	cstackBANK0
   194  0000AA                     __pcstackBANK0:
   195                           	opt callstack 0
   196  0000AA                     ?_sprintf:
   197                           	opt callstack 0
   198  0000AA                     sprintf@s:
   199                           	opt callstack 0
   200                           
   201                           ; 2 bytes @ 0x0
   202  0000AA                     	ds	2
   203  0000AC                     sprintf@fmt:
   204                           	opt callstack 0
   205                           
   206                           ; 2 bytes @ 0x2
   207  0000AC                     	ds	6
   208  0000B2                     sprintf@ap:
   209                           	opt callstack 0
   210                           
   211                           ; 2 bytes @ 0x8
   212  0000B2                     	ds	2
   213  0000B4                     sprintf@f:
   214                           	opt callstack 0
   215                           
   216                           ; 6 bytes @ 0xA
   217  0000B4                     	ds	6
   218  0000BA                     main@r:
   219                           	opt callstack 0
   220                           
   221                           ; 10 bytes @ 0x10
   222  0000BA                     	ds	10
   223  0000C4                     main@j:
   224                           	opt callstack 0
   225                           
   226                           ; 2 bytes @ 0x1A
   227  0000C4                     	ds	2
   228  0000C6                     main@i:
   229                           	opt callstack 0
   230                           
   231                           ; 2 bytes @ 0x1C
   232  0000C6                     	ds	2
   233  0000C8                     main@j_968:
   234                           	opt callstack 0
   235                           
   236                           ; 2 bytes @ 0x1E
   237  0000C8                     	ds	2
   238  0000CA                     main@i_969:
   239                           	opt callstack 0
   240                           
   241                           ; 2 bytes @ 0x20
   242  0000CA                     	ds	2
   243                           
   244                           	psect	cstackCOMRAM
   245  000001                     __pcstackCOMRAM:
   246                           	opt callstack 0
   247  000001                     ?___awmod:
   248                           	opt callstack 0
   249  000001                     i1UART_Write@data:
   250                           	opt callstack 0
   251  000001                     ___awmod@dividend:
   252                           	opt callstack 0
   253                           
   254                           ; 2 bytes @ 0x0
   255  000001                     	ds	2
   256  000003                     ___awmod@divisor:
   257                           	opt callstack 0
   258                           
   259                           ; 2 bytes @ 0x2
   260  000003                     	ds	2
   261  000005                     ___awmod@counter:
   262                           	opt callstack 0
   263                           
   264                           ; 1 bytes @ 0x4
   265  000005                     	ds	1
   266  000006                     ___awmod@sign:
   267                           	opt callstack 0
   268                           
   269                           ; 1 bytes @ 0x5
   270  000006                     	ds	1
   271  000007                     ??_Lo_ISR:
   272                           
   273                           ; 1 bytes @ 0x6
   274  000007                     	ds	5
   275  00000C                     ?_strlen:
   276                           	opt callstack 0
   277  00000C                     ?_ADC_Read:
   278                           	opt callstack 0
   279  00000C                     ?___aodiv:
   280                           	opt callstack 0
   281  00000C                     ?___aomod:
   282                           	opt callstack 0
   283  00000C                     UART_Write@data:
   284                           	opt callstack 0
   285  00000C                     ADC_Read@channel:
   286                           	opt callstack 0
   287  00000C                     fputc@c:
   288                           	opt callstack 0
   289  00000C                     strlen@s:
   290                           	opt callstack 0
   291  00000C                     ___aodiv@dividend:
   292                           	opt callstack 0
   293  00000C                     ___aomod@dividend:
   294                           	opt callstack 0
   295                           
   296                           ; 8 bytes @ 0xB
   297  00000C                     	ds	1
   298  00000D                     UART_Write_Text@text:
   299                           	opt callstack 0
   300                           
   301                           ; 2 bytes @ 0xC
   302  00000D                     	ds	1
   303  00000E                     ??_ADC_Read:
   304  00000E                     fputc@fp:
   305                           	opt callstack 0
   306  00000E                     strlen@a:
   307                           	opt callstack 0
   308                           
   309                           ; 2 bytes @ 0xD
   310  00000E                     	ds	1
   311  00000F                     UART_Write_Text@i:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0xE
   315  00000F                     	ds	1
   316  000010                     ??_fputc:
   317  000010                     ADC_Read@digital:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0xF
   321  000010                     	ds	4
   322  000014                     ___aodiv@divisor:
   323                           	opt callstack 0
   324  000014                     ___aomod@divisor:
   325                           	opt callstack 0
   326                           
   327                           ; 8 bytes @ 0x13
   328  000014                     	ds	1
   329  000015                     fputs@s:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x14
   333  000015                     	ds	2
   334  000017                     fputs@fp:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0x16
   338  000017                     	ds	2
   339  000019                     fputs@c:
   340                           	opt callstack 0
   341                           
   342                           ; 1 bytes @ 0x18
   343  000019                     	ds	1
   344  00001A                     fputs@i:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0x19
   348  00001A                     	ds	2
   349  00001C                     ?_pad:
   350                           	opt callstack 0
   351  00001C                     ___aodiv@counter:
   352                           	opt callstack 0
   353  00001C                     ___aomod@counter:
   354                           	opt callstack 0
   355  00001C                     pad@fp:
   356                           	opt callstack 0
   357                           
   358                           ; 2 bytes @ 0x1B
   359  00001C                     	ds	1
   360  00001D                     ___aodiv@sign:
   361                           	opt callstack 0
   362  00001D                     ___aomod@sign:
   363                           	opt callstack 0
   364                           
   365                           ; 1 bytes @ 0x1C
   366  00001D                     	ds	1
   367  00001E                     ?_abs:
   368                           	opt callstack 0
   369  00001E                     pad@buf:
   370                           	opt callstack 0
   371  00001E                     abs@a:
   372                           	opt callstack 0
   373  00001E                     ___aodiv@quotient:
   374                           	opt callstack 0
   375                           
   376                           ; 8 bytes @ 0x1D
   377  00001E                     	ds	2
   378  000020                     ??_abs:
   379  000020                     pad@p:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x1F
   383  000020                     	ds	2
   384  000022                     ??_pad:
   385                           
   386                           ; 1 bytes @ 0x21
   387  000022                     	ds	1
   388  000023                     pad@i:
   389                           	opt callstack 0
   390                           
   391                           ; 2 bytes @ 0x22
   392  000023                     	ds	2
   393  000025                     pad@w:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x24
   397  000025                     	ds	2
   398  000027                     ?_dtoa:
   399                           	opt callstack 0
   400  000027                     dtoa@fp:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x26
   404  000027                     	ds	2
   405  000029                     dtoa@d:
   406                           	opt callstack 0
   407                           
   408                           ; 8 bytes @ 0x28
   409  000029                     	ds	8
   410  000031                     ??_dtoa:
   411                           
   412                           ; 1 bytes @ 0x30
   413  000031                     	ds	8
   414  000039                     _dtoa$1023:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x38
   418  000039                     	ds	2
   419  00003B                     dtoa@p:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x3A
   423  00003B                     	ds	2
   424  00003D                     dtoa@w:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x3C
   428  00003D                     	ds	2
   429  00003F                     dtoa@s:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x3E
   433  00003F                     	ds	2
   434  000041                     dtoa@n:
   435                           	opt callstack 0
   436                           
   437                           ; 8 bytes @ 0x40
   438  000041                     	ds	8
   439  000049                     dtoa@i:
   440                           	opt callstack 0
   441                           
   442                           ; 2 bytes @ 0x48
   443  000049                     	ds	2
   444  00004B                     ?_vfpfcnvrt:
   445                           	opt callstack 0
   446  00004B                     vfpfcnvrt@fp:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x4A
   450  00004B                     	ds	2
   451  00004D                     vfpfcnvrt@fmt:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x4C
   455  00004D                     	ds	2
   456  00004F                     vfpfcnvrt@ap:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x4E
   460  00004F                     	ds	2
   461  000051                     ??_vfpfcnvrt:
   462                           
   463                           ; 1 bytes @ 0x50
   464  000051                     	ds	2
   465  000053                     vfpfcnvrt@ll:
   466                           	opt callstack 0
   467                           
   468                           ; 8 bytes @ 0x52
   469  000053                     	ds	8
   470  00005B                     ?_vfprintf:
   471                           	opt callstack 0
   472  00005B                     vfprintf@fp:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x5A
   476  00005B                     	ds	2
   477  00005D                     vfprintf@fmt:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x5C
   481  00005D                     	ds	2
   482  00005F                     vfprintf@ap:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x5E
   486  00005F                     	ds	2
   487  000061                     vfprintf@cfmt:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x60
   491  000061                     	ds	2
   492  000063                     
   493                           ; 1 bytes @ 0x62
   494 ;;
   495 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   496 ;;
   497 ;; *************** function _main *****************
   498 ;; Defined at:
   499 ;;		line 7 in file "main.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;  i               2   32[BANK0 ] int 
   504 ;;  i               2   28[BANK0 ] int 
   505 ;;  j               2   30[BANK0 ] int 
   506 ;;  j               2   26[BANK0 ] int 
   507 ;;  r              10   16[BANK0 ] unsigned char [10]
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   517 ;;      Params:         0       0       0       0       0       0       0
   518 ;;      Locals:         0      18       0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0       0       0
   520 ;;      Totals:         0      18       0       0       0       0       0
   521 ;;Total ram usage:       18 bytes
   522 ;; Hardware stack levels required when called:   12
   523 ;; This function calls:
   524 ;;		_ADC_Read
   525 ;;		_SYSTEM_Initialize
   526 ;;		_UART_Write_Text
   527 ;;		_sprintf
   528 ;; This function is called by:
   529 ;;		Startup code after reset
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text0
   534  000C38                     __ptext0:
   535                           	opt callstack 0
   536  000C38                     _main:
   537                           	opt callstack 19
   538                           
   539                           ;main.c: 9:     SYSTEM_Initialize() ;
   540                           
   541                           ;incstack = 0
   542  000C38  EC91  F008         	call	_SYSTEM_Initialize	;wreg free
   543  000C3C                     l2180:
   544                           
   545                           ;main.c: 11:         for(int j = 0 ; j < 6 ; j++)for(int i = 0 ; i < 25000 ; i++) ;
   546  000C3C  0E00               	movlw	0
   547  000C3E  0100               	movlb	0	; () banked
   548  000C40  6FC5               	movwf	(main@j+1)& (0+255),b
   549  000C42  0E00               	movlw	0
   550  000C44  6FC4               	movwf	main@j& (0+255),b
   551  000C46                     l2186:
   552                           
   553                           ; BSR set to: 0
   554  000C46  0E00               	movlw	0
   555  000C48  6FC7               	movwf	(main@i+1)& (0+255),b
   556  000C4A  0E00               	movlw	0
   557  000C4C  6FC6               	movwf	main@i& (0+255),b
   558  000C4E                     l2192:
   559                           
   560                           ; BSR set to: 0
   561  000C4E  4BC6               	infsnz	main@i& (0+255),f,b
   562  000C50  2BC7               	incf	(main@i+1)& (0+255),f,b
   563                           
   564                           ; BSR set to: 0
   565  000C52  BFC7               	btfsc	(main@i+1)& (0+255),7,b
   566  000C54  D7FC               	goto	l2192
   567  000C56  0EA8               	movlw	168
   568  000C58  5DC6               	subwf	main@i& (0+255),w,b
   569  000C5A  0E61               	movlw	97
   570  000C5C  59C7               	subwfb	(main@i+1)& (0+255),w,b
   571  000C5E  A0D8               	btfss	status,0,c
   572  000C60  D7F6               	goto	l2192
   573                           
   574                           ; BSR set to: 0
   575  000C62  4BC4               	infsnz	main@j& (0+255),f,b
   576  000C64  2BC5               	incf	(main@j+1)& (0+255),f,b
   577                           
   578                           ; BSR set to: 0
   579  000C66  BFC5               	btfsc	(main@j+1)& (0+255),7,b
   580  000C68  D7EE               	goto	l2186
   581  000C6A  51C5               	movf	(main@j+1)& (0+255),w,b
   582  000C6C  E104               	bnz	u1710
   583  000C6E  0E06               	movlw	6
   584  000C70  5DC4               	subwf	main@j& (0+255),w,b
   585  000C72  A0D8               	btfss	status,0,c
   586  000C74  D7E8               	goto	l2186
   587  000C76                     u1710:
   588                           
   589                           ; BSR set to: 0
   590                           ;main.c: 12:         char r[10];;main.c: 13:         sprintf(r,"t%d",ADC_Read(0));
   591  000C76  0EBA               	movlw	low main@r
   592  000C78  6FAA               	movwf	sprintf@s& (0+255),b
   593  000C7A  0E00               	movlw	high main@r
   594  000C7C  6FAB               	movwf	(sprintf@s+1)& (0+255),b
   595  000C7E  0E05               	movlw	low STR_1
   596  000C80  6FAC               	movwf	sprintf@fmt& (0+255),b
   597  000C82  0E06               	movlw	high STR_1
   598  000C84  6FAD               	movwf	(sprintf@fmt+1)& (0+255),b
   599  000C86  0E00               	movlw	0
   600  000C88  6E0D               	movwf	ADC_Read@channel+1,c
   601  000C8A  0E00               	movlw	0
   602  000C8C  6E0C               	movwf	ADC_Read@channel,c
   603  000C8E  ECD4  F007         	call	_ADC_Read	;wreg free
   604  000C92  C00C  F0AE         	movff	?_ADC_Read,?_sprintf+4
   605  000C96  C00D  F0AF         	movff	?_ADC_Read+1,?_sprintf+5
   606  000C9A  EC60  F007         	call	_sprintf	;wreg free
   607                           
   608                           ;main.c: 14:         UART_Write_Text(r);
   609  000C9E  0EBA               	movlw	low main@r
   610  000CA0  6E0D               	movwf	UART_Write_Text@text,c
   611  000CA2  0E00               	movlw	high main@r
   612  000CA4  6E0E               	movwf	UART_Write_Text@text+1,c
   613  000CA6  EC0D  F008         	call	_UART_Write_Text	;wreg free
   614                           
   615                           ;main.c: 15:         for(int j = 0 ; j < 6 ; j++)for(int i = 0 ; i < 25000 ; i++) ;
   616  000CAA  0E00               	movlw	0
   617  000CAC  0100               	movlb	0	; () banked
   618  000CAE  6FC9               	movwf	(main@j_968+1)& (0+255),b
   619  000CB0  0E00               	movlw	0
   620  000CB2  6FC8               	movwf	main@j_968& (0+255),b
   621  000CB4                     l2210:
   622                           
   623                           ; BSR set to: 0
   624  000CB4  0E00               	movlw	0
   625  000CB6  6FCB               	movwf	(main@i_969+1)& (0+255),b
   626  000CB8  0E00               	movlw	0
   627  000CBA  6FCA               	movwf	main@i_969& (0+255),b
   628  000CBC                     l2216:
   629                           
   630                           ; BSR set to: 0
   631  000CBC  4BCA               	infsnz	main@i_969& (0+255),f,b
   632  000CBE  2BCB               	incf	(main@i_969+1)& (0+255),f,b
   633                           
   634                           ; BSR set to: 0
   635  000CC0  BFCB               	btfsc	(main@i_969+1)& (0+255),7,b
   636  000CC2  D7FC               	goto	l2216
   637  000CC4  0EA8               	movlw	168
   638  000CC6  5DCA               	subwf	main@i_969& (0+255),w,b
   639  000CC8  0E61               	movlw	97
   640  000CCA  59CB               	subwfb	(main@i_969+1)& (0+255),w,b
   641  000CCC  A0D8               	btfss	status,0,c
   642  000CCE  D7F6               	goto	l2216
   643                           
   644                           ; BSR set to: 0
   645  000CD0  4BC8               	infsnz	main@j_968& (0+255),f,b
   646  000CD2  2BC9               	incf	(main@j_968+1)& (0+255),f,b
   647                           
   648                           ; BSR set to: 0
   649  000CD4  BFC9               	btfsc	(main@j_968+1)& (0+255),7,b
   650  000CD6  D7EE               	goto	l2210
   651  000CD8  51C9               	movf	(main@j_968+1)& (0+255),w,b
   652  000CDA  E104               	bnz	u1730
   653  000CDC  0E06               	movlw	6
   654  000CDE  5DC8               	subwf	main@j_968& (0+255),w,b
   655  000CE0  A0D8               	btfss	status,0,c
   656  000CE2  D7E8               	goto	l2210
   657  000CE4                     u1730:
   658                           
   659                           ; BSR set to: 0
   660                           ;main.c: 16:         sprintf(r,"g%d",ADC_Read(1));
   661  000CE4  0EBA               	movlw	low main@r
   662  000CE6  6FAA               	movwf	sprintf@s& (0+255),b
   663  000CE8  0E00               	movlw	high main@r
   664  000CEA  6FAB               	movwf	(sprintf@s+1)& (0+255),b
   665  000CEC  0E01               	movlw	low STR_2
   666  000CEE  6FAC               	movwf	sprintf@fmt& (0+255),b
   667  000CF0  0E06               	movlw	high STR_2
   668  000CF2  6FAD               	movwf	(sprintf@fmt+1)& (0+255),b
   669  000CF4  0E00               	movlw	0
   670  000CF6  6E0D               	movwf	ADC_Read@channel+1,c
   671  000CF8  0E01               	movlw	1
   672  000CFA  6E0C               	movwf	ADC_Read@channel,c
   673  000CFC  ECD4  F007         	call	_ADC_Read	;wreg free
   674  000D00  C00C  F0AE         	movff	?_ADC_Read,?_sprintf+4
   675  000D04  C00D  F0AF         	movff	?_ADC_Read+1,?_sprintf+5
   676  000D08  EC60  F007         	call	_sprintf	;wreg free
   677                           
   678                           ;main.c: 17:         UART_Write_Text(r);
   679  000D0C  0EBA               	movlw	low main@r
   680  000D0E  6E0D               	movwf	UART_Write_Text@text,c
   681  000D10  0E00               	movlw	high main@r
   682  000D12  6E0E               	movwf	UART_Write_Text@text+1,c
   683  000D14  EC0D  F008         	call	_UART_Write_Text	;wreg free
   684  000D18  D791               	goto	l2180
   685  000D1A                     __end_of_main:
   686                           	opt callstack 0
   687                           
   688 ;; *************** function _sprintf *****************
   689 ;; Defined at:
   690 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  s               2    0[BANK0 ] PTR unsigned char 
   693 ;;		 -> main@r(10), 
   694 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   695 ;;		 -> STR_2(4), STR_1(4), 
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  f               6   10[BANK0 ] struct _IO_FILE
   698 ;;  ap              2    8[BANK0 ] PTR void [1]
   699 ;;		 -> ?_sprintf(2), 
   700 ;;  ret             2    0        int 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  2    0[BANK0 ] int 
   703 ;; Registers used:
   704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   710 ;;      Params:         0       6       0       0       0       0       0
   711 ;;      Locals:         0      10       0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0
   713 ;;      Totals:         0      16       0       0       0       0       0
   714 ;;Total ram usage:       16 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:   11
   717 ;; This function calls:
   718 ;;		_vfprintf
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text1
   725  000EC0                     __ptext1:
   726                           	opt callstack 0
   727  000EC0                     _sprintf:
   728                           	opt callstack 19
   729                           
   730                           ;incstack = 0
   731  000EC0  0EAE               	movlw	low (?_sprintf+4)
   732  000EC2  0100               	movlb	0	; () banked
   733  000EC4  6FB2               	movwf	sprintf@ap& (0+255),b
   734  000EC6  0E00               	movlw	high (?_sprintf+4)
   735  000EC8  6FB3               	movwf	(sprintf@ap+1)& (0+255),b
   736  000ECA  C0AA  F0B4         	movff	sprintf@s,sprintf@f
   737  000ECE  C0AB  F0B5         	movff	sprintf@s+1,sprintf@f+1
   738                           
   739                           ; BSR set to: 0
   740  000ED2  0E00               	movlw	0
   741  000ED4  6FB7               	movwf	(sprintf@f+3)& (0+255),b
   742  000ED6  0E00               	movlw	0
   743  000ED8  6FB6               	movwf	(sprintf@f+2)& (0+255),b
   744                           
   745                           ; BSR set to: 0
   746  000EDA  0E00               	movlw	0
   747  000EDC  6FB9               	movwf	(sprintf@f+5)& (0+255),b
   748  000EDE  0E00               	movlw	0
   749  000EE0  6FB8               	movwf	(sprintf@f+4)& (0+255),b
   750                           
   751                           ; BSR set to: 0
   752  000EE2  0EB4               	movlw	low sprintf@f
   753  000EE4  6E5B               	movwf	vfprintf@fp,c
   754  000EE6  0E00               	movlw	high sprintf@f
   755  000EE8  6E5C               	movwf	vfprintf@fp+1,c
   756  000EEA  C0AC  F05D         	movff	sprintf@fmt,vfprintf@fmt
   757  000EEE  C0AD  F05E         	movff	sprintf@fmt+1,vfprintf@fmt+1
   758  000EF2  0EB2               	movlw	low sprintf@ap
   759  000EF4  6E5F               	movwf	vfprintf@ap,c
   760  000EF6  0E00               	movlw	high sprintf@ap
   761  000EF8  6E60               	movwf	vfprintf@ap+1,c
   762  000EFA  EC89  F007         	call	_vfprintf	;wreg free
   763  000EFE  0100               	movlb	0	; () banked
   764  000F00  51B6               	movf	(sprintf@f+2)& (0+255),w,b
   765  000F02  25AA               	addwf	sprintf@s& (0+255),w,b
   766  000F04  6ED9               	movwf	fsr2l,c
   767  000F06  51B7               	movf	(sprintf@f+3)& (0+255),w,b
   768  000F08  21AB               	addwfc	(sprintf@s+1)& (0+255),w,b
   769  000F0A  6EDA               	movwf	fsr2h,c
   770  000F0C  0E00               	movlw	0
   771  000F0E  6EDF               	movwf	indf2,c
   772                           
   773                           ; BSR set to: 0
   774  000F10  0012               	return		;funcret
   775  000F12                     __end_of_sprintf:
   776                           	opt callstack 0
   777                           
   778 ;; *************** function _vfprintf *****************
   779 ;; Defined at:
   780 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  fp              2   90[COMRAM] PTR struct _IO_FILE
   783 ;;		 -> sprintf@f(6), 
   784 ;;  fmt             2   92[COMRAM] PTR const unsigned char 
   785 ;;		 -> STR_2(4), STR_1(4), 
   786 ;;  ap              2   94[COMRAM] PTR PTR void 
   787 ;;		 -> sprintf@ap(2), 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  cfmt            2   96[COMRAM] PTR unsigned char 
   790 ;;		 -> STR_2(4), STR_1(4), 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  2   90[COMRAM] int 
   793 ;; Registers used:
   794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   800 ;;      Params:         6       0       0       0       0       0       0
   801 ;;      Locals:         2       0       0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0
   803 ;;      Totals:         8       0       0       0       0       0       0
   804 ;;Total ram usage:        8 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:   10
   807 ;; This function calls:
   808 ;;		_vfpfcnvrt
   809 ;; This function is called by:
   810 ;;		_sprintf
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text2
   815  000F12                     __ptext2:
   816                           	opt callstack 0
   817  000F12                     _vfprintf:
   818                           	opt callstack 19
   819                           
   820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
   821                           
   822                           ; BSR set to: 0
   823                           ;incstack = 0
   824  000F12  C05D  F061         	movff	vfprintf@fmt,vfprintf@cfmt
   825  000F16  C05E  F062         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   826                           
   827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
   828  000F1A  0E00               	movlw	0
   829  000F1C  6E64               	movwf	_nout+1,c
   830  000F1E  0E00               	movlw	0
   831  000F20  6E63               	movwf	_nout,c
   832                           
   833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
   834  000F22  D012               	goto	l2164
   835  000F24                     l2162:
   836                           
   837                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
   838  000F24  C05B  F04B         	movff	vfprintf@fp,vfpfcnvrt@fp
   839  000F28  C05C  F04C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   840  000F2C  0E61               	movlw	low vfprintf@cfmt
   841  000F2E  6E4D               	movwf	vfpfcnvrt@fmt,c
   842  000F30  0E00               	movlw	high vfprintf@cfmt
   843  000F32  6E4E               	movwf	vfpfcnvrt@fmt+1,c
   844  000F34  C05F  F04F         	movff	vfprintf@ap,vfpfcnvrt@ap
   845  000F38  C060  F050         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   846  000F3C  EC26  F004         	call	_vfpfcnvrt	;wreg free
   847  000F40  504B               	movf	?_vfpfcnvrt,w,c
   848  000F42  2663               	addwf	_nout,f,c
   849  000F44  504C               	movf	?_vfpfcnvrt+1,w,c
   850  000F46  2264               	addwfc	_nout+1,f,c
   851  000F48                     l2164:
   852                           
   853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
   854  000F48  C061  FFF6         	movff	vfprintf@cfmt,tblptrl
   855  000F4C  C062  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   856  000F50                     	if	0	;tblptru may be non-zero
   857  000F50                     	endif
   858  000F50                     	if	0	;tblptru may be non-zero
   859  000F50                     	endif
   860  000F50  0008               	tblrd		*
   861  000F52  50F5               	movf	tablat,w,c
   862  000F54  0900               	iorlw	0
   863  000F56  A4D8               	btfss	status,2,c
   864  000F58  D7E5               	goto	l2162
   865                           
   866                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
   867  000F5A  C063  F05B         	movff	_nout,?_vfprintf
   868  000F5E  C064  F05C         	movff	_nout+1,?_vfprintf+1
   869  000F62  0012               	return		;funcret
   870  000F64                     __end_of_vfprintf:
   871                           	opt callstack 0
   872                           
   873 ;; *************** function _vfpfcnvrt *****************
   874 ;; Defined at:
   875 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  fp              2   74[COMRAM] PTR struct _IO_FILE
   878 ;;		 -> sprintf@f(6), 
   879 ;;  fmt             2   76[COMRAM] PTR PTR unsigned char 
   880 ;;		 -> vfprintf@cfmt(2), 
   881 ;;  ap              2   78[COMRAM] PTR PTR void 
   882 ;;		 -> sprintf@ap(2), 
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  ll              8   82[COMRAM] long long 
   885 ;;  llu             8    0        unsigned long long 
   886 ;;  f               4    0        unsigned long long 
   887 ;;  vp              3    0        PTR void 
   888 ;;  ct              3    0        unsigned char [3]
   889 ;;  cp              3    0        PTR unsigned char 
   890 ;;  i               2    0        int 
   891 ;;  done            2    0        int 
   892 ;;  c               1    0        unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2   74[COMRAM] int 
   895 ;; Registers used:
   896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   902 ;;      Params:         6       0       0       0       0       0       0
   903 ;;      Locals:         8       0       0       0       0       0       0
   904 ;;      Temps:          2       0       0       0       0       0       0
   905 ;;      Totals:        16       0       0       0       0       0       0
   906 ;;Total ram usage:       16 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    9
   909 ;; This function calls:
   910 ;;		_dtoa
   911 ;;		_fputc
   912 ;; This function is called by:
   913 ;;		_vfprintf
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text3
   918  00084C                     __ptext3:
   919                           	opt callstack 0
   920  00084C                     _vfpfcnvrt:
   921                           	opt callstack 19
   922                           
   923                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
   924                           
   925                           ;incstack = 0
   926  00084C  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   927  000850  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   928  000854  CFDE FFF6          	movff	postinc2,tblptrl
   929  000858  CFDD FFF7          	movff	postdec2,tblptrh
   930  00085C                     	if	0	;tblptru may be non-zero
   931  00085C                     	endif
   932  00085C                     	if	0	;tblptru may be non-zero
   933  00085C                     	endif
   934  00085C  0008               	tblrd		*
   935  00085E  50F5               	movf	tablat,w,c
   936  000860  0A25               	xorlw	37
   937  000862  A4D8               	btfss	status,2,c
   938  000864  D099               	goto	l2150
   939                           
   940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
   941  000866  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   942  00086A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   943  00086E  2ADE               	incf	postinc2,f,c
   944  000870  0E00               	movlw	0
   945  000872  22DD               	addwfc	postdec2,f,c
   946                           
   947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
   948  000874  0E00               	movlw	0
   949  000876  6E66               	movwf	_width+1,c
   950  000878  0E00               	movlw	0
   951  00087A  6E65               	movwf	_width,c
   952  00087C  C065  F069         	movff	_width,_flags
   953  000880  C066  F06A         	movff	_width+1,_flags+1
   954                           
   955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
   956  000884  6867               	setf	_prec,c
   957  000886  6868               	setf	_prec+1,c
   958                           
   959                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
   960  000888  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   961  00088C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   962  000890  CFDE FFF6          	movff	postinc2,tblptrl
   963  000894  CFDD FFF7          	movff	postdec2,tblptrh
   964  000898                     	if	0	;tblptru may be non-zero
   965  000898                     	endif
   966  000898                     	if	0	;tblptru may be non-zero
   967  000898                     	endif
   968  000898  0008               	tblrd		*
   969  00089A  50F5               	movf	tablat,w,c
   970  00089C  0A64               	xorlw	100
   971  00089E  B4D8               	btfsc	status,2,c
   972  0008A0  D00D               	goto	u1670
   973  0008A2  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   974  0008A6  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   975  0008AA  CFDE FFF6          	movff	postinc2,tblptrl
   976  0008AE  CFDD FFF7          	movff	postdec2,tblptrh
   977  0008B2                     	if	0	;tblptru may be non-zero
   978  0008B2                     	endif
   979  0008B2                     	if	0	;tblptru may be non-zero
   980  0008B2                     	endif
   981  0008B2  0008               	tblrd		*
   982  0008B4  50F5               	movf	tablat,w,c
   983  0008B6  0A69               	xorlw	105
   984  0008B8  A4D8               	btfss	status,2,c
   985  0008BA  D03F               	goto	l2134
   986  0008BC                     u1670:
   987                           
   988                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
   989  0008BC  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   990  0008C0  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   991  0008C4  2ADE               	incf	postinc2,f,c
   992  0008C6  0E00               	movlw	0
   993  0008C8  22DD               	addwfc	postdec2,f,c
   994                           
   995                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
   996  0008CA  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   997  0008CE  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   998  0008D2  CFDF F051          	movff	indf2,??_vfpfcnvrt
   999  0008D6  0E02               	movlw	2
  1000  0008D8  26DE               	addwf	postinc2,f,c
  1001  0008DA  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
  1002  0008DE  0E00               	movlw	0
  1003  0008E0  22DD               	addwfc	postdec2,f,c
  1004  0008E2  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1005  0008E6  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1006  0008EA  CFDE F053          	movff	postinc2,vfpfcnvrt@ll
  1007  0008EE  CFDD F054          	movff	postdec2,vfpfcnvrt@ll+1
  1008  0008F2  0E00               	movlw	0
  1009  0008F4  BE54               	btfsc	vfpfcnvrt@ll+1,7,c
  1010  0008F6  0EFF               	movlw	-1
  1011  0008F8  6E55               	movwf	vfpfcnvrt@ll+2,c
  1012  0008FA  6E56               	movwf	vfpfcnvrt@ll+3,c
  1013  0008FC  6E57               	movwf	vfpfcnvrt@ll+4,c
  1014  0008FE  6E58               	movwf	vfpfcnvrt@ll+5,c
  1015  000900  6E59               	movwf	vfpfcnvrt@ll+6,c
  1016  000902  6E5A               	movwf	vfpfcnvrt@ll+7,c
  1017                           
  1018                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  1019  000904  C04B  F027         	movff	vfpfcnvrt@fp,dtoa@fp
  1020  000908  C04C  F028         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1021  00090C  C053  F029         	movff	vfpfcnvrt@ll,dtoa@d
  1022  000910  C054  F02A         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1023  000914  C055  F02B         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1024  000918  C056  F02C         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1025  00091C  C057  F02D         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1026  000920  C058  F02E         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1027  000924  C059  F02F         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1028  000928  C05A  F030         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1029  00092C  EC05  F003         	call	_dtoa	;wreg free
  1030  000930  C027  F04B         	movff	?_dtoa,?_vfpfcnvrt
  1031  000934  C028  F04C         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1032  000938  0012               	return	
  1033  00093A                     l2134:
  1034                           
  1035                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  1036  00093A  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1037  00093E  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1038  000942  CFDE FFF6          	movff	postinc2,tblptrl
  1039  000946  CFDD FFF7          	movff	postdec2,tblptrh
  1040  00094A                     	if	0	;tblptru may be non-zero
  1041  00094A                     	endif
  1042  00094A                     	if	0	;tblptru may be non-zero
  1043  00094A                     	endif
  1044  00094A  0008               	tblrd		*
  1045  00094C  50F5               	movf	tablat,w,c
  1046  00094E  0A25               	xorlw	37
  1047  000950  A4D8               	btfss	status,2,c
  1048  000952  D016               	goto	l2144
  1049                           
  1050                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  1051  000954  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1052  000958  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1053  00095C  2ADE               	incf	postinc2,f,c
  1054  00095E  0E00               	movlw	0
  1055  000960  22DD               	addwfc	postdec2,f,c
  1056                           
  1057                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  1058  000962  0E00               	movlw	0
  1059  000964  6E0D               	movwf	fputc@c+1,c
  1060  000966  0E25               	movlw	37
  1061  000968  6E0C               	movwf	fputc@c,c
  1062  00096A  C04B  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  1063  00096E  C04C  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1064  000972  EC8D  F006         	call	_fputc	;wreg free
  1065  000976                     l2140:
  1066                           
  1067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  1068  000976  0E00               	movlw	0
  1069  000978  6E4C               	movwf	?_vfpfcnvrt+1,c
  1070  00097A  0E01               	movlw	1
  1071  00097C  6E4B               	movwf	?_vfpfcnvrt,c
  1072  00097E  0012               	return	
  1073  000980                     l2144:
  1074                           
  1075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  1076  000980  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1077  000984  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1078  000988  2ADE               	incf	postinc2,f,c
  1079  00098A  0E00               	movlw	0
  1080  00098C  22DD               	addwfc	postdec2,f,c
  1081                           
  1082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  1083  00098E  0E00               	movlw	0
  1084  000990  6E4C               	movwf	?_vfpfcnvrt+1,c
  1085  000992  0E00               	movlw	0
  1086  000994  6E4B               	movwf	?_vfpfcnvrt,c
  1087  000996  0012               	return	
  1088  000998                     l2150:
  1089                           
  1090                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  1091  000998  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1092  00099C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1093  0009A0  CFDE FFF6          	movff	postinc2,tblptrl
  1094  0009A4  CFDD FFF7          	movff	postdec2,tblptrh
  1095  0009A8                     	if	0	;tblptru may be non-zero
  1096  0009A8                     	endif
  1097  0009A8                     	if	0	;tblptru may be non-zero
  1098  0009A8                     	endif
  1099  0009A8  0008               	tblrd		*
  1100  0009AA  50F5               	movf	tablat,w,c
  1101  0009AC  6E0C               	movwf	fputc@c,c
  1102  0009AE  6A0D               	clrf	fputc@c+1,c
  1103  0009B0  C04B  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  1104  0009B4  C04C  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1105  0009B8  EC8D  F006         	call	_fputc	;wreg free
  1106                           
  1107                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1108  0009BC  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1109  0009C0  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1110  0009C4  2ADE               	incf	postinc2,f,c
  1111  0009C6  0E00               	movlw	0
  1112  0009C8  22DD               	addwfc	postdec2,f,c
  1113  0009CA  D7D5               	goto	l2140
  1114  0009CC                     __end_of_vfpfcnvrt:
  1115                           	opt callstack 0
  1116                           
  1117 ;; *************** function _dtoa *****************
  1118 ;; Defined at:
  1119 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  1122 ;;		 -> sprintf@f(6), 
  1123 ;;  d               8   40[COMRAM] long long 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  n               8   64[COMRAM] long long 
  1126 ;;  i               2   72[COMRAM] int 
  1127 ;;  s               2   62[COMRAM] int 
  1128 ;;  w               2   60[COMRAM] int 
  1129 ;;  p               2   58[COMRAM] int 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  2   38[COMRAM] int 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1139 ;;      Params:        10       0       0       0       0       0       0
  1140 ;;      Locals:        18       0       0       0       0       0       0
  1141 ;;      Temps:          8       0       0       0       0       0       0
  1142 ;;      Totals:        36       0       0       0       0       0       0
  1143 ;;Total ram usage:       36 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    8
  1146 ;; This function calls:
  1147 ;;		___aodiv
  1148 ;;		___aomod
  1149 ;;		_abs
  1150 ;;		_pad
  1151 ;; This function is called by:
  1152 ;;		_vfpfcnvrt
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text4
  1157  00060A                     __ptext4:
  1158                           	opt callstack 0
  1159  00060A                     _dtoa:
  1160                           	opt callstack 19
  1161                           
  1162                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  1163                           
  1164                           ;incstack = 0
  1165  00060A  C029  F041         	movff	dtoa@d,dtoa@n
  1166  00060E  C02A  F042         	movff	dtoa@d+1,dtoa@n+1
  1167  000612  C02B  F043         	movff	dtoa@d+2,dtoa@n+2
  1168  000616  C02C  F044         	movff	dtoa@d+3,dtoa@n+3
  1169  00061A  C02D  F045         	movff	dtoa@d+4,dtoa@n+4
  1170  00061E  C02E  F046         	movff	dtoa@d+5,dtoa@n+5
  1171  000622  C02F  F047         	movff	dtoa@d+6,dtoa@n+6
  1172  000626  C030  F048         	movff	dtoa@d+7,dtoa@n+7
  1173                           
  1174                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  1175  00062A  AE48               	btfss	dtoa@n+7,7,c
  1176  00062C  D002               	goto	u1500
  1177  00062E  0E01               	movlw	1
  1178  000630  D001               	goto	u1510
  1179  000632                     u1500:
  1180  000632  0E00               	movlw	0
  1181  000634                     u1510:
  1182  000634  6E3F               	movwf	dtoa@s,c
  1183  000636  6A40               	clrf	dtoa@s+1,c
  1184                           
  1185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  1186  000638  503F               	movf	dtoa@s,w,c
  1187  00063A  1040               	iorwf	dtoa@s+1,w,c
  1188  00063C  B4D8               	btfsc	status,2,c
  1189  00063E  D010               	goto	l2060
  1190                           
  1191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  1192  000640  1E48               	comf	dtoa@n+7,f,c
  1193  000642  1E47               	comf	dtoa@n+6,f,c
  1194  000644  1E46               	comf	dtoa@n+5,f,c
  1195  000646  1E45               	comf	dtoa@n+4,f,c
  1196  000648  1E44               	comf	dtoa@n+3,f,c
  1197  00064A  1E43               	comf	dtoa@n+2,f,c
  1198  00064C  1E42               	comf	dtoa@n+1,f,c
  1199  00064E  6C41               	negf	dtoa@n,c
  1200  000650  0E00               	movlw	0
  1201  000652  2242               	addwfc	dtoa@n+1,f,c
  1202  000654  2243               	addwfc	dtoa@n+2,f,c
  1203  000656  2244               	addwfc	dtoa@n+3,f,c
  1204  000658  2245               	addwfc	dtoa@n+4,f,c
  1205  00065A  2246               	addwfc	dtoa@n+5,f,c
  1206  00065C  2247               	addwfc	dtoa@n+6,f,c
  1207  00065E  2248               	addwfc	dtoa@n+7,f,c
  1208  000660                     l2060:
  1209                           
  1210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  1211  000660  AE68               	btfss	_prec+1,7,c
  1212                           
  1213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  1214  000662  9269               	bcf	_flags,1,c
  1215                           
  1216                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  1217  000664  BE68               	btfsc	_prec+1,7,c
  1218  000666  D005               	goto	u1540
  1219  000668  5068               	movf	_prec+1,w,c
  1220  00066A  E108               	bnz	l227
  1221  00066C  0467               	decf	_prec,w,c
  1222  00066E  B0D8               	btfsc	status,0,c
  1223  000670  D005               	goto	l227
  1224  000672                     u1540:
  1225  000672  0E00               	movlw	0
  1226  000674  6E3C               	movwf	dtoa@p+1,c
  1227  000676  0E01               	movlw	1
  1228  000678  6E3B               	movwf	dtoa@p,c
  1229  00067A  D004               	goto	l229
  1230  00067C                     l227:
  1231  00067C  C067  F03B         	movff	_prec,dtoa@p
  1232  000680  C068  F03C         	movff	_prec+1,dtoa@p+1
  1233  000684                     l229:
  1234                           
  1235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  1236  000684  C065  F03D         	movff	_width,dtoa@w
  1237  000688  C066  F03E         	movff	_width+1,dtoa@w+1
  1238                           
  1239                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  1240  00068C  503F               	movf	dtoa@s,w,c
  1241  00068E  1040               	iorwf	dtoa@s+1,w,c
  1242  000690  A4D8               	btfss	status,2,c
  1243  000692  D002               	goto	u1560
  1244  000694  A469               	btfss	_flags,2,c
  1245  000696  D003               	goto	l2074
  1246  000698                     u1560:
  1247                           
  1248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  1249  000698  063D               	decf	dtoa@w,f,c
  1250  00069A  A0D8               	btfss	status,0,c
  1251  00069C  063E               	decf	dtoa@w+1,f,c
  1252  00069E                     l2074:
  1253                           
  1254                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  1255  00069E  0E00               	movlw	0
  1256  0006A0  6E4A               	movwf	dtoa@i+1,c
  1257  0006A2  0E1F               	movlw	31
  1258  0006A4  6E49               	movwf	dtoa@i,c
  1259                           
  1260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  1261  0006A6  0E00               	movlw	0
  1262  0006A8  0100               	movlb	0	; () banked
  1263  0006AA  6F9F               	movwf	(_dbuf+31)& (0+255),b
  1264                           
  1265                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1266  0006AC  D07C               	goto	l2088
  1267  0006AE                     l2078:
  1268                           
  1269                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  1270  0006AE  0649               	decf	dtoa@i,f,c
  1271  0006B0  A0D8               	btfss	status,0,c
  1272  0006B2  064A               	decf	dtoa@i+1,f,c
  1273                           
  1274                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  1275  0006B4  0E80               	movlw	low _dbuf
  1276  0006B6  2449               	addwf	dtoa@i,w,c
  1277  0006B8  6ED9               	movwf	fsr2l,c
  1278  0006BA  0E00               	movlw	high _dbuf
  1279  0006BC  204A               	addwfc	dtoa@i+1,w,c
  1280  0006BE  6EDA               	movwf	fsr2h,c
  1281  0006C0  C041  F00C         	movff	dtoa@n,___aomod@dividend
  1282  0006C4  C042  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  1283  0006C8  C043  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  1284  0006CC  C044  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  1285  0006D0  C045  F010         	movff	dtoa@n+4,___aomod@dividend+4
  1286  0006D4  C046  F011         	movff	dtoa@n+5,___aomod@dividend+5
  1287  0006D8  C047  F012         	movff	dtoa@n+6,___aomod@dividend+6
  1288  0006DC  C048  F013         	movff	dtoa@n+7,___aomod@dividend+7
  1289  0006E0  0E0A               	movlw	10
  1290  0006E2  6E14               	movwf	___aomod@divisor,c
  1291  0006E4  0E00               	movlw	0
  1292  0006E6  6E15               	movwf	___aomod@divisor+1,c
  1293  0006E8  0E00               	movlw	0
  1294  0006EA  6E16               	movwf	___aomod@divisor+2,c
  1295  0006EC  0E00               	movlw	0
  1296  0006EE  6E17               	movwf	___aomod@divisor+3,c
  1297  0006F0  0E00               	movlw	0
  1298  0006F2  6E18               	movwf	___aomod@divisor+4,c
  1299  0006F4  0E00               	movlw	0
  1300  0006F6  6E19               	movwf	___aomod@divisor+5,c
  1301  0006F8  0E00               	movlw	0
  1302  0006FA  6E1A               	movwf	___aomod@divisor+6,c
  1303  0006FC  0E00               	movlw	0
  1304  0006FE  6E1B               	movwf	___aomod@divisor+7,c
  1305  000700  EC8A  F005         	call	___aomod	;wreg free
  1306  000704  C00C  F031         	movff	?___aomod,??_dtoa
  1307  000708  C00D  F032         	movff	?___aomod+1,??_dtoa+1
  1308  00070C  C00E  F033         	movff	?___aomod+2,??_dtoa+2
  1309  000710  C00F  F034         	movff	?___aomod+3,??_dtoa+3
  1310  000714  C010  F035         	movff	?___aomod+4,??_dtoa+4
  1311  000718  C011  F036         	movff	?___aomod+5,??_dtoa+5
  1312  00071C  C012  F037         	movff	?___aomod+6,??_dtoa+6
  1313  000720  C013  F038         	movff	?___aomod+7,??_dtoa+7
  1314  000724  C031  F01E         	movff	??_dtoa,abs@a
  1315  000728  C033  F01F         	movff	??_dtoa+2,abs@a+1
  1316  00072C  EC27  F008         	call	_abs	;wreg free
  1317  000730  501E               	movf	?_abs,w,c
  1318  000732  0F30               	addlw	48
  1319  000734  6EDF               	movwf	indf2,c
  1320                           
  1321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  1322  000736  063B               	decf	dtoa@p,f,c
  1323  000738  A0D8               	btfss	status,0,c
  1324  00073A  063C               	decf	dtoa@p+1,f,c
  1325                           
  1326                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  1327  00073C  063D               	decf	dtoa@w,f,c
  1328  00073E  A0D8               	btfss	status,0,c
  1329  000740  063E               	decf	dtoa@w+1,f,c
  1330                           
  1331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  1332  000742  C041  F00C         	movff	dtoa@n,___aodiv@dividend
  1333  000746  C042  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  1334  00074A  C043  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  1335  00074E  C044  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  1336  000752  C045  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  1337  000756  C046  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  1338  00075A  C047  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  1339  00075E  C048  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  1340  000762  0E0A               	movlw	10
  1341  000764  6E14               	movwf	___aodiv@divisor,c
  1342  000766  0E00               	movlw	0
  1343  000768  6E15               	movwf	___aodiv@divisor+1,c
  1344  00076A  0E00               	movlw	0
  1345  00076C  6E16               	movwf	___aodiv@divisor+2,c
  1346  00076E  0E00               	movlw	0
  1347  000770  6E17               	movwf	___aodiv@divisor+3,c
  1348  000772  0E00               	movlw	0
  1349  000774  6E18               	movwf	___aodiv@divisor+4,c
  1350  000776  0E00               	movlw	0
  1351  000778  6E19               	movwf	___aodiv@divisor+5,c
  1352  00077A  0E00               	movlw	0
  1353  00077C  6E1A               	movwf	___aodiv@divisor+6,c
  1354  00077E  0E00               	movlw	0
  1355  000780  6E1B               	movwf	___aodiv@divisor+7,c
  1356  000782  ECE6  F004         	call	___aodiv	;wreg free
  1357  000786  C00C  F041         	movff	?___aodiv,dtoa@n
  1358  00078A  C00D  F042         	movff	?___aodiv+1,dtoa@n+1
  1359  00078E  C00E  F043         	movff	?___aodiv+2,dtoa@n+2
  1360  000792  C00F  F044         	movff	?___aodiv+3,dtoa@n+3
  1361  000796  C010  F045         	movff	?___aodiv+4,dtoa@n+4
  1362  00079A  C011  F046         	movff	?___aodiv+5,dtoa@n+5
  1363  00079E  C012  F047         	movff	?___aodiv+6,dtoa@n+6
  1364  0007A2  C013  F048         	movff	?___aodiv+7,dtoa@n+7
  1365  0007A6                     l2088:
  1366                           
  1367                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1368  0007A6  BE4A               	btfsc	dtoa@i+1,7,c
  1369  0007A8  D01F               	goto	u1610
  1370  0007AA  504A               	movf	dtoa@i+1,w,c
  1371  0007AC  E103               	bnz	u1570
  1372  0007AE  0449               	decf	dtoa@i,w,c
  1373  0007B0  A0D8               	btfss	status,0,c
  1374  0007B2  D01A               	goto	u1610
  1375  0007B4                     u1570:
  1376  0007B4  5041               	movf	dtoa@n,w,c
  1377  0007B6  1042               	iorwf	dtoa@n+1,w,c
  1378  0007B8  1043               	iorwf	dtoa@n+2,w,c
  1379  0007BA  1044               	iorwf	dtoa@n+3,w,c
  1380  0007BC  1045               	iorwf	dtoa@n+4,w,c
  1381  0007BE  1046               	iorwf	dtoa@n+5,w,c
  1382  0007C0  1047               	iorwf	dtoa@n+6,w,c
  1383  0007C2  1048               	iorwf	dtoa@n+7,w,c
  1384  0007C4  A4D8               	btfss	status,2,c
  1385  0007C6  D773               	goto	l2078
  1386  0007C8  BE3C               	btfsc	dtoa@p+1,7,c
  1387  0007CA  D005               	goto	u1590
  1388  0007CC  503C               	movf	dtoa@p+1,w,c
  1389  0007CE  E102               	bnz	u1591
  1390  0007D0  043B               	decf	dtoa@p,w,c
  1391  0007D2  B0D8               	btfsc	status,0,c
  1392  0007D4                     u1591:
  1393  0007D4  D76C               	goto	l2078
  1394  0007D6                     u1590:
  1395  0007D6  BE3E               	btfsc	dtoa@w+1,7,c
  1396  0007D8  D007               	goto	u1610
  1397  0007DA  503E               	movf	dtoa@w+1,w,c
  1398  0007DC  E103               	bnz	u1600
  1399  0007DE  043D               	decf	dtoa@w,w,c
  1400  0007E0  A0D8               	btfss	status,0,c
  1401  0007E2  D002               	goto	u1610
  1402  0007E4                     u1600:
  1403  0007E4  B269               	btfsc	_flags,1,c
  1404  0007E6  D763               	goto	l2078
  1405  0007E8                     u1610:
  1406                           
  1407                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  1408  0007E8  503F               	movf	dtoa@s,w,c
  1409  0007EA  1040               	iorwf	dtoa@s+1,w,c
  1410  0007EC  A4D8               	btfss	status,2,c
  1411  0007EE  D002               	goto	u1630
  1412  0007F0  A469               	btfss	_flags,2,c
  1413  0007F2  D017               	goto	l2112
  1414  0007F4                     u1630:
  1415                           
  1416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  1417  0007F4  0649               	decf	dtoa@i,f,c
  1418  0007F6  A0D8               	btfss	status,0,c
  1419  0007F8  064A               	decf	dtoa@i+1,f,c
  1420                           
  1421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  1422  0007FA  503F               	movf	dtoa@s,w,c
  1423  0007FC  1040               	iorwf	dtoa@s+1,w,c
  1424  0007FE  A4D8               	btfss	status,2,c
  1425  000800  D004               	goto	l2108
  1426  000802  0E00               	movlw	0
  1427  000804  6E3A               	movwf	_dtoa$1023+1,c
  1428  000806  0E2B               	movlw	43
  1429  000808  D003               	goto	L1
  1430  00080A                     l2108:
  1431  00080A  0E00               	movlw	0
  1432  00080C  6E3A               	movwf	_dtoa$1023+1,c
  1433  00080E  0E2D               	movlw	45
  1434  000810                     L1:
  1435  000810  6E39               	movwf	_dtoa$1023,c
  1436  000812  0E80               	movlw	low _dbuf
  1437  000814  2449               	addwf	dtoa@i,w,c
  1438  000816  6ED9               	movwf	fsr2l,c
  1439  000818  0E00               	movlw	high _dbuf
  1440  00081A  204A               	addwfc	dtoa@i+1,w,c
  1441  00081C  6EDA               	movwf	fsr2h,c
  1442  00081E  C039  FFDF         	movff	_dtoa$1023,indf2
  1443  000822                     l2112:
  1444                           
  1445                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  1446  000822  C027  F01C         	movff	dtoa@fp,pad@fp
  1447  000826  C028  F01D         	movff	dtoa@fp+1,pad@fp+1
  1448  00082A  0E80               	movlw	low _dbuf
  1449  00082C  2449               	addwf	dtoa@i,w,c
  1450  00082E  6E1E               	movwf	pad@buf,c
  1451  000830  0E00               	movlw	high _dbuf
  1452  000832  204A               	addwfc	dtoa@i+1,w,c
  1453  000834  6E1F               	movwf	pad@buf+1,c
  1454  000836  C03D  F020         	movff	dtoa@w,pad@p
  1455  00083A  C03E  F021         	movff	dtoa@w+1,pad@p+1
  1456  00083E  ECDD  F006         	call	_pad	;wreg free
  1457  000842  C01C  F027         	movff	?_pad,?_dtoa
  1458  000846  C01D  F028         	movff	?_pad+1,?_dtoa+1
  1459  00084A  0012               	return		;funcret
  1460  00084C                     __end_of_dtoa:
  1461                           	opt callstack 0
  1462                           
  1463 ;; *************** function _pad *****************
  1464 ;; Defined at:
  1465 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1468 ;;		 -> sprintf@f(6), 
  1469 ;;  buf             2   29[COMRAM] PTR unsigned char 
  1470 ;;		 -> dbuf(32), 
  1471 ;;  p               2   31[COMRAM] int 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  w               2   36[COMRAM] int 
  1474 ;;  i               2   34[COMRAM] int 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2   27[COMRAM] int 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1484 ;;      Params:         6       0       0       0       0       0       0
  1485 ;;      Locals:         4       0       0       0       0       0       0
  1486 ;;      Temps:          1       0       0       0       0       0       0
  1487 ;;      Totals:        11       0       0       0       0       0       0
  1488 ;;Total ram usage:       11 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    7
  1491 ;; This function calls:
  1492 ;;		_fputc
  1493 ;;		_fputs
  1494 ;;		_strlen
  1495 ;; This function is called by:
  1496 ;;		_dtoa
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text5
  1501  000DBA                     __ptext5:
  1502                           	opt callstack 0
  1503  000DBA                     _pad:
  1504                           	opt callstack 19
  1505                           
  1506                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  1507                           
  1508                           ;incstack = 0
  1509  000DBA  A069               	btfss	_flags,0,c
  1510  000DBC  D00A               	goto	l1952
  1511                           
  1512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  1513  000DBE  C01E  F015         	movff	pad@buf,fputs@s
  1514  000DC2  C01F  F016         	movff	pad@buf+1,fputs@s+1
  1515  000DC6  C01C  F017         	movff	pad@fp,fputs@fp
  1516  000DCA  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  1517  000DCE  ECF1  F007         	call	_fputs	;wreg free
  1518  000DD2                     l1952:
  1519                           
  1520                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  1521  000DD2  BE21               	btfsc	pad@p+1,7,c
  1522  000DD4  D005               	goto	l1956
  1523  000DD6  C020  F025         	movff	pad@p,pad@w
  1524  000DDA  C021  F026         	movff	pad@p+1,pad@w+1
  1525  000DDE  D004               	goto	l216
  1526  000DE0                     l1956:
  1527  000DE0  0E00               	movlw	0
  1528  000DE2  6E26               	movwf	pad@w+1,c
  1529  000DE4  0E00               	movlw	0
  1530  000DE6  6E25               	movwf	pad@w,c
  1531  000DE8                     l216:
  1532                           
  1533                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1534  000DE8  0E00               	movlw	0
  1535  000DEA  6E24               	movwf	pad@i+1,c
  1536  000DEC  0E00               	movlw	0
  1537  000DEE  6E23               	movwf	pad@i,c
  1538                           
  1539                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  1540  000DF0  D00C               	goto	l1962
  1541  000DF2                     l1958:
  1542                           
  1543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  1544  000DF2  0E00               	movlw	0
  1545  000DF4  6E0D               	movwf	fputc@c+1,c
  1546  000DF6  0E20               	movlw	32
  1547  000DF8  6E0C               	movwf	fputc@c,c
  1548  000DFA  C01C  F00E         	movff	pad@fp,fputc@fp
  1549  000DFE  C01D  F00F         	movff	pad@fp+1,fputc@fp+1
  1550  000E02  EC8D  F006         	call	_fputc	;wreg free
  1551                           
  1552                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1553  000E06  4A23               	infsnz	pad@i,f,c
  1554  000E08  2A24               	incf	pad@i+1,f,c
  1555  000E0A                     l1962:
  1556                           
  1557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  1558  000E0A  5025               	movf	pad@w,w,c
  1559  000E0C  5C23               	subwf	pad@i,w,c
  1560  000E0E  5024               	movf	pad@i+1,w,c
  1561  000E10  0A80               	xorlw	128
  1562  000E12  6E22               	movwf	??_pad& (0+255),c
  1563  000E14  5026               	movf	pad@w+1,w,c
  1564  000E16  0A80               	xorlw	128
  1565  000E18  5822               	subwfb	??_pad& (0+255),w,c
  1566  000E1A  A0D8               	btfss	status,0,c
  1567  000E1C  D7EA               	goto	l1958
  1568                           
  1569                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  1570  000E1E  B069               	btfsc	_flags,0,c
  1571  000E20  D00A               	goto	l1966
  1572                           
  1573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  1574  000E22  C01E  F015         	movff	pad@buf,fputs@s
  1575  000E26  C01F  F016         	movff	pad@buf+1,fputs@s+1
  1576  000E2A  C01C  F017         	movff	pad@fp,fputs@fp
  1577  000E2E  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  1578  000E32  ECF1  F007         	call	_fputs	;wreg free
  1579  000E36                     l1966:
  1580                           
  1581                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  1582  000E36  C01E  F00C         	movff	pad@buf,strlen@s
  1583  000E3A  C01F  F00D         	movff	pad@buf+1,strlen@s+1
  1584  000E3E  EC55  F008         	call	_strlen	;wreg free
  1585  000E42  5025               	movf	pad@w,w,c
  1586  000E44  240C               	addwf	?_strlen,w,c
  1587  000E46  6E1C               	movwf	?_pad,c
  1588  000E48  5026               	movf	pad@w+1,w,c
  1589  000E4A  200D               	addwfc	?_strlen+1,w,c
  1590  000E4C  6E1D               	movwf	?_pad+1,c
  1591  000E4E  0012               	return		;funcret
  1592  000E50                     __end_of_pad:
  1593                           	opt callstack 0
  1594                           
  1595 ;; *************** function _strlen *****************
  1596 ;; Defined at:
  1597 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1600 ;;		 -> dbuf(32), 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  a               2   13[COMRAM] PTR const unsigned char 
  1603 ;;		 -> dbuf(32), 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  2   11[COMRAM] unsigned int 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1613 ;;      Params:         2       0       0       0       0       0       0
  1614 ;;      Locals:         2       0       0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0
  1616 ;;      Totals:         4       0       0       0       0       0       0
  1617 ;;Total ram usage:        4 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    4
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_pad
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text6
  1628  0010AA                     __ptext6:
  1629                           	opt callstack 0
  1630  0010AA                     _strlen:
  1631                           	opt callstack 21
  1632                           
  1633                           ;incstack = 0
  1634  0010AA  C00C  F00E         	movff	strlen@s,strlen@a
  1635  0010AE  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  1636  0010B2  D002               	goto	l1942
  1637  0010B4                     l1940:
  1638  0010B4  4A0C               	infsnz	strlen@s,f,c
  1639  0010B6  2A0D               	incf	strlen@s+1,f,c
  1640  0010B8                     l1942:
  1641  0010B8  C00C  FFD9         	movff	strlen@s,fsr2l
  1642  0010BC  C00D  FFDA         	movff	strlen@s+1,fsr2h
  1643  0010C0  50DF               	movf	indf2,w,c
  1644  0010C2  A4D8               	btfss	status,2,c
  1645  0010C4  D7F7               	goto	l1940
  1646  0010C6  500E               	movf	strlen@a,w,c
  1647  0010C8  5C0C               	subwf	strlen@s,w,c
  1648  0010CA  6E0C               	movwf	?_strlen,c
  1649  0010CC  500F               	movf	strlen@a+1,w,c
  1650  0010CE  580D               	subwfb	strlen@s+1,w,c
  1651  0010D0  6E0D               	movwf	?_strlen+1,c
  1652  0010D2  0012               	return		;funcret
  1653  0010D4                     __end_of_strlen:
  1654                           	opt callstack 0
  1655                           
  1656 ;; *************** function _fputs *****************
  1657 ;; Defined at:
  1658 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  s               2   20[COMRAM] PTR const unsigned char 
  1661 ;;		 -> dbuf(32), 
  1662 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  1663 ;;		 -> sprintf@f(6), 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  i               2   25[COMRAM] int 
  1666 ;;  c               1   24[COMRAM] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  2   20[COMRAM] int 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1676 ;;      Params:         4       0       0       0       0       0       0
  1677 ;;      Locals:         3       0       0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0
  1679 ;;      Totals:         7       0       0       0       0       0       0
  1680 ;;Total ram usage:        7 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    6
  1683 ;; This function calls:
  1684 ;;		_fputc
  1685 ;; This function is called by:
  1686 ;;		_pad
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text7
  1691  000FE2                     __ptext7:
  1692                           	opt callstack 0
  1693  000FE2                     _fputs:
  1694                           	opt callstack 19
  1695                           
  1696                           ;incstack = 0
  1697  000FE2  0E00               	movlw	0
  1698  000FE4  6E1B               	movwf	fputs@i+1,c
  1699  000FE6  0E00               	movlw	0
  1700  000FE8  6E1A               	movwf	fputs@i,c
  1701  000FEA  D00B               	goto	l1936
  1702  000FEC                     l1932:
  1703  000FEC  C019  F00C         	movff	fputs@c,fputc@c
  1704  000FF0  6A0D               	clrf	fputc@c+1,c
  1705  000FF2  C017  F00E         	movff	fputs@fp,fputc@fp
  1706  000FF6  C018  F00F         	movff	fputs@fp+1,fputc@fp+1
  1707  000FFA  EC8D  F006         	call	_fputc	;wreg free
  1708  000FFE  4A1A               	infsnz	fputs@i,f,c
  1709  001000  2A1B               	incf	fputs@i+1,f,c
  1710  001002                     l1936:
  1711  001002  501A               	movf	fputs@i,w,c
  1712  001004  2415               	addwf	fputs@s,w,c
  1713  001006  6ED9               	movwf	fsr2l,c
  1714  001008  501B               	movf	fputs@i+1,w,c
  1715  00100A  2016               	addwfc	fputs@s+1,w,c
  1716  00100C  6EDA               	movwf	fsr2h,c
  1717  00100E  50DF               	movf	indf2,w,c
  1718  001010  6E19               	movwf	fputs@c,c
  1719  001012  5019               	movf	fputs@c,w,c
  1720  001014  B4D8               	btfsc	status,2,c
  1721  001016  0012               	return	
  1722  001018  D7E9               	goto	l1932
  1723  00101A                     __end_of_fputs:
  1724                           	opt callstack 0
  1725                           
  1726 ;; *************** function _fputc *****************
  1727 ;; Defined at:
  1728 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  c               2   11[COMRAM] int 
  1731 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1732 ;;		 -> sprintf@f(6), 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  2   11[COMRAM] int 
  1737 ;; Registers used:
  1738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1744 ;;      Params:         4       0       0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0       0       0
  1746 ;;      Temps:          5       0       0       0       0       0       0
  1747 ;;      Totals:         9       0       0       0       0       0       0
  1748 ;;Total ram usage:        9 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    5
  1751 ;; This function calls:
  1752 ;;		_putch
  1753 ;; This function is called by:
  1754 ;;		_pad
  1755 ;;		_vfpfcnvrt
  1756 ;;		_fputs
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text8
  1761  000D1A                     __ptext8:
  1762                           	opt callstack 0
  1763  000D1A                     _fputc:
  1764                           	opt callstack 22
  1765                           
  1766                           ;incstack = 0
  1767  000D1A  500E               	movf	fputc@fp,w,c
  1768  000D1C  100F               	iorwf	fputc@fp+1,w,c
  1769  000D1E  B4D8               	btfsc	status,2,c
  1770  000D20  D004               	goto	u1270
  1771  000D22  500E               	movf	fputc@fp,w,c
  1772  000D24  100F               	iorwf	fputc@fp+1,w,c
  1773  000D26  A4D8               	btfss	status,2,c
  1774  000D28  D004               	goto	l1922
  1775  000D2A                     u1270:
  1776  000D2A  500C               	movf	fputc@c,w,c
  1777  000D2C  ECA8  F008         	call	_putch
  1778  000D30  0012               	return	
  1779  000D32                     l1922:
  1780  000D32  EE20 F004          	lfsr	2,4
  1781  000D36  500E               	movf	fputc@fp,w,c
  1782  000D38  26D9               	addwf	fsr2l,f,c
  1783  000D3A  500F               	movf	fputc@fp+1,w,c
  1784  000D3C  22DA               	addwfc	fsr2h,f,c
  1785  000D3E  50DE               	movf	postinc2,w,c
  1786  000D40  10DE               	iorwf	postinc2,w,c
  1787  000D42  B4D8               	btfsc	status,2,c
  1788  000D44  D016               	goto	u1290
  1789  000D46  EE20 F004          	lfsr	2,4
  1790  000D4A  500E               	movf	fputc@fp,w,c
  1791  000D4C  26D9               	addwf	fsr2l,f,c
  1792  000D4E  500F               	movf	fputc@fp+1,w,c
  1793  000D50  22DA               	addwfc	fsr2h,f,c
  1794  000D52  EE10 F002          	lfsr	1,2
  1795  000D56  500E               	movf	fputc@fp,w,c
  1796  000D58  26E1               	addwf	fsr1l,f,c
  1797  000D5A  500F               	movf	fputc@fp+1,w,c
  1798  000D5C  22E2               	addwfc	fsr1h,f,c
  1799  000D5E  50DE               	movf	postinc2,w,c
  1800  000D60  5CE6               	subwf	postinc1,w,c
  1801  000D62  50E6               	movf	postinc1,w,c
  1802  000D64  0A80               	xorlw	128
  1803  000D66  6E14               	movwf	(??_fputc+4)& (0+255),c
  1804  000D68  50DE               	movf	postinc2,w,c
  1805  000D6A  0A80               	xorlw	128
  1806  000D6C  5814               	subwfb	(??_fputc+4)& (0+255),w,c
  1807  000D6E  B0D8               	btfsc	status,0,c
  1808  000D70  0012               	return	
  1809  000D72                     u1290:
  1810  000D72  EE20 F002          	lfsr	2,2
  1811  000D76  500E               	movf	fputc@fp,w,c
  1812  000D78  26D9               	addwf	fsr2l,f,c
  1813  000D7A  500F               	movf	fputc@fp+1,w,c
  1814  000D7C  22DA               	addwfc	fsr2h,f,c
  1815  000D7E  CFDE F010          	movff	postinc2,??_fputc
  1816  000D82  CFDD F011          	movff	postdec2,??_fputc+1
  1817  000D86  C00E  FFD9         	movff	fputc@fp,fsr2l
  1818  000D8A  C00F  FFDA         	movff	fputc@fp+1,fsr2h
  1819  000D8E  CFDE F012          	movff	postinc2,??_fputc+2
  1820  000D92  CFDD F013          	movff	postdec2,??_fputc+3
  1821  000D96  5010               	movf	??_fputc,w,c
  1822  000D98  2412               	addwf	??_fputc+2,w,c
  1823  000D9A  6ED9               	movwf	fsr2l,c
  1824  000D9C  5011               	movf	??_fputc+1,w,c
  1825  000D9E  2013               	addwfc	??_fputc+3,w,c
  1826  000DA0  6EDA               	movwf	fsr2h,c
  1827  000DA2  C00C  FFDF         	movff	fputc@c,indf2
  1828  000DA6  EE20 F002          	lfsr	2,2
  1829  000DAA  500E               	movf	fputc@fp,w,c
  1830  000DAC  26D9               	addwf	fsr2l,f,c
  1831  000DAE  500F               	movf	fputc@fp+1,w,c
  1832  000DB0  22DA               	addwfc	fsr2h,f,c
  1833  000DB2  2ADE               	incf	postinc2,f,c
  1834  000DB4  0E00               	movlw	0
  1835  000DB6  22DD               	addwfc	postdec2,f,c
  1836  000DB8  0012               	return		;funcret
  1837  000DBA                     __end_of_fputc:
  1838                           	opt callstack 0
  1839                           
  1840 ;; *************** function _putch *****************
  1841 ;; Defined at:
  1842 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  c               1    wreg     unsigned char 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  c               1    0[COMRAM] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1856 ;;      Params:         0       0       0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0
  1859 ;;      Totals:         0       0       0       0       0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    4
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_fputc
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text9
  1871  001150                     __ptext9:
  1872                           	opt callstack 0
  1873  001150                     _putch:
  1874                           	opt callstack 22
  1875                           
  1876                           ;incstack = 0
  1877  001150  0012               	return		;funcret
  1878  001152                     __end_of_putch:
  1879                           	opt callstack 0
  1880                           
  1881 ;; *************** function _abs *****************
  1882 ;; Defined at:
  1883 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  a               2   29[COMRAM] int 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  2   29[COMRAM] int 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1897 ;;      Params:         2       0       0       0       0       0       0
  1898 ;;      Locals:         0       0       0       0       0       0       0
  1899 ;;      Temps:          2       0       0       0       0       0       0
  1900 ;;      Totals:         4       0       0       0       0       0       0
  1901 ;;Total ram usage:        4 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    4
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_dtoa
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text10
  1912  00104E                     __ptext10:
  1913                           	opt callstack 0
  1914  00104E                     _abs:
  1915                           	opt callstack 22
  1916                           
  1917                           ;incstack = 0
  1918  00104E  BE1F               	btfsc	abs@a+1,7,c
  1919  001050  D005               	goto	u1360
  1920  001052  501F               	movf	abs@a+1,w,c
  1921  001054  E110               	bnz	l939
  1922  001056  041E               	decf	abs@a,w,c
  1923  001058  B0D8               	btfsc	status,0,c
  1924  00105A  D00D               	goto	l939
  1925  00105C                     u1360:
  1926  00105C  C01E  F020         	movff	abs@a,??_abs
  1927  001060  C01F  F021         	movff	abs@a+1,??_abs+1
  1928  001064  1E20               	comf	??_abs,f,c
  1929  001066  1E21               	comf	??_abs+1,f,c
  1930  001068  4A20               	infsnz	??_abs,f,c
  1931  00106A  2A21               	incf	??_abs+1,f,c
  1932  00106C  C020  F01E         	movff	??_abs,?_abs
  1933  001070  C021  F01F         	movff	??_abs+1,?_abs+1
  1934  001074  0012               	return	
  1935  001076                     l939:
  1936  001076  C01E  F01E         	movff	abs@a,?_abs
  1937  00107A  C01F  F01F         	movff	abs@a+1,?_abs+1
  1938  00107E  0012               	return		;funcret
  1939  001080                     __end_of_abs:
  1940                           	opt callstack 0
  1941                           
  1942 ;; *************** function ___aomod *****************
  1943 ;; Defined at:
  1944 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  dividend        8   11[COMRAM] long long 
  1947 ;;  divisor         8   19[COMRAM] long long 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  sign            1   28[COMRAM] unsigned char 
  1950 ;;  counter         1   27[COMRAM] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  8   11[COMRAM] long long 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1960 ;;      Params:        16       0       0       0       0       0       0
  1961 ;;      Locals:         2       0       0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0
  1963 ;;      Totals:        18       0       0       0       0       0       0
  1964 ;;Total ram usage:       18 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    4
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_dtoa
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text11
  1975  000B14                     __ptext11:
  1976                           	opt callstack 0
  1977  000B14                     ___aomod:
  1978                           	opt callstack 22
  1979                           
  1980                           ;incstack = 0
  1981  000B14  0E00               	movlw	0
  1982  000B16  6E1D               	movwf	___aomod@sign,c
  1983  000B18  AE13               	btfss	___aomod@dividend+7,7,c
  1984  000B1A  D012               	goto	l2026
  1985  000B1C  1E13               	comf	___aomod@dividend+7,f,c
  1986  000B1E  1E12               	comf	___aomod@dividend+6,f,c
  1987  000B20  1E11               	comf	___aomod@dividend+5,f,c
  1988  000B22  1E10               	comf	___aomod@dividend+4,f,c
  1989  000B24  1E0F               	comf	___aomod@dividend+3,f,c
  1990  000B26  1E0E               	comf	___aomod@dividend+2,f,c
  1991  000B28  1E0D               	comf	___aomod@dividend+1,f,c
  1992  000B2A  6C0C               	negf	___aomod@dividend,c
  1993  000B2C  0E00               	movlw	0
  1994  000B2E  220D               	addwfc	___aomod@dividend+1,f,c
  1995  000B30  220E               	addwfc	___aomod@dividend+2,f,c
  1996  000B32  220F               	addwfc	___aomod@dividend+3,f,c
  1997  000B34  2210               	addwfc	___aomod@dividend+4,f,c
  1998  000B36  2211               	addwfc	___aomod@dividend+5,f,c
  1999  000B38  2212               	addwfc	___aomod@dividend+6,f,c
  2000  000B3A  2213               	addwfc	___aomod@dividend+7,f,c
  2001  000B3C  0E01               	movlw	1
  2002  000B3E  6E1D               	movwf	___aomod@sign,c
  2003  000B40                     l2026:
  2004  000B40  AE1B               	btfss	___aomod@divisor+7,7,c
  2005  000B42  D010               	goto	l2030
  2006  000B44  1E1B               	comf	___aomod@divisor+7,f,c
  2007  000B46  1E1A               	comf	___aomod@divisor+6,f,c
  2008  000B48  1E19               	comf	___aomod@divisor+5,f,c
  2009  000B4A  1E18               	comf	___aomod@divisor+4,f,c
  2010  000B4C  1E17               	comf	___aomod@divisor+3,f,c
  2011  000B4E  1E16               	comf	___aomod@divisor+2,f,c
  2012  000B50  1E15               	comf	___aomod@divisor+1,f,c
  2013  000B52  6C14               	negf	___aomod@divisor,c
  2014  000B54  0E00               	movlw	0
  2015  000B56  2215               	addwfc	___aomod@divisor+1,f,c
  2016  000B58  2216               	addwfc	___aomod@divisor+2,f,c
  2017  000B5A  2217               	addwfc	___aomod@divisor+3,f,c
  2018  000B5C  2218               	addwfc	___aomod@divisor+4,f,c
  2019  000B5E  2219               	addwfc	___aomod@divisor+5,f,c
  2020  000B60  221A               	addwfc	___aomod@divisor+6,f,c
  2021  000B62  221B               	addwfc	___aomod@divisor+7,f,c
  2022  000B64                     l2030:
  2023  000B64  5014               	movf	___aomod@divisor,w,c
  2024  000B66  1015               	iorwf	___aomod@divisor+1,w,c
  2025  000B68  1016               	iorwf	___aomod@divisor+2,w,c
  2026  000B6A  1017               	iorwf	___aomod@divisor+3,w,c
  2027  000B6C  1018               	iorwf	___aomod@divisor+4,w,c
  2028  000B6E  1019               	iorwf	___aomod@divisor+5,w,c
  2029  000B70  101A               	iorwf	___aomod@divisor+6,w,c
  2030  000B72  101B               	iorwf	___aomod@divisor+7,w,c
  2031  000B74  B4D8               	btfsc	status,2,c
  2032  000B76  D03C               	goto	l2046
  2033  000B78  0E01               	movlw	1
  2034  000B7A  6E1C               	movwf	___aomod@counter,c
  2035  000B7C  D00A               	goto	l2036
  2036  000B7E                     l2034:
  2037  000B7E  90D8               	bcf	status,0,c
  2038  000B80  3614               	rlcf	___aomod@divisor,f,c
  2039  000B82  3615               	rlcf	___aomod@divisor+1,f,c
  2040  000B84  3616               	rlcf	___aomod@divisor+2,f,c
  2041  000B86  3617               	rlcf	___aomod@divisor+3,f,c
  2042  000B88  3618               	rlcf	___aomod@divisor+4,f,c
  2043  000B8A  3619               	rlcf	___aomod@divisor+5,f,c
  2044  000B8C  361A               	rlcf	___aomod@divisor+6,f,c
  2045  000B8E  361B               	rlcf	___aomod@divisor+7,f,c
  2046  000B90  2A1C               	incf	___aomod@counter,f,c
  2047  000B92                     l2036:
  2048  000B92  AE1B               	btfss	___aomod@divisor+7,7,c
  2049  000B94  D7F4               	goto	l2034
  2050  000B96                     u1470:
  2051  000B96  5014               	movf	___aomod@divisor,w,c
  2052  000B98  5C0C               	subwf	___aomod@dividend,w,c
  2053  000B9A  5015               	movf	___aomod@divisor+1,w,c
  2054  000B9C  580D               	subwfb	___aomod@dividend+1,w,c
  2055  000B9E  5016               	movf	___aomod@divisor+2,w,c
  2056  000BA0  580E               	subwfb	___aomod@dividend+2,w,c
  2057  000BA2  5017               	movf	___aomod@divisor+3,w,c
  2058  000BA4  580F               	subwfb	___aomod@dividend+3,w,c
  2059  000BA6  5018               	movf	___aomod@divisor+4,w,c
  2060  000BA8  5810               	subwfb	___aomod@dividend+4,w,c
  2061  000BAA  5019               	movf	___aomod@divisor+5,w,c
  2062  000BAC  5811               	subwfb	___aomod@dividend+5,w,c
  2063  000BAE  501A               	movf	___aomod@divisor+6,w,c
  2064  000BB0  5812               	subwfb	___aomod@dividend+6,w,c
  2065  000BB2  501B               	movf	___aomod@divisor+7,w,c
  2066  000BB4  5813               	subwfb	___aomod@dividend+7,w,c
  2067  000BB6  A0D8               	btfss	status,0,c
  2068  000BB8  D010               	goto	l2042
  2069  000BBA  5014               	movf	___aomod@divisor,w,c
  2070  000BBC  5E0C               	subwf	___aomod@dividend,f,c
  2071  000BBE  5015               	movf	___aomod@divisor+1,w,c
  2072  000BC0  5A0D               	subwfb	___aomod@dividend+1,f,c
  2073  000BC2  5016               	movf	___aomod@divisor+2,w,c
  2074  000BC4  5A0E               	subwfb	___aomod@dividend+2,f,c
  2075  000BC6  5017               	movf	___aomod@divisor+3,w,c
  2076  000BC8  5A0F               	subwfb	___aomod@dividend+3,f,c
  2077  000BCA  5018               	movf	___aomod@divisor+4,w,c
  2078  000BCC  5A10               	subwfb	___aomod@dividend+4,f,c
  2079  000BCE  5019               	movf	___aomod@divisor+5,w,c
  2080  000BD0  5A11               	subwfb	___aomod@dividend+5,f,c
  2081  000BD2  501A               	movf	___aomod@divisor+6,w,c
  2082  000BD4  5A12               	subwfb	___aomod@dividend+6,f,c
  2083  000BD6  501B               	movf	___aomod@divisor+7,w,c
  2084  000BD8  5A13               	subwfb	___aomod@dividend+7,f,c
  2085  000BDA                     l2042:
  2086  000BDA  90D8               	bcf	status,0,c
  2087  000BDC  321B               	rrcf	___aomod@divisor+7,f,c
  2088  000BDE  321A               	rrcf	___aomod@divisor+6,f,c
  2089  000BE0  3219               	rrcf	___aomod@divisor+5,f,c
  2090  000BE2  3218               	rrcf	___aomod@divisor+4,f,c
  2091  000BE4  3217               	rrcf	___aomod@divisor+3,f,c
  2092  000BE6  3216               	rrcf	___aomod@divisor+2,f,c
  2093  000BE8  3215               	rrcf	___aomod@divisor+1,f,c
  2094  000BEA  3214               	rrcf	___aomod@divisor,f,c
  2095  000BEC  2E1C               	decfsz	___aomod@counter,f,c
  2096  000BEE  D7D3               	goto	u1470
  2097  000BF0                     l2046:
  2098  000BF0  501D               	movf	___aomod@sign,w,c
  2099  000BF2  B4D8               	btfsc	status,2,c
  2100  000BF4  D010               	goto	l2050
  2101  000BF6  1E13               	comf	___aomod@dividend+7,f,c
  2102  000BF8  1E12               	comf	___aomod@dividend+6,f,c
  2103  000BFA  1E11               	comf	___aomod@dividend+5,f,c
  2104  000BFC  1E10               	comf	___aomod@dividend+4,f,c
  2105  000BFE  1E0F               	comf	___aomod@dividend+3,f,c
  2106  000C00  1E0E               	comf	___aomod@dividend+2,f,c
  2107  000C02  1E0D               	comf	___aomod@dividend+1,f,c
  2108  000C04  6C0C               	negf	___aomod@dividend,c
  2109  000C06  0E00               	movlw	0
  2110  000C08  220D               	addwfc	___aomod@dividend+1,f,c
  2111  000C0A  220E               	addwfc	___aomod@dividend+2,f,c
  2112  000C0C  220F               	addwfc	___aomod@dividend+3,f,c
  2113  000C0E  2210               	addwfc	___aomod@dividend+4,f,c
  2114  000C10  2211               	addwfc	___aomod@dividend+5,f,c
  2115  000C12  2212               	addwfc	___aomod@dividend+6,f,c
  2116  000C14  2213               	addwfc	___aomod@dividend+7,f,c
  2117  000C16                     l2050:
  2118  000C16  C00C  F00C         	movff	___aomod@dividend,?___aomod
  2119  000C1A  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  2120  000C1E  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  2121  000C22  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  2122  000C26  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  2123  000C2A  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  2124  000C2E  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  2125  000C32  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  2126  000C36  0012               	return		;funcret
  2127  000C38                     __end_of___aomod:
  2128                           	opt callstack 0
  2129                           
  2130 ;; *************** function ___aodiv *****************
  2131 ;; Defined at:
  2132 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  dividend        8   11[COMRAM] long long 
  2135 ;;  divisor         8   19[COMRAM] long long 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  quotient        8   29[COMRAM] long long 
  2138 ;;  sign            1   28[COMRAM] unsigned char 
  2139 ;;  counter         1   27[COMRAM] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  8   11[COMRAM] long long 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2149 ;;      Params:        16       0       0       0       0       0       0
  2150 ;;      Locals:        10       0       0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0
  2152 ;;      Totals:        26       0       0       0       0       0       0
  2153 ;;Total ram usage:       26 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    4
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_dtoa
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text12
  2164  0009CC                     __ptext12:
  2165                           	opt callstack 0
  2166  0009CC                     ___aodiv:
  2167                           	opt callstack 22
  2168                           
  2169                           ;incstack = 0
  2170  0009CC  0E00               	movlw	0
  2171  0009CE  6E1D               	movwf	___aodiv@sign,c
  2172  0009D0  AE1B               	btfss	___aodiv@divisor+7,7,c
  2173  0009D2  D012               	goto	l1982
  2174  0009D4  1E1B               	comf	___aodiv@divisor+7,f,c
  2175  0009D6  1E1A               	comf	___aodiv@divisor+6,f,c
  2176  0009D8  1E19               	comf	___aodiv@divisor+5,f,c
  2177  0009DA  1E18               	comf	___aodiv@divisor+4,f,c
  2178  0009DC  1E17               	comf	___aodiv@divisor+3,f,c
  2179  0009DE  1E16               	comf	___aodiv@divisor+2,f,c
  2180  0009E0  1E15               	comf	___aodiv@divisor+1,f,c
  2181  0009E2  6C14               	negf	___aodiv@divisor,c
  2182  0009E4  0E00               	movlw	0
  2183  0009E6  2215               	addwfc	___aodiv@divisor+1,f,c
  2184  0009E8  2216               	addwfc	___aodiv@divisor+2,f,c
  2185  0009EA  2217               	addwfc	___aodiv@divisor+3,f,c
  2186  0009EC  2218               	addwfc	___aodiv@divisor+4,f,c
  2187  0009EE  2219               	addwfc	___aodiv@divisor+5,f,c
  2188  0009F0  221A               	addwfc	___aodiv@divisor+6,f,c
  2189  0009F2  221B               	addwfc	___aodiv@divisor+7,f,c
  2190  0009F4  0E01               	movlw	1
  2191  0009F6  6E1D               	movwf	___aodiv@sign,c
  2192  0009F8                     l1982:
  2193  0009F8  AE13               	btfss	___aodiv@dividend+7,7,c
  2194  0009FA  D012               	goto	l1988
  2195  0009FC  1E13               	comf	___aodiv@dividend+7,f,c
  2196  0009FE  1E12               	comf	___aodiv@dividend+6,f,c
  2197  000A00  1E11               	comf	___aodiv@dividend+5,f,c
  2198  000A02  1E10               	comf	___aodiv@dividend+4,f,c
  2199  000A04  1E0F               	comf	___aodiv@dividend+3,f,c
  2200  000A06  1E0E               	comf	___aodiv@dividend+2,f,c
  2201  000A08  1E0D               	comf	___aodiv@dividend+1,f,c
  2202  000A0A  6C0C               	negf	___aodiv@dividend,c
  2203  000A0C  0E00               	movlw	0
  2204  000A0E  220D               	addwfc	___aodiv@dividend+1,f,c
  2205  000A10  220E               	addwfc	___aodiv@dividend+2,f,c
  2206  000A12  220F               	addwfc	___aodiv@dividend+3,f,c
  2207  000A14  2210               	addwfc	___aodiv@dividend+4,f,c
  2208  000A16  2211               	addwfc	___aodiv@dividend+5,f,c
  2209  000A18  2212               	addwfc	___aodiv@dividend+6,f,c
  2210  000A1A  2213               	addwfc	___aodiv@dividend+7,f,c
  2211  000A1C  0E01               	movlw	1
  2212  000A1E  1A1D               	xorwf	___aodiv@sign,f,c
  2213  000A20                     l1988:
  2214  000A20  EE20  F01E         	lfsr	2,___aodiv@quotient
  2215  000A24  0E07               	movlw	7
  2216  000A26                     u1391:
  2217  000A26  6ADE               	clrf	postinc2,c
  2218  000A28  06E8               	decf	wreg,f,c
  2219  000A2A  E2FD               	bc	u1391
  2220  000A2C  5014               	movf	___aodiv@divisor,w,c
  2221  000A2E  1015               	iorwf	___aodiv@divisor+1,w,c
  2222  000A30  1016               	iorwf	___aodiv@divisor+2,w,c
  2223  000A32  1017               	iorwf	___aodiv@divisor+3,w,c
  2224  000A34  1018               	iorwf	___aodiv@divisor+4,w,c
  2225  000A36  1019               	iorwf	___aodiv@divisor+5,w,c
  2226  000A38  101A               	iorwf	___aodiv@divisor+6,w,c
  2227  000A3A  101B               	iorwf	___aodiv@divisor+7,w,c
  2228  000A3C  B4D8               	btfsc	status,2,c
  2229  000A3E  D046               	goto	l2010
  2230  000A40  0E01               	movlw	1
  2231  000A42  6E1C               	movwf	___aodiv@counter,c
  2232  000A44  D00A               	goto	l1996
  2233  000A46                     l1994:
  2234  000A46  90D8               	bcf	status,0,c
  2235  000A48  3614               	rlcf	___aodiv@divisor,f,c
  2236  000A4A  3615               	rlcf	___aodiv@divisor+1,f,c
  2237  000A4C  3616               	rlcf	___aodiv@divisor+2,f,c
  2238  000A4E  3617               	rlcf	___aodiv@divisor+3,f,c
  2239  000A50  3618               	rlcf	___aodiv@divisor+4,f,c
  2240  000A52  3619               	rlcf	___aodiv@divisor+5,f,c
  2241  000A54  361A               	rlcf	___aodiv@divisor+6,f,c
  2242  000A56  361B               	rlcf	___aodiv@divisor+7,f,c
  2243  000A58  2A1C               	incf	___aodiv@counter,f,c
  2244  000A5A                     l1996:
  2245  000A5A  AE1B               	btfss	___aodiv@divisor+7,7,c
  2246  000A5C  D7F4               	goto	l1994
  2247  000A5E                     u1410:
  2248  000A5E  90D8               	bcf	status,0,c
  2249  000A60  361E               	rlcf	___aodiv@quotient,f,c
  2250  000A62  361F               	rlcf	___aodiv@quotient+1,f,c
  2251  000A64  3620               	rlcf	___aodiv@quotient+2,f,c
  2252  000A66  3621               	rlcf	___aodiv@quotient+3,f,c
  2253  000A68  3622               	rlcf	___aodiv@quotient+4,f,c
  2254  000A6A  3623               	rlcf	___aodiv@quotient+5,f,c
  2255  000A6C  3624               	rlcf	___aodiv@quotient+6,f,c
  2256  000A6E  3625               	rlcf	___aodiv@quotient+7,f,c
  2257  000A70  5014               	movf	___aodiv@divisor,w,c
  2258  000A72  5C0C               	subwf	___aodiv@dividend,w,c
  2259  000A74  5015               	movf	___aodiv@divisor+1,w,c
  2260  000A76  580D               	subwfb	___aodiv@dividend+1,w,c
  2261  000A78  5016               	movf	___aodiv@divisor+2,w,c
  2262  000A7A  580E               	subwfb	___aodiv@dividend+2,w,c
  2263  000A7C  5017               	movf	___aodiv@divisor+3,w,c
  2264  000A7E  580F               	subwfb	___aodiv@dividend+3,w,c
  2265  000A80  5018               	movf	___aodiv@divisor+4,w,c
  2266  000A82  5810               	subwfb	___aodiv@dividend+4,w,c
  2267  000A84  5019               	movf	___aodiv@divisor+5,w,c
  2268  000A86  5811               	subwfb	___aodiv@dividend+5,w,c
  2269  000A88  501A               	movf	___aodiv@divisor+6,w,c
  2270  000A8A  5812               	subwfb	___aodiv@dividend+6,w,c
  2271  000A8C  501B               	movf	___aodiv@divisor+7,w,c
  2272  000A8E  5813               	subwfb	___aodiv@dividend+7,w,c
  2273  000A90  A0D8               	btfss	status,0,c
  2274  000A92  D011               	goto	l2006
  2275  000A94  5014               	movf	___aodiv@divisor,w,c
  2276  000A96  5E0C               	subwf	___aodiv@dividend,f,c
  2277  000A98  5015               	movf	___aodiv@divisor+1,w,c
  2278  000A9A  5A0D               	subwfb	___aodiv@dividend+1,f,c
  2279  000A9C  5016               	movf	___aodiv@divisor+2,w,c
  2280  000A9E  5A0E               	subwfb	___aodiv@dividend+2,f,c
  2281  000AA0  5017               	movf	___aodiv@divisor+3,w,c
  2282  000AA2  5A0F               	subwfb	___aodiv@dividend+3,f,c
  2283  000AA4  5018               	movf	___aodiv@divisor+4,w,c
  2284  000AA6  5A10               	subwfb	___aodiv@dividend+4,f,c
  2285  000AA8  5019               	movf	___aodiv@divisor+5,w,c
  2286  000AAA  5A11               	subwfb	___aodiv@dividend+5,f,c
  2287  000AAC  501A               	movf	___aodiv@divisor+6,w,c
  2288  000AAE  5A12               	subwfb	___aodiv@dividend+6,f,c
  2289  000AB0  501B               	movf	___aodiv@divisor+7,w,c
  2290  000AB2  5A13               	subwfb	___aodiv@dividend+7,f,c
  2291  000AB4  801E               	bsf	___aodiv@quotient,0,c
  2292  000AB6                     l2006:
  2293  000AB6  90D8               	bcf	status,0,c
  2294  000AB8  321B               	rrcf	___aodiv@divisor+7,f,c
  2295  000ABA  321A               	rrcf	___aodiv@divisor+6,f,c
  2296  000ABC  3219               	rrcf	___aodiv@divisor+5,f,c
  2297  000ABE  3218               	rrcf	___aodiv@divisor+4,f,c
  2298  000AC0  3217               	rrcf	___aodiv@divisor+3,f,c
  2299  000AC2  3216               	rrcf	___aodiv@divisor+2,f,c
  2300  000AC4  3215               	rrcf	___aodiv@divisor+1,f,c
  2301  000AC6  3214               	rrcf	___aodiv@divisor,f,c
  2302  000AC8  2E1C               	decfsz	___aodiv@counter,f,c
  2303  000ACA  D7C9               	goto	u1410
  2304  000ACC                     l2010:
  2305  000ACC  501D               	movf	___aodiv@sign,w,c
  2306  000ACE  B4D8               	btfsc	status,2,c
  2307  000AD0  D010               	goto	l2014
  2308  000AD2  1E25               	comf	___aodiv@quotient+7,f,c
  2309  000AD4  1E24               	comf	___aodiv@quotient+6,f,c
  2310  000AD6  1E23               	comf	___aodiv@quotient+5,f,c
  2311  000AD8  1E22               	comf	___aodiv@quotient+4,f,c
  2312  000ADA  1E21               	comf	___aodiv@quotient+3,f,c
  2313  000ADC  1E20               	comf	___aodiv@quotient+2,f,c
  2314  000ADE  1E1F               	comf	___aodiv@quotient+1,f,c
  2315  000AE0  6C1E               	negf	___aodiv@quotient,c
  2316  000AE2  0E00               	movlw	0
  2317  000AE4  221F               	addwfc	___aodiv@quotient+1,f,c
  2318  000AE6  2220               	addwfc	___aodiv@quotient+2,f,c
  2319  000AE8  2221               	addwfc	___aodiv@quotient+3,f,c
  2320  000AEA  2222               	addwfc	___aodiv@quotient+4,f,c
  2321  000AEC  2223               	addwfc	___aodiv@quotient+5,f,c
  2322  000AEE  2224               	addwfc	___aodiv@quotient+6,f,c
  2323  000AF0  2225               	addwfc	___aodiv@quotient+7,f,c
  2324  000AF2                     l2014:
  2325  000AF2  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  2326  000AF6  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  2327  000AFA  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  2328  000AFE  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  2329  000B02  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  2330  000B06  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  2331  000B0A  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  2332  000B0E  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  2333  000B12  0012               	return		;funcret
  2334  000B14                     __end_of___aodiv:
  2335                           	opt callstack 0
  2336                           
  2337 ;; *************** function _UART_Write_Text *****************
  2338 ;; Defined at:
  2339 ;;		line 50 in file "setting_hardaware/uart.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  text            2   12[COMRAM] PTR unsigned char 
  2342 ;;		 -> main@r(10), 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  i               2   14[COMRAM] int 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2354 ;;      Params:         2       0       0       0       0       0       0
  2355 ;;      Locals:         2       0       0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0
  2357 ;;      Totals:         4       0       0       0       0       0       0
  2358 ;;Total ram usage:        4 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    5
  2361 ;; This function calls:
  2362 ;;		_UART_Write
  2363 ;; This function is called by:
  2364 ;;		_main
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text13
  2369  00101A                     __ptext13:
  2370                           	opt callstack 0
  2371  00101A                     _UART_Write_Text:
  2372                           	opt callstack 25
  2373                           
  2374                           ;setting_hardaware/uart.c: 51:     for(int i=0;text[i]!='\0';i++)
  2375                           
  2376                           ;incstack = 0
  2377  00101A  0E00               	movlw	0
  2378  00101C  6E10               	movwf	UART_Write_Text@i+1,c
  2379  00101E  0E00               	movlw	0
  2380  001020  6E0F               	movwf	UART_Write_Text@i,c
  2381  001022  D00B               	goto	l1798
  2382  001024                     l1794:
  2383                           
  2384                           ;setting_hardaware/uart.c: 52:         UART_Write(text[i]);
  2385  001024  500F               	movf	UART_Write_Text@i,w,c
  2386  001026  240D               	addwf	UART_Write_Text@text,w,c
  2387  001028  6ED9               	movwf	fsr2l,c
  2388  00102A  5010               	movf	UART_Write_Text@i+1,w,c
  2389  00102C  200E               	addwfc	UART_Write_Text@text+1,w,c
  2390  00102E  6EDA               	movwf	fsr2h,c
  2391  001030  50DF               	movf	indf2,w,c
  2392  001032  EC98  F008         	call	_UART_Write
  2393  001036  4A0F               	infsnz	UART_Write_Text@i,f,c
  2394  001038  2A10               	incf	UART_Write_Text@i+1,f,c
  2395  00103A                     l1798:
  2396  00103A  500F               	movf	UART_Write_Text@i,w,c
  2397  00103C  240D               	addwf	UART_Write_Text@text,w,c
  2398  00103E  6ED9               	movwf	fsr2l,c
  2399  001040  5010               	movf	UART_Write_Text@i+1,w,c
  2400  001042  200E               	addwfc	UART_Write_Text@text+1,w,c
  2401  001044  6EDA               	movwf	fsr2h,c
  2402  001046  50DF               	movf	indf2,w,c
  2403  001048  B4D8               	btfsc	status,2,c
  2404  00104A  0012               	return	
  2405  00104C  D7EB               	goto	l1794
  2406  00104E                     __end_of_UART_Write_Text:
  2407                           	opt callstack 0
  2408                           
  2409 ;; *************** function _UART_Write *****************
  2410 ;; Defined at:
  2411 ;;		line 40 in file "setting_hardaware/uart.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  data            1    wreg     unsigned char 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  data            1   11[COMRAM] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2425 ;;      Params:         0       0       0       0       0       0       0
  2426 ;;      Locals:         1       0       0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0
  2428 ;;      Totals:         1       0       0       0       0       0       0
  2429 ;;Total ram usage:        1 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    4
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_UART_Write_Text
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text14
  2440  001130                     __ptext14:
  2441                           	opt callstack 0
  2442  001130                     _UART_Write:
  2443                           	opt callstack 25
  2444                           
  2445                           ;incstack = 0
  2446                           ;UART_Write@data stored from wreg
  2447  001130  6E0C               	movwf	UART_Write@data,c
  2448  001132                     
  2449                           ;setting_hardaware/uart.c: 40: void UART_Write(unsigned char data);setting_hardaware/uar
      +                          t.c: 41: {;setting_hardaware/uart.c: 42:     while(!TXSTAbits.TRMT);
  2450  001132  A2AC               	btfss	4012,1,c	;volatile
  2451  001134  D7FE               	goto	l1734
  2452                           
  2453                           ;setting_hardaware/uart.c: 43:     TXREG = data;
  2454  001136  C00C  FFAD         	movff	UART_Write@data,4013	;volatile
  2455  00113A  0012               	return		;funcret
  2456  00113C                     __end_of_UART_Write:
  2457                           	opt callstack 0
  2458                           
  2459 ;; *************** function _SYSTEM_Initialize *****************
  2460 ;; Defined at:
  2461 ;;		line 89 in file "setting_hardaware/setting.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2475 ;;      Params:         0       0       0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    5
  2482 ;; This function calls:
  2483 ;;		_ADC_Initialize
  2484 ;;		_OSCILLATOR_Initialize
  2485 ;;		_UART_Initialize
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text15
  2492  001122                     __ptext15:
  2493                           	opt callstack 0
  2494  001122                     _SYSTEM_Initialize:
  2495                           	opt callstack 25
  2496                           
  2497                           ;setting_hardaware/setting.c: 92:     OSCILLATOR_Initialize();
  2498                           
  2499                           ;incstack = 0
  2500  001122  ECA4  F008         	call	_OSCILLATOR_Initialize	;wreg free
  2501                           
  2502                           ;setting_hardaware/setting.c: 95:     UART_Initialize();
  2503  001126  EC6A  F008         	call	_UART_Initialize	;wreg free
  2504                           
  2505                           ;setting_hardaware/setting.c: 97:     ADC_Initialize();
  2506  00112A  EC7B  F008         	call	_ADC_Initialize	;wreg free
  2507  00112E  0012               	return		;funcret
  2508  001130                     __end_of_SYSTEM_Initialize:
  2509                           	opt callstack 0
  2510                           
  2511 ;; *************** function _UART_Initialize *****************
  2512 ;; Defined at:
  2513 ;;		line 7 in file "setting_hardaware/uart.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2527 ;;      Params:         0       0       0       0       0       0       0
  2528 ;;      Locals:         0       0       0       0       0       0       0
  2529 ;;      Temps:          0       0       0       0       0       0       0
  2530 ;;      Totals:         0       0       0       0       0       0       0
  2531 ;;Total ram usage:        0 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    4
  2534 ;; This function calls:
  2535 ;;		Nothing
  2536 ;; This function is called by:
  2537 ;;		_SYSTEM_Initialize
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text16
  2542  0010D4                     __ptext16:
  2543                           	opt callstack 0
  2544  0010D4                     _UART_Initialize:
  2545                           	opt callstack 25
  2546                           
  2547                           ;setting_hardaware/uart.c: 10:     TRISCbits.TRISC6 = 1;
  2548                           
  2549                           ;incstack = 0
  2550  0010D4  8C94               	bsf	3988,6,c	;volatile
  2551                           
  2552                           ;setting_hardaware/uart.c: 11:     TRISCbits.TRISC7 = 1;
  2553  0010D6  8E94               	bsf	3988,7,c	;volatile
  2554                           
  2555                           ;setting_hardaware/uart.c: 22:     TXSTAbits.SYNC = 0;
  2556  0010D8  98AC               	bcf	4012,4,c	;volatile
  2557                           
  2558                           ;setting_hardaware/uart.c: 23:     BAUDCONbits.BRG16 = 0 ;
  2559  0010DA  96B8               	bcf	4024,3,c	;volatile
  2560                           
  2561                           ;setting_hardaware/uart.c: 24:     TXSTAbits.BRGH = 1;
  2562  0010DC  84AC               	bsf	4012,2,c	;volatile
  2563                           
  2564                           ;setting_hardaware/uart.c: 25:     SPBRG = 12;
  2565  0010DE  0E0C               	movlw	12
  2566  0010E0  6EAF               	movwf	4015,c	;volatile
  2567                           
  2568                           ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
  2569  0010E2  8EAB               	bsf	4011,7,c	;volatile
  2570                           
  2571                           ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 1;
  2572  0010E4  889E               	bsf	3998,4,c	;volatile
  2573                           
  2574                           ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 0;
  2575  0010E6  9A9E               	bcf	3998,5,c	;volatile
  2576                           
  2577                           ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
  2578  0010E8  8AAC               	bsf	4012,5,c	;volatile
  2579                           
  2580                           ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
  2581  0010EA  88AB               	bsf	4011,4,c	;volatile
  2582                           
  2583                           ;setting_hardaware/uart.c: 34:     PIE1bits.TXIE = 0;
  2584  0010EC  989D               	bcf	3997,4,c	;volatile
  2585                           
  2586                           ;setting_hardaware/uart.c: 35:     IPR1bits.TXIP = 0;
  2587  0010EE  989F               	bcf	3999,4,c	;volatile
  2588                           
  2589                           ;setting_hardaware/uart.c: 36:     PIE1bits.RCIE = 1;
  2590  0010F0  8A9D               	bsf	3997,5,c	;volatile
  2591                           
  2592                           ;setting_hardaware/uart.c: 37:     IPR1bits.RCIP = 0;
  2593  0010F2  9A9F               	bcf	3999,5,c	;volatile
  2594  0010F4  0012               	return		;funcret
  2595  0010F6                     __end_of_UART_Initialize:
  2596                           	opt callstack 0
  2597                           
  2598 ;; *************** function _OSCILLATOR_Initialize *****************
  2599 ;; Defined at:
  2600 ;;		line 101 in file "setting_hardaware/setting.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;		None
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		None
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2614 ;;      Params:         0       0       0       0       0       0       0
  2615 ;;      Locals:         0       0       0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0
  2617 ;;      Totals:         0       0       0       0       0       0       0
  2618 ;;Total ram usage:        0 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    4
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_SYSTEM_Initialize
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text17
  2629  001148                     __ptext17:
  2630                           	opt callstack 0
  2631  001148                     _OSCILLATOR_Initialize:
  2632                           	opt callstack 25
  2633                           
  2634                           ;setting_hardaware/setting.c: 103:     IRCF2 = 1;
  2635                           
  2636                           ;incstack = 0
  2637  001148  8CD3               	bsf	4051,6,c	;volatile
  2638                           
  2639                           ;setting_hardaware/setting.c: 104:     IRCF1 = 0;
  2640  00114A  9AD3               	bcf	4051,5,c	;volatile
  2641                           
  2642                           ;setting_hardaware/setting.c: 105:     IRCF0 = 1;
  2643  00114C  88D3               	bsf	4051,4,c	;volatile
  2644  00114E  0012               	return		;funcret
  2645  001150                     __end_of_OSCILLATOR_Initialize:
  2646                           	opt callstack 0
  2647                           
  2648 ;; *************** function _ADC_Initialize *****************
  2649 ;; Defined at:
  2650 ;;		line 3 in file "setting_hardaware/adc.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2664 ;;      Params:         0       0       0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    4
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_SYSTEM_Initialize
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text18
  2679  0010F6                     __ptext18:
  2680                           	opt callstack 0
  2681  0010F6                     _ADC_Initialize:
  2682                           	opt callstack 25
  2683                           
  2684                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  2685                           
  2686                           ;incstack = 0
  2687  0010F6  6892               	setf	3986,c	;volatile
  2688                           
  2689                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  2690  0010F8  0E0E               	movlw	14
  2691  0010FA  6EC1               	movwf	4033,c	;volatile
  2692                           
  2693                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  2694  0010FC  8EC0               	bsf	4032,7,c	;volatile
  2695                           
  2696                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  2697  0010FE  0E07               	movlw	7
  2698  001100  12C0               	iorwf	4032,f,c	;volatile
  2699                           
  2700                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  2701  001102  0E00               	movlw	0
  2702  001104  6EC4               	movwf	4036,c	;volatile
  2703                           
  2704                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  2705  001106  0E00               	movlw	0
  2706  001108  6EC3               	movwf	4035,c	;volatile
  2707  00110A  0012               	return		;funcret
  2708  00110C                     __end_of_ADC_Initialize:
  2709                           	opt callstack 0
  2710                           
  2711 ;; *************** function _ADC_Read *****************
  2712 ;; Defined at:
  2713 ;;		line 13 in file "setting_hardaware/adc.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  channel         2   11[COMRAM] int 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  digital         2   15[COMRAM] int 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  2   11[COMRAM] int 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2727 ;;      Params:         2       0       0       0       0       0       0
  2728 ;;      Locals:         2       0       0       0       0       0       0
  2729 ;;      Temps:          2       0       0       0       0       0       0
  2730 ;;      Totals:         6       0       0       0       0       0       0
  2731 ;;Total ram usage:        6 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    4
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text19
  2742  000FA8                     __ptext19:
  2743                           	opt callstack 0
  2744  000FA8                     _ADC_Read:
  2745                           	opt callstack 26
  2746                           
  2747                           ;setting_hardaware/adc.c: 13: int ADC_Read(int channel);setting_hardaware/adc.c: 14: {;s
      +                          etting_hardaware/adc.c: 15:     int digital;;setting_hardaware/adc.c: 17:     ADCON0bits
      +                          .CHS = channel ;
  2748                           
  2749                           ;incstack = 0
  2750  000FA8  C00C  F00E         	movff	ADC_Read@channel,??_ADC_Read
  2751  000FAC  460E               	rlncf	??_ADC_Read,f,c
  2752  000FAE  460E               	rlncf	??_ADC_Read,f,c
  2753  000FB0  50C2               	movf	4034,w,c	;volatile
  2754  000FB2  180E               	xorwf	??_ADC_Read,w,c
  2755  000FB4  0BC3               	andlw	-61
  2756  000FB6  180E               	xorwf	??_ADC_Read,w,c
  2757  000FB8  6EC2               	movwf	4034,c	;volatile
  2758                           
  2759                           ;setting_hardaware/adc.c: 18:     ADCON0bits.GO = 1;
  2760  000FBA  82C2               	bsf	4034,1,c	;volatile
  2761                           
  2762                           ;setting_hardaware/adc.c: 19:     ADCON0bits.ADON = 1;
  2763  000FBC  80C2               	bsf	4034,0,c	;volatile
  2764  000FBE                     l150:
  2765  000FBE  B2C2               	btfsc	4034,1,c	;volatile
  2766  000FC0  D7FE               	goto	l150
  2767                           
  2768                           ;setting_hardaware/adc.c: 23:     digital = (ADRESH*256) | (ADRESL);
  2769  000FC2  50C3               	movf	4035,w,c	;volatile
  2770  000FC4  CFC4 F00E          	movff	4036,??_ADC_Read	;volatile
  2771  000FC8  6A0F               	clrf	(??_ADC_Read+1)& (0+255),c
  2772  000FCA  C00E  F00F         	movff	??_ADC_Read,??_ADC_Read+1
  2773  000FCE  6A0E               	clrf	??_ADC_Read,c
  2774  000FD0  100E               	iorwf	??_ADC_Read,w,c
  2775  000FD2  6E10               	movwf	ADC_Read@digital,c
  2776  000FD4  500F               	movf	??_ADC_Read+1,w,c
  2777  000FD6  6E11               	movwf	ADC_Read@digital+1,c
  2778                           
  2779                           ;setting_hardaware/adc.c: 24:     return(digital);
  2780  000FD8  C010  F00C         	movff	ADC_Read@digital,?_ADC_Read
  2781  000FDC  C011  F00D         	movff	ADC_Read@digital+1,?_ADC_Read+1
  2782  000FE0  0012               	return		;funcret
  2783  000FE2                     __end_of_ADC_Read:
  2784                           	opt callstack 0
  2785                           
  2786 ;; *************** function _Lo_ISR *****************
  2787 ;; Defined at:
  2788 ;;		line 82 in file "setting_hardaware/uart.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2802 ;;      Params:         0       0       0       0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0
  2804 ;;      Temps:          5       0       0       0       0       0       0
  2805 ;;      Totals:         5       0       0       0       0       0       0
  2806 ;;Total ram usage:        5 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    3
  2809 ;; This function calls:
  2810 ;;		_MyusartRead
  2811 ;; This function is called by:
  2812 ;;		Interrupt level 1
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	intcodelo
  2817  000018                     __pintcodelo:
  2818                           	opt callstack 0
  2819  000018                     _Lo_ISR:
  2820                           	opt callstack 19
  2821                           
  2822                           ;incstack = 0
  2823  000018  806F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2824  00001A  CFD8 F007          	movff	status,??_Lo_ISR
  2825  00001E  CFE8 F008          	movff	wreg,??_Lo_ISR+1
  2826  000022  CFE0 F009          	movff	bsr,??_Lo_ISR+2
  2827  000026  CFD9 F00A          	movff	fsr2l,??_Lo_ISR+3
  2828  00002A  CFDA F00B          	movff	fsr2h,??_Lo_ISR+4
  2829                           
  2830                           ;setting_hardaware/uart.c: 84:     if(RCIF)
  2831  00002E  AA9E               	btfss	3998,5,c	;volatile
  2832  000030  D007               	goto	i1l1856
  2833                           
  2834                           ;setting_hardaware/uart.c: 85:     {;setting_hardaware/uart.c: 86:         if(RCSTAbits.
      +                          OERR)
  2835  000032  A2AB               	btfss	4011,1,c	;volatile
  2836  000034  D003               	goto	i1l1854
  2837                           
  2838                           ;setting_hardaware/uart.c: 87:         {;setting_hardaware/uart.c: 88:             CREN 
      +                          = 0;
  2839  000036  98AB               	bcf	4011,4,c	;volatile
  2840                           
  2841                           ;setting_hardaware/uart.c: 89:             __nop();
  2842  000038  F000               	nop	
  2843                           
  2844                           ;setting_hardaware/uart.c: 90:             CREN = 1;
  2845  00003A  88AB               	bsf	4011,4,c	;volatile
  2846  00003C                     i1l1854:
  2847                           
  2848                           ;setting_hardaware/uart.c: 93:         MyusartRead();
  2849  00003C  ECB2  F007         	call	_MyusartRead	;wreg free
  2850  000040                     i1l1856:
  2851                           
  2852                           ;setting_hardaware/uart.c: 95:     if(PIR1bits.TMR1IF){
  2853  000040  A09E               	btfss	3998,0,c	;volatile
  2854  000042  D007               	goto	i1l114
  2855                           
  2856                           ;setting_hardaware/uart.c: 96:         count++;
  2857  000044  4A6B               	infsnz	_count,f,c
  2858  000046  2A6C               	incf	_count+1,f,c
  2859                           
  2860                           ;setting_hardaware/uart.c: 97:         TMR1 = 62410;
  2861  000048  0EF3               	movlw	243
  2862  00004A  6ECF               	movwf	4047,c	;volatile
  2863  00004C  0ECA               	movlw	202
  2864  00004E  6ECE               	movwf	4046,c	;volatile
  2865                           
  2866                           ;setting_hardaware/uart.c: 98:         PIR1bits.TMR1IF=0;
  2867  000050  909E               	bcf	3998,0,c	;volatile
  2868  000052                     i1l114:
  2869  000052  C00B  FFDA         	movff	??_Lo_ISR+4,fsr2h
  2870  000056  C00A  FFD9         	movff	??_Lo_ISR+3,fsr2l
  2871  00005A  C009  FFE0         	movff	??_Lo_ISR+2,bsr
  2872  00005E  C008  FFE8         	movff	??_Lo_ISR+1,wreg
  2873  000062  C007  FFD8         	movff	??_Lo_ISR,status
  2874  000066  906F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2875  000068  0010               	retfie	
  2876  00006A                     __end_of_Lo_ISR:
  2877                           	opt callstack 0
  2878                           
  2879 ;; *************** function _MyusartRead *****************
  2880 ;; Defined at:
  2881 ;;		line 61 in file "setting_hardaware/uart.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         0       0       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    2
  2902 ;; This function calls:
  2903 ;;		___awmod
  2904 ;;		i1_UART_Write
  2905 ;; This function is called by:
  2906 ;;		_Lo_ISR
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text21
  2911  000F64                     __ptext21:
  2912                           	opt callstack 0
  2913  000F64                     _MyusartRead:
  2914                           	opt callstack 19
  2915                           
  2916                           ;setting_hardaware/uart.c: 63:     mystring[lenStr] = RCREG;
  2917                           
  2918                           ;incstack = 0
  2919  000F64  0EA0               	movlw	low _mystring
  2920  000F66  246D               	addwf	_lenStr,w,c
  2921  000F68  6ED9               	movwf	fsr2l,c
  2922  000F6A  0E00               	movlw	high _mystring
  2923  000F6C  206E               	addwfc	_lenStr+1,w,c
  2924  000F6E  6EDA               	movwf	fsr2h,c
  2925  000F70  CFAE FFDF          	movff	4014,indf2	;volatile
  2926                           
  2927                           ;setting_hardaware/uart.c: 64:     UART_Write(mystring[lenStr]);
  2928  000F74  0EA0               	movlw	low _mystring
  2929  000F76  246D               	addwf	_lenStr,w,c
  2930  000F78  6ED9               	movwf	fsr2l,c
  2931  000F7A  0E00               	movlw	high _mystring
  2932  000F7C  206E               	addwfc	_lenStr+1,w,c
  2933  000F7E  6EDA               	movwf	fsr2h,c
  2934  000F80  50DF               	movf	indf2,w,c
  2935  000F82  EC9E  F008         	call	i1_UART_Write
  2936                           
  2937                           ;setting_hardaware/uart.c: 65:     lenStr++;
  2938  000F86  4A6D               	infsnz	_lenStr,f,c
  2939  000F88  2A6E               	incf	_lenStr+1,f,c
  2940                           
  2941                           ;setting_hardaware/uart.c: 66:     lenStr %= 10;
  2942  000F8A  C06D  F001         	movff	_lenStr,___awmod@dividend
  2943  000F8E  C06E  F002         	movff	_lenStr+1,___awmod@dividend+1
  2944  000F92  0E00               	movlw	0
  2945  000F94  6E04               	movwf	___awmod@divisor+1,c
  2946  000F96  0E0A               	movlw	10
  2947  000F98  6E03               	movwf	___awmod@divisor,c
  2948  000F9A  EC28  F007         	call	___awmod	;wreg free
  2949  000F9E  C001  F06D         	movff	?___awmod,_lenStr
  2950  000FA2  C002  F06E         	movff	?___awmod+1,_lenStr+1
  2951  000FA6  0012               	return		;funcret
  2952  000FA8                     __end_of_MyusartRead:
  2953                           	opt callstack 0
  2954                           
  2955 ;; *************** function i1_UART_Write *****************
  2956 ;; Defined at:
  2957 ;;		line 40 in file "setting_hardaware/uart.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  data            1    wreg     unsigned char 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  data            1    0[COMRAM] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2971 ;;      Params:         0       0       0       0       0       0       0
  2972 ;;      Locals:         1       0       0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0
  2974 ;;      Totals:         1       0       0       0       0       0       0
  2975 ;;Total ram usage:        1 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    1
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_MyusartRead
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text22
  2986  00113C                     __ptext22:
  2987                           	opt callstack 0
  2988  00113C                     i1_UART_Write:
  2989                           	opt callstack 19
  2990                           
  2991                           ;incstack = 0
  2992                           ;i1UART_Write@data stored from wreg
  2993  00113C  6E01               	movwf	i1UART_Write@data,c
  2994  00113E                     
  2995                           ;setting_hardaware/uart.c: 40: void UART_Write(unsigned char data);setting_hardaware/uar
      +                          t.c: 41: {;setting_hardaware/uart.c: 42:     while(!TXSTAbits.TRMT);
  2996  00113E  A2AC               	btfss	4012,1,c	;volatile
  2997  001140  D7FE               	goto	i1l1782
  2998                           
  2999                           ;setting_hardaware/uart.c: 43:     TXREG = data;
  3000  001142  C001  FFAD         	movff	i1UART_Write@data,4013	;volatile
  3001  001146  0012               	return		;funcret
  3002  001148                     __end_ofi1_UART_Write:
  3003                           	opt callstack 0
  3004                           
  3005 ;; *************** function ___awmod *****************
  3006 ;; Defined at:
  3007 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  dividend        2    0[COMRAM] int 
  3010 ;;  divisor         2    2[COMRAM] int 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  sign            1    5[COMRAM] unsigned char 
  3013 ;;  counter         1    4[COMRAM] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  2    0[COMRAM] int 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3023 ;;      Params:         4       0       0       0       0       0       0
  3024 ;;      Locals:         2       0       0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0
  3026 ;;      Totals:         6       0       0       0       0       0       0
  3027 ;;Total ram usage:        6 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_MyusartRead
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text23
  3038  000E50                     __ptext23:
  3039                           	opt callstack 0
  3040  000E50                     ___awmod:
  3041                           	opt callstack 19
  3042                           
  3043                           ;incstack = 0
  3044  000E50  0E00               	movlw	0
  3045  000E52  6E06               	movwf	___awmod@sign,c
  3046  000E54  AE02               	btfss	___awmod@dividend+1,7,c
  3047  000E56  D006               	goto	i1l1754
  3048  000E58  6C01               	negf	___awmod@dividend,c
  3049  000E5A  1E02               	comf	___awmod@dividend+1,f,c
  3050  000E5C  B0D8               	btfsc	status,0,c
  3051  000E5E  2A02               	incf	___awmod@dividend+1,f,c
  3052  000E60  0E01               	movlw	1
  3053  000E62  6E06               	movwf	___awmod@sign,c
  3054  000E64                     i1l1754:
  3055  000E64  AE04               	btfss	___awmod@divisor+1,7,c
  3056  000E66  D004               	goto	i1l1758
  3057  000E68  6C03               	negf	___awmod@divisor,c
  3058  000E6A  1E04               	comf	___awmod@divisor+1,f,c
  3059  000E6C  B0D8               	btfsc	status,0,c
  3060  000E6E  2A04               	incf	___awmod@divisor+1,f,c
  3061  000E70                     i1l1758:
  3062  000E70  5003               	movf	___awmod@divisor,w,c
  3063  000E72  1004               	iorwf	___awmod@divisor+1,w,c
  3064  000E74  B4D8               	btfsc	status,2,c
  3065  000E76  D018               	goto	i1l1774
  3066  000E78  0E01               	movlw	1
  3067  000E7A  6E05               	movwf	___awmod@counter,c
  3068  000E7C  D004               	goto	i1l1764
  3069  000E7E                     i1l1762:
  3070  000E7E  90D8               	bcf	status,0,c
  3071  000E80  3603               	rlcf	___awmod@divisor,f,c
  3072  000E82  3604               	rlcf	___awmod@divisor+1,f,c
  3073  000E84  2A05               	incf	___awmod@counter,f,c
  3074  000E86                     i1l1764:
  3075  000E86  AE04               	btfss	___awmod@divisor+1,7,c
  3076  000E88  D7FA               	goto	i1l1762
  3077  000E8A                     i1u112_20:
  3078  000E8A  5003               	movf	___awmod@divisor,w,c
  3079  000E8C  5C01               	subwf	___awmod@dividend,w,c
  3080  000E8E  5004               	movf	___awmod@divisor+1,w,c
  3081  000E90  5802               	subwfb	___awmod@dividend+1,w,c
  3082  000E92  A0D8               	btfss	status,0,c
  3083  000E94  D004               	goto	i1l1770
  3084  000E96  5003               	movf	___awmod@divisor,w,c
  3085  000E98  5E01               	subwf	___awmod@dividend,f,c
  3086  000E9A  5004               	movf	___awmod@divisor+1,w,c
  3087  000E9C  5A02               	subwfb	___awmod@dividend+1,f,c
  3088  000E9E                     i1l1770:
  3089  000E9E  90D8               	bcf	status,0,c
  3090  000EA0  3204               	rrcf	___awmod@divisor+1,f,c
  3091  000EA2  3203               	rrcf	___awmod@divisor,f,c
  3092  000EA4  2E05               	decfsz	___awmod@counter,f,c
  3093  000EA6  D7F1               	goto	i1u112_20
  3094  000EA8                     i1l1774:
  3095  000EA8  5006               	movf	___awmod@sign,w,c
  3096  000EAA  B4D8               	btfsc	status,2,c
  3097  000EAC  D004               	goto	i1l1778
  3098  000EAE  6C01               	negf	___awmod@dividend,c
  3099  000EB0  1E02               	comf	___awmod@dividend+1,f,c
  3100  000EB2  B0D8               	btfsc	status,0,c
  3101  000EB4  2A02               	incf	___awmod@dividend+1,f,c
  3102  000EB6                     i1l1778:
  3103  000EB6  C001  F001         	movff	___awmod@dividend,?___awmod
  3104  000EBA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3105  000EBE  0012               	return		;funcret
  3106  000EC0                     __end_of___awmod:
  3107                           	opt callstack 0
  3108                           
  3109 ;; *************** function _Hi_ISR *****************
  3110 ;; Defined at:
  3111 ;;		line 25 in file "main.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3125 ;;      Params:         0       0       0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0       0
  3128 ;;      Totals:         0       0       0       0       0       0       0
  3129 ;;Total ram usage:        0 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		Interrupt level 2
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	intcode
  3139  000008                     __pintcode:
  3140                           	opt callstack 0
  3141  000008                     _Hi_ISR:
  3142                           	opt callstack 19
  3143                           
  3144                           ;incstack = 0
  3145  000008  826F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3146  00000A  ED86  F008         	call	int_func,f	;refresh shadow registers
  3147                           
  3148                           	psect	intcode_body
  3149  00110C                     __pintcode_body:
  3150                           	opt callstack 19
  3151  00110C                     int_func:
  3152                           	opt callstack 19
  3153  00110C  0006               	pop		; remove dummy address from shadow register refresh
  3154                           
  3155                           ;main.c: 27:     if(PIR1bits.CCP1IF == 1) {
  3156  00110E  A49E               	btfss	3998,2,c	;volatile
  3157  001110  D006               	goto	i2l189
  3158                           
  3159                           ;main.c: 28:         RC2 ^= 1;
  3160  001112  7482               	btg	3970,2,c	;volatile
  3161                           
  3162                           ;main.c: 29:         PIR1bits.CCP1IF = 0;
  3163  001114  949E               	bcf	3998,2,c	;volatile
  3164                           
  3165                           ;main.c: 30:         TMR3 = 0;
  3166  001116  0E00               	movlw	0
  3167  001118  6EB3               	movwf	4019,c	;volatile
  3168  00111A  0E00               	movlw	0
  3169  00111C  6EB2               	movwf	4018,c	;volatile
  3170  00111E                     i2l189:
  3171  00111E  926F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3172  001120  0011               	retfie		f
  3173  001122                     __end_of_Hi_ISR:
  3174                           	opt callstack 0
  3175                           
  3176                           	psect	rparam
  3177  0000                     
  3178                           	psect	temp
  3179  00006F                     btemp:
  3180                           	opt callstack 0
  3181  00006F                     	ds	1
  3182  0000                     int$flags	set	btemp
  3183  0000                     wtemp8	set	btemp+1
  3184  0000                     ttemp5	set	btemp+1
  3185  0000                     ttemp6	set	btemp+4
  3186  0000                     ttemp7	set	btemp+8
  3187                           tosu	equ	0xFFF
  3188                           tosh	equ	0xFFE
  3189                           tosl	equ	0xFFD
  3190                           stkptr	equ	0xFFC
  3191                           pclatu	equ	0xFFB
  3192                           pclath	equ	0xFFA
  3193                           pcl	equ	0xFF9
  3194                           tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           prodh	equ	0xFF4
  3199                           prodl	equ	0xFF3
  3200                           indf0	equ	0xFEF
  3201                           postinc0	equ	0xFEE
  3202                           postdec0	equ	0xFED
  3203                           preinc0	equ	0xFEC
  3204                           plusw0	equ	0xFEB
  3205                           fsr0h	equ	0xFEA
  3206                           fsr0l	equ	0xFE9
  3207                           wreg	equ	0xFE8
  3208                           indf1	equ	0xFE7
  3209                           postinc1	equ	0xFE6
  3210                           postdec1	equ	0xFE5
  3211                           preinc1	equ	0xFE4
  3212                           plusw1	equ	0xFE3
  3213                           fsr1h	equ	0xFE2
  3214                           fsr1l	equ	0xFE1
  3215                           bsr	equ	0xFE0
  3216                           indf2	equ	0xFDF
  3217                           postinc2	equ	0xFDE
  3218                           postdec2	equ	0xFDD
  3219                           preinc2	equ	0xFDC
  3220                           plusw2	equ	0xFDB
  3221                           fsr2h	equ	0xFDA
  3222                           fsr2l	equ	0xFD9
  3223                           status	equ	0xFD8


Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     98     110
    BANK0           128     34      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@r(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@r(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1484_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@r(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@r(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 10
		 -> main@r(BANK0[10]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK0[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    9472
                                             16 BANK0     18    18      0
                           _ADC_Read
                  _SYSTEM_Initialize
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    8597
                                              0 BANK0     16    10      6
                           _ADC_Read (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                             90 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             74 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             38 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             27 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             20 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     2      2     264
                                             12 COMRAM     4     2      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2     197
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Lo_ISR                                               5     5      0     470
                                              6 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (10) _MyusartRead                                         0     0      0     470
                            ___awmod
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (11) i1_UART_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) ___awmod                                             6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Hi_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _UART_Write_Text
     _UART_Write
   _sprintf
     _ADC_Read (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _Lo_ISR (ROOT)
   _MyusartRead
     ___awmod
     i1_UART_Write

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     22      4C       4       59.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     62      6E       1       87.3%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA      14        0.0%
DATA                 0      0      BA      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Sep  2 12:03:16 2019

                            bsr 000FE0                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                           l150 0FBE                             l216 0DE8                             l227 067C  
                           l229 0684                             l939 1076                    __CFG_CPB$OFF 000000  
                           _RC2 007C12                    __CFG_CPD$OFF 000000                             _abs 104E  
                           _pad 0DBA                    ___awmod@sign 0006                             wreg 000FE8  
                  __CFG_IESO$ON 000000                    __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000  
                          l2010 0ACC                            ?_abs 001E                            l2014 0AF2  
                          l2006 0AB6                            l2030 0B64                            l2112 0822  
                          l2050 0C16                            l2042 0BDA                            l2034 0B7E  
                          l2026 0B40                            l2210 0CB4                            l2036 0B92  
                          l2108 080A                            l2060 0660                            l2140 0976  
                          l2046 0BF0                            l2134 093A                            l2150 0998  
                          l2144 0980                            l2216 0CBC                            l2074 069E  
                          l2162 0F24                            l2164 0F48                            l2180 0C3C  
                          l2078 06AE                            l2088 07A6                            l2192 0C4E  
                          l2186 0C46                            l1734 1132                            l1922 0D32  
                          l1932 0FEC                            l1940 10B4                            l1942 10B8  
                          l1936 1002                            l1952 0DD2                            l1794 1024  
                          l1962 0E0A                            l1956 0DE0                            l1798 103A  
                          l1982 09F8                            l1966 0E36                            l1958 0DF2  
                          ?_pad 001C                            l1994 0A46                            l1996 0A5A  
                          l1988 0A20                            _ADFM 007E07                            STR_1 0605  
                          STR_2 0601                            _CREN 007D5C                            u1410 0A5E  
                          u1500 0632                            u1270 0D2A                            u1510 0634  
                          u1360 105C                            u1600 07E4                            u1290 0D72  
                          u1610 07E8                            u1540 0672                            u1470 0B96  
                          u1630 07F4                            u1710 0C76                            u1391 0A26  
                          u1560 0698                            u1570 07B4                            u1730 0CE4  
                          u1590 07D6                            u1670 08BC                            u1591 07D4  
                          _RCIF 007CF5                            _TMR1 000FCE                            _TMR3 000FB2  
                  __CFG_WDTPS$1 000000                            abs@a 001E                            _dbuf 0080  
                          _main 0C38                            _dtoa 060A                            _prec 0067  
                          _nout 0063                            pad@i 0023                            pad@p 0020  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 0025                            fsr2l 000FD9  
                          btemp 006F                __end_of_ADC_Read 0FE2                            start 006A  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000000         __end_of_UART_Write_Text 104E  
                         ??_abs 0020                           ??_pad 0022                ?_UART_Initialize 0001  
__size_of_OSCILLATOR_Initialize 0008   __end_of_OSCILLATOR_Initialize 1150                 __end_of___aodiv 0B14  
                         ?_main 0001                           ?_dtoa 0027                 __end_of___aomod 0C38  
               __end_of___awmod 0EC0                           _IRCF0 007E9C                           _IRCF1 007E9D  
                         _IRCF2 007E9E                           i1l114 0052                           i2l189 111E  
                         _RCREG 000FAE                    vfpfcnvrt@fmt 004D                           _SPBRG 000FAF  
                         _TRISA 000F92                           _TXREG 000FAD                   __CFG_PWRT$OFF 000000  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000  
                   ?_UART_Write 0001                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000                           _flags 0069  
                         _count 006B                           _fputc 0D1A                           _fputs 0FE2  
                         pad@fp 001C                           _width 0065                           _putch 1150  
                         main@i 00C6                           main@j 00C4                           dtoa@d 0029  
                         main@r 00BA                           dtoa@i 0049                           dtoa@n 0041  
                         dtoa@p 003B                           dtoa@s 003F                           dtoa@w 003D  
                         tablat 000FF5                           ttemp5 0070                           ttemp6 0073  
                         ttemp7 0077                           status 000FD8                           wtemp8 0070  
               __end_of_sprintf 0F12                  __CFG_PBADEN$ON 000000                 __initialization 1080  
                  __end_of_main 0D1A                    __end_of_dtoa 084C                          ??_main 0063  
                        ??_dtoa 0031                   __activetblptr 000001                          _ADCON1 000FC1  
                        ?_fputc 000C                          ?_fputs 0015                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          _CCPR1L 000FBE                          ?_putch 0001  
                        i1l1770 0E9E                          i1l1762 0E7E                          i1l1754 0E64  
                        i1l1764 0E86                          i1l1774 0EA8                          i1l1758 0E70  
                        i1l1782 113E                          i1l1854 003C                          i1l1856 0040  
                        i1l1778 0EB6                          _Hi_ISR 0008                          _Lo_ISR 0018  
                __CFG_XINST$OFF 000000                    vfprintf@cfmt 0061             __size_of_UART_Write 000C  
                     ??___aodiv 001C                       ??___aomod 001C                  __CFG_STVREN$ON 000000  
                     ??___awmod 0005                ?_UART_Write_Text 000D                 ADC_Read@channel 000C  
                        _lenStr 006D                 ADC_Read@digital 0010                          clear_0 1086  
                        clear_1 1092                 ___awmod@divisor 0003                 ___awmod@counter 0005  
                        pad@buf 001E                          dtoa@fp 0027                          _strlen 10AA  
                        fputc@c 000C                          fputs@c 0019                          fputs@i 001A  
                        fputs@s 0015                       ?_ADC_Read 000C                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                        putch@c 0001                __end_of_vfprintf 0F64                       ??_sprintf 0063  
             _SYSTEM_Initialize 1122                      __accesstop 0080         __end_of__initialization 1098  
            ?_SYSTEM_Initialize 0001                   ___rparam_used 000001                   ?i1_UART_Write 0001  
                __pcstackCOMRAM 0001             ??_SYSTEM_Initialize 000C                   __end_of_fputc 0DBA  
                 __end_of_fputs 101A                   __end_of_putch 1152                      ??_ADC_Read 000E  
                 ??_MyusartRead 0007                         ??_fputc 0010       __end_of_SYSTEM_Initialize 1130  
                       ??_fputs 0019                         ??_putch 000C                      __pbssBANK0 0080  
                       ?_Hi_ISR 0001                         ?_Lo_ISR 0001                  ??i1_UART_Write 0001  
       __size_of_ADC_Initialize 0016                         ?_strlen 000C                    ??_UART_Write 000C  
            __size_of_vfpfcnvrt 0180             __end_of_MyusartRead 0FA8                 __size_of_Hi_ISR 111A  
               __size_of_Lo_ISR 0052                         __Hparam 0000                         __Lparam 0000  
                       ___aodiv 09CC                         ___aomod 0B14                         ___awmod 0E50  
            __end_of_UART_Write 113C                       ?_vfprintf 005B                    __psmallconst 0600  
                       __pcinit 1080                         __ramtop 0600                         __ptext0 0C38  
                       __ptext1 0EC0                         __ptext2 0F12                         __ptext3 084C  
                       __ptext4 060A                         __ptext5 0DBA                         __ptext6 10AA  
                       __ptext7 0FE2                         __ptext8 0D1A                         __ptext9 1150  
               __size_of_strlen 002A                       _T1CONbits 000FCD           _OSCILLATOR_Initialize 1148  
                     _T2CONbits 000FCA                    __size_of_abs 0032                    __size_of_pad 0096  
              ___awmod@dividend 0001        __size_of_UART_Initialize 0022      __size_of_SYSTEM_Initialize 000E  
                       _sprintf 0EC0                  __pintcode_body 110C            end_of_initialization 1098  
                       fputc@fp 000E                         int_func 110C                         fputs@fp 0017  
             __end_of_vfpfcnvrt 09CC                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                    ??_vfprintf 0061                         strlen@a 000E                         strlen@s 000C  
                UART_Write@data 000C                       _TRISCbits 000F94                     _MyusartRead 0F64  
          __end_ofi1_UART_Write 1148               __size_of_ADC_Read 003A                     _CCP1CONbits 000FBD  
                     _TXSTAbits 000FAC                  __end_of_Hi_ISR 1122                  __end_of_Lo_ISR 006A  
                   vfpfcnvrt@ap 004F                     vfpfcnvrt@fp 004B                     vfpfcnvrt@ll 0053  
                   _BAUDCONbits 000FB8                  _ADC_Initialize 10F6          ?_OSCILLATOR_Initialize 0001  
      __size_of_UART_Write_Text 0034                  __end_of_strlen 10D4             start_initialization 1080  
                   __end_of_abs 1080                     __end_of_pad 0E50               ??_UART_Initialize 000C  
              __CFG_OSC$INTIO67 000000                        ??_Hi_ISR 0001                        ??_Lo_ISR 0007  
                   vfprintf@fmt 005D          __end_of_ADC_Initialize 110C                __CFG_LPT1OSC$OFF 000000  
                      ??_strlen 000E                     __pbssCOMRAM 0063                   __pcstackBANK0 00AA  
              ___aodiv@dividend 000C                       _dtoa$1023 0039               __CFG_CCP2MX$PORTC 000000  
                     __pintcode 0008                        ?___aodiv 000C                        ?___aomod 000C  
              ___aodiv@quotient 001E                        ?___awmod 0001                 ?_ADC_Initialize 0001  
                   __pintcodelo 0018           __size_ofi1_UART_Write 000C               __size_of_vfprintf 0052  
                   __smallconst 0600                        _ADC_Read 0FA8                        ?_sprintf 00AA  
                __size_of_fputc 00A0                  __size_of_fputs 0038                  __size_of_putch 0002  
             ??_UART_Write_Text 000F                        _IPR1bits 000F9F                        _PIE1bits 000F9D  
                      i1u112_20 0E8A                        _PIR1bits 000F9E                    i1_UART_Write 113C  
                      _RCONbits 000FD0                       _vfpfcnvrt 084C                      _ADCON0bits 000FC2  
                    _ADCON2bits 000FC0                       main@i_969 00CA                       main@j_968 00C8  
                  ?_MyusartRead 0001                i1UART_Write@data 0001                        __Hrparam 0000  
                    vfprintf@ap 005F                        __Lrparam 0000                      vfprintf@fp 005B  
                  __Lsmallconst 0600              __CFG_BOREN$SBORDIS 000000         ??_OSCILLATOR_Initialize 000C  
              __size_of___aodiv 0148                __size_of___aomod 0124                __size_of___awmod 0070  
                    ?_vfpfcnvrt 004B                 ___aodiv@divisor 0014                 ___aodiv@counter 001C  
               _UART_Initialize 10D4                      sprintf@fmt 00AC                        __ptext10 104E  
                      __ptext11 0B14                        __ptext12 09CC                        __ptext21 0F64  
                      __ptext13 101A                        __ptext22 113C                        __ptext14 1130  
                      __ptext23 0E50                        __ptext15 1122                        __ptext16 10D4  
                      __ptext17 1148                        __ptext18 10F6                        __ptext19 0FA8  
              __size_of_sprintf 0052             UART_Write_Text@text 000D                   __size_of_main 00E2  
                 __size_of_dtoa 0242                        int$flags 006F                        _vfprintf 0F12  
                      _mystring 00A0                ___aomod@dividend 000C                      _INTCONbits 000FF2  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 00B2  
              ??_ADC_Initialize 000C         __end_of_UART_Initialize 10F6                 ___aomod@divisor 0014  
                   ??_vfpfcnvrt 0051                 ___aomod@counter 001C                 _UART_Write_Text 101A  
                      sprintf@f 00B4                        sprintf@s 00AA                      _UART_Write 1130  
          __size_of_MyusartRead 0044                    ___aodiv@sign 001D                UART_Write_Text@i 000F  
                  ___aomod@sign 001D  
