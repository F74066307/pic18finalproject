

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 22 10:09:34 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           ; Version 2.10
    77                           ; Generated 31/07/2019 GMT
    78                           ; 
    79                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4520 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111                           	psect	idataBANK0
   112  0031FE                     __pidataBANK0:
   113                           	opt callstack 0
   114                           
   115                           ;initializer for _Ro
   116                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};;setting_hardaware/adc.c: 10: double SmokeC
      +                          urve[3] = {2.3,0.53,-0.44};;setting_hardaware/adc.c: 11: double Ro = 10.0;
   117  0031FE  0000               	dw	0
   118  003200  4120               	dw	16672
   119                           
   120                           ;initializer for _cycle
   121  003202  0004               	dw	4
   122                           
   123                           ;initializer for _GAS_SMOKE
   124  003204  0002               	dw	2
   125                           
   126                           ;initializer for _GAS_CO
   127  003206  0001               	dw	1
   128                           
   129                           ;initializer for _RL_VALUE
   130  003208  0001               	dw	1
   131                           
   132                           ;initializer for _timer_val
   133  00320A  0BDB               	dw	3035
   134                           
   135                           	psect	idataBANK1
   136  003122                     __pidataBANK1:
   137                           	opt callstack 0
   138                           
   139                           ;initializer for stoa@F1153
   140  003122  28                 	db	40
   141  003123  6E                 	db	110
   142  003124  75                 	db	117
   143  003125  6C                 	db	108
   144  003126  6C                 	db	108
   145  003127  29                 	db	41
   146  003128  00                 	db	0
   147                           
   148                           ;initializer for _SmokeCurve
   149                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};;setting_hardaware/adc.c: 10: double SmokeC
      +                          urve[3] = {2.3,0.53,-0.44};
   150  003129  3333               	dw	13107
   151  00312B  4013               	dw	16403
   152                           
   153                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};;setting_hardaware/adc.c: 10: double SmokeC
      +                          urve[3] = {2.3,0.53,-0.44};
   154  00312D  AE14               	dw	44564
   155  00312F  3F07               	dw	16135
   156  003131  47AE               	dw	18350
   157  003133  BEE1               	dw	48865
   158                           
   159                           ;initializer for _COCurve
   160                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};
   161  003135  3333               	dw	13107
   162  003137  4013               	dw	16403
   163                           
   164                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};;setting_hardaware/ad
      +                          c.c: 9: double COCurve[3] = {2.3,0.72,-0.34};
   165  003139  51EC               	dw	20972
   166  00313B  3F38               	dw	16184
   167  00313D  147B               	dw	5243
   168  00313F  BEAE               	dw	48814
   169                           
   170                           ;initializer for _LPGCurve
   171                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};
   172  003141  3333               	dw	13107
   173  003143  4013               	dw	16403
   174                           
   175                           ;setting_hardaware/adc.c: 8: double LPGCurve[3] = {2.3,0.21,-0.47};
   176  003145  0A3D               	dw	2621
   177  003147  3E57               	dw	15959
   178  003149  A3D7               	dw	41943
   179  00314B  BEF0               	dw	48880
   180                           
   181                           	psect	smallconst
   182  000600                     __psmallconst:
   183                           	opt callstack 0
   184  000600  00                 	db	0
   185  000601                     _dp_l:
   186                           	opt callstack 0
   187  000601  0000               	dw	0
   188  000603  0000               	dw	0
   189  000605  CFDC               	dw	53212
   190  000607  35D1               	dw	13777
   191  000609                     __end_of_dp_l:
   192                           	opt callstack 0
   193  000609                     _dp_h:
   194                           	opt callstack 0
   195  000609  0000               	dw	0
   196  00060B  0000               	dw	0
   197  00060D  C000               	dw	49152
   198  00060F  3F15               	dw	16149
   199  000611                     __end_of_dp_h:
   200                           	opt callstack 0
   201  000611  4260               	dw	16992
   202  000613  0DA2               	dw	3490
   203  000615                     __end_ofsqrtf@tiny:
   204                           	opt callstack 0
   205  000615  A570               	dw	42352
   206  000617  36EC               	dw	14060
   207  000619                     __end_of_ivln2_l:
   208                           	opt callstack 0
   209  000619  AA3B               	dw	43579
   210  00061B  3FB8               	dw	16312
   211  00061D                     __end_of_ivln2:
   212                           	opt callstack 0
   213  00061D  384F               	dw	14415
   214  00061F  3F76               	dw	16246
   215  000621                     __end_of_cp:
   216                           	opt callstack 0
   217  000621  AA3C               	dw	43580
   218  000623  3338               	dw	13112
   219  000625                     __end_of_ovt:
   220                           	opt callstack 0
   221  000625  BE8C               	dw	48780
   222  000627  35BF               	dw	13759
   223  000629                     __end_of_lg2_l:
   224                           	opt callstack 0
   225  000629  7200               	dw	29184
   226  00062B  3F31               	dw	16177
   227  00062D                     __end_of_lg2_h:
   228                           	opt callstack 0
   229  00062D  7218               	dw	29208
   230  00062F  3F31               	dw	16177
   231  000631                     __end_of_lg2:
   232                           	opt callstack 0
   233  000631  BB4C               	dw	47948
   234  000633  3331               	dw	13105
   235  000635                     __end_of_P5:
   236                           	opt callstack 0
   237  000635  EA0E               	dw	59918
   238  000637  B5DD               	dw	46557
   239  000639                     __end_of_P4:
   240                           	opt callstack 0
   241  000639  B355               	dw	45909
   242  00063B  388A               	dw	14474
   243  00063D                     __end_of_P3:
   244                           	opt callstack 0
   245  00063D  0B61               	dw	2913
   246  00063F  BB36               	dw	47926
   247  000641                     __end_of_P2:
   248                           	opt callstack 0
   249  000641  AAAB               	dw	43691
   250  000643  3E2A               	dw	15914
   251  000645                     __end_of_P1:
   252                           	opt callstack 0
   253  000645  F142               	dw	61762
   254  000647  3E53               	dw	15955
   255  000649                     __end_of_L6:
   256                           	opt callstack 0
   257  000649  3255               	dw	12885
   258  00064B  3E6C               	dw	15980
   259  00064D                     __end_of_L5:
   260                           	opt callstack 0
   261  00064D  A305               	dw	41733
   262  00064F  3E8B               	dw	16011
   263  000651                     __end_of_L4:
   264                           	opt callstack 0
   265  000651  AAAB               	dw	43691
   266  000653  3EAA               	dw	16042
   267  000655                     __end_of_L3:
   268                           	opt callstack 0
   269  000655  6DB7               	dw	28087
   270  000657  3EDB               	dw	16091
   271  000659                     __end_of_L2:
   272                           	opt callstack 0
   273  000659  999A               	dw	39322
   274  00065B  3F19               	dw	16153
   275  00065D                     __end_of_L1:
   276                           	opt callstack 0
   277  00065D  4260               	dw	16992
   278  00065F  0DA2               	dw	3490
   279  000661                     __end_of_tiny:
   280                           	opt callstack 0
   281  000661  F2CA               	dw	62154
   282  000663  7149               	dw	29001
   283  000665                     __end_of_huge:
   284                           	opt callstack 0
   285  000665  0000               	dw	0
   286  000667  4B80               	dw	19328
   287  000669                     __end_of_two24:
   288                           	opt callstack 0
   289  000669  9E26               	dw	40486
   290  00066B  3E78               	dw	15992
   291  00066D                     __end_of_Lg4:
   292                           	opt callstack 0
   293  00066D  E9EE               	dw	59886
   294  00066F  3E91               	dw	16017
   295  000671                     __end_of_Lg3:
   296                           	opt callstack 0
   297  000671  CE13               	dw	52755
   298  000673  3ECC               	dw	16076
   299  000675                     __end_of_Lg2:
   300                           	opt callstack 0
   301  000675  AAAA               	dw	43690
   302  000677  3F2A               	dw	16170
   303  000679                     __end_of_Lg1:
   304                           	opt callstack 0
   305  000679  F7D1               	dw	63441
   306  00067B  3717               	dw	14103
   307  00067D                     __end_of_ln2_lo:
   308                           	opt callstack 0
   309  00067D  7180               	dw	29056
   310  00067F  3F31               	dw	16177
   311  000681                     __end_of_ln2_hi:
   312                           	opt callstack 0
   313  000681                     _bp:
   314                           	opt callstack 0
   315  000681  0000               	dw	0
   316  000683  3F80               	dw	16256
   317  000685  0000               	dw	0
   318  000687  3FC0               	dw	16320
   319  000689                     __end_of_bp:
   320                           	opt callstack 0
   321  000689  AA00               	dw	43520
   322  00068B  3FB8               	dw	16312
   323  00068D                     __end_of_ivln2_h:
   324                           	opt callstack 0
   325  00068D  23C6               	dw	9158
   326  00068F  B8F6               	dw	47350
   327  000691                     __end_of_cp_l:
   328                           	opt callstack 0
   329  000691  4000               	dw	16384
   330  000693  3F76               	dw	16246
   331  000695                     __end_of_cp_h:
   332                           	opt callstack 0
   333  0000                     _LATBbits	set	3978
   334  0000                     _LATCbits	set	3979
   335  0000                     _LATD	set	3980
   336  0000                     _TRISA	set	3986
   337  0000                     _TRISBbits	set	3987
   338  0000                     _TRISD	set	3989
   339  0000                     _TRISC	set	3988
   340  0000                     _ADRES	set	4035
   341  0000                     _TMR1	set	4046
   342  0000                     _ADCON0bits	set	4034
   343  0000                     _ADCON2	set	4032
   344  0000                     _ADCON1	set	4033
   345  0000                     _RCONbits	set	4048
   346  0000                     _RCSTAbits	set	4011
   347  0000                     _RCREG	set	4014
   348  0000                     _TXREG	set	4013
   349  0000                     _TXSTAbits	set	4012
   350  0000                     _IPR1bits	set	3999
   351  0000                     _PIE1bits	set	3997
   352  0000                     _PIR1bits	set	3998
   353  0000                     _T1CONbits	set	4045
   354  0000                     _CREN	set	32092
   355  0000                     _RCIF	set	31989
   356  0000                     _IRCF0	set	32412
   357  0000                     _IRCF1	set	32413
   358  0000                     _IRCF2	set	32414
   359  0000                     _INTCONbits	set	4082
   360  000695                     STR_3:
   361  000695  25                 	db	37
   362  000696  73                 	db	115	;'s'
   363  000697  25                 	db	37
   364  000698  2E                 	db	46
   365  000699  32                 	db	50	;'2'
   366  00069A  66                 	db	102	;'f'
   367  00069B  20                 	db	32
   368  00069C  43                 	db	67	;'C'
   369  00069D  00                 	db	0
   370  00069E                     STR_1:
   371  00069E  6D                 	db	109	;'m'
   372  00069F  6F                 	db	111	;'o'
   373  0006A0  6E                 	db	110	;'n'
   374  0006A1  69                 	db	105	;'i'
   375  0006A2  74                 	db	116	;'t'
   376  0006A3  6F                 	db	111	;'o'
   377  0006A4  72                 	db	114	;'r'
   378  0006A5  00                 	db	0
   379  0006A6                     STR_2:
   380  0006A6  73                 	db	115	;'s'
   381  0006A7  74                 	db	116	;'t'
   382  0006A8  61                 	db	97	;'a'
   383  0006A9  72                 	db	114	;'r'
   384  0006AA  74                 	db	116	;'t'
   385  0006AB  00                 	db	0
   386  0006AC                     STR_4:
   387  0006AC  49                 	db	73	;'I'
   388  0006AD  4E                 	db	78	;'N'
   389  0006AE  46                 	db	70	;'F'
   390  0006AF  00                 	db	0
   391  0006B0                     STR_8:
   392  0006B0  4E                 	db	78	;'N'
   393  0006B1  41                 	db	65	;'A'
   394  0006B2  4E                 	db	78	;'N'
   395  0006B3  00                 	db	0
   396  0006B4                     STR_5:
   397  0006B4  69                 	db	105	;'i'
   398  0006B5  6E                 	db	110	;'n'
   399  0006B6  66                 	db	102	;'f'
   400  0006B7  00                 	db	0
   401  0006B8                     STR_9:
   402  0006B8  6E                 	db	110	;'n'
   403  0006B9  61                 	db	97	;'a'
   404  0006BA  6E                 	db	110	;'n'
   405  0006BB  00                 	db	0
   406  0006BC                     STR_12:
   407  0006BC  6C                 	db	108	;'l'
   408  0006BD  66                 	db	102	;'f'
   409  0006BE  00                 	db	0
   410  0000                     
   411                           ; #config settings
   412  0006BF  00                 	db	0	; dummy byte at the end
   413  0000                     
   414                           	psect	cinit
   415  002B66                     __pcinit:
   416                           	opt callstack 0
   417  002B66                     start_initialization:
   418                           	opt callstack 0
   419  002B66                     __initialization:
   420                           	opt callstack 0
   421                           
   422                           ; Initialize objects allocated to BANK1 (43 bytes)
   423                           ; load TBLPTR registers with __pidataBANK1
   424  002B66  0E22               	movlw	low __pidataBANK1
   425  002B68  6EF6               	movwf	tblptrl,c
   426  002B6A  0E31               	movlw	high __pidataBANK1
   427  002B6C  6EF7               	movwf	tblptrh,c
   428  002B6E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   429  002B70  6EF8               	movwf	tblptru,c
   430  002B72  EE01  F07C         	lfsr	0,__pdataBANK1
   431  002B76  EE10 F02B          	lfsr	1,43
   432  002B7A                     copy_data0:
   433  002B7A  0009               	tblrd		*+
   434  002B7C  CFF5 FFEE          	movff	tablat,postinc0
   435  002B80  50E5               	movf	postdec1,w,c
   436  002B82  50E1               	movf	fsr1l,w,c
   437  002B84  E1FA               	bnz	copy_data0
   438                           
   439                           ; Initialize objects allocated to BANK0 (14 bytes)
   440                           ; load TBLPTR registers with __pidataBANK0
   441  002B86  0EFE               	movlw	low __pidataBANK0
   442  002B88  6EF6               	movwf	tblptrl,c
   443  002B8A  0E31               	movlw	high __pidataBANK0
   444  002B8C  6EF7               	movwf	tblptrh,c
   445  002B8E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   446  002B90  6EF8               	movwf	tblptru,c
   447  002B92  EE00  F0F1         	lfsr	0,__pdataBANK0
   448  002B96  EE10 F00E          	lfsr	1,14
   449  002B9A                     copy_data1:
   450  002B9A  0009               	tblrd		*+
   451  002B9C  CFF5 FFEE          	movff	tablat,postinc0
   452  002BA0  50E5               	movf	postdec1,w,c
   453  002BA2  50E1               	movf	fsr1l,w,c
   454  002BA4  E1FA               	bnz	copy_data1
   455                           
   456                           ; Clear objects allocated to BANK2 (100 bytes)
   457  002BA6  EE02  F000         	lfsr	0,__pbssBANK2
   458  002BAA  0E64               	movlw	100
   459  002BAC                     clear_0:
   460  002BAC  6AEE               	clrf	postinc0,c
   461  002BAE  06E8               	decf	wreg,f,c
   462  002BB0  E1FD               	bnz	clear_0
   463                           
   464                           ; Clear objects allocated to BANK1 (124 bytes)
   465  002BB2  EE01  F000         	lfsr	0,__pbssBANK1
   466  002BB6  0E7C               	movlw	124
   467  002BB8                     clear_1:
   468  002BB8  6AEE               	clrf	postinc0,c
   469  002BBA  06E8               	decf	wreg,f,c
   470  002BBC  E1FD               	bnz	clear_1
   471                           
   472                           ; Clear objects allocated to BANK0 (22 bytes)
   473  002BBE  EE00  F0DB         	lfsr	0,__pbssBANK0
   474  002BC2  0E16               	movlw	22
   475  002BC4                     clear_2:
   476  002BC4  6AEE               	clrf	postinc0,c
   477  002BC6  06E8               	decf	wreg,f,c
   478  002BC8  E1FD               	bnz	clear_2
   479  002BCA                     end_of_initialization:
   480                           	opt callstack 0
   481  002BCA                     __end_of__initialization:
   482                           	opt callstack 0
   483  002BCA  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   484  002BCC  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   485  002BCE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   486  002BD0  6EF8               	movwf	tblptru,c
   487  002BD2  0100               	movlb	0
   488  002BD4  EF18  F019         	goto	_main	;jump to C main() function
   489                           
   490                           	psect	bssBANK0
   491  0000DB                     __pbssBANK0:
   492                           	opt callstack 0
   493  0000DB                     floorf@F524:
   494                           	opt callstack 0
   495  0000DB                     	ds	4
   496  0000DF                     ___fpclassifyf@F463:
   497                           	opt callstack 0
   498  0000DF                     	ds	4
   499  0000E3                     _errno:
   500                           	opt callstack 0
   501  0000E3                     	ds	2
   502  0000E5                     _nout:
   503                           	opt callstack 0
   504  0000E5                     	ds	2
   505  0000E7                     _width:
   506                           	opt callstack 0
   507  0000E7                     	ds	2
   508  0000E9                     _prec:
   509                           	opt callstack 0
   510  0000E9                     	ds	2
   511  0000EB                     _flags:
   512                           	opt callstack 0
   513  0000EB                     	ds	2
   514  0000ED                     _GAS_LPG:
   515                           	opt callstack 0
   516  0000ED                     	ds	2
   517  0000EF                     _count:
   518                           	opt callstack 0
   519  0000EF                     	ds	2
   520                           
   521                           	psect	dataBANK0
   522  0000F1                     __pdataBANK0:
   523                           	opt callstack 0
   524  0000F1                     _Ro:
   525                           	opt callstack 0
   526  0000F1                     	ds	4
   527  0000F5                     _cycle:
   528                           	opt callstack 0
   529  0000F5                     	ds	2
   530  0000F7                     _GAS_SMOKE:
   531                           	opt callstack 0
   532  0000F7                     	ds	2
   533  0000F9                     _GAS_CO:
   534                           	opt callstack 0
   535  0000F9                     	ds	2
   536  0000FB                     _RL_VALUE:
   537                           	opt callstack 0
   538  0000FB                     	ds	2
   539  0000FD                     _timer_val:
   540                           	opt callstack 0
   541  0000FD                     	ds	2
   542                           
   543                           	psect	bssBANK1
   544  000100                     __pbssBANK1:
   545                           	opt callstack 0
   546  000100                     _value:
   547                           	opt callstack 0
   548  000100                     	ds	12
   549  00010C                     fabsf@F463:
   550                           	opt callstack 0
   551  00010C                     	ds	4
   552  000110                     logf@F469:
   553                           	opt callstack 0
   554  000110                     	ds	4
   555  000114                     _smoke:
   556                           	opt callstack 0
   557  000114                     	ds	4
   558  000118                     _co:
   559                           	opt callstack 0
   560  000118                     	ds	4
   561  00011C                     _lpg:
   562                           	opt callstack 0
   563  00011C                     	ds	4
   564  000120                     _lenStr:
   565                           	opt callstack 0
   566  000120                     	ds	2
   567  000122                     _dbuf:
   568                           	opt callstack 0
   569  000122                     	ds	80
   570  000172                     _mystring:
   571                           	opt callstack 0
   572  000172                     	ds	10
   573                           
   574                           	psect	dataBANK1
   575  00017C                     __pdataBANK1:
   576                           	opt callstack 0
   577  00017C                     stoa@F1153:
   578                           	opt callstack 0
   579  00017C                     	ds	7
   580  000183                     _SmokeCurve:
   581                           	opt callstack 0
   582  000183                     	ds	12
   583  00018F                     _COCurve:
   584                           	opt callstack 0
   585  00018F                     	ds	12
   586  00019B                     _LPGCurve:
   587                           	opt callstack 0
   588  00019B                     	ds	12
   589                           
   590                           	psect	bssBANK2
   591  000200                     __pbssBANK2:
   592                           	opt callstack 0
   593  000200                     _r:
   594                           	opt callstack 0
   595  000200                     	ds	100
   596                           
   597                           	psect	cstackBANK1
   598  0001A7                     __pcstackBANK1:
   599                           	opt callstack 0
   600  0001A7                     ?___awmod:
   601                           	opt callstack 0
   602  0001A7                     UART_Write@data:
   603                           	opt callstack 0
   604  0001A7                     ___awmod@dividend:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x0
   608  0001A7                     	ds	2
   609  0001A9                     ___awmod@divisor:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0x2
   613  0001A9                     	ds	2
   614  0001AB                     ___awmod@counter:
   615                           	opt callstack 0
   616                           
   617                           ; 1 bytes @ 0x4
   618  0001AB                     	ds	1
   619  0001AC                     ___awmod@sign:
   620                           	opt callstack 0
   621                           
   622                           ; 1 bytes @ 0x5
   623  0001AC                     	ds	1
   624  0001AD                     ??_Lo_ISR:
   625                           
   626                           ; 1 bytes @ 0x6
   627  0001AD                     	ds	5
   628  0001B2                     Cmd@Value:
   629                           	opt callstack 0
   630  0001B2                     Data@Value:
   631                           	opt callstack 0
   632                           
   633                           ; 2 bytes @ 0xB
   634  0001B2                     	ds	2
   635  0001B4                     ??_Cmd:
   636  0001B4                     ??_Data:
   637                           
   638                           ; 1 bytes @ 0xD
   639  0001B4                     	ds	1
   640  0001B5                     Send2Lcd@Lcd:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0xE
   644  0001B5                     	ds	2
   645  0001B7                     ??_Send2Lcd:
   646                           
   647                           ; 1 bytes @ 0x10
   648  0001B7                     	ds	1
   649  0001B8                     Send2Lcd@Adr:
   650                           	opt callstack 0
   651                           
   652                           ; 1 bytes @ 0x11
   653  0001B8                     	ds	1
   654  0001B9                     ??_LCD_init:
   655                           
   656                           ; 1 bytes @ 0x12
   657  0001B9                     	ds	1
   658  0001BA                     
   659                           ; 1 bytes @ 0x13
   660                           
   661                           	psect	cstackBANK0
   662  000080                     __pcstackBANK0:
   663                           	opt callstack 0
   664  000080                     efgtoa@ou:
   665                           	opt callstack 0
   666                           
   667                           ; 4 bytes @ 0x0
   668  000080                     	ds	4
   669  000084                     _efgtoa$985:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x4
   673  000084                     	ds	2
   674  000086                     _efgtoa$986:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x6
   678  000086                     	ds	2
   679  000088                     _efgtoa$991:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x8
   683  000088                     	ds	2
   684  00008A                     _efgtoa$995:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0xA
   688  00008A                     	ds	2
   689  00008C                     _efgtoa$996:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0xC
   693  00008C                     	ds	2
   694  00008E                     _efgtoa$997:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0xE
   698  00008E                     	ds	2
   699  000090                     efgtoa@t:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0x10
   703  000090                     	ds	2
   704  000092                     efgtoa@pp:
   705                           	opt callstack 0
   706                           
   707                           ; 2 bytes @ 0x12
   708  000092                     	ds	2
   709  000094                     efgtoa@m:
   710                           	opt callstack 0
   711                           
   712                           ; 2 bytes @ 0x14
   713  000094                     	ds	2
   714  000096                     efgtoa@ne:
   715                           	opt callstack 0
   716                           
   717                           ; 2 bytes @ 0x16
   718  000096                     	ds	2
   719  000098                     efgtoa@d:
   720                           	opt callstack 0
   721                           
   722                           ; 2 bytes @ 0x18
   723  000098                     	ds	2
   724  00009A                     efgtoa@sign:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x1A
   728  00009A                     	ds	2
   729  00009C                     efgtoa@p:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x1C
   733  00009C                     	ds	2
   734  00009E                     efgtoa@nmode:
   735                           	opt callstack 0
   736                           
   737                           ; 1 bytes @ 0x1E
   738  00009E                     	ds	1
   739  00009F                     efgtoa@w:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x1F
   743  00009F                     	ds	2
   744  0000A1                     efgtoa@mode:
   745                           	opt callstack 0
   746                           
   747                           ; 1 bytes @ 0x21
   748  0000A1                     	ds	1
   749  0000A2                     efgtoa@h:
   750                           	opt callstack 0
   751                           
   752                           ; 4 bytes @ 0x22
   753  0000A2                     	ds	4
   754  0000A6                     efgtoa@l:
   755                           	opt callstack 0
   756                           
   757                           ; 4 bytes @ 0x26
   758  0000A6                     	ds	4
   759  0000AA                     efgtoa@i:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x2A
   763  0000AA                     	ds	2
   764  0000AC                     efgtoa@g:
   765                           	opt callstack 0
   766                           
   767                           ; 4 bytes @ 0x2C
   768  0000AC                     	ds	4
   769  0000B0                     efgtoa@e:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x30
   773  0000B0                     	ds	2
   774  0000B2                     efgtoa@n:
   775                           	opt callstack 0
   776                           
   777                           ; 2 bytes @ 0x32
   778  0000B2                     	ds	2
   779  0000B4                     efgtoa@u:
   780                           	opt callstack 0
   781                           
   782                           ; 4 bytes @ 0x34
   783  0000B4                     	ds	4
   784  0000B8                     vfprintf@cfmt:
   785                           	opt callstack 0
   786                           
   787                           ; 2 bytes @ 0x38
   788  0000B8                     	ds	2
   789  0000BA                     ?_sprintf:
   790                           	opt callstack 0
   791  0000BA                     sprintf@s:
   792                           	opt callstack 0
   793                           
   794                           ; 2 bytes @ 0x3A
   795  0000BA                     	ds	2
   796  0000BC                     sprintf@fmt:
   797                           	opt callstack 0
   798                           
   799                           ; 2 bytes @ 0x3C
   800  0000BC                     	ds	10
   801  0000C6                     sprintf@ap:
   802                           	opt callstack 0
   803                           
   804                           ; 2 bytes @ 0x46
   805  0000C6                     	ds	2
   806  0000C8                     sprintf@f:
   807                           	opt callstack 0
   808                           
   809                           ; 6 bytes @ 0x48
   810  0000C8                     	ds	6
   811  0000CE                     ??_Hi_ISR:
   812                           
   813                           ; 1 bytes @ 0x4E
   814  0000CE                     	ds	13
   815                           
   816                           	psect	cstackCOMRAM
   817  000001                     __pcstackCOMRAM:
   818                           	opt callstack 0
   819  000001                     ?_strlen:
   820                           	opt callstack 0
   821  000001                     ?___fpclassifyf:
   822                           	opt callstack 0
   823  000001                     ?_isupper:
   824                           	opt callstack 0
   825  000001                     ?_isdigit:
   826                           	opt callstack 0
   827  000001                     ?_strncmp:
   828                           	opt callstack 0
   829  000001                     ?_isspace:
   830                           	opt callstack 0
   831  000001                     ?___wmul:
   832                           	opt callstack 0
   833  000001                     ?___awdiv:
   834                           	opt callstack 0
   835  000001                     ?i2___awmod:
   836                           	opt callstack 0
   837  000001                     ?___fladd:
   838                           	opt callstack 0
   839  000001                     ?___flneg:
   840                           	opt callstack 0
   841  000001                     ?___fltol:
   842                           	opt callstack 0
   843  000001                     ?___xxtofl:
   844                           	opt callstack 0
   845  000001                     ___wmul@multiplier:
   846                           	opt callstack 0
   847  000001                     ___awdiv@dividend:
   848                           	opt callstack 0
   849  000001                     isdigit@c:
   850                           	opt callstack 0
   851  000001                     isspace@c:
   852                           	opt callstack 0
   853  000001                     isupper@c:
   854                           	opt callstack 0
   855  000001                     memset@dest:
   856                           	opt callstack 0
   857  000001                     fputc@c:
   858                           	opt callstack 0
   859  000001                     strcpy@dest:
   860                           	opt callstack 0
   861  000001                     strlen@s:
   862                           	opt callstack 0
   863  000001                     strncmp@_l:
   864                           	opt callstack 0
   865  000001                     i2Cmd@Value:
   866                           	opt callstack 0
   867  000001                     i2Data@Value:
   868                           	opt callstack 0
   869  000001                     i2___awmod@dividend:
   870                           	opt callstack 0
   871  000001                     ___fleq@ff1:
   872                           	opt callstack 0
   873  000001                     ___flneg@f1:
   874                           	opt callstack 0
   875  000001                     ___fltol@f1:
   876                           	opt callstack 0
   877  000001                     ___fladd@b:
   878                           	opt callstack 0
   879  000001                     ___xxtofl@val:
   880                           	opt callstack 0
   881  000001                     ___fpclassifyf@x:
   882                           	opt callstack 0
   883                           
   884                           ; 4 bytes @ 0x0
   885  000001                     	ds	2
   886  000003                     ??_isupper:
   887  000003                     ??_isdigit:
   888  000003                     ??_isspace:
   889  000003                     ??i2_Cmd:
   890  000003                     ??i2_Data:
   891  000003                     ___wmul@multiplicand:
   892                           	opt callstack 0
   893  000003                     ___awdiv@divisor:
   894                           	opt callstack 0
   895  000003                     memset@c:
   896                           	opt callstack 0
   897  000003                     fputc@fp:
   898                           	opt callstack 0
   899  000003                     strcpy@src:
   900                           	opt callstack 0
   901  000003                     strlen@a:
   902                           	opt callstack 0
   903  000003                     strncmp@_r:
   904                           	opt callstack 0
   905  000003                     i2___awmod@divisor:
   906                           	opt callstack 0
   907                           
   908                           ; 2 bytes @ 0x2
   909  000003                     	ds	1
   910  000004                     i2Send2Lcd@Lcd:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0x3
   914  000004                     	ds	1
   915  000005                     ??_fputc:
   916  000005                     ??___fpclassifyf:
   917  000005                     ??_strcpy:
   918  000005                     ??___fltol:
   919  000005                     ??___xxtofl:
   920  000005                     ___awdiv@counter:
   921                           	opt callstack 0
   922  000005                     i2___awmod@counter:
   923                           	opt callstack 0
   924  000005                     ___wmul@product:
   925                           	opt callstack 0
   926  000005                     memset@n:
   927                           	opt callstack 0
   928  000005                     strncmp@n:
   929                           	opt callstack 0
   930  000005                     ___fleq@ff2:
   931                           	opt callstack 0
   932  000005                     ___fladd@a:
   933                           	opt callstack 0
   934                           
   935                           ; 4 bytes @ 0x4
   936  000005                     	ds	1
   937  000006                     ??i2_Send2Lcd:
   938  000006                     ___awdiv@sign:
   939                           	opt callstack 0
   940  000006                     i2___awmod@sign:
   941                           	opt callstack 0
   942                           
   943                           ; 1 bytes @ 0x5
   944  000006                     	ds	1
   945  000007                     ??_memset:
   946  000007                     ??_strncmp:
   947  000007                     ?_tolower:
   948                           	opt callstack 0
   949  000007                     _isspace$1529:
   950                           	opt callstack 0
   951  000007                     i2Send2Lcd@Adr:
   952                           	opt callstack 0
   953  000007                     ___awdiv@quotient:
   954                           	opt callstack 0
   955  000007                     strcpy@s:
   956                           	opt callstack 0
   957  000007                     tolower@c:
   958                           	opt callstack 0
   959                           
   960                           ; 2 bytes @ 0x6
   961  000007                     	ds	1
   962  000008                     ?_atoi:
   963                           	opt callstack 0
   964  000008                     atoi@s:
   965                           	opt callstack 0
   966  000008                     strncmp@l:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x7
   970  000008                     	ds	1
   971  000009                     ??_tolower:
   972  000009                     ??___fladd:
   973  000009                     ??___fleq:
   974  000009                     ___fltol@sign1:
   975                           	opt callstack 0
   976  000009                     ___xxtofl@sign:
   977                           	opt callstack 0
   978  000009                     ___fpclassifyf@e:
   979                           	opt callstack 0
   980  000009                     memset@k:
   981                           	opt callstack 0
   982  000009                     strcpy@d:
   983                           	opt callstack 0
   984                           
   985                           ; 2 bytes @ 0x8
   986  000009                     	ds	1
   987  00000A                     ??_atoi:
   988  00000A                     ?_stoa:
   989                           	opt callstack 0
   990  00000A                     ___fltol@exp1:
   991                           	opt callstack 0
   992  00000A                     ___xxtofl@exp:
   993                           	opt callstack 0
   994  00000A                     stoa@fp:
   995                           	opt callstack 0
   996  00000A                     fputs@s:
   997                           	opt callstack 0
   998  00000A                     strncmp@r:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x9
  1002  00000A                     	ds	1
  1003  00000B                     memset@s:
  1004                           	opt callstack 0
  1005  00000B                     ___xxtofl@arg:
  1006                           	opt callstack 0
  1007  00000B                     ___fpclassifyf@u:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 4 bytes @ 0xA
  1011  00000B                     	ds	1
  1012  00000C                     stoa@s:
  1013                           	opt callstack 0
  1014  00000C                     fputs@fp:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0xB
  1018  00000C                     	ds	1
  1019  00000D                     ___fladd@signs:
  1020                           	opt callstack 0
  1021  00000D                     _tolower$1767:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0xC
  1025  00000D                     	ds	1
  1026  00000E                     ??_stoa:
  1027  00000E                     ___fladd@aexp:
  1028                           	opt callstack 0
  1029  00000E                     fputs@c:
  1030                           	opt callstack 0
  1031  00000E                     atoi@neg:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0xD
  1035  00000E                     	ds	1
  1036  00000F                     ?___flmul:
  1037                           	opt callstack 0
  1038  00000F                     ___fladd@bexp:
  1039                           	opt callstack 0
  1040  00000F                     fputs@i:
  1041                           	opt callstack 0
  1042  00000F                     ___flmul@b:
  1043                           	opt callstack 0
  1044  00000F                     stoa@nuls:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 7 bytes @ 0xE
  1048  00000F                     	ds	1
  1049  000010                     ___fladd@grs:
  1050                           	opt callstack 0
  1051  000010                     _atoi$1498:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 2 bytes @ 0xF
  1055  000010                     	ds	1
  1056  000011                     ?_pad:
  1057                           	opt callstack 0
  1058  000011                     pad@fp:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x10
  1062  000011                     	ds	1
  1063  000012                     _atoi$1500:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x11
  1067  000012                     	ds	1
  1068  000013                     pad@buf:
  1069                           	opt callstack 0
  1070  000013                     ___flmul@a:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x12
  1074  000013                     	ds	1
  1075  000014                     _atoi$1499:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x13
  1079  000014                     	ds	1
  1080  000015                     pad@p:
  1081                           	opt callstack 0
  1082  000015                     atoi@n:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x14
  1086  000015                     	ds	1
  1087  000016                     stoa@i:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x15
  1091  000016                     	ds	1
  1092  000017                     ??___flmul:
  1093  000017                     ??_pad:
  1094                           
  1095                           ; 1 bytes @ 0x16
  1096  000017                     	ds	1
  1097  000018                     pad@i:
  1098                           	opt callstack 0
  1099  000018                     stoa@w:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x17
  1103  000018                     	ds	2
  1104  00001A                     pad@w:
  1105                           	opt callstack 0
  1106  00001A                     stoa@cp:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x19
  1110  00001A                     	ds	1
  1111  00001B                     ___flmul@sign:
  1112                           	opt callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x1A
  1115  00001B                     	ds	1
  1116  00001C                     stoa@p:
  1117                           	opt callstack 0
  1118  00001C                     ___flmul@grs:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x1B
  1122  00001C                     	ds	2
  1123  00001E                     stoa@l:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x1D
  1127  00001E                     	ds	2
  1128  000020                     ___flmul@aexp:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x1F
  1132  000020                     	ds	1
  1133  000021                     ___flmul@bexp:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x20
  1137  000021                     	ds	1
  1138  000022                     ___flmul@prod:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x21
  1142  000022                     	ds	4
  1143  000026                     ___flmul@temp:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x25
  1147  000026                     	ds	2
  1148  000028                     ?___fldiv:
  1149                           	opt callstack 0
  1150  000028                     ?___flsub:
  1151                           	opt callstack 0
  1152  000028                     ___flge@ff1:
  1153                           	opt callstack 0
  1154  000028                     ___flsub@b:
  1155                           	opt callstack 0
  1156  000028                     ___fldiv@b:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x27
  1160  000028                     	ds	4
  1161  00002C                     ___flge@ff2:
  1162                           	opt callstack 0
  1163  00002C                     ___flsub@a:
  1164                           	opt callstack 0
  1165  00002C                     ___fldiv@a:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x2B
  1169  00002C                     	ds	4
  1170  000030                     ??___fldiv:
  1171  000030                     ??___flge:
  1172                           
  1173                           ; 1 bytes @ 0x2F
  1174  000030                     	ds	4
  1175  000034                     ___fldiv@rem:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 4 bytes @ 0x33
  1179  000034                     	ds	4
  1180  000038                     ___fldiv@sign:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x37
  1184  000038                     	ds	1
  1185  000039                     ___fldiv@new_exp:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x38
  1189  000039                     	ds	2
  1190  00003B                     ___fldiv@grs:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x3A
  1194  00003B                     	ds	4
  1195  00003F                     ___fldiv@bexp:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 1 bytes @ 0x3E
  1199  00003F                     	ds	1
  1200  000040                     ___fldiv@aexp:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x3F
  1204  000040                     	ds	1
  1205  000041                     ?_floorf:
  1206                           	opt callstack 0
  1207  000041                     ?_ADC_Read:
  1208                           	opt callstack 0
  1209  000041                     ADC_Read@channel:
  1210                           	opt callstack 0
  1211  000041                     floorf@x:
  1212                           	opt callstack 0
  1213                           
  1214                           ; 4 bytes @ 0x40
  1215  000041                     	ds	4
  1216  000045                     ??_floorf:
  1217  000045                     ??_ADC_Read:
  1218                           
  1219                           ; 1 bytes @ 0x44
  1220  000045                     	ds	1
  1221  000046                     _ADC_Read$2039:
  1222                           	opt callstack 0
  1223                           
  1224                           ; 4 bytes @ 0x45
  1225  000046                     	ds	4
  1226  00004A                     ADC_Read@digital:
  1227                           	opt callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x49
  1230  00004A                     	ds	1
  1231  00004B                     floorf@m:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x4A
  1235  00004B                     	ds	1
  1236  00004C                     ADC_Read@result:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x4B
  1240  00004C                     	ds	3
  1241  00004F                     floorf@e:
  1242                           	opt callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x4E
  1245  00004F                     	ds	2
  1246  000051                     floorf@u:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x50
  1250  000051                     	ds	4
  1251  000055                     ?_efgtoa:
  1252                           	opt callstack 0
  1253  000055                     efgtoa@fp:
  1254                           	opt callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x54
  1257  000055                     	ds	2
  1258  000057                     efgtoa@f:
  1259                           	opt callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x56
  1262  000057                     	ds	4
  1263  00005B                     efgtoa@c:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 1 bytes @ 0x5A
  1267  00005B                     	ds	1
  1268  00005C                     ??_efgtoa:
  1269                           
  1270                           ; 1 bytes @ 0x5B
  1271  00005C                     	ds	5
  1272  000061                     ?_vfpfcnvrt:
  1273                           	opt callstack 0
  1274  000061                     vfpfcnvrt@fp:
  1275                           	opt callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x60
  1278  000061                     	ds	2
  1279  000063                     vfpfcnvrt@fmt:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x62
  1283  000063                     	ds	2
  1284  000065                     vfpfcnvrt@ap:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x64
  1288  000065                     	ds	2
  1289  000067                     ??_vfpfcnvrt:
  1290                           
  1291                           ; 1 bytes @ 0x66
  1292  000067                     	ds	4
  1293  00006B                     vfpfcnvrt@cp:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x6A
  1297  00006B                     	ds	2
  1298  00006D                     _vfpfcnvrt$1022:
  1299                           	opt callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x6C
  1302  00006D                     	ds	2
  1303  00006F                     _vfpfcnvrt$1026:
  1304                           	opt callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x6E
  1307  00006F                     	ds	2
  1308  000071                     vfpfcnvrt@f:
  1309                           	opt callstack 0
  1310                           
  1311                           ; 4 bytes @ 0x70
  1312  000071                     	ds	4
  1313  000075                     vfpfcnvrt@ct:
  1314                           	opt callstack 0
  1315                           
  1316                           ; 3 bytes @ 0x74
  1317  000075                     	ds	3
  1318  000078                     vfpfcnvrt@c:
  1319                           	opt callstack 0
  1320                           
  1321                           ; 1 bytes @ 0x77
  1322  000078                     	ds	1
  1323  000079                     ?_vfprintf:
  1324                           	opt callstack 0
  1325  000079                     vfprintf@fp:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x78
  1329  000079                     	ds	2
  1330  00007B                     vfprintf@fmt:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x7A
  1334  00007B                     	ds	2
  1335  00007D                     vfprintf@ap:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x7C
  1339  00007D                     	ds	2
  1340  00007F                     
  1341                           ; 1 bytes @ 0x7E
  1342 ;;
  1343 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1344 ;;
  1345 ;; *************** function _main *****************
  1346 ;; Defined at:
  1347 ;;		line 13 in file "main.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1361 ;;      Params:         0       0       0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0
  1364 ;;      Totals:         0       0       0       0       0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels required when called:   16
  1367 ;; This function calls:
  1368 ;;		_SYSTEM_Initialize
  1369 ;; This function is called by:
  1370 ;;		Startup code after reset
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text0
  1375  003230                     __ptext0:
  1376                           	opt callstack 0
  1377  003230                     _main:
  1378                           	opt callstack 15
  1379                           
  1380                           ;main.c: 15:     SYSTEM_Initialize() ;
  1381                           
  1382                           ;incstack = 0
  1383  003230  ECCF  F018         	call	_SYSTEM_Initialize	;wreg free
  1384  003234                     l252:
  1385  003234  D7FF               	goto	l252
  1386  003236                     __end_of_main:
  1387                           	opt callstack 0
  1388                           
  1389 ;; *************** function _SYSTEM_Initialize *****************
  1390 ;; Defined at:
  1391 ;;		line 73 in file "setting_hardaware/setting.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;		None
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;		None
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      void 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1405 ;;      Params:         0       0       0       0       0       0       0
  1406 ;;      Locals:         0       0       0       0       0       0       0
  1407 ;;      Temps:          0       0       0       0       0       0       0
  1408 ;;      Totals:         0       0       0       0       0       0       0
  1409 ;;Total ram usage:        0 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:   15
  1412 ;; This function calls:
  1413 ;;		_ADC_Initialize
  1414 ;;		_INTERRUPT_Initialize
  1415 ;;		_LCD_init
  1416 ;;		_OSCILLATOR_Initialize
  1417 ;;		_PIN_MANAGER_Initialize
  1418 ;;		_TMR1_Initialize
  1419 ;;		_buzzer_init
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text1
  1426  00319E                     __ptext1:
  1427                           	opt callstack 0
  1428  00319E                     _SYSTEM_Initialize:
  1429                           	opt callstack 15
  1430                           
  1431                           ;setting_hardaware/setting.c: 75:     INTERRUPT_Initialize();
  1432                           
  1433                           ;incstack = 0
  1434  00319E  EC1B  F019         	call	_INTERRUPT_Initialize	;wreg free
  1435                           
  1436                           ;setting_hardaware/setting.c: 76:     PIN_MANAGER_Initialize();
  1437  0031A2  ECEC  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  1438                           
  1439                           ;setting_hardaware/setting.c: 77:     OSCILLATOR_Initialize();
  1440  0031A6  EC14  F019         	call	_OSCILLATOR_Initialize	;wreg free
  1441                           
  1442                           ;setting_hardaware/setting.c: 78:     LCD_init();
  1443  0031AA  EC75  F015         	call	_LCD_init	;wreg free
  1444                           
  1445                           ;setting_hardaware/setting.c: 79:     buzzer_init();
  1446  0031AE  EC1E  F019         	call	_buzzer_init	;wreg free
  1447                           
  1448                           ;setting_hardaware/setting.c: 80:     ADC_Initialize();
  1449  0031B2  ECF6  F018         	call	_ADC_Initialize	;wreg free
  1450                           
  1451                           ;setting_hardaware/setting.c: 81:     TMR1_Initialize();
  1452  0031B6  ECDE  F018         	call	_TMR1_Initialize	;wreg free
  1453  0031BA  0012               	return		;funcret
  1454  0031BC                     __end_of_SYSTEM_Initialize:
  1455                           	opt callstack 0
  1456                           
  1457 ;; *************** function _buzzer_init *****************
  1458 ;; Defined at:
  1459 ;;		line 19 in file "setting_hardaware/buzzer.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		None
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1473 ;;      Params:         0       0       0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0
  1476 ;;      Totals:         0       0       0       0       0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:   12
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_SYSTEM_Initialize
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text2
  1488  00323C                     __ptext2:
  1489                           	opt callstack 0
  1490  00323C                     _buzzer_init:
  1491                           	opt callstack 17
  1492                           
  1493                           ;incstack = 0
  1494  00323C  0012               	return		;funcret
  1495  00323E                     __end_of_buzzer_init:
  1496                           	opt callstack 0
  1497                           
  1498 ;; *************** function _TMR1_Initialize *****************
  1499 ;; Defined at:
  1500 ;;		line 62 in file "setting_hardaware/setting.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1514 ;;      Params:         0       0       0       0       0       0       0
  1515 ;;      Locals:         0       0       0       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0
  1517 ;;      Totals:         0       0       0       0       0       0       0
  1518 ;;Total ram usage:        0 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:   12
  1521 ;; This function calls:
  1522 ;;		Nothing
  1523 ;; This function is called by:
  1524 ;;		_SYSTEM_Initialize
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text3
  1529  0031BC                     __ptext3:
  1530                           	opt callstack 0
  1531  0031BC                     _TMR1_Initialize:
  1532                           	opt callstack 17
  1533                           
  1534                           ;setting_hardaware/setting.c: 63:     T1CONbits.RD16=1;
  1535                           
  1536                           ;incstack = 0
  1537  0031BC  8ECD               	bsf	205,7,c	;volatile
  1538                           
  1539                           ;setting_hardaware/setting.c: 64:     T1CONbits.T1CKPS=2;
  1540  0031BE  50CD               	movf	205,w,c	;volatile
  1541  0031C0  0BCF               	andlw	-49
  1542  0031C2  0920               	iorlw	32
  1543  0031C4  6ECD               	movwf	205,c	;volatile
  1544                           
  1545                           ;setting_hardaware/setting.c: 65:     T1CONbits.TMR1ON=1;
  1546  0031C6  80CD               	bsf	205,0,c	;volatile
  1547                           
  1548                           ;setting_hardaware/setting.c: 66:     PIR1bits.TMR1IF=0;
  1549  0031C8  909E               	bcf	158,0,c	;volatile
  1550                           
  1551                           ;setting_hardaware/setting.c: 67:     PIE1bits.TMR1IE=1;
  1552  0031CA  809D               	bsf	157,0,c	;volatile
  1553                           
  1554                           ;setting_hardaware/setting.c: 68:     IPR1bits.TMR1IP=1;
  1555  0031CC  809F               	bsf	159,0,c	;volatile
  1556                           
  1557                           ;setting_hardaware/setting.c: 69:     TMR1=timer_val;
  1558  0031CE  C0FD  FFCE         	movff	_timer_val,4046	;volatile
  1559  0031D2  C0FE  FFCF         	movff	_timer_val+1,4047	;volatile
  1560  0031D6  0012               	return		;funcret
  1561  0031D8                     __end_of_TMR1_Initialize:
  1562                           	opt callstack 0
  1563                           
  1564 ;; *************** function _PIN_MANAGER_Initialize *****************
  1565 ;; Defined at:
  1566 ;;		line 12 in file "setting_hardaware/pin_manager.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1580 ;;      Params:         0       0       0       0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0
  1583 ;;      Totals:         0       0       0       0       0       0       0
  1584 ;;Total ram usage:        0 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:   12
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_SYSTEM_Initialize
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text4
  1595  0031D8                     __ptext4:
  1596                           	opt callstack 0
  1597  0031D8                     _PIN_MANAGER_Initialize:
  1598                           	opt callstack 17
  1599                           
  1600                           ;setting_hardaware/pin_manager.c: 13:     ADCON1 = 0x0D;
  1601                           
  1602                           ;incstack = 0
  1603  0031D8  0E0D               	movlw	13
  1604  0031DA  6EC1               	movwf	193,c	;volatile
  1605                           
  1606                           ;setting_hardaware/pin_manager.c: 16:     TRISC=0X00;
  1607  0031DC  0E00               	movlw	0
  1608  0031DE  6E94               	movwf	148,c	;volatile
  1609                           
  1610                           ;setting_hardaware/pin_manager.c: 17:     TRISD=0X00;
  1611  0031E0  0E00               	movlw	0
  1612  0031E2  6E95               	movwf	149,c	;volatile
  1613                           
  1614                           ;setting_hardaware/pin_manager.c: 20:     TRISBbits.RB0=0;
  1615  0031E4  9093               	bcf	147,0,c	;volatile
  1616                           
  1617                           ;setting_hardaware/pin_manager.c: 23:     TRISA = 0x03;
  1618  0031E6  0E03               	movlw	3
  1619  0031E8  6E92               	movwf	146,c	;volatile
  1620  0031EA  0012               	return		;funcret
  1621  0031EC                     __end_of_PIN_MANAGER_Initialize:
  1622                           	opt callstack 0
  1623                           
  1624 ;; *************** function _OSCILLATOR_Initialize *****************
  1625 ;; Defined at:
  1626 ;;		line 84 in file "setting_hardaware/setting.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		None
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1640 ;;      Params:         0       0       0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0
  1643 ;;      Totals:         0       0       0       0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:   12
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_SYSTEM_Initialize
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text5
  1655  003228                     __ptext5:
  1656                           	opt callstack 0
  1657  003228                     _OSCILLATOR_Initialize:
  1658                           	opt callstack 17
  1659                           
  1660                           ;setting_hardaware/setting.c: 86:     IRCF2 = 1;
  1661                           
  1662                           ;incstack = 0
  1663  003228  8CD3               	bsf	4051,6,c	;volatile
  1664                           
  1665                           ;setting_hardaware/setting.c: 87:     IRCF1 = 1;
  1666  00322A  8AD3               	bsf	4051,5,c	;volatile
  1667                           
  1668                           ;setting_hardaware/setting.c: 88:     IRCF0 = 0;
  1669  00322C  98D3               	bcf	4051,4,c	;volatile
  1670  00322E  0012               	return		;funcret
  1671  003230                     __end_of_OSCILLATOR_Initialize:
  1672                           	opt callstack 0
  1673                           
  1674 ;; *************** function _LCD_init *****************
  1675 ;; Defined at:
  1676 ;;		line 55 in file "setting_hardaware/LCD.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1690 ;;      Params:         0       0       0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0       0       0
  1692 ;;      Temps:          0       0       1       0       0       0       0
  1693 ;;      Totals:         0       0       1       0       0       0       0
  1694 ;;Total ram usage:        1 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:   14
  1697 ;; This function calls:
  1698 ;;		_Cmd
  1699 ;;		_Send2Lcd
  1700 ;; This function is called by:
  1701 ;;		_SYSTEM_Initialize
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text6
  1706  002AEA                     __ptext6:
  1707                           	opt callstack 0
  1708  002AEA                     _LCD_init:
  1709                           	opt callstack 15
  1710                           
  1711                           ;setting_hardaware/LCD.c: 57:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1712                           
  1713                           ;incstack = 0
  1714  002AEA  0E14               	movlw	20
  1715  002AEC  0101               	movlb	1	; () banked
  1716  002AEE  6FB9               	movwf	??_LCD_init& (0+255),b
  1717  002AF0  0E79               	movlw	121
  1718  002AF2                     u6407:
  1719  002AF2  2EE8               	decfsz	wreg,f,c
  1720  002AF4  D7FE               	bra	u6407
  1721  002AF6  2FB9               	decfsz	??_LCD_init& (0+255),f,b
  1722  002AF8  D7FC               	bra	u6407
  1723  002AFA  D000               	nop2	
  1724                           
  1725                           ;setting_hardaware/LCD.c: 58:     Cmd(0X38);
  1726  002AFC  0E00               	movlw	0
  1727  002AFE  0101               	movlb	1	; () banked
  1728  002B00  6FB3               	movwf	(Cmd@Value+1)& (0+255),b
  1729  002B02  0E38               	movlw	56
  1730  002B04  6FB2               	movwf	Cmd@Value& (0+255),b
  1731  002B06  EC04  F018         	call	_Cmd	;wreg free
  1732                           
  1733                           ;setting_hardaware/LCD.c: 59:     _delay((unsigned long)((125)*(4000000/4000000.0)));
  1734  002B0A  0E29               	movlw	41
  1735  002B0C                     u6417:
  1736  002B0C  2EE8               	decfsz	wreg,f,c
  1737  002B0E  D7FE               	bra	u6417
  1738  002B10  D000               	nop2	
  1739                           
  1740                           ;setting_hardaware/LCD.c: 61:     Cmd(0X01);
  1741  002B12  0E00               	movlw	0
  1742  002B14  0101               	movlb	1	; () banked
  1743  002B16  6FB3               	movwf	(Cmd@Value+1)& (0+255),b
  1744  002B18  0E01               	movlw	1
  1745  002B1A  6FB2               	movwf	Cmd@Value& (0+255),b
  1746  002B1C  EC04  F018         	call	_Cmd	;wreg free
  1747                           
  1748                           ;setting_hardaware/LCD.c: 62:     Cmd(0X06);
  1749  002B20  0E00               	movlw	0
  1750  002B22  0101               	movlb	1	; () banked
  1751  002B24  6FB3               	movwf	(Cmd@Value+1)& (0+255),b
  1752  002B26  0E06               	movlw	6
  1753  002B28  6FB2               	movwf	Cmd@Value& (0+255),b
  1754  002B2A  EC04  F018         	call	_Cmd	;wreg free
  1755                           
  1756                           ;setting_hardaware/LCD.c: 63:     Cmd(0X0C);
  1757  002B2E  0E00               	movlw	0
  1758  002B30  0101               	movlb	1	; () banked
  1759  002B32  6FB3               	movwf	(Cmd@Value+1)& (0+255),b
  1760  002B34  0E0C               	movlw	12
  1761  002B36  6FB2               	movwf	Cmd@Value& (0+255),b
  1762  002B38  EC04  F018         	call	_Cmd	;wreg free
  1763                           
  1764                           ;setting_hardaware/LCD.c: 64:     _delay((unsigned long)((125)*(4000000/4000000.0)));
  1765  002B3C  0E29               	movlw	41
  1766  002B3E                     u6427:
  1767  002B3E  2EE8               	decfsz	wreg,f,c
  1768  002B40  D7FE               	bra	u6427
  1769  002B42  D000               	nop2	
  1770                           
  1771                           ;setting_hardaware/LCD.c: 65:     Send2Lcd(0x80,"monitor");
  1772  002B44  0E9E               	movlw	low STR_1
  1773  002B46  0101               	movlb	1	; () banked
  1774  002B48  6FB5               	movwf	Send2Lcd@Lcd& (0+255),b
  1775  002B4A  0E06               	movlw	high STR_1
  1776  002B4C  6FB6               	movwf	(Send2Lcd@Lcd+1)& (0+255),b
  1777  002B4E  0E80               	movlw	128
  1778  002B50  EC5D  F016         	call	_Send2Lcd
  1779                           
  1780                           ;setting_hardaware/LCD.c: 66:     Send2Lcd(0xc0,"start");
  1781  002B54  0EA6               	movlw	low STR_2
  1782  002B56  0101               	movlb	1	; () banked
  1783  002B58  6FB5               	movwf	Send2Lcd@Lcd& (0+255),b
  1784  002B5A  0E06               	movlw	high STR_2
  1785  002B5C  6FB6               	movwf	(Send2Lcd@Lcd+1)& (0+255),b
  1786  002B5E  0EC0               	movlw	192
  1787  002B60  EC5D  F016         	call	_Send2Lcd
  1788  002B64  0012               	return		;funcret
  1789  002B66                     __end_of_LCD_init:
  1790                           	opt callstack 0
  1791                           
  1792 ;; *************** function _Send2Lcd *****************
  1793 ;; Defined at:
  1794 ;;		line 41 in file "setting_hardaware/LCD.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  Adr             1    wreg     const unsigned char 
  1797 ;;  Lcd             2   14[BANK1 ] PTR const unsigned char 
  1798 ;;		 -> r(100), STR_2(6), STR_1(8), 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  Adr             1   17[BANK1 ] const unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1810 ;;      Params:         0       0       2       0       0       0       0
  1811 ;;      Locals:         0       0       1       0       0       0       0
  1812 ;;      Temps:          0       0       1       0       0       0       0
  1813 ;;      Totals:         0       0       4       0       0       0       0
  1814 ;;Total ram usage:        4 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:   13
  1817 ;; This function calls:
  1818 ;;		_Cmd
  1819 ;;		_Data
  1820 ;; This function is called by:
  1821 ;;		_LCD_init
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text7
  1826  002CBA                     __ptext7:
  1827                           	opt callstack 0
  1828  002CBA                     _Send2Lcd:
  1829                           	opt callstack 15
  1830                           
  1831                           ;incstack = 0
  1832                           ;Send2Lcd@Adr stored from wreg
  1833  002CBA  0101               	movlb	1	; () banked
  1834  002CBC  6FB8               	movwf	Send2Lcd@Adr& (0+255),b
  1835                           
  1836                           ;setting_hardaware/LCD.c: 41: void Send2Lcd(const char Adr, const char *Lcd);setting_har
      +                          daware/LCD.c: 42: {;setting_hardaware/LCD.c: 43:  Cmd(Adr);
  1837  002CBE  C1B8  F1B2         	movff	Send2Lcd@Adr,Cmd@Value
  1838  002CC2  0101               	movlb	1	; () banked
  1839  002CC4  6BB3               	clrf	(Cmd@Value+1)& (0+255),b
  1840  002CC6  EC04  F018         	call	_Cmd	;wreg free
  1841                           
  1842                           ;setting_hardaware/LCD.c: 44:  while(*Lcd!='\0')
  1843  002CCA  D01A               	goto	l4457
  1844  002CCC                     l4453:
  1845                           
  1846                           ;setting_hardaware/LCD.c: 45:  {;setting_hardaware/LCD.c: 46:   Data(*Lcd);
  1847  002CCC  C1B5  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  1848  002CD0  C1B6  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  1849  002CD4  6AF8               	clrf	tblptru,c
  1850  002CD6  0E05               	movlw	(high __ramtop+-1)
  1851  002CD8  64F7               	cpfsgt	tblptrh,c
  1852  002CDA  D003               	bra	u4977
  1853  002CDC  0008               	tblrd		*
  1854  002CDE  50F5               	movf	tablat,w,c
  1855  002CE0  D005               	bra	u4970
  1856  002CE2                     u4977:
  1857  002CE2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1858  002CE6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1859  002CEA  50EF               	movf	indf0,w,c
  1860  002CEC                     u4970:
  1861  002CEC  0101               	movlb	1	; () banked
  1862  002CEE  6FB7               	movwf	??_Send2Lcd& (0+255),b
  1863  002CF0  51B7               	movf	??_Send2Lcd& (0+255),w,b
  1864  002CF2  6FB2               	movwf	Data@Value& (0+255),b
  1865  002CF4  6BB3               	clrf	(Data@Value+1)& (0+255),b
  1866  002CF6  ECEC  F017         	call	_Data	;wreg free
  1867                           
  1868                           ;setting_hardaware/LCD.c: 47:   Lcd++;
  1869  002CFA  0101               	movlb	1	; () banked
  1870  002CFC  4BB5               	infsnz	Send2Lcd@Lcd& (0+255),f,b
  1871  002CFE  2BB6               	incf	(Send2Lcd@Lcd+1)& (0+255),f,b
  1872  002D00                     l4457:
  1873                           
  1874                           ;setting_hardaware/LCD.c: 44:  while(*Lcd!='\0')
  1875  002D00  C1B5  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  1876  002D04  C1B6  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  1877  002D08  6AF8               	clrf	tblptru,c
  1878  002D0A  0E05               	movlw	(high __ramtop+-1)
  1879  002D0C  64F7               	cpfsgt	tblptrh,c
  1880  002D0E  D003               	bra	u4987
  1881  002D10  0008               	tblrd		*
  1882  002D12  50F5               	movf	tablat,w,c
  1883  002D14  D005               	bra	u4980
  1884  002D16                     u4987:
  1885  002D16  CFF6 FFE9          	movff	tblptrl,fsr0l
  1886  002D1A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1887  002D1E  50EF               	movf	indf0,w,c
  1888  002D20                     u4980:
  1889  002D20  0900               	iorlw	0
  1890  002D22  B4D8               	btfsc	status,2,c
  1891  002D24  0012               	return	
  1892  002D26  D7D2               	goto	l4453
  1893  002D28                     __end_of_Send2Lcd:
  1894                           	opt callstack 0
  1895                           
  1896 ;; *************** function _Data *****************
  1897 ;; Defined at:
  1898 ;;		line 28 in file "setting_hardaware/LCD.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  Value           2   11[BANK1 ] int 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1912 ;;      Params:         0       0       2       0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0
  1914 ;;      Temps:          0       0       1       0       0       0       0
  1915 ;;      Totals:         0       0       3       0       0       0       0
  1916 ;;Total ram usage:        3 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:   12
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_Send2Lcd
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text8
  1927  002FD8                     __ptext8:
  1928                           	opt callstack 0
  1929  002FD8                     _Data:
  1930                           	opt callstack 15
  1931                           
  1932                           ;setting_hardaware/LCD.c: 28: void Data(int Value);setting_hardaware/LCD.c: 29: {;settin
      +                          g_hardaware/LCD.c: 30:  LATD = Value;
  1933                           
  1934                           ;incstack = 0
  1935  002FD8  C1B2  FF8C         	movff	Data@Value,3980	;volatile
  1936                           
  1937                           ;setting_hardaware/LCD.c: 31:  LATCbits.LC4=1;
  1938  002FDC  888B               	bsf	139,4,c	;volatile
  1939                           
  1940                           ;setting_hardaware/LCD.c: 33:  LATCbits.LC6=0;
  1941  002FDE  9C8B               	bcf	139,6,c	;volatile
  1942                           
  1943                           ;setting_hardaware/LCD.c: 34:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  1944  002FE0  0E08               	movlw	8
  1945  002FE2                     u6437:
  1946  002FE2  2EE8               	decfsz	wreg,f,c
  1947  002FE4  D7FE               	bra	u6437
  1948  002FE6  F000               	nop	
  1949                           
  1950                           ;setting_hardaware/LCD.c: 35:  LATCbits.LC6=1;
  1951  002FE8  8C8B               	bsf	139,6,c	;volatile
  1952                           
  1953                           ;setting_hardaware/LCD.c: 36:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  1954  002FEA  0E08               	movlw	8
  1955  002FEC                     u6447:
  1956  002FEC  2EE8               	decfsz	wreg,f,c
  1957  002FEE  D7FE               	bra	u6447
  1958  002FF0  F000               	nop	
  1959                           
  1960                           ;setting_hardaware/LCD.c: 37:  LATCbits.LC6=0;
  1961  002FF2  9C8B               	bcf	139,6,c	;volatile
  1962                           
  1963                           ;setting_hardaware/LCD.c: 38:  _delay((unsigned long)((3)*(4000000/4000.0)));
  1964  002FF4  0E04               	movlw	4
  1965  002FF6  0101               	movlb	1	; () banked
  1966  002FF8  6FB4               	movwf	??_Data& (0+255),b
  1967  002FFA  0EE4               	movlw	228
  1968  002FFC                     u6457:
  1969  002FFC  2EE8               	decfsz	wreg,f,c
  1970  002FFE  D7FE               	bra	u6457
  1971  003000  2FB4               	decfsz	??_Data& (0+255),f,b
  1972  003002  D7FC               	bra	u6457
  1973  003004  F000               	nop	
  1974  003006  0012               	return		;funcret
  1975  003008                     __end_of_Data:
  1976                           	opt callstack 0
  1977                           
  1978 ;; *************** function _Cmd *****************
  1979 ;; Defined at:
  1980 ;;		line 15 in file "setting_hardaware/LCD.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  Value           2   11[BANK1 ] int 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1994 ;;      Params:         0       0       2       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0
  1996 ;;      Temps:          0       0       1       0       0       0       0
  1997 ;;      Totals:         0       0       3       0       0       0       0
  1998 ;;Total ram usage:        3 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:   12
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_Send2Lcd
  2005 ;;		_LCD_init
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text9
  2010  003008                     __ptext9:
  2011                           	opt callstack 0
  2012  003008                     _Cmd:
  2013                           	opt callstack 15
  2014                           
  2015                           ;setting_hardaware/LCD.c: 15: void Cmd(int Value);setting_hardaware/LCD.c: 16: {;setting
      +                          _hardaware/LCD.c: 17:  LATD = Value;
  2016                           
  2017                           ;incstack = 0
  2018  003008  C1B2  FF8C         	movff	Cmd@Value,3980	;volatile
  2019                           
  2020                           ;setting_hardaware/LCD.c: 18:  LATCbits.LC4=0;
  2021  00300C  988B               	bcf	139,4,c	;volatile
  2022                           
  2023                           ;setting_hardaware/LCD.c: 20:  LATCbits.LC6=0;
  2024  00300E  9C8B               	bcf	139,6,c	;volatile
  2025                           
  2026                           ;setting_hardaware/LCD.c: 21:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2027  003010  0E08               	movlw	8
  2028  003012                     u6467:
  2029  003012  2EE8               	decfsz	wreg,f,c
  2030  003014  D7FE               	bra	u6467
  2031  003016  F000               	nop	
  2032                           
  2033                           ;setting_hardaware/LCD.c: 22:  LATCbits.LC6=1;
  2034  003018  8C8B               	bsf	139,6,c	;volatile
  2035                           
  2036                           ;setting_hardaware/LCD.c: 23:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2037  00301A  0E08               	movlw	8
  2038  00301C                     u6477:
  2039  00301C  2EE8               	decfsz	wreg,f,c
  2040  00301E  D7FE               	bra	u6477
  2041  003020  F000               	nop	
  2042                           
  2043                           ;setting_hardaware/LCD.c: 24:  LATCbits.LC6=0;
  2044  003022  9C8B               	bcf	139,6,c	;volatile
  2045                           
  2046                           ;setting_hardaware/LCD.c: 25:  _delay((unsigned long)((3)*(4000000/4000.0)));
  2047  003024  0E04               	movlw	4
  2048  003026  0101               	movlb	1	; () banked
  2049  003028  6FB4               	movwf	??_Cmd& (0+255),b
  2050  00302A  0EE4               	movlw	228
  2051  00302C                     u6487:
  2052  00302C  2EE8               	decfsz	wreg,f,c
  2053  00302E  D7FE               	bra	u6487
  2054  003030  2FB4               	decfsz	??_Cmd& (0+255),f,b
  2055  003032  D7FC               	bra	u6487
  2056  003034  F000               	nop	
  2057  003036  0012               	return		;funcret
  2058  003038                     __end_of_Cmd:
  2059                           	opt callstack 0
  2060                           
  2061 ;; *************** function _INTERRUPT_Initialize *****************
  2062 ;; Defined at:
  2063 ;;		line 5 in file "setting_hardaware/interrupt_manager.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		None
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2077 ;;      Params:         0       0       0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:   12
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_SYSTEM_Initialize
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text10
  2092  003236                     __ptext10:
  2093                           	opt callstack 0
  2094  003236                     _INTERRUPT_Initialize:
  2095                           	opt callstack 17
  2096                           
  2097                           ;setting_hardaware/interrupt_manager.c: 7:     RCONbits.IPEN = 1;
  2098                           
  2099                           ;incstack = 0
  2100  003236  8ED0               	bsf	208,7,c	;volatile
  2101                           
  2102                           ;setting_hardaware/interrupt_manager.c: 8:     INTCONbits.GIE = 1;
  2103  003238  8EF2               	bsf	242,7,c	;volatile
  2104  00323A  0012               	return		;funcret
  2105  00323C                     __end_of_INTERRUPT_Initialize:
  2106                           	opt callstack 0
  2107                           
  2108 ;; *************** function _ADC_Initialize *****************
  2109 ;; Defined at:
  2110 ;;		line 39 in file "setting_hardaware/adc.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2124 ;;      Params:         0       0       0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:   12
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_SYSTEM_Initialize
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text11
  2139  0031EC                     __ptext11:
  2140                           	opt callstack 0
  2141  0031EC                     _ADC_Initialize:
  2142                           	opt callstack 17
  2143                           
  2144                           ;setting_hardaware/adc.c: 41:     ADCON1 = 0x0D;
  2145                           
  2146                           ;incstack = 0
  2147  0031EC  0E0D               	movlw	13
  2148  0031EE  6EC1               	movwf	193,c	;volatile
  2149                           
  2150                           ;setting_hardaware/adc.c: 42:     ADCON2=0x94;
  2151  0031F0  0E94               	movlw	148
  2152  0031F2  6EC0               	movwf	192,c	;volatile
  2153                           
  2154                           ;setting_hardaware/adc.c: 43:     ADRES=0;
  2155  0031F4  0E00               	movlw	0
  2156  0031F6  6EC4               	movwf	196,c	;volatile
  2157  0031F8  0E00               	movlw	0
  2158  0031FA  6EC3               	movwf	195,c	;volatile
  2159  0031FC  0012               	return		;funcret
  2160  0031FE                     __end_of_ADC_Initialize:
  2161                           	opt callstack 0
  2162                           
  2163 ;; *************** function _Lo_ISR *****************
  2164 ;; Defined at:
  2165 ;;		line 53 in file "setting_hardaware/uart.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2179 ;;      Params:         0       0       0       0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0
  2181 ;;      Temps:          0       0       5       0       0       0       0
  2182 ;;      Totals:         0       0       5       0       0       0       0
  2183 ;;Total ram usage:        5 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:   11
  2186 ;; This function calls:
  2187 ;;		_MyusartRead
  2188 ;; This function is called by:
  2189 ;;		Interrupt level 1
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	intcodelo
  2194  000018                     __pintcodelo:
  2195                           	opt callstack 0
  2196  000018                     _Lo_ISR:
  2197                           	opt callstack 15
  2198                           
  2199                           ;incstack = 0
  2200  000018  807F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2201  00001A  CFD8 F1AD          	movff	status,??_Lo_ISR
  2202  00001E  CFE8 F1AE          	movff	wreg,??_Lo_ISR+1
  2203  000022  CFE0 F1AF          	movff	bsr,??_Lo_ISR+2
  2204  000026  CFD9 F1B0          	movff	fsr2l,??_Lo_ISR+3
  2205  00002A  CFDA F1B1          	movff	fsr2h,??_Lo_ISR+4
  2206                           
  2207                           ;setting_hardaware/uart.c: 55:     if(RCIF)
  2208  00002E  AA9E               	btfss	3998,5,c	;volatile
  2209  000030  D007               	goto	i1l100
  2210                           
  2211                           ;setting_hardaware/uart.c: 56:     {;setting_hardaware/uart.c: 57:         if(RCSTAbits.
      +                          OERR)
  2212  000032  A2AB               	btfss	171,1,c	;volatile
  2213  000034  D003               	goto	i1l4865
  2214                           
  2215                           ;setting_hardaware/uart.c: 58:         {;setting_hardaware/uart.c: 59:             CREN 
      +                          = 0;
  2216  000036  98AB               	bcf	4011,4,c	;volatile
  2217                           
  2218                           ;setting_hardaware/uart.c: 60:             __nop();
  2219  000038  F000               	nop	
  2220                           
  2221                           ;setting_hardaware/uart.c: 61:             CREN = 1;
  2222  00003A  88AB               	bsf	4011,4,c	;volatile
  2223  00003C                     i1l4865:
  2224                           
  2225                           ;setting_hardaware/uart.c: 64:         MyusartRead();
  2226  00003C  EC6A  F017         	call	_MyusartRead	;wreg free
  2227  000040                     i1l100:
  2228  000040  C1B1  FFDA         	movff	??_Lo_ISR+4,fsr2h
  2229  000044  C1B0  FFD9         	movff	??_Lo_ISR+3,fsr2l
  2230  000048  C1AF  FFE0         	movff	??_Lo_ISR+2,bsr
  2231  00004C  C1AE  FFE8         	movff	??_Lo_ISR+1,wreg
  2232  000050  C1AD  FFD8         	movff	??_Lo_ISR,status
  2233  000054  907F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2234  000056  0010               	retfie	
  2235  000058                     __end_of_Lo_ISR:
  2236                           	opt callstack 0
  2237                           
  2238 ;; *************** function _MyusartRead *****************
  2239 ;; Defined at:
  2240 ;;		line 32 in file "setting_hardaware/uart.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2254 ;;      Params:         0       0       0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0
  2257 ;;      Totals:         0       0       0       0       0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:   10
  2261 ;; This function calls:
  2262 ;;		_UART_Write
  2263 ;;		___awmod
  2264 ;; This function is called by:
  2265 ;;		_Lo_ISR
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text13
  2270  002ED4                     __ptext13:
  2271                           	opt callstack 0
  2272  002ED4                     _MyusartRead:
  2273                           	opt callstack 15
  2274                           
  2275                           ;setting_hardaware/uart.c: 34:     mystring[lenStr] = RCREG;
  2276                           
  2277                           ;incstack = 0
  2278  002ED4  0E72               	movlw	low _mystring
  2279  002ED6  0101               	movlb	1	; () banked
  2280  002ED8  2520               	addwf	_lenStr& (0+255),w,b
  2281  002EDA  6ED9               	movwf	fsr2l,c
  2282  002EDC  0E01               	movlw	high _mystring
  2283  002EDE  2121               	addwfc	(_lenStr+1)& (0+255),w,b
  2284  002EE0  6EDA               	movwf	fsr2h,c
  2285  002EE2  CFAE FFDF          	movff	4014,indf2	;volatile
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;setting_hardaware/uart.c: 35:     UART_Write(mystring[lenStr]);
  2289  002EE6  0E72               	movlw	low _mystring
  2290  002EE8  2520               	addwf	_lenStr& (0+255),w,b
  2291  002EEA  6ED9               	movwf	fsr2l,c
  2292  002EEC  0E01               	movlw	high _mystring
  2293  002EEE  2121               	addwfc	(_lenStr+1)& (0+255),w,b
  2294  002EF0  6EDA               	movwf	fsr2h,c
  2295  002EF2  50DF               	movf	indf2,w,c
  2296  002EF4  EC06  F019         	call	_UART_Write
  2297                           
  2298                           ;setting_hardaware/uart.c: 36:     lenStr++;
  2299  002EF8  0101               	movlb	1	; () banked
  2300  002EFA  4B20               	infsnz	_lenStr& (0+255),f,b
  2301  002EFC  2B21               	incf	(_lenStr+1)& (0+255),f,b
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;setting_hardaware/uart.c: 37:     lenStr %= 10;
  2305  002EFE  C120  F1A7         	movff	_lenStr,___awmod@dividend
  2306  002F02  C121  F1A8         	movff	_lenStr+1,___awmod@dividend+1
  2307  002F06  0E00               	movlw	0
  2308  002F08  6FAA               	movwf	(___awmod@divisor+1)& (0+255),b
  2309  002F0A  0E0A               	movlw	10
  2310  002F0C  6FA9               	movwf	___awmod@divisor& (0+255),b
  2311  002F0E  ECEC  F015         	call	___awmod	;wreg free
  2312  002F12  C1A7  F120         	movff	?___awmod,_lenStr
  2313  002F16  C1A8  F121         	movff	?___awmod+1,_lenStr+1
  2314  002F1A  0012               	return		;funcret
  2315  002F1C                     __end_of_MyusartRead:
  2316                           	opt callstack 0
  2317                           
  2318 ;; *************** function ___awmod *****************
  2319 ;; Defined at:
  2320 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  dividend        2    0[BANK1 ] int 
  2323 ;;  divisor         2    2[BANK1 ] int 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  sign            1    5[BANK1 ] unsigned char 
  2326 ;;  counter         1    4[BANK1 ] unsigned char 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  2    0[BANK1 ] int 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2336 ;;      Params:         0       0       4       0       0       0       0
  2337 ;;      Locals:         0       0       2       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0       0       0
  2339 ;;      Totals:         0       0       6       0       0       0       0
  2340 ;;Total ram usage:        6 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    9
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_MyusartRead
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text14
  2351  002BD8                     __ptext14:
  2352                           	opt callstack 0
  2353  002BD8                     ___awmod:
  2354                           	opt callstack 15
  2355                           
  2356                           ;incstack = 0
  2357  002BD8  0E00               	movlw	0
  2358  002BDA  0101               	movlb	1	; () banked
  2359  002BDC  6FAC               	movwf	___awmod@sign& (0+255),b
  2360                           
  2361                           ; BSR set to: 1
  2362  002BDE  AFA8               	btfss	(___awmod@dividend+1)& (0+255),7,b
  2363  002BE0  D006               	goto	i1l4621
  2364                           
  2365                           ; BSR set to: 1
  2366  002BE2  6DA7               	negf	___awmod@dividend& (0+255),b
  2367  002BE4  1FA8               	comf	(___awmod@dividend+1)& (0+255),f,b
  2368  002BE6  B0D8               	btfsc	status,0,c
  2369  002BE8  2BA8               	incf	(___awmod@dividend+1)& (0+255),f,b
  2370                           
  2371                           ; BSR set to: 1
  2372  002BEA  0E01               	movlw	1
  2373  002BEC  6FAC               	movwf	___awmod@sign& (0+255),b
  2374  002BEE                     i1l4621:
  2375                           
  2376                           ; BSR set to: 1
  2377  002BEE  AFAA               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2378  002BF0  D004               	goto	i1l4625
  2379                           
  2380                           ; BSR set to: 1
  2381  002BF2  6DA9               	negf	___awmod@divisor& (0+255),b
  2382  002BF4  1FAA               	comf	(___awmod@divisor+1)& (0+255),f,b
  2383  002BF6  B0D8               	btfsc	status,0,c
  2384  002BF8  2BAA               	incf	(___awmod@divisor+1)& (0+255),f,b
  2385  002BFA                     i1l4625:
  2386                           
  2387                           ; BSR set to: 1
  2388  002BFA  51A9               	movf	___awmod@divisor& (0+255),w,b
  2389  002BFC  11AA               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2390  002BFE  B4D8               	btfsc	status,2,c
  2391  002C00  D018               	goto	i1l4641
  2392                           
  2393                           ; BSR set to: 1
  2394  002C02  0E01               	movlw	1
  2395  002C04  6FAB               	movwf	___awmod@counter& (0+255),b
  2396  002C06  D004               	goto	i1l4631
  2397  002C08                     i1l4629:
  2398                           
  2399                           ; BSR set to: 1
  2400  002C08  90D8               	bcf	status,0,c
  2401  002C0A  37A9               	rlcf	___awmod@divisor& (0+255),f,b
  2402  002C0C  37AA               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2403  002C0E  2BAB               	incf	___awmod@counter& (0+255),f,b
  2404  002C10                     i1l4631:
  2405                           
  2406                           ; BSR set to: 1
  2407  002C10  AFAA               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2408  002C12  D7FA               	goto	i1l4629
  2409  002C14                     i1u520_20:
  2410                           
  2411                           ; BSR set to: 1
  2412  002C14  51A9               	movf	___awmod@divisor& (0+255),w,b
  2413  002C16  5DA7               	subwf	___awmod@dividend& (0+255),w,b
  2414  002C18  51AA               	movf	(___awmod@divisor+1)& (0+255),w,b
  2415  002C1A  59A8               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2416  002C1C  A0D8               	btfss	status,0,c
  2417  002C1E  D004               	goto	i1l4637
  2418                           
  2419                           ; BSR set to: 1
  2420  002C20  51A9               	movf	___awmod@divisor& (0+255),w,b
  2421  002C22  5FA7               	subwf	___awmod@dividend& (0+255),f,b
  2422  002C24  51AA               	movf	(___awmod@divisor+1)& (0+255),w,b
  2423  002C26  5BA8               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2424  002C28                     i1l4637:
  2425                           
  2426                           ; BSR set to: 1
  2427  002C28  90D8               	bcf	status,0,c
  2428  002C2A  33AA               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2429  002C2C  33A9               	rrcf	___awmod@divisor& (0+255),f,b
  2430                           
  2431                           ; BSR set to: 1
  2432  002C2E  2FAB               	decfsz	___awmod@counter& (0+255),f,b
  2433  002C30  D7F1               	goto	i1u520_20
  2434  002C32                     i1l4641:
  2435                           
  2436                           ; BSR set to: 1
  2437  002C32  51AC               	movf	___awmod@sign& (0+255),w,b
  2438  002C34  B4D8               	btfsc	status,2,c
  2439  002C36  D004               	goto	i1l4645
  2440                           
  2441                           ; BSR set to: 1
  2442  002C38  6DA7               	negf	___awmod@dividend& (0+255),b
  2443  002C3A  1FA8               	comf	(___awmod@dividend+1)& (0+255),f,b
  2444  002C3C  B0D8               	btfsc	status,0,c
  2445  002C3E  2BA8               	incf	(___awmod@dividend+1)& (0+255),f,b
  2446  002C40                     i1l4645:
  2447                           
  2448                           ; BSR set to: 1
  2449  002C40  C1A7  F1A7         	movff	___awmod@dividend,?___awmod
  2450  002C44  C1A8  F1A8         	movff	___awmod@dividend+1,?___awmod+1
  2451                           
  2452                           ; BSR set to: 1
  2453  002C48  0012               	return		;funcret
  2454  002C4A                     __end_of___awmod:
  2455                           	opt callstack 0
  2456                           
  2457 ;; *************** function _UART_Write *****************
  2458 ;; Defined at:
  2459 ;;		line 11 in file "setting_hardaware/uart.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  data            1    wreg     unsigned char 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  data            1    0[BANK1 ] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2473 ;;      Params:         0       0       0       0       0       0       0
  2474 ;;      Locals:         0       0       1       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0
  2476 ;;      Totals:         0       0       1       0       0       0       0
  2477 ;;Total ram usage:        1 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    9
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_MyusartRead
  2484 ;;		_UART_Write_Text
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text15
  2489  00320C                     __ptext15:
  2490                           	opt callstack 0
  2491  00320C                     _UART_Write:
  2492                           	opt callstack 15
  2493                           
  2494                           ; BSR set to: 1
  2495                           ;incstack = 0
  2496                           ;UART_Write@data stored from wreg
  2497  00320C  0101               	movlb	1	; () banked
  2498  00320E  6FA7               	movwf	UART_Write@data& (0+255),b
  2499  003210                     
  2500                           ;setting_hardaware/uart.c: 11: void UART_Write(unsigned char data);setting_hardaware/uar
      +                          t.c: 12: {;setting_hardaware/uart.c: 13:     while(!TXSTAbits.TRMT);
  2501  003210  A2AC               	btfss	172,1,c	;volatile
  2502  003212  D7FE               	goto	i1l4593
  2503                           
  2504                           ;setting_hardaware/uart.c: 14:     TXREG = data;
  2505  003214  C1A7  FFAD         	movff	UART_Write@data,4013	;volatile
  2506  003218  0012               	return		;funcret
  2507  00321A                     __end_of_UART_Write:
  2508                           	opt callstack 0
  2509                           
  2510 ;; *************** function _Hi_ISR *****************
  2511 ;; Defined at:
  2512 ;;		line 22 in file "main.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2526 ;;      Params:         0       0       0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0
  2528 ;;      Temps:          0      13       0       0       0       0       0
  2529 ;;      Totals:         0      13       0       0       0       0       0
  2530 ;;Total ram usage:       13 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    8
  2533 ;; This function calls:
  2534 ;;		_ADC_Read
  2535 ;;		_LCD_clear
  2536 ;;		_memset
  2537 ;;		_sprintf
  2538 ;;		i2_Send2Lcd
  2539 ;; This function is called by:
  2540 ;;		Interrupt level 2
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	intcode
  2545  000008                     __pintcode:
  2546                           	opt callstack 0
  2547  000008                     _Hi_ISR:
  2548                           	opt callstack 15
  2549                           
  2550                           ;incstack = 0
  2551  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2552  00000A  EDE4  F011         	call	int_func,f	;refresh shadow registers
  2553                           
  2554                           	psect	intcode_body
  2555  0023C8                     __pintcode_body:
  2556                           	opt callstack 15
  2557  0023C8                     int_func:
  2558                           	opt callstack 15
  2559  0023C8  0006               	pop		; remove dummy address from shadow register refresh
  2560  0023CA  CFE9 F0CF          	movff	fsr0l,??_Hi_ISR+1
  2561  0023CE  CFEA F0D0          	movff	fsr0h,??_Hi_ISR+2
  2562  0023D2  CFE1 F0D1          	movff	fsr1l,??_Hi_ISR+3
  2563  0023D6  CFE2 F0D2          	movff	fsr1h,??_Hi_ISR+4
  2564  0023DA  CFD9 F0D3          	movff	fsr2l,??_Hi_ISR+5
  2565  0023DE  CFDA F0D4          	movff	fsr2h,??_Hi_ISR+6
  2566  0023E2  CFF3 F0D5          	movff	prodl,??_Hi_ISR+7
  2567  0023E6  CFF4 F0D6          	movff	prodh,??_Hi_ISR+8
  2568  0023EA  CFF6 F0D7          	movff	tblptrl,??_Hi_ISR+9
  2569  0023EE  CFF7 F0D8          	movff	tblptrh,??_Hi_ISR+10
  2570  0023F2  CFF8 F0D9          	movff	tblptru,??_Hi_ISR+11
  2571  0023F6  CFF5 F0DA          	movff	tablat,??_Hi_ISR+12
  2572                           
  2573                           ;main.c: 24:     if(PIR1bits.TMR1IF&&PIE1bits.TMR1IE) {
  2574  0023FA  B09E               	btfsc	158,0,c	;volatile
  2575  0023FC  A09D               	btfss	157,0,c	;volatile
  2576  0023FE  D04F               	goto	i2l263
  2577                           
  2578                           ;main.c: 25:         if(count<cycle){
  2579  002400  0100               	movlb	0	; () banked
  2580  002402  51F5               	movf	_cycle& (0+255),w,b
  2581  002404  5DEF               	subwf	_count& (0+255),w,b
  2582  002406  51F0               	movf	(_count+1)& (0+255),w,b
  2583  002408  0A80               	xorlw	128
  2584  00240A  6FCE               	movwf	??_Hi_ISR& (0+255),b
  2585  00240C  51F6               	movf	(_cycle+1)& (0+255),w,b
  2586  00240E  0A80               	xorlw	128
  2587  002410  59CE               	subwfb	??_Hi_ISR& (0+255),w,b
  2588  002412  B0D8               	btfsc	status,0,c
  2589  002414  D003               	goto	i2l5431
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;main.c: 26:             count++;
  2593  002416  4BEF               	infsnz	_count& (0+255),f,b
  2594  002418  2BF0               	incf	(_count+1)& (0+255),f,b
  2595                           
  2596                           ;main.c: 27:         }
  2597  00241A  D03C               	goto	i2l5443
  2598  00241C                     i2l5431:
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;main.c: 31:             count=0;
  2602  00241C  0E00               	movlw	0
  2603  00241E  6FF0               	movwf	(_count+1)& (0+255),b
  2604  002420  0E00               	movlw	0
  2605  002422  6FEF               	movwf	_count& (0+255),b
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;main.c: 32:             memset(r,'\0',sizeof(r));
  2609  002424  0E00               	movlw	low _r
  2610  002426  6E01               	movwf	memset@dest^0,c
  2611  002428  0E02               	movlw	high _r
  2612  00242A  6E02               	movwf	(memset@dest+1)^0,c
  2613  00242C  0E00               	movlw	0
  2614  00242E  6E04               	movwf	(memset@c+1)^0,c
  2615  002430  0E00               	movlw	0
  2616  002432  6E03               	movwf	memset@c^0,c
  2617  002434  0E00               	movlw	0
  2618  002436  6E06               	movwf	(memset@n+1)^0,c
  2619  002438  0E64               	movlw	100
  2620  00243A  6E05               	movwf	memset@n^0,c
  2621  00243C  ECB5  F010         	call	_memset	;wreg free
  2622                           
  2623                           ;main.c: 34:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  2624  002440  0E21               	movlw	33
  2625  002442                     i2u649_47:
  2626  002442  2EE8               	decfsz	wreg,f,c
  2627  002444  D7FE               	bra	i2u649_47
  2628  002446  F000               	nop	
  2629                           
  2630                           ;main.c: 35:             sprintf(r,"%s%.2f C",r,ADC_Read(0));
  2631  002448  0E00               	movlw	low _r
  2632  00244A  0100               	movlb	0	; () banked
  2633  00244C  6FBA               	movwf	sprintf@s& (0+255),b
  2634  00244E  0E02               	movlw	high _r
  2635  002450  6FBB               	movwf	(sprintf@s+1)& (0+255),b
  2636  002452  0E95               	movlw	low STR_3
  2637  002454  6FBC               	movwf	sprintf@fmt& (0+255),b
  2638  002456  0E06               	movlw	high STR_3
  2639  002458  6FBD               	movwf	(sprintf@fmt+1)& (0+255),b
  2640  00245A  0E00               	movlw	low _r
  2641  00245C  6FBE               	movwf	(?_sprintf+4)& (0+255),b
  2642  00245E  0E02               	movlw	high _r
  2643  002460  6FBF               	movwf	(?_sprintf+5)& (0+255),b
  2644  002462  0E00               	movlw	0
  2645  002464  6E42               	movwf	(ADC_Read@channel+1)^0,c
  2646  002466  0E00               	movlw	0
  2647  002468  6E41               	movwf	ADC_Read@channel^0,c
  2648  00246A  EC69  F012         	call	_ADC_Read	;wreg free
  2649  00246E  C041  F0C0         	movff	?_ADC_Read,?_sprintf+6
  2650  002472  C042  F0C1         	movff	?_ADC_Read+1,?_sprintf+7
  2651  002476  C043  F0C2         	movff	?_ADC_Read+2,?_sprintf+8
  2652  00247A  C044  F0C3         	movff	?_ADC_Read+3,?_sprintf+9
  2653  00247E  ECF2  F016         	call	_sprintf	;wreg free
  2654                           
  2655                           ;main.c: 37:             LCD_clear();
  2656  002482  EC0D  F019         	call	_LCD_clear	;wreg free
  2657                           
  2658                           ;main.c: 38:             Send2Lcd(0x80,r);
  2659  002486  0E00               	movlw	low _r
  2660  002488  6E04               	movwf	i2Send2Lcd@Lcd^0,c
  2661  00248A  0E02               	movlw	high _r
  2662  00248C  6E05               	movwf	(i2Send2Lcd@Lcd+1)^0,c
  2663  00248E  0E80               	movlw	128
  2664  002490  EC94  F016         	call	i2_Send2Lcd
  2665  002494                     i2l5443:
  2666                           
  2667                           ;main.c: 60:         PIR1bits.TMR1IF=0;
  2668  002494  909E               	bcf	158,0,c	;volatile
  2669                           
  2670                           ;main.c: 61:         TMR1=timer_val;
  2671  002496  C0FD  FFCE         	movff	_timer_val,4046	;volatile
  2672  00249A  C0FE  FFCF         	movff	_timer_val+1,4047	;volatile
  2673  00249E                     i2l263:
  2674  00249E  C0DA  FFF5         	movff	??_Hi_ISR+12,tablat
  2675  0024A2  C0D9  FFF8         	movff	??_Hi_ISR+11,tblptru
  2676  0024A6  C0D8  FFF7         	movff	??_Hi_ISR+10,tblptrh
  2677  0024AA  C0D7  FFF6         	movff	??_Hi_ISR+9,tblptrl
  2678  0024AE  C0D6  FFF4         	movff	??_Hi_ISR+8,prodh
  2679  0024B2  C0D5  FFF3         	movff	??_Hi_ISR+7,prodl
  2680  0024B6  C0D4  FFDA         	movff	??_Hi_ISR+6,fsr2h
  2681  0024BA  C0D3  FFD9         	movff	??_Hi_ISR+5,fsr2l
  2682  0024BE  C0D2  FFE2         	movff	??_Hi_ISR+4,fsr1h
  2683  0024C2  C0D1  FFE1         	movff	??_Hi_ISR+3,fsr1l
  2684  0024C6  C0D0  FFEA         	movff	??_Hi_ISR+2,fsr0h
  2685  0024CA  C0CF  FFE9         	movff	??_Hi_ISR+1,fsr0l
  2686  0024CE  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2687  0024D0  0011               	retfie		f
  2688  0024D2                     __end_of_Hi_ISR:
  2689                           	opt callstack 0
  2690                           
  2691 ;; *************** function i2_Send2Lcd *****************
  2692 ;; Defined at:
  2693 ;;		line 41 in file "setting_hardaware/LCD.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  Adr             1    wreg     const unsigned char 
  2696 ;;  Lcd             2    3[COMRAM] PTR const unsigned char 
  2697 ;;		 -> r(100), STR_2(6), STR_1(8), 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  Adr             1    6[COMRAM] const unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2709 ;;      Params:         2       0       0       0       0       0       0
  2710 ;;      Locals:         1       0       0       0       0       0       0
  2711 ;;      Temps:          1       0       0       0       0       0       0
  2712 ;;      Totals:         4       0       0       0       0       0       0
  2713 ;;Total ram usage:        4 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    1
  2716 ;; This function calls:
  2717 ;;		i2_Cmd
  2718 ;;		i2_Data
  2719 ;; This function is called by:
  2720 ;;		_Hi_ISR
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text17
  2725  002D28                     __ptext17:
  2726                           	opt callstack 0
  2727  002D28                     i2_Send2Lcd:
  2728                           	opt callstack 21
  2729                           
  2730                           ;incstack = 0
  2731                           ;i2Send2Lcd@Adr stored from wreg
  2732  002D28  6E07               	movwf	i2Send2Lcd@Adr^0,c
  2733                           
  2734                           ;setting_hardaware/LCD.c: 41: void Send2Lcd(const char Adr, const char *Lcd);setting_har
      +                          daware/LCD.c: 42: {;setting_hardaware/LCD.c: 43:  Cmd(Adr);
  2735  002D2A  C007  F001         	movff	i2Send2Lcd@Adr,i2Cmd@Value
  2736  002D2E  6A02               	clrf	(i2Cmd@Value+1)^0,c
  2737  002D30  EC7A  F018         	call	i2_Cmd	;wreg free
  2738                           
  2739                           ;setting_hardaware/LCD.c: 44:  while(*Lcd!='\0')
  2740  002D34  D018               	goto	i2l4833
  2741  002D36                     i2l4829:
  2742                           
  2743                           ;setting_hardaware/LCD.c: 45:  {;setting_hardaware/LCD.c: 46:   Data(*Lcd);
  2744  002D36  C004  FFF6         	movff	i2Send2Lcd@Lcd,tblptrl
  2745  002D3A  C005  FFF7         	movff	i2Send2Lcd@Lcd+1,tblptrh
  2746  002D3E  6AF8               	clrf	tblptru,c
  2747  002D40  0E05               	movlw	(high __ramtop+-1)
  2748  002D42  64F7               	cpfsgt	tblptrh,c
  2749  002D44  D003               	bra	i2u542_47
  2750  002D46  0008               	tblrd		*
  2751  002D48  50F5               	movf	tablat,w,c
  2752  002D4A  D005               	bra	i2u542_40
  2753  002D4C                     i2u542_47:
  2754  002D4C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2755  002D50  CFF7 FFEA          	movff	tblptrh,fsr0h
  2756  002D54  50EF               	movf	indf0,w,c
  2757  002D56                     i2u542_40:
  2758  002D56  6E06               	movwf	??i2_Send2Lcd^0,c
  2759  002D58  5006               	movf	??i2_Send2Lcd^0,w,c
  2760  002D5A  6E01               	movwf	i2Data@Value^0,c
  2761  002D5C  6A02               	clrf	(i2Data@Value+1)^0,c
  2762  002D5E  EC4C  F018         	call	i2_Data	;wreg free
  2763                           
  2764                           ;setting_hardaware/LCD.c: 47:   Lcd++;
  2765  002D62  4A04               	infsnz	i2Send2Lcd@Lcd^0,f,c
  2766  002D64  2A05               	incf	(i2Send2Lcd@Lcd+1)^0,f,c
  2767  002D66                     i2l4833:
  2768                           
  2769                           ;setting_hardaware/LCD.c: 44:  while(*Lcd!='\0')
  2770  002D66  C004  FFF6         	movff	i2Send2Lcd@Lcd,tblptrl
  2771  002D6A  C005  FFF7         	movff	i2Send2Lcd@Lcd+1,tblptrh
  2772  002D6E  6AF8               	clrf	tblptru,c
  2773  002D70  0E05               	movlw	(high __ramtop+-1)
  2774  002D72  64F7               	cpfsgt	tblptrh,c
  2775  002D74  D003               	bra	i2u543_47
  2776  002D76  0008               	tblrd		*
  2777  002D78  50F5               	movf	tablat,w,c
  2778  002D7A  D005               	bra	i2u543_40
  2779  002D7C                     i2u543_47:
  2780  002D7C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2781  002D80  CFF7 FFEA          	movff	tblptrh,fsr0h
  2782  002D84  50EF               	movf	indf0,w,c
  2783  002D86                     i2u543_40:
  2784  002D86  0900               	iorlw	0
  2785  002D88  B4D8               	btfsc	status,2,c
  2786  002D8A  0012               	return	
  2787  002D8C  D7D4               	goto	i2l4829
  2788  002D8E                     __end_ofi2_Send2Lcd:
  2789                           	opt callstack 0
  2790                           
  2791 ;; *************** function i2_Data *****************
  2792 ;; Defined at:
  2793 ;;		line 28 in file "setting_hardaware/LCD.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  Value           2    0[COMRAM] int 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2807 ;;      Params:         2       0       0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0
  2809 ;;      Temps:          1       0       0       0       0       0       0
  2810 ;;      Totals:         3       0       0       0       0       0       0
  2811 ;;Total ram usage:        3 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		i2_Send2Lcd
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text18
  2821  003098                     __ptext18:
  2822                           	opt callstack 0
  2823  003098                     i2_Data:
  2824                           	opt callstack 21
  2825                           
  2826                           ;setting_hardaware/LCD.c: 28: void Data(int Value);setting_hardaware/LCD.c: 29: {;settin
      +                          g_hardaware/LCD.c: 30:  LATD = Value;
  2827                           
  2828                           ;incstack = 0
  2829  003098  C001  FF8C         	movff	i2Data@Value,3980	;volatile
  2830                           
  2831                           ;setting_hardaware/LCD.c: 31:  LATCbits.LC4=1;
  2832  00309C  888B               	bsf	139,4,c	;volatile
  2833                           
  2834                           ;setting_hardaware/LCD.c: 33:  LATCbits.LC6=0;
  2835  00309E  9C8B               	bcf	139,6,c	;volatile
  2836                           
  2837                           ;setting_hardaware/LCD.c: 34:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2838  0030A0  0E08               	movlw	8
  2839  0030A2                     i2u650_47:
  2840  0030A2  2EE8               	decfsz	wreg,f,c
  2841  0030A4  D7FE               	bra	i2u650_47
  2842  0030A6  F000               	nop	
  2843                           
  2844                           ;setting_hardaware/LCD.c: 35:  LATCbits.LC6=1;
  2845  0030A8  8C8B               	bsf	139,6,c	;volatile
  2846                           
  2847                           ;setting_hardaware/LCD.c: 36:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  2848  0030AA  0E08               	movlw	8
  2849  0030AC                     i2u651_47:
  2850  0030AC  2EE8               	decfsz	wreg,f,c
  2851  0030AE  D7FE               	bra	i2u651_47
  2852  0030B0  F000               	nop	
  2853                           
  2854                           ;setting_hardaware/LCD.c: 37:  LATCbits.LC6=0;
  2855  0030B2  9C8B               	bcf	139,6,c	;volatile
  2856                           
  2857                           ;setting_hardaware/LCD.c: 38:  _delay((unsigned long)((3)*(4000000/4000.0)));
  2858  0030B4  0E04               	movlw	4
  2859  0030B6  6E03               	movwf	??i2_Data^0,c
  2860  0030B8  0EE4               	movlw	228
  2861  0030BA                     i2u652_47:
  2862  0030BA  2EE8               	decfsz	wreg,f,c
  2863  0030BC  D7FE               	bra	i2u652_47
  2864  0030BE  2E03               	decfsz	??i2_Data^0,f,c
  2865  0030C0  D7FC               	bra	i2u652_47
  2866  0030C2  D000               	nop2	
  2867  0030C4  0012               	return		;funcret
  2868  0030C6                     __end_ofi2_Data:
  2869                           	opt callstack 0
  2870                           
  2871 ;; *************** function _sprintf *****************
  2872 ;; Defined at:
  2873 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  s               2   58[BANK0 ] PTR unsigned char 
  2876 ;;		 -> r(100), 
  2877 ;;  fmt             2   60[BANK0 ] PTR const unsigned char 
  2878 ;;		 -> STR_3(9), 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  f               6   72[BANK0 ] struct _IO_FILE
  2881 ;;  ap              2   70[BANK0 ] PTR void [1]
  2882 ;;		 -> ?_sprintf(2), 
  2883 ;;  ret             2    0        int 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2   58[BANK0 ] int 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2893 ;;      Params:         0      10       0       0       0       0       0
  2894 ;;      Locals:         0      10       0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0
  2896 ;;      Totals:         0      20       0       0       0       0       0
  2897 ;;Total ram usage:       20 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    7
  2900 ;; This function calls:
  2901 ;;		_vfprintf
  2902 ;; This function is called by:
  2903 ;;		_Hi_ISR
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text19
  2908  002DE4                     __ptext19:
  2909                           	opt callstack 0
  2910  002DE4                     _sprintf:
  2911                           	opt callstack 15
  2912                           
  2913                           ;incstack = 0
  2914  002DE4  0EBE               	movlw	low (?_sprintf+4)
  2915  002DE6  0100               	movlb	0	; () banked
  2916  002DE8  6FC6               	movwf	sprintf@ap& (0+255),b
  2917  002DEA  0E00               	movlw	high (?_sprintf+4)
  2918  002DEC  6FC7               	movwf	(sprintf@ap+1)& (0+255),b
  2919  002DEE  C0BA  F0C8         	movff	sprintf@s,sprintf@f
  2920  002DF2  C0BB  F0C9         	movff	sprintf@s+1,sprintf@f+1
  2921                           
  2922                           ; BSR set to: 0
  2923  002DF6  0E00               	movlw	0
  2924  002DF8  6FCB               	movwf	(sprintf@f+3)& (0+255),b
  2925  002DFA  0E00               	movlw	0
  2926  002DFC  6FCA               	movwf	(sprintf@f+2)& (0+255),b
  2927                           
  2928                           ; BSR set to: 0
  2929  002DFE  0E00               	movlw	0
  2930  002E00  6FCD               	movwf	(sprintf@f+5)& (0+255),b
  2931  002E02  0E00               	movlw	0
  2932  002E04  6FCC               	movwf	(sprintf@f+4)& (0+255),b
  2933                           
  2934                           ; BSR set to: 0
  2935  002E06  0EC8               	movlw	low sprintf@f
  2936  002E08  6E79               	movwf	vfprintf@fp^0,c
  2937  002E0A  0E00               	movlw	high sprintf@f
  2938  002E0C  6E7A               	movwf	(vfprintf@fp+1)^0,c
  2939  002E0E  C0BC  F07B         	movff	sprintf@fmt,vfprintf@fmt
  2940  002E12  C0BD  F07C         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2941  002E16  0EC6               	movlw	low sprintf@ap
  2942  002E18  6E7D               	movwf	vfprintf@ap^0,c
  2943  002E1A  0E00               	movlw	high sprintf@ap
  2944  002E1C  6E7E               	movwf	(vfprintf@ap+1)^0,c
  2945  002E1E  ECC7  F016         	call	_vfprintf	;wreg free
  2946  002E22  0100               	movlb	0	; () banked
  2947  002E24  51CA               	movf	(sprintf@f+2)& (0+255),w,b
  2948  002E26  25BA               	addwf	sprintf@s& (0+255),w,b
  2949  002E28  6ED9               	movwf	fsr2l,c
  2950  002E2A  51CB               	movf	(sprintf@f+3)& (0+255),w,b
  2951  002E2C  21BB               	addwfc	(sprintf@s+1)& (0+255),w,b
  2952  002E2E  6EDA               	movwf	fsr2h,c
  2953  002E30  0E00               	movlw	0
  2954  002E32  6EDF               	movwf	indf2,c
  2955                           
  2956                           ; BSR set to: 0
  2957  002E34  0012               	return		;funcret
  2958  002E36                     __end_of_sprintf:
  2959                           	opt callstack 0
  2960                           
  2961 ;; *************** function _vfprintf *****************
  2962 ;; Defined at:
  2963 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  fp              2  120[COMRAM] PTR struct _IO_FILE
  2966 ;;		 -> sprintf@f(6), 
  2967 ;;  fmt             2  122[COMRAM] PTR const unsigned char 
  2968 ;;		 -> STR_3(9), 
  2969 ;;  ap              2  124[COMRAM] PTR PTR void 
  2970 ;;		 -> sprintf@ap(2), 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  cfmt            2   56[BANK0 ] PTR unsigned char 
  2973 ;;		 -> STR_3(9), 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  2  120[COMRAM] int 
  2976 ;; Registers used:
  2977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2983 ;;      Params:         6       0       0       0       0       0       0
  2984 ;;      Locals:         0       2       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0
  2986 ;;      Totals:         6       2       0       0       0       0       0
  2987 ;;Total ram usage:        8 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    6
  2990 ;; This function calls:
  2991 ;;		_vfpfcnvrt
  2992 ;; This function is called by:
  2993 ;;		_sprintf
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text20
  2998  002D8E                     __ptext20:
  2999                           	opt callstack 0
  3000  002D8E                     _vfprintf:
  3001                           	opt callstack 15
  3002                           
  3003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;incstack = 0
  3007  002D8E  C07B  F0B8         	movff	vfprintf@fmt,vfprintf@cfmt
  3008  002D92  C07C  F0B9         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3009                           
  3010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3011  002D96  0E00               	movlw	0
  3012  002D98  0100               	movlb	0	; () banked
  3013  002D9A  6FE6               	movwf	(_nout+1)& (0+255),b
  3014  002D9C  0E00               	movlw	0
  3015  002D9E  6FE5               	movwf	_nout& (0+255),b
  3016                           
  3017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3018  002DA0  D013               	goto	i2l4611
  3019  002DA2                     i2l4609:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3023  002DA2  C079  F061         	movff	vfprintf@fp,vfpfcnvrt@fp
  3024  002DA6  C07A  F062         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3025  002DAA  0EB8               	movlw	low vfprintf@cfmt
  3026  002DAC  6E63               	movwf	vfpfcnvrt@fmt^0,c
  3027  002DAE  0E00               	movlw	high vfprintf@cfmt
  3028  002DB0  6E64               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3029  002DB2  C07D  F065         	movff	vfprintf@ap,vfpfcnvrt@ap
  3030  002DB6  C07E  F066         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3031  002DBA  EC1E  F008         	call	_vfpfcnvrt	;wreg free
  3032  002DBE  5061               	movf	?_vfpfcnvrt^0,w,c
  3033  002DC0  0100               	movlb	0	; () banked
  3034  002DC2  27E5               	addwf	_nout& (0+255),f,b
  3035  002DC4  5062               	movf	(?_vfpfcnvrt+1)^0,w,c
  3036  002DC6  23E6               	addwfc	(_nout+1)& (0+255),f,b
  3037  002DC8                     i2l4611:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3041  002DC8  C0B8  FFF6         	movff	vfprintf@cfmt,tblptrl
  3042  002DCC  C0B9  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3043  002DD0                     	if	0	;tblptru may be non-zero
  3044  002DD0                     	endif
  3045  002DD0                     	if	0	;tblptru may be non-zero
  3046  002DD0                     	endif
  3047  002DD0  0008               	tblrd		*
  3048  002DD2  50F5               	movf	tablat,w,c
  3049  002DD4  0900               	iorlw	0
  3050  002DD6  A4D8               	btfss	status,2,c
  3051  002DD8  D7E4               	goto	i2l4609
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3055  002DDA  C0E5  F079         	movff	_nout,?_vfprintf
  3056  002DDE  C0E6  F07A         	movff	_nout+1,?_vfprintf+1
  3057                           
  3058                           ; BSR set to: 0
  3059  002DE2  0012               	return		;funcret
  3060  002DE4                     __end_of_vfprintf:
  3061                           	opt callstack 0
  3062                           
  3063 ;; *************** function _vfpfcnvrt *****************
  3064 ;; Defined at:
  3065 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  fp              2   96[COMRAM] PTR struct _IO_FILE
  3068 ;;		 -> sprintf@f(6), 
  3069 ;;  fmt             2   98[COMRAM] PTR PTR unsigned char 
  3070 ;;		 -> vfprintf@cfmt(2), 
  3071 ;;  ap              2  100[COMRAM] PTR PTR void 
  3072 ;;		 -> sprintf@ap(2), 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  llu             8    0        unsigned long long 
  3075 ;;  ll              8    0        long long 
  3076 ;;  f               4  112[COMRAM] long long 
  3077 ;;  ct              3  116[COMRAM] unsigned char [3]
  3078 ;;  vp              3    0        PTR void 
  3079 ;;  cp              2  106[COMRAM] PTR unsigned char 
  3080 ;;		 -> ?_sprintf(2), r(100), 
  3081 ;;  i               2    0        int 
  3082 ;;  done            2    0        int 
  3083 ;;  c               1  119[COMRAM] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  2   96[COMRAM] int 
  3086 ;; Registers used:
  3087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3093 ;;      Params:         6       0       0       0       0       0       0
  3094 ;;      Locals:        14       0       0       0       0       0       0
  3095 ;;      Temps:          4       0       0       0       0       0       0
  3096 ;;      Totals:        24       0       0       0       0       0       0
  3097 ;;Total ram usage:       24 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    5
  3100 ;; This function calls:
  3101 ;;		_atoi
  3102 ;;		_efgtoa
  3103 ;;		_fputc
  3104 ;;		_isdigit
  3105 ;;		_isupper
  3106 ;;		_stoa
  3107 ;;		_strncmp
  3108 ;;		_tolower
  3109 ;; This function is called by:
  3110 ;;		_vfprintf
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text21
  3115  00103C                     __ptext21:
  3116                           	opt callstack 0
  3117  00103C                     _vfpfcnvrt:
  3118                           	opt callstack 15
  3119                           
  3120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;incstack = 0
  3124  00103C  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3125  001040  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3126  001044  CFDE FFF6          	movff	postinc2,tblptrl
  3127  001048  CFDD FFF7          	movff	postdec2,tblptrh
  3128  00104C                     	if	0	;tblptru may be non-zero
  3129  00104C                     	endif
  3130  00104C                     	if	0	;tblptru may be non-zero
  3131  00104C                     	endif
  3132  00104C  0008               	tblrd		*
  3133  00104E  50F5               	movf	tablat,w,c
  3134  001050  0A25               	xorlw	37
  3135  001052  A4D8               	btfss	status,2,c
  3136  001054  D1E2               	goto	i2l4549
  3137                           
  3138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3139  001056  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3140  00105A  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3141  00105E  2ADE               	incf	postinc2,f,c
  3142  001060  0E00               	movlw	0
  3143  001062  22DD               	addwfc	postdec2,f,c
  3144                           
  3145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3146  001064  0E00               	movlw	0
  3147  001066  0100               	movlb	0	; () banked
  3148  001068  6FE8               	movwf	(_width+1)& (0+255),b
  3149  00106A  0E00               	movlw	0
  3150  00106C  6FE7               	movwf	_width& (0+255),b
  3151  00106E  C0E7  F0EB         	movff	_width,_flags
  3152  001072  C0E8  F0EC         	movff	_width+1,_flags+1
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3156  001076  69E9               	setf	_prec& (0+255),b
  3157  001078  69EA               	setf	(_prec+1)& (0+255),b
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3161  00107A  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3162  00107E  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3163  001082  CFDE FFF6          	movff	postinc2,tblptrl
  3164  001086  CFDD FFF7          	movff	postdec2,tblptrh
  3165  00108A                     	if	0	;tblptru may be non-zero
  3166  00108A                     	endif
  3167  00108A                     	if	0	;tblptru may be non-zero
  3168  00108A                     	endif
  3169  00108A  0008               	tblrd		*
  3170  00108C  50F5               	movf	tablat,w,c
  3171  00108E  0A2E               	xorlw	46
  3172  001090  A4D8               	btfss	status,2,c
  3173  001092  D06D               	goto	i2u505_40
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3177  001094  0E00               	movlw	0
  3178  001096  6FEA               	movwf	(_prec+1)& (0+255),b
  3179  001098  0E00               	movlw	0
  3180  00109A  6FE9               	movwf	_prec& (0+255),b
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3184  00109C  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3185  0010A0  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3186  0010A4  2ADE               	incf	postinc2,f,c
  3187  0010A6  0E00               	movlw	0
  3188  0010A8  22DD               	addwfc	postdec2,f,c
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3192  0010AA  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3193  0010AE  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3194  0010B2  CFDE FFF6          	movff	postinc2,tblptrl
  3195  0010B6  CFDD FFF7          	movff	postdec2,tblptrh
  3196  0010BA                     	if	0	;tblptru may be non-zero
  3197  0010BA                     	endif
  3198  0010BA                     	if	0	;tblptru may be non-zero
  3199  0010BA                     	endif
  3200  0010BA  0008               	tblrd		*
  3201  0010BC  50F5               	movf	tablat,w,c
  3202  0010BE  0A2A               	xorlw	42
  3203  0010C0  A4D8               	btfss	status,2,c
  3204  0010C2  D01C               	goto	i2l4477
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3208  0010C4  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3209  0010C8  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3210  0010CC  2ADE               	incf	postinc2,f,c
  3211  0010CE  0E00               	movlw	0
  3212  0010D0  22DD               	addwfc	postdec2,f,c
  3213                           
  3214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3215  0010D2  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3216  0010D6  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3217  0010DA  CFDF F067          	movff	indf2,??_vfpfcnvrt
  3218  0010DE  0E02               	movlw	2
  3219  0010E0  26DE               	addwf	postinc2,f,c
  3220  0010E2  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  3221  0010E6  0E00               	movlw	0
  3222  0010E8  22DD               	addwfc	postdec2,f,c
  3223  0010EA  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3224  0010EE  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3225  0010F2  CFDE F0E9          	movff	postinc2,_prec
  3226  0010F6  CFDD F0EA          	movff	postdec2,_prec+1
  3227                           
  3228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3229  0010FA  D039               	goto	i2u505_40
  3230  0010FC                     i2l4477:
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3234  0010FC  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3235  001100  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3236  001104  CFDE F008          	movff	postinc2,atoi@s
  3237  001108  CFDD F009          	movff	postdec2,atoi@s+1
  3238  00110C  EC75  F00F         	call	_atoi	;wreg free
  3239  001110  C008  F0E9         	movff	?_atoi,_prec
  3240  001114  C009  F0EA         	movff	?_atoi+1,_prec+1
  3241                           
  3242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3243  001118  D007               	goto	i2l4481
  3244  00111A                     i2l4479:
  3245                           
  3246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3247  00111A  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3248  00111E  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3249  001122  2ADE               	incf	postinc2,f,c
  3250  001124  0E00               	movlw	0
  3251  001126  22DD               	addwfc	postdec2,f,c
  3252  001128                     i2l4481:
  3253  001128  0ED0               	movlw	208
  3254  00112A  6E67               	movwf	??_vfpfcnvrt^0,c
  3255  00112C  0EFF               	movlw	255
  3256  00112E  6E68               	movwf	(??_vfpfcnvrt+1)^0,c
  3257  001130  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3258  001134  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3259  001138  CFDE FFF6          	movff	postinc2,tblptrl
  3260  00113C  CFDD FFF7          	movff	postdec2,tblptrh
  3261  001140                     	if	0	;tblptru may be non-zero
  3262  001140                     	endif
  3263  001140                     	if	0	;tblptru may be non-zero
  3264  001140                     	endif
  3265  001140  0008               	tblrd		*
  3266  001142  50F5               	movf	tablat,w,c
  3267  001144  6E69               	movwf	(??_vfpfcnvrt+2)^0,c
  3268  001146  6A6A               	clrf	(??_vfpfcnvrt+3)^0,c
  3269  001148  5067               	movf	??_vfpfcnvrt^0,w,c
  3270  00114A  2669               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3271  00114C  5068               	movf	(??_vfpfcnvrt+1)^0,w,c
  3272  00114E  226A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3273  001150  506A               	movf	(??_vfpfcnvrt+3)^0,w,c
  3274  001152  E106               	bnz	i2u503_40
  3275  001154  0E0A               	movlw	10
  3276  001156  5C69               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3277  001158  B0D8               	btfsc	status,0,c
  3278  00115A  D002               	goto	i2u503_40
  3279  00115C  0E01               	movlw	1
  3280  00115E  D001               	goto	i2u504_40
  3281  001160                     i2u503_40:
  3282  001160  0E00               	movlw	0
  3283  001162                     i2u504_40:
  3284  001162  6E6D               	movwf	_vfpfcnvrt$1022^0,c
  3285  001164  6A6E               	clrf	(_vfpfcnvrt$1022+1)^0,c
  3286  001166  506D               	movf	_vfpfcnvrt$1022^0,w,c
  3287  001168  106E               	iorwf	(_vfpfcnvrt$1022+1)^0,w,c
  3288  00116A  A4D8               	btfss	status,2,c
  3289  00116C  D7D6               	goto	i2l4479
  3290  00116E                     i2u505_40:
  3291                           
  3292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3293  00116E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3294  001172  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3295  001176  CFDE FFF6          	movff	postinc2,tblptrl
  3296  00117A  CFDD FFF7          	movff	postdec2,tblptrh
  3297  00117E                     	if	0	;tblptru may be non-zero
  3298  00117E                     	endif
  3299  00117E                     	if	0	;tblptru may be non-zero
  3300  00117E                     	endif
  3301  00117E  0008               	tblrd		*
  3302  001180  50F5               	movf	tablat,w,c
  3303  001182  6E07               	movwf	tolower@c^0,c
  3304  001184  6A08               	clrf	(tolower@c+1)^0,c
  3305  001186  EC44  F017         	call	_tolower	;wreg free
  3306  00118A  5007               	movf	?_tolower^0,w,c
  3307  00118C  6E75               	movwf	vfpfcnvrt@ct^0,c
  3308                           
  3309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3310  00118E  5075               	movf	vfpfcnvrt@ct^0,w,c
  3311  001190  B4D8               	btfsc	status,2,c
  3312  001192  D033               	goto	i2l4497
  3313                           
  3314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3315  001194  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3316  001198  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3317  00119C  CFDE F067          	movff	postinc2,??_vfpfcnvrt
  3318  0011A0  CFDD F068          	movff	postdec2,??_vfpfcnvrt+1
  3319  0011A4  0E01               	movlw	1
  3320  0011A6  2667               	addwf	??_vfpfcnvrt^0,f,c
  3321  0011A8  0E00               	movlw	0
  3322  0011AA  2268               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3323  0011AC  C067  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3324  0011B0  C068  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3325  0011B4                     	if	0	;tblptru may be non-zero
  3326  0011B4                     	endif
  3327  0011B4                     	if	0	;tblptru may be non-zero
  3328  0011B4                     	endif
  3329  0011B4  0008               	tblrd		*
  3330  0011B6  50F5               	movf	tablat,w,c
  3331  0011B8  6E07               	movwf	tolower@c^0,c
  3332  0011BA  6A08               	clrf	(tolower@c+1)^0,c
  3333  0011BC  EC44  F017         	call	_tolower	;wreg free
  3334  0011C0  5007               	movf	?_tolower^0,w,c
  3335  0011C2  6E76               	movwf	(vfpfcnvrt@ct+1)^0,c
  3336                           
  3337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3338  0011C4  5076               	movf	(vfpfcnvrt@ct+1)^0,w,c
  3339  0011C6  B4D8               	btfsc	status,2,c
  3340  0011C8  D018               	goto	i2l4497
  3341                           
  3342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3343  0011CA  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3344  0011CE  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3345  0011D2  CFDE F067          	movff	postinc2,??_vfpfcnvrt
  3346  0011D6  CFDD F068          	movff	postdec2,??_vfpfcnvrt+1
  3347  0011DA  0E02               	movlw	2
  3348  0011DC  2667               	addwf	??_vfpfcnvrt^0,f,c
  3349  0011DE  0E00               	movlw	0
  3350  0011E0  2268               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3351  0011E2  C067  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3352  0011E6  C068  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3353  0011EA                     	if	0	;tblptru may be non-zero
  3354  0011EA                     	endif
  3355  0011EA                     	if	0	;tblptru may be non-zero
  3356  0011EA                     	endif
  3357  0011EA  0008               	tblrd		*
  3358  0011EC  50F5               	movf	tablat,w,c
  3359  0011EE  6E07               	movwf	tolower@c^0,c
  3360  0011F0  6A08               	clrf	(tolower@c+1)^0,c
  3361  0011F2  EC44  F017         	call	_tolower	;wreg free
  3362  0011F6  5007               	movf	?_tolower^0,w,c
  3363  0011F8  6E77               	movwf	(vfpfcnvrt@ct+2)^0,c
  3364  0011FA                     i2l4497:
  3365                           
  3366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  3367  0011FA  0E66               	movlw	102
  3368  0011FC  1875               	xorwf	vfpfcnvrt@ct^0,w,c
  3369  0011FE  A4D8               	btfss	status,2,c
  3370  001200  D03F               	goto	i2l4509
  3371                           
  3372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  3373  001202  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3374  001206  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3375  00120A  CFDE FFF6          	movff	postinc2,tblptrl
  3376  00120E  CFDD FFF7          	movff	postdec2,tblptrh
  3377  001212                     	if	0	;tblptru may be non-zero
  3378  001212                     	endif
  3379  001212                     	if	0	;tblptru may be non-zero
  3380  001212                     	endif
  3381  001212  0008               	tblrd		*
  3382  001214  CFF5 F078          	movff	tablat,vfpfcnvrt@c
  3383                           
  3384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  3385  001218  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3386  00121C  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3387  001220  2ADE               	incf	postinc2,f,c
  3388  001222  0E00               	movlw	0
  3389  001224  22DD               	addwfc	postdec2,f,c
  3390                           
  3391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3392  001226  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3393  00122A  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3394  00122E  CFDF F067          	movff	indf2,??_vfpfcnvrt
  3395  001232  0E04               	movlw	4
  3396  001234  26DE               	addwf	postinc2,f,c
  3397  001236  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  3398  00123A  0E00               	movlw	0
  3399  00123C  22DD               	addwfc	postdec2,f,c
  3400  00123E  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3401  001242  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3402  001246  CFDE F071          	movff	postinc2,vfpfcnvrt@f
  3403  00124A  CFDE F072          	movff	postinc2,vfpfcnvrt@f+1
  3404  00124E  CFDE F073          	movff	postinc2,vfpfcnvrt@f+2
  3405  001252  CFDE F074          	movff	postinc2,vfpfcnvrt@f+3
  3406  001256                     i2l4505:
  3407                           
  3408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  3409  001256  C061  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  3410  00125A  C062  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3411  00125E  C071  F057         	movff	vfpfcnvrt@f,efgtoa@f
  3412  001262  C072  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3413  001266  C073  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3414  00126A  C074  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3415  00126E  C078  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  3416  001272  EC60  F003         	call	_efgtoa	;wreg free
  3417  001276  C055  F061         	movff	?_efgtoa,?_vfpfcnvrt
  3418  00127A  C056  F062         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3419  00127E  0012               	return	
  3420  001280                     i2l4509:
  3421                           
  3422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3423  001280  0E75               	movlw	low vfpfcnvrt@ct
  3424  001282  6E01               	movwf	strncmp@_l^0,c
  3425  001284  0E00               	movlw	high vfpfcnvrt@ct
  3426  001286  6E02               	movwf	(strncmp@_l+1)^0,c
  3427  001288  0EBC               	movlw	low STR_12
  3428  00128A  6E03               	movwf	strncmp@_r^0,c
  3429  00128C  0E06               	movlw	high STR_12
  3430  00128E  6E04               	movwf	(strncmp@_r+1)^0,c
  3431  001290  0E00               	movlw	0
  3432  001292  6E06               	movwf	(strncmp@n+1)^0,c
  3433  001294  0E02               	movlw	2
  3434  001296  6E05               	movwf	strncmp@n^0,c
  3435  001298  EC00  F014         	call	_strncmp	;wreg free
  3436  00129C  5001               	movf	?_strncmp^0,w,c
  3437  00129E  1002               	iorwf	(?_strncmp+1)^0,w,c
  3438  0012A0  A4D8               	btfss	status,2,c
  3439  0012A2  D055               	goto	i2l4525
  3440                           
  3441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3442  0012A4  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3443  0012A8  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3444  0012AC  CFDE F067          	movff	postinc2,??_vfpfcnvrt
  3445  0012B0  CFDD F068          	movff	postdec2,??_vfpfcnvrt+1
  3446  0012B4  0E01               	movlw	1
  3447  0012B6  2667               	addwf	??_vfpfcnvrt^0,f,c
  3448  0012B8  0E00               	movlw	0
  3449  0012BA  2268               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3450  0012BC  C067  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3451  0012C0  C068  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3452  0012C4                     	if	0	;tblptru may be non-zero
  3453  0012C4                     	endif
  3454  0012C4                     	if	0	;tblptru may be non-zero
  3455  0012C4                     	endif
  3456  0012C4  0008               	tblrd		*
  3457  0012C6  CFF5 F078          	movff	tablat,vfpfcnvrt@c
  3458  0012CA  0EBF               	movlw	191
  3459  0012CC  6E67               	movwf	??_vfpfcnvrt^0,c
  3460  0012CE  0EFF               	movlw	255
  3461  0012D0  6E68               	movwf	(??_vfpfcnvrt+1)^0,c
  3462  0012D2  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3463  0012D6  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3464  0012DA  CFDE FFF6          	movff	postinc2,tblptrl
  3465  0012DE  CFDD FFF7          	movff	postdec2,tblptrh
  3466  0012E2                     	if	0	;tblptru may be non-zero
  3467  0012E2                     	endif
  3468  0012E2                     	if	0	;tblptru may be non-zero
  3469  0012E2                     	endif
  3470  0012E2  0008               	tblrd		*
  3471  0012E4  50F5               	movf	tablat,w,c
  3472  0012E6  6E69               	movwf	(??_vfpfcnvrt+2)^0,c
  3473  0012E8  6A6A               	clrf	(??_vfpfcnvrt+3)^0,c
  3474  0012EA  5067               	movf	??_vfpfcnvrt^0,w,c
  3475  0012EC  2669               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3476  0012EE  5068               	movf	(??_vfpfcnvrt+1)^0,w,c
  3477  0012F0  226A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3478  0012F2  506A               	movf	(??_vfpfcnvrt+3)^0,w,c
  3479  0012F4  E106               	bnz	i2u510_40
  3480  0012F6  0E1A               	movlw	26
  3481  0012F8  5C69               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3482  0012FA  B0D8               	btfsc	status,0,c
  3483  0012FC  D002               	goto	i2u510_40
  3484  0012FE  0E01               	movlw	1
  3485  001300  D001               	goto	i2u511_40
  3486  001302                     i2u510_40:
  3487  001302  0E00               	movlw	0
  3488  001304                     i2u511_40:
  3489  001304  6E6F               	movwf	_vfpfcnvrt$1026^0,c
  3490  001306  6A70               	clrf	(_vfpfcnvrt$1026+1)^0,c
  3491  001308  506F               	movf	_vfpfcnvrt$1026^0,w,c
  3492  00130A  1070               	iorwf	(_vfpfcnvrt$1026+1)^0,w,c
  3493                           
  3494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3495                           
  3496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  3497                           
  3498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3499  00130C  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3500  001310  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3501  001314  CFDF F067          	movff	indf2,??_vfpfcnvrt
  3502  001318  0E04               	movlw	4
  3503  00131A  26DE               	addwf	postinc2,f,c
  3504  00131C  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  3505  001320  0E00               	movlw	0
  3506  001322  22DD               	addwfc	postdec2,f,c
  3507  001324  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3508  001328  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3509  00132C  CFDE F071          	movff	postinc2,vfpfcnvrt@f
  3510  001330  CFDE F072          	movff	postinc2,vfpfcnvrt@f+1
  3511  001334  CFDE F073          	movff	postinc2,vfpfcnvrt@f+2
  3512  001338  CFDE F074          	movff	postinc2,vfpfcnvrt@f+3
  3513                           
  3514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3515                           
  3516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  3517  00133C  0E02               	movlw	2
  3518  00133E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3519  001342  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3520  001346  26DE               	addwf	postinc2,f,c
  3521  001348  0E00               	movlw	0
  3522  00134A  22DD               	addwfc	postdec2,f,c
  3523  00134C  D784               	goto	i2l4505
  3524  00134E                     i2l4525:
  3525                           
  3526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  3527  00134E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3528  001352  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3529  001356  CFDE FFF6          	movff	postinc2,tblptrl
  3530  00135A  CFDD FFF7          	movff	postdec2,tblptrh
  3531  00135E                     	if	0	;tblptru may be non-zero
  3532  00135E                     	endif
  3533  00135E                     	if	0	;tblptru may be non-zero
  3534  00135E                     	endif
  3535  00135E  0008               	tblrd		*
  3536  001360  50F5               	movf	tablat,w,c
  3537  001362  0A73               	xorlw	115
  3538  001364  A4D8               	btfss	status,2,c
  3539  001366  D02A               	goto	i2l4533
  3540                           
  3541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  3542  001368  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3543  00136C  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3544  001370  2ADE               	incf	postinc2,f,c
  3545  001372  0E00               	movlw	0
  3546  001374  22DD               	addwfc	postdec2,f,c
  3547                           
  3548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3549  001376  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3550  00137A  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3551  00137E  CFDF F067          	movff	indf2,??_vfpfcnvrt
  3552  001382  0E02               	movlw	2
  3553  001384  26DE               	addwf	postinc2,f,c
  3554  001386  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  3555  00138A  0E00               	movlw	0
  3556  00138C  22DD               	addwfc	postdec2,f,c
  3557  00138E  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3558  001392  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3559  001396  CFDE F06B          	movff	postinc2,vfpfcnvrt@cp
  3560  00139A  CFDD F06C          	movff	postdec2,vfpfcnvrt@cp+1
  3561                           
  3562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  3563  00139E  C061  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3564  0013A2  C062  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3565  0013A6  C06B  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3566  0013AA  C06C  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3567  0013AE  EC4E  F011         	call	_stoa	;wreg free
  3568  0013B2  C00A  F061         	movff	?_stoa,?_vfpfcnvrt
  3569  0013B6  C00B  F062         	movff	?_stoa+1,?_vfpfcnvrt+1
  3570  0013BA  0012               	return	
  3571  0013BC                     i2l4533:
  3572                           
  3573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3574  0013BC  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3575  0013C0  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3576  0013C4  CFDE FFF6          	movff	postinc2,tblptrl
  3577  0013C8  CFDD FFF7          	movff	postdec2,tblptrh
  3578  0013CC                     	if	0	;tblptru may be non-zero
  3579  0013CC                     	endif
  3580  0013CC                     	if	0	;tblptru may be non-zero
  3581  0013CC                     	endif
  3582  0013CC  0008               	tblrd		*
  3583  0013CE  50F5               	movf	tablat,w,c
  3584  0013D0  0A25               	xorlw	37
  3585  0013D2  A4D8               	btfss	status,2,c
  3586  0013D4  D016               	goto	i2l4543
  3587                           
  3588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3589  0013D6  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3590  0013DA  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3591  0013DE  2ADE               	incf	postinc2,f,c
  3592  0013E0  0E00               	movlw	0
  3593  0013E2  22DD               	addwfc	postdec2,f,c
  3594                           
  3595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3596  0013E4  0E00               	movlw	0
  3597  0013E6  6E02               	movwf	(fputc@c+1)^0,c
  3598  0013E8  0E25               	movlw	37
  3599  0013EA  6E01               	movwf	fputc@c^0,c
  3600  0013EC  C061  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3601  0013F0  C062  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3602  0013F4  EC51  F014         	call	_fputc	;wreg free
  3603  0013F8                     i2l4539:
  3604                           
  3605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3606  0013F8  0E00               	movlw	0
  3607  0013FA  6E62               	movwf	(?_vfpfcnvrt+1)^0,c
  3608  0013FC  0E01               	movlw	1
  3609  0013FE  6E61               	movwf	?_vfpfcnvrt^0,c
  3610  001400  0012               	return	
  3611  001402                     i2l4543:
  3612                           
  3613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3614  001402  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3615  001406  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3616  00140A  2ADE               	incf	postinc2,f,c
  3617  00140C  0E00               	movlw	0
  3618  00140E  22DD               	addwfc	postdec2,f,c
  3619                           
  3620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3621  001410  0E00               	movlw	0
  3622  001412  6E62               	movwf	(?_vfpfcnvrt+1)^0,c
  3623  001414  0E00               	movlw	0
  3624  001416  6E61               	movwf	?_vfpfcnvrt^0,c
  3625  001418  0012               	return	
  3626  00141A                     i2l4549:
  3627                           
  3628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3629  00141A  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3630  00141E  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3631  001422  CFDE FFF6          	movff	postinc2,tblptrl
  3632  001426  CFDD FFF7          	movff	postdec2,tblptrh
  3633  00142A                     	if	0	;tblptru may be non-zero
  3634  00142A                     	endif
  3635  00142A                     	if	0	;tblptru may be non-zero
  3636  00142A                     	endif
  3637  00142A  0008               	tblrd		*
  3638  00142C  50F5               	movf	tablat,w,c
  3639  00142E  6E01               	movwf	fputc@c^0,c
  3640  001430  6A02               	clrf	(fputc@c+1)^0,c
  3641  001432  C061  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3642  001436  C062  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3643  00143A  EC51  F014         	call	_fputc	;wreg free
  3644                           
  3645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3646  00143E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3647  001442  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3648  001446  2ADE               	incf	postinc2,f,c
  3649  001448  0E00               	movlw	0
  3650  00144A  22DD               	addwfc	postdec2,f,c
  3651  00144C  D7D5               	goto	i2l4539
  3652  00144E                     __end_of_vfpfcnvrt:
  3653                           	opt callstack 0
  3654                           
  3655 ;; *************** function _strncmp *****************
  3656 ;; Defined at:
  3657 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3660 ;;		 -> vfpfcnvrt@ct(3), 
  3661 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3662 ;;		 -> STR_14(3), 
  3663 ;;  n               2    4[COMRAM] unsigned int 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3666 ;;		 -> STR_14(3), 
  3667 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3668 ;;		 -> vfpfcnvrt@ct(3), 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  2    0[COMRAM] int 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3678 ;;      Params:         6       0       0       0       0       0       0
  3679 ;;      Locals:         4       0       0       0       0       0       0
  3680 ;;      Temps:          1       0       0       0       0       0       0
  3681 ;;      Totals:        11       0       0       0       0       0       0
  3682 ;;Total ram usage:       11 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_vfpfcnvrt
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text22
  3692  002800                     __ptext22:
  3693                           	opt callstack 0
  3694  002800                     _strncmp:
  3695                           	opt callstack 19
  3696                           
  3697                           ;incstack = 0
  3698  002800  C001  F008         	movff	strncmp@_l,strncmp@l
  3699  002804  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3700  002808  C003  F00A         	movff	strncmp@_r,strncmp@r
  3701  00280C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3702  002810  0605               	decf	strncmp@n^0,f,c
  3703  002812  A0D8               	btfss	status,0,c
  3704  002814  0606               	decf	(strncmp@n+1)^0,f,c
  3705  002816  2805               	incf	strncmp@n^0,w,c
  3706  002818  E10F               	bnz	i2l4439
  3707  00281A  2806               	incf	(strncmp@n+1)^0,w,c
  3708  00281C  A4D8               	btfss	status,2,c
  3709  00281E  D00C               	goto	i2l4439
  3710  002820  0E00               	movlw	0
  3711  002822  6E02               	movwf	(?_strncmp+1)^0,c
  3712  002824  0E00               	movlw	0
  3713  002826  6E01               	movwf	?_strncmp^0,c
  3714  002828  0012               	return	
  3715  00282A                     i2l4437:
  3716  00282A  4A08               	infsnz	strncmp@l^0,f,c
  3717  00282C  2A09               	incf	(strncmp@l+1)^0,f,c
  3718  00282E  4A0A               	infsnz	strncmp@r^0,f,c
  3719  002830  2A0B               	incf	(strncmp@r+1)^0,f,c
  3720  002832  0605               	decf	strncmp@n^0,f,c
  3721  002834  A0D8               	btfss	status,0,c
  3722  002836  0606               	decf	(strncmp@n+1)^0,f,c
  3723  002838                     i2l4439:
  3724  002838  C008  FFD9         	movff	strncmp@l,fsr2l
  3725  00283C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3726  002840  50DF               	movf	indf2,w,c
  3727  002842  B4D8               	btfsc	status,2,c
  3728  002844  D01C               	goto	i2u496_40
  3729  002846  C00A  FFF6         	movff	strncmp@r,tblptrl
  3730  00284A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3731  00284E                     	if	0	;tblptru may be non-zero
  3732  00284E                     	endif
  3733  00284E                     	if	0	;tblptru may be non-zero
  3734  00284E                     	endif
  3735  00284E  0008               	tblrd		*
  3736  002850  50F5               	movf	tablat,w,c
  3737  002852  0900               	iorlw	0
  3738  002854  B4D8               	btfsc	status,2,c
  3739  002856  D013               	goto	i2u496_40
  3740  002858  5005               	movf	strncmp@n^0,w,c
  3741  00285A  1006               	iorwf	(strncmp@n+1)^0,w,c
  3742  00285C  B4D8               	btfsc	status,2,c
  3743  00285E  D00F               	goto	i2u496_40
  3744  002860  C008  FFD9         	movff	strncmp@l,fsr2l
  3745  002864  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3746  002868  50DF               	movf	indf2,w,c
  3747  00286A  6E07               	movwf	??_strncmp^0,c
  3748  00286C  C00A  FFF6         	movff	strncmp@r,tblptrl
  3749  002870  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3750  002874                     	if	0	;tblptru may be non-zero
  3751  002874                     	endif
  3752  002874                     	if	0	;tblptru may be non-zero
  3753  002874                     	endif
  3754  002874  0008               	tblrd		*
  3755  002876  50F5               	movf	tablat,w,c
  3756  002878  1807               	xorwf	??_strncmp^0,w,c
  3757  00287A  B4D8               	btfsc	status,2,c
  3758  00287C  D7D6               	goto	i2l4437
  3759  00287E                     i2u496_40:
  3760  00287E  C008  FFD9         	movff	strncmp@l,fsr2l
  3761  002882  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3762  002886  50DF               	movf	indf2,w,c
  3763  002888  6E07               	movwf	??_strncmp^0,c
  3764  00288A  C00A  FFF6         	movff	strncmp@r,tblptrl
  3765  00288E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3766  002892                     	if	0	;tblptru may be non-zero
  3767  002892                     	endif
  3768  002892                     	if	0	;tblptru may be non-zero
  3769  002892                     	endif
  3770  002892  0008               	tblrd		*
  3771  002894  50F5               	movf	tablat,w,c
  3772  002896  5C07               	subwf	??_strncmp^0,w,c
  3773  002898  6E01               	movwf	?_strncmp^0,c
  3774  00289A  6A02               	clrf	(?_strncmp+1)^0,c
  3775  00289C  A0D8               	btfss	status,0,c
  3776  00289E  0602               	decf	(?_strncmp+1)^0,f,c
  3777  0028A0  0012               	return		;funcret
  3778  0028A2                     __end_of_strncmp:
  3779                           	opt callstack 0
  3780                           
  3781 ;; *************** function _stoa *****************
  3782 ;; Defined at:
  3783 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  3786 ;;		 -> sprintf@f(6), 
  3787 ;;  s               2   11[COMRAM] PTR unsigned char 
  3788 ;;		 -> ?_sprintf(2), r(100), 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  nuls            7   14[COMRAM] unsigned char [7]
  3791 ;;  l               2   29[COMRAM] int 
  3792 ;;  p               2   27[COMRAM] int 
  3793 ;;  cp              2   25[COMRAM] PTR unsigned char 
  3794 ;;		 -> ?_sprintf(2), stoa@nuls(7), r(100), 
  3795 ;;  w               2   23[COMRAM] int 
  3796 ;;  i               2   21[COMRAM] int 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2    9[COMRAM] int 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3806 ;;      Params:         4       0       0       0       0       0       0
  3807 ;;      Locals:        17       0       0       0       0       0       0
  3808 ;;      Temps:          1       0       0       0       0       0       0
  3809 ;;      Totals:        22       0       0       0       0       0       0
  3810 ;;Total ram usage:       22 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    2
  3813 ;; This function calls:
  3814 ;;		_fputc
  3815 ;;		_strlen
  3816 ;; This function is called by:
  3817 ;;		_vfpfcnvrt
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text23
  3822  00229C                     __ptext23:
  3823                           	opt callstack 0
  3824  00229C                     _stoa:
  3825                           	opt callstack 17
  3826                           
  3827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  3828                           
  3829                           ;incstack = 0
  3830  00229C  EE21  F07C         	lfsr	2,stoa@F1153
  3831  0022A0  EE10  F00F         	lfsr	1,stoa@nuls
  3832  0022A4  0E06               	movlw	6
  3833  0022A6                     i2u476_41:
  3834  0022A6  CFDB FFE3          	movff	plusw2,plusw1
  3835  0022AA  06E8               	decf	wreg,f,c
  3836  0022AC  E2FC               	bc	i2u476_41
  3837                           
  3838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  3839  0022AE  C00C  F01A         	movff	stoa@s,stoa@cp
  3840  0022B2  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  3841                           
  3842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  3843  0022B6  501A               	movf	stoa@cp^0,w,c
  3844  0022B8  101B               	iorwf	(stoa@cp+1)^0,w,c
  3845  0022BA  A4D8               	btfss	status,2,c
  3846  0022BC  D004               	goto	i2l4355
  3847                           
  3848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  3849  0022BE  0E0F               	movlw	low stoa@nuls
  3850  0022C0  6E1A               	movwf	stoa@cp^0,c
  3851  0022C2  0E00               	movlw	high stoa@nuls
  3852  0022C4  6E1B               	movwf	(stoa@cp+1)^0,c
  3853  0022C6                     i2l4355:
  3854                           
  3855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  3856  0022C6  C01A  F001         	movff	stoa@cp,strlen@s
  3857  0022CA  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  3858  0022CE  ECA7  F018         	call	_strlen	;wreg free
  3859  0022D2  C001  F01E         	movff	?_strlen,stoa@l
  3860  0022D6  C002  F01F         	movff	?_strlen+1,stoa@l+1
  3861                           
  3862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  3863  0022DA  C0E9  F01C         	movff	_prec,stoa@p
  3864  0022DE  C0EA  F01D         	movff	_prec+1,stoa@p+1
  3865                           
  3866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  3867  0022E2  BE1D               	btfsc	(stoa@p+1)^0,7,c
  3868  0022E4  D00E               	goto	i2l409
  3869  0022E6  501E               	movf	stoa@l^0,w,c
  3870  0022E8  5C1C               	subwf	stoa@p^0,w,c
  3871  0022EA  501D               	movf	(stoa@p+1)^0,w,c
  3872  0022EC  0A80               	xorlw	128
  3873  0022EE  6E0E               	movwf	??_stoa^0,c
  3874  0022F0  501F               	movf	(stoa@l+1)^0,w,c
  3875  0022F2  0A80               	xorlw	128
  3876  0022F4  580E               	subwfb	??_stoa^0,w,c
  3877  0022F6  B0D8               	btfsc	status,0,c
  3878  0022F8  D004               	goto	i2l409
  3879  0022FA  C01C  F01E         	movff	stoa@p,stoa@l
  3880  0022FE  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  3881  002302                     i2l409:
  3882                           
  3883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  3884  002302  C01E  F01C         	movff	stoa@l,stoa@p
  3885  002306  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  3886                           
  3887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  3888  00230A  C0E7  F018         	movff	_width,stoa@w
  3889  00230E  C0E8  F019         	movff	_width+1,stoa@w+1
  3890                           
  3891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  3892  002312  0100               	movlb	0	; () banked
  3893  002314  A1EB               	btfss	_flags& (0+255),0,b
  3894  002316  D00D               	goto	i2l4369
  3895  002318  D016               	goto	i2u481_40
  3896  00231A                     i2l4365:
  3897                           
  3898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  3899  00231A  0E00               	movlw	0
  3900  00231C  6E02               	movwf	(fputc@c+1)^0,c
  3901  00231E  0E20               	movlw	32
  3902  002320  6E01               	movwf	fputc@c^0,c
  3903  002322  C00A  F003         	movff	stoa@fp,fputc@fp
  3904  002326  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  3905  00232A  EC51  F014         	call	_fputc	;wreg free
  3906                           
  3907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  3908  00232E  4A1E               	infsnz	stoa@l^0,f,c
  3909  002330  2A1F               	incf	(stoa@l+1)^0,f,c
  3910  002332                     i2l4369:
  3911                           
  3912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  3913  002332  5018               	movf	stoa@w^0,w,c
  3914  002334  5C1E               	subwf	stoa@l^0,w,c
  3915  002336  501F               	movf	(stoa@l+1)^0,w,c
  3916  002338  0A80               	xorlw	128
  3917  00233A  6E0E               	movwf	??_stoa^0,c
  3918  00233C  5019               	movf	(stoa@w+1)^0,w,c
  3919  00233E  0A80               	xorlw	128
  3920  002340  580E               	subwfb	??_stoa^0,w,c
  3921  002342  A0D8               	btfss	status,0,c
  3922  002344  D7EA               	goto	i2l4365
  3923  002346                     i2u481_40:
  3924                           
  3925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  3926  002346  0E00               	movlw	0
  3927  002348  6E17               	movwf	(stoa@i+1)^0,c
  3928  00234A  0E00               	movlw	0
  3929  00234C  6E16               	movwf	stoa@i^0,c
  3930                           
  3931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  3932  00234E  D013               	goto	i2l4379
  3933  002350                     i2l4373:
  3934                           
  3935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  3936  002350  C01A  FFD9         	movff	stoa@cp,fsr2l
  3937  002354  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  3938  002358  50DF               	movf	indf2,w,c
  3939  00235A  6E0E               	movwf	??_stoa^0,c
  3940  00235C  500E               	movf	??_stoa^0,w,c
  3941  00235E  6E01               	movwf	fputc@c^0,c
  3942  002360  6A02               	clrf	(fputc@c+1)^0,c
  3943  002362  C00A  F003         	movff	stoa@fp,fputc@fp
  3944  002366  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  3945  00236A  EC51  F014         	call	_fputc	;wreg free
  3946                           
  3947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  3948  00236E  4A1A               	infsnz	stoa@cp^0,f,c
  3949  002370  2A1B               	incf	(stoa@cp+1)^0,f,c
  3950                           
  3951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  3952  002372  4A16               	infsnz	stoa@i^0,f,c
  3953  002374  2A17               	incf	(stoa@i+1)^0,f,c
  3954  002376                     i2l4379:
  3955                           
  3956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  3957  002376  501C               	movf	stoa@p^0,w,c
  3958  002378  5C16               	subwf	stoa@i^0,w,c
  3959  00237A  5017               	movf	(stoa@i+1)^0,w,c
  3960  00237C  0A80               	xorlw	128
  3961  00237E  6E0E               	movwf	??_stoa^0,c
  3962  002380  501D               	movf	(stoa@p+1)^0,w,c
  3963  002382  0A80               	xorlw	128
  3964  002384  580E               	subwfb	??_stoa^0,w,c
  3965  002386  A0D8               	btfss	status,0,c
  3966  002388  D7E3               	goto	i2l4373
  3967                           
  3968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  3969  00238A  0100               	movlb	0	; () banked
  3970  00238C  B1EB               	btfsc	_flags& (0+255),0,b
  3971  00238E  D00D               	goto	i2l4387
  3972  002390  D016               	goto	i2u484_40
  3973  002392                     i2l4383:
  3974                           
  3975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  3976  002392  0E00               	movlw	0
  3977  002394  6E02               	movwf	(fputc@c+1)^0,c
  3978  002396  0E20               	movlw	32
  3979  002398  6E01               	movwf	fputc@c^0,c
  3980  00239A  C00A  F003         	movff	stoa@fp,fputc@fp
  3981  00239E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  3982  0023A2  EC51  F014         	call	_fputc	;wreg free
  3983                           
  3984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  3985  0023A6  4A1E               	infsnz	stoa@l^0,f,c
  3986  0023A8  2A1F               	incf	(stoa@l+1)^0,f,c
  3987  0023AA                     i2l4387:
  3988                           
  3989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  3990  0023AA  5018               	movf	stoa@w^0,w,c
  3991  0023AC  5C1E               	subwf	stoa@l^0,w,c
  3992  0023AE  501F               	movf	(stoa@l+1)^0,w,c
  3993  0023B0  0A80               	xorlw	128
  3994  0023B2  6E0E               	movwf	??_stoa^0,c
  3995  0023B4  5019               	movf	(stoa@w+1)^0,w,c
  3996  0023B6  0A80               	xorlw	128
  3997  0023B8  580E               	subwfb	??_stoa^0,w,c
  3998  0023BA  A0D8               	btfss	status,0,c
  3999  0023BC  D7EA               	goto	i2l4383
  4000  0023BE                     i2u484_40:
  4001                           
  4002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  4003                           
  4004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 586:     }
  4005  0023BE  C01E  F00A         	movff	stoa@l,?_stoa
  4006  0023C2  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  4007  0023C6  0012               	return		;funcret
  4008  0023C8                     __end_of_stoa:
  4009                           	opt callstack 0
  4010                           
  4011 ;; *************** function _efgtoa *****************
  4012 ;; Defined at:
  4013 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  4016 ;;		 -> sprintf@f(6), 
  4017 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  4018 ;;  c               1   90[COMRAM] unsigned char 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  u               4   52[BANK0 ] unsigned char 
  4021 ;;  g               4   44[BANK0 ] unsigned char 
  4022 ;;  l               4   38[BANK0 ] unsigned char 
  4023 ;;  h               4   34[BANK0 ] unsigned char 
  4024 ;;  ou              4    0[BANK0 ] unsigned char 
  4025 ;;  n               2   50[BANK0 ] int 
  4026 ;;  e               2   48[BANK0 ] int 
  4027 ;;  i               2   42[BANK0 ] int 
  4028 ;;  w               2   31[BANK0 ] int 
  4029 ;;  p               2   28[BANK0 ] int 
  4030 ;;  sign            2   26[BANK0 ] int 
  4031 ;;  d               2   24[BANK0 ] int 
  4032 ;;  ne              2   22[BANK0 ] int 
  4033 ;;  m               2   20[BANK0 ] int 
  4034 ;;  pp              2   18[BANK0 ] int 
  4035 ;;  t               2   16[BANK0 ] int 
  4036 ;;  mode            1   33[BANK0 ] unsigned char 
  4037 ;;  nmode           1   30[BANK0 ] unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  2   84[COMRAM] int 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4047 ;;      Params:         7       0       0       0       0       0       0
  4048 ;;      Locals:         0      56       0       0       0       0       0
  4049 ;;      Temps:          5       0       0       0       0       0       0
  4050 ;;      Totals:        12      56       0       0       0       0       0
  4051 ;;Total ram usage:       68 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    4
  4054 ;; This function calls:
  4055 ;;		___awdiv
  4056 ;;		___fladd
  4057 ;;		___fldiv
  4058 ;;		___fleq
  4059 ;;		___flge
  4060 ;;		___flmul
  4061 ;;		___flneg
  4062 ;;		___flsub
  4063 ;;		___fltol
  4064 ;;		___fpclassifyf
  4065 ;;		_floorf
  4066 ;;		_isupper
  4067 ;;		_pad
  4068 ;;		_strcpy
  4069 ;;		_tolower
  4070 ;;		i2___awmod
  4071 ;; This function is called by:
  4072 ;;		_vfpfcnvrt
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text24
  4077  0006C0                     __ptext24:
  4078                           	opt callstack 0
  4079  0006C0                     _efgtoa:
  4080                           	opt callstack 15
  4081                           
  4082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  4083                           
  4084                           ;incstack = 0
  4085  0006C0  0E00               	movlw	0
  4086  0006C2  0100               	movlb	0	; () banked
  4087  0006C4  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4088  0006C6  0E00               	movlw	0
  4089  0006C8  6F9A               	movwf	efgtoa@sign& (0+255),b
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  4093  0006CA  C057  F0AC         	movff	efgtoa@f,efgtoa@g
  4094  0006CE  C058  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  4095  0006D2  C059  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  4096  0006D6  C05A  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  4100  0006DA  AFAF               	btfss	(efgtoa@g+3)& (0+255),7,b
  4101  0006DC  D016               	goto	i2l4059
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  4105  0006DE  0E00               	movlw	0
  4106  0006E0  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4107  0006E2  0E01               	movlw	1
  4108  0006E4  6F9A               	movwf	efgtoa@sign& (0+255),b
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  4112  0006E6  C0AC  F001         	movff	efgtoa@g,___flneg@f1
  4113  0006EA  C0AD  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4114  0006EE  C0AE  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4115  0006F2  C0AF  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4116  0006F6  EC63  F018         	call	___flneg	;wreg free
  4117  0006FA  C001  F0AC         	movff	?___flneg,efgtoa@g
  4118  0006FE  C002  F0AD         	movff	?___flneg+1,efgtoa@g+1
  4119  000702  C003  F0AE         	movff	?___flneg+2,efgtoa@g+2
  4120  000706  C004  F0AF         	movff	?___flneg+3,efgtoa@g+3
  4121  00070A                     i2l4059:
  4122                           
  4123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  4124  00070A  0E00               	movlw	0
  4125  00070C  0100               	movlb	0	; () banked
  4126  00070E  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  4127  000710  0E00               	movlw	0
  4128  000712  6FB2               	movwf	efgtoa@n& (0+255),b
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  4132  000714  C0E7  F09F         	movff	_width,efgtoa@w
  4133  000718  C0E8  F0A0         	movff	_width+1,efgtoa@w+1
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  4137  00071C  519A               	movf	efgtoa@sign& (0+255),w,b
  4138  00071E  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4139  000720  A4D8               	btfss	status,2,c
  4140  000722  D002               	goto	i2u426_40
  4141                           
  4142                           ; BSR set to: 0
  4143  000724  A5EB               	btfss	_flags& (0+255),2,b
  4144  000726  D013               	goto	i2l4079
  4145  000728                     i2u426_40:
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  4149  000728  519A               	movf	efgtoa@sign& (0+255),w,b
  4150  00072A  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4151  00072C  A4D8               	btfss	status,2,c
  4152  00072E  D004               	goto	i2l4071
  4153                           
  4154                           ; BSR set to: 0
  4155  000730  0E00               	movlw	0
  4156  000732  6F85               	movwf	(_efgtoa$985+1)& (0+255),b
  4157  000734  0E2B               	movlw	43
  4158  000736  D003               	goto	L1
  4159  000738                     i2l4071:
  4160                           
  4161                           ; BSR set to: 0
  4162  000738  0E00               	movlw	0
  4163  00073A  6F85               	movwf	(_efgtoa$985+1)& (0+255),b
  4164  00073C  0E2D               	movlw	45
  4165  00073E                     L1:
  4166  00073E  6F84               	movwf	_efgtoa$985& (0+255),b
  4167                           
  4168                           ; BSR set to: 0
  4169  000740  C084  F122         	movff	_efgtoa$985,_dbuf
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  4173  000744  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4174  000746  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  4178  000748  079F               	decf	efgtoa@w& (0+255),f,b
  4179  00074A  A0D8               	btfss	status,0,c
  4180  00074C  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4181  00074E                     i2l4079:
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4185  00074E  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  4186  000752  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4187  000756  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4188  00075A  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4189  00075E  EC3D  F013         	call	___fpclassifyf	;wreg free
  4190  000762  0401               	decf	?___fpclassifyf^0,w,c
  4191  000764  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4192  000766  A4D8               	btfss	status,2,c
  4193  000768  D04C               	goto	i2l4097
  4194  00076A  0EBF               	movlw	191
  4195  00076C  6E5C               	movwf	??_efgtoa^0,c
  4196  00076E  0EFF               	movlw	255
  4197  000770  6E5D               	movwf	(??_efgtoa+1)^0,c
  4198  000772  505B               	movf	efgtoa@c^0,w,c
  4199  000774  6E5E               	movwf	(??_efgtoa+2)^0,c
  4200  000776  6A5F               	clrf	(??_efgtoa+3)^0,c
  4201  000778  505C               	movf	??_efgtoa^0,w,c
  4202  00077A  265E               	addwf	(??_efgtoa+2)^0,f,c
  4203  00077C  505D               	movf	(??_efgtoa+1)^0,w,c
  4204  00077E  225F               	addwfc	(??_efgtoa+3)^0,f,c
  4205  000780  505F               	movf	(??_efgtoa+3)^0,w,c
  4206  000782  E106               	bnz	i2u429_40
  4207  000784  0E1A               	movlw	26
  4208  000786  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  4209  000788  B0D8               	btfsc	status,0,c
  4210  00078A  D002               	goto	i2u429_40
  4211  00078C  0E01               	movlw	1
  4212  00078E  D001               	goto	i2u430_40
  4213  000790                     i2u429_40:
  4214  000790  0E00               	movlw	0
  4215  000792                     i2u430_40:
  4216  000792  0100               	movlb	0	; () banked
  4217  000794  6F86               	movwf	_efgtoa$986& (0+255),b
  4218  000796  6B87               	clrf	(_efgtoa$986+1)& (0+255),b
  4219                           
  4220                           ; BSR set to: 0
  4221  000798  5186               	movf	_efgtoa$986& (0+255),w,b
  4222  00079A  1187               	iorwf	(_efgtoa$986+1)& (0+255),w,b
  4223  00079C  B4D8               	btfsc	status,2,c
  4224  00079E  D00D               	goto	i2l4089
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  4228  0007A0  0E22               	movlw	low _dbuf
  4229  0007A2  25B2               	addwf	efgtoa@n& (0+255),w,b
  4230  0007A4  6E01               	movwf	strcpy@dest^0,c
  4231  0007A6  0E01               	movlw	high _dbuf
  4232  0007A8  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4233  0007AA  6E02               	movwf	(strcpy@dest+1)^0,c
  4234  0007AC  0EAC               	movlw	low STR_4
  4235  0007AE  6E03               	movwf	strcpy@src^0,c
  4236  0007B0  0E06               	movlw	high STR_4
  4237  0007B2  6E04               	movwf	(strcpy@src+1)^0,c
  4238  0007B4  EC1B  F017         	call	_strcpy	;wreg free
  4239                           
  4240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  4241  0007B8  D00C               	goto	i2l4091
  4242  0007BA                     i2l4089:
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  4246  0007BA  0E22               	movlw	low _dbuf
  4247  0007BC  25B2               	addwf	efgtoa@n& (0+255),w,b
  4248  0007BE  6E01               	movwf	strcpy@dest^0,c
  4249  0007C0  0E01               	movlw	high _dbuf
  4250  0007C2  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4251  0007C4  6E02               	movwf	(strcpy@dest+1)^0,c
  4252  0007C6  0EB4               	movlw	low STR_5
  4253  0007C8  6E03               	movwf	strcpy@src^0,c
  4254  0007CA  0E06               	movlw	high STR_5
  4255  0007CC  6E04               	movwf	(strcpy@src+1)^0,c
  4256  0007CE  EC1B  F017         	call	_strcpy	;wreg free
  4257  0007D2                     i2l4091:
  4258                           
  4259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4260  0007D2  0100               	movlb	0	; () banked
  4261  0007D4  0EFD               	movlw	253
  4262  0007D6  279F               	addwf	efgtoa@w& (0+255),f,b
  4263  0007D8  0EFF               	movlw	255
  4264  0007DA  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4265  0007DC                     i2l4093:
  4266                           
  4267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  4268  0007DC  C055  F011         	movff	efgtoa@fp,pad@fp
  4269  0007E0  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  4270  0007E4  0E22               	movlw	low _dbuf
  4271  0007E6  6E13               	movwf	pad@buf^0,c
  4272  0007E8  0E01               	movlw	high _dbuf
  4273  0007EA  6E14               	movwf	(pad@buf+1)^0,c
  4274  0007EC  C09F  F015         	movff	efgtoa@w,pad@p
  4275  0007F0  C0A0  F016         	movff	efgtoa@w+1,pad@p+1
  4276  0007F4  ECA1  F014         	call	_pad	;wreg free
  4277  0007F8  C011  F055         	movff	?_pad,?_efgtoa
  4278  0007FC  C012  F056         	movff	?_pad+1,?_efgtoa+1
  4279  000800  0012               	return	
  4280  000802                     i2l4097:
  4281                           
  4282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4283  000802  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  4284  000806  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4285  00080A  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4286  00080E  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4287  000812  EC3D  F013         	call	___fpclassifyf	;wreg free
  4288  000816  5001               	movf	?___fpclassifyf^0,w,c
  4289  000818  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4290  00081A  A4D8               	btfss	status,2,c
  4291  00081C  D035               	goto	i2l4115
  4292  00081E  0EBF               	movlw	191
  4293  000820  6E5C               	movwf	??_efgtoa^0,c
  4294  000822  0EFF               	movlw	255
  4295  000824  6E5D               	movwf	(??_efgtoa+1)^0,c
  4296  000826  505B               	movf	efgtoa@c^0,w,c
  4297  000828  6E5E               	movwf	(??_efgtoa+2)^0,c
  4298  00082A  6A5F               	clrf	(??_efgtoa+3)^0,c
  4299  00082C  505C               	movf	??_efgtoa^0,w,c
  4300  00082E  265E               	addwf	(??_efgtoa+2)^0,f,c
  4301  000830  505D               	movf	(??_efgtoa+1)^0,w,c
  4302  000832  225F               	addwfc	(??_efgtoa+3)^0,f,c
  4303  000834  505F               	movf	(??_efgtoa+3)^0,w,c
  4304  000836  E106               	bnz	i2u433_40
  4305  000838  0E1A               	movlw	26
  4306  00083A  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  4307  00083C  B0D8               	btfsc	status,0,c
  4308  00083E  D002               	goto	i2u433_40
  4309  000840  0E01               	movlw	1
  4310  000842  D001               	goto	i2u434_40
  4311  000844                     i2u433_40:
  4312  000844  0E00               	movlw	0
  4313  000846                     i2u434_40:
  4314  000846  0100               	movlb	0	; () banked
  4315  000848  6F88               	movwf	_efgtoa$991& (0+255),b
  4316  00084A  6B89               	clrf	(_efgtoa$991+1)& (0+255),b
  4317                           
  4318                           ; BSR set to: 0
  4319  00084C  5188               	movf	_efgtoa$991& (0+255),w,b
  4320  00084E  1189               	iorwf	(_efgtoa$991+1)& (0+255),w,b
  4321  000850  B4D8               	btfsc	status,2,c
  4322  000852  D00D               	goto	i2l4107
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4326  000854  0E22               	movlw	low _dbuf
  4327  000856  25B2               	addwf	efgtoa@n& (0+255),w,b
  4328  000858  6E01               	movwf	strcpy@dest^0,c
  4329  00085A  0E01               	movlw	high _dbuf
  4330  00085C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4331  00085E  6E02               	movwf	(strcpy@dest+1)^0,c
  4332  000860  0EB0               	movlw	low STR_8
  4333  000862  6E03               	movwf	strcpy@src^0,c
  4334  000864  0E06               	movlw	high STR_8
  4335  000866  6E04               	movwf	(strcpy@src+1)^0,c
  4336  000868  EC1B  F017         	call	_strcpy	;wreg free
  4337                           
  4338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4339  00086C  D7B2               	goto	i2l4091
  4340  00086E                     i2l4107:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4344  00086E  0E22               	movlw	low _dbuf
  4345  000870  25B2               	addwf	efgtoa@n& (0+255),w,b
  4346  000872  6E01               	movwf	strcpy@dest^0,c
  4347  000874  0E01               	movlw	high _dbuf
  4348  000876  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4349  000878  6E02               	movwf	(strcpy@dest+1)^0,c
  4350  00087A  0EB8               	movlw	low STR_9
  4351  00087C  6E03               	movwf	strcpy@src^0,c
  4352  00087E  0E06               	movlw	high STR_9
  4353  000880  6E04               	movwf	(strcpy@src+1)^0,c
  4354  000882  EC1B  F017         	call	_strcpy	;wreg free
  4355  000886  D7A5               	goto	i2l4091
  4356  000888                     i2l4115:
  4357                           
  4358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4359  000888  0E00               	movlw	0
  4360  00088A  0100               	movlb	0	; () banked
  4361  00088C  6FB4               	movwf	efgtoa@u& (0+255),b
  4362  00088E  0E00               	movlw	0
  4363  000890  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  4364  000892  0E80               	movlw	128
  4365  000894  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  4366  000896  0E3F               	movlw	63
  4367  000898  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  4368                           
  4369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4370  00089A  0E00               	movlw	0
  4371  00089C  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  4372  00089E  0E00               	movlw	0
  4373  0008A0  6FB0               	movwf	efgtoa@e& (0+255),b
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4377  0008A2  C0AC  F001         	movff	efgtoa@g,___fleq@ff1
  4378  0008A6  C0AD  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4379  0008AA  C0AE  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4380  0008AE  C0AF  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4381  0008B2  0E00               	movlw	0
  4382  0008B4  6E05               	movwf	___fleq@ff2^0,c
  4383  0008B6  0E00               	movlw	0
  4384  0008B8  6E06               	movwf	(___fleq@ff2+1)^0,c
  4385  0008BA  0E00               	movlw	0
  4386  0008BC  6E07               	movwf	(___fleq@ff2+2)^0,c
  4387  0008BE  0E00               	movlw	0
  4388  0008C0  6E08               	movwf	(___fleq@ff2+3)^0,c
  4389  0008C2  ECEE  F014         	call	___fleq	;wreg free
  4390  0008C6  A0D8               	btfss	status,0,c
  4391  0008C8  D01E               	goto	i2l4125
  4392  0008CA  D076               	goto	i2u438_40
  4393  0008CC                     i2l4121:
  4394                           
  4395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4396  0008CC  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  4397  0008D0  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  4398  0008D4  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  4399  0008D8  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  4400  0008DC  0E00               	movlw	0
  4401  0008DE  6E13               	movwf	___flmul@a^0,c
  4402  0008E0  0E00               	movlw	0
  4403  0008E2  6E14               	movwf	(___flmul@a+1)^0,c
  4404  0008E4  0E20               	movlw	32
  4405  0008E6  6E15               	movwf	(___flmul@a+2)^0,c
  4406  0008E8  0E41               	movlw	65
  4407  0008EA  6E16               	movwf	(___flmul@a+3)^0,c
  4408  0008EC  EC27  F00A         	call	___flmul	;wreg free
  4409  0008F0  C00F  F0B4         	movff	?___flmul,efgtoa@u
  4410  0008F4  C010  F0B5         	movff	?___flmul+1,efgtoa@u+1
  4411  0008F8  C011  F0B6         	movff	?___flmul+2,efgtoa@u+2
  4412  0008FC  C012  F0B7         	movff	?___flmul+3,efgtoa@u+3
  4413                           
  4414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4415  000900  0100               	movlb	0	; () banked
  4416  000902  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  4417  000904  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4418  000906                     i2l4125:
  4419                           
  4420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4421  000906  C0AC  F028         	movff	efgtoa@g,___flge@ff1
  4422  00090A  C0AD  F029         	movff	efgtoa@g+1,___flge@ff1+1
  4423  00090E  C0AE  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  4424  000912  C0AF  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  4425  000916  0E00               	movlw	0
  4426  000918  6E13               	movwf	___flmul@a^0,c
  4427  00091A  0E00               	movlw	0
  4428  00091C  6E14               	movwf	(___flmul@a+1)^0,c
  4429  00091E  0E20               	movlw	32
  4430  000920  6E15               	movwf	(___flmul@a+2)^0,c
  4431  000922  0E41               	movlw	65
  4432  000924  6E16               	movwf	(___flmul@a+3)^0,c
  4433  000926  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  4434  00092A  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  4435  00092E  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  4436  000932  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  4437  000936  EC27  F00A         	call	___flmul	;wreg free
  4438  00093A  C00F  F02C         	movff	?___flmul,___flge@ff2
  4439  00093E  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4440  000942  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4441  000946  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4442  00094A  ECD5  F012         	call	___flge	;wreg free
  4443  00094E  A0D8               	btfss	status,0,c
  4444  000950  D01F               	goto	i2l4131
  4445  000952  D7BC               	goto	i2l4121
  4446  000954                     i2l4127:
  4447                           
  4448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4449  000954  C0B4  F028         	movff	efgtoa@u,___fldiv@b
  4450  000958  C0B5  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4451  00095C  C0B6  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4452  000960  C0B7  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4453  000964  0E00               	movlw	0
  4454  000966  6E2C               	movwf	___fldiv@a^0,c
  4455  000968  0E00               	movlw	0
  4456  00096A  6E2D               	movwf	(___fldiv@a+1)^0,c
  4457  00096C  0E20               	movlw	32
  4458  00096E  6E2E               	movwf	(___fldiv@a+2)^0,c
  4459  000970  0E41               	movlw	65
  4460  000972  6E2F               	movwf	(___fldiv@a+3)^0,c
  4461  000974  EC56  F00D         	call	___fldiv	;wreg free
  4462  000978  C028  F0B4         	movff	?___fldiv,efgtoa@u
  4463  00097C  C029  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4464  000980  C02A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4465  000984  C02B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4466                           
  4467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4468  000988  0100               	movlb	0	; () banked
  4469  00098A  07B0               	decf	efgtoa@e& (0+255),f,b
  4470  00098C  A0D8               	btfss	status,0,c
  4471  00098E  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  4472  000990                     i2l4131:
  4473                           
  4474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4475  000990  C0AC  F028         	movff	efgtoa@g,___flge@ff1
  4476  000994  C0AD  F029         	movff	efgtoa@g+1,___flge@ff1+1
  4477  000998  C0AE  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  4478  00099C  C0AF  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  4479  0009A0  C0B4  F02C         	movff	efgtoa@u,___flge@ff2
  4480  0009A4  C0B5  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  4481  0009A8  C0B6  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  4482  0009AC  C0B7  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  4483  0009B0  ECD5  F012         	call	___flge	;wreg free
  4484  0009B4  A0D8               	btfss	status,0,c
  4485  0009B6  D7CE               	goto	i2l4127
  4486  0009B8                     i2u438_40:
  4487                           
  4488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4489  0009B8  C05B  F007         	movff	efgtoa@c,tolower@c
  4490  0009BC  6A08               	clrf	(tolower@c+1)^0,c
  4491  0009BE  EC44  F017         	call	_tolower	;wreg free
  4492  0009C2  5007               	movf	?_tolower^0,w,c
  4493  0009C4  0100               	movlb	0	; () banked
  4494  0009C6  6FA1               	movwf	efgtoa@mode& (0+255),b
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4498  0009C8  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4502  0009CC  0E67               	movlw	103
  4503  0009CE  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4504  0009D0  A4D8               	btfss	status,2,c
  4505  0009D2  D019               	goto	i2l4147
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4509  0009D4  51E9               	movf	_prec& (0+255),w,b
  4510  0009D6  11EA               	iorwf	(_prec+1)& (0+255),w,b
  4511  0009D8  A4D8               	btfss	status,2,c
  4512  0009DA  D004               	goto	i2l4143
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4516  0009DC  0E00               	movlw	0
  4517  0009DE  6FEA               	movwf	(_prec+1)& (0+255),b
  4518  0009E0  0E01               	movlw	1
  4519  0009E2  6FE9               	movwf	_prec& (0+255),b
  4520  0009E4                     i2l4143:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4524  0009E4  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  4525  0009E6  D005               	goto	i2u441_40
  4526  0009E8  51EA               	movf	(_prec+1)& (0+255),w,b
  4527  0009EA  E108               	bnz	i2l345
  4528  0009EC  05E9               	decf	_prec& (0+255),w,b
  4529  0009EE  B0D8               	btfsc	status,0,c
  4530  0009F0  D005               	goto	i2l345
  4531  0009F2                     i2u441_40:
  4532                           
  4533                           ; BSR set to: 0
  4534  0009F2  0E00               	movlw	0
  4535  0009F4  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  4536  0009F6  0E06               	movlw	6
  4537  0009F8  6F9C               	movwf	efgtoa@p& (0+255),b
  4538  0009FA  D008               	goto	i2l4153
  4539  0009FC                     i2l345:
  4540                           
  4541                           ; BSR set to: 0
  4542  0009FC  C0E9  F09C         	movff	_prec,efgtoa@p
  4543  000A00  C0EA  F09D         	movff	_prec+1,efgtoa@p+1
  4544  000A04  D003               	goto	i2l4153
  4545  000A06                     i2l4147:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4549  000A06  AFEA               	btfss	(_prec+1)& (0+255),7,b
  4550  000A08  D7F9               	goto	i2l345
  4551  000A0A  D7F3               	goto	i2u441_40
  4552  000A0C                     i2l4153:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4556  000A0C  0E67               	movlw	103
  4557  000A0E  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4558  000A10  A4D8               	btfss	status,2,c
  4559  000A12  D022               	goto	i2l4163
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4563  000A14  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  4564  000A16  D006               	goto	i2u444_40
  4565  000A18  0EFC               	movlw	252
  4566  000A1A  5DB0               	subwf	efgtoa@e& (0+255),w,b
  4567  000A1C  0EFF               	movlw	255
  4568  000A1E  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4569  000A20  A0D8               	btfss	status,0,c
  4570  000A22  D018               	goto	i2l4161
  4571  000A24                     i2u444_40:
  4572                           
  4573                           ; BSR set to: 0
  4574  000A24  0EFF               	movlw	255
  4575  000A26  6E5C               	movwf	??_efgtoa^0,c
  4576  000A28  0EFF               	movlw	255
  4577  000A2A  6E5D               	movwf	(??_efgtoa+1)^0,c
  4578  000A2C  C09C  F05E         	movff	efgtoa@p,??_efgtoa+2
  4579  000A30  C09D  F05F         	movff	efgtoa@p+1,??_efgtoa+3
  4580  000A34  505C               	movf	??_efgtoa^0,w,c
  4581  000A36  265E               	addwf	(??_efgtoa+2)^0,f,c
  4582  000A38  505D               	movf	(??_efgtoa+1)^0,w,c
  4583  000A3A  225F               	addwfc	(??_efgtoa+3)^0,f,c
  4584  000A3C  51B0               	movf	efgtoa@e& (0+255),w,b
  4585  000A3E  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  4586  000A40  505F               	movf	(??_efgtoa+3)^0,w,c
  4587  000A42  0A80               	xorlw	128
  4588  000A44  6E60               	movwf	(??_efgtoa+4)^0,c
  4589  000A46  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  4590  000A48  0A80               	xorlw	128
  4591  000A4A  5860               	subwfb	(??_efgtoa+4)^0,w,c
  4592  000A4C  A0D8               	btfss	status,0,c
  4593  000A4E  D002               	goto	i2l4161
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4597  000A50  0E66               	movlw	102
  4598  000A52  D001               	goto	L2
  4599  000A54                     i2l4161:
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4603  000A54  0E65               	movlw	101
  4604  000A56                     L2:
  4605  000A56  6F9E               	movwf	efgtoa@nmode& (0+255),b
  4606  000A58                     i2l4163:
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4610  000A58  C09C  F094         	movff	efgtoa@p,efgtoa@m
  4611  000A5C  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4615  000A60  0E67               	movlw	103
  4616  000A62  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4617  000A64  A4D8               	btfss	status,2,c
  4618  000A66  D005               	goto	i2u448_40
  4619                           
  4620                           ; BSR set to: 0
  4621  000A68  0E66               	movlw	102
  4622  000A6A  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4623  000A6C  B4D8               	btfsc	status,2,c
  4624                           
  4625                           ; BSR set to: 0
  4626  000A6E  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  4627  000A70  D002               	goto	i2l4173
  4628  000A72                     i2u448_40:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4632  000A72  4B94               	infsnz	efgtoa@m& (0+255),f,b
  4633  000A74  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  4634  000A76                     i2l4173:
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4638  000A76  0E66               	movlw	102
  4639  000A78  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4640  000A7A  A4D8               	btfss	status,2,c
  4641  000A7C  D016               	goto	i2l4183
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4645  000A7E  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  4646  000A80  D00C               	goto	i2l4179
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4650  000A82  0E00               	movlw	0
  4651  000A84  6FB4               	movwf	efgtoa@u& (0+255),b
  4652  000A86  0E00               	movlw	0
  4653  000A88  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  4654  000A8A  0E80               	movlw	128
  4655  000A8C  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  4656  000A8E  0E3F               	movlw	63
  4657  000A90  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  4658                           
  4659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4660  000A92  0E00               	movlw	0
  4661  000A94  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  4662  000A96  0E00               	movlw	0
  4663  000A98  6FB0               	movwf	efgtoa@e& (0+255),b
  4664  000A9A                     i2l4179:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4668  000A9A  0E67               	movlw	103
  4669  000A9C  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4670  000A9E  B4D8               	btfsc	status,2,c
  4671  000AA0  D004               	goto	i2l4183
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4675  000AA2  51B0               	movf	efgtoa@e& (0+255),w,b
  4676  000AA4  2794               	addwf	efgtoa@m& (0+255),f,b
  4677  000AA6  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  4678  000AA8  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4679  000AAA                     i2l4183:
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4683  000AAA  0E00               	movlw	0
  4684  000AAC  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4685  000AAE  0E00               	movlw	0
  4686  000AB0  6FAA               	movwf	efgtoa@i& (0+255),b
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4690  000AB2  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  4691  000AB6  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  4692  000ABA  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  4693  000ABE  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4697  000AC2  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  4698  000AC6  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  4699  000ACA  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  4700  000ACE  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  4701                           
  4702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4703  000AD2  D07B               	goto	i2l4197
  4704  000AD4                     i2l4189:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4708  000AD4  C0A2  F028         	movff	efgtoa@h,___fldiv@b
  4709  000AD8  C0A3  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4710  000ADC  C0A4  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4711  000AE0  C0A5  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4712  000AE4  C0B4  F02C         	movff	efgtoa@u,___fldiv@a
  4713  000AE8  C0B5  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4714  000AEC  C0B6  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4715  000AF0  C0B7  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4716  000AF4  EC56  F00D         	call	___fldiv	;wreg free
  4717  000AF8  C028  F041         	movff	?___fldiv,floorf@x
  4718  000AFC  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4719  000B00  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4720  000B04  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4721  000B08  EC9A  F00E         	call	_floorf	;wreg free
  4722  000B0C  C041  F0A6         	movff	?_floorf,efgtoa@l
  4723  000B10  C042  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4724  000B14  C043  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4725  000B18  C044  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4726                           
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4728  000B1C  C0A6  F001         	movff	efgtoa@l,___fltol@f1
  4729  000B20  C0A7  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4730  000B24  C0A8  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4731  000B28  C0A9  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4732  000B2C  ECA3  F013         	call	___fltol	;wreg free
  4733  000B30  C001  F098         	movff	?___fltol,efgtoa@d
  4734  000B34  C002  F099         	movff	?___fltol+1,efgtoa@d+1
  4735                           
  4736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4737  000B38  C0A2  F028         	movff	efgtoa@h,___flsub@b
  4738  000B3C  C0A3  F029         	movff	efgtoa@h+1,___flsub@b+1
  4739  000B40  C0A4  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4740  000B44  C0A5  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4741  000B48  C0B4  F013         	movff	efgtoa@u,___flmul@a
  4742  000B4C  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  4743  000B50  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  4744  000B54  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  4745  000B58  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  4746  000B5C  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  4747  000B60  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  4748  000B64  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  4749  000B68  EC27  F00A         	call	___flmul	;wreg free
  4750  000B6C  C00F  F02C         	movff	?___flmul,___flsub@a
  4751  000B70  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4752  000B74  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4753  000B78  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4754  000B7C  EC8E  F017         	call	___flsub	;wreg free
  4755  000B80  C028  F0A2         	movff	?___flsub,efgtoa@h
  4756  000B84  C029  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4757  000B88  C02A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4758  000B8C  C02B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4759                           
  4760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4761  000B90  C0B4  F028         	movff	efgtoa@u,___fldiv@b
  4762  000B94  C0B5  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4763  000B98  C0B6  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4764  000B9C  C0B7  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4765  000BA0  0E00               	movlw	0
  4766  000BA2  6E2C               	movwf	___fldiv@a^0,c
  4767  000BA4  0E00               	movlw	0
  4768  000BA6  6E2D               	movwf	(___fldiv@a+1)^0,c
  4769  000BA8  0E20               	movlw	32
  4770  000BAA  6E2E               	movwf	(___fldiv@a+2)^0,c
  4771  000BAC  0E41               	movlw	65
  4772  000BAE  6E2F               	movwf	(___fldiv@a+3)^0,c
  4773  000BB0  EC56  F00D         	call	___fldiv	;wreg free
  4774  000BB4  C028  F0B4         	movff	?___fldiv,efgtoa@u
  4775  000BB8  C029  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4776  000BBC  C02A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4777  000BC0  C02B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4778                           
  4779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4780  000BC4  0100               	movlb	0	; () banked
  4781  000BC6  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4782  000BC8  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4783  000BCA                     i2l4197:
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4787  000BCA  5194               	movf	efgtoa@m& (0+255),w,b
  4788  000BCC  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4789  000BCE  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4790  000BD0  0A80               	xorlw	128
  4791  000BD2  6E5C               	movwf	??_efgtoa^0,c
  4792  000BD4  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4793  000BD6  0A80               	xorlw	128
  4794  000BD8  585C               	subwfb	??_efgtoa^0,w,c
  4795  000BDA  A0D8               	btfss	status,0,c
  4796  000BDC  D77B               	goto	i2l4189
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4800  000BDE  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  4801  000BE2  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  4802  000BE6  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  4803  000BEA  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  4804  000BEE  0E00               	movlw	0
  4805  000BF0  6E13               	movwf	___flmul@a^0,c
  4806  000BF2  0E00               	movlw	0
  4807  000BF4  6E14               	movwf	(___flmul@a+1)^0,c
  4808  000BF6  0EA0               	movlw	160
  4809  000BF8  6E15               	movwf	(___flmul@a+2)^0,c
  4810  000BFA  0E40               	movlw	64
  4811  000BFC  6E16               	movwf	(___flmul@a+3)^0,c
  4812  000BFE  EC27  F00A         	call	___flmul	;wreg free
  4813  000C02  C00F  F0A6         	movff	?___flmul,efgtoa@l
  4814  000C06  C010  F0A7         	movff	?___flmul+1,efgtoa@l+1
  4815  000C0A  C011  F0A8         	movff	?___flmul+2,efgtoa@l+2
  4816  000C0E  C012  F0A9         	movff	?___flmul+3,efgtoa@l+3
  4817                           
  4818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4819  000C12  C0A2  F028         	movff	efgtoa@h,___flge@ff1
  4820  000C16  C0A3  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4821  000C1A  C0A4  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4822  000C1E  C0A5  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4823  000C22  C0A6  F02C         	movff	efgtoa@l,___flge@ff2
  4824  000C26  C0A7  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  4825  000C2A  C0A8  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  4826  000C2E  C0A9  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  4827  000C32  ECD5  F012         	call	___flge	;wreg free
  4828  000C36  B0D8               	btfsc	status,0,c
  4829  000C38  D003               	goto	i2l4205
  4830                           
  4831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4832  000C3A  0E00               	movlw	0
  4833  000C3C  0100               	movlb	0	; () banked
  4834  000C3E  D018               	goto	L3
  4835  000C40                     i2l4205:
  4836                           
  4837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4838  000C40  C0A2  F001         	movff	efgtoa@h,___fleq@ff1
  4839  000C44  C0A3  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4840  000C48  C0A4  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4841  000C4C  C0A5  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4842  000C50  C0A6  F005         	movff	efgtoa@l,___fleq@ff2
  4843  000C54  C0A7  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4844  000C58  C0A8  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4845  000C5C  C0A9  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4846  000C60  ECEE  F014         	call	___fleq	;wreg free
  4847  000C64  A0D8               	btfss	status,0,c
  4848  000C66  D00B               	goto	i2l4211
  4849  000C68  0100               	movlb	0	; () banked
  4850  000C6A  B198               	btfsc	efgtoa@d& (0+255),0,b
  4851  000C6C  D008               	goto	i2l4211
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4855  000C6E  0E00               	movlw	0
  4856  000C70                     L3:
  4857  000C70  6FA6               	movwf	efgtoa@l& (0+255),b
  4858  000C72  0E00               	movlw	0
  4859  000C74  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  4860  000C76  0E00               	movlw	0
  4861  000C78  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  4862  000C7A  0E00               	movlw	0
  4863  000C7C  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  4864  000C7E                     i2l4211:
  4865                           
  4866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4867  000C7E  C0AC  F001         	movff	efgtoa@g,___fladd@b
  4868  000C82  C0AD  F002         	movff	efgtoa@g+1,___fladd@b+1
  4869  000C86  C0AE  F003         	movff	efgtoa@g+2,___fladd@b+2
  4870  000C8A  C0AF  F004         	movff	efgtoa@g+3,___fladd@b+3
  4871  000C8E  C0A6  F005         	movff	efgtoa@l,___fladd@a
  4872  000C92  C0A7  F006         	movff	efgtoa@l+1,___fladd@a+1
  4873  000C96  C0A8  F007         	movff	efgtoa@l+2,___fladd@a+2
  4874  000C9A  C0A9  F008         	movff	efgtoa@l+3,___fladd@a+3
  4875  000C9E  ECD0  F00B         	call	___fladd	;wreg free
  4876  000CA2  C001  F0A2         	movff	?___fladd,efgtoa@h
  4877  000CA6  C002  F0A3         	movff	?___fladd+1,efgtoa@h+1
  4878  000CAA  C003  F0A4         	movff	?___fladd+2,efgtoa@h+2
  4879  000CAE  C004  F0A5         	movff	?___fladd+3,efgtoa@h+3
  4880                           
  4881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4882  000CB2  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  4883  000CB6  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  4884  000CBA  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  4885  000CBE  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  4886                           
  4887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4888  000CC2  0E65               	movlw	101
  4889  000CC4  0100               	movlb	0	; () banked
  4890  000CC6  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4891  000CC8  B4D8               	btfsc	status,2,c
  4892  000CCA  D005               	goto	i2l4219
  4893                           
  4894                           ; BSR set to: 0
  4895  000CCC  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  4896  000CD0  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  4897  000CD4  D004               	goto	i2l371
  4898  000CD6                     i2l4219:
  4899                           
  4900                           ; BSR set to: 0
  4901  000CD6  0E00               	movlw	0
  4902  000CD8  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  4903  000CDA  0E00               	movlw	0
  4904  000CDC  6F96               	movwf	efgtoa@ne& (0+255),b
  4905  000CDE                     i2l371:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4909  000CDE  0E00               	movlw	0
  4910  000CE0  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  4911  000CE2  0E00               	movlw	0
  4912  000CE4  6F92               	movwf	efgtoa@pp& (0+255),b
  4913                           
  4914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4915  000CE6  0E00               	movlw	0
  4916  000CE8  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  4917  000CEA  0E00               	movlw	0
  4918  000CEC  6F90               	movwf	efgtoa@t& (0+255),b
  4919                           
  4920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4921  000CEE  0E00               	movlw	0
  4922  000CF0  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4923  000CF2  0E00               	movlw	0
  4924  000CF4  6FAA               	movwf	efgtoa@i& (0+255),b
  4925                           
  4926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4927  000CF6  D0C6               	goto	i2l4269
  4928  000CF8                     i2l4221:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4932  000CF8  C0A2  F028         	movff	efgtoa@h,___fldiv@b
  4933  000CFC  C0A3  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4934  000D00  C0A4  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4935  000D04  C0A5  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4936  000D08  C0B4  F02C         	movff	efgtoa@u,___fldiv@a
  4937  000D0C  C0B5  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4938  000D10  C0B6  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4939  000D14  C0B7  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4940  000D18  EC56  F00D         	call	___fldiv	;wreg free
  4941  000D1C  C028  F041         	movff	?___fldiv,floorf@x
  4942  000D20  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4943  000D24  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4944  000D28  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4945  000D2C  EC9A  F00E         	call	_floorf	;wreg free
  4946  000D30  C041  F0A6         	movff	?_floorf,efgtoa@l
  4947  000D34  C042  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4948  000D38  C043  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4949  000D3C  C044  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4950                           
  4951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4952  000D40  C0A6  F001         	movff	efgtoa@l,___fltol@f1
  4953  000D44  C0A7  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4954  000D48  C0A8  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4955  000D4C  C0A9  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4956  000D50  ECA3  F013         	call	___fltol	;wreg free
  4957  000D54  C001  F098         	movff	?___fltol,efgtoa@d
  4958  000D58  C002  F099         	movff	?___fltol+1,efgtoa@d+1
  4959                           
  4960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4961  000D5C  0100               	movlb	0	; () banked
  4962  000D5E  B9EB               	btfsc	_flags& (0+255),4,b
  4963  000D60  D00C               	goto	i2l4233
  4964                           
  4965                           ; BSR set to: 0
  4966  000D62  5198               	movf	efgtoa@d& (0+255),w,b
  4967  000D64  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4968  000D66  A4D8               	btfss	status,2,c
  4969  000D68  D008               	goto	i2l4233
  4970                           
  4971                           ; BSR set to: 0
  4972  000D6A  0E67               	movlw	103
  4973  000D6C  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4974  000D6E  B4D8               	btfsc	status,2,c
  4975                           
  4976                           ; BSR set to: 0
  4977  000D70  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4978  000D72  D003               	goto	i2l4233
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4982  000D74  4B90               	infsnz	efgtoa@t& (0+255),f,b
  4983  000D76  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  4984                           
  4985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4986  000D78  D039               	goto	i2l4261
  4987  000D7A                     i2l4233:
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4991  000D7A  5192               	movf	efgtoa@pp& (0+255),w,b
  4992  000D7C  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4993  000D7E  B4D8               	btfsc	status,2,c
  4994                           
  4995                           ; BSR set to: 0
  4996  000D80  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4997  000D82  D022               	goto	i2l4253
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  5001  000D84  0E22               	movlw	low _dbuf
  5002  000D86  25B2               	addwf	efgtoa@n& (0+255),w,b
  5003  000D88  6ED9               	movwf	fsr2l,c
  5004  000D8A  0E01               	movlw	high _dbuf
  5005  000D8C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5006  000D8E  6EDA               	movwf	fsr2h,c
  5007  000D90  0E2E               	movlw	46
  5008  000D92  6EDF               	movwf	indf2,c
  5009                           
  5010                           ; BSR set to: 0
  5011  000D94  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5012  000D96  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  5016  000D98  079F               	decf	efgtoa@w& (0+255),f,b
  5017  000D9A  A0D8               	btfss	status,0,c
  5018  000D9C  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  5022  000D9E  0E00               	movlw	0
  5023  000DA0  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  5024  000DA2  0E01               	movlw	1
  5025  000DA4  6F92               	movwf	efgtoa@pp& (0+255),b
  5026  000DA6  D010               	goto	i2l4253
  5027  000DA8                     i2l4245:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  5031  000DA8  0E22               	movlw	low _dbuf
  5032  000DAA  25B2               	addwf	efgtoa@n& (0+255),w,b
  5033  000DAC  6ED9               	movwf	fsr2l,c
  5034  000DAE  0E01               	movlw	high _dbuf
  5035  000DB0  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5036  000DB2  6EDA               	movwf	fsr2h,c
  5037  000DB4  0E30               	movlw	48
  5038  000DB6  6EDF               	movwf	indf2,c
  5039                           
  5040                           ; BSR set to: 0
  5041  000DB8  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5042  000DBA  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  5046  000DBC  079F               	decf	efgtoa@w& (0+255),f,b
  5047  000DBE  A0D8               	btfss	status,0,c
  5048  000DC0  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  5052  000DC2  0790               	decf	efgtoa@t& (0+255),f,b
  5053  000DC4  A0D8               	btfss	status,0,c
  5054  000DC6  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  5055  000DC8                     i2l4253:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  5059  000DC8  5190               	movf	efgtoa@t& (0+255),w,b
  5060  000DCA  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5061  000DCC  A4D8               	btfss	status,2,c
  5062  000DCE  D7EC               	goto	i2l4245
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  5066  000DD0  0E22               	movlw	low _dbuf
  5067  000DD2  25B2               	addwf	efgtoa@n& (0+255),w,b
  5068  000DD4  6ED9               	movwf	fsr2l,c
  5069  000DD6  0E01               	movlw	high _dbuf
  5070  000DD8  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5071  000DDA  6EDA               	movwf	fsr2h,c
  5072  000DDC  5198               	movf	efgtoa@d& (0+255),w,b
  5073  000DDE  0F30               	addlw	48
  5074  000DE0  6EDF               	movwf	indf2,c
  5075                           
  5076                           ; BSR set to: 0
  5077  000DE2  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5078  000DE4  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  5082  000DE6  079F               	decf	efgtoa@w& (0+255),f,b
  5083  000DE8  A0D8               	btfss	status,0,c
  5084  000DEA  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5085  000DEC                     i2l4261:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  5089  000DEC  C0A2  F028         	movff	efgtoa@h,___flsub@b
  5090  000DF0  C0A3  F029         	movff	efgtoa@h+1,___flsub@b+1
  5091  000DF4  C0A4  F02A         	movff	efgtoa@h+2,___flsub@b+2
  5092  000DF8  C0A5  F02B         	movff	efgtoa@h+3,___flsub@b+3
  5093  000DFC  C0B4  F013         	movff	efgtoa@u,___flmul@a
  5094  000E00  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  5095  000E04  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  5096  000E08  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  5097  000E0C  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  5098  000E10  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  5099  000E14  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  5100  000E18  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  5101  000E1C  EC27  F00A         	call	___flmul	;wreg free
  5102  000E20  C00F  F02C         	movff	?___flmul,___flsub@a
  5103  000E24  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  5104  000E28  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  5105  000E2C  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  5106  000E30  EC8E  F017         	call	___flsub	;wreg free
  5107  000E34  C028  F0A2         	movff	?___flsub,efgtoa@h
  5108  000E38  C029  F0A3         	movff	?___flsub+1,efgtoa@h+1
  5109  000E3C  C02A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  5110  000E40  C02B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  5111                           
  5112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  5113  000E44  C0B4  F028         	movff	efgtoa@u,___fldiv@b
  5114  000E48  C0B5  F029         	movff	efgtoa@u+1,___fldiv@b+1
  5115  000E4C  C0B6  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  5116  000E50  C0B7  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  5117  000E54  0E00               	movlw	0
  5118  000E56  6E2C               	movwf	___fldiv@a^0,c
  5119  000E58  0E00               	movlw	0
  5120  000E5A  6E2D               	movwf	(___fldiv@a+1)^0,c
  5121  000E5C  0E20               	movlw	32
  5122  000E5E  6E2E               	movwf	(___fldiv@a+2)^0,c
  5123  000E60  0E41               	movlw	65
  5124  000E62  6E2F               	movwf	(___fldiv@a+3)^0,c
  5125  000E64  EC56  F00D         	call	___fldiv	;wreg free
  5126  000E68  C028  F0B4         	movff	?___fldiv,efgtoa@u
  5127  000E6C  C029  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  5128  000E70  C02A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  5129  000E74  C02B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  5130                           
  5131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  5132  000E78  0100               	movlb	0	; () banked
  5133  000E7A  0796               	decf	efgtoa@ne& (0+255),f,b
  5134  000E7C  A0D8               	btfss	status,0,c
  5135  000E7E  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  5139  000E80  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  5140  000E82  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  5141  000E84                     i2l4269:
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5145  000E84  5194               	movf	efgtoa@m& (0+255),w,b
  5146  000E86  5DAA               	subwf	efgtoa@i& (0+255),w,b
  5147  000E88  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  5148  000E8A  0A80               	xorlw	128
  5149  000E8C  6E5C               	movwf	??_efgtoa^0,c
  5150  000E8E  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  5151  000E90  0A80               	xorlw	128
  5152  000E92  585C               	subwfb	??_efgtoa^0,w,c
  5153  000E94  B0D8               	btfsc	status,0,c
  5154  000E96  D008               	goto	i2u465_40
  5155                           
  5156                           ; BSR set to: 0
  5157  000E98  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5158  000E9A  D72E               	goto	i2l4221
  5159  000E9C  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  5160  000E9E  E104               	bnz	i2u465_40
  5161  000EA0  0E4B               	movlw	75
  5162  000EA2  5DB2               	subwf	efgtoa@n& (0+255),w,b
  5163  000EA4  A0D8               	btfss	status,0,c
  5164  000EA6  D728               	goto	i2l4221
  5165  000EA8                     i2u465_40:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  5169  000EA8  5192               	movf	efgtoa@pp& (0+255),w,b
  5170  000EAA  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5171  000EAC  B4D8               	btfsc	status,2,c
  5172                           
  5173                           ; BSR set to: 0
  5174  000EAE  A9EB               	btfss	_flags& (0+255),4,b
  5175  000EB0  D00A               	goto	i2l4281
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  5179  000EB2  0E22               	movlw	low _dbuf
  5180  000EB4  25B2               	addwf	efgtoa@n& (0+255),w,b
  5181  000EB6  6ED9               	movwf	fsr2l,c
  5182  000EB8  0E01               	movlw	high _dbuf
  5183  000EBA  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5184  000EBC  6EDA               	movwf	fsr2h,c
  5185  000EBE  0E2E               	movlw	46
  5186  000EC0  6EDF               	movwf	indf2,c
  5187                           
  5188                           ; BSR set to: 0
  5189  000EC2  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5190  000EC4  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5191  000EC6                     i2l4281:
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  5195  000EC6  0E22               	movlw	low _dbuf
  5196  000EC8  25B2               	addwf	efgtoa@n& (0+255),w,b
  5197  000ECA  6ED9               	movwf	fsr2l,c
  5198  000ECC  0E01               	movlw	high _dbuf
  5199  000ECE  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5200  000ED0  6EDA               	movwf	fsr2h,c
  5201  000ED2  0E00               	movlw	0
  5202  000ED4  6EDF               	movwf	indf2,c
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  5206  000ED6  0E65               	movlw	101
  5207  000ED8  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5208  000EDA  A4D8               	btfss	status,2,c
  5209  000EDC  D47F               	goto	i2l4093
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  5213  000EDE  0E00               	movlw	0
  5214  000EE0  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5215  000EE2  0E4F               	movlw	79
  5216  000EE4  6FAA               	movwf	efgtoa@i& (0+255),b
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  5220  000EE6  0E22               	movlw	low _dbuf
  5221  000EE8  25AA               	addwf	efgtoa@i& (0+255),w,b
  5222  000EEA  6ED9               	movwf	fsr2l,c
  5223  000EEC  0E01               	movlw	high _dbuf
  5224  000EEE  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5225  000EF0  6EDA               	movwf	fsr2h,c
  5226  000EF2  0E00               	movlw	0
  5227  000EF4  6EDF               	movwf	indf2,c
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  5231  000EF6  0E00               	movlw	0
  5232  000EF8  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  5233  000EFA  0E00               	movlw	0
  5234  000EFC  6F9A               	movwf	efgtoa@sign& (0+255),b
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  5238  000EFE  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5239  000F00  D008               	goto	i2l4297
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  5243  000F02  0E00               	movlw	0
  5244  000F04  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  5245  000F06  0E01               	movlw	1
  5246  000F08  6F9A               	movwf	efgtoa@sign& (0+255),b
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  5250  000F0A  6DB0               	negf	efgtoa@e& (0+255),b
  5251  000F0C  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  5252  000F0E  B0D8               	btfsc	status,0,c
  5253  000F10  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  5254  000F12                     i2l4297:
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  5258  000F12  0E00               	movlw	0
  5259  000F14  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  5260  000F16  0E02               	movlw	2
  5261  000F18  6F9C               	movwf	efgtoa@p& (0+255),b
  5262                           
  5263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5264  000F1A  D02B               	goto	i2l4309
  5265  000F1C                     i2l4299:
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  5269  000F1C  07AA               	decf	efgtoa@i& (0+255),f,b
  5270  000F1E  A0D8               	btfss	status,0,c
  5271  000F20  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5275  000F22  0E22               	movlw	low _dbuf
  5276  000F24  25AA               	addwf	efgtoa@i& (0+255),w,b
  5277  000F26  6ED9               	movwf	fsr2l,c
  5278  000F28  0E01               	movlw	high _dbuf
  5279  000F2A  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5280  000F2C  6EDA               	movwf	fsr2h,c
  5281  000F2E  C0B0  F001         	movff	efgtoa@e,i2___awmod@dividend
  5282  000F32  C0B1  F002         	movff	efgtoa@e+1,i2___awmod@dividend+1
  5283  000F36  0E00               	movlw	0
  5284  000F38  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5285  000F3A  0E0A               	movlw	10
  5286  000F3C  6E03               	movwf	i2___awmod@divisor^0,c
  5287  000F3E  EC25  F016         	call	i2___awmod	;wreg free
  5288  000F42  5001               	movf	?i2___awmod^0,w,c
  5289  000F44  0F30               	addlw	48
  5290  000F46  6EDF               	movwf	indf2,c
  5291                           
  5292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5293  000F48  C0B0  F001         	movff	efgtoa@e,___awdiv@dividend
  5294  000F4C  C0B1  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5295  000F50  0E00               	movlw	0
  5296  000F52  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5297  000F54  0E0A               	movlw	10
  5298  000F56  6E03               	movwf	___awdiv@divisor^0,c
  5299  000F58  EC33  F015         	call	___awdiv	;wreg free
  5300  000F5C  C001  F0B0         	movff	?___awdiv,efgtoa@e
  5301  000F60  C002  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  5302                           
  5303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5304  000F64  0100               	movlb	0	; () banked
  5305  000F66  079C               	decf	efgtoa@p& (0+255),f,b
  5306  000F68  A0D8               	btfss	status,0,c
  5307  000F6A  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5311  000F6C  079F               	decf	efgtoa@w& (0+255),f,b
  5312  000F6E  A0D8               	btfss	status,0,c
  5313  000F70  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5314  000F72                     i2l4309:
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5318  000F72  51B0               	movf	efgtoa@e& (0+255),w,b
  5319  000F74  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5320  000F76  A4D8               	btfss	status,2,c
  5321  000F78  D7D1               	goto	i2l4299
  5322                           
  5323                           ; BSR set to: 0
  5324  000F7A  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5325  000F7C  D005               	goto	i2u471_40
  5326  000F7E  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  5327  000F80  E1CD               	bnz	i2l4299
  5328  000F82  059C               	decf	efgtoa@p& (0+255),w,b
  5329  000F84  B0D8               	btfsc	status,0,c
  5330  000F86  D7CA               	goto	i2l4299
  5331  000F88                     i2u471_40:
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5335  000F88  07AA               	decf	efgtoa@i& (0+255),f,b
  5336  000F8A  A0D8               	btfss	status,0,c
  5337  000F8C  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5341  000F8E  519A               	movf	efgtoa@sign& (0+255),w,b
  5342  000F90  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5343  000F92  A4D8               	btfss	status,2,c
  5344  000F94  D004               	goto	i2l4319
  5345                           
  5346                           ; BSR set to: 0
  5347  000F96  0E00               	movlw	0
  5348  000F98  6F8B               	movwf	(_efgtoa$995+1)& (0+255),b
  5349  000F9A  0E2B               	movlw	43
  5350  000F9C  D003               	goto	L4
  5351  000F9E                     i2l4319:
  5352                           
  5353                           ; BSR set to: 0
  5354  000F9E  0E00               	movlw	0
  5355  000FA0  6F8B               	movwf	(_efgtoa$995+1)& (0+255),b
  5356  000FA2  0E2D               	movlw	45
  5357  000FA4                     L4:
  5358  000FA4  6F8A               	movwf	_efgtoa$995& (0+255),b
  5359                           
  5360                           ; BSR set to: 0
  5361  000FA6  0E22               	movlw	low _dbuf
  5362  000FA8  25AA               	addwf	efgtoa@i& (0+255),w,b
  5363  000FAA  6ED9               	movwf	fsr2l,c
  5364  000FAC  0E01               	movlw	high _dbuf
  5365  000FAE  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5366  000FB0  6EDA               	movwf	fsr2h,c
  5367  000FB2  C08A  FFDF         	movff	_efgtoa$995,indf2
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  5371  000FB6  079F               	decf	efgtoa@w& (0+255),f,b
  5372  000FB8  A0D8               	btfss	status,0,c
  5373  000FBA  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5377  000FBC  07AA               	decf	efgtoa@i& (0+255),f,b
  5378  000FBE  A0D8               	btfss	status,0,c
  5379  000FC0  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5380                           
  5381                           ; BSR set to: 0
  5382  000FC2  0EBF               	movlw	191
  5383  000FC4  6E5C               	movwf	??_efgtoa^0,c
  5384  000FC6  0EFF               	movlw	255
  5385  000FC8  6E5D               	movwf	(??_efgtoa+1)^0,c
  5386  000FCA  505B               	movf	efgtoa@c^0,w,c
  5387  000FCC  6E5E               	movwf	(??_efgtoa+2)^0,c
  5388  000FCE  6A5F               	clrf	(??_efgtoa+3)^0,c
  5389  000FD0  505C               	movf	??_efgtoa^0,w,c
  5390  000FD2  265E               	addwf	(??_efgtoa+2)^0,f,c
  5391  000FD4  505D               	movf	(??_efgtoa+1)^0,w,c
  5392  000FD6  225F               	addwfc	(??_efgtoa+3)^0,f,c
  5393  000FD8  505F               	movf	(??_efgtoa+3)^0,w,c
  5394  000FDA  E106               	bnz	i2u473_40
  5395  000FDC  0E1A               	movlw	26
  5396  000FDE  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  5397  000FE0  B0D8               	btfsc	status,0,c
  5398  000FE2  D002               	goto	i2u473_40
  5399  000FE4  0E01               	movlw	1
  5400  000FE6  D001               	goto	i2u474_40
  5401  000FE8                     i2u473_40:
  5402  000FE8  0E00               	movlw	0
  5403  000FEA                     i2u474_40:
  5404  000FEA  6F8E               	movwf	_efgtoa$997& (0+255),b
  5405  000FEC  6B8F               	clrf	(_efgtoa$997+1)& (0+255),b
  5406                           
  5407                           ; BSR set to: 0
  5408  000FEE  518E               	movf	_efgtoa$997& (0+255),w,b
  5409  000FF0  118F               	iorwf	(_efgtoa$997+1)& (0+255),w,b
  5410  000FF2  A4D8               	btfss	status,2,c
  5411  000FF4  D004               	goto	i2l4335
  5412                           
  5413                           ; BSR set to: 0
  5414  000FF6  0E00               	movlw	0
  5415  000FF8  6F8D               	movwf	(_efgtoa$996+1)& (0+255),b
  5416  000FFA  0E65               	movlw	101
  5417  000FFC  D003               	goto	L5
  5418  000FFE                     i2l4335:
  5419                           
  5420                           ; BSR set to: 0
  5421  000FFE  0E00               	movlw	0
  5422  001000  6F8D               	movwf	(_efgtoa$996+1)& (0+255),b
  5423  001002  0E45               	movlw	69
  5424  001004                     L5:
  5425  001004  6F8C               	movwf	_efgtoa$996& (0+255),b
  5426                           
  5427                           ; BSR set to: 0
  5428  001006  0E22               	movlw	low _dbuf
  5429  001008  25AA               	addwf	efgtoa@i& (0+255),w,b
  5430  00100A  6ED9               	movwf	fsr2l,c
  5431  00100C  0E01               	movlw	high _dbuf
  5432  00100E  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5433  001010  6EDA               	movwf	fsr2h,c
  5434  001012  C08C  FFDF         	movff	_efgtoa$996,indf2
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5438  001016  079F               	decf	efgtoa@w& (0+255),f,b
  5439  001018  A0D8               	btfss	status,0,c
  5440  00101A  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5444  00101C  0E22               	movlw	low _dbuf
  5445  00101E  25B2               	addwf	efgtoa@n& (0+255),w,b
  5446  001020  6E01               	movwf	strcpy@dest^0,c
  5447  001022  0E01               	movlw	high _dbuf
  5448  001024  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5449  001026  6E02               	movwf	(strcpy@dest+1)^0,c
  5450  001028  0E22               	movlw	low _dbuf
  5451  00102A  25AA               	addwf	efgtoa@i& (0+255),w,b
  5452  00102C  6E03               	movwf	strcpy@src^0,c
  5453  00102E  0E01               	movlw	high _dbuf
  5454  001030  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5455  001032  6E04               	movwf	(strcpy@src+1)^0,c
  5456  001034  EC1B  F017         	call	_strcpy	;wreg free
  5457  001038  EFEE  F003         	goto	i2l4093
  5458  00103C                     __end_of_efgtoa:
  5459                           	opt callstack 0
  5460                           
  5461 ;; *************** function i2___awmod *****************
  5462 ;; Defined at:
  5463 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  dividend        2    0[COMRAM] int 
  5466 ;;  divisor         2    2[COMRAM] int 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  __awmod         1    5[COMRAM] unsigned char 
  5469 ;;  __awmod         1    4[COMRAM] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  2    0[COMRAM] int 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5479 ;;      Params:         4       0       0       0       0       0       0
  5480 ;;      Locals:         2       0       0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0
  5482 ;;      Totals:         6       0       0       0       0       0       0
  5483 ;;Total ram usage:        6 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_efgtoa
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text25
  5493  002C4A                     __ptext25:
  5494                           	opt callstack 0
  5495  002C4A                     i2___awmod:
  5496                           	opt callstack 18
  5497                           
  5498                           ;incstack = 0
  5499  002C4A  0E00               	movlw	0
  5500  002C4C  6E06               	movwf	i2___awmod@sign^0,c
  5501  002C4E  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  5502  002C50  D006               	goto	i2l4005
  5503  002C52  6C01               	negf	i2___awmod@dividend^0,c
  5504  002C54  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5505  002C56  B0D8               	btfsc	status,0,c
  5506  002C58  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5507  002C5A  0E01               	movlw	1
  5508  002C5C  6E06               	movwf	i2___awmod@sign^0,c
  5509  002C5E                     i2l4005:
  5510  002C5E  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5511  002C60  D004               	goto	i2l4009
  5512  002C62  6C03               	negf	i2___awmod@divisor^0,c
  5513  002C64  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  5514  002C66  B0D8               	btfsc	status,0,c
  5515  002C68  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  5516  002C6A                     i2l4009:
  5517  002C6A  5003               	movf	i2___awmod@divisor^0,w,c
  5518  002C6C  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  5519  002C6E  B4D8               	btfsc	status,2,c
  5520  002C70  D018               	goto	i2l4025
  5521  002C72  0E01               	movlw	1
  5522  002C74  6E05               	movwf	i2___awmod@counter^0,c
  5523  002C76  D004               	goto	i2l4015
  5524  002C78                     i2l4013:
  5525  002C78  90D8               	bcf	status,0,c
  5526  002C7A  3603               	rlcf	i2___awmod@divisor^0,f,c
  5527  002C7C  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  5528  002C7E  2A05               	incf	i2___awmod@counter^0,f,c
  5529  002C80                     i2l4015:
  5530  002C80  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5531  002C82  D7FA               	goto	i2l4013
  5532  002C84                     i2u421_40:
  5533  002C84  5003               	movf	i2___awmod@divisor^0,w,c
  5534  002C86  5C01               	subwf	i2___awmod@dividend^0,w,c
  5535  002C88  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5536  002C8A  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  5537  002C8C  A0D8               	btfss	status,0,c
  5538  002C8E  D004               	goto	i2l4021
  5539  002C90  5003               	movf	i2___awmod@divisor^0,w,c
  5540  002C92  5E01               	subwf	i2___awmod@dividend^0,f,c
  5541  002C94  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5542  002C96  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  5543  002C98                     i2l4021:
  5544  002C98  90D8               	bcf	status,0,c
  5545  002C9A  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  5546  002C9C  3203               	rrcf	i2___awmod@divisor^0,f,c
  5547  002C9E  2E05               	decfsz	i2___awmod@counter^0,f,c
  5548  002CA0  D7F1               	goto	i2u421_40
  5549  002CA2                     i2l4025:
  5550  002CA2  5006               	movf	i2___awmod@sign^0,w,c
  5551  002CA4  B4D8               	btfsc	status,2,c
  5552  002CA6  D004               	goto	i2l4029
  5553  002CA8  6C01               	negf	i2___awmod@dividend^0,c
  5554  002CAA  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5555  002CAC  B0D8               	btfsc	status,0,c
  5556  002CAE  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5557  002CB0                     i2l4029:
  5558  002CB0  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  5559  002CB4  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  5560  002CB8  0012               	return		;funcret
  5561  002CBA                     __end_ofi2___awmod:
  5562                           	opt callstack 0
  5563                           
  5564 ;; *************** function _tolower *****************
  5565 ;; Defined at:
  5566 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  c               2    6[COMRAM] int 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  2    6[COMRAM] int 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5580 ;;      Params:         2       0       0       0       0       0       0
  5581 ;;      Locals:         2       0       0       0       0       0       0
  5582 ;;      Temps:          4       0       0       0       0       0       0
  5583 ;;      Totals:         8       0       0       0       0       0       0
  5584 ;;Total ram usage:        8 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    1
  5587 ;; This function calls:
  5588 ;;		_isupper
  5589 ;; This function is called by:
  5590 ;;		_efgtoa
  5591 ;;		_vfpfcnvrt
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text26
  5596  002E88                     __ptext26:
  5597                           	opt callstack 0
  5598  002E88                     _tolower:
  5599                           	opt callstack 18
  5600                           
  5601                           ;incstack = 0
  5602  002E88  0EBF               	movlw	191
  5603  002E8A  6E09               	movwf	??_tolower^0,c
  5604  002E8C  0EFF               	movlw	255
  5605  002E8E  6E0A               	movwf	(??_tolower+1)^0,c
  5606  002E90  C007  F00B         	movff	tolower@c,??_tolower+2
  5607  002E94  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5608  002E98  5009               	movf	??_tolower^0,w,c
  5609  002E9A  260B               	addwf	(??_tolower+2)^0,f,c
  5610  002E9C  500A               	movf	(??_tolower+1)^0,w,c
  5611  002E9E  220C               	addwfc	(??_tolower+3)^0,f,c
  5612  002EA0  500C               	movf	(??_tolower+3)^0,w,c
  5613  002EA2  E106               	bnz	i2u337_40
  5614  002EA4  0E1A               	movlw	26
  5615  002EA6  5C0B               	subwf	(??_tolower+2)^0,w,c
  5616  002EA8  B0D8               	btfsc	status,0,c
  5617  002EAA  D002               	goto	i2u337_40
  5618  002EAC  0E01               	movlw	1
  5619  002EAE  D001               	goto	i2u338_40
  5620  002EB0                     i2u337_40:
  5621  002EB0  0E00               	movlw	0
  5622  002EB2                     i2u338_40:
  5623  002EB2  6E0D               	movwf	_tolower$1767^0,c
  5624  002EB4  6A0E               	clrf	(_tolower$1767+1)^0,c
  5625  002EB6  500D               	movf	_tolower$1767^0,w,c
  5626  002EB8  100E               	iorwf	(_tolower$1767+1)^0,w,c
  5627  002EBA  B4D8               	btfsc	status,2,c
  5628  002EBC  D006               	goto	i2l1517
  5629  002EBE  0E20               	movlw	32
  5630  002EC0  1007               	iorwf	tolower@c^0,w,c
  5631  002EC2  6E07               	movwf	?_tolower^0,c
  5632  002EC4  5008               	movf	(tolower@c+1)^0,w,c
  5633  002EC6  6E08               	movwf	(?_tolower+1)^0,c
  5634  002EC8  0012               	return	
  5635  002ECA                     i2l1517:
  5636  002ECA  C007  F007         	movff	tolower@c,?_tolower
  5637  002ECE  C008  F008         	movff	tolower@c+1,?_tolower+1
  5638  002ED2  0012               	return		;funcret
  5639  002ED4                     __end_of_tolower:
  5640                           	opt callstack 0
  5641                           
  5642 ;; *************** function _isupper *****************
  5643 ;; Defined at:
  5644 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  c               2    0[COMRAM] int 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  2    0[COMRAM] int 
  5651 ;; Registers used:
  5652 ;;		wreg, status,2, status,0
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5658 ;;      Params:         2       0       0       0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0
  5660 ;;      Temps:          4       0       0       0       0       0       0
  5661 ;;      Totals:         6       0       0       0       0       0       0
  5662 ;;Total ram usage:        6 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_efgtoa
  5668 ;;		_vfpfcnvrt
  5669 ;;		_tolower
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text27
  5674  003038                     __ptext27:
  5675                           	opt callstack 0
  5676  003038                     _isupper:
  5677                           	opt callstack 18
  5678                           
  5679                           ;incstack = 0
  5680  003038  0EBF               	movlw	191
  5681  00303A  6E03               	movwf	??_isupper^0,c
  5682  00303C  0EFF               	movlw	255
  5683  00303E  6E04               	movwf	(??_isupper+1)^0,c
  5684  003040  C001  F005         	movff	isupper@c,??_isupper+2
  5685  003044  C002  F006         	movff	isupper@c+1,??_isupper+3
  5686  003048  5003               	movf	??_isupper^0,w,c
  5687  00304A  2605               	addwf	(??_isupper+2)^0,f,c
  5688  00304C  5004               	movf	(??_isupper+1)^0,w,c
  5689  00304E  2206               	addwfc	(??_isupper+3)^0,f,c
  5690  003050  5006               	movf	(??_isupper+3)^0,w,c
  5691  003052  E106               	bnz	i2u283_40
  5692  003054  0E1A               	movlw	26
  5693  003056  5C05               	subwf	(??_isupper+2)^0,w,c
  5694  003058  B0D8               	btfsc	status,0,c
  5695  00305A  D002               	goto	i2u283_40
  5696  00305C  0E01               	movlw	1
  5697  00305E  D001               	goto	i2u284_40
  5698  003060                     i2u283_40:
  5699  003060  0E00               	movlw	0
  5700  003062                     i2u284_40:
  5701  003062  6E01               	movwf	?_isupper^0,c
  5702  003064  6A02               	clrf	(?_isupper+1)^0,c
  5703  003066  0012               	return		;funcret
  5704  003068                     __end_of_isupper:
  5705                           	opt callstack 0
  5706                           
  5707 ;; *************** function _strcpy *****************
  5708 ;; Defined at:
  5709 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5712 ;;		 -> dbuf(80), 
  5713 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5714 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  5715 ;;		 -> dbuf(80), 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  d               2    8[COMRAM] PTR unsigned char 
  5718 ;;		 -> dbuf(80), 
  5719 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5720 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  5721 ;;		 -> dbuf(80), 
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  2    0[COMRAM] PTR unsigned char 
  5724 ;; Registers used:
  5725 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5731 ;;      Params:         4       0       0       0       0       0       0
  5732 ;;      Locals:         4       0       0       0       0       0       0
  5733 ;;      Temps:          2       0       0       0       0       0       0
  5734 ;;      Totals:        10       0       0       0       0       0       0
  5735 ;;Total ram usage:       10 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; This function calls:
  5738 ;;		Nothing
  5739 ;; This function is called by:
  5740 ;;		_efgtoa
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text28
  5745  002E36                     __ptext28:
  5746                           	opt callstack 0
  5747  002E36                     _strcpy:
  5748                           	opt callstack 18
  5749                           
  5750                           ;incstack = 0
  5751  002E36  C003  F007         	movff	strcpy@src,strcpy@s
  5752  002E3A  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5753  002E3E  C001  F009         	movff	strcpy@dest,strcpy@d
  5754  002E42  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5755  002E46                     i2l3527:
  5756  002E46  5007               	movf	strcpy@s^0,w,c
  5757  002E48  6E05               	movwf	??_strcpy^0,c
  5758  002E4A  5008               	movf	(strcpy@s+1)^0,w,c
  5759  002E4C  6E06               	movwf	(??_strcpy+1)^0,c
  5760  002E4E  4A07               	infsnz	strcpy@s^0,f,c
  5761  002E50  2A08               	incf	(strcpy@s+1)^0,f,c
  5762  002E52  C005  FFF6         	movff	??_strcpy,tblptrl
  5763  002E56  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5764  002E5A  6AF8               	clrf	tblptru,c
  5765  002E5C  C009  FFD9         	movff	strcpy@d,fsr2l
  5766  002E60  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5767  002E64  4A09               	infsnz	strcpy@d^0,f,c
  5768  002E66  2A0A               	incf	(strcpy@d+1)^0,f,c
  5769  002E68  0E05               	movlw	(high __ramtop+-1)
  5770  002E6A  64F7               	cpfsgt	tblptrh,c
  5771  002E6C  D003               	bra	i2u335_47
  5772  002E6E  0008               	tblrd		*
  5773  002E70  50F5               	movf	tablat,w,c
  5774  002E72  D005               	bra	i2u335_40
  5775  002E74                     i2u335_47:
  5776  002E74  CFF6 FFE9          	movff	tblptrl,fsr0l
  5777  002E78  CFF7 FFEA          	movff	tblptrh,fsr0h
  5778  002E7C  50EF               	movf	indf0,w,c
  5779  002E7E                     i2u335_40:
  5780  002E7E  6EDF               	movwf	indf2,c
  5781  002E80  50DF               	movf	indf2,w,c
  5782  002E82  B4D8               	btfsc	status,2,c
  5783  002E84  0012               	return	
  5784  002E86  D7DF               	goto	i2l3527
  5785  002E88                     __end_of_strcpy:
  5786                           	opt callstack 0
  5787                           
  5788 ;; *************** function _pad *****************
  5789 ;; Defined at:
  5790 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5793 ;;		 -> sprintf@f(6), 
  5794 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5795 ;;		 -> dbuf(80), 
  5796 ;;  p               2   20[COMRAM] int 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  w               2   25[COMRAM] int 
  5799 ;;  i               2   23[COMRAM] int 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  2   16[COMRAM] int 
  5802 ;; Registers used:
  5803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5809 ;;      Params:         6       0       0       0       0       0       0
  5810 ;;      Locals:         4       0       0       0       0       0       0
  5811 ;;      Temps:          1       0       0       0       0       0       0
  5812 ;;      Totals:        11       0       0       0       0       0       0
  5813 ;;Total ram usage:       11 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    3
  5816 ;; This function calls:
  5817 ;;		_fputc
  5818 ;;		_fputs
  5819 ;;		_strlen
  5820 ;; This function is called by:
  5821 ;;		_efgtoa
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text29
  5826  002942                     __ptext29:
  5827                           	opt callstack 0
  5828  002942                     _pad:
  5829                           	opt callstack 15
  5830                           
  5831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5832                           
  5833                           ;incstack = 0
  5834  002942  0100               	movlb	0	; () banked
  5835  002944  A1EB               	btfss	_flags& (0+255),0,b
  5836  002946  D00A               	goto	i2l3485
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5840  002948  C013  F00A         	movff	pad@buf,fputs@s
  5841  00294C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5842  002950  C011  F00C         	movff	pad@fp,fputs@fp
  5843  002954  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5844  002958  ECD0  F017         	call	_fputs	;wreg free
  5845  00295C                     i2l3485:
  5846                           
  5847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5848  00295C  BE16               	btfsc	(pad@p+1)^0,7,c
  5849  00295E  D005               	goto	i2l3489
  5850  002960  C015  F01A         	movff	pad@p,pad@w
  5851  002964  C016  F01B         	movff	pad@p+1,pad@w+1
  5852  002968  D004               	goto	i2l304
  5853  00296A                     i2l3489:
  5854  00296A  0E00               	movlw	0
  5855  00296C  6E1B               	movwf	(pad@w+1)^0,c
  5856  00296E  0E00               	movlw	0
  5857  002970  6E1A               	movwf	pad@w^0,c
  5858  002972                     i2l304:
  5859                           
  5860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5861  002972  0E00               	movlw	0
  5862  002974  6E19               	movwf	(pad@i+1)^0,c
  5863  002976  0E00               	movlw	0
  5864  002978  6E18               	movwf	pad@i^0,c
  5865                           
  5866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5867  00297A  D00C               	goto	i2l3495
  5868  00297C                     i2l3491:
  5869                           
  5870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5871  00297C  0E00               	movlw	0
  5872  00297E  6E02               	movwf	(fputc@c+1)^0,c
  5873  002980  0E20               	movlw	32
  5874  002982  6E01               	movwf	fputc@c^0,c
  5875  002984  C011  F003         	movff	pad@fp,fputc@fp
  5876  002988  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5877  00298C  EC51  F014         	call	_fputc	;wreg free
  5878                           
  5879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5880  002990  4A18               	infsnz	pad@i^0,f,c
  5881  002992  2A19               	incf	(pad@i+1)^0,f,c
  5882  002994                     i2l3495:
  5883                           
  5884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5885  002994  501A               	movf	pad@w^0,w,c
  5886  002996  5C18               	subwf	pad@i^0,w,c
  5887  002998  5019               	movf	(pad@i+1)^0,w,c
  5888  00299A  0A80               	xorlw	128
  5889  00299C  6E17               	movwf	??_pad^0,c
  5890  00299E  501B               	movf	(pad@w+1)^0,w,c
  5891  0029A0  0A80               	xorlw	128
  5892  0029A2  5817               	subwfb	??_pad^0,w,c
  5893  0029A4  A0D8               	btfss	status,0,c
  5894  0029A6  D7EA               	goto	i2l3491
  5895                           
  5896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5897  0029A8  0100               	movlb	0	; () banked
  5898  0029AA  B1EB               	btfsc	_flags& (0+255),0,b
  5899  0029AC  D00A               	goto	i2l3499
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5903  0029AE  C013  F00A         	movff	pad@buf,fputs@s
  5904  0029B2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5905  0029B6  C011  F00C         	movff	pad@fp,fputs@fp
  5906  0029BA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5907  0029BE  ECD0  F017         	call	_fputs	;wreg free
  5908  0029C2                     i2l3499:
  5909                           
  5910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5911  0029C2  C013  F001         	movff	pad@buf,strlen@s
  5912  0029C6  C014  F002         	movff	pad@buf+1,strlen@s+1
  5913  0029CA  ECA7  F018         	call	_strlen	;wreg free
  5914  0029CE  501A               	movf	pad@w^0,w,c
  5915  0029D0  2401               	addwf	?_strlen^0,w,c
  5916  0029D2  6E11               	movwf	?_pad^0,c
  5917  0029D4  501B               	movf	(pad@w+1)^0,w,c
  5918  0029D6  2002               	addwfc	(?_strlen+1)^0,w,c
  5919  0029D8  6E12               	movwf	(?_pad+1)^0,c
  5920  0029DA  0012               	return		;funcret
  5921  0029DC                     __end_of_pad:
  5922                           	opt callstack 0
  5923                           
  5924 ;; *************** function _strlen *****************
  5925 ;; Defined at:
  5926 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5929 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), r(100), 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5932 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), r(100), 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  2    0[COMRAM] unsigned int 
  5935 ;; Registers used:
  5936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5942 ;;      Params:         2       0       0       0       0       0       0
  5943 ;;      Locals:         2       0       0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0       0       0
  5945 ;;      Totals:         4       0       0       0       0       0       0
  5946 ;;Total ram usage:        4 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_pad
  5952 ;;		_stoa
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text30
  5957  00314E                     __ptext30:
  5958                           	opt callstack 0
  5959  00314E                     _strlen:
  5960                           	opt callstack 18
  5961                           
  5962                           ;incstack = 0
  5963  00314E  C001  F003         	movff	strlen@s,strlen@a
  5964  003152  C002  F004         	movff	strlen@s+1,strlen@a+1
  5965  003156  D002               	goto	i2l3269
  5966  003158                     i2l3267:
  5967  003158  4A01               	infsnz	strlen@s^0,f,c
  5968  00315A  2A02               	incf	(strlen@s+1)^0,f,c
  5969  00315C                     i2l3269:
  5970  00315C  C001  FFD9         	movff	strlen@s,fsr2l
  5971  003160  C002  FFDA         	movff	strlen@s+1,fsr2h
  5972  003164  50DF               	movf	indf2,w,c
  5973  003166  A4D8               	btfss	status,2,c
  5974  003168  D7F7               	goto	i2l3267
  5975  00316A  5003               	movf	strlen@a^0,w,c
  5976  00316C  5C01               	subwf	strlen@s^0,w,c
  5977  00316E  6E01               	movwf	?_strlen^0,c
  5978  003170  5004               	movf	(strlen@a+1)^0,w,c
  5979  003172  5802               	subwfb	(strlen@s+1)^0,w,c
  5980  003174  6E02               	movwf	(?_strlen+1)^0,c
  5981  003176  0012               	return		;funcret
  5982  003178                     __end_of_strlen:
  5983                           	opt callstack 0
  5984                           
  5985 ;; *************** function _fputs *****************
  5986 ;; Defined at:
  5987 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5990 ;;		 -> dbuf(80), 
  5991 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5992 ;;		 -> sprintf@f(6), 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  i               2   14[COMRAM] int 
  5995 ;;  c               1   13[COMRAM] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  2    9[COMRAM] int 
  5998 ;; Registers used:
  5999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6005 ;;      Params:         4       0       0       0       0       0       0
  6006 ;;      Locals:         3       0       0       0       0       0       0
  6007 ;;      Temps:          0       0       0       0       0       0       0
  6008 ;;      Totals:         7       0       0       0       0       0       0
  6009 ;;Total ram usage:        7 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    2
  6012 ;; This function calls:
  6013 ;;		_fputc
  6014 ;; This function is called by:
  6015 ;;		_pad
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text31
  6020  002FA0                     __ptext31:
  6021                           	opt callstack 0
  6022  002FA0                     _fputs:
  6023                           	opt callstack 15
  6024                           
  6025                           ;incstack = 0
  6026  002FA0  0E00               	movlw	0
  6027  002FA2  6E10               	movwf	(fputs@i+1)^0,c
  6028  002FA4  0E00               	movlw	0
  6029  002FA6  6E0F               	movwf	fputs@i^0,c
  6030  002FA8  D00B               	goto	i2l3263
  6031  002FAA                     i2l3259:
  6032  002FAA  C00E  F001         	movff	fputs@c,fputc@c
  6033  002FAE  6A02               	clrf	(fputc@c+1)^0,c
  6034  002FB0  C00C  F003         	movff	fputs@fp,fputc@fp
  6035  002FB4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6036  002FB8  EC51  F014         	call	_fputc	;wreg free
  6037  002FBC  4A0F               	infsnz	fputs@i^0,f,c
  6038  002FBE  2A10               	incf	(fputs@i+1)^0,f,c
  6039  002FC0                     i2l3263:
  6040  002FC0  500F               	movf	fputs@i^0,w,c
  6041  002FC2  240A               	addwf	fputs@s^0,w,c
  6042  002FC4  6ED9               	movwf	fsr2l,c
  6043  002FC6  5010               	movf	(fputs@i+1)^0,w,c
  6044  002FC8  200B               	addwfc	(fputs@s+1)^0,w,c
  6045  002FCA  6EDA               	movwf	fsr2h,c
  6046  002FCC  50DF               	movf	indf2,w,c
  6047  002FCE  6E0E               	movwf	fputs@c^0,c
  6048  002FD0  500E               	movf	fputs@c^0,w,c
  6049  002FD2  B4D8               	btfsc	status,2,c
  6050  002FD4  0012               	return	
  6051  002FD6  D7E9               	goto	i2l3259
  6052  002FD8                     __end_of_fputs:
  6053                           	opt callstack 0
  6054                           
  6055 ;; *************** function _fputc *****************
  6056 ;; Defined at:
  6057 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;  c               2    0[COMRAM] int 
  6060 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6061 ;;		 -> sprintf@f(6), 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;		None
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  2    0[COMRAM] int 
  6066 ;; Registers used:
  6067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6073 ;;      Params:         4       0       0       0       0       0       0
  6074 ;;      Locals:         0       0       0       0       0       0       0
  6075 ;;      Temps:          5       0       0       0       0       0       0
  6076 ;;      Totals:         9       0       0       0       0       0       0
  6077 ;;Total ram usage:        9 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    1
  6080 ;; This function calls:
  6081 ;;		_putch
  6082 ;; This function is called by:
  6083 ;;		_pad
  6084 ;;		_stoa
  6085 ;;		_vfpfcnvrt
  6086 ;;		_fputs
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text32
  6091  0028A2                     __ptext32:
  6092                           	opt callstack 0
  6093  0028A2                     _fputc:
  6094                           	opt callstack 17
  6095                           
  6096                           ;incstack = 0
  6097  0028A2  5003               	movf	fputc@fp^0,w,c
  6098  0028A4  1004               	iorwf	(fputc@fp+1)^0,w,c
  6099  0028A6  B4D8               	btfsc	status,2,c
  6100  0028A8  D004               	goto	i2u278_40
  6101  0028AA  5003               	movf	fputc@fp^0,w,c
  6102  0028AC  1004               	iorwf	(fputc@fp+1)^0,w,c
  6103  0028AE  A4D8               	btfss	status,2,c
  6104  0028B0  D004               	goto	i2l3249
  6105  0028B2                     i2u278_40:
  6106  0028B2  5001               	movf	fputc@c^0,w,c
  6107  0028B4  EC1F  F019         	call	_putch
  6108  0028B8  0012               	return	
  6109  0028BA                     i2l3249:
  6110  0028BA  EE20 F004          	lfsr	2,4
  6111  0028BE  5003               	movf	fputc@fp^0,w,c
  6112  0028C0  26D9               	addwf	fsr2l,f,c
  6113  0028C2  5004               	movf	(fputc@fp+1)^0,w,c
  6114  0028C4  22DA               	addwfc	fsr2h,f,c
  6115  0028C6  50DE               	movf	postinc2,w,c
  6116  0028C8  10DE               	iorwf	postinc2,w,c
  6117  0028CA  B4D8               	btfsc	status,2,c
  6118  0028CC  D016               	goto	i2u280_40
  6119  0028CE  EE20 F004          	lfsr	2,4
  6120  0028D2  5003               	movf	fputc@fp^0,w,c
  6121  0028D4  26D9               	addwf	fsr2l,f,c
  6122  0028D6  5004               	movf	(fputc@fp+1)^0,w,c
  6123  0028D8  22DA               	addwfc	fsr2h,f,c
  6124  0028DA  EE10 F002          	lfsr	1,2
  6125  0028DE  5003               	movf	fputc@fp^0,w,c
  6126  0028E0  26E1               	addwf	fsr1l,f,c
  6127  0028E2  5004               	movf	(fputc@fp+1)^0,w,c
  6128  0028E4  22E2               	addwfc	fsr1h,f,c
  6129  0028E6  50DE               	movf	postinc2,w,c
  6130  0028E8  5CE6               	subwf	postinc1,w,c
  6131  0028EA  50E6               	movf	postinc1,w,c
  6132  0028EC  0A80               	xorlw	128
  6133  0028EE  6E09               	movwf	(??_fputc+4)^0,c
  6134  0028F0  50DE               	movf	postinc2,w,c
  6135  0028F2  0A80               	xorlw	128
  6136  0028F4  5809               	subwfb	(??_fputc+4)^0,w,c
  6137  0028F6  B0D8               	btfsc	status,0,c
  6138  0028F8  0012               	return	
  6139  0028FA                     i2u280_40:
  6140  0028FA  EE20 F002          	lfsr	2,2
  6141  0028FE  5003               	movf	fputc@fp^0,w,c
  6142  002900  26D9               	addwf	fsr2l,f,c
  6143  002902  5004               	movf	(fputc@fp+1)^0,w,c
  6144  002904  22DA               	addwfc	fsr2h,f,c
  6145  002906  CFDE F005          	movff	postinc2,??_fputc
  6146  00290A  CFDD F006          	movff	postdec2,??_fputc+1
  6147  00290E  C003  FFD9         	movff	fputc@fp,fsr2l
  6148  002912  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6149  002916  CFDE F007          	movff	postinc2,??_fputc+2
  6150  00291A  CFDD F008          	movff	postdec2,??_fputc+3
  6151  00291E  5005               	movf	??_fputc^0,w,c
  6152  002920  2407               	addwf	(??_fputc+2)^0,w,c
  6153  002922  6ED9               	movwf	fsr2l,c
  6154  002924  5006               	movf	(??_fputc+1)^0,w,c
  6155  002926  2008               	addwfc	(??_fputc+3)^0,w,c
  6156  002928  6EDA               	movwf	fsr2h,c
  6157  00292A  C001  FFDF         	movff	fputc@c,indf2
  6158  00292E  EE20 F002          	lfsr	2,2
  6159  002932  5003               	movf	fputc@fp^0,w,c
  6160  002934  26D9               	addwf	fsr2l,f,c
  6161  002936  5004               	movf	(fputc@fp+1)^0,w,c
  6162  002938  22DA               	addwfc	fsr2h,f,c
  6163  00293A  2ADE               	incf	postinc2,f,c
  6164  00293C  0E00               	movlw	0
  6165  00293E  22DD               	addwfc	postdec2,f,c
  6166  002940  0012               	return		;funcret
  6167  002942                     __end_of_fputc:
  6168                           	opt callstack 0
  6169                           
  6170 ;; *************** function _putch *****************
  6171 ;; Defined at:
  6172 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  c               1    wreg     unsigned char 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  c               1    0[COMRAM] unsigned char 
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      void 
  6179 ;; Registers used:
  6180 ;;		wreg
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6186 ;;      Params:         0       0       0       0       0       0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0
  6188 ;;      Temps:          0       0       0       0       0       0       0
  6189 ;;      Totals:         0       0       0       0       0       0       0
  6190 ;;Total ram usage:        0 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; This function calls:
  6193 ;;		Nothing
  6194 ;; This function is called by:
  6195 ;;		_fputc
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text33
  6200  00323E                     __ptext33:
  6201                           	opt callstack 0
  6202  00323E                     _putch:
  6203                           	opt callstack 17
  6204                           
  6205                           ;incstack = 0
  6206  00323E  0012               	return		;funcret
  6207  003240                     __end_of_putch:
  6208                           	opt callstack 0
  6209                           
  6210 ;; *************** function _floorf *****************
  6211 ;; Defined at:
  6212 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  x               4   64[COMRAM] float 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;  u               4   80[COMRAM] struct .
  6217 ;;  m               4   74[COMRAM] unsigned long 
  6218 ;;  e               2   78[COMRAM] int 
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  4   64[COMRAM] float 
  6221 ;; Registers used:
  6222 ;;		wreg, status,2, status,0
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6228 ;;      Params:         4       0       0       0       0       0       0
  6229 ;;      Locals:        10       0       0       0       0       0       0
  6230 ;;      Temps:          6       0       0       0       0       0       0
  6231 ;;      Totals:        20       0       0       0       0       0       0
  6232 ;;Total ram usage:       20 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_efgtoa
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text34
  6242  001D34                     __ptext34:
  6243                           	opt callstack 0
  6244  001D34                     _floorf:
  6245                           	opt callstack 18
  6246                           
  6247                           ;incstack = 0
  6248  001D34  C0DB  F051         	movff	floorf@F524,floorf@u
  6249  001D38  C0DC  F052         	movff	floorf@F524+1,floorf@u+1
  6250  001D3C  C0DD  F053         	movff	floorf@F524+2,floorf@u+2
  6251  001D40  C0DE  F054         	movff	floorf@F524+3,floorf@u+3
  6252  001D44  C041  F051         	movff	floorf@x,floorf@u
  6253  001D48  C042  F052         	movff	floorf@x+1,floorf@u+1
  6254  001D4C  C043  F053         	movff	floorf@x+2,floorf@u+2
  6255  001D50  C044  F054         	movff	floorf@x+3,floorf@u+3
  6256  001D54  0E81               	movlw	129
  6257  001D56  6E45               	movwf	??_floorf^0,c
  6258  001D58  0EFF               	movlw	255
  6259  001D5A  6E46               	movwf	(??_floorf+1)^0,c
  6260  001D5C  C051  F047         	movff	floorf@u,??_floorf+2
  6261  001D60  C052  F048         	movff	floorf@u+1,??_floorf+3
  6262  001D64  C053  F049         	movff	floorf@u+2,??_floorf+4
  6263  001D68  C054  F04A         	movff	floorf@u+3,??_floorf+5
  6264  001D6C  0E18               	movlw	24
  6265  001D6E  D005               	goto	i2u340_40
  6266  001D70                     i2u340_45:
  6267  001D70  90D8               	bcf	status,0,c
  6268  001D72  324A               	rrcf	(??_floorf+5)^0,f,c
  6269  001D74  3249               	rrcf	(??_floorf+4)^0,f,c
  6270  001D76  3248               	rrcf	(??_floorf+3)^0,f,c
  6271  001D78  3247               	rrcf	(??_floorf+2)^0,f,c
  6272  001D7A                     i2u340_40:
  6273  001D7A  2EE8               	decfsz	wreg,f,c
  6274  001D7C  D7F9               	goto	i2u340_45
  6275  001D7E  5047               	movf	(??_floorf+2)^0,w,c
  6276  001D80  2445               	addwf	??_floorf^0,w,c
  6277  001D82  6E4F               	movwf	floorf@e^0,c
  6278  001D84  0E00               	movlw	0
  6279  001D86  2046               	addwfc	(??_floorf+1)^0,w,c
  6280  001D88  6E50               	movwf	(floorf@e+1)^0,c
  6281  001D8A  BE50               	btfsc	(floorf@e+1)^0,7,c
  6282  001D8C  D00F               	goto	i2l3545
  6283  001D8E  5050               	movf	(floorf@e+1)^0,w,c
  6284  001D90  E104               	bnz	i2u341_40
  6285  001D92  0E17               	movlw	23
  6286  001D94  5C4F               	subwf	floorf@e^0,w,c
  6287  001D96  A0D8               	btfss	status,0,c
  6288  001D98  D009               	goto	i2l3545
  6289  001D9A                     i2u341_40:
  6290  001D9A  C041  F041         	movff	floorf@x,?_floorf
  6291  001D9E  C042  F042         	movff	floorf@x+1,?_floorf+1
  6292  001DA2  C043  F043         	movff	floorf@x+2,?_floorf+2
  6293  001DA6  C044  F044         	movff	floorf@x+3,?_floorf+3
  6294  001DAA  0012               	return	
  6295  001DAC                     i2l3545:
  6296  001DAC  BE50               	btfsc	(floorf@e+1)^0,7,c
  6297  001DAE  D05E               	goto	i2l3555
  6298  001DB0  C04F  F045         	movff	floorf@e,??_floorf
  6299  001DB4  0EFF               	movlw	255
  6300  001DB6  6E46               	movwf	(??_floorf+1)^0,c
  6301  001DB8  0EFF               	movlw	255
  6302  001DBA  6E47               	movwf	(??_floorf+2)^0,c
  6303  001DBC  0E7F               	movlw	127
  6304  001DBE  6E48               	movwf	(??_floorf+3)^0,c
  6305  001DC0  0E00               	movlw	0
  6306  001DC2  6E49               	movwf	(??_floorf+4)^0,c
  6307  001DC4                     i2u343_45:
  6308  001DC4  6645               	tstfsz	??_floorf^0,c
  6309  001DC6  D001               	goto	i2u343_46
  6310  001DC8  D007               	goto	i2u343_47
  6311  001DCA                     i2u343_46:
  6312  001DCA  3449               	rlcf	(??_floorf+4)^0,w,c
  6313  001DCC  3249               	rrcf	(??_floorf+4)^0,f,c
  6314  001DCE  3248               	rrcf	(??_floorf+3)^0,f,c
  6315  001DD0  3247               	rrcf	(??_floorf+2)^0,f,c
  6316  001DD2  3246               	rrcf	(??_floorf+1)^0,f,c
  6317  001DD4  2E45               	decfsz	??_floorf^0,f,c
  6318  001DD6  D7F6               	goto	i2u343_45
  6319  001DD8                     i2u343_47:
  6320  001DD8  C046  F04B         	movff	??_floorf+1,floorf@m
  6321  001DDC  C047  F04C         	movff	??_floorf+2,floorf@m+1
  6322  001DE0  C048  F04D         	movff	??_floorf+3,floorf@m+2
  6323  001DE4  C049  F04E         	movff	??_floorf+4,floorf@m+3
  6324  001DE8  504B               	movf	floorf@m^0,w,c
  6325  001DEA  1451               	andwf	floorf@u^0,w,c
  6326  001DEC  6E45               	movwf	??_floorf^0,c
  6327  001DEE  504C               	movf	(floorf@m+1)^0,w,c
  6328  001DF0  1452               	andwf	(floorf@u+1)^0,w,c
  6329  001DF2  6E46               	movwf	(??_floorf+1)^0,c
  6330  001DF4  504D               	movf	(floorf@m+2)^0,w,c
  6331  001DF6  1453               	andwf	(floorf@u+2)^0,w,c
  6332  001DF8  6E47               	movwf	(??_floorf+2)^0,c
  6333  001DFA  504E               	movf	(floorf@m+3)^0,w,c
  6334  001DFC  1454               	andwf	(floorf@u+3)^0,w,c
  6335  001DFE  6E48               	movwf	(??_floorf+3)^0,c
  6336  001E00  5045               	movf	??_floorf^0,w,c
  6337  001E02  1046               	iorwf	(??_floorf+1)^0,w,c
  6338  001E04  1047               	iorwf	(??_floorf+2)^0,w,c
  6339  001E06  1048               	iorwf	(??_floorf+3)^0,w,c
  6340  001E08  B4D8               	btfsc	status,2,c
  6341  001E0A  D7C7               	goto	i2u341_40
  6342  001E0C  C051  F045         	movff	floorf@u,??_floorf
  6343  001E10  C052  F046         	movff	floorf@u+1,??_floorf+1
  6344  001E14  C053  F047         	movff	floorf@u+2,??_floorf+2
  6345  001E18  C054  F048         	movff	floorf@u+3,??_floorf+3
  6346  001E1C  0E20               	movlw	32
  6347  001E1E  D005               	goto	i2u345_40
  6348  001E20                     i2u345_45:
  6349  001E20  90D8               	bcf	status,0,c
  6350  001E22  3248               	rrcf	(??_floorf+3)^0,f,c
  6351  001E24  3247               	rrcf	(??_floorf+2)^0,f,c
  6352  001E26  3246               	rrcf	(??_floorf+1)^0,f,c
  6353  001E28  3245               	rrcf	??_floorf^0,f,c
  6354  001E2A                     i2u345_40:
  6355  001E2A  2EE8               	decfsz	wreg,f,c
  6356  001E2C  D7F9               	goto	i2u345_45
  6357  001E2E  5045               	movf	??_floorf^0,w,c
  6358  001E30  1046               	iorwf	(??_floorf+1)^0,w,c
  6359  001E32  1047               	iorwf	(??_floorf+2)^0,w,c
  6360  001E34  1048               	iorwf	(??_floorf+3)^0,w,c
  6361  001E36  B4D8               	btfsc	status,2,c
  6362  001E38  D008               	goto	i2l1180
  6363  001E3A  504B               	movf	floorf@m^0,w,c
  6364  001E3C  2651               	addwf	floorf@u^0,f,c
  6365  001E3E  504C               	movf	(floorf@m+1)^0,w,c
  6366  001E40  2252               	addwfc	(floorf@u+1)^0,f,c
  6367  001E42  504D               	movf	(floorf@m+2)^0,w,c
  6368  001E44  2253               	addwfc	(floorf@u+2)^0,f,c
  6369  001E46  504E               	movf	(floorf@m+3)^0,w,c
  6370  001E48  2254               	addwfc	(floorf@u+3)^0,f,c
  6371  001E4A                     i2l1180:
  6372  001E4A  1C4B               	comf	floorf@m^0,w,c
  6373  001E4C  6E45               	movwf	??_floorf^0,c
  6374  001E4E  1C4C               	comf	(floorf@m+1)^0,w,c
  6375  001E50  6E46               	movwf	(??_floorf+1)^0,c
  6376  001E52  1C4D               	comf	(floorf@m+2)^0,w,c
  6377  001E54  6E47               	movwf	(??_floorf+2)^0,c
  6378  001E56  1C4E               	comf	(floorf@m+3)^0,w,c
  6379  001E58  6E48               	movwf	(??_floorf+3)^0,c
  6380  001E5A  5045               	movf	??_floorf^0,w,c
  6381  001E5C  1651               	andwf	floorf@u^0,f,c
  6382  001E5E  5046               	movf	(??_floorf+1)^0,w,c
  6383  001E60  1652               	andwf	(floorf@u+1)^0,f,c
  6384  001E62  5047               	movf	(??_floorf+2)^0,w,c
  6385  001E64  1653               	andwf	(floorf@u+2)^0,f,c
  6386  001E66  5048               	movf	(??_floorf+3)^0,w,c
  6387  001E68  1654               	andwf	(floorf@u+3)^0,f,c
  6388  001E6A  D036               	goto	i2l3563
  6389  001E6C                     i2l3555:
  6390  001E6C  C051  F045         	movff	floorf@u,??_floorf
  6391  001E70  C052  F046         	movff	floorf@u+1,??_floorf+1
  6392  001E74  C053  F047         	movff	floorf@u+2,??_floorf+2
  6393  001E78  C054  F048         	movff	floorf@u+3,??_floorf+3
  6394  001E7C  0E20               	movlw	32
  6395  001E7E  D005               	goto	i2u347_40
  6396  001E80                     i2u347_45:
  6397  001E80  90D8               	bcf	status,0,c
  6398  001E82  3248               	rrcf	(??_floorf+3)^0,f,c
  6399  001E84  3247               	rrcf	(??_floorf+2)^0,f,c
  6400  001E86  3246               	rrcf	(??_floorf+1)^0,f,c
  6401  001E88  3245               	rrcf	??_floorf^0,f,c
  6402  001E8A                     i2u347_40:
  6403  001E8A  2EE8               	decfsz	wreg,f,c
  6404  001E8C  D7F9               	goto	i2u347_45
  6405  001E8E  5045               	movf	??_floorf^0,w,c
  6406  001E90  1046               	iorwf	(??_floorf+1)^0,w,c
  6407  001E92  1047               	iorwf	(??_floorf+2)^0,w,c
  6408  001E94  1048               	iorwf	(??_floorf+3)^0,w,c
  6409  001E96  A4D8               	btfss	status,2,c
  6410  001E98  D008               	goto	i2l3559
  6411  001E9A  0E00               	movlw	0
  6412  001E9C  6E51               	movwf	floorf@u^0,c
  6413  001E9E  0E00               	movlw	0
  6414  001EA0  6E52               	movwf	(floorf@u+1)^0,c
  6415  001EA2  0E00               	movlw	0
  6416  001EA4  6E53               	movwf	(floorf@u+2)^0,c
  6417  001EA6  0E00               	movlw	0
  6418  001EA8  D016               	goto	L6
  6419  001EAA                     i2l3559:
  6420  001EAA  90D8               	bcf	status,0,c
  6421  001EAC  3451               	rlcf	floorf@u^0,w,c
  6422  001EAE  6E45               	movwf	??_floorf^0,c
  6423  001EB0  3452               	rlcf	(floorf@u+1)^0,w,c
  6424  001EB2  6E46               	movwf	(??_floorf+1)^0,c
  6425  001EB4  3453               	rlcf	(floorf@u+2)^0,w,c
  6426  001EB6  6E47               	movwf	(??_floorf+2)^0,c
  6427  001EB8  3454               	rlcf	(floorf@u+3)^0,w,c
  6428  001EBA  6E48               	movwf	(??_floorf+3)^0,c
  6429  001EBC  5045               	movf	??_floorf^0,w,c
  6430  001EBE  1046               	iorwf	(??_floorf+1)^0,w,c
  6431  001EC0  1047               	iorwf	(??_floorf+2)^0,w,c
  6432  001EC2  1048               	iorwf	(??_floorf+3)^0,w,c
  6433  001EC4  B4D8               	btfsc	status,2,c
  6434  001EC6  D008               	goto	i2l3563
  6435  001EC8  0E00               	movlw	0
  6436  001ECA  6E51               	movwf	floorf@u^0,c
  6437  001ECC  0E00               	movlw	0
  6438  001ECE  6E52               	movwf	(floorf@u+1)^0,c
  6439  001ED0  0E80               	movlw	128
  6440  001ED2  6E53               	movwf	(floorf@u+2)^0,c
  6441  001ED4  0EBF               	movlw	191
  6442  001ED6                     L6:
  6443  001ED6  6E54               	movwf	(floorf@u+3)^0,c
  6444  001ED8                     i2l3563:
  6445  001ED8  C051  F041         	movff	floorf@u,?_floorf
  6446  001EDC  C052  F042         	movff	floorf@u+1,?_floorf+1
  6447  001EE0  C053  F043         	movff	floorf@u+2,?_floorf+2
  6448  001EE4  C054  F044         	movff	floorf@u+3,?_floorf+3
  6449  001EE8  0012               	return		;funcret
  6450  001EEA                     __end_of_floorf:
  6451                           	opt callstack 0
  6452                           
  6453 ;; *************** function ___fpclassifyf *****************
  6454 ;; Defined at:
  6455 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  x               4    0[COMRAM] float 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  u               4   10[COMRAM] struct .
  6460 ;;  e               2    8[COMRAM] int 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  2    0[COMRAM] int 
  6463 ;; Registers used:
  6464 ;;		wreg, status,2, status,0
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6470 ;;      Params:         4       0       0       0       0       0       0
  6471 ;;      Locals:         6       0       0       0       0       0       0
  6472 ;;      Temps:          4       0       0       0       0       0       0
  6473 ;;      Totals:        14       0       0       0       0       0       0
  6474 ;;Total ram usage:       14 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_efgtoa
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text35
  6484  00267A                     __ptext35:
  6485                           	opt callstack 0
  6486  00267A                     ___fpclassifyf:
  6487                           	opt callstack 18
  6488                           
  6489                           ;incstack = 0
  6490  00267A  C0DF  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6491  00267E  C0E0  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6492  002682  C0E1  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6493  002686  C0E2  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6494  00268A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6495  00268E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6496  002692  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6497  002696  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6498  00269A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6499  00269E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6500  0026A2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6501  0026A6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6502  0026AA  0E18               	movlw	24
  6503  0026AC  D005               	goto	i2u328_40
  6504  0026AE                     i2u328_45:
  6505  0026AE  90D8               	bcf	status,0,c
  6506  0026B0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6507  0026B2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6508  0026B4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6509  0026B6  3205               	rrcf	??___fpclassifyf^0,f,c
  6510  0026B8                     i2u328_40:
  6511  0026B8  2EE8               	decfsz	wreg,f,c
  6512  0026BA  D7F9               	goto	i2u328_45
  6513  0026BC  5005               	movf	??___fpclassifyf^0,w,c
  6514  0026BE  6E09               	movwf	___fpclassifyf@e^0,c
  6515  0026C0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6516  0026C2  5009               	movf	___fpclassifyf@e^0,w,c
  6517  0026C4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6518  0026C6  A4D8               	btfss	status,2,c
  6519  0026C8  D019               	goto	i2l3515
  6520  0026CA  90D8               	bcf	status,0,c
  6521  0026CC  340B               	rlcf	___fpclassifyf@u^0,w,c
  6522  0026CE  6E05               	movwf	??___fpclassifyf^0,c
  6523  0026D0  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6524  0026D2  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6525  0026D4  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6526  0026D6  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6527  0026D8  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6528  0026DA  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6529  0026DC  5005               	movf	??___fpclassifyf^0,w,c
  6530  0026DE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6531  0026E0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6532  0026E2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6533  0026E4  A4D8               	btfss	status,2,c
  6534  0026E6  D005               	goto	i2l3511
  6535  0026E8  0E00               	movlw	0
  6536  0026EA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6537  0026EC  0E02               	movlw	2
  6538  0026EE  6E01               	movwf	?___fpclassifyf^0,c
  6539  0026F0  0012               	return	
  6540  0026F2                     i2l3511:
  6541  0026F2  0E00               	movlw	0
  6542  0026F4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6543  0026F6  0E03               	movlw	3
  6544  0026F8  6E01               	movwf	?___fpclassifyf^0,c
  6545  0026FA  0012               	return	
  6546  0026FC                     i2l3515:
  6547  0026FC  2809               	incf	___fpclassifyf@e^0,w,c
  6548  0026FE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6549  002700  A4D8               	btfss	status,2,c
  6550  002702  D01C               	goto	i2l3521
  6551  002704  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6552  002708  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6553  00270C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6554  002710  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6555  002714  0E09               	movlw	9
  6556  002716                     i2u332_45:
  6557  002716  90D8               	bcf	status,0,c
  6558  002718  3605               	rlcf	??___fpclassifyf^0,f,c
  6559  00271A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6560  00271C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6561  00271E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6562  002720  2EE8               	decfsz	wreg,f,c
  6563  002722  D7F9               	goto	i2u332_45
  6564  002724  5005               	movf	??___fpclassifyf^0,w,c
  6565  002726  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6566  002728  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6567  00272A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6568  00272C  A4D8               	btfss	status,2,c
  6569  00272E  D002               	goto	i2u333_40
  6570  002730  0E01               	movlw	1
  6571  002732  D001               	goto	i2u334_40
  6572  002734                     i2u333_40:
  6573  002734  0E00               	movlw	0
  6574  002736                     i2u334_40:
  6575  002736  6E01               	movwf	?___fpclassifyf^0,c
  6576  002738  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6577  00273A  0012               	return	
  6578  00273C                     i2l3521:
  6579  00273C  0E00               	movlw	0
  6580  00273E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6581  002740  0E04               	movlw	4
  6582  002742  6E01               	movwf	?___fpclassifyf^0,c
  6583  002744  0012               	return		;funcret
  6584  002746                     __end_of___fpclassifyf:
  6585                           	opt callstack 0
  6586                           
  6587 ;; *************** function ___fltol *****************
  6588 ;; Defined at:
  6589 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;  f1              4    0[COMRAM] int 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  exp1            1    9[COMRAM] unsigned char 
  6594 ;;  sign1           1    8[COMRAM] unsigned char 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  4    0[COMRAM] long 
  6597 ;; Registers used:
  6598 ;;		wreg, status,2, status,0
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6604 ;;      Params:         4       0       0       0       0       0       0
  6605 ;;      Locals:         2       0       0       0       0       0       0
  6606 ;;      Temps:          4       0       0       0       0       0       0
  6607 ;;      Totals:        10       0       0       0       0       0       0
  6608 ;;Total ram usage:       10 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; This function calls:
  6611 ;;		Nothing
  6612 ;; This function is called by:
  6613 ;;		_efgtoa
  6614 ;;		_MQGetPercentage
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           	psect	text36
  6619  002746                     __ptext36:
  6620                           	opt callstack 0
  6621  002746                     ___fltol:
  6622                           	opt callstack 18
  6623                           
  6624                           ;incstack = 0
  6625  002746  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6626  002748  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6627  00274A  6E0A               	movwf	___fltol@exp1^0,c
  6628  00274C  500A               	movf	___fltol@exp1^0,w,c
  6629  00274E  A4D8               	btfss	status,2,c
  6630  002750  D009               	goto	i2l3947
  6631  002752                     i2u409_40:
  6632  002752  0E00               	movlw	0
  6633  002754  6E01               	movwf	?___fltol^0,c
  6634  002756  0E00               	movlw	0
  6635  002758  6E02               	movwf	(?___fltol+1)^0,c
  6636  00275A  0E00               	movlw	0
  6637  00275C  6E03               	movwf	(?___fltol+2)^0,c
  6638  00275E  0E00               	movlw	0
  6639  002760  6E04               	movwf	(?___fltol+3)^0,c
  6640  002762  0012               	return	
  6641  002764                     i2l3947:
  6642  002764  C001  F005         	movff	___fltol@f1,??___fltol
  6643  002768  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6644  00276C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6645  002770  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6646  002774  0E20               	movlw	32
  6647  002776  D005               	goto	i2u410_40
  6648  002778                     i2u410_45:
  6649  002778  90D8               	bcf	status,0,c
  6650  00277A  3208               	rrcf	(??___fltol+3)^0,f,c
  6651  00277C  3207               	rrcf	(??___fltol+2)^0,f,c
  6652  00277E  3206               	rrcf	(??___fltol+1)^0,f,c
  6653  002780  3205               	rrcf	??___fltol^0,f,c
  6654  002782                     i2u410_40:
  6655  002782  2EE8               	decfsz	wreg,f,c
  6656  002784  D7F9               	goto	i2u410_45
  6657  002786  5005               	movf	??___fltol^0,w,c
  6658  002788  6E09               	movwf	___fltol@sign1^0,c
  6659  00278A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6660  00278C  0EFF               	movlw	255
  6661  00278E  1601               	andwf	___fltol@f1^0,f,c
  6662  002790  0EFF               	movlw	255
  6663  002792  1602               	andwf	(___fltol@f1+1)^0,f,c
  6664  002794  0EFF               	movlw	255
  6665  002796  1603               	andwf	(___fltol@f1+2)^0,f,c
  6666  002798  0E00               	movlw	0
  6667  00279A  1604               	andwf	(___fltol@f1+3)^0,f,c
  6668  00279C  0E96               	movlw	150
  6669  00279E  5E0A               	subwf	___fltol@exp1^0,f,c
  6670  0027A0  AE0A               	btfss	___fltol@exp1^0,7,c
  6671  0027A2  D00D               	goto	i2l3967
  6672  0027A4  500A               	movf	___fltol@exp1^0,w,c
  6673  0027A6  0A80               	xorlw	128
  6674  0027A8  0F97               	addlw	151
  6675  0027AA  A0D8               	btfss	status,0,c
  6676  0027AC  D7D2               	goto	i2u409_40
  6677  0027AE                     i2l3963:
  6678  0027AE  90D8               	bcf	status,0,c
  6679  0027B0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6680  0027B2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6681  0027B4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6682  0027B6  3201               	rrcf	___fltol@f1^0,f,c
  6683  0027B8  3E0A               	incfsz	___fltol@exp1^0,f,c
  6684  0027BA  D7F9               	goto	i2l3963
  6685  0027BC  D00D               	goto	i2u414_40
  6686  0027BE                     i2l3967:
  6687  0027BE  0E1F               	movlw	31
  6688  0027C0  640A               	cpfsgt	___fltol@exp1^0,c
  6689  0027C2  D007               	goto	i2l3975
  6690  0027C4  D7C6               	goto	i2u409_40
  6691  0027C6                     i2l3973:
  6692  0027C6  90D8               	bcf	status,0,c
  6693  0027C8  3601               	rlcf	___fltol@f1^0,f,c
  6694  0027CA  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6695  0027CC  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6696  0027CE  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6697  0027D0  060A               	decf	___fltol@exp1^0,f,c
  6698  0027D2                     i2l3975:
  6699  0027D2  500A               	movf	___fltol@exp1^0,w,c
  6700  0027D4  A4D8               	btfss	status,2,c
  6701  0027D6  D7F7               	goto	i2l3973
  6702  0027D8                     i2u414_40:
  6703  0027D8  5009               	movf	___fltol@sign1^0,w,c
  6704  0027DA  B4D8               	btfsc	status,2,c
  6705  0027DC  D008               	goto	i2l3981
  6706  0027DE  1E04               	comf	(___fltol@f1+3)^0,f,c
  6707  0027E0  1E03               	comf	(___fltol@f1+2)^0,f,c
  6708  0027E2  1E02               	comf	(___fltol@f1+1)^0,f,c
  6709  0027E4  6C01               	negf	___fltol@f1^0,c
  6710  0027E6  0E00               	movlw	0
  6711  0027E8  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6712  0027EA  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6713  0027EC  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6714  0027EE                     i2l3981:
  6715  0027EE  C001  F001         	movff	___fltol@f1,?___fltol
  6716  0027F2  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6717  0027F6  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6718  0027FA  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6719  0027FE  0012               	return		;funcret
  6720  002800                     __end_of___fltol:
  6721                           	opt callstack 0
  6722                           
  6723 ;; *************** function ___flsub *****************
  6724 ;; Defined at:
  6725 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  b               4   39[COMRAM] long 
  6728 ;;  a               4   43[COMRAM] long 
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;		None
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  4   39[COMRAM] long 
  6733 ;; Registers used:
  6734 ;;		wreg, status,2, status,0, cstack
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6740 ;;      Params:         8       0       0       0       0       0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0
  6743 ;;      Totals:         8       0       0       0       0       0       0
  6744 ;;Total ram usage:        8 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; Hardware stack levels required when called:    1
  6747 ;; This function calls:
  6748 ;;		___fladd
  6749 ;; This function is called by:
  6750 ;;		_efgtoa
  6751 ;;		_MQGetPercentage
  6752 ;;		_powf
  6753 ;;		_logf
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text37
  6758  002F1C                     __ptext37:
  6759                           	opt callstack 0
  6760  002F1C                     ___flsub:
  6761                           	opt callstack 17
  6762                           
  6763                           ;incstack = 0
  6764  002F1C  0E00               	movlw	0
  6765  002F1E  1A2C               	xorwf	___flsub@a^0,f,c
  6766  002F20  0E00               	movlw	0
  6767  002F22  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  6768  002F24  0E00               	movlw	0
  6769  002F26  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  6770  002F28  0E80               	movlw	128
  6771  002F2A  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  6772  002F2C  C028  F001         	movff	___flsub@b,___fladd@b
  6773  002F30  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  6774  002F34  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  6775  002F38  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  6776  002F3C  C02C  F005         	movff	___flsub@a,___fladd@a
  6777  002F40  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  6778  002F44  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  6779  002F48  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  6780  002F4C  ECD0  F00B         	call	___fladd	;wreg free
  6781  002F50  C001  F028         	movff	?___fladd,?___flsub
  6782  002F54  C002  F029         	movff	?___fladd+1,?___flsub+1
  6783  002F58  C003  F02A         	movff	?___fladd+2,?___flsub+2
  6784  002F5C  C004  F02B         	movff	?___fladd+3,?___flsub+3
  6785  002F60  0012               	return		;funcret
  6786  002F62                     __end_of___flsub:
  6787                           	opt callstack 0
  6788                           
  6789 ;; *************** function ___fladd *****************
  6790 ;; Defined at:
  6791 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  b               4    0[COMRAM] long 
  6794 ;;  a               4    4[COMRAM] long 
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;  grs             1   15[COMRAM] unsigned char 
  6797 ;;  bexp            1   14[COMRAM] unsigned char 
  6798 ;;  aexp            1   13[COMRAM] unsigned char 
  6799 ;;  signs           1   12[COMRAM] unsigned char 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  4    0[COMRAM] unsigned char 
  6802 ;; Registers used:
  6803 ;;		wreg, status,2, status,0
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6809 ;;      Params:         8       0       0       0       0       0       0
  6810 ;;      Locals:         4       0       0       0       0       0       0
  6811 ;;      Temps:          4       0       0       0       0       0       0
  6812 ;;      Totals:        16       0       0       0       0       0       0
  6813 ;;Total ram usage:       16 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; This function calls:
  6816 ;;		Nothing
  6817 ;; This function is called by:
  6818 ;;		_efgtoa
  6819 ;;		___flsub
  6820 ;;		_MQGetPercentage
  6821 ;;		_powf
  6822 ;;		_sqrtf
  6823 ;;		_logf
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text38
  6828  0017A0                     __ptext38:
  6829                           	opt callstack 0
  6830  0017A0                     ___fladd:
  6831                           	opt callstack 17
  6832                           
  6833                           ;incstack = 0
  6834  0017A0  5004               	movf	(___fladd@b+3)^0,w,c
  6835  0017A2  0B80               	andlw	128
  6836  0017A4  6E0D               	movwf	___fladd@signs^0,c
  6837  0017A6  5004               	movf	(___fladd@b+3)^0,w,c
  6838  0017A8  2404               	addwf	(___fladd@b+3)^0,w,c
  6839  0017AA  6E0F               	movwf	___fladd@bexp^0,c
  6840  0017AC  BE03               	btfsc	(___fladd@b+2)^0,7,c
  6841  0017AE  800F               	bsf	___fladd@bexp^0,0,c
  6842  0017B0  500F               	movf	___fladd@bexp^0,w,c
  6843  0017B2  B4D8               	btfsc	status,2,c
  6844  0017B4  D00D               	goto	i2l3295
  6845  0017B6  280F               	incf	___fladd@bexp^0,w,c
  6846  0017B8  A4D8               	btfss	status,2,c
  6847  0017BA  D008               	goto	i2l3291
  6848  0017BC  0E00               	movlw	0
  6849  0017BE  6E01               	movwf	___fladd@b^0,c
  6850  0017C0  0E00               	movlw	0
  6851  0017C2  6E02               	movwf	(___fladd@b+1)^0,c
  6852  0017C4  0E00               	movlw	0
  6853  0017C6  6E03               	movwf	(___fladd@b+2)^0,c
  6854  0017C8  0E00               	movlw	0
  6855  0017CA  6E04               	movwf	(___fladd@b+3)^0,c
  6856  0017CC                     i2l3291:
  6857  0017CC  8E03               	bsf	(___fladd@b+2)^0,7,c
  6858  0017CE  D006               	goto	L7
  6859  0017D0                     i2l3295:
  6860  0017D0  0E00               	movlw	0
  6861  0017D2  6E01               	movwf	___fladd@b^0,c
  6862  0017D4  0E00               	movlw	0
  6863  0017D6  6E02               	movwf	(___fladd@b+1)^0,c
  6864  0017D8  0E00               	movlw	0
  6865  0017DA  6E03               	movwf	(___fladd@b+2)^0,c
  6866  0017DC                     L7:
  6867  0017DC  0E00               	movlw	0
  6868  0017DE  6E04               	movwf	(___fladd@b+3)^0,c
  6869  0017E0  5008               	movf	(___fladd@a+3)^0,w,c
  6870  0017E2  0B80               	andlw	128
  6871  0017E4  6E0E               	movwf	___fladd@aexp^0,c
  6872  0017E6  500D               	movf	___fladd@signs^0,w,c
  6873  0017E8  180E               	xorwf	___fladd@aexp^0,w,c
  6874  0017EA  A4D8               	btfss	status,2,c
  6875  0017EC  8C0D               	bsf	___fladd@signs^0,6,c
  6876  0017EE  5008               	movf	(___fladd@a+3)^0,w,c
  6877  0017F0  2408               	addwf	(___fladd@a+3)^0,w,c
  6878  0017F2  6E0E               	movwf	___fladd@aexp^0,c
  6879  0017F4  BE07               	btfsc	(___fladd@a+2)^0,7,c
  6880  0017F6  800E               	bsf	___fladd@aexp^0,0,c
  6881  0017F8  500E               	movf	___fladd@aexp^0,w,c
  6882  0017FA  B4D8               	btfsc	status,2,c
  6883  0017FC  D00D               	goto	i2l3319
  6884  0017FE  280E               	incf	___fladd@aexp^0,w,c
  6885  001800  A4D8               	btfss	status,2,c
  6886  001802  D008               	goto	i2l3315
  6887  001804  0E00               	movlw	0
  6888  001806  6E05               	movwf	___fladd@a^0,c
  6889  001808  0E00               	movlw	0
  6890  00180A  6E06               	movwf	(___fladd@a+1)^0,c
  6891  00180C  0E00               	movlw	0
  6892  00180E  6E07               	movwf	(___fladd@a+2)^0,c
  6893  001810  0E00               	movlw	0
  6894  001812  6E08               	movwf	(___fladd@a+3)^0,c
  6895  001814                     i2l3315:
  6896  001814  8E07               	bsf	(___fladd@a+2)^0,7,c
  6897  001816  D006               	goto	L8
  6898  001818                     i2l3319:
  6899  001818  0E00               	movlw	0
  6900  00181A  6E05               	movwf	___fladd@a^0,c
  6901  00181C  0E00               	movlw	0
  6902  00181E  6E06               	movwf	(___fladd@a+1)^0,c
  6903  001820  0E00               	movlw	0
  6904  001822  6E07               	movwf	(___fladd@a+2)^0,c
  6905  001824                     L8:
  6906  001824  0E00               	movlw	0
  6907  001826  6E08               	movwf	(___fladd@a+3)^0,c
  6908  001828  500F               	movf	___fladd@bexp^0,w,c
  6909  00182A  5C0E               	subwf	___fladd@aexp^0,w,c
  6910  00182C  B0D8               	btfsc	status,0,c
  6911  00182E  D022               	goto	i2l3357
  6912  001830  AC0D               	btfss	___fladd@signs^0,6,c
  6913  001832  D002               	goto	i2l3327
  6914  001834  0E80               	movlw	128
  6915  001836  1A0D               	xorwf	___fladd@signs^0,f,c
  6916  001838                     i2l3327:
  6917  001838  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6918  00183C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6919  001840  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6920  001844  C001  F010         	movff	___fladd@b,___fladd@grs
  6921  001848  C005  F001         	movff	___fladd@a,___fladd@b
  6922  00184C  C010  F005         	movff	___fladd@grs,___fladd@a
  6923  001850  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6924  001854  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6925  001858  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6926  00185C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6927  001860  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6928  001864  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6929  001868  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6930  00186C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6931  001870  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6932  001874                     i2l3357:
  6933  001874  0E00               	movlw	0
  6934  001876  6E10               	movwf	___fladd@grs^0,c
  6935  001878  500F               	movf	___fladd@bexp^0,w,c
  6936  00187A  C00E  F009         	movff	___fladd@aexp,??___fladd
  6937  00187E  6A0A               	clrf	(??___fladd+1)^0,c
  6938  001880  5E09               	subwf	??___fladd^0,f,c
  6939  001882  0E00               	movlw	0
  6940  001884  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6941  001886  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6942  001888  D02C               	goto	i2l987
  6943  00188A  500A               	movf	(??___fladd+1)^0,w,c
  6944  00188C  E104               	bnz	i2u294_40
  6945  00188E  0E1A               	movlw	26
  6946  001890  5C09               	subwf	??___fladd^0,w,c
  6947  001892  A0D8               	btfss	status,0,c
  6948  001894  D026               	goto	i2l987
  6949  001896                     i2u294_40:
  6950  001896  5001               	movf	___fladd@b^0,w,c
  6951  001898  1002               	iorwf	(___fladd@b+1)^0,w,c
  6952  00189A  1003               	iorwf	(___fladd@b+2)^0,w,c
  6953  00189C  1004               	iorwf	(___fladd@b+3)^0,w,c
  6954  00189E  B4D8               	btfsc	status,2,c
  6955  0018A0  D002               	goto	i2u295_40
  6956  0018A2  0E01               	movlw	1
  6957  0018A4  D001               	goto	i2u296_40
  6958  0018A6                     i2u295_40:
  6959  0018A6  0E00               	movlw	0
  6960  0018A8                     i2u296_40:
  6961  0018A8  6E10               	movwf	___fladd@grs^0,c
  6962  0018AA  0E00               	movlw	0
  6963  0018AC  6E01               	movwf	___fladd@b^0,c
  6964  0018AE  0E00               	movlw	0
  6965  0018B0  6E02               	movwf	(___fladd@b+1)^0,c
  6966  0018B2  0E00               	movlw	0
  6967  0018B4  6E03               	movwf	(___fladd@b+2)^0,c
  6968  0018B6  0E00               	movlw	0
  6969  0018B8  6E04               	movwf	(___fladd@b+3)^0,c
  6970  0018BA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6971  0018BE  D015               	goto	i2u299_40
  6972  0018C0                     i2l988:
  6973  0018C0  A010               	btfss	___fladd@grs^0,0,c
  6974  0018C2  D005               	goto	i2l3369
  6975  0018C4  90D8               	bcf	status,0,c
  6976  0018C6  3010               	rrcf	___fladd@grs^0,w,c
  6977  0018C8  0901               	iorlw	1
  6978  0018CA  6E10               	movwf	___fladd@grs^0,c
  6979  0018CC  D002               	goto	i2l3371
  6980  0018CE                     i2l3369:
  6981  0018CE  90D8               	bcf	status,0,c
  6982  0018D0  3210               	rrcf	___fladd@grs^0,f,c
  6983  0018D2                     i2l3371:
  6984  0018D2  B001               	btfsc	___fladd@b^0,0,c
  6985  0018D4  8E10               	bsf	___fladd@grs^0,7,c
  6986  0018D6  3404               	rlcf	(___fladd@b+3)^0,w,c
  6987  0018D8  3204               	rrcf	(___fladd@b+3)^0,f,c
  6988  0018DA  3203               	rrcf	(___fladd@b+2)^0,f,c
  6989  0018DC  3202               	rrcf	(___fladd@b+1)^0,f,c
  6990  0018DE  3201               	rrcf	___fladd@b^0,f,c
  6991  0018E0  2A0F               	incf	___fladd@bexp^0,f,c
  6992  0018E2                     i2l987:
  6993  0018E2  500E               	movf	___fladd@aexp^0,w,c
  6994  0018E4  5C0F               	subwf	___fladd@bexp^0,w,c
  6995  0018E6  A0D8               	btfss	status,0,c
  6996  0018E8  D7EB               	goto	i2l988
  6997  0018EA                     i2u299_40:
  6998  0018EA  BC0D               	btfsc	___fladd@signs^0,6,c
  6999  0018EC  D028               	goto	i2l3403
  7000  0018EE  500F               	movf	___fladd@bexp^0,w,c
  7001  0018F0  A4D8               	btfss	status,2,c
  7002  0018F2  D009               	goto	i2l3385
  7003  0018F4  0E00               	movlw	0
  7004  0018F6  6E01               	movwf	?___fladd^0,c
  7005  0018F8  0E00               	movlw	0
  7006  0018FA  6E02               	movwf	(?___fladd+1)^0,c
  7007  0018FC  0E00               	movlw	0
  7008  0018FE  6E03               	movwf	(?___fladd+2)^0,c
  7009  001900  0E00               	movlw	0
  7010  001902  6E04               	movwf	(?___fladd+3)^0,c
  7011  001904  0012               	return	
  7012  001906                     i2l3385:
  7013  001906  5005               	movf	___fladd@a^0,w,c
  7014  001908  2601               	addwf	___fladd@b^0,f,c
  7015  00190A  5006               	movf	(___fladd@a+1)^0,w,c
  7016  00190C  2202               	addwfc	(___fladd@b+1)^0,f,c
  7017  00190E  5007               	movf	(___fladd@a+2)^0,w,c
  7018  001910  2203               	addwfc	(___fladd@b+2)^0,f,c
  7019  001912  5008               	movf	(___fladd@a+3)^0,w,c
  7020  001914  2204               	addwfc	(___fladd@b+3)^0,f,c
  7021  001916  A004               	btfss	(___fladd@b+3)^0,0,c
  7022  001918  D071               	goto	i2u312_40
  7023  00191A  A010               	btfss	___fladd@grs^0,0,c
  7024  00191C  D005               	goto	i2l3393
  7025  00191E  90D8               	bcf	status,0,c
  7026  001920  3010               	rrcf	___fladd@grs^0,w,c
  7027  001922  0901               	iorlw	1
  7028  001924  6E10               	movwf	___fladd@grs^0,c
  7029  001926  D002               	goto	i2l3395
  7030  001928                     i2l3393:
  7031  001928  90D8               	bcf	status,0,c
  7032  00192A  3210               	rrcf	___fladd@grs^0,f,c
  7033  00192C                     i2l3395:
  7034  00192C  B001               	btfsc	___fladd@b^0,0,c
  7035  00192E  8E10               	bsf	___fladd@grs^0,7,c
  7036  001930  3404               	rlcf	(___fladd@b+3)^0,w,c
  7037  001932  3204               	rrcf	(___fladd@b+3)^0,f,c
  7038  001934  3203               	rrcf	(___fladd@b+2)^0,f,c
  7039  001936  3202               	rrcf	(___fladd@b+1)^0,f,c
  7040  001938  3201               	rrcf	___fladd@b^0,f,c
  7041  00193A  2A0F               	incf	___fladd@bexp^0,f,c
  7042  00193C  D05F               	goto	i2u312_40
  7043  00193E                     i2l3403:
  7044  00193E  5005               	movf	___fladd@a^0,w,c
  7045  001940  5C01               	subwf	___fladd@b^0,w,c
  7046  001942  5006               	movf	(___fladd@a+1)^0,w,c
  7047  001944  5802               	subwfb	(___fladd@b+1)^0,w,c
  7048  001946  5007               	movf	(___fladd@a+2)^0,w,c
  7049  001948  5803               	subwfb	(___fladd@b+2)^0,w,c
  7050  00194A  5004               	movf	(___fladd@b+3)^0,w,c
  7051  00194C  0A80               	xorlw	128
  7052  00194E  6E09               	movwf	??___fladd^0,c
  7053  001950  5008               	movf	(___fladd@a+3)^0,w,c
  7054  001952  0A80               	xorlw	128
  7055  001954  5809               	subwfb	??___fladd^0,w,c
  7056  001956  B0D8               	btfsc	status,0,c
  7057  001958  D025               	goto	i2l3413
  7058  00195A  5001               	movf	___fladd@b^0,w,c
  7059  00195C  5C05               	subwf	___fladd@a^0,w,c
  7060  00195E  6E09               	movwf	??___fladd^0,c
  7061  001960  5002               	movf	(___fladd@b+1)^0,w,c
  7062  001962  5806               	subwfb	(___fladd@a+1)^0,w,c
  7063  001964  6E0A               	movwf	(??___fladd+1)^0,c
  7064  001966  5003               	movf	(___fladd@b+2)^0,w,c
  7065  001968  5807               	subwfb	(___fladd@a+2)^0,w,c
  7066  00196A  6E0B               	movwf	(??___fladd+2)^0,c
  7067  00196C  5004               	movf	(___fladd@b+3)^0,w,c
  7068  00196E  5808               	subwfb	(___fladd@a+3)^0,w,c
  7069  001970  6E0C               	movwf	(??___fladd+3)^0,c
  7070  001972  0EFF               	movlw	255
  7071  001974  2409               	addwf	??___fladd^0,w,c
  7072  001976  6E01               	movwf	___fladd@b^0,c
  7073  001978  0EFF               	movlw	255
  7074  00197A  200A               	addwfc	(??___fladd+1)^0,w,c
  7075  00197C  6E02               	movwf	(___fladd@b+1)^0,c
  7076  00197E  0EFF               	movlw	255
  7077  001980  200B               	addwfc	(??___fladd+2)^0,w,c
  7078  001982  6E03               	movwf	(___fladd@b+2)^0,c
  7079  001984  0EFF               	movlw	255
  7080  001986  200C               	addwfc	(??___fladd+3)^0,w,c
  7081  001988  6E04               	movwf	(___fladd@b+3)^0,c
  7082  00198A  0E80               	movlw	128
  7083  00198C  1A0D               	xorwf	___fladd@signs^0,f,c
  7084  00198E  6C10               	negf	___fladd@grs^0,c
  7085  001990  5010               	movf	___fladd@grs^0,w,c
  7086  001992  A4D8               	btfss	status,2,c
  7087  001994  D00F               	goto	i2l1003
  7088  001996  0E01               	movlw	1
  7089  001998  2601               	addwf	___fladd@b^0,f,c
  7090  00199A  0E00               	movlw	0
  7091  00199C  2202               	addwfc	(___fladd@b+1)^0,f,c
  7092  00199E  2203               	addwfc	(___fladd@b+2)^0,f,c
  7093  0019A0  2204               	addwfc	(___fladd@b+3)^0,f,c
  7094  0019A2  D008               	goto	i2l1003
  7095  0019A4                     i2l3413:
  7096  0019A4  5005               	movf	___fladd@a^0,w,c
  7097  0019A6  5E01               	subwf	___fladd@b^0,f,c
  7098  0019A8  5006               	movf	(___fladd@a+1)^0,w,c
  7099  0019AA  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7100  0019AC  5007               	movf	(___fladd@a+2)^0,w,c
  7101  0019AE  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7102  0019B0  5008               	movf	(___fladd@a+3)^0,w,c
  7103  0019B2  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7104  0019B4                     i2l1003:
  7105  0019B4  5001               	movf	___fladd@b^0,w,c
  7106  0019B6  1002               	iorwf	(___fladd@b+1)^0,w,c
  7107  0019B8  1003               	iorwf	(___fladd@b+2)^0,w,c
  7108  0019BA  1004               	iorwf	(___fladd@b+3)^0,w,c
  7109  0019BC  A4D8               	btfss	status,2,c
  7110  0019BE  D01C               	goto	i2l3437
  7111  0019C0  5010               	movf	___fladd@grs^0,w,c
  7112  0019C2  A4D8               	btfss	status,2,c
  7113  0019C4  D019               	goto	i2l3437
  7114  0019C6  0E00               	movlw	0
  7115  0019C8  6E01               	movwf	?___fladd^0,c
  7116  0019CA  0E00               	movlw	0
  7117  0019CC  6E02               	movwf	(?___fladd+1)^0,c
  7118  0019CE  0E00               	movlw	0
  7119  0019D0  6E03               	movwf	(?___fladd+2)^0,c
  7120  0019D2  0E00               	movlw	0
  7121  0019D4  6E04               	movwf	(?___fladd+3)^0,c
  7122  0019D6  0012               	return	
  7123  0019D8                     i2l3421:
  7124  0019D8  90D8               	bcf	status,0,c
  7125  0019DA  3601               	rlcf	___fladd@b^0,f,c
  7126  0019DC  3602               	rlcf	(___fladd@b+1)^0,f,c
  7127  0019DE  3603               	rlcf	(___fladd@b+2)^0,f,c
  7128  0019E0  3604               	rlcf	(___fladd@b+3)^0,f,c
  7129  0019E2  BE10               	btfsc	___fladd@grs^0,7,c
  7130  0019E4  8001               	bsf	___fladd@b^0,0,c
  7131  0019E6  A010               	btfss	___fladd@grs^0,0,c
  7132  0019E8  D002               	goto	i2l3431
  7133  0019EA  80D8               	bsf	status,0,c
  7134  0019EC  D001               	goto	L9
  7135  0019EE                     i2l3431:
  7136  0019EE  90D8               	bcf	status,0,c
  7137  0019F0                     L9:
  7138  0019F0  3610               	rlcf	___fladd@grs^0,f,c
  7139  0019F2  500F               	movf	___fladd@bexp^0,w,c
  7140  0019F4  A4D8               	btfss	status,2,c
  7141  0019F6  060F               	decf	___fladd@bexp^0,f,c
  7142  0019F8                     i2l3437:
  7143  0019F8  AE03               	btfss	(___fladd@b+2)^0,7,c
  7144  0019FA  D7EE               	goto	i2l3421
  7145  0019FC                     i2u312_40:
  7146  0019FC  0E00               	movlw	0
  7147  0019FE  6E0E               	movwf	___fladd@aexp^0,c
  7148  001A00  AE10               	btfss	___fladd@grs^0,7,c
  7149  001A02  D00B               	goto	i2l1012
  7150  001A04  C010  F009         	movff	___fladd@grs,??___fladd
  7151  001A08  0E7F               	movlw	127
  7152  001A0A  1609               	andwf	??___fladd^0,f,c
  7153  001A0C  B4D8               	btfsc	status,2,c
  7154  001A0E  D003               	goto	i2l1013
  7155  001A10                     i2u314_40:
  7156  001A10  0E01               	movlw	1
  7157  001A12  6E0E               	movwf	___fladd@aexp^0,c
  7158  001A14  D002               	goto	i2l1012
  7159  001A16                     i2l1013:
  7160  001A16  B001               	btfsc	___fladd@b^0,0,c
  7161  001A18  D7FB               	goto	i2u314_40
  7162  001A1A                     i2l1012:
  7163  001A1A  500E               	movf	___fladd@aexp^0,w,c
  7164  001A1C  B4D8               	btfsc	status,2,c
  7165  001A1E  D020               	goto	i2l3457
  7166  001A20  0E01               	movlw	1
  7167  001A22  2601               	addwf	___fladd@b^0,f,c
  7168  001A24  0E00               	movlw	0
  7169  001A26  2202               	addwfc	(___fladd@b+1)^0,f,c
  7170  001A28  2203               	addwfc	(___fladd@b+2)^0,f,c
  7171  001A2A  2204               	addwfc	(___fladd@b+3)^0,f,c
  7172  001A2C  A004               	btfss	(___fladd@b+3)^0,0,c
  7173  001A2E  D018               	goto	i2l3457
  7174  001A30  C001  F009         	movff	___fladd@b,??___fladd
  7175  001A34  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7176  001A38  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7177  001A3C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7178  001A40  340C               	rlcf	(??___fladd+3)^0,w,c
  7179  001A42  320C               	rrcf	(??___fladd+3)^0,f,c
  7180  001A44  320B               	rrcf	(??___fladd+2)^0,f,c
  7181  001A46  320A               	rrcf	(??___fladd+1)^0,f,c
  7182  001A48  3209               	rrcf	??___fladd^0,f,c
  7183  001A4A  C009  F001         	movff	??___fladd,___fladd@b
  7184  001A4E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7185  001A52  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7186  001A56  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7187  001A5A  280F               	incf	___fladd@bexp^0,w,c
  7188  001A5C  A4D8               	btfss	status,2,c
  7189  001A5E  2A0F               	incf	___fladd@bexp^0,f,c
  7190  001A60                     i2l3457:
  7191  001A60  280F               	incf	___fladd@bexp^0,w,c
  7192  001A62  B4D8               	btfsc	status,2,c
  7193  001A64  D003               	goto	i2u320_40
  7194  001A66  500F               	movf	___fladd@bexp^0,w,c
  7195  001A68  A4D8               	btfss	status,2,c
  7196  001A6A  D00D               	goto	i2l3465
  7197  001A6C                     i2u320_40:
  7198  001A6C  0E00               	movlw	0
  7199  001A6E  6E01               	movwf	___fladd@b^0,c
  7200  001A70  0E00               	movlw	0
  7201  001A72  6E02               	movwf	(___fladd@b+1)^0,c
  7202  001A74  0E00               	movlw	0
  7203  001A76  6E03               	movwf	(___fladd@b+2)^0,c
  7204  001A78  0E00               	movlw	0
  7205  001A7A  6E04               	movwf	(___fladd@b+3)^0,c
  7206  001A7C  500F               	movf	___fladd@bexp^0,w,c
  7207  001A7E  A4D8               	btfss	status,2,c
  7208  001A80  D002               	goto	i2l3465
  7209  001A82  0E00               	movlw	0
  7210  001A84  6E0D               	movwf	___fladd@signs^0,c
  7211  001A86                     i2l3465:
  7212  001A86  A00F               	btfss	___fladd@bexp^0,0,c
  7213  001A88  D002               	goto	i2l3469
  7214  001A8A  8E03               	bsf	(___fladd@b+2)^0,7,c
  7215  001A8C  D001               	goto	i2l3471
  7216  001A8E                     i2l3469:
  7217  001A8E  9E03               	bcf	(___fladd@b+2)^0,7,c
  7218  001A90                     i2l3471:
  7219  001A90  90D8               	bcf	status,0,c
  7220  001A92  300F               	rrcf	___fladd@bexp^0,w,c
  7221  001A94  6E04               	movwf	(___fladd@b+3)^0,c
  7222  001A96  BE0D               	btfsc	___fladd@signs^0,7,c
  7223  001A98  8E04               	bsf	(___fladd@b+3)^0,7,c
  7224  001A9A  C001  F001         	movff	___fladd@b,?___fladd
  7225  001A9E  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7226  001AA2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7227  001AA6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7228  001AAA  0012               	return		;funcret
  7229  001AAC                     __end_of___fladd:
  7230                           	opt callstack 0
  7231                           
  7232 ;; *************** function ___flneg *****************
  7233 ;; Defined at:
  7234 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  f1              4    0[COMRAM] unsigned char 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;		None
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  4    0[COMRAM] unsigned char 
  7241 ;; Registers used:
  7242 ;;		wreg, status,2, status,0
  7243 ;; Tracked objects:
  7244 ;;		On entry : 0/0
  7245 ;;		On exit  : 0/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7248 ;;      Params:         4       0       0       0       0       0       0
  7249 ;;      Locals:         0       0       0       0       0       0       0
  7250 ;;      Temps:          0       0       0       0       0       0       0
  7251 ;;      Totals:         4       0       0       0       0       0       0
  7252 ;;Total ram usage:        4 bytes
  7253 ;; Hardware stack levels used:    1
  7254 ;; This function calls:
  7255 ;;		Nothing
  7256 ;; This function is called by:
  7257 ;;		_efgtoa
  7258 ;;		_powf
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text39
  7263  0030C6                     __ptext39:
  7264                           	opt callstack 0
  7265  0030C6                     ___flneg:
  7266                           	opt callstack 18
  7267                           
  7268                           ;incstack = 0
  7269  0030C6  5001               	movf	___flneg@f1^0,w,c
  7270  0030C8  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7271  0030CA  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7272  0030CC  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7273  0030CE  B4D8               	btfsc	status,2,c
  7274  0030D0  D008               	goto	i2l3937
  7275  0030D2  0E00               	movlw	0
  7276  0030D4  1A01               	xorwf	___flneg@f1^0,f,c
  7277  0030D6  0E00               	movlw	0
  7278  0030D8  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7279  0030DA  0E00               	movlw	0
  7280  0030DC  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7281  0030DE  0E80               	movlw	128
  7282  0030E0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7283  0030E2                     i2l3937:
  7284  0030E2  C001  F001         	movff	___flneg@f1,?___flneg
  7285  0030E6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7286  0030EA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7287  0030EE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7288  0030F2  0012               	return		;funcret
  7289  0030F4                     __end_of___flneg:
  7290                           	opt callstack 0
  7291                           
  7292 ;; *************** function ___flge *****************
  7293 ;; Defined at:
  7294 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  ff1             4   39[COMRAM] unsigned char 
  7297 ;;  ff2             4   43[COMRAM] unsigned char 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;		None               void
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7309 ;;      Params:         8       0       0       0       0       0       0
  7310 ;;      Locals:         0       0       0       0       0       0       0
  7311 ;;      Temps:          4       0       0       0       0       0       0
  7312 ;;      Totals:        12       0       0       0       0       0       0
  7313 ;;Total ram usage:       12 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_efgtoa
  7319 ;;		_powf
  7320 ;;		_sqrtf
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           	psect	text40
  7325  0025AA                     __ptext40:
  7326                           	opt callstack 0
  7327  0025AA                     ___flge:
  7328                           	opt callstack 18
  7329                           
  7330                           ;incstack = 0
  7331  0025AA  0E00               	movlw	0
  7332  0025AC  1428               	andwf	___flge@ff1^0,w,c
  7333  0025AE  6E30               	movwf	??___flge^0,c
  7334  0025B0  0E00               	movlw	0
  7335  0025B2  1429               	andwf	(___flge@ff1+1)^0,w,c
  7336  0025B4  6E31               	movwf	(??___flge+1)^0,c
  7337  0025B6  0E80               	movlw	128
  7338  0025B8  142A               	andwf	(___flge@ff1+2)^0,w,c
  7339  0025BA  6E32               	movwf	(??___flge+2)^0,c
  7340  0025BC  0E7F               	movlw	127
  7341  0025BE  142B               	andwf	(___flge@ff1+3)^0,w,c
  7342  0025C0  6E33               	movwf	(??___flge+3)^0,c
  7343  0025C2  5030               	movf	??___flge^0,w,c
  7344  0025C4  1031               	iorwf	(??___flge+1)^0,w,c
  7345  0025C6  1032               	iorwf	(??___flge+2)^0,w,c
  7346  0025C8  1033               	iorwf	(??___flge+3)^0,w,c
  7347  0025CA  A4D8               	btfss	status,2,c
  7348  0025CC  D008               	goto	i2l3915
  7349  0025CE  0E00               	movlw	0
  7350  0025D0  6E28               	movwf	___flge@ff1^0,c
  7351  0025D2  0E00               	movlw	0
  7352  0025D4  6E29               	movwf	(___flge@ff1+1)^0,c
  7353  0025D6  0E00               	movlw	0
  7354  0025D8  6E2A               	movwf	(___flge@ff1+2)^0,c
  7355  0025DA  0E00               	movlw	0
  7356  0025DC  6E2B               	movwf	(___flge@ff1+3)^0,c
  7357  0025DE                     i2l3915:
  7358  0025DE  0E00               	movlw	0
  7359  0025E0  142C               	andwf	___flge@ff2^0,w,c
  7360  0025E2  6E30               	movwf	??___flge^0,c
  7361  0025E4  0E00               	movlw	0
  7362  0025E6  142D               	andwf	(___flge@ff2+1)^0,w,c
  7363  0025E8  6E31               	movwf	(??___flge+1)^0,c
  7364  0025EA  0E80               	movlw	128
  7365  0025EC  142E               	andwf	(___flge@ff2+2)^0,w,c
  7366  0025EE  6E32               	movwf	(??___flge+2)^0,c
  7367  0025F0  0E7F               	movlw	127
  7368  0025F2  142F               	andwf	(___flge@ff2+3)^0,w,c
  7369  0025F4  6E33               	movwf	(??___flge+3)^0,c
  7370  0025F6  5030               	movf	??___flge^0,w,c
  7371  0025F8  1031               	iorwf	(??___flge+1)^0,w,c
  7372  0025FA  1032               	iorwf	(??___flge+2)^0,w,c
  7373  0025FC  1033               	iorwf	(??___flge+3)^0,w,c
  7374  0025FE  A4D8               	btfss	status,2,c
  7375  002600  D008               	goto	i2l3919
  7376  002602  0E00               	movlw	0
  7377  002604  6E2C               	movwf	___flge@ff2^0,c
  7378  002606  0E00               	movlw	0
  7379  002608  6E2D               	movwf	(___flge@ff2+1)^0,c
  7380  00260A  0E00               	movlw	0
  7381  00260C  6E2E               	movwf	(___flge@ff2+2)^0,c
  7382  00260E  0E00               	movlw	0
  7383  002610  6E2F               	movwf	(___flge@ff2+3)^0,c
  7384  002612                     i2l3919:
  7385  002612  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  7386  002614  D009               	goto	i2l3923
  7387  002616  6C28               	negf	___flge@ff1^0,c
  7388  002618  1E29               	comf	(___flge@ff1+1)^0,f,c
  7389  00261A  B0D8               	btfsc	status,0,c
  7390  00261C  2A29               	incf	(___flge@ff1+1)^0,f,c
  7391  00261E  1E2A               	comf	(___flge@ff1+2)^0,f,c
  7392  002620  B0D8               	btfsc	status,0,c
  7393  002622  2A2A               	incf	(___flge@ff1+2)^0,f,c
  7394  002624  0E80               	movlw	128
  7395  002626  562B               	subfwb	(___flge@ff1+3)^0,f,c
  7396  002628                     i2l3923:
  7397  002628  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  7398  00262A  D009               	goto	i2l723
  7399  00262C  6C2C               	negf	___flge@ff2^0,c
  7400  00262E  1E2D               	comf	(___flge@ff2+1)^0,f,c
  7401  002630  B0D8               	btfsc	status,0,c
  7402  002632  2A2D               	incf	(___flge@ff2+1)^0,f,c
  7403  002634  1E2E               	comf	(___flge@ff2+2)^0,f,c
  7404  002636  B0D8               	btfsc	status,0,c
  7405  002638  2A2E               	incf	(___flge@ff2+2)^0,f,c
  7406  00263A  0E80               	movlw	128
  7407  00263C  562F               	subfwb	(___flge@ff2+3)^0,f,c
  7408  00263E                     i2l723:
  7409  00263E  0E00               	movlw	0
  7410  002640  1A28               	xorwf	___flge@ff1^0,f,c
  7411  002642  0E00               	movlw	0
  7412  002644  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  7413  002646  0E00               	movlw	0
  7414  002648  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  7415  00264A  0E80               	movlw	128
  7416  00264C  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  7417  00264E  0E00               	movlw	0
  7418  002650  1A2C               	xorwf	___flge@ff2^0,f,c
  7419  002652  0E00               	movlw	0
  7420  002654  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  7421  002656  0E00               	movlw	0
  7422  002658  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  7423  00265A  0E80               	movlw	128
  7424  00265C  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  7425  00265E  502C               	movf	___flge@ff2^0,w,c
  7426  002660  5C28               	subwf	___flge@ff1^0,w,c
  7427  002662  502D               	movf	(___flge@ff2+1)^0,w,c
  7428  002664  5829               	subwfb	(___flge@ff1+1)^0,w,c
  7429  002666  502E               	movf	(___flge@ff2+2)^0,w,c
  7430  002668  582A               	subwfb	(___flge@ff1+2)^0,w,c
  7431  00266A  502F               	movf	(___flge@ff2+3)^0,w,c
  7432  00266C  582B               	subwfb	(___flge@ff1+3)^0,w,c
  7433  00266E  B0D8               	btfsc	status,0,c
  7434  002670  D002               	goto	i2l3929
  7435  002672  90D8               	bcf	status,0,c
  7436  002674  0012               	return	
  7437  002676                     i2l3929:
  7438  002676  80D8               	bsf	status,0,c
  7439  002678  0012               	return		;funcret
  7440  00267A                     __end_of___flge:
  7441                           	opt callstack 0
  7442                           
  7443 ;; *************** function ___fleq *****************
  7444 ;; Defined at:
  7445 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  ff1             4    0[COMRAM] unsigned char 
  7448 ;;  ff2             4    4[COMRAM] unsigned char 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;		None
  7451 ;; Return value:  Size  Location     Type
  7452 ;;		None               void
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7460 ;;      Params:         8       0       0       0       0       0       0
  7461 ;;      Locals:         0       0       0       0       0       0       0
  7462 ;;      Temps:          4       0       0       0       0       0       0
  7463 ;;      Totals:        12       0       0       0       0       0       0
  7464 ;;Total ram usage:       12 bytes
  7465 ;; Hardware stack levels used:    1
  7466 ;; This function calls:
  7467 ;;		Nothing
  7468 ;; This function is called by:
  7469 ;;		_efgtoa
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text41
  7474  0029DC                     __ptext41:
  7475                           	opt callstack 0
  7476  0029DC                     ___fleq:
  7477                           	opt callstack 18
  7478                           
  7479                           ;incstack = 0
  7480  0029DC  0E00               	movlw	0
  7481  0029DE  1401               	andwf	___fleq@ff1^0,w,c
  7482  0029E0  6E09               	movwf	??___fleq^0,c
  7483  0029E2  0E00               	movlw	0
  7484  0029E4  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7485  0029E6  6E0A               	movwf	(??___fleq+1)^0,c
  7486  0029E8  0E80               	movlw	128
  7487  0029EA  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7488  0029EC  6E0B               	movwf	(??___fleq+2)^0,c
  7489  0029EE  0E7F               	movlw	127
  7490  0029F0  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7491  0029F2  6E0C               	movwf	(??___fleq+3)^0,c
  7492  0029F4  5009               	movf	??___fleq^0,w,c
  7493  0029F6  100A               	iorwf	(??___fleq+1)^0,w,c
  7494  0029F8  100B               	iorwf	(??___fleq+2)^0,w,c
  7495  0029FA  100C               	iorwf	(??___fleq+3)^0,w,c
  7496  0029FC  A4D8               	btfss	status,2,c
  7497  0029FE  D008               	goto	i2l3899
  7498  002A00  0E00               	movlw	0
  7499  002A02  6E01               	movwf	___fleq@ff1^0,c
  7500  002A04  0E00               	movlw	0
  7501  002A06  6E02               	movwf	(___fleq@ff1+1)^0,c
  7502  002A08  0E00               	movlw	0
  7503  002A0A  6E03               	movwf	(___fleq@ff1+2)^0,c
  7504  002A0C  0E00               	movlw	0
  7505  002A0E  6E04               	movwf	(___fleq@ff1+3)^0,c
  7506  002A10                     i2l3899:
  7507  002A10  0E00               	movlw	0
  7508  002A12  1405               	andwf	___fleq@ff2^0,w,c
  7509  002A14  6E09               	movwf	??___fleq^0,c
  7510  002A16  0E00               	movlw	0
  7511  002A18  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7512  002A1A  6E0A               	movwf	(??___fleq+1)^0,c
  7513  002A1C  0E80               	movlw	128
  7514  002A1E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7515  002A20  6E0B               	movwf	(??___fleq+2)^0,c
  7516  002A22  0E7F               	movlw	127
  7517  002A24  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7518  002A26  6E0C               	movwf	(??___fleq+3)^0,c
  7519  002A28  5009               	movf	??___fleq^0,w,c
  7520  002A2A  100A               	iorwf	(??___fleq+1)^0,w,c
  7521  002A2C  100B               	iorwf	(??___fleq+2)^0,w,c
  7522  002A2E  100C               	iorwf	(??___fleq+3)^0,w,c
  7523  002A30  A4D8               	btfss	status,2,c
  7524  002A32  D008               	goto	i2l3903
  7525  002A34  0E00               	movlw	0
  7526  002A36  6E05               	movwf	___fleq@ff2^0,c
  7527  002A38  0E00               	movlw	0
  7528  002A3A  6E06               	movwf	(___fleq@ff2+1)^0,c
  7529  002A3C  0E00               	movlw	0
  7530  002A3E  6E07               	movwf	(___fleq@ff2+2)^0,c
  7531  002A40  0E00               	movlw	0
  7532  002A42  6E08               	movwf	(___fleq@ff2+3)^0,c
  7533  002A44                     i2l3903:
  7534  002A44  5005               	movf	___fleq@ff2^0,w,c
  7535  002A46  1801               	xorwf	___fleq@ff1^0,w,c
  7536  002A48  E10A               	bnz	i2u402_40
  7537  002A4A  5006               	movf	(___fleq@ff2+1)^0,w,c
  7538  002A4C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7539  002A4E  E107               	bnz	i2u402_40
  7540  002A50  5007               	movf	(___fleq@ff2+2)^0,w,c
  7541  002A52  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7542  002A54  E104               	bnz	i2u402_40
  7543  002A56  5008               	movf	(___fleq@ff2+3)^0,w,c
  7544  002A58  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7545  002A5A  B4D8               	btfsc	status,2,c
  7546  002A5C  D002               	goto	i2l3907
  7547  002A5E                     i2u402_40:
  7548  002A5E  90D8               	bcf	status,0,c
  7549  002A60  0012               	return	
  7550  002A62                     i2l3907:
  7551  002A62  80D8               	bsf	status,0,c
  7552  002A64  0012               	return		;funcret
  7553  002A66                     __end_of___fleq:
  7554                           	opt callstack 0
  7555                           
  7556 ;; *************** function ___awdiv *****************
  7557 ;; Defined at:
  7558 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  dividend        2    0[COMRAM] int 
  7561 ;;  divisor         2    2[COMRAM] int 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;  quotient        2    6[COMRAM] int 
  7564 ;;  sign            1    5[COMRAM] unsigned char 
  7565 ;;  counter         1    4[COMRAM] unsigned char 
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  2    0[COMRAM] int 
  7568 ;; Registers used:
  7569 ;;		wreg, status,2, status,0
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7575 ;;      Params:         4       0       0       0       0       0       0
  7576 ;;      Locals:         4       0       0       0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0
  7578 ;;      Totals:         8       0       0       0       0       0       0
  7579 ;;Total ram usage:        8 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; This function calls:
  7582 ;;		Nothing
  7583 ;; This function is called by:
  7584 ;;		_efgtoa
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           	psect	text42
  7589  002A66                     __ptext42:
  7590                           	opt callstack 0
  7591  002A66                     ___awdiv:
  7592                           	opt callstack 18
  7593                           
  7594                           ;incstack = 0
  7595  002A66  0E00               	movlw	0
  7596  002A68  6E06               	movwf	___awdiv@sign^0,c
  7597  002A6A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7598  002A6C  D006               	goto	i2l3859
  7599  002A6E  6C03               	negf	___awdiv@divisor^0,c
  7600  002A70  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7601  002A72  B0D8               	btfsc	status,0,c
  7602  002A74  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7603  002A76  0E01               	movlw	1
  7604  002A78  6E06               	movwf	___awdiv@sign^0,c
  7605  002A7A                     i2l3859:
  7606  002A7A  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  7607  002A7C  D006               	goto	i2l3865
  7608  002A7E  6C01               	negf	___awdiv@dividend^0,c
  7609  002A80  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7610  002A82  B0D8               	btfsc	status,0,c
  7611  002A84  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7612  002A86  0E01               	movlw	1
  7613  002A88  1A06               	xorwf	___awdiv@sign^0,f,c
  7614  002A8A                     i2l3865:
  7615  002A8A  0E00               	movlw	0
  7616  002A8C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7617  002A8E  0E00               	movlw	0
  7618  002A90  6E07               	movwf	___awdiv@quotient^0,c
  7619  002A92  5003               	movf	___awdiv@divisor^0,w,c
  7620  002A94  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7621  002A96  B4D8               	btfsc	status,2,c
  7622  002A98  D01C               	goto	i2l3887
  7623  002A9A  0E01               	movlw	1
  7624  002A9C  6E05               	movwf	___awdiv@counter^0,c
  7625  002A9E  D004               	goto	i2l3873
  7626  002AA0                     i2l3871:
  7627  002AA0  90D8               	bcf	status,0,c
  7628  002AA2  3603               	rlcf	___awdiv@divisor^0,f,c
  7629  002AA4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7630  002AA6  2A05               	incf	___awdiv@counter^0,f,c
  7631  002AA8                     i2l3873:
  7632  002AA8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7633  002AAA  D7FA               	goto	i2l3871
  7634  002AAC                     i2u397_40:
  7635  002AAC  90D8               	bcf	status,0,c
  7636  002AAE  3607               	rlcf	___awdiv@quotient^0,f,c
  7637  002AB0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7638  002AB2  5003               	movf	___awdiv@divisor^0,w,c
  7639  002AB4  5C01               	subwf	___awdiv@dividend^0,w,c
  7640  002AB6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7641  002AB8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7642  002ABA  A0D8               	btfss	status,0,c
  7643  002ABC  D005               	goto	i2l3883
  7644  002ABE  5003               	movf	___awdiv@divisor^0,w,c
  7645  002AC0  5E01               	subwf	___awdiv@dividend^0,f,c
  7646  002AC2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7647  002AC4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7648  002AC6  8007               	bsf	___awdiv@quotient^0,0,c
  7649  002AC8                     i2l3883:
  7650  002AC8  90D8               	bcf	status,0,c
  7651  002ACA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7652  002ACC  3203               	rrcf	___awdiv@divisor^0,f,c
  7653  002ACE  2E05               	decfsz	___awdiv@counter^0,f,c
  7654  002AD0  D7ED               	goto	i2u397_40
  7655  002AD2                     i2l3887:
  7656  002AD2  5006               	movf	___awdiv@sign^0,w,c
  7657  002AD4  B4D8               	btfsc	status,2,c
  7658  002AD6  D004               	goto	i2l3891
  7659  002AD8  6C07               	negf	___awdiv@quotient^0,c
  7660  002ADA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7661  002ADC  B0D8               	btfsc	status,0,c
  7662  002ADE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7663  002AE0                     i2l3891:
  7664  002AE0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7665  002AE4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7666  002AE8  0012               	return		;funcret
  7667  002AEA                     __end_of___awdiv:
  7668                           	opt callstack 0
  7669                           
  7670 ;; *************** function _atoi *****************
  7671 ;; Defined at:
  7672 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7675 ;;		 -> STR_3(9), 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;  n               2   20[COMRAM] int 
  7678 ;;  neg             2   13[COMRAM] int 
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  2    7[COMRAM] int 
  7681 ;; Registers used:
  7682 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7688 ;;      Params:         2       0       0       0       0       0       0
  7689 ;;      Locals:         9       0       0       0       0       0       0
  7690 ;;      Temps:          4       0       0       0       0       0       0
  7691 ;;      Totals:        15       0       0       0       0       0       0
  7692 ;;Total ram usage:       15 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:    1
  7695 ;; This function calls:
  7696 ;;		___wmul
  7697 ;;		_isdigit
  7698 ;;		_isspace
  7699 ;; This function is called by:
  7700 ;;		_vfpfcnvrt
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text43
  7705  001EEA                     __ptext43:
  7706                           	opt callstack 0
  7707  001EEA                     _atoi:
  7708                           	opt callstack 18
  7709                           
  7710                           ;incstack = 0
  7711  001EEA  0E00               	movlw	0
  7712  001EEC  6E16               	movwf	(atoi@n+1)^0,c
  7713  001EEE  0E00               	movlw	0
  7714  001EF0  6E15               	movwf	atoi@n^0,c
  7715  001EF2  0E00               	movlw	0
  7716  001EF4  6E0F               	movwf	(atoi@neg+1)^0,c
  7717  001EF6  0E00               	movlw	0
  7718  001EF8  6E0E               	movwf	atoi@neg^0,c
  7719  001EFA  D002               	goto	i2l4393
  7720  001EFC                     i2l4391:
  7721  001EFC  4A08               	infsnz	atoi@s^0,f,c
  7722  001EFE  2A09               	incf	(atoi@s+1)^0,f,c
  7723  001F00                     i2l4393:
  7724  001F00  0E01               	movlw	1
  7725  001F02  6E14               	movwf	_atoi$1499^0,c
  7726  001F04  C008  FFF6         	movff	atoi@s,tblptrl
  7727  001F08  C009  FFF7         	movff	atoi@s+1,tblptrh
  7728  001F0C                     	if	0	;tblptru may be non-zero
  7729  001F0C                     	endif
  7730  001F0C                     	if	0	;tblptru may be non-zero
  7731  001F0C                     	endif
  7732  001F0C  0008               	tblrd		*
  7733  001F0E  50F5               	movf	tablat,w,c
  7734  001F10  0A20               	xorlw	32
  7735  001F12  B4D8               	btfsc	status,2,c
  7736  001F14  D018               	goto	i2l4401
  7737  001F16  0EF7               	movlw	247
  7738  001F18  6E0A               	movwf	??_atoi^0,c
  7739  001F1A  0EFF               	movlw	255
  7740  001F1C  6E0B               	movwf	(??_atoi+1)^0,c
  7741  001F1E  C008  FFF6         	movff	atoi@s,tblptrl
  7742  001F22  C009  FFF7         	movff	atoi@s+1,tblptrh
  7743  001F26                     	if	0	;tblptru may be non-zero
  7744  001F26                     	endif
  7745  001F26                     	if	0	;tblptru may be non-zero
  7746  001F26                     	endif
  7747  001F26  0008               	tblrd		*
  7748  001F28  50F5               	movf	tablat,w,c
  7749  001F2A  6E0C               	movwf	(??_atoi+2)^0,c
  7750  001F2C  6A0D               	clrf	(??_atoi+3)^0,c
  7751  001F2E  500A               	movf	??_atoi^0,w,c
  7752  001F30  260C               	addwf	(??_atoi+2)^0,f,c
  7753  001F32  500B               	movf	(??_atoi+1)^0,w,c
  7754  001F34  220D               	addwfc	(??_atoi+3)^0,f,c
  7755  001F36  500D               	movf	(??_atoi+3)^0,w,c
  7756  001F38  E104               	bnz	i2u486_40
  7757  001F3A  0E05               	movlw	5
  7758  001F3C  5C0C               	subwf	(??_atoi+2)^0,w,c
  7759  001F3E  A0D8               	btfss	status,0,c
  7760  001F40  D002               	goto	i2l4401
  7761  001F42                     i2u486_40:
  7762  001F42  0E00               	movlw	0
  7763  001F44  6E14               	movwf	_atoi$1499^0,c
  7764  001F46                     i2l4401:
  7765  001F46  C014  F010         	movff	_atoi$1499,_atoi$1498
  7766  001F4A  6A11               	clrf	(_atoi$1498+1)^0,c
  7767  001F4C  5010               	movf	_atoi$1498^0,w,c
  7768  001F4E  1011               	iorwf	(_atoi$1498+1)^0,w,c
  7769  001F50  B4D8               	btfsc	status,2,c
  7770  001F52  D008               	goto	i2l4411
  7771  001F54  D7D3               	goto	i2l4391
  7772  001F56                     i2l4407:
  7773  001F56  0E00               	movlw	0
  7774  001F58  6E0F               	movwf	(atoi@neg+1)^0,c
  7775  001F5A  0E01               	movlw	1
  7776  001F5C  6E0E               	movwf	atoi@neg^0,c
  7777  001F5E                     i2l4409:
  7778  001F5E  4A08               	infsnz	atoi@s^0,f,c
  7779  001F60  2A09               	incf	(atoi@s+1)^0,f,c
  7780  001F62  D02E               	goto	i2l4417
  7781  001F64                     i2l4411:
  7782  001F64  C008  FFF6         	movff	atoi@s,tblptrl
  7783  001F68  C009  FFF7         	movff	atoi@s+1,tblptrh
  7784  001F6C                     	if	0	;tblptru may be non-zero
  7785  001F6C                     	endif
  7786  001F6C                     	if	0	;tblptru may be non-zero
  7787  001F6C                     	endif
  7788  001F6C  0008               	tblrd		*
  7789  001F6E  50F5               	movf	tablat,w,c
  7790  001F70  6E0A               	movwf	??_atoi^0,c
  7791  001F72  6A0B               	clrf	(??_atoi+1)^0,c
  7792                           
  7793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7794                           ; Switch size 1, requested type "simple"
  7795                           ; Number of cases is 1, Range of values is 0 to 0
  7796                           ; switch strategies available:
  7797                           ; Name         Instructions Cycles
  7798                           ; simple_byte            4     3 (average)
  7799                           ;	Chosen strategy is simple_byte
  7800  001F74  500B               	movf	(??_atoi+1)^0,w,c
  7801  001F76  0A00               	xorlw	0	; case 0
  7802  001F78  A4D8               	btfss	status,2,c
  7803  001F7A  D022               	goto	i2l4417
  7804                           
  7805                           ; Switch size 1, requested type "simple"
  7806                           ; Number of cases is 2, Range of values is 43 to 45
  7807                           ; switch strategies available:
  7808                           ; Name         Instructions Cycles
  7809                           ; simple_byte            7     4 (average)
  7810                           ;	Chosen strategy is simple_byte
  7811  001F7C  500A               	movf	??_atoi^0,w,c
  7812  001F7E  0A2B               	xorlw	43	; case 43
  7813  001F80  B4D8               	btfsc	status,2,c
  7814  001F82  D7ED               	goto	i2l4409
  7815  001F84  0A06               	xorlw	6	; case 45
  7816  001F86  B4D8               	btfsc	status,2,c
  7817  001F88  D7E6               	goto	i2l4407
  7818  001F8A  D01A               	goto	i2l4417
  7819  001F8C                     i2l4413:
  7820  001F8C  C015  F001         	movff	atoi@n,___wmul@multiplier
  7821  001F90  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7822  001F94  0E00               	movlw	0
  7823  001F96  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7824  001F98  0E0A               	movlw	10
  7825  001F9A  6E03               	movwf	___wmul@multiplicand^0,c
  7826  001F9C  ECBC  F018         	call	___wmul	;wreg free
  7827  001FA0  C008  FFF6         	movff	atoi@s,tblptrl
  7828  001FA4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7829  001FA8                     	if	0	;tblptru may be non-zero
  7830  001FA8                     	endif
  7831  001FA8                     	if	0	;tblptru may be non-zero
  7832  001FA8                     	endif
  7833  001FA8  0008               	tblrd		*
  7834  001FAA  50F5               	movf	tablat,w,c
  7835  001FAC  5E01               	subwf	?___wmul^0,f,c
  7836  001FAE  0E00               	movlw	0
  7837  001FB0  5A02               	subwfb	(?___wmul+1)^0,f,c
  7838  001FB2  0E30               	movlw	48
  7839  001FB4  2401               	addwf	?___wmul^0,w,c
  7840  001FB6  6E15               	movwf	atoi@n^0,c
  7841  001FB8  0E00               	movlw	0
  7842  001FBA  2002               	addwfc	(?___wmul+1)^0,w,c
  7843  001FBC  6E16               	movwf	(atoi@n+1)^0,c
  7844  001FBE  D7CF               	goto	i2l4409
  7845  001FC0                     i2l4417:
  7846  001FC0  0ED0               	movlw	208
  7847  001FC2  6E0A               	movwf	??_atoi^0,c
  7848  001FC4  0EFF               	movlw	255
  7849  001FC6  6E0B               	movwf	(??_atoi+1)^0,c
  7850  001FC8  C008  FFF6         	movff	atoi@s,tblptrl
  7851  001FCC  C009  FFF7         	movff	atoi@s+1,tblptrh
  7852  001FD0                     	if	0	;tblptru may be non-zero
  7853  001FD0                     	endif
  7854  001FD0                     	if	0	;tblptru may be non-zero
  7855  001FD0                     	endif
  7856  001FD0  0008               	tblrd		*
  7857  001FD2  50F5               	movf	tablat,w,c
  7858  001FD4  6E0C               	movwf	(??_atoi+2)^0,c
  7859  001FD6  6A0D               	clrf	(??_atoi+3)^0,c
  7860  001FD8  500A               	movf	??_atoi^0,w,c
  7861  001FDA  260C               	addwf	(??_atoi+2)^0,f,c
  7862  001FDC  500B               	movf	(??_atoi+1)^0,w,c
  7863  001FDE  220D               	addwfc	(??_atoi+3)^0,f,c
  7864  001FE0  500D               	movf	(??_atoi+3)^0,w,c
  7865  001FE2  E106               	bnz	i2u488_40
  7866  001FE4  0E0A               	movlw	10
  7867  001FE6  5C0C               	subwf	(??_atoi+2)^0,w,c
  7868  001FE8  B0D8               	btfsc	status,0,c
  7869  001FEA  D002               	goto	i2u488_40
  7870  001FEC  0E01               	movlw	1
  7871  001FEE  D001               	goto	i2u489_40
  7872  001FF0                     i2u488_40:
  7873  001FF0  0E00               	movlw	0
  7874  001FF2                     i2u489_40:
  7875  001FF2  6E12               	movwf	_atoi$1500^0,c
  7876  001FF4  6A13               	clrf	(_atoi$1500+1)^0,c
  7877  001FF6  5012               	movf	_atoi$1500^0,w,c
  7878  001FF8  1013               	iorwf	(_atoi$1500+1)^0,w,c
  7879  001FFA  A4D8               	btfss	status,2,c
  7880  001FFC  D7C7               	goto	i2l4413
  7881  001FFE  500E               	movf	atoi@neg^0,w,c
  7882  002000  100F               	iorwf	(atoi@neg+1)^0,w,c
  7883  002002  A4D8               	btfss	status,2,c
  7884  002004  D00D               	goto	i2l1168
  7885  002006  C015  F00A         	movff	atoi@n,??_atoi
  7886  00200A  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7887  00200E  1E0A               	comf	??_atoi^0,f,c
  7888  002010  1E0B               	comf	(??_atoi+1)^0,f,c
  7889  002012  4A0A               	infsnz	??_atoi^0,f,c
  7890  002014  2A0B               	incf	(??_atoi+1)^0,f,c
  7891  002016  C00A  F008         	movff	??_atoi,?_atoi
  7892  00201A  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7893  00201E  0012               	return	
  7894  002020                     i2l1168:
  7895  002020  C015  F008         	movff	atoi@n,?_atoi
  7896  002024  C016  F009         	movff	atoi@n+1,?_atoi+1
  7897  002028  0012               	return		;funcret
  7898  00202A                     __end_of_atoi:
  7899                           	opt callstack 0
  7900                           
  7901 ;; *************** function _isspace *****************
  7902 ;; Defined at:
  7903 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  c               2    0[COMRAM] int 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;		None
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  2    0[COMRAM] int 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7917 ;;      Params:         2       0       0       0       0       0       0
  7918 ;;      Locals:         1       0       0       0       0       0       0
  7919 ;;      Temps:          4       0       0       0       0       0       0
  7920 ;;      Totals:         7       0       0       0       0       0       0
  7921 ;;Total ram usage:        7 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; This function calls:
  7924 ;;		Nothing
  7925 ;; This function is called by:
  7926 ;;		_atoi
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text44
  7931  002F62                     __ptext44:
  7932                           	opt callstack 0
  7933  002F62                     _isspace:
  7934                           	opt callstack 18
  7935                           
  7936                           ;incstack = 0
  7937  002F62  0E01               	movlw	1
  7938  002F64  6E07               	movwf	_isspace$1529^0,c
  7939  002F66  0E20               	movlw	32
  7940  002F68  1801               	xorwf	isspace@c^0,w,c
  7941  002F6A  1002               	iorwf	(isspace@c+1)^0,w,c
  7942  002F6C  B4D8               	btfsc	status,2,c
  7943  002F6E  D014               	goto	i2l3993
  7944  002F70  0EF7               	movlw	247
  7945  002F72  6E03               	movwf	??_isspace^0,c
  7946  002F74  0EFF               	movlw	255
  7947  002F76  6E04               	movwf	(??_isspace+1)^0,c
  7948  002F78  C001  F005         	movff	isspace@c,??_isspace+2
  7949  002F7C  C002  F006         	movff	isspace@c+1,??_isspace+3
  7950  002F80  5003               	movf	??_isspace^0,w,c
  7951  002F82  2605               	addwf	(??_isspace+2)^0,f,c
  7952  002F84  5004               	movf	(??_isspace+1)^0,w,c
  7953  002F86  2206               	addwfc	(??_isspace+3)^0,f,c
  7954  002F88  5006               	movf	(??_isspace+3)^0,w,c
  7955  002F8A  E104               	bnz	i2u417_40
  7956  002F8C  0E05               	movlw	5
  7957  002F8E  5C05               	subwf	(??_isspace+2)^0,w,c
  7958  002F90  A0D8               	btfss	status,0,c
  7959  002F92  D002               	goto	i2l3993
  7960  002F94                     i2u417_40:
  7961  002F94  0E00               	movlw	0
  7962  002F96  6E07               	movwf	_isspace$1529^0,c
  7963  002F98                     i2l3993:
  7964  002F98  C007  F001         	movff	_isspace$1529,?_isspace
  7965  002F9C  6A02               	clrf	(?_isspace+1)^0,c
  7966  002F9E  0012               	return		;funcret
  7967  002FA0                     __end_of_isspace:
  7968                           	opt callstack 0
  7969                           
  7970 ;; *************** function _isdigit *****************
  7971 ;; Defined at:
  7972 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;  c               2    0[COMRAM] int 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  2    0[COMRAM] int 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, status,0
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7986 ;;      Params:         2       0       0       0       0       0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0
  7988 ;;      Temps:          4       0       0       0       0       0       0
  7989 ;;      Totals:         6       0       0       0       0       0       0
  7990 ;;Total ram usage:        6 bytes
  7991 ;; Hardware stack levels used:    1
  7992 ;; This function calls:
  7993 ;;		Nothing
  7994 ;; This function is called by:
  7995 ;;		_vfpfcnvrt
  7996 ;;		_atoi
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text45
  8001  003068                     __ptext45:
  8002                           	opt callstack 0
  8003  003068                     _isdigit:
  8004                           	opt callstack 19
  8005                           
  8006                           ;incstack = 0
  8007  003068  0ED0               	movlw	208
  8008  00306A  6E03               	movwf	??_isdigit^0,c
  8009  00306C  0EFF               	movlw	255
  8010  00306E  6E04               	movwf	(??_isdigit+1)^0,c
  8011  003070  C001  F005         	movff	isdigit@c,??_isdigit+2
  8012  003074  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8013  003078  5003               	movf	??_isdigit^0,w,c
  8014  00307A  2605               	addwf	(??_isdigit+2)^0,f,c
  8015  00307C  5004               	movf	(??_isdigit+1)^0,w,c
  8016  00307E  2206               	addwfc	(??_isdigit+3)^0,f,c
  8017  003080  5006               	movf	(??_isdigit+3)^0,w,c
  8018  003082  E106               	bnz	i2u350_40
  8019  003084  0E0A               	movlw	10
  8020  003086  5C05               	subwf	(??_isdigit+2)^0,w,c
  8021  003088  B0D8               	btfsc	status,0,c
  8022  00308A  D002               	goto	i2u350_40
  8023  00308C  0E01               	movlw	1
  8024  00308E  D001               	goto	i2u351_40
  8025  003090                     i2u350_40:
  8026  003090  0E00               	movlw	0
  8027  003092                     i2u351_40:
  8028  003092  6E01               	movwf	?_isdigit^0,c
  8029  003094  6A02               	clrf	(?_isdigit+1)^0,c
  8030  003096  0012               	return		;funcret
  8031  003098                     __end_of_isdigit:
  8032                           	opt callstack 0
  8033                           
  8034 ;; *************** function ___wmul *****************
  8035 ;; Defined at:
  8036 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  multiplier      2    0[COMRAM] unsigned int 
  8039 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;  product         2    4[COMRAM] unsigned int 
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  2    0[COMRAM] unsigned int 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0, prodl, prodh
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8051 ;;      Params:         4       0       0       0       0       0       0
  8052 ;;      Locals:         2       0       0       0       0       0       0
  8053 ;;      Temps:          0       0       0       0       0       0       0
  8054 ;;      Totals:         6       0       0       0       0       0       0
  8055 ;;Total ram usage:        6 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; This function calls:
  8058 ;;		Nothing
  8059 ;; This function is called by:
  8060 ;;		_atoi
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           	psect	text46
  8065  003178                     __ptext46:
  8066                           	opt callstack 0
  8067  003178                     ___wmul:
  8068                           	opt callstack 18
  8069                           
  8070                           ;incstack = 0
  8071  003178  5001               	movf	___wmul@multiplier^0,w,c
  8072  00317A  0203               	mulwf	___wmul@multiplicand^0,c
  8073  00317C  CFF3 F005          	movff	prodl,___wmul@product
  8074  003180  CFF4 F006          	movff	prodh,___wmul@product+1
  8075  003184  5001               	movf	___wmul@multiplier^0,w,c
  8076  003186  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8077  003188  50F3               	movf	243,w,c
  8078  00318A  2606               	addwf	(___wmul@product+1)^0,f,c
  8079  00318C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8080  00318E  0203               	mulwf	___wmul@multiplicand^0,c
  8081  003190  50F3               	movf	243,w,c
  8082  003192  2606               	addwf	(___wmul@product+1)^0,f,c
  8083  003194  C005  F001         	movff	___wmul@product,?___wmul
  8084  003198  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8085  00319C  0012               	return		;funcret
  8086  00319E                     __end_of___wmul:
  8087                           	opt callstack 0
  8088                           
  8089 ;; *************** function _memset *****************
  8090 ;; Defined at:
  8091 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  dest            2    0[COMRAM] PTR void 
  8094 ;;		 -> r(100), 
  8095 ;;  c               2    2[COMRAM] int 
  8096 ;;  n               2    4[COMRAM] unsigned int 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;  s               2   10[COMRAM] PTR unsigned char 
  8099 ;;		 -> r(100), 
  8100 ;;  k               2    8[COMRAM] unsigned int 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  2    0[COMRAM] PTR void 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8110 ;;      Params:         6       0       0       0       0       0       0
  8111 ;;      Locals:         4       0       0       0       0       0       0
  8112 ;;      Temps:          2       0       0       0       0       0       0
  8113 ;;      Totals:        12       0       0       0       0       0       0
  8114 ;;Total ram usage:       12 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; This function calls:
  8117 ;;		Nothing
  8118 ;; This function is called by:
  8119 ;;		_Hi_ISR
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text47
  8124  00216A                     __ptext47:
  8125                           	opt callstack 0
  8126  00216A                     _memset:
  8127                           	opt callstack 22
  8128                           
  8129                           ;incstack = 0
  8130  00216A  C001  F00B         	movff	memset@dest,memset@s
  8131  00216E  C002  F00C         	movff	memset@dest+1,memset@s+1
  8132  002172  5005               	movf	memset@n^0,w,c
  8133  002174  1006               	iorwf	(memset@n+1)^0,w,c
  8134  002176  B4D8               	btfsc	status,2,c
  8135  002178  0012               	return	
  8136  00217A  C00B  FFD9         	movff	memset@s,fsr2l
  8137  00217E  C00C  FFDA         	movff	memset@s+1,fsr2h
  8138  002182  C003  FFDF         	movff	memset@c,indf2
  8139  002186  5005               	movf	memset@n^0,w,c
  8140  002188  240B               	addwf	memset@s^0,w,c
  8141  00218A  6E07               	movwf	??_memset^0,c
  8142  00218C  5006               	movf	(memset@n+1)^0,w,c
  8143  00218E  200C               	addwfc	(memset@s+1)^0,w,c
  8144  002190  6E08               	movwf	(??_memset+1)^0,c
  8145  002192  0EFF               	movlw	255
  8146  002194  2407               	addwf	??_memset^0,w,c
  8147  002196  6ED9               	movwf	fsr2l,c
  8148  002198  0EFF               	movlw	255
  8149  00219A  2008               	addwfc	(??_memset+1)^0,w,c
  8150  00219C  6EDA               	movwf	fsr2h,c
  8151  00219E  C003  FFDF         	movff	memset@c,indf2
  8152  0021A2  5006               	movf	(memset@n+1)^0,w,c
  8153  0021A4  E104               	bnz	i2l4793
  8154  0021A6  0E03               	movlw	3
  8155  0021A8  5C05               	subwf	memset@n^0,w,c
  8156  0021AA  A0D8               	btfss	status,0,c
  8157  0021AC  0012               	return	
  8158  0021AE                     i2l4793:
  8159  0021AE  EE20 F001          	lfsr	2,1
  8160  0021B2  500B               	movf	memset@s^0,w,c
  8161  0021B4  26D9               	addwf	fsr2l,f,c
  8162  0021B6  500C               	movf	(memset@s+1)^0,w,c
  8163  0021B8  22DA               	addwfc	fsr2h,f,c
  8164  0021BA  C003  FFDF         	movff	memset@c,indf2
  8165  0021BE  EE20 F002          	lfsr	2,2
  8166  0021C2  500B               	movf	memset@s^0,w,c
  8167  0021C4  26D9               	addwf	fsr2l,f,c
  8168  0021C6  500C               	movf	(memset@s+1)^0,w,c
  8169  0021C8  22DA               	addwfc	fsr2h,f,c
  8170  0021CA  C003  FFDF         	movff	memset@c,indf2
  8171  0021CE  5005               	movf	memset@n^0,w,c
  8172  0021D0  240B               	addwf	memset@s^0,w,c
  8173  0021D2  6E07               	movwf	??_memset^0,c
  8174  0021D4  5006               	movf	(memset@n+1)^0,w,c
  8175  0021D6  200C               	addwfc	(memset@s+1)^0,w,c
  8176  0021D8  6E08               	movwf	(??_memset+1)^0,c
  8177  0021DA  0EFE               	movlw	254
  8178  0021DC  2407               	addwf	??_memset^0,w,c
  8179  0021DE  6ED9               	movwf	fsr2l,c
  8180  0021E0  0EFF               	movlw	255
  8181  0021E2  2008               	addwfc	(??_memset+1)^0,w,c
  8182  0021E4  6EDA               	movwf	fsr2h,c
  8183  0021E6  C003  FFDF         	movff	memset@c,indf2
  8184  0021EA  5005               	movf	memset@n^0,w,c
  8185  0021EC  240B               	addwf	memset@s^0,w,c
  8186  0021EE  6E07               	movwf	??_memset^0,c
  8187  0021F0  5006               	movf	(memset@n+1)^0,w,c
  8188  0021F2  200C               	addwfc	(memset@s+1)^0,w,c
  8189  0021F4  6E08               	movwf	(??_memset+1)^0,c
  8190  0021F6  0EFD               	movlw	253
  8191  0021F8  2407               	addwf	??_memset^0,w,c
  8192  0021FA  6ED9               	movwf	fsr2l,c
  8193  0021FC  0EFF               	movlw	255
  8194  0021FE  2008               	addwfc	(??_memset+1)^0,w,c
  8195  002200  6EDA               	movwf	fsr2h,c
  8196  002202  C003  FFDF         	movff	memset@c,indf2
  8197  002206  5006               	movf	(memset@n+1)^0,w,c
  8198  002208  E104               	bnz	i2l4799
  8199  00220A  0E07               	movlw	7
  8200  00220C  5C05               	subwf	memset@n^0,w,c
  8201  00220E  A0D8               	btfss	status,0,c
  8202  002210  0012               	return	
  8203  002212                     i2l4799:
  8204  002212  EE20 F003          	lfsr	2,3
  8205  002216  500B               	movf	memset@s^0,w,c
  8206  002218  26D9               	addwf	fsr2l,f,c
  8207  00221A  500C               	movf	(memset@s+1)^0,w,c
  8208  00221C  22DA               	addwfc	fsr2h,f,c
  8209  00221E  C003  FFDF         	movff	memset@c,indf2
  8210  002222  5005               	movf	memset@n^0,w,c
  8211  002224  240B               	addwf	memset@s^0,w,c
  8212  002226  6E07               	movwf	??_memset^0,c
  8213  002228  5006               	movf	(memset@n+1)^0,w,c
  8214  00222A  200C               	addwfc	(memset@s+1)^0,w,c
  8215  00222C  6E08               	movwf	(??_memset+1)^0,c
  8216  00222E  0EFC               	movlw	252
  8217  002230  2407               	addwf	??_memset^0,w,c
  8218  002232  6ED9               	movwf	fsr2l,c
  8219  002234  0EFF               	movlw	255
  8220  002236  2008               	addwfc	(??_memset+1)^0,w,c
  8221  002238  6EDA               	movwf	fsr2h,c
  8222  00223A  C003  FFDF         	movff	memset@c,indf2
  8223  00223E  5006               	movf	(memset@n+1)^0,w,c
  8224  002240  E104               	bnz	i2l4805
  8225  002242  0E09               	movlw	9
  8226  002244  5C05               	subwf	memset@n^0,w,c
  8227  002246  A0D8               	btfss	status,0,c
  8228  002248  0012               	return	
  8229  00224A                     i2l4805:
  8230  00224A  C00B  F007         	movff	memset@s,??_memset
  8231  00224E  C00C  F008         	movff	memset@s+1,??_memset+1
  8232  002252  1E07               	comf	??_memset^0,f,c
  8233  002254  1E08               	comf	(??_memset+1)^0,f,c
  8234  002256  4A07               	infsnz	??_memset^0,f,c
  8235  002258  2A08               	incf	(??_memset+1)^0,f,c
  8236  00225A  0E03               	movlw	3
  8237  00225C  1407               	andwf	??_memset^0,w,c
  8238  00225E  6E09               	movwf	memset@k^0,c
  8239  002260  6A0A               	clrf	(memset@k+1)^0,c
  8240  002262  5009               	movf	memset@k^0,w,c
  8241  002264  260B               	addwf	memset@s^0,f,c
  8242  002266  500A               	movf	(memset@k+1)^0,w,c
  8243  002268  220C               	addwfc	(memset@s+1)^0,f,c
  8244  00226A  5009               	movf	memset@k^0,w,c
  8245  00226C  5E05               	subwf	memset@n^0,f,c
  8246  00226E  500A               	movf	(memset@k+1)^0,w,c
  8247  002270  5A06               	subwfb	(memset@n+1)^0,f,c
  8248  002272  0EFC               	movlw	252
  8249  002274  1605               	andwf	memset@n^0,f,c
  8250  002276  0EFF               	movlw	255
  8251  002278  1606               	andwf	(memset@n+1)^0,f,c
  8252  00227A  D00B               	goto	i2l4813
  8253  00227C                     i2l4807:
  8254  00227C  C00B  FFD9         	movff	memset@s,fsr2l
  8255  002280  C00C  FFDA         	movff	memset@s+1,fsr2h
  8256  002284  C003  FFDF         	movff	memset@c,indf2
  8257  002288  0605               	decf	memset@n^0,f,c
  8258  00228A  A0D8               	btfss	status,0,c
  8259  00228C  0606               	decf	(memset@n+1)^0,f,c
  8260  00228E  4A0B               	infsnz	memset@s^0,f,c
  8261  002290  2A0C               	incf	(memset@s+1)^0,f,c
  8262  002292                     i2l4813:
  8263  002292  5005               	movf	memset@n^0,w,c
  8264  002294  1006               	iorwf	(memset@n+1)^0,w,c
  8265  002296  B4D8               	btfsc	status,2,c
  8266  002298  0012               	return	
  8267  00229A  D7F0               	goto	i2l4807
  8268  00229C                     __end_of_memset:
  8269                           	opt callstack 0
  8270                           
  8271 ;; *************** function _LCD_clear *****************
  8272 ;; Defined at:
  8273 ;;		line 51 in file "setting_hardaware/LCD.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;		None
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;		None
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8287 ;;      Params:         0       0       0       0       0       0       0
  8288 ;;      Locals:         0       0       0       0       0       0       0
  8289 ;;      Temps:          0       0       0       0       0       0       0
  8290 ;;      Totals:         0       0       0       0       0       0       0
  8291 ;;Total ram usage:        0 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    1
  8294 ;; This function calls:
  8295 ;;		i2_Cmd
  8296 ;; This function is called by:
  8297 ;;		_Hi_ISR
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text48
  8302  00321A                     __ptext48:
  8303                           	opt callstack 0
  8304  00321A                     _LCD_clear:
  8305                           	opt callstack 21
  8306                           
  8307                           ;setting_hardaware/LCD.c: 52:     Cmd(0X01);
  8308                           
  8309                           ;incstack = 0
  8310  00321A  0E00               	movlw	0
  8311  00321C  6E02               	movwf	(i2Cmd@Value+1)^0,c
  8312  00321E  0E01               	movlw	1
  8313  003220  6E01               	movwf	i2Cmd@Value^0,c
  8314  003222  EC7A  F018         	call	i2_Cmd	;wreg free
  8315  003226  0012               	return		;funcret
  8316  003228                     __end_of_LCD_clear:
  8317                           	opt callstack 0
  8318                           
  8319 ;; *************** function i2_Cmd *****************
  8320 ;; Defined at:
  8321 ;;		line 15 in file "setting_hardaware/LCD.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  Value           2    0[COMRAM] int 
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      void 
  8328 ;; Registers used:
  8329 ;;		wreg
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8335 ;;      Params:         2       0       0       0       0       0       0
  8336 ;;      Locals:         0       0       0       0       0       0       0
  8337 ;;      Temps:          1       0       0       0       0       0       0
  8338 ;;      Totals:         3       0       0       0       0       0       0
  8339 ;;Total ram usage:        3 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_LCD_clear
  8345 ;;		i2_Send2Lcd
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text49
  8350  0030F4                     __ptext49:
  8351                           	opt callstack 0
  8352  0030F4                     i2_Cmd:
  8353                           	opt callstack 21
  8354                           
  8355                           ;setting_hardaware/LCD.c: 15: void Cmd(int Value);setting_hardaware/LCD.c: 16: {;setting
      +                          _hardaware/LCD.c: 17:  LATD = Value;
  8356                           
  8357                           ;incstack = 0
  8358  0030F4  C001  FF8C         	movff	i2Cmd@Value,3980	;volatile
  8359                           
  8360                           ;setting_hardaware/LCD.c: 18:  LATCbits.LC4=0;
  8361  0030F8  988B               	bcf	139,4,c	;volatile
  8362                           
  8363                           ;setting_hardaware/LCD.c: 20:  LATCbits.LC6=0;
  8364  0030FA  9C8B               	bcf	139,6,c	;volatile
  8365                           
  8366                           ;setting_hardaware/LCD.c: 21:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  8367  0030FC  0E08               	movlw	8
  8368  0030FE                     i2u653_47:
  8369  0030FE  2EE8               	decfsz	wreg,f,c
  8370  003100  D7FE               	bra	i2u653_47
  8371  003102  F000               	nop	
  8372                           
  8373                           ;setting_hardaware/LCD.c: 22:  LATCbits.LC6=1;
  8374  003104  8C8B               	bsf	139,6,c	;volatile
  8375                           
  8376                           ;setting_hardaware/LCD.c: 23:  _delay((unsigned long)((25)*(4000000/4000000.0)));
  8377  003106  0E08               	movlw	8
  8378  003108                     i2u654_47:
  8379  003108  2EE8               	decfsz	wreg,f,c
  8380  00310A  D7FE               	bra	i2u654_47
  8381  00310C  F000               	nop	
  8382                           
  8383                           ;setting_hardaware/LCD.c: 24:  LATCbits.LC6=0;
  8384  00310E  9C8B               	bcf	139,6,c	;volatile
  8385                           
  8386                           ;setting_hardaware/LCD.c: 25:  _delay((unsigned long)((3)*(4000000/4000.0)));
  8387  003110  0E04               	movlw	4
  8388  003112  6E03               	movwf	??i2_Cmd^0,c
  8389  003114  0EE4               	movlw	228
  8390  003116                     i2u655_47:
  8391  003116  2EE8               	decfsz	wreg,f,c
  8392  003118  D7FE               	bra	i2u655_47
  8393  00311A  2E03               	decfsz	??i2_Cmd^0,f,c
  8394  00311C  D7FC               	bra	i2u655_47
  8395  00311E  D000               	nop2	
  8396  003120  0012               	return		;funcret
  8397  003122                     __end_ofi2_Cmd:
  8398                           	opt callstack 0
  8399                           
  8400 ;; *************** function _ADC_Read *****************
  8401 ;; Defined at:
  8402 ;;		line 67 in file "setting_hardaware/adc.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;  channel         2   64[COMRAM] int 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  result          4   75[COMRAM] int 
  8407 ;;  digital         2   73[COMRAM] int 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  4   64[COMRAM] int 
  8410 ;; Registers used:
  8411 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8417 ;;      Params:         4       0       0       0       0       0       0
  8418 ;;      Locals:        10       0       0       0       0       0       0
  8419 ;;      Temps:          1       0       0       0       0       0       0
  8420 ;;      Totals:        15       0       0       0       0       0       0
  8421 ;;Total ram usage:       15 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; Hardware stack levels required when called:    1
  8424 ;; This function calls:
  8425 ;;		___fldiv
  8426 ;;		___flmul
  8427 ;;		___xxtofl
  8428 ;; This function is called by:
  8429 ;;		_Hi_ISR
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           
  8433                           	psect	text50
  8434  0024D2                     __ptext50:
  8435                           	opt callstack 0
  8436  0024D2                     _ADC_Read:
  8437                           	opt callstack 21
  8438                           
  8439                           ;setting_hardaware/adc.c: 73:     ADCON0bits.CHS = channel ;
  8440                           
  8441                           ;incstack = 0
  8442  0024D2  C041  F045         	movff	ADC_Read@channel,??_ADC_Read
  8443  0024D6  4645               	rlncf	??_ADC_Read^0,f,c
  8444  0024D8  4645               	rlncf	??_ADC_Read^0,f,c
  8445  0024DA  50C2               	movf	194,w,c	;volatile
  8446  0024DC  1845               	xorwf	??_ADC_Read^0,w,c
  8447  0024DE  0BC3               	andlw	-61
  8448  0024E0  1845               	xorwf	??_ADC_Read^0,w,c
  8449  0024E2  6EC2               	movwf	194,c	;volatile
  8450                           
  8451                           ;setting_hardaware/adc.c: 74:     ADCON0bits.ADON = 1;
  8452  0024E4  80C2               	bsf	194,0,c	;volatile
  8453                           
  8454                           ;setting_hardaware/adc.c: 75:     ADCON0bits.GO = 1;
  8455  0024E6  82C2               	bsf	194,1,c	;volatile
  8456  0024E8                     i2l167:
  8457  0024E8  B2C2               	btfsc	194,1,c	;volatile
  8458  0024EA  D7FE               	goto	i2l167
  8459                           
  8460                           ;setting_hardaware/adc.c: 78:     digital = ADRES;
  8461  0024EC  CFC3 F04A          	movff	4035,ADC_Read@digital	;volatile
  8462  0024F0  CFC4 F04B          	movff	4036,ADC_Read@digital+1	;volatile
  8463                           
  8464                           ;setting_hardaware/adc.c: 80:     result=digital*5.0/1024.0*100.0;
  8465  0024F4  0E00               	movlw	0
  8466  0024F6  6E2C               	movwf	___fldiv@a^0,c
  8467  0024F8  0E00               	movlw	0
  8468  0024FA  6E2D               	movwf	(___fldiv@a+1)^0,c
  8469  0024FC  0E80               	movlw	128
  8470  0024FE  6E2E               	movwf	(___fldiv@a+2)^0,c
  8471  002500  0E44               	movlw	68
  8472  002502  6E2F               	movwf	(___fldiv@a+3)^0,c
  8473  002504  0E00               	movlw	0
  8474  002506  6E13               	movwf	___flmul@a^0,c
  8475  002508  0E00               	movlw	0
  8476  00250A  6E14               	movwf	(___flmul@a+1)^0,c
  8477  00250C  0EA0               	movlw	160
  8478  00250E  6E15               	movwf	(___flmul@a+2)^0,c
  8479  002510  0E40               	movlw	64
  8480  002512  6E16               	movwf	(___flmul@a+3)^0,c
  8481  002514  C04A  F001         	movff	ADC_Read@digital,___xxtofl@val
  8482  002518  C04B  F002         	movff	ADC_Read@digital+1,___xxtofl@val+1
  8483  00251C  0E00               	movlw	0
  8484  00251E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8485  002520  0EFF               	movlw	-1
  8486  002522  6E03               	movwf	(___xxtofl@val+2)^0,c
  8487  002524  6E04               	movwf	(___xxtofl@val+3)^0,c
  8488  002526  0E01               	movlw	1
  8489  002528  EC15  F010         	call	___xxtofl
  8490  00252C  C001  F00F         	movff	?___xxtofl,___flmul@b
  8491  002530  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  8492  002534  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  8493  002538  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  8494  00253C  EC27  F00A         	call	___flmul	;wreg free
  8495  002540  C00F  F028         	movff	?___flmul,___fldiv@b
  8496  002544  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  8497  002548  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  8498  00254C  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  8499  002550  EC56  F00D         	call	___fldiv	;wreg free
  8500  002554  C028  F046         	movff	?___fldiv,_ADC_Read$2039
  8501  002558  C029  F047         	movff	?___fldiv+1,_ADC_Read$2039+1
  8502  00255C  C02A  F048         	movff	?___fldiv+2,_ADC_Read$2039+2
  8503  002560  C02B  F049         	movff	?___fldiv+3,_ADC_Read$2039+3
  8504                           
  8505                           ;setting_hardaware/adc.c: 80:     result=digital*5.0/1024.0*100.0;
  8506  002564  C046  F00F         	movff	_ADC_Read$2039,___flmul@b
  8507  002568  C047  F010         	movff	_ADC_Read$2039+1,___flmul@b+1
  8508  00256C  C048  F011         	movff	_ADC_Read$2039+2,___flmul@b+2
  8509  002570  C049  F012         	movff	_ADC_Read$2039+3,___flmul@b+3
  8510  002574  0E00               	movlw	0
  8511  002576  6E13               	movwf	___flmul@a^0,c
  8512  002578  0E00               	movlw	0
  8513  00257A  6E14               	movwf	(___flmul@a+1)^0,c
  8514  00257C  0EC8               	movlw	200
  8515  00257E  6E15               	movwf	(___flmul@a+2)^0,c
  8516  002580  0E42               	movlw	66
  8517  002582  6E16               	movwf	(___flmul@a+3)^0,c
  8518  002584  EC27  F00A         	call	___flmul	;wreg free
  8519  002588  C00F  F04C         	movff	?___flmul,ADC_Read@result
  8520  00258C  C010  F04D         	movff	?___flmul+1,ADC_Read@result+1
  8521  002590  C011  F04E         	movff	?___flmul+2,ADC_Read@result+2
  8522  002594  C012  F04F         	movff	?___flmul+3,ADC_Read@result+3
  8523                           
  8524                           ;setting_hardaware/adc.c: 82:     return result;
  8525  002598  C04C  F041         	movff	ADC_Read@result,?_ADC_Read
  8526  00259C  C04D  F042         	movff	ADC_Read@result+1,?_ADC_Read+1
  8527  0025A0  C04E  F043         	movff	ADC_Read@result+2,?_ADC_Read+2
  8528  0025A4  C04F  F044         	movff	ADC_Read@result+3,?_ADC_Read+3
  8529  0025A8  0012               	return		;funcret
  8530  0025AA                     __end_of_ADC_Read:
  8531                           	opt callstack 0
  8532                           
  8533 ;; *************** function ___xxtofl *****************
  8534 ;; Defined at:
  8535 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;  sign            1    wreg     unsigned char 
  8538 ;;  val             4    0[COMRAM] long 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;  sign            1    8[COMRAM] unsigned char 
  8541 ;;  arg             4   10[COMRAM] unsigned long 
  8542 ;;  exp             1    9[COMRAM] unsigned char 
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  4    0[COMRAM] unsigned char 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2, status,0
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8552 ;;      Params:         4       0       0       0       0       0       0
  8553 ;;      Locals:         6       0       0       0       0       0       0
  8554 ;;      Temps:          4       0       0       0       0       0       0
  8555 ;;      Totals:        14       0       0       0       0       0       0
  8556 ;;Total ram usage:       14 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_ADC_Read
  8562 ;;		_MQGetGasPercentage
  8563 ;;		_MQ_Read
  8564 ;;		_powf
  8565 ;;		_logf
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569                           	psect	text51
  8570  00202A                     __ptext51:
  8571                           	opt callstack 0
  8572  00202A                     ___xxtofl:
  8573                           	opt callstack 21
  8574                           
  8575                           ;incstack = 0
  8576                           ;___xxtofl@sign stored from wreg
  8577  00202A  6E09               	movwf	___xxtofl@sign^0,c
  8578  00202C  5009               	movf	___xxtofl@sign^0,w,c
  8579  00202E  A4D8               	btfss	status,2,c
  8580  002030  AE04               	btfss	(___xxtofl@val+3)^0,7,c
  8581  002032  D01A               	goto	i2l1113
  8582  002034  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8583  002038  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8584  00203C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8585  002040  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8586  002044  1E05               	comf	??___xxtofl^0,f,c
  8587  002046  1E06               	comf	(??___xxtofl+1)^0,f,c
  8588  002048  1E07               	comf	(??___xxtofl+2)^0,f,c
  8589  00204A  1E08               	comf	(??___xxtofl+3)^0,f,c
  8590  00204C  2A05               	incf	??___xxtofl^0,f,c
  8591  00204E  0E00               	movlw	0
  8592  002050  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8593  002052  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8594  002054  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8595  002056  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8596  00205A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8597  00205E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8598  002062  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8599  002066  D008               	goto	i2l4655
  8600  002068                     i2l1113:
  8601  002068  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8602  00206C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8603  002070  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8604  002074  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8605  002078                     i2l4655:
  8606  002078  5001               	movf	___xxtofl@val^0,w,c
  8607  00207A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8608  00207C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8609  00207E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8610  002080  A4D8               	btfss	status,2,c
  8611  002082  D009               	goto	i2l4661
  8612  002084  0E00               	movlw	0
  8613  002086  6E01               	movwf	?___xxtofl^0,c
  8614  002088  0E00               	movlw	0
  8615  00208A  6E02               	movwf	(?___xxtofl+1)^0,c
  8616  00208C  0E00               	movlw	0
  8617  00208E  6E03               	movwf	(?___xxtofl+2)^0,c
  8618  002090  0E00               	movlw	0
  8619  002092  6E04               	movwf	(?___xxtofl+3)^0,c
  8620  002094  0012               	return	
  8621  002096                     i2l4661:
  8622  002096  0E96               	movlw	150
  8623  002098  6E0A               	movwf	___xxtofl@exp^0,c
  8624  00209A  D006               	goto	i2l4665
  8625  00209C                     i2l4663:
  8626  00209C  2A0A               	incf	___xxtofl@exp^0,f,c
  8627  00209E  90D8               	bcf	status,0,c
  8628  0020A0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8629  0020A2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8630  0020A4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8631  0020A6  320B               	rrcf	___xxtofl@arg^0,f,c
  8632  0020A8                     i2l4665:
  8633  0020A8  0E00               	movlw	0
  8634  0020AA  140B               	andwf	___xxtofl@arg^0,w,c
  8635  0020AC  6E05               	movwf	??___xxtofl^0,c
  8636  0020AE  0E00               	movlw	0
  8637  0020B0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8638  0020B2  6E06               	movwf	(??___xxtofl+1)^0,c
  8639  0020B4  0E00               	movlw	0
  8640  0020B6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8641  0020B8  6E07               	movwf	(??___xxtofl+2)^0,c
  8642  0020BA  0EFE               	movlw	254
  8643  0020BC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8644  0020BE  6E08               	movwf	(??___xxtofl+3)^0,c
  8645  0020C0  5005               	movf	??___xxtofl^0,w,c
  8646  0020C2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8647  0020C4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8648  0020C6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8649  0020C8  B4D8               	btfsc	status,2,c
  8650  0020CA  D00D               	goto	i2l1120
  8651  0020CC  D7E7               	goto	i2l4663
  8652  0020CE                     i2l4667:
  8653  0020CE  2A0A               	incf	___xxtofl@exp^0,f,c
  8654  0020D0  0E01               	movlw	1
  8655  0020D2  260B               	addwf	___xxtofl@arg^0,f,c
  8656  0020D4  0E00               	movlw	0
  8657  0020D6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8658  0020D8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8659  0020DA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8660  0020DC  90D8               	bcf	status,0,c
  8661  0020DE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8662  0020E0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8663  0020E2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8664  0020E4  320B               	rrcf	___xxtofl@arg^0,f,c
  8665  0020E6                     i2l1120:
  8666  0020E6  0E00               	movlw	0
  8667  0020E8  140B               	andwf	___xxtofl@arg^0,w,c
  8668  0020EA  6E05               	movwf	??___xxtofl^0,c
  8669  0020EC  0E00               	movlw	0
  8670  0020EE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8671  0020F0  6E06               	movwf	(??___xxtofl+1)^0,c
  8672  0020F2  0E00               	movlw	0
  8673  0020F4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8674  0020F6  6E07               	movwf	(??___xxtofl+2)^0,c
  8675  0020F8  0EFF               	movlw	255
  8676  0020FA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8677  0020FC  6E08               	movwf	(??___xxtofl+3)^0,c
  8678  0020FE  5005               	movf	??___xxtofl^0,w,c
  8679  002100  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8680  002102  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8681  002104  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8682  002106  B4D8               	btfsc	status,2,c
  8683  002108  D007               	goto	i2l4675
  8684  00210A  D7E1               	goto	i2l4667
  8685  00210C                     i2l4673:
  8686  00210C  060A               	decf	___xxtofl@exp^0,f,c
  8687  00210E  90D8               	bcf	status,0,c
  8688  002110  360B               	rlcf	___xxtofl@arg^0,f,c
  8689  002112  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8690  002114  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8691  002116  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8692  002118                     i2l4675:
  8693  002118  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8694  00211A  D003               	goto	i2u529_40
  8695  00211C  0E02               	movlw	2
  8696  00211E  600A               	cpfslt	___xxtofl@exp^0,c
  8697  002120  D7F5               	goto	i2l4673
  8698  002122                     i2u529_40:
  8699  002122  A00A               	btfss	___xxtofl@exp^0,0,c
  8700  002124  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8701  002126  90D8               	bcf	status,0,c
  8702  002128  320A               	rrcf	___xxtofl@exp^0,f,c
  8703  00212A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8704  00212E  6A06               	clrf	(??___xxtofl+1)^0,c
  8705  002130  6A07               	clrf	(??___xxtofl+2)^0,c
  8706  002132  6A08               	clrf	(??___xxtofl+3)^0,c
  8707  002134  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8708  002138  6A07               	clrf	(??___xxtofl+2)^0,c
  8709  00213A  6A06               	clrf	(??___xxtofl+1)^0,c
  8710  00213C  6A05               	clrf	??___xxtofl^0,c
  8711  00213E  5005               	movf	??___xxtofl^0,w,c
  8712  002140  120B               	iorwf	___xxtofl@arg^0,f,c
  8713  002142  5006               	movf	(??___xxtofl+1)^0,w,c
  8714  002144  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8715  002146  5007               	movf	(??___xxtofl+2)^0,w,c
  8716  002148  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8717  00214A  5008               	movf	(??___xxtofl+3)^0,w,c
  8718  00214C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8719  00214E  5009               	movf	___xxtofl@sign^0,w,c
  8720  002150  A4D8               	btfss	status,2,c
  8721  002152  AE04               	btfss	(___xxtofl@val+3)^0,7,c
  8722  002154  D001               	goto	i2l4691
  8723  002156  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8724  002158                     i2l4691:
  8725  002158  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8726  00215C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8727  002160  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8728  002164  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8729  002168  0012               	return		;funcret
  8730  00216A                     __end_of___xxtofl:
  8731                           	opt callstack 0
  8732                           
  8733 ;; *************** function ___flmul *****************
  8734 ;; Defined at:
  8735 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;  b               4   14[COMRAM] unsigned char 
  8738 ;;  a               4   18[COMRAM] unsigned char 
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;  prod            4   33[COMRAM] struct .
  8741 ;;  grs             4   27[COMRAM] unsigned long 
  8742 ;;  temp            2   37[COMRAM] struct .
  8743 ;;  bexp            1   32[COMRAM] unsigned char 
  8744 ;;  aexp            1   31[COMRAM] unsigned char 
  8745 ;;  sign            1   26[COMRAM] unsigned char 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  4   14[COMRAM] unsigned char 
  8748 ;; Registers used:
  8749 ;;		wreg, status,2, status,0, prodl, prodh
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8755 ;;      Params:         8       0       0       0       0       0       0
  8756 ;;      Locals:        13       0       0       0       0       0       0
  8757 ;;      Temps:          4       0       0       0       0       0       0
  8758 ;;      Totals:        25       0       0       0       0       0       0
  8759 ;;Total ram usage:       25 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_ADC_Read
  8765 ;;		_efgtoa
  8766 ;;		_MQ_Read
  8767 ;;		_powf
  8768 ;;		_sqrtf
  8769 ;;		_scalbnf
  8770 ;;		_logf
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           	psect	text52
  8775  00144E                     __ptext52:
  8776                           	opt callstack 0
  8777  00144E                     ___flmul:
  8778                           	opt callstack 18
  8779                           
  8780                           ;incstack = 0
  8781  00144E  5012               	movf	(___flmul@b+3)^0,w,c
  8782  001450  0B80               	andlw	128
  8783  001452  6E1B               	movwf	___flmul@sign^0,c
  8784  001454  5012               	movf	(___flmul@b+3)^0,w,c
  8785  001456  2412               	addwf	(___flmul@b+3)^0,w,c
  8786  001458  6E21               	movwf	___flmul@bexp^0,c
  8787  00145A  BE11               	btfsc	(___flmul@b+2)^0,7,c
  8788  00145C  8021               	bsf	___flmul@bexp^0,0,c
  8789  00145E  5021               	movf	___flmul@bexp^0,w,c
  8790  001460  B4D8               	btfsc	status,2,c
  8791  001462  D00D               	goto	i2l3729
  8792  001464  2821               	incf	___flmul@bexp^0,w,c
  8793  001466  A4D8               	btfss	status,2,c
  8794  001468  D008               	goto	i2l3727
  8795  00146A  0E00               	movlw	0
  8796  00146C  6E0F               	movwf	___flmul@b^0,c
  8797  00146E  0E00               	movlw	0
  8798  001470  6E10               	movwf	(___flmul@b+1)^0,c
  8799  001472  0E00               	movlw	0
  8800  001474  6E11               	movwf	(___flmul@b+2)^0,c
  8801  001476  0E00               	movlw	0
  8802  001478  6E12               	movwf	(___flmul@b+3)^0,c
  8803  00147A                     i2l3727:
  8804  00147A  8E11               	bsf	(___flmul@b+2)^0,7,c
  8805  00147C  D008               	goto	i2l3731
  8806  00147E                     i2l3729:
  8807  00147E  0E00               	movlw	0
  8808  001480  6E0F               	movwf	___flmul@b^0,c
  8809  001482  0E00               	movlw	0
  8810  001484  6E10               	movwf	(___flmul@b+1)^0,c
  8811  001486  0E00               	movlw	0
  8812  001488  6E11               	movwf	(___flmul@b+2)^0,c
  8813  00148A  0E00               	movlw	0
  8814  00148C  6E12               	movwf	(___flmul@b+3)^0,c
  8815  00148E                     i2l3731:
  8816  00148E  5016               	movf	(___flmul@a+3)^0,w,c
  8817  001490  0B80               	andlw	128
  8818  001492  1A1B               	xorwf	___flmul@sign^0,f,c
  8819  001494  5016               	movf	(___flmul@a+3)^0,w,c
  8820  001496  2416               	addwf	(___flmul@a+3)^0,w,c
  8821  001498  6E20               	movwf	___flmul@aexp^0,c
  8822  00149A  BE15               	btfsc	(___flmul@a+2)^0,7,c
  8823  00149C  8020               	bsf	___flmul@aexp^0,0,c
  8824  00149E  5020               	movf	___flmul@aexp^0,w,c
  8825  0014A0  B4D8               	btfsc	status,2,c
  8826  0014A2  D00D               	goto	i2l3747
  8827  0014A4  2820               	incf	___flmul@aexp^0,w,c
  8828  0014A6  A4D8               	btfss	status,2,c
  8829  0014A8  D008               	goto	i2l3745
  8830  0014AA  0E00               	movlw	0
  8831  0014AC  6E13               	movwf	___flmul@a^0,c
  8832  0014AE  0E00               	movlw	0
  8833  0014B0  6E14               	movwf	(___flmul@a+1)^0,c
  8834  0014B2  0E00               	movlw	0
  8835  0014B4  6E15               	movwf	(___flmul@a+2)^0,c
  8836  0014B6  0E00               	movlw	0
  8837  0014B8  6E16               	movwf	(___flmul@a+3)^0,c
  8838  0014BA                     i2l3745:
  8839  0014BA  8E15               	bsf	(___flmul@a+2)^0,7,c
  8840  0014BC  D008               	goto	i2l1072
  8841  0014BE                     i2l3747:
  8842  0014BE  0E00               	movlw	0
  8843  0014C0  6E13               	movwf	___flmul@a^0,c
  8844  0014C2  0E00               	movlw	0
  8845  0014C4  6E14               	movwf	(___flmul@a+1)^0,c
  8846  0014C6  0E00               	movlw	0
  8847  0014C8  6E15               	movwf	(___flmul@a+2)^0,c
  8848  0014CA  0E00               	movlw	0
  8849  0014CC  6E16               	movwf	(___flmul@a+3)^0,c
  8850  0014CE                     i2l1072:
  8851  0014CE  5020               	movf	___flmul@aexp^0,w,c
  8852  0014D0  B4D8               	btfsc	status,2,c
  8853  0014D2  D003               	goto	i2u382_40
  8854  0014D4  5021               	movf	___flmul@bexp^0,w,c
  8855  0014D6  A4D8               	btfss	status,2,c
  8856  0014D8  D009               	goto	i2l3755
  8857  0014DA                     i2u382_40:
  8858  0014DA  0E00               	movlw	0
  8859  0014DC  6E0F               	movwf	?___flmul^0,c
  8860  0014DE  0E00               	movlw	0
  8861  0014E0  6E10               	movwf	(?___flmul+1)^0,c
  8862  0014E2  0E00               	movlw	0
  8863  0014E4  6E11               	movwf	(?___flmul+2)^0,c
  8864  0014E6  0E00               	movlw	0
  8865  0014E8  6E12               	movwf	(?___flmul+3)^0,c
  8866  0014EA  0012               	return	
  8867  0014EC                     i2l3755:
  8868  0014EC  5015               	movf	(___flmul@a+2)^0,w,c
  8869  0014EE  020F               	mulwf	___flmul@b^0,c
  8870  0014F0  CFF3 F026          	movff	prodl,___flmul@temp
  8871  0014F4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8872  0014F8  5026               	movf	___flmul@temp^0,w,c
  8873  0014FA  6E1C               	movwf	___flmul@grs^0,c
  8874  0014FC  6A1D               	clrf	(___flmul@grs+1)^0,c
  8875  0014FE  6A1E               	clrf	(___flmul@grs+2)^0,c
  8876  001500  6A1F               	clrf	(___flmul@grs+3)^0,c
  8877  001502  5027               	movf	(___flmul@temp+1)^0,w,c
  8878  001504  6E22               	movwf	___flmul@prod^0,c
  8879  001506  6A23               	clrf	(___flmul@prod+1)^0,c
  8880  001508  6A24               	clrf	(___flmul@prod+2)^0,c
  8881  00150A  6A25               	clrf	(___flmul@prod+3)^0,c
  8882  00150C  5014               	movf	(___flmul@a+1)^0,w,c
  8883  00150E  0210               	mulwf	(___flmul@b+1)^0,c
  8884  001510  CFF3 F026          	movff	prodl,___flmul@temp
  8885  001514  CFF4 F027          	movff	prodh,___flmul@temp+1
  8886  001518  5026               	movf	___flmul@temp^0,w,c
  8887  00151A  261C               	addwf	___flmul@grs^0,f,c
  8888  00151C  0E00               	movlw	0
  8889  00151E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8890  001520  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8891  001522  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8892  001524  5027               	movf	(___flmul@temp+1)^0,w,c
  8893  001526  2622               	addwf	___flmul@prod^0,f,c
  8894  001528  0E00               	movlw	0
  8895  00152A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8896  00152C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8897  00152E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8898  001530  5013               	movf	___flmul@a^0,w,c
  8899  001532  0211               	mulwf	(___flmul@b+2)^0,c
  8900  001534  CFF3 F026          	movff	prodl,___flmul@temp
  8901  001538  CFF4 F027          	movff	prodh,___flmul@temp+1
  8902  00153C  5026               	movf	___flmul@temp^0,w,c
  8903  00153E  261C               	addwf	___flmul@grs^0,f,c
  8904  001540  0E00               	movlw	0
  8905  001542  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8906  001544  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8907  001546  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8908  001548  5027               	movf	(___flmul@temp+1)^0,w,c
  8909  00154A  2622               	addwf	___flmul@prod^0,f,c
  8910  00154C  0E00               	movlw	0
  8911  00154E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8912  001550  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8913  001552  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8914  001554  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8915  001558  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8916  00155C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8917  001560  6A1C               	clrf	___flmul@grs^0,c
  8918  001562  5013               	movf	___flmul@a^0,w,c
  8919  001564  0210               	mulwf	(___flmul@b+1)^0,c
  8920  001566  CFF3 F026          	movff	prodl,___flmul@temp
  8921  00156A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8922  00156E  5026               	movf	___flmul@temp^0,w,c
  8923  001570  261C               	addwf	___flmul@grs^0,f,c
  8924  001572  5027               	movf	(___flmul@temp+1)^0,w,c
  8925  001574  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8926  001576  0E00               	movlw	0
  8927  001578  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8928  00157A  0E00               	movlw	0
  8929  00157C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8930  00157E  5014               	movf	(___flmul@a+1)^0,w,c
  8931  001580  020F               	mulwf	___flmul@b^0,c
  8932  001582  CFF3 F026          	movff	prodl,___flmul@temp
  8933  001586  CFF4 F027          	movff	prodh,___flmul@temp+1
  8934  00158A  5026               	movf	___flmul@temp^0,w,c
  8935  00158C  261C               	addwf	___flmul@grs^0,f,c
  8936  00158E  5027               	movf	(___flmul@temp+1)^0,w,c
  8937  001590  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8938  001592  0E00               	movlw	0
  8939  001594  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8940  001596  0E00               	movlw	0
  8941  001598  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8942  00159A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8943  00159E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8944  0015A2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8945  0015A6  6A1C               	clrf	___flmul@grs^0,c
  8946  0015A8  5013               	movf	___flmul@a^0,w,c
  8947  0015AA  020F               	mulwf	___flmul@b^0,c
  8948  0015AC  CFF3 F026          	movff	prodl,___flmul@temp
  8949  0015B0  CFF4 F027          	movff	prodh,___flmul@temp+1
  8950  0015B4  5026               	movf	___flmul@temp^0,w,c
  8951  0015B6  261C               	addwf	___flmul@grs^0,f,c
  8952  0015B8  5027               	movf	(___flmul@temp+1)^0,w,c
  8953  0015BA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8954  0015BC  0E00               	movlw	0
  8955  0015BE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8956  0015C0  0E00               	movlw	0
  8957  0015C2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8958  0015C4  5015               	movf	(___flmul@a+2)^0,w,c
  8959  0015C6  0210               	mulwf	(___flmul@b+1)^0,c
  8960  0015C8  CFF3 F026          	movff	prodl,___flmul@temp
  8961  0015CC  CFF4 F027          	movff	prodh,___flmul@temp+1
  8962  0015D0  5026               	movf	___flmul@temp^0,w,c
  8963  0015D2  2622               	addwf	___flmul@prod^0,f,c
  8964  0015D4  5027               	movf	(___flmul@temp+1)^0,w,c
  8965  0015D6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8966  0015D8  0E00               	movlw	0
  8967  0015DA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8968  0015DC  0E00               	movlw	0
  8969  0015DE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8970  0015E0  5014               	movf	(___flmul@a+1)^0,w,c
  8971  0015E2  0211               	mulwf	(___flmul@b+2)^0,c
  8972  0015E4  CFF3 F026          	movff	prodl,___flmul@temp
  8973  0015E8  CFF4 F027          	movff	prodh,___flmul@temp+1
  8974  0015EC  5026               	movf	___flmul@temp^0,w,c
  8975  0015EE  2622               	addwf	___flmul@prod^0,f,c
  8976  0015F0  5027               	movf	(___flmul@temp+1)^0,w,c
  8977  0015F2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8978  0015F4  0E00               	movlw	0
  8979  0015F6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8980  0015F8  0E00               	movlw	0
  8981  0015FA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8982  0015FC  5015               	movf	(___flmul@a+2)^0,w,c
  8983  0015FE  0211               	mulwf	(___flmul@b+2)^0,c
  8984  001600  CFF3 F026          	movff	prodl,___flmul@temp
  8985  001604  CFF4 F027          	movff	prodh,___flmul@temp+1
  8986  001608  5026               	movf	___flmul@temp^0,w,c
  8987  00160A  6E17               	movwf	??___flmul^0,c
  8988  00160C  5027               	movf	(___flmul@temp+1)^0,w,c
  8989  00160E  6E18               	movwf	(??___flmul+1)^0,c
  8990  001610  6A19               	clrf	(??___flmul+2)^0,c
  8991  001612  6A1A               	clrf	(??___flmul+3)^0,c
  8992  001614  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8993  001618  C018  F019         	movff	??___flmul+1,??___flmul+2
  8994  00161C  C017  F018         	movff	??___flmul,??___flmul+1
  8995  001620  6A17               	clrf	??___flmul^0,c
  8996  001622  5017               	movf	??___flmul^0,w,c
  8997  001624  2622               	addwf	___flmul@prod^0,f,c
  8998  001626  5018               	movf	(??___flmul+1)^0,w,c
  8999  001628  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9000  00162A  5019               	movf	(??___flmul+2)^0,w,c
  9001  00162C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9002  00162E  501A               	movf	(??___flmul+3)^0,w,c
  9003  001630  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9004  001632  C01C  F017         	movff	___flmul@grs,??___flmul
  9005  001636  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  9006  00163A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  9007  00163E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  9008  001642  0E19               	movlw	25
  9009  001644  D005               	goto	i2u383_40
  9010  001646                     i2u383_45:
  9011  001646  90D8               	bcf	status,0,c
  9012  001648  321A               	rrcf	(??___flmul+3)^0,f,c
  9013  00164A  3219               	rrcf	(??___flmul+2)^0,f,c
  9014  00164C  3218               	rrcf	(??___flmul+1)^0,f,c
  9015  00164E  3217               	rrcf	??___flmul^0,f,c
  9016  001650                     i2u383_40:
  9017  001650  2EE8               	decfsz	wreg,f,c
  9018  001652  D7F9               	goto	i2u383_45
  9019  001654  5017               	movf	??___flmul^0,w,c
  9020  001656  2622               	addwf	___flmul@prod^0,f,c
  9021  001658  5018               	movf	(??___flmul+1)^0,w,c
  9022  00165A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9023  00165C  5019               	movf	(??___flmul+2)^0,w,c
  9024  00165E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9025  001660  501A               	movf	(??___flmul+3)^0,w,c
  9026  001662  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9027  001664  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9028  001668  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9029  00166C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9030  001670  6A1C               	clrf	___flmul@grs^0,c
  9031  001672  5020               	movf	___flmul@aexp^0,w,c
  9032  001674  C021  F017         	movff	___flmul@bexp,??___flmul
  9033  001678  6A18               	clrf	(??___flmul+1)^0,c
  9034  00167A  2617               	addwf	??___flmul^0,f,c
  9035  00167C  0E00               	movlw	0
  9036  00167E  2218               	addwfc	(??___flmul+1)^0,f,c
  9037  001680  0E82               	movlw	130
  9038  001682  2417               	addwf	??___flmul^0,w,c
  9039  001684  6E26               	movwf	___flmul@temp^0,c
  9040  001686  0EFF               	movlw	255
  9041  001688  2018               	addwfc	(??___flmul+1)^0,w,c
  9042  00168A  6E27               	movwf	(___flmul@temp+1)^0,c
  9043  00168C  D00F               	goto	i2l3803
  9044  00168E                     i2l3797:
  9045  00168E  90D8               	bcf	status,0,c
  9046  001690  3622               	rlcf	___flmul@prod^0,f,c
  9047  001692  3623               	rlcf	(___flmul@prod+1)^0,f,c
  9048  001694  3624               	rlcf	(___flmul@prod+2)^0,f,c
  9049  001696  3625               	rlcf	(___flmul@prod+3)^0,f,c
  9050  001698  BE1F               	btfsc	(___flmul@grs+3)^0,7,c
  9051  00169A  8022               	bsf	___flmul@prod^0,0,c
  9052  00169C  90D8               	bcf	status,0,c
  9053  00169E  361C               	rlcf	___flmul@grs^0,f,c
  9054  0016A0  361D               	rlcf	(___flmul@grs+1)^0,f,c
  9055  0016A2  361E               	rlcf	(___flmul@grs+2)^0,f,c
  9056  0016A4  361F               	rlcf	(___flmul@grs+3)^0,f,c
  9057  0016A6  0626               	decf	___flmul@temp^0,f,c
  9058  0016A8  A0D8               	btfss	status,0,c
  9059  0016AA  0627               	decf	(___flmul@temp+1)^0,f,c
  9060  0016AC                     i2l3803:
  9061  0016AC  AE24               	btfss	(___flmul@prod+2)^0,7,c
  9062  0016AE  D7EF               	goto	i2l3797
  9063  0016B0  0E00               	movlw	0
  9064  0016B2  6E20               	movwf	___flmul@aexp^0,c
  9065  0016B4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  9066  0016B6  D017               	goto	i2l1081
  9067  0016B8  0EFF               	movlw	255
  9068  0016BA  141C               	andwf	___flmul@grs^0,w,c
  9069  0016BC  6E17               	movwf	??___flmul^0,c
  9070  0016BE  0EFF               	movlw	255
  9071  0016C0  141D               	andwf	(___flmul@grs+1)^0,w,c
  9072  0016C2  6E18               	movwf	(??___flmul+1)^0,c
  9073  0016C4  0EFF               	movlw	255
  9074  0016C6  141E               	andwf	(___flmul@grs+2)^0,w,c
  9075  0016C8  6E19               	movwf	(??___flmul+2)^0,c
  9076  0016CA  0E7F               	movlw	127
  9077  0016CC  141F               	andwf	(___flmul@grs+3)^0,w,c
  9078  0016CE  6E1A               	movwf	(??___flmul+3)^0,c
  9079  0016D0  5017               	movf	??___flmul^0,w,c
  9080  0016D2  1018               	iorwf	(??___flmul+1)^0,w,c
  9081  0016D4  1019               	iorwf	(??___flmul+2)^0,w,c
  9082  0016D6  101A               	iorwf	(??___flmul+3)^0,w,c
  9083  0016D8  B4D8               	btfsc	status,2,c
  9084  0016DA  D003               	goto	i2l1082
  9085  0016DC                     i2u387_40:
  9086  0016DC  0E01               	movlw	1
  9087  0016DE  6E20               	movwf	___flmul@aexp^0,c
  9088  0016E0  D002               	goto	i2l1081
  9089  0016E2                     i2l1082:
  9090  0016E2  B022               	btfsc	___flmul@prod^0,0,c
  9091  0016E4  D7FB               	goto	i2u387_40
  9092  0016E6                     i2l1081:
  9093  0016E6  5020               	movf	___flmul@aexp^0,w,c
  9094  0016E8  B4D8               	btfsc	status,2,c
  9095  0016EA  D01F               	goto	i2l3823
  9096  0016EC  0E01               	movlw	1
  9097  0016EE  2622               	addwf	___flmul@prod^0,f,c
  9098  0016F0  0E00               	movlw	0
  9099  0016F2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9100  0016F4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9101  0016F6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9102  0016F8  A025               	btfss	(___flmul@prod+3)^0,0,c
  9103  0016FA  D017               	goto	i2l3823
  9104  0016FC  C022  F017         	movff	___flmul@prod,??___flmul
  9105  001700  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  9106  001704  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  9107  001708  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  9108  00170C  341A               	rlcf	(??___flmul+3)^0,w,c
  9109  00170E  321A               	rrcf	(??___flmul+3)^0,f,c
  9110  001710  3219               	rrcf	(??___flmul+2)^0,f,c
  9111  001712  3218               	rrcf	(??___flmul+1)^0,f,c
  9112  001714  3217               	rrcf	??___flmul^0,f,c
  9113  001716  C017  F022         	movff	??___flmul,___flmul@prod
  9114  00171A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  9115  00171E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  9116  001722  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  9117  001726  4A26               	infsnz	___flmul@temp^0,f,c
  9118  001728  2A27               	incf	(___flmul@temp+1)^0,f,c
  9119  00172A                     i2l3823:
  9120  00172A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  9121  00172C  D00D               	goto	i2l3827
  9122  00172E  5027               	movf	(___flmul@temp+1)^0,w,c
  9123  001730  E103               	bnz	i2u391_40
  9124  001732  2826               	incf	___flmul@temp^0,w,c
  9125  001734  A0D8               	btfss	status,0,c
  9126  001736  D008               	goto	i2l3827
  9127  001738                     i2u391_40:
  9128  001738  0E00               	movlw	0
  9129  00173A  6E22               	movwf	___flmul@prod^0,c
  9130  00173C  0E00               	movlw	0
  9131  00173E  6E23               	movwf	(___flmul@prod+1)^0,c
  9132  001740  0E80               	movlw	128
  9133  001742  6E24               	movwf	(___flmul@prod+2)^0,c
  9134  001744  0E7F               	movlw	127
  9135  001746  D020               	goto	L10
  9136  001748                     i2l3827:
  9137  001748  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  9138  00174A  D005               	goto	i2u392_40
  9139  00174C  5027               	movf	(___flmul@temp+1)^0,w,c
  9140  00174E  E10E               	bnz	i2l1089
  9141  001750  0426               	decf	___flmul@temp^0,w,c
  9142  001752  B0D8               	btfsc	status,0,c
  9143  001754  D00B               	goto	i2l1089
  9144  001756                     i2u392_40:
  9145  001756  0E00               	movlw	0
  9146  001758  6E22               	movwf	___flmul@prod^0,c
  9147  00175A  0E00               	movlw	0
  9148  00175C  6E23               	movwf	(___flmul@prod+1)^0,c
  9149  00175E  0E00               	movlw	0
  9150  001760  6E24               	movwf	(___flmul@prod+2)^0,c
  9151  001762  0E00               	movlw	0
  9152  001764  6E25               	movwf	(___flmul@prod+3)^0,c
  9153  001766  0E00               	movlw	0
  9154  001768  6E1B               	movwf	___flmul@sign^0,c
  9155  00176A  D00F               	goto	i2l3839
  9156  00176C                     i2l1089:
  9157  00176C  C026  F021         	movff	___flmul@temp,___flmul@bexp
  9158  001770  0EFF               	movlw	255
  9159  001772  1622               	andwf	___flmul@prod^0,f,c
  9160  001774  0EFF               	movlw	255
  9161  001776  1623               	andwf	(___flmul@prod+1)^0,f,c
  9162  001778  0E7F               	movlw	127
  9163  00177A  1624               	andwf	(___flmul@prod+2)^0,f,c
  9164  00177C  0E00               	movlw	0
  9165  00177E  1625               	andwf	(___flmul@prod+3)^0,f,c
  9166  001780  B021               	btfsc	___flmul@bexp^0,0,c
  9167  001782  8E24               	bsf	(___flmul@prod+2)^0,7,c
  9168  001784  90D8               	bcf	status,0,c
  9169  001786  3021               	rrcf	___flmul@bexp^0,w,c
  9170  001788                     L10:
  9171  001788  6E25               	movwf	(___flmul@prod+3)^0,c
  9172  00178A                     i2l3839:
  9173  00178A  501B               	movf	___flmul@sign^0,w,c
  9174  00178C  1225               	iorwf	(___flmul@prod+3)^0,f,c
  9175  00178E  C022  F00F         	movff	___flmul@prod,?___flmul
  9176  001792  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9177  001796  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9178  00179A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9179  00179E  0012               	return		;funcret
  9180  0017A0                     __end_of___flmul:
  9181                           	opt callstack 0
  9182                           
  9183 ;; *************** function ___fldiv *****************
  9184 ;; Defined at:
  9185 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  b               4   39[COMRAM] unsigned char 
  9188 ;;  a               4   43[COMRAM] unsigned char 
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;  grs             4   58[COMRAM] unsigned long 
  9191 ;;  rem             4   51[COMRAM] unsigned long 
  9192 ;;  new_exp         2   56[COMRAM] short 
  9193 ;;  aexp            1   63[COMRAM] unsigned char 
  9194 ;;  bexp            1   62[COMRAM] unsigned char 
  9195 ;;  sign            1   55[COMRAM] unsigned char 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  4   39[COMRAM] unsigned char 
  9198 ;; Registers used:
  9199 ;;		wreg, status,2, status,0
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9205 ;;      Params:         8       0       0       0       0       0       0
  9206 ;;      Locals:        13       0       0       0       0       0       0
  9207 ;;      Temps:          4       0       0       0       0       0       0
  9208 ;;      Totals:        25       0       0       0       0       0       0
  9209 ;;Total ram usage:       25 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; This function calls:
  9212 ;;		Nothing
  9213 ;; This function is called by:
  9214 ;;		_ADC_Read
  9215 ;;		_efgtoa
  9216 ;;		_MQGetPercentage
  9217 ;;		_MQ_Read
  9218 ;;		_powf
  9219 ;;		_logf
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text53
  9224  001AAC                     __ptext53:
  9225                           	opt callstack 0
  9226  001AAC                     ___fldiv:
  9227                           	opt callstack 18
  9228                           
  9229                           ;incstack = 0
  9230  001AAC  502B               	movf	(___fldiv@b+3)^0,w,c
  9231  001AAE  0B80               	andlw	128
  9232  001AB0  6E38               	movwf	___fldiv@sign^0,c
  9233  001AB2  502B               	movf	(___fldiv@b+3)^0,w,c
  9234  001AB4  242B               	addwf	(___fldiv@b+3)^0,w,c
  9235  001AB6  6E3F               	movwf	___fldiv@bexp^0,c
  9236  001AB8  BE2A               	btfsc	(___fldiv@b+2)^0,7,c
  9237  001ABA  803F               	bsf	___fldiv@bexp^0,0,c
  9238  001ABC  503F               	movf	___fldiv@bexp^0,w,c
  9239  001ABE  B4D8               	btfsc	status,2,c
  9240  001AC0  D00D               	goto	i2l3593
  9241  001AC2  283F               	incf	___fldiv@bexp^0,w,c
  9242  001AC4  A4D8               	btfss	status,2,c
  9243  001AC6  D008               	goto	i2l3589
  9244  001AC8  0E00               	movlw	0
  9245  001ACA  6E28               	movwf	___fldiv@b^0,c
  9246  001ACC  0E00               	movlw	0
  9247  001ACE  6E29               	movwf	(___fldiv@b+1)^0,c
  9248  001AD0  0E00               	movlw	0
  9249  001AD2  6E2A               	movwf	(___fldiv@b+2)^0,c
  9250  001AD4  0E00               	movlw	0
  9251  001AD6  6E2B               	movwf	(___fldiv@b+3)^0,c
  9252  001AD8                     i2l3589:
  9253  001AD8  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  9254  001ADA  D006               	goto	L11
  9255  001ADC                     i2l3593:
  9256  001ADC  0E00               	movlw	0
  9257  001ADE  6E28               	movwf	___fldiv@b^0,c
  9258  001AE0  0E00               	movlw	0
  9259  001AE2  6E29               	movwf	(___fldiv@b+1)^0,c
  9260  001AE4  0E00               	movlw	0
  9261  001AE6  6E2A               	movwf	(___fldiv@b+2)^0,c
  9262  001AE8                     L11:
  9263  001AE8  0E00               	movlw	0
  9264  001AEA  6E2B               	movwf	(___fldiv@b+3)^0,c
  9265  001AEC  502F               	movf	(___fldiv@a+3)^0,w,c
  9266  001AEE  0B80               	andlw	128
  9267  001AF0  1A38               	xorwf	___fldiv@sign^0,f,c
  9268  001AF2  502F               	movf	(___fldiv@a+3)^0,w,c
  9269  001AF4  242F               	addwf	(___fldiv@a+3)^0,w,c
  9270  001AF6  6E40               	movwf	___fldiv@aexp^0,c
  9271  001AF8  BE2E               	btfsc	(___fldiv@a+2)^0,7,c
  9272  001AFA  8040               	bsf	___fldiv@aexp^0,0,c
  9273  001AFC  5040               	movf	___fldiv@aexp^0,w,c
  9274  001AFE  B4D8               	btfsc	status,2,c
  9275  001B00  D00D               	goto	i2l3613
  9276  001B02  2840               	incf	___fldiv@aexp^0,w,c
  9277  001B04  A4D8               	btfss	status,2,c
  9278  001B06  D008               	goto	i2l3609
  9279  001B08  0E00               	movlw	0
  9280  001B0A  6E2C               	movwf	___fldiv@a^0,c
  9281  001B0C  0E00               	movlw	0
  9282  001B0E  6E2D               	movwf	(___fldiv@a+1)^0,c
  9283  001B10  0E00               	movlw	0
  9284  001B12  6E2E               	movwf	(___fldiv@a+2)^0,c
  9285  001B14  0E00               	movlw	0
  9286  001B16  6E2F               	movwf	(___fldiv@a+3)^0,c
  9287  001B18                     i2l3609:
  9288  001B18  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  9289  001B1A  D006               	goto	L12
  9290  001B1C                     i2l3613:
  9291  001B1C  0E00               	movlw	0
  9292  001B1E  6E2C               	movwf	___fldiv@a^0,c
  9293  001B20  0E00               	movlw	0
  9294  001B22  6E2D               	movwf	(___fldiv@a+1)^0,c
  9295  001B24  0E00               	movlw	0
  9296  001B26  6E2E               	movwf	(___fldiv@a+2)^0,c
  9297  001B28                     L12:
  9298  001B28  0E00               	movlw	0
  9299  001B2A  6E2F               	movwf	(___fldiv@a+3)^0,c
  9300  001B2C  502C               	movf	___fldiv@a^0,w,c
  9301  001B2E  102D               	iorwf	(___fldiv@a+1)^0,w,c
  9302  001B30  102E               	iorwf	(___fldiv@a+2)^0,w,c
  9303  001B32  102F               	iorwf	(___fldiv@a+3)^0,w,c
  9304  001B34  A4D8               	btfss	status,2,c
  9305  001B36  D017               	goto	i2l3627
  9306  001B38  0E00               	movlw	0
  9307  001B3A  6E28               	movwf	___fldiv@b^0,c
  9308  001B3C  0E00               	movlw	0
  9309  001B3E  6E29               	movwf	(___fldiv@b+1)^0,c
  9310  001B40  0E00               	movlw	0
  9311  001B42  6E2A               	movwf	(___fldiv@b+2)^0,c
  9312  001B44  0E00               	movlw	0
  9313  001B46  6E2B               	movwf	(___fldiv@b+3)^0,c
  9314  001B48  0E80               	movlw	128
  9315  001B4A  122A               	iorwf	(___fldiv@b+2)^0,f,c
  9316  001B4C  0E7F               	movlw	127
  9317  001B4E  122B               	iorwf	(___fldiv@b+3)^0,f,c
  9318  001B50                     i2l3621:
  9319  001B50  5038               	movf	___fldiv@sign^0,w,c
  9320  001B52  122B               	iorwf	(___fldiv@b+3)^0,f,c
  9321  001B54  C028  F028         	movff	___fldiv@b,?___fldiv
  9322  001B58  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  9323  001B5C  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  9324  001B60  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  9325  001B64  0012               	return	
  9326  001B66                     i2l3627:
  9327  001B66  503F               	movf	___fldiv@bexp^0,w,c
  9328  001B68  A4D8               	btfss	status,2,c
  9329  001B6A  D009               	goto	i2l3635
  9330  001B6C  0E00               	movlw	0
  9331  001B6E  6E28               	movwf	?___fldiv^0,c
  9332  001B70  0E00               	movlw	0
  9333  001B72  6E29               	movwf	(?___fldiv+1)^0,c
  9334  001B74  0E00               	movlw	0
  9335  001B76  6E2A               	movwf	(?___fldiv+2)^0,c
  9336  001B78  0E00               	movlw	0
  9337  001B7A  6E2B               	movwf	(?___fldiv+3)^0,c
  9338  001B7C  0012               	return	
  9339  001B7E                     i2l3635:
  9340  001B7E  5040               	movf	___fldiv@aexp^0,w,c
  9341  001B80  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  9342  001B84  6A31               	clrf	(??___fldiv+1)^0,c
  9343  001B86  5E30               	subwf	??___fldiv^0,f,c
  9344  001B88  0E00               	movlw	0
  9345  001B8A  5A31               	subwfb	(??___fldiv+1)^0,f,c
  9346  001B8C  0E7F               	movlw	127
  9347  001B8E  2430               	addwf	??___fldiv^0,w,c
  9348  001B90  6E39               	movwf	___fldiv@new_exp^0,c
  9349  001B92  0E00               	movlw	0
  9350  001B94  2031               	addwfc	(??___fldiv+1)^0,w,c
  9351  001B96  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  9352  001B98  C028  F034         	movff	___fldiv@b,___fldiv@rem
  9353  001B9C  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  9354  001BA0  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  9355  001BA4  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  9356  001BA8  0E00               	movlw	0
  9357  001BAA  6E28               	movwf	___fldiv@b^0,c
  9358  001BAC  0E00               	movlw	0
  9359  001BAE  6E29               	movwf	(___fldiv@b+1)^0,c
  9360  001BB0  0E00               	movlw	0
  9361  001BB2  6E2A               	movwf	(___fldiv@b+2)^0,c
  9362  001BB4  0E00               	movlw	0
  9363  001BB6  6E2B               	movwf	(___fldiv@b+3)^0,c
  9364  001BB8  0E00               	movlw	0
  9365  001BBA  6E3B               	movwf	___fldiv@grs^0,c
  9366  001BBC  0E00               	movlw	0
  9367  001BBE  6E3C               	movwf	(___fldiv@grs+1)^0,c
  9368  001BC0  0E00               	movlw	0
  9369  001BC2  6E3D               	movwf	(___fldiv@grs+2)^0,c
  9370  001BC4  0E00               	movlw	0
  9371  001BC6  6E3E               	movwf	(___fldiv@grs+3)^0,c
  9372  001BC8  0E00               	movlw	0
  9373  001BCA  6E40               	movwf	___fldiv@aexp^0,c
  9374  001BCC  D028               	goto	i2l1042
  9375  001BCE                     i2l3645:
  9376  001BCE  5040               	movf	___fldiv@aexp^0,w,c
  9377  001BD0  B4D8               	btfsc	status,2,c
  9378  001BD2  D011               	goto	i2l3653
  9379  001BD4  90D8               	bcf	status,0,c
  9380  001BD6  3634               	rlcf	___fldiv@rem^0,f,c
  9381  001BD8  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  9382  001BDA  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  9383  001BDC  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  9384  001BDE  90D8               	bcf	status,0,c
  9385  001BE0  3628               	rlcf	___fldiv@b^0,f,c
  9386  001BE2  3629               	rlcf	(___fldiv@b+1)^0,f,c
  9387  001BE4  362A               	rlcf	(___fldiv@b+2)^0,f,c
  9388  001BE6  362B               	rlcf	(___fldiv@b+3)^0,f,c
  9389  001BE8  BE3E               	btfsc	(___fldiv@grs+3)^0,7,c
  9390  001BEA  8028               	bsf	___fldiv@b^0,0,c
  9391  001BEC  90D8               	bcf	status,0,c
  9392  001BEE  363B               	rlcf	___fldiv@grs^0,f,c
  9393  001BF0  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  9394  001BF2  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  9395  001BF4  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  9396  001BF6                     i2l3653:
  9397  001BF6  502C               	movf	___fldiv@a^0,w,c
  9398  001BF8  5C34               	subwf	___fldiv@rem^0,w,c
  9399  001BFA  502D               	movf	(___fldiv@a+1)^0,w,c
  9400  001BFC  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  9401  001BFE  502E               	movf	(___fldiv@a+2)^0,w,c
  9402  001C00  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  9403  001C02  502F               	movf	(___fldiv@a+3)^0,w,c
  9404  001C04  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  9405  001C06  A0D8               	btfss	status,0,c
  9406  001C08  D009               	goto	i2l3659
  9407  001C0A  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  9408  001C0C  502C               	movf	___fldiv@a^0,w,c
  9409  001C0E  5E34               	subwf	___fldiv@rem^0,f,c
  9410  001C10  502D               	movf	(___fldiv@a+1)^0,w,c
  9411  001C12  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  9412  001C14  502E               	movf	(___fldiv@a+2)^0,w,c
  9413  001C16  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  9414  001C18  502F               	movf	(___fldiv@a+3)^0,w,c
  9415  001C1A  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  9416  001C1C                     i2l3659:
  9417  001C1C  2A40               	incf	___fldiv@aexp^0,f,c
  9418  001C1E                     i2l1042:
  9419  001C1E  0E19               	movlw	25
  9420  001C20  6440               	cpfsgt	___fldiv@aexp^0,c
  9421  001C22  D7D5               	goto	i2l3645
  9422  001C24  5034               	movf	___fldiv@rem^0,w,c
  9423  001C26  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  9424  001C28  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  9425  001C2A  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  9426  001C2C  B4D8               	btfsc	status,2,c
  9427  001C2E  D011               	goto	i2l3671
  9428  001C30  803B               	bsf	___fldiv@grs^0,0,c
  9429  001C32  D00F               	goto	i2l3671
  9430  001C34                     i2l3665:
  9431  001C34  90D8               	bcf	status,0,c
  9432  001C36  3628               	rlcf	___fldiv@b^0,f,c
  9433  001C38  3629               	rlcf	(___fldiv@b+1)^0,f,c
  9434  001C3A  362A               	rlcf	(___fldiv@b+2)^0,f,c
  9435  001C3C  362B               	rlcf	(___fldiv@b+3)^0,f,c
  9436  001C3E  BE3E               	btfsc	(___fldiv@grs+3)^0,7,c
  9437  001C40  8028               	bsf	___fldiv@b^0,0,c
  9438  001C42  90D8               	bcf	status,0,c
  9439  001C44  363B               	rlcf	___fldiv@grs^0,f,c
  9440  001C46  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  9441  001C48  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  9442  001C4A  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  9443  001C4C  0639               	decf	___fldiv@new_exp^0,f,c
  9444  001C4E  A0D8               	btfss	status,0,c
  9445  001C50  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  9446  001C52                     i2l3671:
  9447  001C52  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  9448  001C54  D7EF               	goto	i2l3665
  9449  001C56  0E00               	movlw	0
  9450  001C58  6E40               	movwf	___fldiv@aexp^0,c
  9451  001C5A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  9452  001C5C  D017               	goto	i2l1053
  9453  001C5E  0EFF               	movlw	255
  9454  001C60  143B               	andwf	___fldiv@grs^0,w,c
  9455  001C62  6E30               	movwf	??___fldiv^0,c
  9456  001C64  0EFF               	movlw	255
  9457  001C66  143C               	andwf	(___fldiv@grs+1)^0,w,c
  9458  001C68  6E31               	movwf	(??___fldiv+1)^0,c
  9459  001C6A  0EFF               	movlw	255
  9460  001C6C  143D               	andwf	(___fldiv@grs+2)^0,w,c
  9461  001C6E  6E32               	movwf	(??___fldiv+2)^0,c
  9462  001C70  0E7F               	movlw	127
  9463  001C72  143E               	andwf	(___fldiv@grs+3)^0,w,c
  9464  001C74  6E33               	movwf	(??___fldiv+3)^0,c
  9465  001C76  5030               	movf	??___fldiv^0,w,c
  9466  001C78  1031               	iorwf	(??___fldiv+1)^0,w,c
  9467  001C7A  1032               	iorwf	(??___fldiv+2)^0,w,c
  9468  001C7C  1033               	iorwf	(??___fldiv+3)^0,w,c
  9469  001C7E  B4D8               	btfsc	status,2,c
  9470  001C80  D003               	goto	i2l1054
  9471  001C82                     i2u368_40:
  9472  001C82  0E01               	movlw	1
  9473  001C84  6E40               	movwf	___fldiv@aexp^0,c
  9474  001C86  D002               	goto	i2l1053
  9475  001C88                     i2l1054:
  9476  001C88  B028               	btfsc	___fldiv@b^0,0,c
  9477  001C8A  D7FB               	goto	i2u368_40
  9478  001C8C                     i2l1053:
  9479  001C8C  5040               	movf	___fldiv@aexp^0,w,c
  9480  001C8E  B4D8               	btfsc	status,2,c
  9481  001C90  D01F               	goto	i2l3691
  9482  001C92  0E01               	movlw	1
  9483  001C94  2628               	addwf	___fldiv@b^0,f,c
  9484  001C96  0E00               	movlw	0
  9485  001C98  2229               	addwfc	(___fldiv@b+1)^0,f,c
  9486  001C9A  222A               	addwfc	(___fldiv@b+2)^0,f,c
  9487  001C9C  222B               	addwfc	(___fldiv@b+3)^0,f,c
  9488  001C9E  A02B               	btfss	(___fldiv@b+3)^0,0,c
  9489  001CA0  D017               	goto	i2l3691
  9490  001CA2  C028  F030         	movff	___fldiv@b,??___fldiv
  9491  001CA6  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  9492  001CAA  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  9493  001CAE  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  9494  001CB2  3433               	rlcf	(??___fldiv+3)^0,w,c
  9495  001CB4  3233               	rrcf	(??___fldiv+3)^0,f,c
  9496  001CB6  3232               	rrcf	(??___fldiv+2)^0,f,c
  9497  001CB8  3231               	rrcf	(??___fldiv+1)^0,f,c
  9498  001CBA  3230               	rrcf	??___fldiv^0,f,c
  9499  001CBC  C030  F028         	movff	??___fldiv,___fldiv@b
  9500  001CC0  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  9501  001CC4  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  9502  001CC8  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  9503  001CCC  4A39               	infsnz	___fldiv@new_exp^0,f,c
  9504  001CCE  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  9505  001CD0                     i2l3691:
  9506  001CD0  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9507  001CD2  D010               	goto	i2l3695
  9508  001CD4  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  9509  001CD6  E103               	bnz	i2u372_40
  9510  001CD8  2839               	incf	___fldiv@new_exp^0,w,c
  9511  001CDA  A0D8               	btfss	status,0,c
  9512  001CDC  D00B               	goto	i2l3695
  9513  001CDE                     i2u372_40:
  9514  001CDE  0E00               	movlw	0
  9515  001CE0  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  9516  001CE2  6839               	setf	___fldiv@new_exp^0,c
  9517  001CE4  0E00               	movlw	0
  9518  001CE6  6E28               	movwf	___fldiv@b^0,c
  9519  001CE8  0E00               	movlw	0
  9520  001CEA  6E29               	movwf	(___fldiv@b+1)^0,c
  9521  001CEC  0E00               	movlw	0
  9522  001CEE  6E2A               	movwf	(___fldiv@b+2)^0,c
  9523  001CF0  0E00               	movlw	0
  9524  001CF2  6E2B               	movwf	(___fldiv@b+3)^0,c
  9525  001CF4                     i2l3695:
  9526  001CF4  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9527  001CF6  D005               	goto	i2u373_40
  9528  001CF8  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  9529  001CFA  E111               	bnz	i2l3699
  9530  001CFC  0439               	decf	___fldiv@new_exp^0,w,c
  9531  001CFE  B0D8               	btfsc	status,0,c
  9532  001D00  D00E               	goto	i2l3699
  9533  001D02                     i2u373_40:
  9534  001D02  0E00               	movlw	0
  9535  001D04  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  9536  001D06  0E00               	movlw	0
  9537  001D08  6E39               	movwf	___fldiv@new_exp^0,c
  9538  001D0A  0E00               	movlw	0
  9539  001D0C  6E28               	movwf	___fldiv@b^0,c
  9540  001D0E  0E00               	movlw	0
  9541  001D10  6E29               	movwf	(___fldiv@b+1)^0,c
  9542  001D12  0E00               	movlw	0
  9543  001D14  6E2A               	movwf	(___fldiv@b+2)^0,c
  9544  001D16  0E00               	movlw	0
  9545  001D18  6E2B               	movwf	(___fldiv@b+3)^0,c
  9546  001D1A  0E00               	movlw	0
  9547  001D1C  6E38               	movwf	___fldiv@sign^0,c
  9548  001D1E                     i2l3699:
  9549  001D1E  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  9550  001D22  A03F               	btfss	___fldiv@bexp^0,0,c
  9551  001D24  D002               	goto	i2l3705
  9552  001D26  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  9553  001D28  D001               	goto	i2l3707
  9554  001D2A                     i2l3705:
  9555  001D2A  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  9556  001D2C                     i2l3707:
  9557  001D2C  90D8               	bcf	status,0,c
  9558  001D2E  303F               	rrcf	___fldiv@bexp^0,w,c
  9559  001D30  6E2B               	movwf	(___fldiv@b+3)^0,c
  9560  001D32  D70E               	goto	i2l3621
  9561  001D34                     __end_of___fldiv:
  9562                           	opt callstack 0
  9563                           
  9564                           	psect	rparam
  9565  0000                     
  9566                           	psect	temp
  9567  00007F                     btemp:
  9568                           	opt callstack 0
  9569  00007F                     	ds	1
  9570  0000                     int$flags	set	btemp
  9571  0000                     wtemp8	set	btemp+1
  9572  0000                     ttemp5	set	btemp+1
  9573  0000                     ttemp6	set	btemp+4
  9574  0000                     ttemp7	set	btemp+8
  9575                           tosu	equ	0xFFF
  9576                           tosh	equ	0xFFE
  9577                           tosl	equ	0xFFD
  9578                           stkptr	equ	0xFFC
  9579                           pclatu	equ	0xFFB
  9580                           pclath	equ	0xFFA
  9581                           pcl	equ	0xFF9
  9582                           tblptru	equ	0xFF8
  9583                           tblptrh	equ	0xFF7
  9584                           tblptrl	equ	0xFF6
  9585                           tablat	equ	0xFF5
  9586                           prodh	equ	0xFF4
  9587                           prodl	equ	0xFF3
  9588                           indf0	equ	0xFEF
  9589                           postinc0	equ	0xFEE
  9590                           postdec0	equ	0xFED
  9591                           preinc0	equ	0xFEC
  9592                           plusw0	equ	0xFEB
  9593                           fsr0h	equ	0xFEA
  9594                           fsr0l	equ	0xFE9
  9595                           wreg	equ	0xFE8
  9596                           indf1	equ	0xFE7
  9597                           postinc1	equ	0xFE6
  9598                           postdec1	equ	0xFE5
  9599                           preinc1	equ	0xFE4
  9600                           plusw1	equ	0xFE3
  9601                           fsr1h	equ	0xFE2
  9602                           fsr1l	equ	0xFE1
  9603                           bsr	equ	0xFE0
  9604                           indf2	equ	0xFDF
  9605                           postinc2	equ	0xFDE
  9606                           postdec2	equ	0xFDD
  9607                           preinc2	equ	0xFDC
  9608                           plusw2	equ	0xFDB
  9609                           fsr2h	equ	0xFDA
  9610                           fsr2l	equ	0xFD9
  9611                           status	equ	0xFD8


Data Sizes:
    Strings     42
    Constant    148
    Data        57
    BSS         246
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     91     127
    BANK1           256     19     186
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), r(BANK2[100]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), r(BANK2[100]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK2[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK2[100]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1577_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK2[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK2[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    memset@dest	PTR void  size(2) Largest target is 100
		 -> r(BANK2[100]), 

    memset@s	PTR unsigned char  size(2) Largest target is 100
		 -> r(BANK2[100]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), r(BANK2[100]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), r(BANK2[100]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), r(BANK2[100]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> r(BANK2[100]), 

    Send2Lcd@Lcd	PTR const unsigned char  size(2) Largest target is 100
		 -> r(BANK2[100]), STR_2(CODE[6]), STR_1(CODE[8]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 10
		 -> mystring(BANK1[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    i2_Send2Lcd->i2_Cmd
    i2_Send2Lcd->i2_Data
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _LCD_clear->i2_Cmd
    _ADC_Read->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    _Hi_ISR->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _SYSTEM_Initialize->_LCD_init
    _LCD_init->_Send2Lcd
    _Send2Lcd->_Cmd
    _Send2Lcd->_Data

Critical Paths under _Lo_ISR in BANK1

    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1271
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1271
                     _ADC_Initialize
               _INTERRUPT_Initialize
                           _LCD_init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                        _buzzer_init
 ---------------------------------------------------------------------------------
 (2) _buzzer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_init                                             1     1      0    1271
                                             18 BANK1      1     1      0
                                _Cmd
                           _Send2Lcd
 ---------------------------------------------------------------------------------
 (3) _Send2Lcd                                             4     2      2     819
                                             14 BANK1      4     2      2
                                _Cmd
                               _Data
 ---------------------------------------------------------------------------------
 (4) _Data                                                 3     1      2      98
                                             11 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Cmd                                                  3     1      2     452
                                             11 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Lo_ISR                                               5     5      0     570
                                              6 BANK1      5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (6) _MyusartRead                                          0     0      0     570
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     548
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (7) _UART_Write                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Hi_ISR                                              13    13      0   79859
                                             78 BANK0     13    13      0
                           _ADC_Read
                          _LCD_clear
                             _memset
                            _sprintf
                         i2_Send2Lcd
 ---------------------------------------------------------------------------------
 (9) i2_Send2Lcd                                           4     2      2     215
                                              3 COMRAM     4     2      2
                              i2_Cmd
                             i2_Data
 ---------------------------------------------------------------------------------
 (10) i2_Data                                              3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (9) _sprintf                                             20    10     10   60634
                                             58 BANK0     20    10     10
                           _ADC_Read (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (10) _vfprintf                                            8     2      6   60275
                                            120 COMRAM     6     0      6
                                             56 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (11) _vfpfcnvrt                                          47    41      6   59900
                                             96 COMRAM    24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (12) _strncmp                                            11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (12) _stoa                                               22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (12) _efgtoa                                             68    61      7   51849
                                             84 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
                          i2___awmod
 ---------------------------------------------------------------------------------
 (13) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _tolower                                             8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (13) _isupper                                             6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) _strcpy                                             10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (13) _pad                                                11     5      6    4153
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (13) _strlen                                              4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _fputs                                               7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (13) _fputc                                               9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (14) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (13) _floorf                                             20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fpclassifyf                                      14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___fltol                                            10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (13) ___flsub                                             8     0      8   13305
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (14) ___fladd                                            16     8      8    8070
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (13) ___flneg                                             4     0      4     249
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (13) ___flge                                             12     4      8    1150
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fleq                                             12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (13) ___awdiv                                             8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) _atoi                                               15    13      2    1198
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (13) _isspace                                             7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (12) _isdigit                                             6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) ___wmul                                              6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) _memset                                              12     6      6     947
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (9) _LCD_clear                                            0     0      0      74
                              i2_Cmd
 ---------------------------------------------------------------------------------
 (10) i2_Cmd                                               3     1      2      74
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (9) _ADC_Read                                            15    11      4   17989
                                             64 COMRAM    15    11      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (10) ___xxtofl                                           14    10      4     830
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___flmul                                            25    17      8   12920
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) ___fldiv                                            25    17      8    4071
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _LCD_init
       _Cmd
       _Send2Lcd
         _Cmd
         _Data
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _buzzer_init

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod

 _Hi_ISR (ROOT)
   _ADC_Read
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
   _LCD_clear
     i2_Cmd
   _memset
   _sprintf
     _ADC_Read (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___xxtofl
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___fladd
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
           i2___awmod
         _fputc
           _putch
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
           _strlen
         _strncmp
         _tolower
           _isupper
   i2_Send2Lcd
     i2_Cmd
     i2_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      64       8       39.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     13      BA       6       72.7%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     5B      7F       4       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21B      14        0.0%
DATA                 0      0     21B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 22 10:09:34 2019

                   ___fldiv@aexp 0040                     ___fldiv@bexp 003F  
                              _r 0200                     ___fldiv@sign 0038  
                             _L1 0659                               _L2 0655  
                             _L3 0651                               _L4 064D  
                             _L5 0649                               _L6 0645  
                             _P1 0641                               _P2 063D  
                             _P3 0639                               _P4 0635  
                             _P5 0631                     ___awdiv@sign 0006  
                             _Ro 00F1                               _bp 0681  
                             _co 0118                               _cp 061D  
                             bsr 000FE0              ___wmul@multiplicand 0003  
                    __CFG_BORV$3 000000                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l252 3234  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                            _Lg1 0675                              _Lg2 0671  
                            _Lg3 066D                              _Lg4 0669  
                            _Cmd 3008                              _lg2 062D  
                            _pad 2942                              _lpg 011C  
                            _ovt 0621                     ___awmod@sign 01AC  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ___flmul@aexp 0020                     ___flmul@bexp 0021  
                   ___flmul@sign 001B                     ___flmul@temp 0026  
                   ___flmul@prod 0022                     __CFG_LVP$OFF 000000  
                           ?_Cmd 01B2                     ___fltol@exp1 000A  
                   __CFG_WDT$OFF 000000                             l4453 2CCC  
                           ?_pad 0011                             l4457 2D00  
                           STR_1 069E                             STR_2 06A6  
                           STR_3 0695                             STR_4 06AC  
                           STR_5 06B4                             STR_8 06B0  
                           STR_9 06B8                             _CREN 007D5C  
                           _LATD 000F8C                             _RCIF 007CF5  
                           u6407 2AF2                             u6417 2B0C  
                           u6427 2B3E                             u6437 2FE2  
                           u6447 2FEC                             u6457 2FFC  
                           u4970 2CEC                             u6467 3012  
                           u4980 2D20                             u6477 301C  
                           u6487 302C                             u4977 2CE2  
                           u4987 2D16                             _TMR1 000FCE  
                   __CFG_WDTPS$1 000000                             _Data 2FD8  
                           _dbuf 0122                             _cp_h 0691  
                           _cp_l 068D                             _dp_h 0609  
                           _dp_l 0601                             _atoi 1EEA  
                           _main 3230                             _huge 0661  
                           _prec 00E9                             _nout 00E5  
                           pad@i 0018                             pad@p 0015  
                           fsr0h 000FEA                             _tiny 065D  
                           fsr1h 000FE2                             indf0 000FEF  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001A                             fsr2l 000FD9  
                           _stoa 229C                             btemp 007F  
               __end_of_ADC_Read 25AA                    ___fpclassifyf 267A  
                           prodh 000FF4                             prodl 000FF3  
                           start 0058                  ___fldiv@new_exp 0039  
             __size_of_LCD_clear 000E                     _tolower$1767 000D  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                          ??_Cmd 01B4                            ??_pad 0017  
                          ?_Data 01B2   __size_of_OSCILLATOR_Initialize 0008  
               __end_of_LCD_init 2B66    __end_of_OSCILLATOR_Initialize 3230  
                  ___fltol@sign1 0009                            ?_atoi 0008  
                __end_of___fladd 1AAC                            ?_main 0001  
                __end_of___fldiv 1D34                  __end_of___awdiv 2AEA  
                __end_of___flneg 30F4                            _ADRES 000FC3  
                          STR_12 06BC                            STR_14 06BC  
                __end_of___awmod 2C4A                  __end_of___flmul 17A0  
                __end_of___flsub 2F62                  __end_of___fltol 2800  
                          ?_stoa 000A                  ___awdiv@divisor 0003  
                          _IRCF0 007E9C                            _IRCF1 007E9D  
                          _IRCF2 007E9E                            i1l100 0040  
                          i2l304 2972                            i2l167 24E8  
                          i2l263 249E                            i2l345 09FC  
                          i2l409 2302                            i2l371 0CDE  
                          i2l723 263E                  ___awdiv@counter 0005  
                          i2l987 18E2                            i2l988 18C0  
                          _RCREG 000FAE                     vfpfcnvrt@fmt 0063  
                          i2_Cmd 30F4                            _TRISA 000F92  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TXREG 000FAD                    __CFG_PWRT$OFF 000000  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                      ?_UART_Write 0001  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                            _lg2_h 0629  
                          _lg2_l 0625                   __CFG_EBTRB$OFF 000000  
                          _flags 00EB                            _cycle 00F5  
                          _count 00EF                            _errno 00E3  
                          _ivln2 0619                            _fputc 28A2  
                          _fputs 2FA0                  __end_of_isdigit 3098  
                __end_of_ivln2_h 068D                  __end_of_ivln2_l 0619  
                          _two24 0665                            _value 0100  
                          atoi@n 0015                            pad@fp 0011  
                          atoi@s 0008                            _smoke 0114  
                          _width 00E7                            _putch 323E  
                __end_of_isspace 2FA0          __end_of_TMR1_Initialize 31D8  
                __end_of_isupper 3068                            tablat 000FF5  
                          plusw1 000FE3                            plusw2 000FDB  
                          stoa@i 0016                            stoa@l 001E  
                          stoa@p 001C                            stoa@s 000C  
                          stoa@w 0018                            ttemp5 0080  
                          ttemp6 0083                            ttemp7 0087  
                          status 000FD8                            wtemp8 0080  
                __end_of_sprintf 2E36                   ?___fpclassifyf 0001  
                __end_of_tolower 2ED4                      ?i2_Send2Lcd 0004  
                __end_of_strncmp 28A2                     ?_buzzer_init 0001  
             __size_ofi2___awmod 0070                   __CFG_PBADEN$ON 000000  
                   __end_of_Data 3008                  __initialization 2B66  
                   __end_of_cp_h 0695                     __end_of_cp_l 0691  
                   __end_of_dp_h 0611                     __end_of_dp_l 0609  
                   __end_of_atoi 202A                     __end_of_main 3236  
                   __end_of_huge 0665                     __end_of_tiny 0661  
                   __end_of_stoa 23C8                           ??_Data 01B4  
               __end_of_Send2Lcd 2D28                           ??_atoi 000A  
                         ??_main 01BA                           ??_stoa 000E  
                  __activetblptr 000002                      Send2Lcd@Adr 01B8  
                    Send2Lcd@Lcd 01B5                           ?i2_Cmd 0001  
              __end_of_LCD_clear 3228                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           ?_fputc 0001  
                         ?_fputs 000A                 ___awdiv@dividend 0001  
                         ?_putch 0001                           _GAS_CO 00F9  
                         i2l1003 19B4                           i2l1012 1A1A  
                         i2l1013 1A16                           i2l1120 20E6  
                         i2l1113 2068                           i2l1042 1C1E  
                         i2l1053 1C8C                           i2l1054 1C88  
                         i2l1072 14CE                           i2l1081 16E6  
                         i2l1082 16E2                           i2l1180 1E4A  
                         i1l4621 2BEE                           i1l4631 2C10  
                         i2l1168 2020                           i2l1089 176C  
                         i1l4641 2C32                           i1l4625 2BFA  
                         i2l1517 2ECA                           i2l4021 2C98  
                         i2l4013 2C78                           i2l4005 2C5E  
                         i1l4645 2C40                           i1l4637 2C28  
                         i1l4629 2C08                           i2l4015 2C80  
                         i2l4025 2CA2                           i2l4009 2C6A  
                         i2l4121 08CC                           i1l4593 3210  
                         i2l3403 193E                           i2l3315 1814  
                         i2l4211 0C7E                           i2l4131 0990  
                         i2l4107 086E                           i2l4115 0888  
                         i2l3421 19D8                           i2l3413 19A4  
                         i2l4029 2CB0                           i2l4221 0CF8  
                         i2l4205 0C40                           i2l4125 0906  
                         i2l3431 19EE                           i2l3327 1838  
                         i2l3319 1818                           i2l3511 26F2  
                         i2l3263 2FC0                           i2l4143 09E4  
                         i2l4127 0954                           i2l4071 0738  
                         i2l4401 1F46                           i2l3521 273C  
                         i2l3249 28BA                           i2l4233 0D7A  
                         i2l4161 0A54                           i2l4153 0A0C  
                         i1l4865 003C                           i2l4411 1F64  
                         i2l3371 18D2                           i2l3291 17CC  
                         i2l3515 26FC                           i2l3259 2FAA  
                         i2l3267 3158                           i2l4219 0CD6  
                         i2l4163 0A58                           i2l4147 0A06  
                         i2l4091 07D2                           i2l4059 070A  
                         i2l3621 1B50                           i2l3613 1B1C  
                         i2l4413 1F8C                           i2l3437 19F8  
                         i2l3357 1874                           i2l3269 315C  
                         i2l4309 0F72                           i2l4245 0DA8  
                         i2l4253 0DC8                           i2l4261 0DEC  
                         i2l4173 0A76                           i2l4093 07DC  
                         i2l4407 1F56                           i2l3471 1A90  
                         i2l3295 17D0                           i2l3527 2E46  
                         i2l4335 0FFE                           i2l4319 0F9E  
                         i2l4183 0AAA                           i2l4079 074E  
                         i2l3705 1D2A                           i2l3609 1B18  
                         i2l4417 1FC0                           i2l4409 1F5E  
                         i2l3465 1A86                           i2l3457 1A60  
                         i2l3393 1928                           i2l3385 1906  
                         i2l3369 18CE                           i2l3545 1DAC  
                         i2l4281 0EC6                           i2l4089 07BA  
                         i2l4097 0802                           i2l4505 1256  
                         i2l3707 1D2C                           i2l3635 1B7E  
                         i2l3627 1B66                           i2l3803 16AC  
                         i2l3731 148E                           i2l3395 192C  
                         i2l3563 1ED8                           i2l3555 1E6C  
                         i2l3491 297C                           i2l4179 0A9A  
                         i2l4355 22C6                           i2l4611 2DC8  
                         i2l3653 1BF6                           i2l3645 1BCE  
                         i2l3469 1A8E                           i2l3485 295C  
                         i2l4269 0E84                           i2l4189 0AD4  
                         i2l4197 0BCA                           i2l4373 2350  
                         i2l4365 231A                           i2l4437 282A  
                         i2l4533 13BC                           i2l4525 134E  
                         i2l4509 1280                           i2l3671 1C52  
                         i2l3823 172A                           i2l3727 147A  
                         i2l4391 1EFC                           i2l3903 2A44  
                         i2l3559 1EAA                           i2l3495 2994  
                         i2l4383 2392                           i2l4439 2838  
                         i2l4543 1402                           i2l5431 241C  
                         i2l3665 1C34                           i2l3593 1ADC  
                         i2l3745 14BA                           i2l3729 147E  
                         i2l4393 1F00                           i2l3489 296A  
                         i2l4297 0F12                           i2l4369 2332  
                         i2l4481 1128                           i2l4609 2DA2  
                         i2l3691 1CD0                           i2l3659 1C1C  
                         i2l3827 1748                           i2l3755 14EC  
                         i2l3747 14BE                           i2l3907 2A62  
                         i2l3923 2628                           i2l3915 25DE  
                         i2l3499 29C2                           i2l4299 0F1C  
                         i2l4387 23AA                           i2l4379 2376  
                         i2l4539 13F8                           i2l5443 2494  
                         i2l3589 1AD8                           i2l4661 2096  
                         i2l4813 2292                           i2l4805 224A  
                         i2l4477 10FC                           i2l4549 141A  
                         i2l3695 1CF4                           i2l3839 178A  
                         i2l4663 209C                           i2l4655 2078  
                         i2l4807 227C                           i2l3871 2AA0  
                         i2l3919 2612                           i2l4479 111A  
                         i2l4673 210C                           i2l4665 20A8  
                         i2l3873 2AA8                           i2l3865 2A8A  
                         i2l3929 2676                           i2l3937 30E2  
                         i2l4497 11FA                           i2l4833 2D66  
                         i2l3699 1D1E                           i2l4691 2158  
                         i2l4675 2118                           i2l4667 20CE  
                         i2l3891 2AE0                           i2l3883 2AC8  
                         i2l3859 2A7A                           i2l3963 27AE  
                         i2l3947 2764                           i2l3797 168E  
                         i2l3981 27EE                           i2l3973 27C6  
                         i2l4829 2D36                           i2l3887 2AD2  
                         i2l3975 27D2                           i2l3967 27BE  
                         i2l4793 21AE                           i2l3993 2F98  
                         i2l3899 2A10                           i2l4799 2212  
                         i2_Data 3098                 __end_of___xxtofl 216A  
                         _Hi_ISR 0008                           _Lo_ISR 0018  
                 __CFG_XINST$OFF 000000                     vfprintf@cfmt 00B8  
                         ___flge 25AA                           ___fleq 29DC  
            __size_of_UART_Write 000E                        ??___fladd 0009  
                         ___wmul 3178                           _ln2_hi 067D  
                      ??___fldiv 0030                        ??___awdiv 0005  
                         _ln2_lo 0679                        ??___flneg 0005  
                 __CFG_STVREN$ON 000000                        ??___awmod 01AB  
                      ??___flmul 0017                        ??___flsub 0030  
                      ??___fltol 0005                           _efgtoa 06C0  
                ADC_Read@channel 0041                           _lenStr 0120  
                         _floorf 1D34                           _memset 216A  
                ADC_Read@digital 004A                           clear_0 2BAC  
                         clear_1 2BB8                           clear_2 2BC4  
               ___awdiv@quotient 0007                  ___awmod@divisor 01A9  
                ___awmod@counter 01AB                           pad@buf 0013  
                         _strcpy 2E36                           _strlen 314E  
                     _SmokeCurve 0183                           fputc@c 0001  
            __size_ofi2_Send2Lcd 0066                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ??_isdigit 0003                __end_ofi2___awmod 2CBA  
                ___fpclassifyf@e 0009                        ?_ADC_Read 0041  
                ___fpclassifyf@u 000B                  ___fpclassifyf@x 0001  
                   __mediumconst 0000                        ??_isspace 0003  
                         tblptrh 000FF7                        ??_isupper 0003  
                         tblptrl 000FF6                           tblptru 000FF8  
                         stoa@cp 001A                           stoa@fp 000A  
                         putch@c 0001                 __end_of_vfprintf 2DE4  
                 i2___awmod@sign 0006                        ??_sprintf 007F  
                      ??_tolower 0009                        ??_strncmp 0007  
  __size_of_INTERRUPT_Initialize 0006                    _ADC_Read$2039 0046  
                     ___flge@ff1 0028                       ___flge@ff2 002C  
                ??___fpclassifyf 0005                 ?_TMR1_Initialize 0001  
                   ___xxtofl@arg 000B                     ___xxtofl@exp 000A  
              _SYSTEM_Initialize 319E                     ___xxtofl@val 0001  
                     ___fleq@ff1 0001                       ___fleq@ff2 0005  
                     __accesstop 0080          __end_of__initialization 2BCA  
                     ___flneg@f1 0001                        ?_LCD_init 0001  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
                     ___fltol@f1 0001                    __end_ofi2_Cmd 3122  
                 __pcstackCOMRAM 0001                     __pidataBANK0 31FE  
                   __pidataBANK1 3122                    __end_of_lg2_h 062D  
                  __end_of_lg2_l 0629              ??_SYSTEM_Initialize 01BA  
                  __end_of_ivln2 061D                    __end_of_fputc 2942  
                  __end_of_fputs 2FD8                    __end_of_two24 0669  
                  __end_of_putch 3240                       __end_of_L1 065D  
                     __end_of_L2 0659                       __end_of_L3 0655  
                     __end_of_L4 0651                       __end_of_L5 064D  
                     __end_of_L6 0649                       __end_of_P1 0645  
                     __end_of_P2 0641                       __end_of_P3 063D  
                     __end_of_P4 0639                       __end_of_P5 0635  
                     __end_of_bp 0689                       __end_of_cp 0621  
                        ??i2_Cmd 0003                       ??_ADC_Read 0045  
                  ??_MyusartRead 01AD                          ??_fputc 0005  
      __end_of_SYSTEM_Initialize 31BC                          ??_fputs 000E  
                        ??_putch 0001                       __pbssBANK0 00DB  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
                        ?i2_Data 0001                        ?_Send2Lcd 01B5  
                     ??_LCD_init 01B9                          ?_Hi_ISR 0001  
                        ?_Lo_ISR 0001                       _efgtoa$991 0088  
                     _efgtoa$985 0084                       _efgtoa$986 0086  
                     _efgtoa$995 008A                       _efgtoa$996 008C  
                     _efgtoa$997 008E             __size_of_buzzer_init 0002  
                        ?___flge 0028                          ?___fleq 0001  
                        ?___wmul 0001                          ?_efgtoa 0055  
                        ?_floorf 0041                          ?_memset 0001  
        __size_of_ADC_Initialize 0012                          ?_strcpy 0001  
                        ?_strlen 0001                          _GAS_LPG 00ED  
                      ?___xxtofl 0001                          _COCurve 018F  
                   ??_UART_Write 01A7               __size_of_vfpfcnvrt 0412  
            __end_of_MyusartRead 2F1C                     ??i2_Send2Lcd 0006  
                     ??_Send2Lcd 01B7                  __size_ofi2_Data 002E  
                __size_of_Hi_ISR 24CA                  __size_of_Lo_ISR 0040  
                        __Hparam 0000                          __Lparam 0000  
                __size_of___flge 00D0                  __size_of___fleq 008A  
                        ___fladd 17A0                          ___fldiv 1AAC  
                        ___awdiv 2A66                          ___flneg 30C6  
                        ___awmod 2BD8                          ___flmul 144E  
                        ___flsub 2F1C                          ___fltol 2746  
                __size_of___wmul 0026               __end_of_UART_Write 321A  
                      ?_vfprintf 0079                     __psmallconst 0600  
                __size_of_efgtoa 097C                  __size_of_floorf 01B6  
                        __pcinit 2B66                  __size_of_memset 0132  
                        __ramtop 0600                        Data@Value 01B2  
                        __ptext0 3230                          __ptext1 319E  
                        __ptext2 323C                          __ptext3 31BC  
                        __ptext4 31D8                          __ptext5 3228  
                        __ptext6 2AEA                          __ptext7 2CBA  
                        __ptext8 2FD8                          __ptext9 3008  
                      _GAS_SMOKE 00F7                  __size_of_strcpy 0052  
                __size_of_strlen 002A                        _T1CONbits 000FCD  
                   __size_of_Cmd 0030            _OSCILLATOR_Initialize 3228  
                   __size_of_pad 009A                          _isdigit 3068  
                        _ivln2_h 0689                          _ivln2_l 0615  
                     ??___xxtofl 0005                 ___awmod@dividend 01A7  
             __end_ofi2_Send2Lcd 2D8E         ??_PIN_MANAGER_Initialize 01B2  
                        _isspace 2F62                          _isupper 3038  
                        efgtoa@c 005B                          efgtoa@d 0098  
                        efgtoa@e 00B0                          efgtoa@f 0057  
                        efgtoa@g 00AC                          efgtoa@h 00A2  
                        efgtoa@i 00AA                          efgtoa@l 00A6  
                        efgtoa@m 0094                          efgtoa@n 00B2  
                        efgtoa@p 009C                          efgtoa@t 0090  
                        efgtoa@u 00B4                          efgtoa@w 009F  
                        atoi@neg 000E       __size_of_SYSTEM_Initialize 001E  
                        _sprintf 2DE4                          _tolower 2E88  
                        _strncmp 2800                   __pintcode_body 23C8  
                      _LCD_clear 321A             end_of_initialization 2BCA  
                        floorf@e 004F                          floorf@m 004B  
                        floorf@u 0051                          floorf@x 0041  
                        fputc@fp 0003                          memset@c 0003  
                        memset@k 0009                          memset@n 0005  
                        memset@s 000B                    __Lmediumconst 0000  
                        int_func 23C8                          fputs@fp 000C  
              __end_of_vfpfcnvrt 144E                       efgtoa@mode 00A1  
                     efgtoa@sign 009A                        _RCSTAbits 000FAB  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                       ??_vfprintf 007F  
                        strcpy@d 0009                          strlen@a 0003  
                        strcpy@s 0007                          strlen@s 0001  
                 UART_Write@data 01A7                      ___fladd@grs 0010  
                  ___xxtofl@sign 0009                        _TRISBbits 000F93  
                    _MyusartRead 2ED4                      ___fldiv@grs 003B  
                    ___fldiv@rem 0034                __size_of_ADC_Read 00D8  
                      i2___awmod 2C4A                       ?_LCD_clear 0001  
                    ___flmul@grs 001C                        _TXSTAbits 000FAC  
                 __end_ofi2_Data 30C6                   __end_of_Hi_ISR 24D2  
              __size_of_LCD_init 007C                   __end_of_Lo_ISR 0058  
   __end_of_INTERRUPT_Initialize 323C                   __end_of___flge 267A  
                 __end_of___fleq 2A66                      vfpfcnvrt@ap 0065  
                    vfpfcnvrt@cp 006B                      vfpfcnvrt@ct 0075  
                    vfpfcnvrt@fp 0061                   __end_of___wmul 319E  
                 __end_of_ln2_hi 0681                   __end_of_ln2_lo 067D  
                 __end_of_efgtoa 103C                   _ADC_Initialize 31EC  
                 __end_of_floorf 1EEA           ?_OSCILLATOR_Initialize 0001  
                     floorf@F524 00DB                   __end_of_memset 229C  
                 __end_of_strcpy 2E88                   __end_of_strlen 3178  
            start_initialization 2B66                      __end_of_Lg1 0679  
                    __end_of_Lg2 0675                      __end_of_Lg3 0671  
                    __end_of_Lg4 066D                      __end_of_Cmd 3038  
__size_of_PIN_MANAGER_Initialize 0014                      __end_of_lg2 0631  
                    __end_of_pad 29DC                      __end_of_ovt 0625  
                     ?i2___awmod 0001                         ??i2_Data 0003  
          __end_of___fpclassifyf 2746                 __CFG_OSC$INTIO67 000000  
                       ??_Hi_ISR 00CE                         ??_Lo_ISR 01AD  
              __size_of_Send2Lcd 006E         __size_of_TMR1_Initialize 001C  
                    vfprintf@fmt 007B                         ??___flge 0030  
                       ??___fleq 0009                         ??___wmul 0005  
                       ??_efgtoa 005C           __end_of_ADC_Initialize 31FE  
                    __pdataBANK0 00F1                      __pdataBANK1 017C  
                       ??_floorf 0045                 __CFG_LPT1OSC$OFF 000000  
                       ??_memset 0007                   ADC_Read@result 004C  
                     memset@dest 0001                         ??_strcpy 0005  
                       ??_strlen 0003                        ___fladd@a 0005  
                      ___fladd@b 0001                        ___fldiv@a 002C  
                      ___fldiv@b 0028                        ___flmul@a 0013  
                      ___flmul@b 000F                        ___flsub@a 002C  
                      ___flsub@b 0028                    __pcstackBANK0 0080  
                  __pcstackBANK1 01A7                __end_ofsqrtf@tiny 0615  
              __size_of___xxtofl 0140                      ??_LCD_clear 0004  
                      _atoi$1500 0012                        _atoi$1498 0010  
                      _atoi$1499 0014                    ??_buzzer_init 01B2  
         _PIN_MANAGER_Initialize 31D8                __CFG_CCP2MX$PORTC 000000  
                      __pintcode 0008                         ?___fladd 0001  
                       ?___fldiv 0028                         ?___awdiv 0001  
                       ?___flneg 0001                         ?___awmod 01A7  
                       ?___flmul 000F                         ?___flsub 0028  
                       ?___fltol 0001                  ?_ADC_Initialize 0001  
                    __pintcodelo 0018                __size_of_vfprintf 0056  
                      fabsf@F463 010C                      __smallconst 0600  
                       ?_isdigit 0001                   __size_ofi2_Cmd 002E  
                       _ADC_Read 24D2                         ?_isspace 0001  
                       ?_isupper 0001                         Cmd@Value 01B2  
                    ??i2___awmod 0005                         ?_sprintf 00BA  
                       ?_tolower 0007                   __size_of_fputc 00A0  
                 __size_of_fputs 0038                         ?_strncmp 0001  
                 __size_of_putch 0002             _INTERRUPT_Initialize 3236  
                 ___wmul@product 0005                         _LATBbits 000F8A  
                       _LATCbits 000F8B                         _LCD_init 2AEA  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                       i1u520_20 2C14                         i2u320_40 1A6C  
                       i2u312_40 19FC                         i2u402_40 2A5E  
                       i2u314_40 1A10                         i2u410_40 2782  
                       i2u410_45 2778                         i2u340_40 1D7A  
                       i2u332_45 2716                         i2u340_45 1D70  
                       i2u333_40 2734                         i2u341_40 1D9A  
                       i2u421_40 2C84                         i2u350_40 3090  
                       i2u414_40 27D8                         i2u334_40 2736  
                       i2u430_40 0792                         i2u510_40 1302  
                       i2u351_40 3092                         i2u335_40 2E7E  
                       i2u511_40 1304                         i2u503_40 1160  
                       i2u343_45 1DC4                         i2u343_46 1DCA  
                       i2u343_47 1DD8                         i2u335_47 2E74  
                       i2u328_40 26B8                         i2u280_40 28FA  
                       i2u504_40 1162                         i2u328_45 26AE  
                       i2u417_40 2F94                         i2u409_40 2752  
                       i2u345_40 1E2A                         i2u337_40 2EB0  
                       i2u441_40 09F2                         i2u433_40 0844  
                       i2u505_40 116E                         _PIR1bits 000F9E  
                       i2u345_45 1E20                         i2u338_40 2EB2  
                       i2u434_40 0846                         i2u426_40 0728  
                       i2u347_40 1E8A                         i2u283_40 3060  
                       i2u347_45 1E80                         i2u372_40 1CDE  
                       i2u284_40 3062                         i2u444_40 0A24  
                       i2u373_40 1D02                         i2u429_40 0790  
                       i2u382_40 14DA                         i2u294_40 1896  
                       i2u278_40 28B2                         i2u438_40 09B8  
                       i2u542_40 2D56                         i2u542_47 2D4C  
                       i2u391_40 1738                         i2u383_40 1650  
                       i2u295_40 18A6                         i2u471_40 0F88  
                       i2u543_40 2D86                         i2u383_45 1646  
                       _LPGCurve 019B                         i2u543_47 2D7C  
                       i2u368_40 1C82                         i2u392_40 1756  
                       i2u296_40 18A8                         i2u448_40 0A72  
                       i2u529_40 2122                         i2u473_40 0FE8  
                       i2u465_40 0EA8                         i2u481_40 2346  
                       i2u474_40 0FEA                         i2u650_47 30A2  
                       i2u387_40 16DC                         i2u299_40 18EA  
                       i2u651_47 30AC                         i2u484_40 23BE  
                       i2u476_41 22A6                         i2u652_47 30BA  
                       i2u397_40 2AAC                         i2u653_47 30FE  
                       i2u486_40 1F42                         i2u654_47 3108  
                       i2u655_47 3116                         i2u488_40 1FF0  
                       i2u496_40 287E                         i2u489_40 1FF2  
                       i2u649_47 2442                         _RCONbits 000FD0  
            __end_of_buzzer_init 323E                        _timer_val 00FD  
                      _vfpfcnvrt 103C                         _RL_VALUE 00FB  
              ??_TMR1_Initialize 01B2                       _ADCON0bits 000FC2  
              ___wmul@multiplier 0001                    i2Send2Lcd@Adr 0007  
                  i2Send2Lcd@Lcd 0004                     ?_MyusartRead 0001  
                   _isspace$1529 0007                       vfpfcnvrt@c 0078  
                     vfpfcnvrt@f 0071                        copy_data0 2B7A  
                      copy_data1 2B9A            ?_INTERRUPT_Initialize 0001  
             i2___awmod@dividend 0001                         _Send2Lcd 2CBA  
                       __Hrparam 0000                       vfprintf@ap 007D  
                       __Lrparam 0000                       vfprintf@fp 0079  
             __CFG_BOREN$SBORDIS 000000          ??_OSCILLATOR_Initialize 01B2  
               __size_of___fladd 030C                 __size_of___fldiv 0288  
               __size_of___awdiv 0084                 __size_of___flneg 002E  
               __size_of___awmod 0072                 __size_of___flmul 0352  
               __size_of___flsub 0046                 __size_of___fltol 00BA  
                     ?_vfpfcnvrt 0061                      i2Data@Value 0001  
             ___fpclassifyf@F463 00DF                       sprintf@fmt 00BC  
                       ___xxtofl 202A                 __size_of_isdigit 0030  
               __size_of_isspace 003E                         __ptext10 3236  
                       __ptext11 31EC                         __ptext20 2D8E  
                       __ptext21 103C                         __ptext13 2ED4  
                       __ptext30 314E                         __ptext22 2800  
                       __ptext14 2BD8                         __ptext31 2FA0  
                       __ptext23 229C                         __ptext15 320C  
                       __ptext40 25AA                         __ptext32 28A2  
                       __ptext24 06C0                         __ptext41 29DC  
                       __ptext33 323E                         __ptext25 2C4A  
                       __ptext17 2D28                         __ptext50 24D2  
                       __ptext42 2A66                         __ptext34 1D34  
                       __ptext26 2E88                         __ptext18 3098  
                       __ptext51 202A                         __ptext43 1EEA  
                       __ptext35 267A                         __ptext27 3038  
                       __ptext19 2DE4                         __ptext52 144E  
                       __ptext44 2F62                         __ptext36 2746  
                       __ptext28 2E36                         __ptext53 1AAC  
                       __ptext45 3068                         __ptext37 2F1C  
                       __ptext29 2942                         __ptext46 3178  
                       __ptext38 17A0                         __ptext47 216A  
                       __ptext39 30C6                         __ptext48 321A  
                       __ptext49 30F4                 __size_of_isupper 0030  
               __size_of_sprintf 0052                 __size_of_tolower 004C  
                     strcpy@dest 0001                 __size_of_strncmp 00A2  
                  __size_of_Data 0030                    __size_of_atoi 0140  
                  __size_of_main 0006                    __size_of_stoa 012C  
                    _buzzer_init 323C                         efgtoa@fp 0055  
                       efgtoa@ne 0096                         efgtoa@pp 0092  
                       efgtoa@ou 0080                        stoa@F1153 017C  
                       int$flags 007F                         _vfprintf 2D8E  
                       _mystring 0172                         logf@F469 0110  
              i2___awmod@divisor 0003                   _vfpfcnvrt$1022 006D  
                 _vfpfcnvrt$1026 006F                i2___awmod@counter 0005  
                     _INTCONbits 000FF2                         isdigit@c 0001  
         ??_INTERRUPT_Initialize 01B2                       i2Cmd@Value 0001  
                       intlevel1 0000                         intlevel2 0000  
                      sprintf@ap 00C6                        sqrtf@tiny 0611  
                       isspace@c 0001          ?_PIN_MANAGER_Initialize 0001  
                      strcpy@src 0003                         isupper@c 0001  
                      strncmp@_l 0001                        strncmp@_r 0003  
               ??_ADC_Initialize 01B2                      efgtoa@nmode 009E  
                    ??_vfpfcnvrt 0067                         stoa@nuls 000F  
                       sprintf@f 00C8                         tolower@c 0007  
                       sprintf@s 00BA           __size_of___fpclassifyf 00CC  
                       strncmp@l 0008                         strncmp@n 0005  
                       strncmp@r 000A                       _UART_Write 320C  
                  ___fladd@signs 000D             __size_of_MyusartRead 0048  
 __end_of_PIN_MANAGER_Initialize 31EC                     ___fladd@aexp 000E  
                   ___fladd@bexp 000F                       i2_Send2Lcd 2D28  
                _TMR1_Initialize 31BC  
